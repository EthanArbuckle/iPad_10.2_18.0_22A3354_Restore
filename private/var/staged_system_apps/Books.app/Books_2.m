uint64_t sub_100224740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_10004CFD4(&qword_1009D3700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1002247B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v10);
  v11 = *(int *)(a3 + 36);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_10004CFD4(&qword_1009D3700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_100224868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100224874);
}

uint64_t sub_100224874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D3700);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1002248F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100224900);
}

uint64_t sub_100224900(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D3700);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TipContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D3760;
  if (!qword_1009D3760)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TipContentView);
  return result;
}

void sub_1002249B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100713408;
  v4[1] = &unk_100713420;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_100713420;
  v4[4] = (char *)&value witness table for () + 64;
  sub_100224A50(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_100224A50(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D3770)
  {
    v2 = sub_100224AA8();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D3770);
  }
}

unint64_t sub_100224AA8()
{
  unint64_t result;

  result = qword_1009D3778;
  if (!qword_1009D3778)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1009D3778);
  }
  return result;
}

uint64_t sub_100224AEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008684E0, 1);
}

void sub_100224AFC()
{
  qword_100A1E390 = 0x403C000000000000;
}

uint64_t sub_100224B0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;

  v71 = a3;
  v72 = a4;
  v57 = a5;
  v65 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v65);
  v12 = (uint64_t *)((char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Image.Scale(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_10004CFD4(&qword_1009D3900);
  __chkstk_darwin(v73);
  v18 = (uint64_t *)((char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_10004CFD4(&qword_1009D3908);
  v20 = __chkstk_darwin(v19);
  v70 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v66 = (char *)&v56 - v23;
  v24 = __chkstk_darwin(v22);
  v67 = (uint64_t)&v56 - v25;
  v69 = static Color.clear.getter(v24);
  KeyPath = swift_getKeyPath(&unk_100713500);
  v68 = KeyPath;
  if (qword_1009CDCF0 != -1)
    KeyPath = swift_once(&qword_1009CDCF0, sub_100224AFC);
  v27 = qword_100A1E390;
  v28 = static Alignment.center.getter(KeyPath);
  _FrameLayout.init(width:height:alignment:)(&v75, v27, 0, v27, 0, v28, v29);
  v64 = v75;
  v63 = v76;
  v62 = v77;
  v61 = v78;
  v60 = v79;
  v59 = v80;
  v58 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  if (a1)
  {
    v30 = swift_getKeyPath(&unk_1007135C0);
    v31 = swift_getKeyPath(&unk_1007135E8);
    v32 = a1;
    static Published.subscript.getter(&v74, v32, v30, v31);

    swift_release(v30);
    swift_release(v31);
    v33 = v74;
    v34 = swift_getKeyPath(&unk_100713500);
    v35 = static Font.body.getter();
    v36 = Font.bold()();
    swift_release(v35);
    v37 = swift_getKeyPath(&unk_100713608);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for Image.Scale.medium(_:), v13);
    v38 = v13;
    v39 = swift_getKeyPath(&unk_100713638);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)v12 + *(int *)(v65 + 28), v16, v38);
    *v12 = v39;
    sub_10000B5E4((uint64_t)v12, (uint64_t)v18 + *(int *)(v73 + 36), &qword_1009D38F8);
    v40 = v58;
    *v18 = v58;
    v18[1] = v34;
    v18[2] = v33;
    v18[3] = v37;
    v18[4] = v36;
    swift_retain(v40);
    swift_retain(v34);
    swift_retain(v33);
    swift_retain(v37);
    swift_retain(v36);
    sub_100010960((uint64_t)v12, &qword_1009D38F8);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v38);
    swift_release(v36);
    swift_release(v37);
    swift_release(v33);
    swift_release(v34);
    swift_release(v40);
    v41 = sub_10022717C();
    v42 = (uint64_t)v66;
    View.accessibilityHidden(_:)(1, v73, v41);
    sub_100010960((uint64_t)v18, &qword_1009D3900);
    v43 = v67;
    sub_100025B3C(v42, v67, &qword_1009D3908);
    v44 = v70;
    sub_10000B5E4(v43, v70, &qword_1009D3908);
    v46 = v68;
    v45 = v69;
    v47 = v57;
    *v57 = v68;
    v47[1] = v45;
    v47[2] = v64;
    *((_BYTE *)v47 + 24) = v63;
    v47[4] = v62;
    *((_BYTE *)v47 + 40) = v61;
    v48 = v59;
    v47[6] = v60;
    v47[7] = v48;
    *((_WORD *)v47 + 32) = 256;
    *((_BYTE *)v47 + 66) = 0;
    v49 = sub_10004CFD4(&qword_1009D3940);
    sub_10000B5E4(v44, (uint64_t)v47 + *(int *)(v49 + 48), &qword_1009D3908);
    v50 = (char *)v47 + *(int *)(v49 + 64);
    *(double *)v50 = a6;
    *((double *)v50 + 1) = a7;
    v50[16] = 0;
    *((_QWORD *)v50 + 3) = 0;
    *((_QWORD *)v50 + 4) = 0;
    v51 = v72;
    *((_QWORD *)v50 + 5) = v71;
    *((_QWORD *)v50 + 6) = v51;
    *(_OWORD *)(v50 + 56) = 0u;
    *(_OWORD *)(v50 + 72) = 0u;
    *((_QWORD *)v50 + 11) = 0xBFF0000000000000;
    swift_retain(v46);
    swift_retain(v45);
    swift_retain_n(v51, 2);
    sub_100010960(v43, &qword_1009D3908);
    swift_bridgeObjectRelease_n(0, 2);
    swift_release(v51);
    sub_100010960(v44, &qword_1009D3908);
    swift_release(v45);
    return swift_release(v46);
  }
  else
  {
    v53 = type metadata accessor for ChromeStyle(0);
    v54 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, a2, v53, v54, v55);
    __break(1u);
  }
  return result;
}

uint64_t sub_100225080@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  if (qword_1009CE590 != -1)
    a1 = swift_once(&qword_1009CE590, sub_100478EE4);
  v8 = *(double *)&static REConstants.tapTargetSize;
  *a2 = static Alignment.center.getter(a1);
  a2[1] = v9;
  v10 = sub_10004CFD4(&qword_1009D38F0);
  return sub_100224B0C(v4, v5, v6, v7, (_QWORD *)((char *)a2 + *(int *)(v10 + 44)), v8, v8);
}

uint64_t sub_100225128@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t result;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[16];
  void **v64;

  v2 = v1;
  v62 = a1;
  v3 = type metadata accessor for TipContentView(0);
  v56 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v57 = v4;
  v58 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityActionKind(0);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  __chkstk_darwin(v5);
  v59 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlainButtonStyle(0);
  v51 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D37B8);
  v50 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D37C0);
  v52 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_10004CFD4(&qword_1009D37C8);
  __chkstk_darwin(v55);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009D37D0);
  __chkstk_darwin(v18);
  v54 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2[7];
  v21 = v2[8];
  v64 = v2;
  swift_retain(v21);
  v22 = sub_10004CFD4(&qword_1009D37D8);
  v23 = sub_100226A0C();
  v24 = Button.init(action:label:)(v20, v21, sub_1002269EC, v63, v22, v23);
  PlainButtonStyle.init()(v24);
  v25 = sub_100030B34(&qword_1009D3830, &qword_1009D37B8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v26 = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  View.buttonStyle<A>(_:)(v9, v10, v7, v25, v26);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v10);
  v27 = *v2;
  if (*v2)
  {
    v28 = type metadata accessor for ChromeStyle(0);
    v29 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v30 = v27;
    v31 = static ObservableObject.environmentStore.getter(v28, v29);
    v33 = v52;
    v32 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v17, v15, v53);
    v34 = v55;
    v35 = (uint64_t *)&v17[*(int *)(v55 + 36)];
    *v35 = v31;
    v35[1] = (uint64_t)v27;
    v36 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v32);
    v37 = v59;
    static AccessibilityActionKind.escape.getter(v36);
    v38 = v58;
    sub_10002CD84((uint64_t)v2, v58, type metadata accessor for TipContentView);
    v39 = *(unsigned __int8 *)(v56 + 80);
    v40 = (v39 + 16) & ~v39;
    v41 = swift_allocObject(&unk_1008F5160, v40 + v57, v39 | 7);
    sub_100226C40(v38, v41 + v40);
    v42 = sub_100226CC0();
    v43 = (uint64_t)v54;
    View.accessibilityAction(_:_:)(v37, sub_100226C84, v41, v34, v42);
    swift_release(v41);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v61);
    sub_100010960((uint64_t)v17, &qword_1009D37C8);
    return sub_100025B3C(v43, v62, &qword_1009D37D0);
  }
  else
  {
    v45 = v2[1];
    v46 = type metadata accessor for ChromeStyle(0);
    v47 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v45, v46, v47, v48);
    __break(1u);
  }
  return result;
}

uint64_t sub_100225570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _QWORD *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  __n128 v32;
  void *v33;
  uint64_t KeyPath;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[3];

  v2 = v1;
  v45 = a1;
  v3 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = &qword_1009D3810;
  v7 = sub_10004CFD4(&qword_1009D3810);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D3800);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D37F0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.top.getter(v14);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v17 = sub_10004CFD4(&qword_1009D3848);
  sub_100225918((_BYTE *)v1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  v18 = *(double *)(v1 + 32) + -40.0;
  type metadata accessor for TipContentView(0);
  v19 = sub_10004CFD4(&qword_1009D3700);
  v20 = ScaledMetric.wrappedValue.getter(v46, v19);
  v21 = *(double *)v46;
  if (*(double *)v46 >= v18)
    v21 = v18;
  v22 = v21;
  v23 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(v46, *(_QWORD *)&v22, 0, 0, 1, v23, v24);
  sub_10000B5E4((uint64_t)v9, (uint64_t)v12, &qword_1009D3810);
  v25 = &v12[*(int *)(v10 + 36)];
  v26 = v46[1];
  *(_OWORD *)v25 = v46[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v46[2];
  sub_100010960((uint64_t)v9, &qword_1009D3810);
  v27 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    v28 = type metadata accessor for ChromeStyle(0);
    v6 = (uint64_t *)sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v29 = v27;
    v30 = static ObservableObject.environmentStore.getter(v28, v6);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v16, &qword_1009D3800);
    v31 = (uint64_t *)&v16[*(int *)(v13 + 36)];
    *v31 = v30;
    v31[1] = (uint64_t)v27;
    sub_100010960((uint64_t)v12, &qword_1009D3800);
    v33 = *(void **)v2;
    if (*(_QWORD *)v2)
    {
      KeyPath = swift_getKeyPath(&unk_100713488);
      v35 = swift_getKeyPath(&unk_1007134B0);
      v36 = v33;
      static Published.subscript.getter(v5, v36, KeyPath, v35);

      swift_release(KeyPath);
      swift_release(v35);
      v37 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v5, 0, 1, v37);
      v38 = sub_10004CFD4(&qword_1009D37D8);
      v39 = v45;
      sub_10000B5E4((uint64_t)v5, v45 + *(int *)(v38 + 36), &qword_1009EFEC0);
      sub_10000B5E4((uint64_t)v16, v39, &qword_1009D37F0);
      sub_100010960((uint64_t)v5, &qword_1009EFEC0);
      return sub_100010960((uint64_t)v16, &qword_1009D37F0);
    }
  }
  else
  {
    v41 = *(_QWORD *)(v2 + 8);
    v28 = type metadata accessor for ChromeStyle(0);
    v42 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    EnvironmentObject.error()(0, v41, v28, v42, v43);
    __break(1u);
  }
  result = EnvironmentObject.error()(0, *(_QWORD *)(v2 + 8), v28, v6, v32);
  __break(1u);
  return result;
}

uint64_t sub_100225918@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  uint64_t KeyPath;
  uint64_t v56;
  id v57;
  _QWORD *v58;
  void (*v59)(_QWORD);
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t *v66;
  uint64_t v67;
  char v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void (*v100)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  void (*v105)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v106;
  _BYTE *v107;
  void (*v108)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v109;
  void (*v110)(_BYTE *, uint64_t);
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  _QWORD *v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  void (*v129)(_QWORD *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  uint64_t v141;
  int v142;
  int v143;
  int v144;
  _BYTE *v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int v154;
  unsigned int v155;
  uint64_t v156;
  int v157;
  int v158;
  double v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  _BYTE *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t result;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __n128 v183;
  _BYTE v184[12];
  unsigned int v185;
  void (*v186)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v187;
  _QWORD *v188;
  _BYTE *v189;
  uint64_t v190;
  _BYTE *v191;
  uint64_t v192;
  _BYTE *v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  _BYTE *v201;
  _BYTE *v202;
  uint64_t v203;
  _BYTE *v204;
  _BYTE *v205;
  _BYTE *v206;
  _BYTE *v207;
  _BYTE *v208;
  _BYTE *v209;
  uint64_t v210;
  _BYTE *v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  _BYTE *v216;
  _BYTE *v217;
  _BYTE *v218;
  uint64_t v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE *v223;
  _BYTE *v224;
  _QWORD *v225;
  _BYTE *v226;
  _BYTE *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  double v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;

  v210 = a2;
  v3 = sub_10004CFD4(&qword_1009D3850);
  v4 = __chkstk_darwin(v3);
  v211 = &v184[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v4);
  v208 = &v184[-v7];
  __chkstk_darwin(v6);
  v209 = &v184[-v8];
  v195 = sub_10004CFD4(&qword_1009D3858);
  v9 = __chkstk_darwin(v195);
  v199 = &v184[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v191 = &v184[-v11];
  v12 = type metadata accessor for DynamicTypeSize(0);
  v225 = *(_QWORD **)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v224 = &v184[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v223 = &v184[-v15];
  v197 = sub_10004CFD4(&qword_1009D1C80);
  v16 = __chkstk_darwin(v197);
  v187 = &v184[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v193 = &v184[-v18];
  v19 = type metadata accessor for Font.Leading(0);
  v221 = *(_QWORD *)(v19 - 8);
  v222 = v19;
  __chkstk_darwin(v19);
  v220 = &v184[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v198 = sub_10004CFD4(&qword_1009D3860);
  v196 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v194 = &v184[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v190 = sub_10004CFD4(&qword_1009D3868);
  __chkstk_darwin(v190);
  v201 = &v184[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v200 = sub_10004CFD4(&qword_1009D3870);
  __chkstk_darwin(v200);
  v204 = &v184[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v203 = sub_10004CFD4(&qword_1009D3878);
  v24 = __chkstk_darwin(v203);
  v207 = &v184[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = __chkstk_darwin(v24);
  v202 = &v184[-v27];
  __chkstk_darwin(v26);
  v206 = &v184[-v28];
  v29 = type metadata accessor for ColorScheme(0);
  v212 = *(_QWORD **)(v29 - 8);
  v30 = __chkstk_darwin(v29);
  v32 = &v184[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  v34 = &v184[-v33];
  v35 = type metadata accessor for TextFormatSizeLabel(0);
  __chkstk_darwin(v35);
  v37 = &v184[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v213 = sub_10004CFD4(&qword_1009D3880);
  __chkstk_darwin(v213);
  v215 = &v184[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v214 = sub_10004CFD4(&qword_1009D3888);
  __chkstk_darwin(v214);
  v217 = &v184[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v219 = sub_10004CFD4(&qword_1009D3890);
  __chkstk_darwin(v219);
  v218 = &v184[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_10004CFD4(&qword_1009D3898);
  v42 = __chkstk_darwin(v41);
  v205 = &v184[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = __chkstk_darwin(v42);
  v216 = &v184[-v45];
  v46 = __chkstk_darwin(v44);
  v227 = &v184[-v47];
  v48 = static Font.title2.getter(v46);
  ((void (*)(void))static Font.Weight.semibold.getter)();
  v49 = Font.weight(_:)(v48);
  swift_release(v48);
  v50 = *((_QWORD *)a1 + 2);
  v51 = *((_QWORD *)a1 + 3);
  *v37 = swift_getKeyPath(&unk_1007134D0);
  v52 = sub_10004CFD4(&qword_1009D38A0);
  swift_storeEnumTagMultiPayload(v37, v52, 0);
  *(_QWORD *)((char *)v37 + *(int *)(v35 + 20)) = v49;
  v53 = (_QWORD *)((char *)v37 + *(int *)(v35 + 24));
  *v53 = v50;
  v53[1] = v51;
  v226 = a1;
  v54 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_22;
  KeyPath = swift_getKeyPath(&unk_100713488);
  v56 = swift_getKeyPath(&unk_1007134B0);
  swift_bridgeObjectRetain(v51);
  v57 = v54;
  static Published.subscript.getter(v34, v57, KeyPath, v56);
  swift_release(KeyPath);
  swift_release(v56);
  v58 = v212;
  v59 = (void (*)(_QWORD))v212[13];
  v185 = enum case for ColorScheme.light(_:);
  v186 = (void (*)(_BYTE *, _QWORD, uint64_t))v59;
  v59(v32);
  LOBYTE(KeyPath) = static ColorScheme.== infix(_:_:)(v34, v32);
  v60 = (_QWORD *)v58[1];
  ((void (*)(_BYTE *, uint64_t))v60)(v32, v29);
  v212 = v60;
  ((void (*)(_QWORD *, uint64_t))v60)(v34, v29);
  v192 = v29;
  v189 = v32;
  v188 = v34;
  if ((KeyPath & 1) != 0)
    v61 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  else
    v61 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v62 = v61;
  v63 = v226;

  v64 = swift_getKeyPath(&unk_100713500);
  v65 = v215;
  sub_10002CD84((uint64_t)v37, (uint64_t)v215, type metadata accessor for TextFormatSizeLabel);
  v66 = (uint64_t *)&v65[*(int *)(v213 + 36)];
  *v66 = v64;
  v66[1] = v62;
  v67 = sub_100226DDC((uint64_t)v37);
  v68 = static Edge.Set.horizontal.getter(v67);
  v69 = v217;
  sub_10000B5E4((uint64_t)v65, (uint64_t)v217, &qword_1009D3880);
  v70 = &v69[*(int *)(v214 + 36)];
  *v70 = v68;
  *(_OWORD *)(v70 + 8) = 0u;
  *(_OWORD *)(v70 + 24) = 0u;
  v70[40] = 1;
  v71 = sub_100010960((uint64_t)v65, &qword_1009D3880);
  v72 = static Alignment.center.getter(v71);
  v73 = v218;
  sub_1005F1A80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v218, 0.0, 1, INFINITY, 0, v72, v74);
  sub_100010960((uint64_t)v69, &qword_1009D3888);
  v75 = sub_1001F5558(&qword_1009D38A8, &qword_1009D3890, (void (*)(void))sub_100226E18);
  v76 = (uint64_t)v216;
  View.accessibilityHidden(_:)(1, v219, v75);
  sub_100010960((uint64_t)v73, &qword_1009D3890);
  sub_100025B3C(v76, (uint64_t)v227, &qword_1009D3898);
  v77 = *((_QWORD *)v63 + 6);
  v228 = *((_QWORD *)v63 + 5);
  v229 = v77;
  v78 = sub_1001F2108();
  v79 = swift_bridgeObjectRetain(v77);
  v80 = Text.init<A>(_:)(&v228, &type metadata for String, v78, v79);
  v82 = v81;
  v84 = v83;
  v86 = v85 & 1;
  v87 = static Font.subheadline.getter();
  v89 = v220;
  v88 = v221;
  v90 = v222;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v221 + 104))(v220, enum case for Font.Leading.tight(_:), v222);
  v91 = Font.leading(_:)(v89, v87);
  swift_release(v87);
  v92 = (*(uint64_t (**)(_BYTE *, uint64_t))(v88 + 8))(v89, v90);
  static Font.Weight.semibold.getter(v92);
  v93 = Font.weight(_:)(v91);
  swift_release(v91);
  v51 = Text.font(_:)(v93, v80, v82, v86, v84);
  v95 = v94;
  LOBYTE(v88) = v96;
  v98 = v97;
  swift_release(v93);
  sub_1001F5B28(v80, v82, v86);
  swift_bridgeObjectRelease(v84);
  v228 = v51;
  v229 = v95;
  LOBYTE(v230) = v88 & 1;
  v231 = v98;
  v99 = v225;
  v100 = (void (*)(_BYTE *, _QWORD, uint64_t))v225[13];
  a1 = v223;
  v100(v223, enum case for DynamicTypeSize.xSmall(_:), v12);
  v101 = v224;
  v100(v224, enum case for DynamicTypeSize.xxxLarge(_:), v12);
  sub_100008DB0((unint64_t *)&qword_1009D38C0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(a1, v101, v12) & 1) == 0)
  {
    __break(1u);
LABEL_22:
    v176 = *((_QWORD *)v226 + 1);
    v177 = type metadata accessor for ChromeStyle(0);
    v178 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v179 = swift_bridgeObjectRetain(v51);
    EnvironmentObject.error()(0, v176, v177, v178, v179);
    __break(1u);
    goto LABEL_23;
  }
  v102 = v195;
  v103 = v191;
  v104 = &v191[*(int *)(v195 + 48)];
  v105 = (void (*)(_BYTE *, _BYTE *, uint64_t))v99[4];
  v105(v191, a1, v12);
  v105(v104, v101, v12);
  v106 = v199;
  v107 = &v199[*(int *)(v102 + 48)];
  v108 = (void (*)(_BYTE *, _BYTE *, uint64_t))v99[2];
  v108(v199, v103, v12);
  v108(v107, v104, v12);
  v109 = (uint64_t)v187;
  v105(v187, v106, v12);
  v110 = (void (*)(_BYTE *, uint64_t))v99[1];
  v110(v107, v12);
  v111 = &v106[*(int *)(v102 + 48)];
  v105(v106, v103, v12);
  v105(v111, v104, v12);
  v112 = v197;
  v105((_BYTE *)(v109 + *(int *)(v197 + 36)), v111, v12);
  v110(v106, v12);
  v113 = v193;
  sub_100025B3C(v109, (uint64_t)v193, &qword_1009D1C80);
  v114 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  v115 = v194;
  View.dynamicTypeSize<A>(_:)(v113, &type metadata for Text, v112, &protocol witness table for Text, v114);
  sub_100010960((uint64_t)v113, &qword_1009D1C80);
  sub_1001F5B28(v228, v229, v230);
  swift_bridgeObjectRelease(v231);
  v116 = swift_getKeyPath(&unk_100713530);
  v117 = v196;
  v118 = (uint64_t)v201;
  v119 = v198;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v196 + 16))(v201, v115, v198);
  v120 = v118 + *(int *)(v190 + 36);
  *(_QWORD *)v120 = v116;
  *(_QWORD *)(v120 + 8) = 0;
  *(_BYTE *)(v120 + 16) = 1;
  (*(void (**)(_BYTE *, uint64_t))(v117 + 8))(v115, v119);
  a1 = v226;
  v121 = *(void **)v226;
  if (!*(_QWORD *)v226)
  {
LABEL_23:
    v180 = *((_QWORD *)a1 + 1);
    v181 = type metadata accessor for ChromeStyle(0);
    v182 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v180, v181, v182, v183);
    __break(1u);
    return result;
  }
  v122 = swift_getKeyPath(&unk_100713488);
  v123 = swift_getKeyPath(&unk_1007134B0);
  v124 = v121;
  v125 = v188;
  static Published.subscript.getter(v188, v124, v122, v123);
  swift_release(v122);
  swift_release(v123);
  v126 = v189;
  v127 = v192;
  v186(v189, v185, v192);
  LOBYTE(v122) = static ColorScheme.== infix(_:_:)(v125, v126);
  v128 = v126;
  v129 = (void (*)(_QWORD *, uint64_t))v212;
  ((void (*)(_BYTE *, uint64_t))v212)(v128, v127);
  v129(v125, v127);
  v130 = (uint64_t)v206;
  v131 = (uint64_t)v204;
  if ((v122 & 1) != 0)
    v132 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  else
    v132 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v133 = v132;

  v134 = swift_getKeyPath(&unk_100713500);
  sub_10000B5E4(v118, v131, &qword_1009D3868);
  v135 = (uint64_t *)(v131 + *(int *)(v200 + 36));
  *v135 = v134;
  v135[1] = v133;
  v136 = sub_100010960(v118, &qword_1009D3868);
  v137 = static Edge.Set.top.getter(v136);
  v138 = v137;
  v139 = static Edge.Set.bottom.getter(v137);
  v140 = static Edge.Set.trailing.getter();
  v141 = Edge.Set.init(rawValue:)(0);
  v142 = Edge.Set.init(rawValue:)(v141);
  if (Edge.Set.init(rawValue:)(v142 & v138) != v138)
    v141 = Edge.Set.init(rawValue:)(v141 | v138);
  v143 = Edge.Set.init(rawValue:)(v141);
  if (Edge.Set.init(rawValue:)(v143 & v139) != v139)
    v141 = Edge.Set.init(rawValue:)(v141 | v139);
  v144 = Edge.Set.init(rawValue:)(v141);
  if (Edge.Set.init(rawValue:)(v144 & v140) != v140)
    LOBYTE(v141) = Edge.Set.init(rawValue:)(v141 | v140);
  v145 = v202;
  sub_10000B5E4(v131, (uint64_t)v202, &qword_1009D3870);
  v146 = &v145[*(int *)(v203 + 36)];
  *v146 = v141;
  *(_OWORD *)(v146 + 8) = 0u;
  *(_OWORD *)(v146 + 24) = 0u;
  v146[40] = 1;
  sub_100010960(v131, &qword_1009D3870);
  sub_100025B3C((uint64_t)v145, v130, &qword_1009D3878);
  v148 = *((_QWORD *)a1 + 7);
  v147 = *((_QWORD *)a1 + 8);
  v149 = type metadata accessor for ChromeStyle(0);
  v150 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_retain(v147);
  v151 = (void *)EnvironmentObject.init()(v149, v150);
  v153 = v152;
  v154 = static Edge.Set.top.getter(v151);
  v155 = static Edge.Set.trailing.getter();
  v156 = Edge.Set.init(rawValue:)(0);
  v157 = Edge.Set.init(rawValue:)(v156);
  if (Edge.Set.init(rawValue:)(v157 & v154) != v154)
    v156 = Edge.Set.init(rawValue:)(v156 | v154);
  v158 = Edge.Set.init(rawValue:)(v156);
  if (Edge.Set.init(rawValue:)(v158 & v155) != v155)
    LOBYTE(v156) = Edge.Set.init(rawValue:)(v156 | v155);
  v159 = EdgeInsets.init(_all:)(8.0);
  v228 = (uint64_t)v151;
  v229 = v153;
  v230 = v148;
  v231 = v147;
  v232 = v156;
  v233 = v159;
  v234 = v160;
  v235 = v161;
  v236 = v162;
  v237 = 0;
  v163 = sub_10004CFD4(&qword_1009D38C8);
  v164 = sub_1001F5558(&qword_1009D38D0, &qword_1009D38C8, (void (*)(void))sub_100226EE0);
  v165 = (uint64_t)v208;
  View.accessibilityHidden(_:)(1, v163, v164);
  swift_release(v147);

  v166 = v209;
  sub_100025B3C(v165, (uint64_t)v209, &qword_1009D3850);
  v167 = v227;
  v168 = v205;
  sub_10000B5E4((uint64_t)v227, (uint64_t)v205, &qword_1009D3898);
  v169 = v130;
  v170 = v130;
  v171 = v207;
  sub_10000B5E4(v169, (uint64_t)v207, &qword_1009D3878);
  v172 = v211;
  sub_10000B5E4((uint64_t)v166, (uint64_t)v211, &qword_1009D3850);
  v173 = v210;
  sub_10000B5E4((uint64_t)v168, v210, &qword_1009D3898);
  v174 = sub_10004CFD4(&qword_1009D38E0);
  sub_10000B5E4((uint64_t)v171, v173 + *(int *)(v174 + 48), &qword_1009D3878);
  sub_10000B5E4((uint64_t)v172, v173 + *(int *)(v174 + 64), &qword_1009D3850);
  sub_100010960((uint64_t)v166, &qword_1009D3850);
  sub_100010960(v170, &qword_1009D3878);
  sub_100010960((uint64_t)v167, &qword_1009D3898);
  sub_100010960((uint64_t)v172, &qword_1009D3850);
  sub_100010960((uint64_t)v171, &qword_1009D3878);
  return sub_100010960((uint64_t)v168, &qword_1009D3898);
}

uint64_t sub_1002269EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100225570(a1);
}

unint64_t sub_100226A0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D37E0;
  if (!qword_1009D37E0)
  {
    v1 = sub_100030B74(&qword_1009D37D8);
    sub_100226A90();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D37E0);
  }
  return result;
}

unint64_t sub_100226A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D37E8;
  if (!qword_1009D37E8)
  {
    v1 = sub_100030B74(&qword_1009D37F0);
    sub_100226B14();
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D37E8);
  }
  return result;
}

unint64_t sub_100226B14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D37F8;
  if (!qword_1009D37F8)
  {
    v1 = sub_100030B74(&qword_1009D3800);
    sub_100030B34(&qword_1009D3808, &qword_1009D3810, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D37F8);
  }
  return result;
}

uint64_t sub_100226B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for TipContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (_QWORD *)(v0 + v4);

  swift_bridgeObjectRelease(v7[3]);
  swift_bridgeObjectRelease(v7[6]);
  swift_release(v7[8]);
  v8 = (char *)v7 + *(int *)(v1 + 36);
  v9 = sub_10004CFD4(&qword_1009D3700);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100226C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TipContentView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100226C84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TipContentView(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 56))();
}

unint64_t sub_100226CC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D3840;
  if (!qword_1009D3840)
  {
    v1 = sub_100030B74(&qword_1009D37C8);
    v2[0] = sub_100030B74(&qword_1009D37B8);
    v2[1] = type metadata accessor for PlainButtonStyle(255);
    v2[2] = sub_100030B34(&qword_1009D3830, &qword_1009D37B8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3840);
  }
  return result;
}

uint64_t sub_100226DDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TextFormatSizeLabel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100226E18()
{
  return sub_1001F5558(&qword_1009D38B0, &qword_1009D3888, (void (*)(void))sub_100226E3C);
}

unint64_t sub_100226E3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D38B8;
  if (!qword_1009D38B8)
  {
    v1 = sub_100030B74(&qword_1009D3880);
    sub_100008DB0(&qword_1009D8890, type metadata accessor for TextFormatSizeLabel, (uint64_t)&unk_100716AD0);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D38B8);
  }
  return result;
}

unint64_t sub_100226EE0()
{
  unint64_t result;

  result = qword_1009D38D8;
  if (!qword_1009D38D8)
  {
    result = swift_getWitnessTable(&unk_100713570, &type metadata for TipCloseButton);
    atomic_store(result, (unint64_t *)&qword_1009D38D8);
  }
  return result;
}

uint64_t destroy for TipCloseButton(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for TipCloseButton(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for TipCloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for TipCloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipCloseButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipCloseButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TipCloseButton()
{
  return &type metadata for TipCloseButton;
}

unint64_t sub_1002270D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D38E8;
  if (!qword_1009D38E8)
  {
    v1 = sub_100030B74(&qword_1009D37D0);
    sub_100226CC0();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D38E8);
  }
  return result;
}

uint64_t sub_100227154(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100868508, 1);
}

unint64_t sub_10022717C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3910;
  if (!qword_1009D3910)
  {
    v1 = sub_100030B74(&qword_1009D3900);
    sub_100227200();
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3910);
  }
  return result;
}

unint64_t sub_100227200()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3918;
  if (!qword_1009D3918)
  {
    v1 = sub_100030B74(&qword_1009D3920);
    sub_100227284();
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3918);
  }
  return result;
}

unint64_t sub_100227284()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3928;
  if (!qword_1009D3928)
  {
    v1 = sub_100030B74(&qword_1009D3930);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3928);
  }
  return result;
}

uint64_t sub_100227308()
{
  return sub_100030B34(&qword_1009D3948, &qword_1009D3950, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

uint64_t sub_100227334()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1E398);
  sub_100048F64(v0, (uint64_t)qword_100A1E398);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000013, 0x8000000100713690);
}

uint64_t sub_1002273B0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  double *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  _BYTE v38[24];
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v9 = (_QWORD *)(v4 + 16);
  swift_beginAccess(v4 + 16, v38, 0, 0);
  v10 = *(_QWORD *)(v4 + 16);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
    goto LABEL_6;
  v12 = *(double *)(v10 + 32);
  v13 = *(double *)(v10 + 40);
  v14 = *(double *)(v10 + 48);
  v15 = *(double *)(v10 + 56);
  swift_bridgeObjectRetain(v10);
  v39.origin.x = v12;
  v39.origin.y = v13;
  v39.size.width = v14;
  v39.size.height = v15;
  v40.origin.x = a1;
  v40.origin.y = a2;
  v40.size.width = a3;
  v40.size.height = a4;
  if (CGRectEqualToRect(v39, v40))
    return swift_bridgeObjectRelease(v10);
  if (v11 == 1)
    goto LABEL_5;
  v41.origin.x = a1;
  v41.origin.y = a2;
  v41.size.width = a3;
  v41.size.height = a4;
  result = CGRectEqualToRect(*(CGRect *)(v10 + 64), v41);
  if ((result & 1) != 0)
    return swift_bridgeObjectRelease(v10);
  if (v11 == 2)
  {
LABEL_5:
    swift_bridgeObjectRelease(v10);
LABEL_6:
    if (qword_1009CDCF8 != -1)
      swift_once(&qword_1009CDCF8, sub_100227334);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_100A1E398);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.info.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      *(_DWORD *)v21 = 136315138;
      v37 = v22;
      v35 = *(_QWORD *)&a1;
      *(CGFloat *)v36 = a2;
      *(CGFloat *)&v36[1] = a3;
      *(CGFloat *)&v36[2] = a4;
      type metadata accessor for CGRect(0);
      v24 = String.init<A>(describing:)(&v35, v23);
      v26 = v25;
      v35 = sub_100040F58(v24, v25, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "adding disallowed rect for close gesture: %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }

    swift_beginAccess(v9, &v35, 33, 0);
    v27 = (_QWORD *)*v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    *v9 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = sub_1005B06B8(0, v27[2] + 1, 1, v27);
      *v9 = v27;
    }
    v30 = v27[2];
    v29 = v27[3];
    if (v30 >= v29 >> 1)
    {
      v27 = sub_1005B06B8((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
      *v9 = v27;
    }
    v27[2] = v30 + 1;
    v31 = (double *)&v27[4 * v30];
    v31[4] = a1;
    v31[5] = a2;
    v31[6] = a3;
    v31[7] = a4;
    return swift_endAccess(&v35);
  }
  v32 = v10 + 120;
  v33 = 2;
  while (1)
  {
    v34 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    v42.origin.x = a1;
    v42.origin.y = a2;
    v42.size.width = a3;
    v42.size.height = a4;
    result = CGRectEqualToRect(*(CGRect *)(v32 - 24), v42);
    if ((result & 1) != 0)
      return swift_bridgeObjectRelease(v10);
    v32 += 32;
    ++v33;
    if (v34 == v11)
      goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1002276E8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  uint64_t v39;
  _BYTE v40[24];

  v9 = v4 + 16;
  swift_beginAccess(v4 + 16, v40, 0, 0);
  v10 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain(v10);
  v12 = sub_1004EF4AC(v11, a1, a2, a3, a4);
  v14 = v13;
  swift_bridgeObjectRelease(v10);
  if ((v14 & 1) != 0)
  {
    if (qword_1009CDCF8 != -1)
      swift_once(&qword_1009CDCF8, sub_100227334);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100048F64(v25, (uint64_t)qword_100A1E398);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      *(_DWORD *)v29 = 136315138;
      v39 = v30;
      v35 = *(_QWORD *)&a1;
      v36 = a2;
      v37 = a3;
      v38 = a4;
      type metadata accessor for CGRect(0);
      v32 = String.init<A>(describing:)(&v35, v31);
      v34 = v33;
      v35 = sub_100040F58(v32, v33, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v29 + 4, v29 + 12);
      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Rect was not disallowed for close gesture, cannot now allow it.  ignored removal: %s", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  else
  {
    if (qword_1009CDCF8 != -1)
      swift_once(&qword_1009CDCF8, sub_100227334);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048F64(v15, (uint64_t)qword_100A1E398);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.info.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      *(_DWORD *)v19 = 136315138;
      v39 = v20;
      v35 = *(_QWORD *)&a1;
      v36 = a2;
      v37 = a3;
      v38 = a4;
      type metadata accessor for CGRect(0);
      v22 = String.init<A>(describing:)(&v35, v21);
      v24 = v23;
      v35 = sub_100040F58(v22, v23, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "removing disallowed rect for close gesture: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    swift_beginAccess(v9, &v35, 33, 0);
    sub_10041D91C(v12);
    swift_endAccess(&v35);
  }
}

uint64_t sub_100227A44()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CloseGestureManager()
{
  return objc_opt_self(_TtC5Books19CloseGestureManager);
}

uint64_t sub_100227A88@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v2, a1);
  *a2 = result;
  return result;
}

_QWORD *sub_100227AB0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t Strong;
  _UNKNOWN **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjCClassFromMetadata;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(_QWORD, _QWORD, _QWORD);
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void (*v102)(char *, unint64_t);
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  id v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  int64_t v110;
  int64_t v111;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v113;
  _QWORD *v114;
  unint64_t v115;
  int64_t v116;
  _QWORD *v117;
  void (*v119)(char *, char *, uint64_t);
  id v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  char *v129;
  uint64_t v130;
  void (*v131)(_QWORD, _QWORD, _QWORD);
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD v142[4];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3ED8);
  v130 = *(_QWORD *)(v2 - 8);
  v131 = (void (*)(_QWORD, _QWORD, _QWORD))v2;
  __chkstk_darwin(v2);
  v129 = (char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for Locale(0);
  v134 = *(_QWORD *)(v138 - 8);
  v4 = __chkstk_darwin(v138);
  v136 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v133 = (char *)&v119 - v6;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v139 = v7;
  v140 = v8;
  v9 = __chkstk_darwin(v7);
  v135 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v137 = (char *)&v119 - v11;
  v12 = (int *)type metadata accessor for REActionMenuView(0);
  v13 = *sub_10003F198((_QWORD *)((char *)v0 + v12[20]), *(_QWORD *)((char *)v0 + v12[20] + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v13 + 72);
  v15 = BCMutableCloudSyncVersions_ptr;
  v132 = v1;
  if (!Strong)
    goto LABEL_6;
  v16 = Strong;
  v17 = *(_QWORD *)(v13 + 80);
  ObjectType = swift_getObjectType();
  v19 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v17);
  v21 = v20;
  v22 = swift_getObjectType();
  v23 = dispatch thunk of BookContentLayoutProviding.layout.getter(v22, v21);
  swift_unknownObjectRelease(v19);
  swift_unknownObjectRelease(v16);
  if (v23 == 2)
  {
    v24 = sub_1002FC104();
    v126 = v25;
    v26 = (_QWORD *)((char *)v1 + v12[25]);
    v127 = *v26;
    v128 = (void (*)(char *, char *, uint64_t))v24;
    v124 = v26[1];
    swift_bridgeObjectRetain(v124);
    v27 = v137;
    v28 = String.LocalizationValue.init(stringLiteral:)(0x73746E65746E6F43, 0xE800000000000000);
    v29 = v133;
    static Locale.current.getter(v28);
    v30 = v140;
    v123 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
    v31 = v135;
    v32 = v139;
    v123(v135, v27, v139);
    v33 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v33);
    v121 = ObjCClassFromMetadata;
    v120 = (id)objc_opt_self(NSBundle);
    v35 = objc_msgSend(v120, "bundleForClass:", ObjCClassFromMetadata);
    v36 = v134;
    v119 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
    v37 = v136;
    v38 = v138;
    v119(v136, v29, v138);
    v125 = String.init(localized:table:bundle:locale:comment:)(v31, 0, 0, v35, v37, "Accessibility string for a button that shows the table of contents", 66, 2);
    v122 = v39;
    v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    v40(v29, v38);
    v41 = *(void (**)(char *, uint64_t))(v30 + 8);
    v41(v27, v32);
    v42 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x80000001007B8890);
    static Locale.current.getter(v42);
    v123(v31, v27, v32);
    v43 = objc_msgSend(v120, "bundleForClass:", v121);
    v119(v37, v29, v38);
    v44 = String.init(localized:table:bundle:locale:comment:)(v31, 0, 0, v43, v37, "Accessibility hint for a table of contents button", 49, 2);
    v46 = v45;
    v47 = v29;
    v48 = v126;
    v40(v47, v38);
    v49 = v124;
    v41(v27, v32);
    v50 = v122;
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(0xE800000000000000);
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v46);
    v51 = sub_1005B07C4(0, 1, 1, _swiftEmptyArrayStorage);
    v53 = v51[2];
    v52 = v51[3];
    if (v53 >= v52 >> 1)
      v51 = sub_1005B07C4((_QWORD *)(v52 > 1), v53 + 1, 1, v51);
    v51[2] = v53 + 1;
    v54 = &v51[13 * v53];
    v54[4] = v128;
    v54[5] = v48;
    *((_BYTE *)v54 + 48) = 0;
    v54[7] = v127;
    v54[8] = v49;
    v54[9] = sub_1002286BC;
    v54[10] = 0;
    v54[11] = 0x73746E65746E6F43;
    v55 = v125;
    v54[12] = 0xE800000000000000;
    v54[13] = v55;
    v54[14] = v50;
    v54[15] = v44;
    v54[16] = v46;
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(0xE800000000000000);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v48);
    v15 = BCMutableCloudSyncVersions_ptr;
    v1 = v132;
  }
  else
  {
LABEL_6:
    v51 = _swiftEmptyArrayStorage;
  }
  v56 = v12[16];
  v57 = *(_QWORD *)((char *)v1 + v56);
  KeyPath = swift_getKeyPath(&unk_100713B18);
  v142[0] = v57;
  v59 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v142, KeyPath, v59);
  swift_release(KeyPath);
  if (*(_QWORD *)(v57 + 136))
  {
    v60 = v137;
    v61 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007B8790);
    v62 = v133;
    static Locale.current.getter(v61);
    v63 = v139;
    v64 = v135;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v135, v60, v139);
    v65 = type metadata accessor for BundleFinder();
    v66 = swift_getObjCClassFromMetadata(v65);
    v67 = objc_msgSend((id)objc_opt_self(v15[300]), "bundleForClass:", v66);
    v127 = v59;
    v68 = v134;
    v69 = v51;
    v70 = v56;
    v71 = v136;
    v72 = v138;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v136, v62, v138);
    v73 = v71;
    v74 = v69;
    v128 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v64, 0, 0, v67, v73, "Action menu bookmarks & highlights button", 41, 2);
    v76 = v75;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v72);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v60, v63);
    v77 = *(_QWORD *)((char *)v132 + v70);
    v78 = swift_getKeyPath(&unk_100713B18);
    v142[0] = v77;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v142, v78, v127);
    v79 = swift_release(v78);
    v141 = *(_QWORD *)(v77 + 136);
    static Locale.autoupdatingCurrent.getter(v79);
    v80 = sub_1002349C4();
    v81 = v129;
    IntegerFormatStyle.init(locale:)(v62, &type metadata for Int, v80);
    v82 = sub_100030B34(&qword_1009D3EE8, &qword_1009D3ED8, (uint64_t)&protocol conformance descriptor for IntegerFormatStyle<A>);
    v83 = v131;
    BinaryInteger.formatted<A>(_:)(v142, v81, &type metadata for Int, v131, v80, v82);
    (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v130 + 8))(v81, v83);
    v85 = v142[0];
    v84 = v142[1];
    swift_bridgeObjectRetain(v76);
    swift_bridgeObjectRetain(v84);
    swift_bridgeObjectRetain(0xEB00000000736E6FLL);
    if ((swift_isUniquelyReferenced_nonNull_native(v74) & 1) == 0)
      v74 = sub_1005B07C4(0, v74[2] + 1, 1, v74);
    v87 = v74[2];
    v86 = v74[3];
    if (v87 >= v86 >> 1)
      v74 = sub_1005B07C4((_QWORD *)(v86 > 1), v87 + 1, 1, v74);
    v132 = v74;
    v74[2] = v87 + 1;
    v88 = &v74[13 * v87];
    v88[4] = v128;
    v88[5] = v76;
    *((_BYTE *)v88 + 48) = 1;
    v88[7] = v85;
    v88[8] = v84;
    v88[9] = sub_1002286F0;
    v88[10] = 0;
    v88[11] = 0x697461746F6E6E41;
    v88[12] = 0xEB00000000736E6FLL;
    *(_OWORD *)(v88 + 13) = 0u;
    *(_OWORD *)(v88 + 15) = 0u;
    swift_bridgeObjectRelease_n(0, 2);
    swift_bridgeObjectRelease(0xEB00000000736E6FLL);
    swift_bridgeObjectRelease(v84);
    swift_bridgeObjectRelease(v76);
  }
  else
  {
    v132 = v51;
  }
  v89 = v137;
  v90 = String.LocalizationValue.init(stringLiteral:)(0x4220686372616553, 0xEB000000006B6F6FLL);
  v91 = v133;
  static Locale.current.getter(v90);
  v93 = v139;
  v92 = v140;
  v131 = *(void (**)(_QWORD, _QWORD, _QWORD))(v140 + 16);
  v94 = v135;
  v131(v135, v89, v139);
  v95 = type metadata accessor for BundleFinder();
  v96 = swift_getObjCClassFromMetadata(v95);
  v130 = v96;
  v129 = (char *)objc_opt_self(NSBundle);
  v97 = objc_msgSend(v129, "bundleForClass:", v96);
  v98 = v134;
  v128 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  v99 = (unint64_t)v136;
  v100 = v138;
  v128(v136, v91, v138);
  v126 = String.init(localized:table:bundle:locale:comment:)(v94, 0, 0, v97, v99, "Action menu search button", 25, 2);
  v127 = v101;
  v102 = *(void (**)(char *, unint64_t))(v98 + 8);
  v102(v91, v100);
  v103 = *(void (**)(char *, uint64_t))(v92 + 8);
  v103(v89, v93);
  v104 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007B8800);
  static Locale.current.getter(v104);
  v131(v94, v89, v93);
  v105 = objc_msgSend(v129, "bundleForClass:", v130);
  v128((char *)v99, v91, v100);
  v106 = String.init(localized:table:bundle:locale:comment:)(v94, 0, 0, v105, v99, "Action menu themes button", 25, 2);
  v108 = v107;
  v102(v91, v100);
  v103(v89, v93);
  v109 = v132;
  v110 = v132[2];
  v111 = v110 + 2;
  if (__OFADD__(v110, 2))
  {
    __break(1u);
LABEL_27:
    v109 = sub_1005B07C4((_QWORD *)(v106 > 1), v110, 1, v109);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v132);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v111 <= v109[3] >> 1)
  {
    v102 = (void (*)(char *, unint64_t))v106;
  }
  else
  {
    v102 = (void (*)(char *, unint64_t))v106;
    if (v110 <= v111)
      v113 = v110 + 2;
    else
      v113 = v110;
    v109 = sub_1005B07C4(isUniquelyReferenced_nonNull_native, v113, 1, v109);
  }
  v93 = v126;
  v89 = (char *)v127;
  v99 = 0xEF7373616C67676ELL;
  v111 = v109[2];
  v106 = v109[3];
  v110 = v111 + 1;
  swift_bridgeObjectRetain(v127);
  swift_bridgeObjectRetain(0xEF7373616C67676ELL);
  v100 = 0xE600000000000000;
  swift_bridgeObjectRetain(0xE600000000000000);
  if (v111 >= v106 >> 1)
    goto LABEL_27;
LABEL_23:
  v109[2] = v110;
  v114 = &v109[13 * v111];
  v114[4] = v93;
  v114[5] = v89;
  *((_BYTE *)v114 + 48) = 0;
  v114[7] = 0x697966696E67616DLL;
  v114[8] = v99;
  v114[9] = sub_100228724;
  v114[10] = 0;
  v114[11] = 0x686372616553;
  v114[12] = v100;
  *(_OWORD *)(v114 + 13) = 0u;
  *(_OWORD *)(v114 + 15) = 0u;
  v115 = v109[3];
  v116 = v111 + 2;
  swift_bridgeObjectRetain(v108);
  swift_bridgeObjectRetain(0xEF657A69732E7461);
  swift_bridgeObjectRetain(0xE600000000000000);
  if (v110 >= v115 >> 1)
    v109 = sub_1005B07C4((_QWORD *)(v115 > 1), v116, 1, v109);
  v109[2] = v116;
  v117 = &v109[13 * v110];
  v117[4] = v102;
  v117[5] = v108;
  *((_BYTE *)v117 + 48) = 0;
  v117[7] = 0x6D726F6674786574;
  v117[8] = 0xEF657A69732E7461;
  v117[9] = sub_100228758;
  v117[10] = 0;
  v117[11] = 0x73656D656854;
  v117[12] = 0xE600000000000000;
  *(_OWORD *)(v117 + 13) = 0u;
  *(_OWORD *)(v117 + 15) = 0u;
  swift_bridgeObjectRelease(0xEF7373616C67676ELL);
  swift_bridgeObjectRelease(v89);
  swift_bridgeObjectRelease_n(0, 4);
  swift_bridgeObjectRelease_n(0xE600000000000000, 2);
  swift_bridgeObjectRelease(0xEF657A69732E7461);
  swift_bridgeObjectRelease(v108);
  return v109;
}

uint64_t sub_1002286BC(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType(result, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  }
  return result;
}

uint64_t sub_1002286F0(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType(result, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  }
  return result;
}

uint64_t sub_100228724(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType(result, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  }
  return result;
}

uint64_t sub_100228758(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType(result, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2);
  }
  return result;
}

uint64_t sub_10022878C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t OpaqueTypeConformance2;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  uint64_t result;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD v163[4];

  v155 = a1;
  v2 = type metadata accessor for AccessibilityTraits(0);
  v156 = *(_QWORD *)(v2 - 8);
  v157 = v2;
  __chkstk_darwin(v2);
  v154 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v152 = *(_QWORD *)(v4 - 8);
  v153 = v4;
  __chkstk_darwin(v4);
  v151 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for AccessibilityActionKind(0);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REActionMenuView(0);
  v160 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v159 = v8;
  v148 = (uint64_t)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)sub_10004CFD4(&qword_1009D3B18);
  v10 = __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v158 = (uint64_t)&v131 - v13;
  v137 = sub_10004CFD4(&qword_1009D3B20);
  __chkstk_darwin(v137);
  v135 = (uint64_t)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10004CFD4(&qword_1009D3B28);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v138 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D3B30);
  __chkstk_darwin(v16);
  v144 = (char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10004CFD4(&qword_1009D3B38);
  __chkstk_darwin(v146);
  v145 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_10004CFD4(&qword_1009D3B40);
  v19 = __chkstk_darwin(v150);
  v147 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v149 = (char *)&v131 - v21;
  v136 = type metadata accessor for ColorScheme(0);
  v134 = *(_QWORD *)(v136 - 8);
  v22 = __chkstk_darwin(v136);
  v24 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v26 = (char *)&v131 - v25;
  v27 = *(_QWORD *)(v1 + *(int *)(v7 + 68));
  KeyPath = swift_getKeyPath(&unk_100713828);
  v163[0] = v27;
  v29 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v163, KeyPath, v29);
  swift_release(KeyPath);
  v161 = v7;
  v162 = v1;
  v30 = v1 + *(int *)(v7 + 36);
  v31 = *(void **)v30;
  if (*(_QWORD *)v30)
  {
    v131 = *(_QWORD *)(v27 + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin + 24);
    v32 = *(_QWORD *)(v27 + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin + 8);
    v133 = *(_QWORD *)(v27 + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin + 16);
    v33 = swift_getKeyPath(&unk_100713850);
    v34 = swift_getKeyPath(&unk_100713878);
    v35 = v31;
    static Published.subscript.getter(v163, v35, v33, v34);

    swift_release(v33);
    swift_release(v34);
    v132 = LOBYTE(v163[0]);
    if (!LOBYTE(v163[0]))
      v32 = 0;
    v36 = swift_getKeyPath(&unk_100713850);
    v37 = swift_getKeyPath(&unk_100713878);
    v38 = v35;
    static Published.subscript.getter(v163, v38, v36, v37);

    swift_release(v36);
    swift_release(v37);
    v39 = LOBYTE(v163[0]);
    v40 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
    v41 = v131;
    if (v39)
      v41 = 0;
    v131 = v41;
    v42 = swift_getKeyPath(&unk_100713898);
    v43 = swift_getKeyPath(&unk_1007138C0);
    v44 = v38;
    static Published.subscript.getter(v26, v44, v42, v43);

    swift_release(v42);
    v45 = swift_release(v43);
    v46 = v134;
    v47 = v136;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v134 + 104))(v24, enum case for ColorScheme.dark(_:), v136, v45);
    LOBYTE(v42) = static ColorScheme.== infix(_:_:)(v26, v24);
    v48 = *(void (**)(char *, uint64_t))(v46 + 8);
    v48(v24, v47);
    v48(v26, v47);
    v49.n128_u64[0] = 0x3FE6666666666666;
    if ((v42 & 1) == 0)
      v49.n128_f64[0] = 0.5;
    v50 = Color.opacity(_:)(v40, v49);
    swift_release(v40);
    *v12 = swift_getKeyPath(&unk_1007138E0);
    v51 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    swift_storeEnumTagMultiPayload(v12, v51, 0);
    v52 = (char *)v12 + v9[10];
    *(_QWORD *)v52 = 0;
    v52[8] = 1;
    v53 = (char *)v12 + v9[14];
    *(_QWORD *)v53 = v32;
    v53[8] = v132 ^ 1;
    v54 = (char *)v12 + v9[11];
    *(_QWORD *)v54 = v133;
    v54[8] = 0;
    v55 = (char *)v12 + v9[15];
    *(_QWORD *)v55 = v131;
    v55[8] = v39;
    v56 = (uint64_t)v12 + v9[9];
    v57 = v162;
    v136 = v50;
    sub_1002294A8(v162, v50, v56);
    v58 = (char *)v12 + v9[12];
    *(_QWORD *)v58 = 0;
    v58[8] = 1;
    v59 = (char *)v12 + v9[13];
    *(_QWORD *)v59 = 0;
    v59[8] = 1;
    v60 = v158;
    v61 = sub_100025B3C((uint64_t)v12, v158, &qword_1009D3B18);
    v62 = static SafeAreaRegions.all.getter(v61);
    LOBYTE(v50) = static Edge.Set.all.getter();
    v63 = v135;
    sub_10000B5E4(v60, v135, &qword_1009D3B18);
    v64 = v137;
    v65 = v63 + *(int *)(v137 + 36);
    *(_QWORD *)v65 = v62;
    *(_BYTE *)(v65 + 8) = v50;
    sub_100010960(v60, &qword_1009D3B18);
    v161 = *(int *)(v161 + 64);
    v66 = *(_QWORD *)(*(_QWORD *)(v57 + v161) + 120);
    v67 = swift_getKeyPath(&unk_100713910);
    v68 = swift_getKeyPath(&unk_100713938);
    v69 = swift_retain(v66);
    static Published.subscript.getter(v163, v69, v67, v68);
    swift_release(v66);
    swift_release(v67);
    swift_release(v68);
    v70 = v148;
    sub_10002CD84(v57, v148, type metadata accessor for REActionMenuView);
    v71 = *(unsigned __int8 *)(v160 + 80);
    v72 = (v71 + 16) & ~v71;
    v160 = v72;
    v158 = v72 + v159;
    v159 = v71 | 7;
    v73 = swift_allocObject(&unk_1008F5278, v158, v71 | 7);
    sub_1002334B4(v70, v73 + v72);
    type metadata accessor for UIEdgeInsets(0);
    v75 = v74;
    v76 = sub_100233544();
    v77 = sub_100008DB0(&qword_1009D3B58, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, (uint64_t)&protocol conformance descriptor for UIEdgeInsets);
    v78 = v138;
    View.onChange<A>(of:initial:_:)(v163, 0, sub_1002334F8, v73, v64, v75, v76, v77);
    swift_release(v73);
    v79 = sub_100010960(v63, &qword_1009D3B20);
    v80 = v141;
    static AccessibilityActionKind.escape.getter(v79);
    v81 = v162;
    sub_10002CD84(v162, v70, type metadata accessor for REActionMenuView);
    v82 = swift_allocObject(&unk_1008F52A0, v158, v159);
    sub_1002334B4(v70, v82 + v160);
    v163[0] = v64;
    v163[1] = v75;
    v163[2] = v76;
    v163[3] = v77;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v163, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v84 = (uint64_t)v144;
    v85 = v140;
    View.accessibilityAction(_:_:)(v80, sub_1002335CC, v82, v140, OpaqueTypeConformance2);
    v86 = swift_release(v82);
    (*(void (**)(char *, uint64_t, __n128))(v142 + 8))(v80, v143, v86);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v78, v85);
    v87 = *(_QWORD *)(v81 + v161);
    v88 = swift_getKeyPath(&unk_100713958);
    v163[0] = v87;
    v143 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v163, v88, v143);
    swift_release(v88);
    LOBYTE(v88) = *(_BYTE *)(v87 + 281);
    sub_10002CD84(v81, v70, type metadata accessor for REActionMenuView);
    v89 = swift_allocObject(&unk_1008F52C8, v158, v159);
    v90 = sub_1002334B4(v70, v89 + v160);
    v91 = v151;
    static TaskPriority.userInitiated.getter(v90);
    v92 = v146;
    v93 = (uint64_t)v145;
    v94 = &v145[*(int *)(v146 + 36)];
    v95 = sub_10004CFD4(&qword_1009D3B78);
    v97 = v152;
    v96 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(&v94[*(int *)(v95 + 36)], v91, v153);
    v94[*(int *)(v95 + 40)] = v88;
    *(_QWORD *)v94 = &unk_1009D3B70;
    *((_QWORD *)v94 + 1) = v89;
    sub_10000B5E4(v84, v93, &qword_1009D3B30);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v91, v96);
    sub_100010960(v84, &qword_1009D3B30);
    v98 = sub_100233648();
    v99 = (uint64_t)v147;
    View.accessibilityIdentifier(_:)(0x65656853756E654DLL, 0xE900000000000074, v92, v98);
    sub_100010960(v93, &qword_1009D3B38);
    v100 = v161;
    v101 = v162;
    v102 = *(_QWORD *)(v162 + v161);
    v103 = swift_getKeyPath(&unk_100713958);
    v163[0] = v102;
    v104 = v143;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v163, v103, v143);
    v105 = swift_release(v103);
    v107 = v149;
    v106 = v150;
    ModifiedContent<>.accessibility(hidden:)(*(unsigned __int8 *)(v102 + 281), v150, v105);
    sub_100010960(v99, &qword_1009D3B40);
    v108 = *(_QWORD *)(v101 + v100);
    v109 = swift_getKeyPath(&unk_100713958);
    v163[0] = v108;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v163, v109, v104);
    swift_release(v109);
    v110 = v106;
    v111 = (uint64_t)v107;
    if (*(_BYTE *)(v108 + 281) == 1)
    {
      v163[0] = _swiftEmptyArrayStorage;
      v112 = sub_100008DB0(&qword_1009D3BA0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
      v113 = sub_10004CFD4(&qword_1009D3BA8);
      v114 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
      v115 = v154;
      v116 = v113;
      v117 = v157;
      dispatch thunk of SetAlgebra.init<A>(_:)(v163, v116, v114, v157, v112);
      v118 = v156;
    }
    else
    {
      v119 = sub_10004CFD4(&qword_1009D3B98);
      v118 = v156;
      v120 = swift_allocObject(v119, ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(_QWORD *)(v156 + 72), *(unsigned __int8 *)(v156 + 80) | 7);
      *(_OWORD *)(v120 + 16) = xmmword_10070CCA0;
      static AccessibilityTraits.isModal.getter();
      v163[0] = v120;
      v121 = sub_100008DB0(&qword_1009D3BA0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
      v122 = sub_10004CFD4(&qword_1009D3BA8);
      v123 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
      v115 = v154;
      v124 = v122;
      v117 = v157;
      dispatch thunk of SetAlgebra.init<A>(_:)(v163, v124, v123, v157, v121);
    }
    ModifiedContent<>.accessibilityAddTraits(_:)(v115, v110);
    v125 = swift_release(v136);
    (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v115, v117, v125);
    return sub_100010960(v111, &qword_1009D3B40);
  }
  else
  {
    v127 = *(_QWORD *)(v30 + 8);
    v128 = type metadata accessor for ChromeStyle(0);
    v129 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v127, v128, v129, v130);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002294A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)@<X0>(uint64_t *@<X8>);
  uint64_t (*v36)@<X0>(uint64_t *@<X8>);
  uint64_t v37;
  uint64_t (**v38)@<X0>(uint64_t *@<X8>);
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)(double *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];

  v50 = a2;
  v54 = a3;
  v52 = sub_10004CFD4(&qword_1009D3BC8);
  __chkstk_darwin(v52);
  v53 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REActionMenuView(0);
  v47 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v48 = v6;
  v49 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D3BD0);
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D3BD8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009D3BE0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10004CFD4(&qword_1009D3BE8);
  __chkstk_darwin(v44);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  sub_1002298CC((uint64_t)v9);
  if (qword_1009CE5D8 != -1)
    swift_once(&qword_1009CE5D8, sub_1004790DC);
  v19 = sub_10004CFD4(&qword_1009D1C80);
  v20 = sub_100048F64(v19, (uint64_t)qword_100A1E9C0);
  v21 = sub_100030B74(&qword_1009D3BF0);
  v22 = sub_100030B34(&qword_1009D3BF8, &qword_1009D3BF0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v55[0] = v21;
  v55[1] = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v55, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v24 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  v25 = v20;
  v26 = v46;
  View.dynamicTypeSize<A>(_:)(v25, v46, v19, OpaqueTypeConformance2, v24);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v26);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v18, &qword_1009D3BE0);
  v27 = &v18[*(int *)(v44 + 36)];
  v28 = v50;
  *(_QWORD *)v27 = v50;
  *(_OWORD *)(v27 + 8) = xmmword_100713680;
  *((_QWORD *)v27 + 3) = 0x4020000000000000;
  swift_retain(v28);
  sub_100010960((uint64_t)v16, &qword_1009D3BE0);
  v29 = v49;
  sub_10002CD84(v51, v49, type metadata accessor for REActionMenuView);
  v30 = *(unsigned __int8 *)(v47 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = swift_allocObject(&unk_1008F52F0, v31 + v48, v30 | 7);
  v33 = sub_1002334B4(v29, v32 + v31);
  v34 = static Alignment.center.getter(v33);
  v36 = v35;
  v37 = v53;
  sub_10000B5E4((uint64_t)v18, v53, &qword_1009D3BE8);
  v38 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v37 + *(int *)(v52 + 36));
  *v38 = sub_1003202EC;
  v38[1] = 0;
  v38[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v34;
  v38[3] = v36;
  v39 = swift_allocObject(&unk_1008F5318, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_1002337FC;
  *(_QWORD *)(v39 + 24) = v32;
  v40 = v54;
  sub_10000B5E4(v37, v54, &qword_1009D3BC8);
  v41 = (uint64_t (**)(double *))(v40 + *(int *)(sub_10004CFD4(&qword_1009D3C00) + 36));
  *v41 = sub_10023387C;
  v41[1] = (uint64_t (*)(double *))v39;
  sub_100010960(v37, &qword_1009D3BC8);
  return sub_100010960((uint64_t)v18, &qword_1009D3BE8);
}

uint64_t sub_1002298CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t *v23;
  char v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  v41 = type metadata accessor for AccessibilityChildBehavior(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10004CFD4(&qword_1009D3BF0);
  __chkstk_darwin(v36);
  v4 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for UserInterfaceSizeClass(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v35 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  v37 = v1;
  sub_100667DCC((uint64_t)&v34 - v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v17, enum case for UserInterfaceSizeClass.compact(_:), v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10000B5E4((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v17, v20, (uint64_t *)&unk_1009D8210);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v21((uint64_t)v10, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v19, (uint64_t *)&unk_1009D8210);
    v22 = v21(v20, 1, v5);
    if (v22 == 1)
      v23 = (uint64_t *)&unk_1009D8210;
    else
      v23 = &qword_1009D3C08;
    if (v22 == 1)
      v24 = -1;
    else
      v24 = 0;
  }
  else
  {
    sub_10000B5E4((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1009D8210);
    if (v21(v20, 1, v5) == 1)
    {
      sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v19, (uint64_t *)&unk_1009D8210);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      v24 = 0;
      v23 = &qword_1009D3C08;
    }
    else
    {
      v25 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v35, v20, v5);
      v26 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v25, v5, v26);
      v27 = *(void (**)(char *, uint64_t))(v6 + 8);
      v27(v25, v5);
      v23 = (uint64_t *)&unk_1009D8210;
      sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v19, (uint64_t *)&unk_1009D8210);
      v27(v14, v5);
    }
  }
  v28 = sub_100010960((uint64_t)v10, v23);
  *v4 = static Alignment.center.getter(v28);
  v4[1] = v29;
  sub_10004CFD4(&qword_1009D3C10);
  v30 = sub_10022D374(v37, v24 & 1);
  v31 = v38;
  static AccessibilityChildBehavior.contain.getter(v30);
  v32 = sub_100030B34(&qword_1009D3BF8, &qword_1009D3BF0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.accessibilityElement(children:)(v31, v36, v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v41);
  return sub_100010960((uint64_t)v4, &qword_1009D3BF0);
}

uint64_t sub_100229CCC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  int *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  CGRect v34;
  char v35;
  CGRect v36;

  v10 = (int *)type metadata accessor for REActionMenuView(0);
  result = swift_weakLoadStrong(a1 + v10[18]);
  if (result)
  {
    v12 = result;
    v13 = *(_QWORD *)(a1 + v10[16]);
    KeyPath = swift_getKeyPath(&unk_100713958);
    v28 = v13;
    v15 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v28, KeyPath, v15);
    swift_release(KeyPath);
    if ((*(_BYTE *)(v13 + 281) & 1) == 0)
    {
      v16 = (uint64_t *)(a1 + v10[12]);
      v17 = *v16;
      v18 = v16[1];
      v19 = v16[2];
      v20 = v16[3];
      v21 = *((_BYTE *)v16 + 32);
      v22 = v16[5];
      v28 = *v16;
      v29 = v18;
      v30 = v19;
      v31 = v20;
      v32 = v21;
      v33 = v22;
      v23 = sub_10004CFD4(&qword_1009D3BB8);
      State.wrappedValue.getter(&v34);
      if ((v35 & 1) != 0)
      {
LABEL_6:
        v28 = v17;
        v29 = v18;
        v30 = v19;
        v31 = v20;
        v32 = v21;
        v33 = v22;
        v34.origin.x = a2;
        v34.origin.y = a3;
        v34.size.width = a4;
        v34.size.height = a5;
        v35 = 0;
        State.wrappedValue.setter(&v34, v23);
        sub_1002273B0(a2, a3, a4, a5);
        return swift_release(v12);
      }
      x = v34.origin.x;
      y = v34.origin.y;
      width = v34.size.width;
      height = v34.size.height;
      v36.origin.x = a2;
      v36.origin.y = a3;
      v36.size.width = a4;
      v36.size.height = a5;
      if (!CGRectEqualToRect(v36, v34))
      {
        sub_1002276E8(x, y, width, height);
        goto LABEL_6;
      }
    }
    return swift_release(v12);
  }
  return result;
}

void sub_100229EA4(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v9 = *a2;
  v3 = *((_QWORD *)a2 + 2);
  v4 = *((_QWORD *)a2 + 3);
  v5 = (__int128 *)(a3 + *(int *)(type metadata accessor for REActionMenuView(0) + 40));
  v6 = *((_QWORD *)v5 + 4);
  v7 = v5[1];
  v13 = *v5;
  v14 = v7;
  v15 = v6;
  v10 = v9;
  v11 = v3;
  v12 = v4;
  v8 = sub_10004CFD4(&qword_1009D3BC0);
  State.wrappedValue.setter(&v10, v8);
}

double sub_100229F24(uint64_t a1)
{
  uint64_t v1;
  double result;
  _QWORD v3[4];

  v3[2] = a1;
  v1 = static Animation.default.getter();
  if (UIAccessibilityIsReduceMotionEnabled())
  {
    type metadata accessor for REActionMenuView(0);
    REActionMenuState.transition(to:)(0x8000000000000000);
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  else
  {
    withAnimation<A>(_:_:)(v1, sub_1002337BC, v3, (char *)&type metadata for () + 8);
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  return result;
}

uint64_t sub_100229FC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[14] = a1;
  v2 = type metadata accessor for REActionMenuView(0);
  v1[15] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[16] = swift_task_alloc(v3);
  v1[17] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[18] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10022A060, v5, v6);
}

uint64_t sub_10022A060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  int v7;
  BOOL v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 144));
  v4 = *(_QWORD *)(v3 + *(int *)(v2 + 64));
  KeyPath = swift_getKeyPath(&unk_100713958);
  *(_QWORD *)(v0 + 104) = v4;
  v6 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 104, KeyPath, v6);
  swift_release(KeyPath);
  v7 = *(unsigned __int8 *)(v4 + 281);
  sub_10002CD84(v3, v1, type metadata accessor for REActionMenuView);
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    v9 = (_QWORD *)(*(_QWORD *)(v0 + 136) + *(int *)(*(_QWORD *)(v0 + 120) + 80));
    v10 = *sub_10003F198(v9, v9[3]);
    Strong = swift_unknownObjectWeakLoadStrong(v10 + 72);
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(v10 + 80);
      ObjectType = swift_getObjectType();
      v15 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v13);
      v17 = v16;
      v18 = swift_getObjectType();
      v19 = dispatch thunk of BookContentLayoutProviding.layout.getter(v18, v17);
      swift_unknownObjectRelease(v12);
      swift_unknownObjectRelease(v15);
      v8 = v19 != 2;
    }
    else
    {
      v8 = 1;
    }
  }
  v20 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 112);
  sub_10002C8F0(*(_QWORD *)(v0 + 136), type metadata accessor for REActionMenuView);
  *(_BYTE *)(v0 + 97) = v8;
  v22 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.wrappedValue.setter(v0 + 97, v22);
  sub_10002CD84(v21, v20, type metadata accessor for REActionMenuView);
  if ((v7 & 1) != 0)
  {
    LOBYTE(v23) = 0;
  }
  else
  {
    v24 = (_QWORD *)(*(_QWORD *)(v0 + 128) + *(int *)(*(_QWORD *)(v0 + 120) + 80));
    v25 = *sub_10003F198(v24, v24[3]);
    v23 = swift_unknownObjectWeakLoadStrong(v25 + 72);
    if (v23)
    {
      v26 = *(_QWORD *)(v25 + 80);
      v27 = swift_getObjectType();
      v28 = dispatch thunk of Paginating.contentLayout.getter(v27, v26);
      v30 = v29;
      v31 = swift_getObjectType();
      v32 = dispatch thunk of BookContentLayoutProviding.layout.getter(v31, v30);
      swift_unknownObjectRelease(v23);
      swift_unknownObjectRelease(v28);
      LOBYTE(v23) = v32 == 2;
    }
  }
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)(v0 + 112);
  sub_10002C8F0(*(_QWORD *)(v0 + 128), type metadata accessor for REActionMenuView);
  *(_BYTE *)(v0 + 98) = v23;
  AccessibilityFocusState.wrappedValue.setter(v0 + 98, v22);
  v35 = v34 + *(int *)(v33 + 48);
  v36 = *(_BYTE *)(v35 + 32);
  v37 = *(_QWORD *)(v35 + 40);
  v38 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v35;
  *(_OWORD *)(v0 + 32) = v38;
  *(_BYTE *)(v0 + 48) = v36;
  *(_QWORD *)(v0 + 56) = v37;
  sub_10004CFD4(&qword_1009D3BB8);
  State.wrappedValue.getter((_QWORD *)(v0 + 64));
  if ((*(_BYTE *)(v0 + 96) & 1) == 0)
  {
    v40 = *(double *)(v0 + 64);
    v39 = *(double *)(v0 + 72);
    v42 = *(double *)(v0 + 80);
    v41 = *(double *)(v0 + 88);
    v43 = swift_weakLoadStrong(*(_QWORD *)(v0 + 112) + *(int *)(*(_QWORD *)(v0 + 120) + 72));
    v44 = v43;
    if (v7)
    {
      if (v43)
      {
        sub_1002276E8(v40, v39, v42, v41);
LABEL_16:
        swift_release(v44);
      }
    }
    else if (v43)
    {
      sub_1002273B0(v40, v39, v42, v41);
      goto LABEL_16;
    }
  }
  v45 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10022A37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  int v11;
  double v12;
  double v18;
  double v19;
  uint64_t v21;

  v0 = type metadata accessor for ContentSizeCategory(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v21 - v5;
  type metadata accessor for REActionMenuView(0);
  v7 = GeometryProxy.size.getter();
  v9 = v8;
  sub_100667DF8((uint64_t)v6);
  if (qword_1009CE5F0 != -1)
    swift_once(&qword_1009CE5F0, sub_100479398);
  v10 = *(double *)&qword_1009E5120;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  v12 = 1.5;
  if (v11 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v11 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:)
    && v11 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v11 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v11 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v11 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    v12 = 1.0;
  }
  if (qword_1009CE608 != -1)
    swift_once(&qword_1009CE608, sub_1004793C8);
  if (v9 >= v7)
    v18 = v7;
  else
    v18 = v9;
  if (v18 >= *(double *)&qword_1009E5138)
    v19 = v10 * v12;
  else
    v19 = v10 * v12 * 0.85;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v19;
}

uint64_t sub_10022A580@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  double v15;
  double v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[8];
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  _QWORD v104[2];
  char v105;
  _QWORD v106[20];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  _OWORD v110[3];

  v4 = v3;
  v87 = a1;
  v82 = a3;
  v88 = type metadata accessor for ContentSizeCategory(0);
  v6 = *(_QWORD *)(v88 - 8);
  v7 = __chkstk_darwin(v88);
  v86 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v80 - v9;
  v11 = (int *)type metadata accessor for REActionMenuView(0);
  v12 = v3 + v11[22];
  v13 = sub_100234864(a2);
  v85 = v12;
  v14 = GeometryProxy.size.getter(v13);
  v16 = v15;
  v84 = v4 + v11[6];
  sub_100667DF8((uint64_t)v10);
  v17 = (_QWORD *)(v4 + v11[20]);
  v18 = *sub_10003F198(v17, v17[3]);
  Strong = swift_unknownObjectWeakLoadStrong(v18 + 72);
  if (Strong)
  {
    v20 = Strong;
    v21 = *(_QWORD *)(v18 + 80);
    ObjectType = swift_getObjectType();
    v23 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v21);
    v25 = v24;
    v26 = swift_getObjectType();
    v27 = dispatch thunk of BookContentLayoutProviding.layout.getter(v26, v25);
    swift_unknownObjectRelease(v23);
    swift_unknownObjectRelease(v20);
    v28 = v27 == 2;
  }
  else
  {
    v28 = 0;
  }
  sub_10047971C((uint64_t)v10, v28, v14, v16);
  v30 = v29;
  v83 = *(void (**)(char *, uint64_t))(v6 + 8);
  v83(v10, v88);
  v31 = sub_10022A37C();
  v32 = v4 + v11[21];
  v33 = swift_unknownObjectWeakLoadStrong(v32);
  v34 = *(_QWORD *)(v32 + 8);
  v35 = *(_QWORD *)(v4 + v11[16]);
  KeyPath = swift_getKeyPath(&unk_1007139A0);
  v106[0] = v35;
  v37 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v106, KeyPath, v37);
  swift_release(KeyPath);
  LOBYTE(v32) = *(_QWORD *)(v35 + 328) == 0x8000000000000018;
  v38 = type metadata accessor for ChromeStyle(0);
  v81 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v38, v81);
  v93 = v39;
  v94 = v40;
  v41 = a2[5];
  v99 = a2[4];
  v100 = v41;
  v101 = *((_QWORD *)a2 + 12);
  v42 = a2[1];
  v95 = *a2;
  v96 = v42;
  v43 = a2[2];
  v98 = a2[3];
  v97 = v43;
  v102 = v30;
  v103 = v31;
  v104[1] = v34;
  swift_unknownObjectWeakInit(v104, v33);
  v44 = swift_unknownObjectRelease(v33);
  v105 = v32;
  v45 = GeometryProxy.size.getter(v44);
  v47 = v46;
  v48 = v86;
  sub_100667DF8(v86);
  v49 = *sub_10003F198(v17, v17[3]);
  v50 = swift_unknownObjectWeakLoadStrong(v49 + 72);
  if (v50)
  {
    v51 = v50;
    v52 = *(_QWORD *)(v49 + 80);
    v53 = swift_getObjectType();
    v54 = dispatch thunk of Paginating.contentLayout.getter(v53, v52);
    v56 = v55;
    v57 = swift_getObjectType();
    v58 = dispatch thunk of BookContentLayoutProviding.layout.getter(v57, v56);
    swift_unknownObjectRelease(v54);
    swift_unknownObjectRelease(v51);
    v59 = v58 == 2;
  }
  else
  {
    v59 = 0;
  }
  sub_10047971C(v48, v59, v45, v47);
  v61 = v60;
  v62 = ((uint64_t (*)(uint64_t, uint64_t))v83)(v48, v88);
  v63 = static Alignment.center.getter(v62);
  _FrameLayout.init(width:height:alignment:)(v110, v61, 0, 0, 1, v63, v64);
  sub_10023494C((uint64_t)&v93, (uint64_t)v106);
  v107 = v110[0];
  v108 = v110[1];
  v109 = v110[2];
  sub_100234988((uint64_t)&v93);
  v66 = v87;
  v67 = v87 + 1;
  if (__OFADD__(v87, 1))
  {
    __break(1u);
  }
  else
  {
    v68 = sub_100227AB0();
    v69 = v68[2];
    swift_bridgeObjectRelease(v68);
    v66 = v4 + v11[9];
    v70 = *(void **)v66;
    if (*(_QWORD *)v66)
    {
      v71 = v69 + 1;
      v72 = swift_getKeyPath(&unk_100713850);
      v73 = swift_getKeyPath(&unk_100713878);
      v74 = v70;
      static Published.subscript.getter(&v93, v74, v72, v73);

      swift_release(v72);
      swift_release(v73);
      v75 = v93;
      LOBYTE(v93) = 0;
      v94 = v67;
      *(_QWORD *)&v95 = v71;
      BYTE8(v95) = v75;
      v89[0] = 1;
      v90 = v67;
      v91 = v71;
      v92 = v75;
      v76 = sub_100234190();
      v77 = static AnyTransition.modifier<A>(active:identity:)(&v93, v89, &type metadata for RowScaleCascadeModifier, v76);
      v78 = v82;
      sub_10000B5E4((uint64_t)v106, v82, &qword_1009D3D88);
      *(_QWORD *)(v78 + 208) = v77;
      return sub_100010960((uint64_t)v106, &qword_1009D3D88);
    }
  }
  result = EnvironmentObject.error()(0, *(_QWORD *)(v66 + 8), v38, v81, v65);
  __break(1u);
  return result;
}

uint64_t sub_10022AA44@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v31[2];
  uint64_t v32;
  _QWORD v33[4];

  v5 = sub_10004CFD4(&qword_1009D3CD0);
  __chkstk_darwin(v5);
  v7 = (double *)((char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for REActionMenuView(0);
  v10 = GeometryProxy.size.getter(v8);
  v12 = v11;
  if (qword_1009CE5F8 != -1)
    v9 = swift_once(&qword_1009CE5F8, sub_1004793A8);
  v13 = *(double *)&qword_1009E5128;
  if (v12 < v10)
    v10 = v12;
  if (qword_1009CE608 != -1)
    v9 = swift_once(&qword_1009CE608, sub_1004793C8);
  if (v10 >= *(double *)&qword_1009E5138)
    v14 = v13;
  else
    v14 = v13 * 0.85;
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v9);
  v7[1] = v14;
  *((_BYTE *)v7 + 16) = 0;
  v15 = sub_10004CFD4(&qword_1009D3F28);
  v16 = sub_10022AC40(v2, (uint64_t)v7 + *(int *)(v15 + 44));
  v17 = 0.0;
  v18 = static Edge.Set.horizontal.getter(v16);
  if ((a1 & 1) != 0)
  {
    v19 = v2 + *(int *)(v8 + 40);
    v20 = *(_QWORD *)(v19 + 32);
    v21 = *(_OWORD *)(v19 + 16);
    v31[0] = *(_OWORD *)v19;
    v31[1] = v21;
    v32 = v20;
    sub_10004CFD4(&qword_1009D3BC0);
    State.wrappedValue.getter(v33);
    v17 = *(double *)&v33[2];
  }
  v22 = EdgeInsets.init(_all:)(v17);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_10000B5E4((uint64_t)v7, a2, &qword_1009D3CD0);
  v29 = a2 + *(int *)(sub_10004CFD4(&qword_1009D3C18) + 36);
  *(_BYTE *)v29 = v18;
  *(double *)(v29 + 8) = v22;
  *(_QWORD *)(v29 + 16) = v24;
  *(_QWORD *)(v29 + 24) = v26;
  *(_QWORD *)(v29 + 32) = v28;
  *(_BYTE *)(v29 + 40) = 0;
  return sub_100010960((uint64_t)v7, &qword_1009D3CD0);
}

uint64_t sub_10022AC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;

  v74 = a2;
  v3 = sub_10004CFD4(&qword_1009D3F30);
  __chkstk_darwin(v3);
  v71 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D3D48);
  v6 = __chkstk_darwin(v5);
  v70 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v69 = (uint64_t)&v60 - v8;
  v9 = type metadata accessor for REActionMenuView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D3D50);
  v62 = *(_QWORD *)(v13 - 8);
  v63 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009D3F38);
  v66 = *(_QWORD *)(v68 - 8);
  v16 = __chkstk_darwin(v68);
  v64 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v73 = (char *)&v60 - v18;
  v67 = sub_10004CFD4(&qword_1009D3F40);
  v72 = *(_QWORD *)(v67 - 8);
  v19 = __chkstk_darwin(v67);
  v65 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v60 - v21;
  v23 = *(_QWORD *)(a1 + *(int *)(v9 + 64));
  KeyPath = swift_getKeyPath(&unk_100713958);
  v75 = v23;
  v25 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v75, KeyPath, v25);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v23 + 281) & 1) != 0)
  {
    v26 = sub_10004CFD4(&qword_1009D3F58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v74, 1, 1, v26);
  }
  else
  {
    v61 = v22;
    sub_10022B1AC((uint64_t)v22);
    v28 = sub_100227AB0();
    v29 = v28[2];
    v75 = 0;
    v76 = v29;
    v30 = swift_getKeyPath(&unk_100713988);
    sub_10002CD84(a1, (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REActionMenuView);
    v31 = *(unsigned __int8 *)(v10 + 80);
    v32 = (v31 + 16) & ~v31;
    v33 = (v11 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject(&unk_1008F5458, v33 + 8, v31 | 7);
    sub_1002334B4((uint64_t)v12, v34 + v32);
    *(_QWORD *)(v34 + v33) = v28;
    v35 = sub_10004CFD4(&qword_1009D3D58);
    v36 = sub_10004CFD4(&qword_1009D3D60);
    v37 = sub_100233FF8();
    v38 = sub_1002340A8();
    ForEach<>.init(_:id:content:)(&v75, v30, sub_100233FF4, v34, v35, v36, v37, &protocol witness table for Int, v38);
    v39 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.projectedValue.getter(&v75, v39);
    v40 = v75;
    v41 = v76;
    v42 = v77;
    v43 = sub_100234F1C();
    v44 = v63;
    v45 = v64;
    View.accessibilityFocused(_:)(v40, v41, v42, v63, v43);
    swift_release(v41);
    swift_release(v40);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v44);
    v46 = v66;
    v47 = v73;
    v48 = v68;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v73, v45, v68);
    v49 = v69;
    sub_10022B67C(v69);
    v50 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v51 = v65;
    v52 = v67;
    v50(v65, v61, v67);
    v53 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v53(v45, v47, v48);
    v54 = v70;
    sub_10000B5E4(v49, v70, &qword_1009D3D48);
    v55 = (uint64_t)v71;
    v50(v71, v51, v52);
    v56 = sub_10004CFD4(&qword_1009D3F50);
    v53((char *)(v55 + *(int *)(v56 + 48)), v45, v48);
    sub_10000B5E4(v54, v55 + *(int *)(v56 + 64), &qword_1009D3D48);
    sub_100010960(v49, &qword_1009D3D48);
    v57 = *(void (**)(char *, uint64_t))(v46 + 8);
    v57(v73, v48);
    v58 = *(void (**)(char *, uint64_t))(v72 + 8);
    v58(v61, v52);
    sub_100010960(v54, &qword_1009D3D48);
    v57(v45, v48);
    v58(v51, v52);
    v59 = sub_10004CFD4(&qword_1009D3F58);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v55, 0, 1, v59);
    return sub_100025B3C(v55, v74, &qword_1009D3F30);
  }
}

uint64_t sub_10022B1AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t);
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  double v51;
  double v52;
  double v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  void *v66;
  uint64_t KeyPath;
  uint64_t v68;
  id v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t result;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char v88[8];
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;

  v2 = v1;
  v84 = a1;
  v87 = type metadata accessor for ContentSizeCategory(0);
  v3 = *(_QWORD *)(v87 - 8);
  v4 = __chkstk_darwin(v87);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v81 - v7;
  v9 = type metadata accessor for REScrubberView(0);
  __chkstk_darwin(v9);
  v86 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_10004CFD4(&qword_1009D3F60);
  __chkstk_darwin(v82);
  v83 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for REActionMenuView(0);
  v85 = *(_QWORD *)(v1 + v12[16]);
  v13 = swift_retain(v85);
  v14 = GeometryProxy.size.getter(v13);
  v16 = v15;
  sub_100667DF8((uint64_t)v8);
  v17 = (_QWORD *)(v1 + v12[20]);
  v18 = *sub_10003F198(v17, v17[3]);
  Strong = swift_unknownObjectWeakLoadStrong(v18 + 72);
  if (Strong)
  {
    v20 = Strong;
    v81 = v6;
    v21 = v3;
    v22 = *(_QWORD *)(v18 + 80);
    ObjectType = swift_getObjectType();
    v24 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v22);
    v26 = v25;
    v27 = swift_getObjectType();
    v28 = dispatch thunk of BookContentLayoutProviding.layout.getter(v27, v26);
    swift_unknownObjectRelease(v24);
    swift_unknownObjectRelease(v20);
    v29 = v28 == 2;
    v3 = v21;
    v6 = v81;
    v30 = v29;
  }
  else
  {
    v30 = 0;
  }
  sub_10047971C((uint64_t)v8, v30, v14, v16);
  v32 = v31;
  v33 = *(void (**)(char *, uint64_t))(v3 + 8);
  v33(v8, v87);
  v34 = sub_10022A37C();
  v36 = GeometryProxy.size.getter(v35);
  v38 = v37;
  sub_100667DF8((uint64_t)v6);
  v39 = *sub_10003F198(v17, v17[3]);
  v40 = swift_unknownObjectWeakLoadStrong(v39 + 72);
  if (v40)
  {
    v41 = v40;
    v42 = *(_QWORD *)(v39 + 80);
    v43 = swift_getObjectType();
    v44 = dispatch thunk of Paginating.contentLayout.getter(v43, v42);
    v46 = v45;
    v47 = swift_getObjectType();
    v48 = dispatch thunk of BookContentLayoutProviding.layout.getter(v47, v46);
    swift_unknownObjectRelease(v44);
    swift_unknownObjectRelease(v41);
    v49 = v48 == 2;
  }
  else
  {
    v49 = 0;
  }
  v50 = v86;
  sub_10047971C((uint64_t)v6, v49, v36, v38);
  v52 = v51;
  v33(v6, v87);
  v53 = sub_10022A37C();
  v54 = (uint64_t *)(v2 + v12[25]);
  v55 = *v54;
  v56 = v54[1];
  v57 = type metadata accessor for ChromeStyle(0);
  v58 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_bridgeObjectRetain(v56);
  EnvironmentObject.init()(v57, v58);
  sub_10045A0BC(v59, v60, v85, v55, v56, 0.0, 1, 0, v50, 44.0, v32, v34, v52, v53, 0.0, 0.0);
  v61 = sub_100227AB0();
  v62 = v61[2];
  swift_bridgeObjectRelease(v61);
  v65 = v62 + 2;
  if (__OFADD__(v62, 2))
  {
    __break(1u);
  }
  else
  {
    v63 = v2 + v12[9];
    v66 = *(void **)v63;
    if (*(_QWORD *)v63)
    {
      KeyPath = swift_getKeyPath(&unk_100713850);
      v68 = swift_getKeyPath(&unk_100713878);
      v69 = v66;
      static Published.subscript.getter(&v92, v69, KeyPath, v68);

      swift_release(KeyPath);
      swift_release(v68);
      v70 = v92;
      LOBYTE(v92) = 0;
      v93 = 0;
      v94 = v65;
      v95 = v70;
      v88[0] = 1;
      v89 = 0;
      v90 = v65;
      v91 = v70;
      v71 = sub_100234190();
      v72 = static AnyTransition.modifier<A>(active:identity:)(&v92, v88, &type metadata for RowScaleCascadeModifier, v71);
      v73 = v83;
      sub_10002CD84((uint64_t)v50, v83, type metadata accessor for REScrubberView);
      v74 = v82;
      *(_QWORD *)(v73 + *(int *)(v82 + 36)) = v72;
      sub_10002C8F0((uint64_t)v50, type metadata accessor for REScrubberView);
      v75 = sub_10004CFD4(&qword_1009D3A10);
      AccessibilityFocusState.projectedValue.getter(&v92, v75);
      v76 = v92;
      v77 = v93;
      v78 = v94;
      v79 = sub_100234F80();
      View.accessibilityFocused(_:)(v76, v77, v78, v74, v79);
      swift_release(v77);
      swift_release(v76);
      return sub_100010960(v73, &qword_1009D3F60);
    }
  }
  result = EnvironmentObject.error()(0, *(_QWORD *)(v63 + 8), v57, v58, v64);
  __break(1u);
  return result;
}

uint64_t sub_10022B67C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t KeyPath;
  uint64_t v30;
  id v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47[8];
  uint64_t v48;
  uint64_t v49;
  char v50;
  _QWORD v51[3];
  char v52;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D3DB8);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D3DC0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for REActionMenuView(0);
  v11 = *sub_10003F198((_QWORD *)(v2 + v10[20]), *(_QWORD *)(v2 + v10[20] + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v11 + 72);
  v46 = a1;
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v11 + 80);
    ObjectType = swift_getObjectType();
    v16 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v14);
    v18 = v17;
    v19 = swift_getObjectType();
    v20 = dispatch thunk of BookContentLayoutProviding.layout.getter(v19, v18);
    swift_unknownObjectRelease(v16);
    swift_unknownObjectRelease(v13);
    if (v20 == 2)
      v21 = 1;
    else
      v21 = 2;
  }
  else
  {
    v21 = 2;
  }
  v22 = sub_100227AB0();
  v23 = v22[2];
  v24 = swift_bridgeObjectRelease(v22);
  v26 = v23 + v21;
  if (__OFADD__(v23, v21))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (__OFSUB__(v26, 1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v24);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v27 = sub_10004CFD4(&qword_1009D3DC8);
  sub_10022D760(v2, (uint64_t)&v6[*(int *)(v27 + 44)]);
  v25 = v2 + v10[9];
  v28 = *(void **)v25;
  if (!*(_QWORD *)v25)
  {
LABEL_15:
    v41 = *(_QWORD *)(v25 + 8);
    v42 = type metadata accessor for ChromeStyle(0);
    v43 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v41, v42, v43, v44);
    __break(1u);
    return result;
  }
  KeyPath = swift_getKeyPath(&unk_100713850);
  v30 = swift_getKeyPath(&unk_100713878);
  v31 = v28;
  static Published.subscript.getter(v51, v31, KeyPath, v30);

  swift_release(KeyPath);
  swift_release(v30);
  v32 = v51[0];
  LOBYTE(v51[0]) = 0;
  v51[1] = v26 - 1;
  v51[2] = v26;
  v52 = v32;
  v47[0] = 1;
  v48 = v26 - 1;
  v49 = v26;
  v50 = v32;
  v33 = sub_100234190();
  v34 = static AnyTransition.modifier<A>(active:identity:)(v51, v47, &type metadata for RowScaleCascadeModifier, v33);
  sub_10000B5E4((uint64_t)v6, (uint64_t)v9, &qword_1009D3DB8);
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = v34;
  sub_100010960((uint64_t)v6, &qword_1009D3DB8);
  v35 = *(_QWORD *)(v2 + v10[16]);
  v36 = swift_getKeyPath(&unk_1007139A0);
  v51[0] = v35;
  v37 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v51, v36, v37);
  swift_release(v36);
  if (*(_QWORD *)(v35 + 328) == 0x8000000000000018)
    v38 = 0.0;
  else
    v38 = 1.0;
  v39 = v46;
  sub_10000B5E4((uint64_t)v9, v46, &qword_1009D3DC0);
  *(double *)(v39 + *(int *)(sub_10004CFD4(&qword_1009D3D48) + 36)) = v38;
  return sub_100010960((uint64_t)v9, &qword_1009D3DC0);
}

uint64_t sub_10022B9D4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD v47[4];

  v42 = a1;
  v43 = a2;
  v3 = type metadata accessor for REActionMenuView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_10004CFD4(&qword_1009D3C70);
  __chkstk_darwin(v6);
  v8 = (double *)&v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_10004CFD4(&qword_1009D3C60);
  v10 = __chkstk_darwin(v9);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = static VerticalAlignment.bottom.getter(v10);
  v14 = GeometryProxy.size.getter(v13);
  v16 = v15;
  if (qword_1009CE600 != -1)
    swift_once(&qword_1009CE600, sub_1004793B8);
  v17 = *(double *)&qword_1009E5130;
  if (v16 < v14)
    v14 = v16;
  if (qword_1009CE608 != -1)
    swift_once(&qword_1009CE608, sub_1004793C8);
  v18 = v14 < *(double *)&qword_1009E5138;
  *(_QWORD *)v8 = v13;
  if (v18)
    v19 = v17 * 0.85;
  else
    v19 = v17;
  v8[1] = v19;
  *((_BYTE *)v8 + 16) = 0;
  v20 = sub_10004CFD4(&qword_1009D3CD8);
  v21 = sub_10022C3C8(v2, (char *)v8 + *(int *)(v20 + 44));
  v22 = 0.0;
  v23 = static Edge.Set.horizontal.getter(v21);
  if ((v42 & 1) != 0)
  {
    v24 = v2 + *(int *)(v3 + 40);
    v25 = *(_QWORD *)(v24 + 32);
    v26 = *(_OWORD *)(v24 + 16);
    v44 = *(_OWORD *)v24;
    v45 = v26;
    v46 = v25;
    sub_10004CFD4(&qword_1009D3BC0);
    State.wrappedValue.getter(v47);
    v22 = *(double *)&v47[2];
  }
  v27 = EdgeInsets.init(_all:)(v22);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_10000B5E4((uint64_t)v8, (uint64_t)v12, &qword_1009D3C70);
  v34 = (double *)&v12[*(int *)(v9 + 36)];
  *(_BYTE *)v34 = v23;
  v34[1] = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  *((_BYTE *)v34 + 40) = 0;
  sub_100010960((uint64_t)v8, &qword_1009D3C70);
  sub_10002CD84(v2, (uint64_t)&v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for REActionMenuView);
  v35 = *(unsigned __int8 *)(v4 + 80);
  v36 = (v35 + 16) & ~v35;
  v37 = swift_allocObject(&unk_1008F5340, v36 + v5, v35 | 7);
  sub_1002334B4((uint64_t)&v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v37 + v36);
  v38 = v43;
  sub_10000B5E4((uint64_t)v12, v43, &qword_1009D3C60);
  v39 = (_QWORD *)(v38 + *(int *)(sub_10004CFD4(&qword_1009D3C38) + 36));
  *v39 = sub_100233BA8;
  v39[1] = v37;
  return sub_100010960((uint64_t)v12, &qword_1009D3C60);
}

uint64_t sub_10022BCC8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD v47[4];

  v42 = a1;
  v43 = a2;
  v3 = type metadata accessor for REActionMenuView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_10004CFD4(&qword_1009D3CA8);
  __chkstk_darwin(v6);
  v8 = (double *)&v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_10004CFD4(&qword_1009D3C98);
  v10 = __chkstk_darwin(v9);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = static VerticalAlignment.bottom.getter(v10);
  v14 = GeometryProxy.size.getter(v13);
  v16 = v15;
  if (qword_1009CE600 != -1)
    swift_once(&qword_1009CE600, sub_1004793B8);
  v17 = *(double *)&qword_1009E5130;
  if (v16 < v14)
    v14 = v16;
  if (qword_1009CE608 != -1)
    swift_once(&qword_1009CE608, sub_1004793C8);
  v18 = v14 < *(double *)&qword_1009E5138;
  *(_QWORD *)v8 = v13;
  if (v18)
    v19 = v17 * 0.85;
  else
    v19 = v17;
  v8[1] = v19;
  *((_BYTE *)v8 + 16) = 0;
  v20 = sub_10004CFD4(&qword_1009D3EF0);
  v21 = sub_10022BFBC(v2, (char *)v8 + *(int *)(v20 + 44));
  v22 = 0.0;
  v23 = static Edge.Set.horizontal.getter(v21);
  if ((v42 & 1) != 0)
  {
    v24 = v2 + *(int *)(v3 + 40);
    v25 = *(_QWORD *)(v24 + 32);
    v26 = *(_OWORD *)(v24 + 16);
    v44 = *(_OWORD *)v24;
    v45 = v26;
    v46 = v25;
    sub_10004CFD4(&qword_1009D3BC0);
    State.wrappedValue.getter(v47);
    v22 = *(double *)&v47[2];
  }
  v27 = EdgeInsets.init(_all:)(v22);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_10000B5E4((uint64_t)v8, (uint64_t)v12, &qword_1009D3CA8);
  v34 = (double *)&v12[*(int *)(v9 + 36)];
  *(_BYTE *)v34 = v23;
  v34[1] = v27;
  *((_QWORD *)v34 + 2) = v29;
  *((_QWORD *)v34 + 3) = v31;
  *((_QWORD *)v34 + 4) = v33;
  *((_BYTE *)v34 + 40) = 0;
  sub_100010960((uint64_t)v8, &qword_1009D3CA8);
  sub_10002CD84(v2, (uint64_t)&v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for REActionMenuView);
  v35 = *(unsigned __int8 *)(v4 + 80);
  v36 = (v35 + 16) & ~v35;
  v37 = swift_allocObject(&unk_1008F5430, v36 + v5, v35 | 7);
  sub_1002334B4((uint64_t)&v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v37 + v36);
  v38 = v43;
  sub_10000B5E4((uint64_t)v12, v43, &qword_1009D3C98);
  v39 = (_QWORD *)(v38 + *(int *)(sub_10004CFD4(&qword_1009D3C28) + 36));
  *v39 = sub_100233BA8;
  v39[1] = v37;
  return sub_100010960((uint64_t)v12, &qword_1009D3C98);
}

uint64_t sub_10022BFBC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD v56[2];
  unsigned __int8 v57;

  v54 = a2;
  v3 = sub_10004CFD4(&qword_1009D3CE8);
  v4 = __chkstk_darwin(v3);
  v55 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v53 = (uint64_t)&v49 - v6;
  v7 = sub_10004CFD4(&qword_1009D3CF0);
  __chkstk_darwin(v7);
  v9 = (double *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10004CFD4(&qword_1009D3EF8);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D3F00);
  v51 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v52 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v50 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v49 - v18;
  v20 = type metadata accessor for REActionMenuView(0);
  v22 = GeometryProxy.size.getter(v20);
  v24 = v23;
  if (qword_1009CE5F8 != -1)
    v21 = swift_once(&qword_1009CE5F8, sub_1004793A8);
  v25 = *(double *)&qword_1009E5128;
  if (qword_1009CE608 != -1)
    v21 = swift_once(&qword_1009CE608, sub_1004793C8);
  if (v24 >= v22)
    v26 = v22;
  else
    v26 = v24;
  if (v26 >= *(double *)&qword_1009E5138)
    v27 = v25;
  else
    v27 = v25 * 0.85;
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v21);
  v9[1] = v27;
  *((_BYTE *)v9 + 16) = 0;
  v28 = sub_10004CFD4(&qword_1009D3D08);
  v29 = sub_10022C7D4(a1, (uint64_t)v9 + *(int *)(v28 + 44));
  v30 = static Alignment.center.getter(v29);
  v32 = v31;
  sub_10000B5E4((uint64_t)v9, (uint64_t)v12, &qword_1009D3CF0);
  v33 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v33 = sub_100233FB0;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = v30;
  *((_QWORD *)v33 + 3) = v32;
  sub_100010960((uint64_t)v9, &qword_1009D3CF0);
  v34 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(v56, v34);
  v35 = v56[0];
  v36 = v56[1];
  v37 = v57;
  v38 = sub_100234A48(&qword_1009D3F08, &qword_1009D3EF8, &qword_1009D3F10, &qword_1009D3F18);
  v39 = v50;
  View.accessibilityFocused(_:)(v35, v36, v37, v10, v38);
  swift_release(v36);
  swift_release(v35);
  sub_100010960((uint64_t)v12, &qword_1009D3EF8);
  v40 = v51;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v19, v39, v13);
  v41 = v53;
  sub_10022CC30(v53);
  v42 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v43 = v52;
  v42(v52, v19, v13);
  v44 = v55;
  sub_10000B5E4(v41, v55, &qword_1009D3CE8);
  v45 = v54;
  v42(v54, v43, v13);
  v46 = sub_10004CFD4(&qword_1009D3F20);
  sub_10000B5E4(v44, (uint64_t)&v45[*(int *)(v46 + 48)], &qword_1009D3CE8);
  sub_100010960(v41, &qword_1009D3CE8);
  v47 = *(void (**)(char *, uint64_t))(v40 + 8);
  v47(v19, v13);
  sub_100010960(v44, &qword_1009D3CE8);
  return ((uint64_t (*)(char *, uint64_t))v47)(v43, v13);
}

uint64_t sub_10022C3C8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD v56[2];
  unsigned __int8 v57;

  v54 = a2;
  v3 = sub_10004CFD4(&qword_1009D3CE8);
  v4 = __chkstk_darwin(v3);
  v55 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v53 = (uint64_t)&v49 - v6;
  v7 = sub_10004CFD4(&qword_1009D3CF0);
  __chkstk_darwin(v7);
  v9 = (double *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10004CFD4(&qword_1009D3CF8);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D3D00);
  v51 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v52 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v50 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v49 - v18;
  v20 = type metadata accessor for REActionMenuView(0);
  v22 = GeometryProxy.size.getter(v20);
  v24 = v23;
  if (qword_1009CE5F8 != -1)
    v21 = swift_once(&qword_1009CE5F8, sub_1004793A8);
  v25 = *(double *)&qword_1009E5128;
  if (qword_1009CE608 != -1)
    v21 = swift_once(&qword_1009CE608, sub_1004793C8);
  if (v24 >= v22)
    v26 = v22;
  else
    v26 = v24;
  if (v26 >= *(double *)&qword_1009E5138)
    v27 = v25;
  else
    v27 = v25 * 0.85;
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v21);
  v9[1] = v27;
  *((_BYTE *)v9 + 16) = 0;
  v28 = sub_10004CFD4(&qword_1009D3D08);
  v29 = sub_10022C7D4(a1, (uint64_t)v9 + *(int *)(v28 + 44));
  v30 = static Alignment.center.getter(v29);
  v32 = v31;
  sub_10000B5E4((uint64_t)v9, (uint64_t)v12, &qword_1009D3CF0);
  v33 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v33 = sub_100233FB0;
  *((_QWORD *)v33 + 1) = 0;
  *((_QWORD *)v33 + 2) = v30;
  *((_QWORD *)v33 + 3) = v32;
  sub_100010960((uint64_t)v9, &qword_1009D3CF0);
  v34 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(v56, v34);
  v35 = v56[0];
  v36 = v56[1];
  v37 = v57;
  v38 = sub_100234A48(&qword_1009D3D10, &qword_1009D3CF8, &qword_1009D3D20, &qword_1009D3D28);
  v39 = v50;
  View.accessibilityFocused(_:)(v35, v36, v37, v10, v38);
  swift_release(v36);
  swift_release(v35);
  sub_100010960((uint64_t)v12, &qword_1009D3CF8);
  v40 = v51;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v19, v39, v13);
  v41 = v53;
  sub_10022CC30(v53);
  v42 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v43 = v52;
  v42(v52, v19, v13);
  v44 = v55;
  sub_10000B5E4(v41, v55, &qword_1009D3CE8);
  v45 = v54;
  v42(v54, v43, v13);
  v46 = sub_10004CFD4(&qword_1009D3D30);
  sub_10000B5E4(v44, (uint64_t)&v45[*(int *)(v46 + 48)], &qword_1009D3CE8);
  sub_100010960(v41, &qword_1009D3CE8);
  v47 = *(void (**)(char *, uint64_t))(v40 + 8);
  v47(v19, v13);
  sub_100010960(v44, &qword_1009D3CE8);
  return ((uint64_t (*)(char *, uint64_t))v47)(v43, v13);
}

uint64_t sub_10022C7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD v51[2];

  v50 = a2;
  v3 = sub_10004CFD4(&qword_1009D3D40);
  __chkstk_darwin(v3);
  v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D3D48);
  v6 = __chkstk_darwin(v5);
  v48 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v47 = (uint64_t)&v45 - v8;
  v9 = type metadata accessor for REActionMenuView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D3D50);
  v46 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v45 - v17;
  v19 = a1;
  v20 = *(_QWORD *)(a1 + *(int *)(v9 + 64));
  KeyPath = swift_getKeyPath(&unk_100713958);
  v51[0] = v20;
  v22 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v51, KeyPath, v22);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v20 + 281) & 1) != 0)
  {
    v23 = sub_10004CFD4(&qword_1009D3DB0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v50, 1, 1, v23);
  }
  else
  {
    v25 = v19;
    v26 = sub_100227AB0();
    v27 = v26[2];
    v51[0] = 0;
    v51[1] = v27;
    v28 = swift_getKeyPath(&unk_100713988);
    sub_10002CD84(v25, (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REActionMenuView);
    v29 = *(unsigned __int8 *)(v10 + 80);
    v30 = (v29 + 16) & ~v29;
    v31 = (v11 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject(&unk_1008F53B8, v31 + 8, v29 | 7);
    sub_1002334B4((uint64_t)v12, v32 + v30);
    *(_QWORD *)(v32 + v31) = v26;
    v33 = sub_10004CFD4(&qword_1009D3D58);
    v34 = sub_10004CFD4(&qword_1009D3D60);
    v35 = sub_100233FF8();
    v36 = sub_1002340A8();
    ForEach<>.init(_:id:content:)(v51, v28, sub_100233FF4, v32, v33, v34, v35, &protocol witness table for Int, v36);
    v37 = v47;
    sub_10022B67C(v47);
    v38 = v46;
    v39 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v39(v16, v18, v13);
    v40 = v48;
    sub_10000B5E4(v37, v48, &qword_1009D3D48);
    v41 = (uint64_t)v49;
    v39(v49, v16, v13);
    v42 = sub_10004CFD4(&qword_1009D3DA8);
    sub_10000B5E4(v40, v41 + *(int *)(v42 + 48), &qword_1009D3D48);
    sub_100010960(v37, &qword_1009D3D48);
    v43 = *(void (**)(char *, uint64_t))(v38 + 8);
    v43(v18, v13);
    sub_100010960(v40, &qword_1009D3D48);
    v43(v16, v13);
    v44 = sub_10004CFD4(&qword_1009D3DB0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v41, 0, 1, v44);
    return sub_100025B3C(v41, v50, &qword_1009D3D40);
  }
}

unint64_t *sub_10022CB9C@<X0>(unint64_t *result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9[6];
  uint64_t v10;

  v3 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(_QWORD *)(a2 + 16))
  {
    v5 = a2 + 104 * v3;
    v6 = *(_OWORD *)(v5 + 112);
    v9[4] = *(_OWORD *)(v5 + 96);
    v9[5] = v6;
    v10 = *(_QWORD *)(v5 + 128);
    v7 = *(_OWORD *)(v5 + 48);
    v9[0] = *(_OWORD *)(v5 + 32);
    v9[1] = v7;
    v8 = *(_OWORD *)(v5 + 80);
    v9[2] = *(_OWORD *)(v5 + 64);
    v9[3] = v8;
    sub_100234864(v9);
    sub_10022A580(v3, v9, a3);
    return sub_1002348D8(v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_10022CC30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  double v41;
  double v42;
  double v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t v60;
  double v61;
  uint64_t v62;
  _QWORD v64[2];
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;

  v2 = v1;
  v69 = a1;
  v3 = type metadata accessor for ContentSizeCategory(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v64 - v8;
  v10 = type metadata accessor for REScrubberView(0);
  __chkstk_darwin(v10);
  v67 = (_QWORD *)((char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10004CFD4(&qword_1009D3D38);
  __chkstk_darwin(v12);
  v68 = (uint64_t)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for REActionMenuView(0);
  v66 = v14[16];
  v15 = *(_QWORD *)(v1 + v66);
  v16 = (uint64_t *)(v1 + v14[11]);
  v17 = v16[1];
  v70 = *v16;
  v71 = v17;
  v65 = v15;
  swift_retain(v15);
  v64[1] = sub_10004CFD4(&qword_1009D3CE0);
  v18 = State.wrappedValue.getter(&v72);
  v19 = v72;
  v20 = GeometryProxy.size.getter(v18);
  v22 = v21;
  sub_100667DF8((uint64_t)v9);
  sub_100479A88((uint64_t)v9, v20, v22);
  v24 = v23;
  v25 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  v26 = v25(v9, v3);
  v27 = GeometryProxy.size.getter(v26);
  v29 = v28;
  sub_100667DF8((uint64_t)v7);
  v30 = *sub_10003F198((_QWORD *)(v2 + v14[20]), *(_QWORD *)(v2 + v14[20] + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v30 + 72);
  if (Strong)
  {
    v32 = Strong;
    v33 = *(_QWORD *)(v30 + 80);
    ObjectType = swift_getObjectType();
    v35 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v33);
    v37 = v36;
    v38 = swift_getObjectType();
    v39 = dispatch thunk of BookContentLayoutProviding.layout.getter(v38, v37);
    swift_unknownObjectRelease(v35);
    swift_unknownObjectRelease(v32);
    v40 = v39 == 2;
  }
  else
  {
    v40 = 0;
  }
  sub_10047971C((uint64_t)v7, v40, v27, v29);
  v42 = v41;
  v25(v7, v3);
  v43 = sub_10022A37C();
  v44 = (uint64_t *)(v2 + v14[25]);
  v45 = *v44;
  v46 = v44[1];
  v47 = type metadata accessor for ChromeStyle(0);
  v48 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_bridgeObjectRetain(v46);
  EnvironmentObject.init()(v47, v48);
  v49 = v67;
  sub_10045A0BC(v50, v51, v65, v45, v46, 0.0, 1, 0, v67, 44.0, v19, v24, v42, v43, 0.0, 0.0);
  v52 = v16[1];
  v70 = *v16;
  v71 = v52;
  v53 = State.wrappedValue.getter(&v72);
  v54 = v72;
  v55 = static Alignment.center.getter(v53);
  v56 = v68;
  sub_1005F1AD8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v68, 0.0, 1, v54, 0, v55, v57);
  sub_10002C8F0((uint64_t)v49, type metadata accessor for REScrubberView);
  v58 = *(_QWORD *)(v2 + v66);
  KeyPath = swift_getKeyPath(&unk_100713958);
  v70 = v58;
  v60 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v70, KeyPath, v60);
  swift_release(KeyPath);
  if (*(_BYTE *)(v58 + 281))
    v61 = 0.0;
  else
    v61 = 1.0;
  v62 = v69;
  sub_10000B5E4(v56, v69, &qword_1009D3D38);
  *(double *)(v62 + *(int *)(sub_10004CFD4(&qword_1009D3CE8) + 36)) = v61;
  return sub_100010960(v56, &qword_1009D3D38);
}

uint64_t sub_10022D07C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REActionMenuView(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = *a1;
  v14 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  sub_10002CD84(a2, (uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REActionMenuView);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1008F5368, v18 + 8, v16 | 7);
  sub_1002334B4((uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v17);
  *(_QWORD *)(v19 + v18) = v13;
  aBlock[4] = sub_100233F70;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F5380;
  v20 = _Block_copy(aBlock);
  swift_release(v31);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v24 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v4, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v28);
}

void sub_10022D308(uint64_t a1, double a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for REActionMenuView(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  *(double *)v7 = a2;
  v7[1] = v4;
  v7[2] = v5;
  v6 = sub_10004CFD4(&qword_1009D3CE0);
  State.wrappedValue.setter(v7, v6);
}

uint64_t sub_10022D374(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a2;
  v3 = sub_10004CFD4(&qword_1009D3C18);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D3C20);
  __chkstk_darwin(v6);
  v54 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D3C28);
  __chkstk_darwin(v8);
  v48 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_10004CFD4(&qword_1009D3C30);
  __chkstk_darwin(v49);
  v51 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10004CFD4(&qword_1009D3C38);
  __chkstk_darwin(v50);
  v47 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D3C40);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(int *)(type metadata accessor for REActionMenuView(0) + 80);
  v53 = a1;
  v16 = *sub_10003F198((_QWORD *)(a1 + v15), *(_QWORD *)(a1 + v15 + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v16 + 72);
  if (!Strong)
    goto LABEL_6;
  v18 = Strong;
  v19 = v3;
  v20 = *(_QWORD *)(v16 + 80);
  ObjectType = swift_getObjectType();
  v22 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v20);
  v24 = v23;
  v25 = swift_getObjectType();
  v26 = dispatch thunk of BookContentLayoutProviding.layout.getter(v25, v24);
  swift_unknownObjectRelease(v22);
  swift_unknownObjectRelease(v18);
  v27 = v26 == 2;
  v3 = v19;
  if (v27)
  {
    v28 = v8;
    v29 = (uint64_t)v14;
    if ((v52 & 1) != 0)
    {
      v30 = v47;
      sub_10022B9D4(1, v47);
      v31 = &qword_1009D3C38;
      v32 = v51;
      sub_10000B5E4(v30, v51, &qword_1009D3C38);
      v33 = v32;
      v34 = v49;
      v35 = 0;
    }
    else
    {
      v30 = v48;
      sub_10022BCC8(0, v48);
      v31 = &qword_1009D3C28;
      v32 = v51;
      sub_10000B5E4(v30, v51, &qword_1009D3C28);
      v33 = v32;
      v34 = v49;
      v35 = 1;
    }
    swift_storeEnumTagMultiPayload(v33, v34, v35);
    v41 = sub_100233910();
    v42 = sub_100233A18();
    _ConditionalContent<>.init(storage:)(v32, v50, v28, v41, v42);
    sub_100010960(v30, v31);
    v36 = &qword_1009D3C40;
    v43 = v54;
    sub_10000B5E4(v29, v54, &qword_1009D3C40);
    swift_storeEnumTagMultiPayload(v43, v6, 0);
    v44 = sub_1002338A4();
    v45 = sub_100233B20();
    _ConditionalContent<>.init(storage:)(v43, v12, v19, v44, v45);
    v40 = v29;
  }
  else
  {
LABEL_6:
    sub_10022AA44(v52 & 1, (uint64_t)v5);
    v36 = &qword_1009D3C18;
    v37 = v54;
    sub_10000B5E4((uint64_t)v5, v54, &qword_1009D3C18);
    swift_storeEnumTagMultiPayload(v37, v6, 1);
    v38 = sub_1002338A4();
    v39 = sub_100233B20();
    _ConditionalContent<>.init(storage:)(v37, v12, v3, v38, v39);
    v40 = (uint64_t)v5;
  }
  return sub_100010960(v40, v36);
}

uint64_t sub_10022D760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v4 = sub_10004CFD4(&qword_1009D3DD8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v32 - v8;
  v10 = type metadata accessor for REActionMenuView(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = sub_10004CFD4(&qword_1009D3DE0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v32 - v17;
  v19 = a1 + *(int *)(v10 + 52);
  v20 = *(_BYTE *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v33 = v20;
  v34 = v21;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v35);
  if (v35 == 1)
  {
    sub_10002CD84(a1, (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REActionMenuView);
    v22 = *(unsigned __int8 *)(v11 + 80);
    v23 = (v22 + 16) & ~v22;
    v24 = swift_allocObject(&unk_1008F53E0, v23 + v12, v22 | 7);
    v25 = sub_1002334B4((uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
    v32 = a2;
    __chkstk_darwin(v25);
    *(&v32 - 2) = a1;
    v26 = sub_10004CFD4(&qword_1009D3DF8);
    v27 = sub_1001F5558(&qword_1009D3E00, &qword_1009D3DF8, (void (*)(void))sub_100234230);
    Button.init(action:label:)(sub_1002341E0, v24, sub_100234228, &v32 - 4, v26, v27);
    a2 = v32;
    v28 = sub_10004CFD4(&qword_1009D3DE8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v18, 0, 1, v28);
  }
  else
  {
    v29 = sub_10004CFD4(&qword_1009D3DE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v18, 1, 1, v29);
  }
  sub_10022DDAC((uint64_t)v9);
  sub_10000B5E4((uint64_t)v18, (uint64_t)v16, &qword_1009D3DE0);
  sub_10000B5E4((uint64_t)v9, (uint64_t)v7, &qword_1009D3DD8);
  sub_10000B5E4((uint64_t)v16, a2, &qword_1009D3DE0);
  v30 = sub_10004CFD4(&qword_1009D3DF0);
  sub_10000B5E4((uint64_t)v7, a2 + *(int *)(v30 + 48), &qword_1009D3DD8);
  sub_100010960((uint64_t)v9, &qword_1009D3DD8);
  sub_100010960((uint64_t)v18, &qword_1009D3DE0);
  sub_100010960((uint64_t)v7, &qword_1009D3DD8);
  return sub_100010960((uint64_t)v16, &qword_1009D3DE0);
}

uint64_t sub_10022DA7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  _QWORD v5[3];
  char v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for REActionMenuView(0) + 64));
  KeyPath = swift_getKeyPath(&unk_1007139F8);
  v5[2] = v1;
  v6 = 1;
  v7 = v1;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_100234348, v5, (char *)&type metadata for () + 8, v3);
  return swift_release(KeyPath);
}

double sub_10022DB34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  double result;
  uint64_t v47;
  int v48;
  uint64_t KeyPath;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  __int128 v58;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v53 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v8 = Text.foregroundColor(_:)(v7, 0x424544204C525543, 0xED00003E2D204755, 0, _swiftEmptyArrayStorage);
  v10 = v9;
  LODWORD(v12) = v11;
  v14 = v13;
  swift_release(v7);
  v52 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v51 = static Edge.Set.all.getter();
  v50 = static Font.title.getter();
  KeyPath = swift_getKeyPath(&unk_1007139C8);
  v15 = type metadata accessor for REActionMenuView(0);
  v16 = GeometryProxy.size.getter(v15);
  v18 = v17;
  sub_100667DF8((uint64_t)v6);
  v19 = *sub_10003F198((_QWORD *)(a1 + *(int *)(v15 + 80)), *(_QWORD *)(a1 + *(int *)(v15 + 80) + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v19 + 72);
  if (Strong)
  {
    v21 = Strong;
    v48 = v12;
    v12 = v4;
    v22 = v10;
    v23 = v8;
    v24 = v14;
    v25 = *(_QWORD *)(v19 + 80);
    ObjectType = swift_getObjectType();
    v27 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v25);
    v29 = v28;
    v30 = swift_getObjectType();
    v31 = dispatch thunk of BookContentLayoutProviding.layout.getter(v30, v29);
    swift_unknownObjectRelease(v27);
    swift_unknownObjectRelease(v21);
    v32 = v31 == 2;
    v14 = v24;
    v8 = v23;
    v10 = v22;
    v4 = v12;
    LOBYTE(v12) = v48;
    v33 = v32;
  }
  else
  {
    v33 = 0;
  }
  sub_10047971C((uint64_t)v6, v33, v16, v18);
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v4);
  v36 = sub_10022A37C();
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(&v54, v35, 0, *(_QWORD *)&v36, 0, v38, v39);
  v40 = v54;
  v41 = v55;
  v42 = v56;
  v43 = v57;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  v44 = v52;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v44;
  *(_BYTE *)(a2 + 40) = v51;
  v45 = v50;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_QWORD *)(a2 + 56) = v45;
  *(_QWORD *)(a2 + 64) = v40;
  *(_BYTE *)(a2 + 72) = v41;
  *(_QWORD *)(a2 + 80) = v42;
  *(_BYTE *)(a2 + 88) = v43;
  result = *(double *)&v58;
  *(_OWORD *)(a2 + 96) = v58;
  return result;
}

uint64_t sub_10022DDAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  int v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  int v50;
  int v51;
  _QWORD v52[3];

  v2 = v1;
  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for REActionMenuView(0);
  v9 = v8[16];
  v10 = *(_QWORD *)(v1 + v9);
  KeyPath = swift_getKeyPath(&unk_100713A20);
  v52[0] = v10;
  v12 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v52, KeyPath, v12);
  swift_release(KeyPath);
  swift_beginAccess(v10 + 298, v52, 0, 0);
  v13 = *(unsigned __int8 *)(v1 + v8[24]);
  v50 = *(unsigned __int8 *)(v10 + 298);
  v51 = v13;
  v15 = GeometryProxy.size.getter(v14);
  v17 = v16;
  sub_100667DF8((uint64_t)v7);
  v18 = *sub_10003F198((_QWORD *)(v2 + v8[20]), *(_QWORD *)(v2 + v8[20] + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v18 + 72);
  if (Strong)
  {
    v20 = Strong;
    v21 = *(_QWORD *)(v18 + 80);
    ObjectType = swift_getObjectType();
    v23 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v21);
    v25 = v24;
    v26 = swift_getObjectType();
    v27 = dispatch thunk of BookContentLayoutProviding.layout.getter(v26, v25);
    swift_unknownObjectRelease(v23);
    swift_unknownObjectRelease(v20);
    v28 = v27 == 2;
  }
  else
  {
    v28 = 0;
  }
  sub_10047971C((uint64_t)v7, v28, v15, v17);
  v30 = v29;
  v31 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v33 = GeometryProxy.size.getter(v31);
  v35 = v34;
  if (qword_1009CE5F8 != -1)
    v32 = swift_once(&qword_1009CE5F8, sub_1004793A8);
  v36 = *(double *)&qword_1009E5128;
  if (qword_1009CE608 != -1)
    v32 = swift_once(&qword_1009CE608, sub_1004793C8);
  v37 = 3;
  if (v50)
    v37 = 4;
  v38 = 2;
  if (v50)
    v38 = 3;
  if (!v51)
    v37 = v38;
  if (v35 >= v33)
    v39 = v33;
  else
    v39 = v35;
  v40 = *(double *)&qword_1009E5138;
  if (v39 >= *(double *)&qword_1009E5138)
    v41 = v36;
  else
    v41 = v36 * 0.85;
  v42 = floor((v30 - v41 * (double)v37) / (double)v37);
  v43 = *(_QWORD *)(v2 + v9);
  v45 = GeometryProxy.size.getter(v32);
  if (v46 < v45)
    v45 = v46;
  if (v45 >= v40)
    v47 = *(double *)&qword_1009E5128;
  else
    v47 = *(double *)&qword_1009E5128 * 0.85;
  *(_QWORD *)a1 = static VerticalAlignment.center.getter(v44);
  *(double *)(a1 + 8) = v47;
  *(_BYTE *)(a1 + 16) = 0;
  v48 = sub_10004CFD4(&qword_1009D3E28);
  return sub_10022E0B8(0xD000000000000013, COERCE_DOUBLE(0x80000001007B8500), v2, v43, (char *)(a1 + *(int *)(v48 + 44)), v42);
}

uint64_t sub_10022E0B8@<X0>(uint64_t a1@<X0>, double a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>, double a6@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  double v50;
  uint64_t v51;
  uint64_t Strong;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  _BYTE *v68;
  char *v69;
  uint64_t v70;
  uint64_t KeyPath;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjCClassFromMetadata;
  void *v80;
  id v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void *v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  double v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  void (*v130)(uint64_t, uint64_t, uint64_t, uint64_t);
  BOOL v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t, uint64_t);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  int *v163;
  void (*v164)(uint64_t, uint64_t);
  void (*v166)(char *, char *, _QWORD *);
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  _QWORD *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _BYTE *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD v220[5];
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  double v226;
  double v227;
  double v228;
  double v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t (*v232)(uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  __int128 v237;
  double v238;
  double v239;
  _QWORD v240[5];

  v188 = a4;
  v215 = a1;
  v205 = a5;
  v210 = (_BYTE *)(a4 + 264);
  v196 = sub_10004CFD4(&qword_1009D3E30);
  __chkstk_darwin(v196);
  v195 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D3E38);
  v200 = *(_QWORD *)(v10 - 8);
  v201 = v10;
  __chkstk_darwin(v10);
  v199 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_10004CFD4(&qword_1009D3E40);
  v12 = __chkstk_darwin(v198);
  v204 = (uint64_t)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v197 = (char *)&v166 - v15;
  __chkstk_darwin(v14);
  v203 = (uint64_t)&v166 - v16;
  v186 = sub_10004CFD4(&qword_1009D3E48);
  __chkstk_darwin(v186);
  v185 = (char *)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009D3E50);
  v191 = *(_QWORD *)(v18 - 8);
  v192 = v18;
  __chkstk_darwin(v18);
  v184 = (char *)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009D3E58);
  v21 = __chkstk_darwin(v20);
  v202 = (uint64_t)&v166 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v217 = (uint64_t)&v166 - v23;
  v183 = sub_10004CFD4(&qword_1009D3E60);
  v24 = __chkstk_darwin(v183);
  v179 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v180 = (char *)&v166 - v27;
  __chkstk_darwin(v26);
  v182 = (char *)&v166 - v28;
  v29 = sub_10004CFD4(&qword_1009D3E68);
  v30 = *(_QWORD *)(v29 - 8);
  v206 = v29;
  v207 = v30;
  __chkstk_darwin(v29);
  v181 = (char *)&v166 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = (_QWORD *)type metadata accessor for Locale(0);
  v173 = *(v178 - 1);
  v32 = __chkstk_darwin(v178);
  v175 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v177 = (char *)&v166 - v34;
  v176 = type metadata accessor for String.LocalizationValue(0);
  v189 = *(_QWORD *)(v176 - 8);
  v35 = __chkstk_darwin(v176);
  v190 = (char *)&v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v174 = (char *)&v166 - v37;
  v38 = sub_10004CFD4(&qword_1009D3E70);
  v39 = __chkstk_darwin(v38);
  v194 = (uint64_t)&v166 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v219 = (uint64_t)&v166 - v41;
  v214 = sub_10004CFD4(&qword_1009D3E78);
  __chkstk_darwin(v214);
  v43 = (char *)&v166 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = sub_10004CFD4(&qword_1009D3E80);
  v44 = *(_QWORD *)(v216 - 8);
  v45 = __chkstk_darwin(v216);
  v47 = (char *)&v166 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v49 = (char *)&v166 - v48;
  v218 = a3;
  v50 = sub_10022A37C();
  v187 = type metadata accessor for REActionMenuView(0);
  v51 = a3 + *(int *)(v187 + 84);
  Strong = swift_unknownObjectWeakLoadStrong(v51);
  v212 = v51;
  v53 = *(_QWORD *)(v51 + 8);
  v54 = type metadata accessor for ChromeStyle(0);
  v55 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_bridgeObjectRetain(*(_QWORD *)&a2);
  v208 = v55;
  v209 = v54;
  EnvironmentObject.init()(v54, v55);
  v223 = v56;
  v224 = v57;
  v231 = 0;
  v58 = swift_unknownObjectWeakInit(&v230, 0);
  v59 = v215;
  v225 = v215;
  v226 = a2;
  v60 = 1;
  LOBYTE(v227) = 1;
  v228 = a6;
  v229 = v50;
  v231 = v53;
  swift_unknownObjectWeakAssign(v58, Strong);
  swift_unknownObjectRelease(Strong);
  v232 = sub_10022F1A0;
  v233 = 0;
  sub_10023436C((uint64_t)&v223, (uint64_t)&v234);
  v61 = sub_1002343A8();
  View.accessibilityIdentifier(_:)(0x6572616853, 0xE500000000000000, &type metadata for MenuIconItem, v61);
  sub_1002343EC((uint64_t)&v234);
  v220[2] = v59;
  *(double *)&v220[3] = a2;
  v62 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v63 = sub_100234428();
  v64 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v213 = v62;
  v65 = v63;
  v66 = v207;
  v211 = v64;
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_100234420, v220, v214, v62, v65);
  sub_100010960((uint64_t)v43, &qword_1009D3E78);
  v214 = (uint64_t)v49;
  v215 = v44;
  v67 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  v68 = v210;
  v193 = v47;
  v69 = v47;
  v70 = v188;
  v67(v49, v69, v216);
  if (*(_BYTE *)(v218 + *(int *)(v187 + 96)) == 1)
  {
    KeyPath = swift_getKeyPath(&unk_100713AF0);
    v72 = v70 + OBJC_IVAR____TtC5Books17REActionMenuState___observationRegistrar;
    v234 = v70;
    v169 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    v172 = v72;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v234, KeyPath, v169);
    swift_release(KeyPath);
    v168 = v68 + 32;
    swift_beginAccess(v68 + 32, &v221, 0, 0);
    if (v68[32] == 1)
    {
      v73 = v174;
      v74 = String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
      v75 = v177;
      static Locale.current.getter(v74);
      v76 = v190;
      v77 = v176;
      v187 = *(_QWORD *)(v189 + 16);
      ((void (*)(char *, char *, uint64_t))v187)(v190, v73, v176);
      v78 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v78);
      v80 = (void *)objc_opt_self(NSBundle);
      v171 = ObjCClassFromMetadata;
      v81 = objc_msgSend(v80, "bundleForClass:", ObjCClassFromMetadata);
      v82 = v173;
      v83 = v175;
      v84 = v178;
      v166 = *(void (**)(char *, char *, _QWORD *))(v173 + 16);
      v166(v175, v75, v178);
      v85 = String.init(localized:table:bundle:locale:comment:)(v76, 0, 0, v81, v83, "Accessibility label for the orientation lock button being in the on state in the action menu.", 93, 2);
    }
    else
    {
      v73 = v174;
      v87 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
      v75 = v177;
      static Locale.current.getter(v87);
      v88 = v190;
      v77 = v176;
      v187 = *(_QWORD *)(v189 + 16);
      ((void (*)(char *, char *, uint64_t))v187)(v190, v73, v176);
      v89 = type metadata accessor for BundleFinder();
      v90 = swift_getObjCClassFromMetadata(v89);
      v91 = (void *)objc_opt_self(NSBundle);
      v171 = v90;
      v92 = objc_msgSend(v91, "bundleForClass:", v90);
      v82 = v173;
      v83 = v175;
      v84 = v178;
      v166 = *(void (**)(char *, char *, _QWORD *))(v173 + 16);
      v166(v175, v75, v178);
      v85 = String.init(localized:table:bundle:locale:comment:)(v88, 0, 0, v92, v83, "Accessibility label for the orientation lock button being in the off state in the action menu.", 94, 2);
    }
    v167 = v85;
    v170 = v86;
    v178 = *(_QWORD **)(v82 + 8);
    ((void (*)(char *, _QWORD *))v178)(v75, v84);
    v189 = *(_QWORD *)(v189 + 8);
    ((void (*)(char *, uint64_t))v189)(v73, v77);
    v93 = swift_getKeyPath(&unk_100713AF0);
    v234 = v70;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v234, v93, v169);
    swift_release(v93);
    LOBYTE(v93) = *v168;
    v94 = sub_10022A37C();
    v95 = v212;
    v96 = swift_unknownObjectWeakLoadStrong(v212);
    v97 = *(_QWORD *)(v95 + 8);
    LOBYTE(v234) = v93;
    v235 = 0xD000000000000012;
    v236 = 0x80000001007B8580;
    v237 = xmmword_100713690;
    v238 = a6;
    v239 = v94;
    v240[1] = v97;
    swift_unknownObjectWeakInit(v240, v96);
    swift_retain(v70);
    swift_unknownObjectRelease(v96);
    v240[2] = sub_10023475C;
    v240[3] = v70;
    v98 = sub_100234760();
    v99 = (uint64_t)v179;
    View.accessibilityIdentifier(_:)(0xD000000000000010, 0x80000001007B85A0, &type metadata for MenuMicaItem, v98);
    sub_1002347A4(&v234);
    v100 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B85A0);
    static Locale.current.getter(v100);
    v101 = v190;
    ((void (*)(char *, char *, uint64_t))v187)(v190, v73, v77);
    type metadata accessor for BundleFinder();
    v102 = (void *)objc_opt_self(NSBundle);
    v103 = objc_msgSend(v102, "bundleForClass:", v171);
    v166(v83, v75, v84);
    v104 = String.init(localized:table:bundle:locale:comment:)(v101, 0, 0, v103, v83, "Accessibility label for an orientation lock button", 50, 2);
    v106 = v105;
    ((void (*)(char *, _QWORD *))v178)(v75, v84);
    ((void (*)(char *, uint64_t))v189)(v73, v77);
    v234 = v104;
    v235 = v106;
    v107 = sub_1001F2108();
    v108 = (uint64_t)v180;
    v109 = v183;
    ModifiedContent<>.accessibilityLabel<A>(_:)(&v234, v183, &type metadata for String, v107);
    swift_bridgeObjectRelease(v106);
    sub_100010960(v99, &qword_1009D3E60);
    v110 = v170;
    v234 = v167;
    v235 = v170;
    v111 = (uint64_t)v182;
    ModifiedContent<>.accessibilityValue<A>(_:)(&v234, v109, &type metadata for String, v107);
    sub_100010960(v108, &qword_1009D3E60);
    swift_bridgeObjectRelease(v110);
    v112 = sub_1002347E0();
    v113 = v181;
    View.accessibilityShowsLargeContentViewer<A>(_:)(sub_1002347D8, v70, v109, v213, v112);
    sub_100010960(v111, &qword_1009D3E60);
    v66 = v207;
    (*(void (**)(uint64_t, char *, uint64_t))(v207 + 32))(v219, v113, v206);
    v60 = 0;
    v68 = v210;
  }
  v114 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v219, v60, 1, v206);
  v115 = swift_getKeyPath(&unk_100713A20);
  v234 = v70;
  v116 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v234, v115, v116);
  swift_release(v115);
  swift_beginAccess(v68 + 34, &v222, 0, 0);
  v118 = v191;
  v117 = v192;
  if (v68[34] == 1)
  {
    swift_retain(v70);
    v119 = sub_10022A37C();
    v120 = v212;
    v121 = swift_unknownObjectWeakLoadStrong(v212);
    v122 = *(double *)(v120 + 8);
    EnvironmentObject.init()(v209, v208);
    v223 = v123;
    v224 = v124;
    v229 = 0.0;
    v125 = swift_unknownObjectWeakInit(&v228, 0);
    v225 = v70;
    v226 = a6;
    v227 = v119;
    v229 = v122;
    swift_unknownObjectWeakAssign(v125, v121);
    swift_unknownObjectRelease(v121);
    sub_10023461C((uint64_t)&v223, (uint64_t)&v234);
    v126 = sub_100234658();
    v127 = (uint64_t)v185;
    View.accessibilityIdentifier(_:)(0x69754720656E694CLL, 0xEA00000000006564, &type metadata for MenuReadingLoupeItem, v126);
    sub_10023469C((uint64_t)&v234);
    v128 = sub_1002346D0();
    v129 = v184;
    View.accessibilityShowsLargeContentViewer<A>(_:)(sub_10022F6C0, 0, v186, v213, v128);
    sub_100010960(v127, &qword_1009D3E48);
    (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v217, v129, v117);
    v114 = 0;
  }
  v130 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56);
  v131 = 1;
  v130(v217, v114, 1, v117);
  swift_retain(v70);
  v132 = sub_10022A37C();
  v133 = v212;
  v134 = swift_unknownObjectWeakLoadStrong(v212);
  v135 = *(_QWORD *)(v133 + 8);
  EnvironmentObject.init()(v209, v208);
  v223 = v136;
  v224 = v137;
  v231 = 0;
  v138 = swift_unknownObjectWeakInit(&v230, 0);
  v225 = v70;
  v228 = a6;
  v229 = v132;
  v231 = v135;
  swift_unknownObjectWeakAssign(v138, v134);
  v139 = swift_getKeyPath(&unk_100713A48);
  v234 = v70;
  swift_retain(v70);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v234, v139, v116);
  swift_release(v139);
  LOBYTE(v135) = *v68;
  swift_release(v70);
  swift_unknownObjectRelease(v134);
  LOBYTE(v226) = v135;
  v227 = 0.0;
  sub_1002344B4((uint64_t)&v223, (uint64_t)&v234);
  v140 = sub_1002344F0();
  v141 = (uint64_t)v195;
  View.accessibilityIdentifier(_:)(0x6B72616D6B6F6F42, 0xE800000000000000, &type metadata for MenuBookmarkItem, v140);
  sub_100234534((uint64_t)&v234);
  v142 = sub_100234568();
  v143 = v199;
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_10022F8BC, 0, v196, v213, v142);
  sub_100010960(v141, &qword_1009D3E30);
  v144 = swift_getKeyPath(&unk_100713A70);
  v234 = v70;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v234, v144, v116);
  swift_release(v144);
  swift_beginAccess(v70 + 216, &v234, 0, 0);
  v145 = *(_QWORD *)(v70 + 216);
  if (v145 != _s5Books17REActionMenuStateC9pageCountSivpfi_0())
  {
    v146 = swift_getKeyPath(&unk_100713A98);
    v223 = v70;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v223, v146, v116);
    swift_release(v146);
    v147 = *(_QWORD *)(v70 + 256);
    v131 = v147 == _s5Books17REActionMenuStateC9pageCountSivpfi_0();
  }
  v148 = swift_getKeyPath(&unk_100713AC0);
  v149 = swift_allocObject(&unk_1008F5408, 17, 7);
  *(_BYTE *)(v149 + 16) = v131;
  v151 = v200;
  v150 = v201;
  v152 = (uint64_t)v197;
  (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v143, v201);
  v153 = (uint64_t *)(v152 + *(int *)(v198 + 36));
  *v153 = v148;
  v153[1] = (uint64_t)sub_100234614;
  v153[2] = v149;
  (*(void (**)(char *, uint64_t))(v151 + 8))(v143, v150);
  v154 = v203;
  sub_100025B3C(v152, v203, &qword_1009D3E40);
  v155 = *(void (**)(char *, uint64_t, uint64_t))(v215 + 16);
  v156 = v193;
  v157 = v216;
  v155(v193, v214, v216);
  v158 = v194;
  sub_10000B5E4(v219, v194, &qword_1009D3E70);
  v159 = v217;
  v160 = v202;
  sub_10000B5E4(v217, v202, &qword_1009D3E58);
  v161 = v204;
  sub_10000B5E4(v154, v204, &qword_1009D3E40);
  v162 = v205;
  v155(v205, (uint64_t)v156, v157);
  v163 = (int *)sub_10004CFD4(&qword_1009D3EB0);
  sub_10000B5E4(v158, (uint64_t)&v162[v163[12]], &qword_1009D3E70);
  sub_10000B5E4(v160, (uint64_t)&v162[v163[16]], &qword_1009D3E58);
  sub_10000B5E4(v161, (uint64_t)&v162[v163[20]], &qword_1009D3E40);
  sub_100010960(v154, &qword_1009D3E40);
  sub_100010960(v159, &qword_1009D3E58);
  sub_100010960(v219, &qword_1009D3E70);
  v164 = *(void (**)(uint64_t, uint64_t))(v215 + 8);
  v164(v214, v157);
  sub_100010960(v161, &qword_1009D3E40);
  sub_100010960(v160, &qword_1009D3E58);
  sub_100010960(v158, &qword_1009D3E70);
  return ((uint64_t (*)(char *, uint64_t))v164)(v156, v157);
}

uint64_t sub_10022F1A0(uint64_t result, uint64_t a2)
{
  uint64_t ObjectType;

  if (result)
  {
    ObjectType = swift_getObjectType(result, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(ObjectType, a2);
  }
  return result;
}

uint64_t sub_10022F1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD v29[3];

  v27[1] = a3;
  v28 = a1;
  v4 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v27 - v9;
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)v27 - v16;
  v18 = String.LocalizationValue.init(stringLiteral:)(0x6572616853, 0xE500000000000000);
  static Locale.current.getter(v18);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  v19 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v19);
  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v22 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v21, v8, "Accessibility string for a share button", 39, 2);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  v29[0] = v22;
  v29[1] = v24;
  v25 = sub_1001F2108();
  swift_bridgeObjectRetain(a2);
  return Label<>.init<A>(_:systemImage:)(v29, v28, a2, &type metadata for String, v25);
}

uint64_t sub_10022F3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  _QWORD v38[3];

  v36 = a2;
  v3 = type metadata accessor for Locale(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v33 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v34 = *(_QWORD *)(v17 - 8);
  v35 = v17;
  __chkstk_darwin(v17);
  v33 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B8660);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v23 = String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, v22, v7, "Accessibility string for an orientation lock button", 51, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v38[0] = v23;
  v38[1] = v25;
  KeyPath = swift_getKeyPath(&unk_100713AF0);
  v37[0] = a1;
  v27 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v37, KeyPath, v27);
  swift_release(KeyPath);
  swift_beginAccess(a1 + 296, v37, 0, 0);
  if (*(_BYTE *)(a1 + 296))
    v28 = 0x746F722E6B636F6CLL;
  else
    v28 = 0xD000000000000012;
  if (*(_BYTE *)(a1 + 296))
    v29 = 0xED00006E6F697461;
  else
    v29 = 0x80000001007B86C0;
  v30 = sub_1001F2108();
  v31 = v33;
  Label<>.init<A>(_:systemImage:)(v38, v28, v29, &type metadata for String, v30);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v36, v31, v35);
}

uint64_t sub_10022F6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v24[3];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v24[-1] - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v24[-1] - v12;
  v14 = String.LocalizationValue.init(stringLiteral:)(0x69754720656E694CLL, 0xEA00000000006564);
  static Locale.current.getter(v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v17, v4, "Accessibility string for a line guide button", 44, 2);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v24[0] = v18;
  v24[1] = v20;
  v21 = sub_1001F2108();
  return Label<>.init<A>(_:systemImage:)(v24, 0xD000000000000011, 0x80000001007B8710, &type metadata for String, v21);
}

uint64_t sub_10022F8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v24[3];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v24[-1] - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v24[-1] - v12;
  v14 = String.LocalizationValue.init(stringLiteral:)(0x6B72616D6B6F6F42, 0xE800000000000000);
  static Locale.current.getter(v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v17, v4, "Accessibility string for a bookmark button", 42, 2);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v24[0] = v18;
  v24[1] = v20;
  v21 = sub_1001F2108();
  return Label<>.init<A>(_:systemImage:)(v24, 0x6B72616D6B6F6F62, 0xED00006C6C69662ELL, &type metadata for String, v21);
}

void sub_10022FAC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,__int128 *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  _QWORD *v60;
  _QWORD v62[5];
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  sub_100025B3C(a1, a9, &qword_1009D26A0);
  v36 = (int *)type metadata accessor for REActionMenuView(0);
  sub_100025B3C(a2, a9 + v36[5], &qword_1009D26A0);
  sub_100025B3C(a3, a9 + v36[6], &qword_1009D39F8);
  sub_100025B3C(a4, a9 + v36[7], (uint64_t *)&unk_1009D8230);
  sub_100025B3C(a5, a9 + v36[8], &qword_1009D3A00);
  v37 = (_QWORD *)(a9 + v36[9]);
  *v37 = a6;
  v37[1] = a7;
  v38 = a9 + v36[10];
  *(double *)v62 = a10;
  *(double *)&v62[1] = a11;
  *(double *)&v62[2] = a12;
  *(double *)&v62[3] = a13;
  type metadata accessor for UIEdgeInsets(0);
  State.init(wrappedValue:)(&v63, v62, v39);
  v40 = v65;
  v41 = v64;
  *(_OWORD *)v38 = v63;
  *(_OWORD *)(v38 + 16) = v41;
  *(_QWORD *)(v38 + 32) = v40;
  v42 = (_QWORD *)(a9 + v36[11]);
  *(double *)v62 = a14;
  State.init(wrappedValue:)(&v63, v62, &type metadata for CGFloat);
  v43 = *((_QWORD *)&v63 + 1);
  *v42 = v63;
  v42[1] = v43;
  v44 = a9 + v36[12];
  sub_100025B3C(a8, (uint64_t)v62, &qword_1009D4AD0);
  v45 = sub_10004CFD4(&qword_1009D4AD0);
  State.init(wrappedValue:)(&v63, v62, v45);
  v46 = v65;
  v47 = v66;
  v48 = v64;
  *(_OWORD *)v44 = v63;
  *(_OWORD *)(v44 + 16) = v48;
  *(_BYTE *)(v44 + 32) = v46;
  *(_QWORD *)(v44 + 40) = v47;
  v49 = a9 + v36[13];
  LOBYTE(v62[0]) = a15;
  v50 = State.init(wrappedValue:)(&v63, v62, &type metadata for Bool);
  v51 = *((_QWORD *)&v63 + 1);
  *(_BYTE *)v49 = v63;
  *(_QWORD *)(v49 + 8) = v51;
  v52 = AccessibilityFocusState.init<>()(v50);
  AccessibilityFocusState.init<>()(v52);
  *(_QWORD *)(a9 + v36[16]) = a16;
  *(_QWORD *)(a9 + v36[17]) = a17;
  swift_weakInit(a9 + v36[18], a18);
  swift_release(a18);
  v53 = a9 + v36[19];
  *(_QWORD *)(v53 + 8) = a20;
  swift_unknownObjectWeakInit(v53);
  swift_unknownObjectRelease(a19);
  sub_100022840(a21, a9 + v36[20]);
  v54 = a9 + v36[21];
  *(_QWORD *)(v54 + 8) = a23;
  swift_unknownObjectWeakInit(v54);
  swift_unknownObjectRelease(a22);
  v55 = a9 + v36[22];
  v56 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v55, a24, v56);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001CLL, 0x80000001007B84E0);
  v57 = v36[24];
  v58 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v59 = objc_msgSend(v58, "userInterfaceIdiom");

  *(_BYTE *)(a9 + v57) = v59 == 0;
  v60 = (_QWORD *)(a9 + v36[25]);
  *v60 = 0x6C75622E7473696CLL;
  v60[1] = 0xEB0000000074656CLL;
}

uint64_t type metadata accessor for REActionMenuView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D3A70;
  if (!qword_1009D3A70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for REActionMenuView);
  return result;
}

uint64_t sub_10022FEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = type metadata accessor for VStack(255, v3, v4);
  v6 = type metadata accessor for HStack(255, v3, v4);
  v7 = type metadata accessor for _ConditionalContent(255, v5, v6);
  v8 = type metadata accessor for Group(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - v13;
  v23 = v3;
  v24 = v4;
  v25 = v2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v5);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v6);
  v27 = WitnessTable;
  v28 = v16;
  v17 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
  Group<A>.init(content:)(sub_1002354AC, v22, v7, v17);
  v26 = v17;
  swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v8);
  sub_100344038((uint64_t)v12, v8, (uint64_t)v14);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  sub_100341C00((uint64_t)v14, v8, v21);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

uint64_t sub_100230060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t WitnessTable;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a4;
  v7 = type metadata accessor for HStack(0, a2, a3);
  v38 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v39 = (uint64_t)&v37 - v11;
  v12 = type metadata accessor for VStack(0, a2, a3);
  v37 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v37 - v16;
  v18 = type metadata accessor for _ConditionalContent(0, v12, v7);
  v42 = *(_QWORD *)(v18 - 8);
  v43 = v18;
  v19 = __chkstk_darwin(v18);
  v41 = (char *)&v37 - v20;
  v40 = &v37;
  LOBYTE(v20) = *(_BYTE *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(unsigned __int8 *)(a1 + 16);
  v46 = a2;
  v47 = a3;
  v48 = a1;
  if ((v20 & 1) != 0)
  {
    v29 = static HorizontalAlignment.center.getter(v19);
    VStack.init(alignment:spacing:content:)(v29, v21, v22, sub_1002355A0, v45, a2, a3);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v12);
    sub_100344038((uint64_t)v15, v12, (uint64_t)v17);
    v31 = *(void (**)(char *, uint64_t))(v37 + 8);
    v31(v15, v12);
    sub_100341C00((uint64_t)v17, v12, (uint64_t)v15);
    v32 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
    v28 = (uint64_t)v41;
    sub_100265E68((uint64_t)v15, v12, v7, WitnessTable, v32);
    v31(v15, v12);
    v31(v17, v12);
  }
  else
  {
    v23 = static VerticalAlignment.center.getter(v19);
    HStack.init(alignment:spacing:content:)(v23, v21, v22, sub_1002354B8, v45, a2, a3);
    v24 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
    v25 = v39;
    sub_100344038((uint64_t)v10, v7, v39);
    v26 = *(void (**)(char *, uint64_t))(v38 + 8);
    v26(v10, v7);
    sub_100341C00(v25, v7, (uint64_t)v10);
    v27 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v12);
    v28 = (uint64_t)v41;
    sub_100265F2C((uint64_t)v10, v12, v7, v27, v24);
    v26(v10, v7);
    v26((char *)v25, v7);
  }
  v33 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v12);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
  v49 = v33;
  v50 = v34;
  v35 = v43;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v43);
  sub_100341C00(v28, v35, v44);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v28, v35);
}

uint64_t sub_1002303CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v14 - v10;
  (*(void (**)(void))(v9 + 24))();
  sub_100344038((uint64_t)v8, a2, (uint64_t)v11);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_100341C00((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

uint64_t sub_1002304A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10022FEC0(a1, a2);
}

uint64_t sub_1002304DC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  double v30;
  double v31;
  uint64_t v32;
  char *v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v55 = a5;
  v57 = a4;
  v58 = a3;
  v56 = a1;
  v52 = a6;
  v7 = sub_10004CFD4(&qword_1009D3F80);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D3F88);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D3F90);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_10004CFD4(&qword_1009D3F98);
  __chkstk_darwin(v54);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10004CFD4(&qword_1009D3FA0);
  __chkstk_darwin(v53);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10004CFD4(&qword_1009D3FA8);
  v20 = __chkstk_darwin(v50);
  v51 = (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 1.0;
  if ((a2 & 1) != 0)
    v23 = 1.0;
  else
    v23 = 0.77;
  v24 = static UnitPoint.center.getter(v20);
  v26 = v25;
  v27 = sub_10004CFD4(qword_1009D3FB0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v9, v56, v27);
  v29 = &v9[*(int *)(v7 + 36)];
  *(double *)v29 = v23;
  *((double *)v29 + 1) = v23;
  *((double *)v29 + 2) = v24;
  *((_QWORD *)v29 + 3) = v26;
  v30 = 0.0;
  v31 = 0.0;
  if ((a2 & 1) == 0)
  {
    v32 = v57 - v58;
    if (__OFSUB__(v57, v58))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v32 <= 0)
      v31 = 12.5;
    else
      v31 = (double)v32 * 25.0;
  }
  sub_10000B5E4((uint64_t)v9, (uint64_t)v12, &qword_1009D3F80);
  v33 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v33 = 0;
  *((double *)v33 + 1) = v31;
  sub_100010960((uint64_t)v9, &qword_1009D3F80);
  v34 = 32.0;
  if ((v55 & 1) != 0)
    v34 = -32.0;
  if ((a2 & 1) == 0)
    v30 = v34;
  sub_10000B5E4((uint64_t)v12, (uint64_t)v15, &qword_1009D3F88);
  v35 = &v15[*(int *)(v13 + 36)];
  *(double *)v35 = v30;
  *((_QWORD *)v35 + 1) = 0;
  sub_100010960((uint64_t)v12, &qword_1009D3F88);
  result = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 250.0, 22.0, 0.0);
  v36 = result;
  v37 = v58;
  v38 = v58;
  if ((a2 & 1) == 0)
  {
    v39 = v58 + 1;
    if (!__OFADD__(v58, 1))
    {
      v40 = __OFSUB__(v57, v39);
      v38 = v57 - v39;
      if (!v40)
      {
        v22 = 0.0;
        goto LABEL_17;
      }
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_17:
  v41 = Animation.delay(_:)(result, (double)v38 * 0.05);
  swift_release(v36);
  sub_10000B5E4((uint64_t)v15, (uint64_t)v17, &qword_1009D3F90);
  v42 = &v17[*(int *)(v54 + 36)];
  *(_QWORD *)v42 = v41;
  v42[8] = a2 & 1;
  sub_100010960((uint64_t)v15, &qword_1009D3F90);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v19, &qword_1009D3F98);
  *(double *)&v19[*(int *)(v53 + 36)] = v22;
  v43 = sub_100010960((uint64_t)v17, &qword_1009D3F98);
  result = static Animation.timingCurve(_:_:_:_:duration:)(v43, 0.33, 0.0, 0.0, 0.67, 0.18);
  v44 = result;
  if ((a2 & 1) != 0)
  {
LABEL_20:
    v46 = Animation.delay(_:)(result, (double)v37 * 0.05);
    swift_release(v44);
    v47 = v51;
    sub_10000B5E4((uint64_t)v19, v51, &qword_1009D3FA0);
    v48 = v47 + *(int *)(v50 + 36);
    *(_QWORD *)v48 = v46;
    *(_BYTE *)(v48 + 8) = a2 & 1;
    sub_100010960((uint64_t)v19, &qword_1009D3FA0);
    return sub_100025B3C(v47, v52, &qword_1009D3FA8);
  }
  v45 = v37 + 1;
  if (__OFADD__(v37, 1))
    goto LABEL_24;
  v37 = v57 - v45;
  if (!__OFSUB__(v57, v45))
    goto LABEL_20;
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100230958()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_100230970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002304DC(a1, *(_BYTE *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

double sub_100230988(double *a1, void (*a2)(double *__return_ptr))
{
  double result;
  double v4;

  a2(&v4);
  result = v4 + *a1;
  *a1 = result;
  return result;
}

uint64_t *sub_1002309C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void **v55;
  void *v56;
  void *v57;
  char *v58;
  char *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  id v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t *v117;
  int *v118;
  void *v119;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for UserInterfaceSizeClass(0);
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        v11 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        v14 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56);
        v11 = 1;
        v14(a1, 0, 1, v8);
      }
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v11);
    v15 = a3[5];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v15, v7) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v22 = v16;
      v23 = v7;
      v24 = 1;
    }
    else
    {
      v21 = *v17;
      *v16 = *v17;
      swift_retain(v21);
      v22 = v16;
      v23 = v7;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
    v25 = a3[6];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = v26;
      v31 = v28;
      v32 = 1;
    }
    else
    {
      v33 = *v27;
      *v26 = *v27;
      swift_retain(v33);
      v30 = v26;
      v31 = v28;
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v31, v32);
    v34 = a3[7];
    v35 = (uint64_t *)((char *)a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
      v39 = v35;
      v40 = v37;
      v41 = 1;
    }
    else
    {
      v42 = *v36;
      *v35 = *v36;
      swift_retain(v42);
      v39 = v35;
      v40 = v37;
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    v43 = a3[8];
    v44 = (uint64_t *)((char *)a1 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    v46 = sub_10004CFD4(&qword_1009D3A08);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = v44;
      v49 = v46;
      v50 = 1;
    }
    else
    {
      v51 = *v45;
      *v44 = *v45;
      swift_retain(v51);
      v48 = v44;
      v49 = v46;
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
    v52 = a3[9];
    v53 = a3[10];
    v54 = (uint64_t *)((char *)a1 + v52);
    v55 = (void **)((char *)a2 + v52);
    v57 = *v55;
    v56 = v55[1];
    v119 = v57;
    *v54 = v57;
    v54[1] = v56;
    v58 = (char *)a1 + v53;
    v59 = (char *)a2 + v53;
    v60 = *((_OWORD *)v59 + 1);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v60;
    v61 = *((_QWORD *)v59 + 4);
    *((_QWORD *)v58 + 4) = v61;
    v62 = a3[11];
    v63 = a3[12];
    v64 = (uint64_t *)((char *)a1 + v62);
    v65 = (uint64_t *)((char *)a2 + v62);
    v66 = a2;
    v67 = v65[1];
    *v64 = *v65;
    v64[1] = v67;
    v68 = (char *)a1 + v63;
    v69 = (char *)v66 + v63;
    v70 = *((_OWORD *)v69 + 1);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v70;
    v68[32] = v69[32];
    v71 = *((_QWORD *)v69 + 5);
    *((_QWORD *)v68 + 5) = v71;
    v72 = a3[13];
    v73 = a3[14];
    v117 = v66;
    v118 = a3;
    v74 = (char *)a1 + v72;
    v75 = (char *)v66 + v72;
    *v74 = *v75;
    v76 = *((_QWORD *)v75 + 1);
    *((_QWORD *)v74 + 1) = v76;
    v77 = (char *)a1 + v73;
    v78 = (char *)v66 + v73;
    v79 = type metadata accessor for AccessibilityTechnologies(0);
    v80 = *(_QWORD *)(v79 - 8);
    v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
    v82 = v119;
    swift_retain(v61);
    swift_retain(v67);
    swift_retain(v71);
    swift_retain(v76);
    if (v81(v78, 1, v79))
    {
      v83 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
    }
    v84 = (int *)sub_10004CFD4(&qword_1009D3A10);
    v77[v84[9]] = v78[v84[9]];
    v85 = v84[10];
    v86 = *(_QWORD *)&v78[v85];
    *(_QWORD *)&v77[v85] = v86;
    v77[v84[11]] = v78[v84[11]];
    v87 = v118[15];
    v88 = (char *)a1 + v87;
    v89 = (char *)v117 + v87;
    swift_retain(v86);
    if (v81(v89, 1, v79))
    {
      v90 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v88, v89, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v88, 0, 1, v79);
    }
    v88[v84[9]] = v89[v84[9]];
    v91 = v84[10];
    v92 = *(_QWORD *)&v89[v91];
    *(_QWORD *)&v88[v91] = v92;
    v88[v84[11]] = v89[v84[11]];
    v93 = v118[16];
    v94 = v118[17];
    v95 = *(uint64_t *)((char *)v117 + v93);
    *(uint64_t *)((char *)a1 + v93) = v95;
    v96 = *(uint64_t *)((char *)v117 + v94);
    *(uint64_t *)((char *)a1 + v94) = v96;
    v97 = v118[18];
    v98 = (char *)a1 + v97;
    v99 = (uint64_t)v117 + v97;
    swift_retain(v92);
    swift_retain(v95);
    swift_retain(v96);
    swift_weakCopyInit(v98, v99);
    v100 = v118[19];
    *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)a1 + v100, (char *)v117 + v100) + 8) = *(uint64_t *)((char *)v117 + v100 + 8);
    v101 = v118[20];
    v102 = *(_OWORD *)((char *)v117 + v101 + 24);
    *(_OWORD *)((char *)a1 + v101 + 24) = v102;
    (**(void (***)(void))(v102 - 8))();
    v103 = v118[21];
    *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)a1 + v103, (char *)v117 + v103) + 8) = *(uint64_t *)((char *)v117 + v103 + 8);
    v104 = v118[22];
    v105 = (char *)a1 + v104;
    v106 = (uint64_t)v117 + v104;
    v107 = type metadata accessor for GeometryProxy(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
    v108 = v118[23];
    v109 = (char *)a1 + v108;
    v110 = (uint64_t)v117 + v108;
    v111 = type metadata accessor for Logger(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v109, v110, v111);
    v112 = v118[25];
    *((_BYTE *)a1 + v118[24]) = *((_BYTE *)v117 + v118[24]);
    v113 = (uint64_t *)((char *)a1 + v112);
    v114 = (uint64_t *)((char *)v117 + v112);
    v115 = v114[1];
    *v113 = *v114;
    v113[1] = v115;
    swift_bridgeObjectRetain(v115);
  }
  return a1;
}

uint64_t sub_100231058(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  __n128 v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v4 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v7 = (_QWORD *)((char *)a1 + a2[5]);
  if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)((char *)a1 + a2[6]);
  v11 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)((char *)a1 + a2[7]);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)((char *)a1 + a2[8]);
  v17 = sub_10004CFD4(&qword_1009D3A08);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }

  swift_release(*(_QWORD *)((char *)a1 + a2[10] + 32));
  swift_release(*(_QWORD *)((char *)a1 + a2[11] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[12] + 40));
  swift_release(*(_QWORD *)((char *)a1 + a2[13] + 8));
  v19 = (char *)a1 + a2[14];
  v20 = type metadata accessor for AccessibilityTechnologies(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (!v22(v19, 1, v20))
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  v23 = sub_10004CFD4(&qword_1009D3A10);
  v24 = swift_release(*(_QWORD *)&v19[*(int *)(v23 + 40)]);
  v25 = (char *)a1 + a2[15];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v22)(v25, 1, v20, v24))
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
  swift_release(*(_QWORD *)&v25[*(int *)(v23 + 40)]);
  swift_release(*(_QWORD *)((char *)a1 + a2[16]));
  swift_release(*(_QWORD *)((char *)a1 + a2[17]));
  swift_weakDestroy((char *)a1 + a2[18]);
  swift_unknownObjectWeakDestroy((char *)a1 + a2[19]);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)a1 + a2[20]));
  swift_unknownObjectWeakDestroy((char *)a1 + a2[21]);
  v26 = (char *)a1 + a2[22];
  v27 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  v28 = (char *)a1 + a2[23];
  v29 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[25] + 8));
}

uint64_t *sub_1002313C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  id v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t *v115;
  uint64_t *v116;
  int *v117;

  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      v10 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      v12 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      v10 = 1;
      v12(a1, 0, 1, v7);
    }
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v10);
  v13 = a3[5];
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  if (swift_getEnumCaseMultiPayload((char *)a2 + v13, v6) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = v14;
    v21 = v6;
    v22 = 1;
  }
  else
  {
    v19 = *v15;
    *v14 = *v15;
    swift_retain(v19);
    v20 = v14;
    v21 = v6;
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v21, v22);
  v23 = a3[6];
  v24 = (uint64_t *)((char *)a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  v26 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
    v28 = v24;
    v29 = v26;
    v30 = 1;
  }
  else
  {
    v31 = *v25;
    *v24 = *v25;
    swift_retain(v31);
    v28 = v24;
    v29 = v26;
    v30 = 0;
  }
  swift_storeEnumTagMultiPayload(v28, v29, v30);
  v32 = a3[7];
  v33 = (uint64_t *)((char *)a1 + v32);
  v34 = (uint64_t *)((char *)a2 + v32);
  v35 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
  {
    v36 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
    v37 = v33;
    v38 = v35;
    v39 = 1;
  }
  else
  {
    v40 = *v34;
    *v33 = *v34;
    swift_retain(v40);
    v37 = v33;
    v38 = v35;
    v39 = 0;
  }
  swift_storeEnumTagMultiPayload(v37, v38, v39);
  v41 = a3[8];
  v42 = (uint64_t *)((char *)a1 + v41);
  v43 = (uint64_t *)((char *)a2 + v41);
  v44 = sub_10004CFD4(&qword_1009D3A08);
  if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
  {
    v45 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
    v46 = v42;
    v47 = v44;
    v48 = 1;
  }
  else
  {
    v49 = *v43;
    *v42 = *v43;
    swift_retain(v49);
    v46 = v42;
    v47 = v44;
    v48 = 0;
  }
  swift_storeEnumTagMultiPayload(v46, v47, v48);
  v50 = a3[9];
  v51 = a3[10];
  v52 = (uint64_t *)((char *)a1 + v50);
  v53 = (char *)a2 + v50;
  v55 = *(void **)v53;
  v54 = *((_QWORD *)v53 + 1);
  *v52 = v55;
  v52[1] = v54;
  v56 = (char *)a1 + v51;
  v57 = (char *)a2 + v51;
  v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  v59 = *((_QWORD *)v57 + 4);
  *((_QWORD *)v56 + 4) = v59;
  v60 = a3[11];
  v61 = a3[12];
  v62 = (uint64_t *)((char *)a1 + v60);
  v63 = (uint64_t *)((char *)a2 + v60);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v65 = (char *)a1 + v61;
  v66 = (char *)a2 + v61;
  v67 = *((_OWORD *)v66 + 1);
  *(_OWORD *)v65 = *(_OWORD *)v66;
  *((_OWORD *)v65 + 1) = v67;
  v65[32] = v66[32];
  v68 = a1;
  v69 = *((_QWORD *)v66 + 5);
  *((_QWORD *)v65 + 5) = v69;
  v70 = a3[13];
  v71 = a3[14];
  v116 = a2;
  v117 = a3;
  v72 = (char *)v68 + v70;
  v73 = (char *)a2 + v70;
  *v72 = *v73;
  v74 = *((_QWORD *)v73 + 1);
  *((_QWORD *)v72 + 1) = v74;
  v115 = v68;
  v75 = (char *)v68 + v71;
  v76 = (char *)a2 + v71;
  v77 = type metadata accessor for AccessibilityTechnologies(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  v80 = v55;
  swift_retain(v59);
  swift_retain(v64);
  swift_retain(v69);
  swift_retain(v74);
  if (v79(v76, 1, v77))
  {
    v81 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  v82 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v75[v82[9]] = v76[v82[9]];
  v83 = v82[10];
  v84 = *(_QWORD *)&v76[v83];
  *(_QWORD *)&v75[v83] = v84;
  v75[v82[11]] = v76[v82[11]];
  v85 = v117[15];
  v86 = (char *)v115 + v85;
  v87 = (char *)v116 + v85;
  swift_retain(v84);
  if (v79(v87, 1, v77))
  {
    v88 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v86, v87, v77);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v86, 0, 1, v77);
  }
  v86[v82[9]] = v87[v82[9]];
  v89 = v82[10];
  v90 = *(_QWORD *)&v87[v89];
  *(_QWORD *)&v86[v89] = v90;
  v86[v82[11]] = v87[v82[11]];
  v91 = v117[16];
  v92 = v117[17];
  v93 = *(uint64_t *)((char *)v116 + v91);
  *(uint64_t *)((char *)v115 + v91) = v93;
  v94 = *(uint64_t *)((char *)v116 + v92);
  *(uint64_t *)((char *)v115 + v92) = v94;
  v95 = v117[18];
  v96 = (uint64_t)v115 + v95;
  v97 = (char *)v116 + v95;
  swift_retain(v90);
  swift_retain(v93);
  swift_retain(v94);
  swift_weakCopyInit(v96, v97);
  v98 = v117[19];
  *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)v115 + v98, (char *)v116 + v98) + 8) = *(uint64_t *)((char *)v116 + v98 + 8);
  v99 = v117[20];
  v100 = *(_OWORD *)((char *)v116 + v99 + 24);
  *(_OWORD *)((char *)v115 + v99 + 24) = v100;
  (**(void (***)(void))(v100 - 8))();
  v101 = v117[21];
  *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)v115 + v101, (char *)v116 + v101) + 8) = *(uint64_t *)((char *)v116 + v101 + 8);
  v102 = v117[22];
  v103 = (uint64_t)v115 + v102;
  v104 = (char *)v116 + v102;
  v105 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
  v106 = v117[23];
  v107 = (uint64_t)v115 + v106;
  v108 = (char *)v116 + v106;
  v109 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v107, v108, v109);
  v110 = v117[25];
  *((_BYTE *)v115 + v117[24]) = *((_BYTE *)v116 + v117[24]);
  v111 = (uint64_t *)((char *)v115 + v110);
  v112 = (uint64_t *)((char *)v116 + v110);
  v113 = v112[1];
  *v111 = *v112;
  v111[1] = v113;
  swift_bridgeObjectRetain(v113);
  return v115;
}

uint64_t *sub_100231A28(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D26B8);
    v6 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      swift_retain(v10);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    v14 = a3[5];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_100010960((uint64_t)a1 + v14, &qword_1009D26B8);
    v17 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      v22 = v15;
      v23 = v17;
      v24 = 1;
    }
    else
    {
      v21 = *v16;
      *v15 = *v16;
      swift_retain(v21);
      v22 = v15;
      v23 = v17;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
    v25 = a3[6];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    sub_100010960((uint64_t)a1 + v25, &qword_1009D8790);
    v28 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = v26;
      v31 = v28;
      v32 = 1;
    }
    else
    {
      v33 = *v27;
      *v26 = *v27;
      swift_retain(v33);
      v30 = v26;
      v31 = v28;
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v31, v32);
    v34 = a3[7];
    v35 = (uint64_t *)((char *)a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    sub_100010960((uint64_t)a1 + v34, (uint64_t *)&unk_1009D8200);
    v37 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
      v39 = v35;
      v40 = v37;
      v41 = 1;
    }
    else
    {
      v42 = *v36;
      *v35 = *v36;
      swift_retain(v42);
      v39 = v35;
      v40 = v37;
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v39, v40, v41);
    v43 = a3[8];
    v44 = (uint64_t *)((char *)a1 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    sub_100010960((uint64_t)a1 + v43, &qword_1009D3A08);
    v46 = sub_10004CFD4(&qword_1009D3A08);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = v44;
      v49 = v46;
      v50 = 1;
    }
    else
    {
      v51 = *v45;
      *v44 = *v45;
      swift_retain(v51);
      v48 = v44;
      v49 = v46;
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
  }
  v52 = a3[9];
  v53 = (uint64_t *)((char *)a1 + v52);
  v54 = (char *)a2 + v52;
  v55 = *(void **)((char *)a1 + v52);
  v56 = *(void **)((char *)a2 + v52);
  *v53 = v56;
  v57 = v56;

  v53[1] = *((_QWORD *)v54 + 1);
  v58 = a3[10];
  v59 = (uint64_t *)((char *)a1 + v58);
  v60 = (uint64_t *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  v59[2] = v60[2];
  v59[3] = v60[3];
  v61 = v59[4];
  v62 = v60[4];
  v59[4] = v62;
  swift_retain(v62);
  swift_release(v61);
  v63 = a3[11];
  v64 = (uint64_t *)((char *)a1 + v63);
  v65 = (uint64_t *)((char *)a2 + v63);
  *v64 = *v65;
  v66 = v64[1];
  v67 = v65[1];
  v64[1] = v67;
  swift_retain(v67);
  swift_release(v66);
  v68 = a3[12];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = v70[32];
  v72 = *((_OWORD *)v70 + 1);
  *(_OWORD *)v69 = *(_OWORD *)v70;
  *((_OWORD *)v69 + 1) = v72;
  v69[32] = v71;
  v73 = *((_QWORD *)v69 + 5);
  v74 = *((_QWORD *)v70 + 5);
  *((_QWORD *)v69 + 5) = v74;
  swift_retain(v74);
  swift_release(v73);
  v75 = a3[13];
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  *v76 = *v77;
  v78 = *((_QWORD *)v76 + 1);
  v79 = *((_QWORD *)v77 + 1);
  *((_QWORD *)v76 + 1) = v79;
  swift_retain(v79);
  swift_release(v78);
  v80 = a3[14];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = type metadata accessor for AccessibilityTechnologies(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  LODWORD(v54) = v85(v81, 1, v83);
  v86 = v85(v82, 1, v83);
  if ((_DWORD)v54)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
LABEL_29:
    v87 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v81, v82, v83);
LABEL_30:
  v88 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v81[v88[9]] = v82[v88[9]];
  v89 = v88[10];
  v90 = *(_QWORD *)&v81[v89];
  v91 = *(_QWORD *)&v82[v89];
  *(_QWORD *)&v81[v89] = v91;
  swift_retain(v91);
  v92 = swift_release(v90);
  v81[v88[11]] = v82[v88[11]];
  v93 = a3[15];
  v94 = (char *)a1 + v93;
  v95 = (char *)a2 + v93;
  LODWORD(v90) = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v85)((char *)a1 + v93, 1, v83, v92);
  v96 = v85(v95, 1, v83);
  if (!(_DWORD)v90)
  {
    if (!v96)
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v94, v95, v83);
      goto LABEL_36;
    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v94, v83);
    goto LABEL_35;
  }
  if (v96)
  {
LABEL_35:
    v97 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v94, v95, v83);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v94, 0, 1, v83);
LABEL_36:
  v94[v88[9]] = v95[v88[9]];
  v98 = v88[10];
  v99 = *(_QWORD *)&v94[v98];
  v100 = *(_QWORD *)&v95[v98];
  *(_QWORD *)&v94[v98] = v100;
  swift_retain(v100);
  swift_release(v99);
  v94[v88[11]] = v95[v88[11]];
  v101 = a3[16];
  v102 = *(uint64_t *)((char *)a2 + v101);
  v103 = *(uint64_t *)((char *)a1 + v101);
  *(uint64_t *)((char *)a1 + v101) = v102;
  swift_retain(v102);
  swift_release(v103);
  v104 = a3[17];
  v105 = *(uint64_t *)((char *)a2 + v104);
  v106 = *(uint64_t *)((char *)a1 + v104);
  *(uint64_t *)((char *)a1 + v104) = v105;
  swift_retain(v105);
  swift_release(v106);
  swift_weakCopyAssign((char *)a1 + a3[18], (char *)a2 + a3[18]);
  v107 = a3[19];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign((char *)a1 + v107, (char *)a2 + v107) + 8) = *(uint64_t *)((char *)a2 + v107 + 8);
  sub_1001EAB00((uint64_t *)((char *)a1 + a3[20]), (uint64_t *)((char *)a2 + a3[20]));
  v108 = a3[21];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign((char *)a1 + v108, (char *)a2 + v108) + 8) = *(uint64_t *)((char *)a2 + v108 + 8);
  v109 = a3[22];
  v110 = (char *)a1 + v109;
  v111 = (char *)a2 + v109;
  v112 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 24))(v110, v111, v112);
  v113 = a3[23];
  v114 = (char *)a1 + v113;
  v115 = (char *)a2 + v113;
  v116 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 24))(v114, v115, v116);
  *((_BYTE *)a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
  v117 = a3[25];
  v118 = (uint64_t *)((char *)a1 + v117);
  v119 = (uint64_t *)((char *)a2 + v117);
  *v118 = *v119;
  v120 = v119[1];
  v121 = v118[1];
  v118[1] = v120;
  swift_bridgeObjectRetain(v120);
  swift_bridgeObjectRelease(v121);
  return a1;
}

char *sub_1002321E4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (swift_getEnumCaseMultiPayload(&a2[v10], v6) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload(v11, v6, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload(v22, v24, 1);
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v26 = a3[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_10004CFD4(&qword_1009D3A08);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload(v27, v29, 1);
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  v31 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  v35 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v38;
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
  v39 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = type metadata accessor for AccessibilityTechnologies(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v44(v41, 1, v42))
  {
    v45 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v46 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v40[v46[9]] = v41[v46[9]];
  *(_QWORD *)&v40[v46[10]] = *(_QWORD *)&v41[v46[10]];
  v40[v46[11]] = v41[v46[11]];
  v47 = a3[15];
  v48 = &a1[v47];
  v49 = &a2[v47];
  if (v44(&a2[v47], 1, v42))
  {
    v50 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v48, v49, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v48, 0, 1, v42);
  }
  v48[v46[9]] = v49[v46[9]];
  *(_QWORD *)&v48[v46[10]] = *(_QWORD *)&v49[v46[10]];
  v48[v46[11]] = v49[v46[11]];
  v51 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  *(_QWORD *)&a1[v51] = *(_QWORD *)&a2[v51];
  swift_weakTakeInit(&a1[a3[18]], &a2[a3[18]]);
  v52 = a3[19];
  *(_QWORD *)(swift_unknownObjectWeakTakeInit(&a1[v52], &a2[v52]) + 8) = *(_QWORD *)&a2[v52 + 8];
  v53 = a3[20];
  v54 = a3[21];
  v55 = &a1[v53];
  v56 = &a2[v53];
  *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
  v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  *(_QWORD *)(swift_unknownObjectWeakTakeInit(&a1[v54], &a2[v54]) + 8) = *(_QWORD *)&a2[v54 + 8];
  v58 = a3[22];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  v62 = a3[23];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
  v66 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  *(_OWORD *)&a1[v66] = *(_OWORD *)&a2[v66];
  return a1;
}

char *sub_100232794(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D26B8);
    v6 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_100010960((uint64_t)&a1[v10], &qword_1009D26B8);
    v13 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v17 = a3[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    sub_100010960((uint64_t)&a1[v17], &qword_1009D8790);
    v20 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    v22 = a3[7];
    v23 = &a1[v22];
    v24 = &a2[v22];
    sub_100010960((uint64_t)&a1[v22], (uint64_t *)&unk_1009D8200);
    v25 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v27 = a3[8];
    v28 = &a1[v27];
    v29 = &a2[v27];
    sub_100010960((uint64_t)&a1[v27], &qword_1009D3A08);
    v30 = sub_10004CFD4(&qword_1009D3A08);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload(v28, v30, 1);
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
  }
  v32 = a3[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(void **)&a1[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;

  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  v36 = a3[10];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *((_OWORD *)v38 + 1);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v39;
  v40 = *((_QWORD *)v37 + 4);
  *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
  swift_release(v40);
  v41 = a3[11];
  v42 = &a1[v41];
  v43 = &a2[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v44 = *((_QWORD *)v42 + 1);
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_release(v44);
  v45 = a3[12];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  v46[32] = v47[32];
  v49 = *((_QWORD *)v46 + 5);
  *((_QWORD *)v46 + 5) = *((_QWORD *)v47 + 5);
  swift_release(v49);
  v50 = a3[13];
  v51 = &a1[v50];
  v52 = &a2[v50];
  *v51 = *v52;
  v53 = *((_QWORD *)v51 + 1);
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  swift_release(v53);
  v54 = a3[14];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = type metadata accessor for AccessibilityTechnologies(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 1, v57);
  v61 = v59(v56, 1, v57);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
LABEL_28:
    v62 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
LABEL_29:
  v63 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v55[v63[9]] = v56[v63[9]];
  v64 = v63[10];
  v65 = *(_QWORD *)&v55[v64];
  *(_QWORD *)&v55[v64] = *(_QWORD *)&v56[v64];
  v66 = swift_release(v65);
  v55[v63[11]] = v56[v63[11]];
  v67 = a3[15];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v59)(&a1[v67], 1, v57, v66);
  v71 = v59(v69, 1, v57);
  if (!v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v68, v69, v57);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v68, v57);
    goto LABEL_34;
  }
  if (v71)
  {
LABEL_34:
    v72 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v68, v69, v57);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v68, 0, 1, v57);
LABEL_35:
  v68[v63[9]] = v69[v63[9]];
  v73 = v63[10];
  v74 = *(_QWORD *)&v68[v73];
  *(_QWORD *)&v68[v73] = *(_QWORD *)&v69[v73];
  swift_release(v74);
  v68[v63[11]] = v69[v63[11]];
  v75 = a3[16];
  v76 = *(_QWORD *)&a1[v75];
  *(_QWORD *)&a1[v75] = *(_QWORD *)&a2[v75];
  swift_release(v76);
  v77 = a3[17];
  v78 = *(_QWORD *)&a1[v77];
  *(_QWORD *)&a1[v77] = *(_QWORD *)&a2[v77];
  swift_release(v78);
  swift_weakTakeAssign(&a1[a3[18]], &a2[a3[18]]);
  v79 = a3[19];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign(&a1[v79], &a2[v79]) + 8) = *(_QWORD *)&a2[v79 + 8];
  v80 = a3[20];
  v81 = &a1[v80];
  v82 = &a2[v80];
  _s5Books15CurrentPageViewVwxx_0(&a1[v80]);
  v83 = *((_OWORD *)v82 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v83;
  *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
  v84 = a3[21];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign(&a1[v84], &a2[v84]) + 8) = *(_QWORD *)&a2[v84 + 8];
  v85 = a3[22];
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
  v89 = a3[23];
  v90 = &a1[v89];
  v91 = &a2[v89];
  v92 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v90, v91, v92);
  v93 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v97 = *(_QWORD *)v95;
  v96 = *((_QWORD *)v95 + 1);
  v98 = *((_QWORD *)v94 + 1);
  *(_QWORD *)v94 = v97;
  *((_QWORD *)v94 + 1) = v96;
  swift_bridgeObjectRelease(v98);
  return a1;
}

uint64_t sub_100232EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100232EEC);
}

uint64_t sub_100232EEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v6 = sub_10004CFD4(&qword_1009D26A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10004CFD4(&qword_1009D39F8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[6];
LABEL_18:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_18;
  }
  v15 = sub_10004CFD4(&qword_1009D3A00);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[8];
    goto LABEL_18;
  }
  v16 = sub_10004CFD4(&qword_1009D3A10);
  v12 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v16;
    v13 = a3[14];
    goto LABEL_18;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v19 = type metadata accessor for GeometryProxy(0);
    v12 = *(_QWORD *)(v19 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v19;
      v13 = a3[22];
    }
    else
    {
      v8 = type metadata accessor for Logger(0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = a3[23];
    }
    goto LABEL_18;
  }
  v17 = *(_QWORD *)(a1 + a3[16]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_10023305C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100233068);
}

uint64_t sub_100233068(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v8 = sub_10004CFD4(&qword_1009D26A0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10004CFD4(&qword_1009D39F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v17 = sub_10004CFD4(&qword_1009D3A00);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          result = sub_10004CFD4(&qword_1009D3A10);
          v14 = *(_QWORD *)(result - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = result;
            v15 = a4[14];
          }
          else
          {
            if (a3 == 0x7FFFFFFF)
            {
              *(_QWORD *)(a1 + a4[16]) = (a2 - 1);
              return result;
            }
            v19 = type metadata accessor for GeometryProxy(0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[22];
            }
            else
            {
              v10 = type metadata accessor for Logger(0);
              v14 = *(_QWORD *)(v10 - 8);
              v15 = a4[23];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1002331D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[10];
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;

  sub_100233378(319);
  if (v3 <= 0x3F)
  {
    v16[0] = *(_QWORD *)(v2 - 8) + 64;
    v16[1] = v16[0];
    sub_1002333D0(319, (unint64_t *)&qword_1009D3A88, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v5 <= 0x3F)
    {
      v16[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1002333D0(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v7 <= 0x3F)
      {
        v16[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_1002333D0(319, &qword_1009D3A90, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v9 <= 0x3F)
        {
          v16[4] = *(_QWORD *)(v8 - 8) + 64;
          v16[5] = &unk_100713718;
          v16[6] = &unk_100713730;
          v16[7] = &unk_100713718;
          v16[8] = &unk_100713748;
          v16[9] = &unk_100713718;
          sub_10023341C();
          if (v11 <= 0x3F)
          {
            v17 = *(_QWORD *)(v10 - 8) + 64;
            v18 = v17;
            v19 = (char *)&value witness table for Builtin.NativeObject + 64;
            v20 = (char *)&value witness table for Builtin.NativeObject + 64;
            v21 = &unk_100713760;
            v22 = &unk_100713778;
            v23 = &unk_100713790;
            v24 = &unk_100713778;
            v12 = type metadata accessor for GeometryProxy(319);
            if (v13 <= 0x3F)
            {
              v25 = *(_QWORD *)(v12 - 8) + 64;
              v14 = type metadata accessor for Logger(319);
              if (v15 <= 0x3F)
              {
                v26 = *(_QWORD *)(v14 - 8) + 64;
                v27 = &unk_1007137A8;
                v28 = &unk_1007137C0;
                swift_initStructMetadata(a1, 256, 22, v16, a1 + 16);
              }
            }
          }
        }
      }
    }
  }
}

void sub_100233378(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D3A80)
  {
    v2 = sub_100030B74((uint64_t *)&unk_1009D8210);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D3A80);
  }
}

void sub_1002333D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_10023341C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009D3A98)
  {
    v0 = type metadata accessor for AccessibilityFocusState(0, &type metadata for Bool, &protocol witness table for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009D3A98);
  }
}

uint64_t sub_100233478(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008685E8, 1);
}

uint64_t sub_1002334B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REActionMenuView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002334F8(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REActionMenuView(0) - 8) + 80);
  sub_100229EA4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_100233544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3B48;
  if (!qword_1009D3B48)
  {
    v1 = sub_100030B74(&qword_1009D3B20);
    sub_100030B34(&qword_1009D3B50, &qword_1009D3B18, (uint64_t)&unk_10070F3D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3B48);
  }
  return result;
}

uint64_t sub_1002335CC()
{
  return sub_1002341EC((uint64_t (*)(uint64_t))sub_100229F24);
}

uint64_t sub_1002335E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REActionMenuView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1009D3B6C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000AE34;
  return sub_100229FC0(v3);
}

unint64_t sub_100233648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3B80;
  if (!qword_1009D3B80)
  {
    v1 = sub_100030B74(&qword_1009D3B38);
    sub_1002336CC();
    sub_100030B34(&qword_1009D3B90, &qword_1009D3B78, (uint64_t)&protocol conformance descriptor for _TaskValueModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3B80);
  }
  return result;
}

unint64_t sub_1002336CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_1009D3B88;
  if (!qword_1009D3B88)
  {
    v1 = sub_100030B74(&qword_1009D3B30);
    v2 = sub_100030B74(&qword_1009D3B20);
    type metadata accessor for UIEdgeInsets(255);
    v4[0] = v2;
    v4[1] = v3;
    v4[2] = sub_100233544();
    v4[3] = sub_100008DB0(&qword_1009D3B58, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, (uint64_t)&protocol conformance descriptor for UIEdgeInsets);
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3B88);
  }
  return result;
}

void sub_1002337BC()
{
  type metadata accessor for REActionMenuView(0);
  REActionMenuState.transition(to:)(0x8000000000000000);
}

uint64_t sub_1002337FC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REActionMenuView(0) - 8) + 80);
  return sub_100229CCC(v4 + ((v9 + 16) & ~v9), a1, a2, a3, a4);
}

uint64_t sub_100233858()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023387C(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double, double, double, double))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

unint64_t sub_1002338A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3C48;
  if (!qword_1009D3C48)
  {
    v1 = sub_100030B74(&qword_1009D3C40);
    sub_100233910();
    sub_100233A18();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3C48);
  }
  return result;
}

unint64_t sub_100233910()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3C50;
  if (!qword_1009D3C50)
  {
    v1 = sub_100030B74(&qword_1009D3C38);
    sub_100233994();
    sub_100030B34(&qword_1009D3C78, &qword_1009D3C80, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3C50);
  }
  return result;
}

unint64_t sub_100233994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3C58;
  if (!qword_1009D3C58)
  {
    v1 = sub_100030B74(&qword_1009D3C60);
    sub_100030B34(&qword_1009D3C68, &qword_1009D3C70, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3C58);
  }
  return result;
}

unint64_t sub_100233A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3C88;
  if (!qword_1009D3C88)
  {
    v1 = sub_100030B74(&qword_1009D3C28);
    sub_100233A9C();
    sub_100030B34(&qword_1009D3CB0, &qword_1009D3CB8, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3C88);
  }
  return result;
}

unint64_t sub_100233A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3C90;
  if (!qword_1009D3C90)
  {
    v1 = sub_100030B74(&qword_1009D3C98);
    sub_100030B34(&qword_1009D3CA0, &qword_1009D3CA8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3C90);
  }
  return result;
}

unint64_t sub_100233B20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3CC0;
  if (!qword_1009D3CC0)
  {
    v1 = sub_100030B74(&qword_1009D3C18);
    sub_100030B34(&qword_1009D3CC8, &qword_1009D3CD0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3CC0);
  }
  return result;
}

uint64_t sub_100233BAC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  __n128 v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v1 = (int *)type metadata accessor for REActionMenuView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v33 = *(_QWORD *)(v2 + 64);
  v34 = v0;
  v5 = (_QWORD *)(v0 + v4);
  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v9 = (_QWORD *)((char *)v5 + v1[5]);
  if (swift_getEnumCaseMultiPayload(v9, v6) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v9, v10);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)((char *)v5 + v1[6]);
  v13 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (_QWORD *)((char *)v5 + v1[7]);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }
  v18 = (_QWORD *)((char *)v5 + v1[8]);
  v19 = sub_10004CFD4(&qword_1009D3A08);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
  }
  else
  {
    swift_release(*v18);
  }

  swift_release(*(_QWORD *)((char *)v5 + v1[10] + 32));
  swift_release(*(_QWORD *)((char *)v5 + v1[11] + 8));
  swift_release(*(_QWORD *)((char *)v5 + v1[12] + 40));
  swift_release(*(_QWORD *)((char *)v5 + v1[13] + 8));
  v21 = (char *)v5 + v1[14];
  v22 = type metadata accessor for AccessibilityTechnologies(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (!v24(v21, 1, v22))
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  v25 = sub_10004CFD4(&qword_1009D3A10);
  v26 = swift_release(*(_QWORD *)&v21[*(int *)(v25 + 40)]);
  v27 = (char *)v5 + v1[15];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v24)(v27, 1, v22, v26))
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
  swift_release(*(_QWORD *)&v27[*(int *)(v25 + 40)]);
  swift_release(*(_QWORD *)((char *)v5 + v1[16]));
  swift_release(*(_QWORD *)((char *)v5 + v1[17]));
  swift_weakDestroy((char *)v5 + v1[18]);
  swift_unknownObjectWeakDestroy((char *)v5 + v1[19]);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)v5 + v1[20]));
  swift_unknownObjectWeakDestroy((char *)v5 + v1[21]);
  v28 = (char *)v5 + v1[22];
  v29 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  v30 = (char *)v5 + v1[23];
  v31 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v1[25] + 8));
  return swift_deallocObject(v34, ((v33 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_100233F70()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for REActionMenuView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10022D308(v0 + v2, *(double *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100233FB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = static Color.clear.getter();
  result = GeometryProxy.size.getter();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

unint64_t sub_100233FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3D68;
  if (!qword_1009D3D68)
  {
    v1 = sub_100030B74(&qword_1009D3D58);
    sub_100234064();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3D68);
  }
  return result;
}

unint64_t sub_100234064()
{
  unint64_t result;

  result = qword_1009D3D70;
  if (!qword_1009D3D70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1009D3D70);
  }
  return result;
}

unint64_t sub_1002340A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3D78;
  if (!qword_1009D3D78)
  {
    v1 = sub_100030B74(&qword_1009D3D60);
    sub_1001F5558(&qword_1009D3D80, &qword_1009D3D88, (void (*)(void))sub_10023414C);
    sub_100030B34(&qword_1009D3D98, &qword_1009D3DA0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3D78);
  }
  return result;
}

unint64_t sub_10023414C()
{
  unint64_t result;

  result = qword_1009D3D90;
  if (!qword_1009D3D90)
  {
    result = swift_getWitnessTable(&unk_1007190D4, &type metadata for REActionMenuRowView);
    atomic_store(result, (unint64_t *)&qword_1009D3D90);
  }
  return result;
}

unint64_t sub_100234190()
{
  unint64_t result;

  result = qword_1009D3DD0;
  if (!qword_1009D3DD0)
  {
    result = swift_getWitnessTable(&unk_100713C48, &type metadata for RowScaleCascadeModifier);
    atomic_store(result, (unint64_t *)&qword_1009D3DD0);
  }
  return result;
}

uint64_t sub_1002341E0()
{
  return sub_1002341EC(sub_10022DA7C);
}

uint64_t sub_1002341EC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REActionMenuView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

double sub_100234228@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10022DB34(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100234230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3E08;
  if (!qword_1009D3E08)
  {
    v1 = sub_100030B74(&qword_1009D3E10);
    sub_1002342B4();
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3E08);
  }
  return result;
}

unint64_t sub_1002342B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3E18;
  if (!qword_1009D3E18)
  {
    v1 = sub_100030B74(&qword_1009D3E20);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3E18);
  }
  return result;
}

uint64_t sub_100234348()
{
  uint64_t v0;

  return sub_1002FF1DC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10023436C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for MenuIconItem(a2, a1);
  return a2;
}

unint64_t sub_1002343A8()
{
  unint64_t result;

  result = qword_1009D3E88;
  if (!qword_1009D3E88)
  {
    result = swift_getWitnessTable(&unk_100730DAC, &type metadata for MenuIconItem);
    atomic_store(result, (unint64_t *)&qword_1009D3E88);
  }
  return result;
}

uint64_t sub_1002343EC(uint64_t a1)
{
  destroy for MenuIconItem(a1);
  return a1;
}

uint64_t sub_100234420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10022F1D4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100234428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3E90;
  if (!qword_1009D3E90)
  {
    v1 = sub_100030B74(&qword_1009D3E78);
    sub_1002343A8();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3E90);
  }
  return result;
}

uint64_t sub_1002344B4(uint64_t a1, uint64_t a2)
{
  initializeWithTake for MenuBookmarkItem(a2, a1);
  return a2;
}

unint64_t sub_1002344F0()
{
  unint64_t result;

  result = qword_1009D3EA0;
  if (!qword_1009D3EA0)
  {
    result = swift_getWitnessTable(&unk_10071C150, &type metadata for MenuBookmarkItem);
    atomic_store(result, (unint64_t *)&qword_1009D3EA0);
  }
  return result;
}

uint64_t sub_100234534(uint64_t a1)
{
  destroy for MenuBookmarkItem(a1);
  return a1;
}

unint64_t sub_100234568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3EA8;
  if (!qword_1009D3EA8)
  {
    v1 = sub_100030B74(&qword_1009D3E30);
    sub_1002344F0();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3EA8);
  }
  return result;
}

uint64_t sub_100234604()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100234614(_BYTE *a1)
{
  uint64_t v1;

  return sub_100668F54(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_10023461C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for MenuReadingLoupeItem(a2, a1);
  return a2;
}

unint64_t sub_100234658()
{
  unint64_t result;

  result = qword_1009D3EB8;
  if (!qword_1009D3EB8)
  {
    result = swift_getWitnessTable(&unk_100714764, &type metadata for MenuReadingLoupeItem);
    atomic_store(result, (unint64_t *)&qword_1009D3EB8);
  }
  return result;
}

uint64_t sub_10023469C(uint64_t a1)
{
  destroy for MenuReadingLoupeItem(a1);
  return a1;
}

unint64_t sub_1002346D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3EC0;
  if (!qword_1009D3EC0)
  {
    v1 = sub_100030B74(&qword_1009D3E48);
    sub_100234658();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3EC0);
  }
  return result;
}

unint64_t sub_100234760()
{
  unint64_t result;

  result = qword_1009D3EC8;
  if (!qword_1009D3EC8)
  {
    result = swift_getWitnessTable(&unk_100724D9C, &type metadata for MenuMicaItem);
    atomic_store(result, (unint64_t *)&qword_1009D3EC8);
  }
  return result;
}

_QWORD *sub_1002347A4(_QWORD *a1)
{
  destroy for MenuMicaItem(a1);
  return a1;
}

uint64_t sub_1002347D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10022F3C4(v1, a1);
}

unint64_t sub_1002347E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3ED0;
  if (!qword_1009D3ED0)
  {
    v1 = sub_100030B74(&qword_1009D3E60);
    sub_100234760();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3ED0);
  }
  return result;
}

_QWORD *sub_100234864(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  swift_bridgeObjectRetain(a1[12]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *sub_1002348D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[10];
  v6 = a1[12];
  swift_bridgeObjectRelease(a1[8]);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_10023494C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for REActionMenuRowView(a2, a1);
  return a2;
}

uint64_t sub_100234988(uint64_t a1)
{
  destroy for REActionMenuRowView(a1);
  return a1;
}

unint64_t sub_1002349C4()
{
  unint64_t result;

  result = qword_1009D3EE0;
  if (!qword_1009D3EE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1009D3EE0);
  }
  return result;
}

uint64_t sub_100234A0C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REActionMenuView(0) - 8) + 80);
  return sub_10022D07C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_100234A48(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    sub_100030B34(&qword_1009D3D18, &qword_1009D3CF0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100030B34(a3, a4, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100234AEC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  __n128 v25;
  char *v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v1 = (int *)type metadata accessor for REActionMenuView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v33 = *(_QWORD *)(v2 + 64);
  v34 = (v3 + 16) & ~v3;
  v4 = (_QWORD *)(v0 + v34);
  v5 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v0 + v34, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v8 = (_QWORD *)((char *)v4 + v1[5]);
  if (swift_getEnumCaseMultiPayload(v8, v5) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)((char *)v4 + v1[6]);
  v12 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v14 = (_QWORD *)((char *)v4 + v1[7]);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }
  v17 = (_QWORD *)((char *)v4 + v1[8]);
  v18 = sub_10004CFD4(&qword_1009D3A08);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }

  swift_release(*(_QWORD *)((char *)v4 + v1[10] + 32));
  swift_release(*(_QWORD *)((char *)v4 + v1[11] + 8));
  swift_release(*(_QWORD *)((char *)v4 + v1[12] + 40));
  swift_release(*(_QWORD *)((char *)v4 + v1[13] + 8));
  v20 = (char *)v4 + v1[14];
  v21 = type metadata accessor for AccessibilityTechnologies(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (!v23(v20, 1, v21))
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  v24 = sub_10004CFD4(&qword_1009D3A10);
  v25 = swift_release(*(_QWORD *)&v20[*(int *)(v24 + 40)]);
  v26 = (char *)v4 + v1[15];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v23)(v26, 1, v21, v25))
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
  v27 = (v33 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)&v26[*(int *)(v24 + 40)]);
  swift_release(*(_QWORD *)((char *)v4 + v1[16]));
  swift_release(*(_QWORD *)((char *)v4 + v1[17]));
  swift_weakDestroy((char *)v4 + v1[18]);
  swift_unknownObjectWeakDestroy((char *)v4 + v1[19]);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)v4 + v1[20]));
  swift_unknownObjectWeakDestroy((char *)v4 + v1[21]);
  v28 = (char *)v4 + v1[22];
  v29 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  v30 = (char *)v4 + v1[23];
  v31 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + v1[25] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v27));
  return swift_deallocObject(v0, v27 + 8, v3 | 7);
}

unint64_t *sub_100234EB8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = type metadata accessor for REActionMenuView(0);
  return sub_10022CB9C(a1, *(_QWORD *)(v2+ ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a2);
}

unint64_t sub_100234F1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3F48;
  if (!qword_1009D3F48)
  {
    v1 = sub_100030B74(&qword_1009D3D50);
    sub_1002340A8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3F48);
  }
  return result;
}

unint64_t sub_100234F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3F68;
  if (!qword_1009D3F68)
  {
    v1 = sub_100030B74(&qword_1009D3F60);
    sub_100008DB0(&qword_1009D3F70, type metadata accessor for REScrubberView, (uint64_t)&unk_100725E78);
    sub_100030B34(&qword_1009D3D98, &qword_1009D3DA0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3F68);
  }
  return result;
}

__n128 initializeWithTake for RootBarRootViewControllerEvent(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RowScaleCascadeModifier(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[25])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RowScaleCascadeModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RowScaleCascadeModifier()
{
  return &type metadata for RowScaleCascadeModifier;
}

ValueMetadata *type metadata accessor for VerticallyRegularMenuHeightPreference()
{
  return &type metadata for VerticallyRegularMenuHeightPreference;
}

ValueMetadata *type metadata accessor for VerticallyCompactMenuHeightPreference()
{
  return &type metadata for VerticallyCompactMenuHeightPreference;
}

unint64_t sub_100235100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3F78;
  if (!qword_1009D3F78)
  {
    v1 = sub_100030B74(&qword_1009D3B40);
    sub_100233648();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3F78);
  }
  return result;
}

uint64_t sub_100235184(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086864C, 1);
}

uint64_t destroy for ResultListFooterView(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for ResultListFooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for ResultListFooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v4);
  swift_release(v5);
  return a1;
}

uint64_t assignWithTake for ResultListFooterView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for HVStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HVStack);
}

unint64_t sub_100235288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4038;
  if (!qword_1009D4038)
  {
    v1 = sub_100030B74(&qword_1009D3FA8);
    sub_1001F5558(&qword_1009D4040, &qword_1009D3FA0, (void (*)(void))sub_10023532C);
    sub_100030B34(&qword_1009D4070, &qword_1009D4078, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4038);
  }
  return result;
}

unint64_t sub_10023532C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4048;
  if (!qword_1009D4048)
  {
    v1 = sub_100030B74(&qword_1009D3F98);
    sub_1001F5558(&qword_1009D4050, &qword_1009D3F90, (void (*)(void))sub_1002353D0);
    sub_100030B34(&qword_1009D4070, &qword_1009D4078, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4048);
  }
  return result;
}

uint64_t sub_1002353D0()
{
  return sub_1001F5558(&qword_1009D4058, &qword_1009D3F88, (void (*)(void))sub_1002353F4);
}

unint64_t sub_1002353F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4060;
  if (!qword_1009D4060)
  {
    v1 = sub_100030B74(&qword_1009D3F80);
    sub_100030B34(&qword_1009D4068, qword_1009D3FB0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4060);
  }
  return result;
}

uint64_t sub_100235478(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100868674, 1);
}

uint64_t sub_1002354AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100230060(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1002354B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002303CC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002354D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for VStack(255, *a1, v2);
  v4 = type metadata accessor for HStack(255, v1, v2);
  v5 = type metadata accessor for _ConditionalContent(255, v3, v4);
  v6 = type metadata accessor for Group(255, v5);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v5);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v6);
}

double sub_100235610(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  double result;
  _QWORD v12[5];
  _QWORD *v13;

  v6 = *(void **)(v3 + *(_QWORD *)off_1008F5C70[a1]);
  v7 = (_QWORD *)swift_allocObject(&unk_1008F5B40, 40, 7);
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = v6;
  v12[4] = sub_100238BB8;
  v13 = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1000147F0;
  v12[3] = &unk_1008F5B58;
  v8 = _Block_copy(v12);
  v9 = v13;
  v10 = v6;
  swift_retain(a3);
  swift_retain(v7);
  objc_msgSend(v10, "addAnimations:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_100235714()
{
  qword_100A1E3B0 = 0x3FF0000000000000;
}

uint64_t sub_100235724(unsigned __int8 *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

void sub_100235748(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unsigned int v4;
  const UITransitionContextViewKey *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  id v30;
  unint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  objc_class *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __objc2_prot *v44;
  __objc2_prot *v45;
  objc_super v46;
  _QWORD aBlock[5];
  uint64_t v48;
  unint64_t v49;

  v2 = v1;
  v4 = objc_msgSend(v1, "isReversed");
  v5 = &UITransitionContextToViewKey;
  if (v4)
    v5 = &UITransitionContextFromViewKey;
  v6 = objc_msgSend(a1, "viewForKey:", *v5);
  if (v6)
  {
    v7 = v6;
    v49 = (unint64_t)_swiftEmptyArrayStorage;
    v8 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
    if (v8)
    {
      v9 = v8;
      v44 = &OBJC_PROTOCOL___BKPalettePresentationTransitioning_0;
      v10 = swift_dynamicCastObjCProtocolConditional(v8, 1, &v44);
      if (v10)
      {
        v11 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        v12 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v13 >> 1)
        {
          v43 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v12 + 1, 1);
          v12 = v43;
        }
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
        specialized Array._endMutation()(v14);
      }

    }
    v15 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (v15)
    {
      v16 = v15;
      v45 = &OBJC_PROTOCOL___BKPalettePresentationTransitioning_0;
      v17 = swift_dynamicCastObjCProtocolConditional(v15, 1, &v45);
      if (v17)
      {
        v18 = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v19 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v19 >= v20 >> 1)
        {
          v42 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v19 + 1, 1);
          v19 = v42;
        }
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v18);
        specialized Array._endMutation()(v21);
      }

    }
    v22 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_interaction);
    Strong = swift_unknownObjectWeakLoadStrong(v22 + OBJC_IVAR___BKPalettePresentationInteraction_transitioningDelegate);
    if (Strong)
    {
      v24 = Strong;
      v25 = objc_msgSend((id)swift_unknownObjectRetain(Strong), "coordinatedViewControllersFor:", v22);
      v26 = sub_10004CFD4(&qword_1009D3398);
      v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

      v28 = v2;
      v29 = sub_100238664((unint64_t)_swiftEmptyArrayStorage, v27, (uint64_t)v28);
      swift_bridgeObjectRelease(v27);
      swift_unknownObjectRelease_n(v24, 2);

    }
    else
    {
      v29 = _swiftEmptyArrayStorage;
    }
    sub_1003747A4((uint64_t)v29);
    v30 = objc_msgSend(a1, "isInteractive");
    v31 = v49;
    v32 = (void (*)(uint64_t))(*(uint64_t (**)(void *, unint64_t, id, void *))((swift_isaMask & *v2) + 0x1D0))(v7, v49, v30, a1);
    v34 = v33;
    swift_bridgeObjectRelease(v31);
    v35 = swift_allocObject(&unk_1008F5B90, 24, 7);
    swift_unknownObjectWeakInit(v35 + 16, v2);
    v36 = swift_allocObject(&unk_1008F5BB8, 48, 7);
    *(_QWORD *)(v36 + 16) = v35;
    *(_BYTE *)(v36 + 24) = (_BYTE)v30;
    *(_QWORD *)(v36 + 32) = v32;
    *(_QWORD *)(v36 + 40) = v34;
    aBlock[4] = sub_100238D4C;
    v48 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008F5BD0;
    v37 = _Block_copy(aBlock);
    v38 = v48;
    swift_retain(v34);
    objc_msgSend(v2, "addNoninteractiveAnimations:", v37, swift_release(v38).n128_f64[0]);
    _Block_release(v37);
    v39 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationController();
    v46.receiver = v2;
    v46.super_class = v39;
    v40 = objc_msgSendSuper2(&v46, "interruptibleAnimatorForTransition:", a1);
    v41 = swift_unknownObjectRelease(v40);
    if ((v30 & 1) != 0)
    {

      swift_release(v34);
    }
    else
    {
      v32(v41);
      swift_release(v34);

    }
  }
}

uint64_t sub_100235B30(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  void *v14;
  uint64_t v15;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v18;
  char v19[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (char *)result;
    if ((a2 & 1) != 0)
    {
      v10 = (void *)objc_opt_self(UIView);
      v11 = swift_allocObject(&unk_1008F5C08, 32, 7);
      *(_QWORD *)(v11 + 16) = a3;
      *(_QWORD *)(v11 + 24) = a4;
      v12 = swift_allocObject(&unk_1008F5C30, 32, 7);
      v13 = sub_10004DE04;
      *(_QWORD *)(v12 + 16) = sub_10004DE04;
      *(_QWORD *)(v12 + 24) = v11;
      aBlock[4] = sub_100238D90;
      v18 = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100605AE4;
      aBlock[3] = &unk_1008F5C48;
      v14 = _Block_copy(aBlock);
      v15 = v18;
      swift_retain(a4);
      swift_retain(v12);
      objc_msgSend(v10, "performWithoutAnimation:", v14, swift_release(v15).n128_f64[0]);
      _Block_release(v14);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 135, 167, 48, 1);
      swift_release(v12);
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
LABEL_6:
        objc_msgSend((id)objc_opt_self(CATransaction), "setFrameStallSkipRequest:", 1);
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_backgroundFadeOutAnimator], "startAnimation");
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_commonAnimator], "startAnimation");
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_delayedCommonAnimator], "startAnimationAfterDelay:", 0.01);
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_grabberFadeInAnimator], "startAnimationAfterDelay:", 0.13);
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_grabberFadeOutAnimator], "startAnimation");
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_miniPlayerFadeInAnimator], "startAnimationAfterDelay:", 0.13);
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_miniPlayerFadeOutAnimator], "startAnimationAfterDelay:", 0.05);
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_tabBarFadeInAnimator], "startAnimation");

        return sub_10002AD00((uint64_t)v13, v11);
      }
      __break(1u);
    }
    v13 = 0;
    v11 = 0;
    goto LABEL_6;
  }
  return result;
}

Swift::Void (__swiftcall *sub_100235DA4())()
{
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

void AudiobookPaletteStyleAnimationController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.AudiobookPaletteStyleAnimationController", 46, "init()", 6, 0);
  __break(1u);
}

id AudiobookPaletteStyleAnimationController.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for AudiobookPaletteStyleAnimationController);
}

id AudiobookPaletteStyleAnimationController.interruptibleAnimator(using:)(void *a1)
{
  _BYTE *v1;
  objc_super v4;

  if ((v1[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_isPrepared] & 1) == 0)
    sub_100235748(a1);
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for AudiobookPaletteStyleAnimationController();
  return objc_msgSendSuper2(&v4, "interruptibleAnimatorForTransition:", a1);
}

Swift::Void __swiftcall AudiobookPaletteStyleAnimationController.animationEnded(_:)(Swift::Bool a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Bool v6;
  uint64_t *v7;
  uint64_t v8;
  void (*v9)(Swift::Bool *);
  Swift::Bool v10;
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_completionBlocks);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_completionBlocks, v11, 1, 0);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  if (v5)
  {
    v6 = a1;
    swift_bridgeObjectRetain(*v3);
    v7 = (uint64_t *)(v4 + 40);
    do
    {
      v9 = (void (*)(Swift::Bool *))*(v7 - 1);
      v8 = *v7;
      v10 = v6;
      swift_retain(v8);
      v9(&v10);
      swift_release(v8);
      v7 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
    v4 = *v3;
  }
  *v3 = &_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v4);
}

void (*sub_1002360C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  id v9;

  v7 = swift_allocObject(&unk_1008F56B8, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v4);
  v8 = (_QWORD *)swift_allocObject(&unk_1008F56E0, 40, 7);
  v8[2] = v7;
  v8[3] = a4;
  v8[4] = a1;
  swift_unknownObjectRetain(a4);
  v9 = a1;
  return sub_10023861C;
}

void sub_100236148(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  void **v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t ObjectType;
  id v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  void **v20;
  char v21;
  char v22;
  id v23;
  void *v24;
  id v25;
  void **v26;
  void **v27;
  uint64_t v28;
  void **v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  void *v63;
  uint64_t v64;
  _QWORD *v65;
  unsigned int v66;
  id v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  void *v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  CGFloat v92;
  double v93;
  CGFloat v94;
  double v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  void **v99;
  double Width;
  CGFloat v101;
  CGFloat v102;
  CGFloat v103;
  id v104;
  double v105;
  double v106;
  double v107;
  double v108;
  id v109;
  char **v110;
  uint64_t (*v111)(uint64_t);
  void *v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  double x;
  double y;
  double v121;
  double height;
  CGFloat v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t i;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  void *v136;
  uint64_t v137;
  CGFloat *v138;
  uint64_t v139;
  char *v140;
  _QWORD *v141;
  id v142;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  double *v147;
  char v148;
  uint64_t v149;
  void *v150;
  _QWORD *v151;
  void *v152;
  _QWORD *v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  void *v158;
  _QWORD *v159;
  void *v160;
  _QWORD *v161;
  id v162;
  id v163;
  uint64_t v164;
  void *v165;
  _QWORD *v166;
  void *v167;
  _QWORD *v168;
  id v169;
  uint64_t v170;
  void *v171;
  _QWORD *v172;
  void *v173;
  _QWORD *v174;
  id v175;
  id v176;
  id v177;
  uint64_t v178;
  void *v179;
  _QWORD *v180;
  void *v181;
  _QWORD *v182;
  id v183;
  id v184;
  id v185;
  uint64_t v186;
  void *v187;
  _QWORD *v188;
  void *v189;
  _QWORD *v190;
  id v191;
  id v192;
  id v193;
  uint64_t v194;
  void *v195;
  _QWORD *v196;
  void *v197;
  _QWORD *v198;
  id v199;
  id v200;
  id v201;
  uint64_t v202;
  uint64_t j;
  id v204;
  void *v205;
  uint64_t v206;
  void *v207;
  void *v208;
  CGFloat v209;
  uint64_t v210;
  void **v211;
  id v212;
  CGRect v213;
  double v214;
  double v215;
  double v216;
  double v217;
  id v218;
  unsigned int v219;
  id v220;
  id v221;
  id v222;
  _QWORD *v223;
  id v224;
  uint64_t v225;
  id v226;
  id v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  id v232;
  void *v233;
  id v234;
  uint64_t v235;
  id v236;
  id v237;
  __int128 aBlock;
  __int128 v239;
  uint64_t (*v240)();
  _QWORD *v241;
  __int128 v242;
  __int128 v243;
  __objc2_prot *v244;
  char v245[24];
  char v246[32];
  CGRect v247;
  CGRect v248;
  CGRect v249;

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v246, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_isPrepared;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_isPrepared) & 1) != 0)
      goto LABEL_130;
    v9 = (void **)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_interaction)
                 + OBJC_IVAR___BKPalettePresentationInteraction_view);
    swift_beginAccess(v9, v245, 0, 0);
    v10 = *v9;
    if (!v10)
      goto LABEL_130;
    v244 = &OBJC_PROTOCOL___BKAudiobookOpenTransitioning;
    v11 = swift_dynamicCastObjCProtocolConditional(v10, 1, &v244);
    if (!v11)
      goto LABEL_130;
    v12 = (void *)v11;
    ObjectType = swift_getObjectType();
    v14 = v10;
    v15 = objc_msgSend(v12, "superview");
    if (!v15)
    {

      return;
    }
    v235 = v8;
    v16 = v15;
    v237 = v12;
    v17 = objc_msgSend(v15, "subviews");
    v18 = sub_100238628();
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v20 = (void **)v14;
    v236 = (id)sub_1004EF57C((uint64_t)v237, v19);
    v22 = v21;
    swift_bridgeObjectRelease(v19);

    if ((v22 & 1) != 0)
    {

      return;
    }
    if (objc_msgSend(v7, "isReversed"))
    {
      v23 = objc_msgSend(a2, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend(v23, "im_firstVisibleChildConformingToProtocol:", &OBJC_PROTOCOL___BKAudiobookOpenTransitioning);

        if (v25)
        {
          _bridgeAnyObjectToAny(_:)(v25);
          swift_unknownObjectRelease(v25);
        }
        else
        {
          v242 = 0u;
          v243 = 0u;
        }
        v26 = v20;
        sub_10004C7B4((uint64_t)&v242, (uint64_t)&aBlock);
        if (*((_QWORD *)&v239 + 1))
          goto LABEL_17;
      }
      else
      {
        aBlock = 0u;
        v239 = 0u;
        v26 = v20;
      }

      goto LABEL_57;
    }
    *((_QWORD *)&v239 + 1) = ObjectType;
    *(_QWORD *)&aBlock = v237;
    v26 = v20;
    v27 = v20;
LABEL_17:
    v28 = sub_10004CFD4(&qword_1009D41B8);
    if ((swift_dynamicCast(&v242, &aBlock, (char *)&type metadata for Any + 8, v28, 6) & 1) == 0)
    {

      return;
    }
    v234 = (id)v242;
    if (objc_msgSend(v7, "isReversed"))
    {
      *((_QWORD *)&v239 + 1) = ObjectType;
      *(_QWORD *)&aBlock = v237;
      v29 = v26;
      v30 = v234;
      goto LABEL_28;
    }
    v31 = objc_msgSend(a2, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, "im_firstVisibleChildConformingToProtocol:", &OBJC_PROTOCOL___BKAudiobookOpenTransitioning);

      if (v33)
      {
        _bridgeAnyObjectToAny(_:)(v33);
        swift_unknownObjectRelease(v33);
      }
      else
      {
        v242 = 0u;
        v243 = 0u;
      }
      v30 = v234;
      v26 = v20;
      sub_10004C7B4((uint64_t)&v242, (uint64_t)&aBlock);
      if (*((_QWORD *)&v239 + 1))
      {
LABEL_28:
        if ((swift_dynamicCast(&v242, &aBlock, (char *)&type metadata for Any + 8, v28, 6) & 1) == 0)
        {

          swift_unknownObjectRelease(v30);
          return;
        }
        v232 = (id)v242;
        v34 = objc_opt_self(UIViewController);
        v35 = (void *)swift_dynamicCastObjCClass(v30, v34);
        if (v35)
          swift_unknownObjectRetain(v30);
        v36 = objc_msgSend(v35, "view");

        v233 = v36;
        if (!v36)
        {
          v37 = objc_opt_self(UIView);
          v233 = (void *)swift_dynamicCastObjCClass(v30, v37);
          if (!v233)
          {

            swift_unknownObjectRelease(v30);
            swift_unknownObjectRelease(v232);
            return;
          }
          swift_unknownObjectRetain(v30);
        }
        v38 = objc_opt_self(UIViewController);
        v39 = (void *)swift_dynamicCastObjCClass(v232, v38);
        if (v39)
          swift_unknownObjectRetain(v232);
        v40 = objc_msgSend(v39, "view");

        if (!v40)
        {
          v41 = objc_opt_self(UIView);
          v42 = swift_dynamicCastObjCClass(v232, v41);
          if (!v42)
          {

            swift_unknownObjectRelease(v234);
            swift_unknownObjectRelease(v232);

            return;
          }
          v40 = (id)v42;
          swift_unknownObjectRetain(v232);
        }
        v231 = v40;
        v43 = objc_msgSend(v234, "transitionCoverViews");
        if (v43)
        {
          v44 = v43;
          v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, (char *)&type metadata for Any + 8);

          v46 = sub_10050EF34(v45);
          swift_bridgeObjectRelease(v45);
          if (v46)
          {
            v230 = (uint64_t)v46;
            v47 = objc_msgSend(v232, "transitionCoverViews");
            if (v47)
            {
              v48 = v47;
              v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, (char *)&type metadata for Any + 8);

              v50 = sub_10050EF34(v49);
              swift_bridgeObjectRelease(v49);
              v229 = (uint64_t)v50;
              if (v50)
              {
                v51 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
                v52 = objc_msgSend(v51, "sceneManager");

                v53 = objc_msgSend(v52, "primarySceneController");
                v54 = objc_msgSend(v53, "rootBarCoordinator");

                if (!v54
                  || (v55 = objc_msgSend(v54, "rootViewController"),
                      swift_unknownObjectRelease(v54),
                      v56 = objc_msgSend(v55, "view"),
                      v55,
                      !v56))
                {

                  swift_unknownObjectRelease(v234);
                  swift_unknownObjectRelease(v232);

                  v114 = v231;
LABEL_65:

                  swift_bridgeObjectRelease(v229);
LABEL_68:
                  swift_bridgeObjectRelease(v230);
                  return;
                }
                sub_10023882C();
                if (!v57)
                {

                  swift_unknownObjectRelease(v234);
                  swift_unknownObjectRelease(v232);

                  swift_bridgeObjectRelease(v230);
                  swift_bridgeObjectRelease(v229);

                  return;
                }
                v228 = v57;
                v227 = objc_msgSend(v57, "snapshotViewAfterScreenUpdates:", 0);
                if (!v227)
                {

                  swift_unknownObjectRelease(v234);
                  swift_unknownObjectRelease(v232);

                  swift_bridgeObjectRelease(v230);
                  swift_bridgeObjectRelease(v229);

                  return;
                }
                v224 = v56;
                v58 = objc_msgSend(v234, "transitionToolbarViews");
                if (v58)
                {
                  v59 = v58;
                  v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, (char *)&type metadata for Any + 8);

                  v61 = sub_10050EF34(v60);
                  swift_bridgeObjectRelease(v60);
                  v223 = v61;
                  if (v61)
                  {
                    v62 = objc_msgSend(v232, "transitionToolbarViews");
                    if (v62)
                    {
                      v63 = v62;
                      v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, (char *)&type metadata for Any + 8);

                      v65 = sub_10050EF34(v64);
                      swift_bridgeObjectRelease(v64);
                      v225 = (uint64_t)v65;
                      if (v65)
                      {
                        v66 = objc_msgSend(v7, "isReversed");
                        v67 = objc_msgSend(a2, "containerView");
                        objc_msgSend(v234, "transitionCoverFrame");
                        v69 = v68;
                        v71 = v70;
                        v73 = v72;
                        v75 = v74;
                        objc_msgSend(v232, "transitionCoverFrame");
                        v216 = v77;
                        v217 = v76;
                        v214 = v79;
                        v215 = v78;
                        v222 = v67;
                        objc_msgSend(v67, "convertRect:fromCoordinateSpace:", v233, v69, v71, v73, v75);
                        v220 = v80;
                        v82 = v81;
                        v84 = v83;
                        v86 = v85;
                        v219 = v66;
                        if ((v66 & 1) != 0)
                        {
                          objc_msgSend(v224, "convertRect:fromCoordinateSpace:", v231, v217, v216, v215, v214);
                          v216 = v88;
                          v217 = v87;
                          v214 = v90;
                          v215 = v89;
                        }
                        v212 = objc_msgSend(v234, "transitionBackgroundImageView");
                        objc_msgSend(v237, "frame");
                        v92 = v91;
                        v94 = v93;
                        v96 = v95;
                        v98 = v97;
                        objc_msgSend(a3, "addSubview:", v237);
                        v99 = v20;
                        v247.origin.x = v92;
                        v247.origin.y = v94;
                        v247.size.width = v96;
                        v247.size.height = v98;
                        Width = CGRectGetWidth(v247);
                        v209 = v92;
                        v248.origin.x = v92;
                        v101 = v94;
                        v248.origin.y = v94;
                        v102 = v96;
                        v248.size.width = v96;
                        v103 = v98;
                        v248.size.height = v98;
                        objc_msgSend(v237, "setFrame:", 0.0, 0.0, Width, CGRectGetHeight(v248));
                        v211 = v99;

                        v104 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
                        objc_msgSend(v104, "setFrame:", *(double *)&v220, v82, v84, v86);
                        v218 = v104;
                        objc_msgSend(v104, "bounds");
                        v221 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", v105, v106, v107, v108);
                        v109 = objc_msgSend(v234, "transitionCurrentCoverImage");
                        v110 = &selRef_setDisableInteraction_;
                        v111 = (uint64_t (*)(uint64_t))&selRef_sectionNameForCollectionType_layoutMode_;
                        if (v109)
                        {
                          v112 = v109;
                          objc_msgSend(v221, "setImage:", v109);
                          objc_msgSend(v221, "setContentMode:", objc_msgSend(v234, "coverContentMode"));

                        }
                        else
                        {
                          v116 = objc_msgSend(v232, "transitionCurrentCoverImage");
                          v110 = (char **)v221;
                          objc_msgSend(v221, "setImage:", v116);

                          objc_msgSend(v221, "setContentMode:", objc_msgSend(v232, "coverContentMode"));
                        }

                        objc_msgSend(v221, "setAutoresizingMask:", 18);
                        objc_msgSend(v218, "addSubview:", v221);
                        objc_msgSend(v218, "setClipsToBounds:", 1);
                        objc_msgSend(v234, "coverCornerRadius");
                        objc_msgSend(v218, "_setContinuousCornerRadius:");
                        objc_msgSend(v232, "coverCornerRadius");
                        v118 = v117;
                        objc_msgSend(v222, "addSubview:", v218);
                        objc_msgSend(v228, "frame");
                        x = v249.origin.x;
                        y = v249.origin.y;
                        v121 = v249.size.width;
                        height = v249.size.height;
                        v213 = CGRectOffset(v249, 0.0, 84.0);
                        if (v66)
                        {
                          v123 = x;
                          v124 = y;
                          v125 = v121;
                          v126 = height;
                          x = v213.origin.x;
                          y = v213.origin.y;
                          v121 = v213.size.width;
                          height = v213.size.height;
                          v213.origin.x = v123;
                          v213.origin.y = v124;
                          v213.size.width = v125;
                          v213.size.height = v126;
                        }
                        objc_msgSend(v227, "setFrame:", x, y, v121, height);
                        objc_msgSend(v222, "addSubview:", v227);
                        if ((unint64_t)v230 >> 62)
                        {
                          if (v230 >= 0)
                            v132 = v230 & 0xFFFFFFFFFFFFFF8;
                          else
                            v132 = v230;
                          swift_bridgeObjectRetain(v230);
                          v127 = _CocoaArrayWrapper.endIndex.getter(v132);
                          if (!v127)
                            goto LABEL_93;
                        }
                        else
                        {
                          v127 = *(_QWORD *)((v230 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          swift_bridgeObjectRetain(v230);
                          if (!v127)
                            goto LABEL_93;
                        }
                        if (v127 < 1)
                        {
                          __break(1u);
                          goto LABEL_123;
                        }
                        for (i = 0; i != v127; ++i)
                        {
                          if ((v230 & 0xC000000000000001) != 0)
                            v130 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v230);
                          else
                            v130 = *(id *)(v230 + 8 * i + 32);
                          v131 = v130;
                          objc_msgSend(v130, "setAlpha:", 0.0);

                        }
LABEL_93:
                        swift_bridgeObjectRelease(v230);
                        if ((unint64_t)v229 >> 62)
                        {
                          v110 = (char **)v229;
                          if (v229 >= 0)
                            v137 = v229 & 0xFFFFFFFFFFFFFF8;
                          else
                            v137 = v229;
                          swift_bridgeObjectRetain(v229);
                          v133 = _CocoaArrayWrapper.endIndex.getter(v137);
                          v111 = (uint64_t (*)(uint64_t))&selRef_sectionNameForCollectionType_layoutMode_;
                          if (!v133)
                            goto LABEL_105;
                        }
                        else
                        {
                          v133 = *(_QWORD *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          v110 = (char **)v229;
                          swift_bridgeObjectRetain(v229);
                          v111 = (uint64_t (*)(uint64_t))&selRef_sectionNameForCollectionType_layoutMode_;
                          if (!v133)
                            goto LABEL_105;
                        }
                        if (v133 >= 1)
                        {
                          v134 = 0;
                          v110 = (char **)v229;
                          do
                          {
                            if ((v229 & 0xC000000000000001) != 0)
                              v135 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v134, v229);
                            else
                              v135 = *(id *)(v229 + 8 * v134 + 32);
                            v136 = v135;
                            ++v134;
                            objc_msgSend(v135, "setAlpha:", 0.0);

                          }
                          while (v133 != v134);
LABEL_105:
                          swift_bridgeObjectRelease(v110);
                          objc_msgSend(v228, "setAlpha:", 0.0);
                          v138 = (CGFloat *)swift_allocObject(&unk_1008F5708, 136, 7);
                          *((_QWORD *)v138 + 2) = v16;
                          *((_QWORD *)v138 + 3) = v237;
                          *((_QWORD *)v138 + 4) = v236;
                          v138[5] = v209;
                          v138[6] = v101;
                          v138[7] = v102;
                          v138[8] = v103;
                          *((_QWORD *)v138 + 9) = v230;
                          *((_QWORD *)v138 + 10) = v110;
                          *((_QWORD *)v138 + 11) = v223;
                          *((_QWORD *)v138 + 12) = v228;
                          *((_QWORD *)v138 + 13) = v212;
                          *((_QWORD *)v138 + 14) = v218;
                          *((_QWORD *)v138 + 15) = v227;
                          *((_QWORD *)v138 + 16) = v225;
                          v139 = swift_allocObject(&unk_1008F5730, 32, 7);
                          *(_QWORD *)(v139 + 16) = sub_100238AB0;
                          *(_QWORD *)(v139 + 24) = v138;
                          v210 = v139;
                          v140 = &v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_completionBlocks];
                          swift_beginAccess(&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_completionBlocks], &aBlock, 33, 0);
                          v141 = *(_QWORD **)v140;
                          v230 = v211;
                          v211 = v16;
                          swift_bridgeObjectRetain(v223);
                          v228 = v228;
                          v229 = (uint64_t)v212;
                          v142 = v218;
                          v236 = v227;
                          swift_bridgeObjectRetain(v225);
                          swift_retain(v138);
                          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v141);
                          *(_QWORD *)v140 = v141;
                          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          {
                            v141 = sub_1005B08EC(0, v141[2] + 1, 1, v141);
                            *(_QWORD *)v140 = v141;
                          }
                          v145 = v141[2];
                          v144 = v141[3];
                          if (v145 >= v144 >> 1)
                          {
                            v141 = sub_1005B08EC((_QWORD *)(v144 > 1), v145 + 1, 1, v141);
                            *(_QWORD *)v140 = v141;
                          }
                          v141[2] = v145 + 1;
                          v146 = &v141[2 * v145];
                          v146[4] = sub_100238AF4;
                          v146[5] = v210;
                          swift_endAccess(&aBlock);
                          swift_release(v138);
                          v147 = (double *)swift_allocObject(&unk_1008F5758, 64, 7);
                          *((_QWORD *)v147 + 2) = v142;
                          v147[3] = v217;
                          v147[4] = v216;
                          v147[5] = v215;
                          v147[6] = v214;
                          *((_QWORD *)v147 + 7) = v118;
                          v227 = v142;
                          if (v219)
                            v148 = 1;
                          else
                            v148 = 2;
                          sub_100235610(v148, (uint64_t)sub_100238B3C, (uint64_t)v147);
                          swift_release(v147);
                          if ((v219 & 1) != 0)
                          {
                            swift_bridgeObjectRelease(v225);
                            v149 = swift_allocObject(&unk_1008F58E8, 24, 7);
                            *(_QWORD *)(v149 + 16) = v212;
                            v150 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_backgroundFadeOutAnimator];
                            v151 = (_QWORD *)swift_allocObject(&unk_1008F5910, 40, 7);
                            v151[2] = sub_100238C3C;
                            v151[3] = v149;
                            v151[4] = v150;
                            v240 = sub_100238BB8;
                            v241 = v151;
                            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                            *((_QWORD *)&aBlock + 1) = 1107296256;
                            *(_QWORD *)&v239 = sub_1000147F0;
                            *((_QWORD *)&v239 + 1) = &unk_1008F5928;
                            v152 = _Block_copy(&aBlock);
                            v153 = v241;
                            v154 = v150;
                            v155 = (id)v229;
                            v156 = v154;
                            swift_retain(v149);
                            swift_retain(v151);
                            objc_msgSend(v156, "addAnimations:", v152, swift_release(v153).n128_f64[0]);
                            _Block_release(v152);
                            swift_release(v149);

                            swift_release(v151);
                            v157 = swift_allocObject(&unk_1008F5960, 56, 7);
                            *(_QWORD *)(v157 + 16) = v236;
                            *(CGRect *)(v157 + 24) = v213;
                            v158 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_commonAnimator];
                            v159 = (_QWORD *)swift_allocObject(&unk_1008F5988, 40, 7);
                            v159[2] = sub_100238BB0;
                            v159[3] = v157;
                            v159[4] = v158;
                            v240 = sub_100238BB8;
                            v241 = v159;
                            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                            *((_QWORD *)&aBlock + 1) = 1107296256;
                            *(_QWORD *)&v239 = sub_1000147F0;
                            *((_QWORD *)&v239 + 1) = &unk_1008F59A0;
                            v160 = _Block_copy(&aBlock);
                            v161 = v241;
                            v162 = v158;
                            v226 = v236;
                            v163 = v162;
                            swift_retain(v157);
                            swift_retain(v159);
                            objc_msgSend(v163, "addAnimations:", v160, swift_release(v161).n128_f64[0]);
                            _Block_release(v160);
                            swift_release(v157);

                            swift_release(v159);
                            v164 = swift_allocObject(&unk_1008F59D8, 24, 7);
                            *(_QWORD *)(v164 + 16) = v223;
                            v165 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_grabberFadeOutAnimator];
                            v166 = (_QWORD *)swift_allocObject(&unk_1008F5A00, 40, 7);
                            v166[2] = sub_100238C78;
                            v166[3] = v164;
                            v166[4] = v165;
                            v240 = sub_100238BB8;
                            v241 = v166;
                            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                            *((_QWORD *)&aBlock + 1) = 1107296256;
                            *(_QWORD *)&v239 = sub_1000147F0;
                            *((_QWORD *)&v239 + 1) = &unk_1008F5A18;
                            v167 = _Block_copy(&aBlock);
                            v168 = v241;
                            v169 = v165;
                            swift_retain(v164);
                            swift_retain(v166);
                            objc_msgSend(v169, "addAnimations:", v167, swift_release(v168).n128_f64[0]);
                            _Block_release(v167);
                            swift_release(v164);

                            swift_release(v166);
                            objc_msgSend(v237, "setAlpha:", 0.0);
                            v170 = swift_allocObject(&unk_1008F5A50, 24, 7);
                            *(_QWORD *)(v170 + 16) = v237;
                            v171 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_miniPlayerFadeInAnimator];
                            v172 = (_QWORD *)swift_allocObject(&unk_1008F5A78, 40, 7);
                            v172[2] = sub_100238C98;
                            v172[3] = v170;
                            v172[4] = v171;
                            v240 = sub_100238BB8;
                            v241 = v172;
                            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                            *((_QWORD *)&aBlock + 1) = 1107296256;
                            *(_QWORD *)&v239 = sub_1000147F0;
                            *((_QWORD *)&v239 + 1) = &unk_1008F5A90;
                            v173 = _Block_copy(&aBlock);
                            v174 = v241;
                            v175 = v171;
                            v176 = (id)v230;
                            v177 = v175;
                            swift_retain(v170);
                            swift_retain(v172);
                            v110 = &selRef__teardownLocalViews;
                            objc_msgSend(v177, "addAnimations:", v173, swift_release(v174).n128_f64[0]);
                            _Block_release(v173);
                            swift_release(v170);

                            swift_release(v172);
                            objc_msgSend(v226, "setAlpha:", 0.0);
                            v178 = swift_allocObject(&unk_1008F5AC8, 24, 7);
                            *(_QWORD *)(v178 + 16) = v226;
                            v179 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_tabBarFadeInAnimator];
                            v180 = (_QWORD *)swift_allocObject(&unk_1008F5AF0, 40, 7);
                            v180[2] = sub_100238D98;
                            v180[3] = v178;
                            v180[4] = v179;
                            v240 = sub_100238BB8;
                            v241 = v180;
                            *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                            *((_QWORD *)&aBlock + 1) = 1107296256;
                            *(_QWORD *)&v239 = sub_1000147F0;
                            *((_QWORD *)&v239 + 1) = &unk_1008F5B08;
                            v181 = _Block_copy(&aBlock);
                            v182 = v241;
                            v183 = v179;
                            v184 = v226;
                            v185 = v183;
LABEL_129:
                            v208 = v185;
                            swift_retain(v178);
                            swift_retain(v180);
                            objc_msgSend(v208, v110[141], v181, swift_release(v182).n128_f64[0]);
                            _Block_release(v181);
                            swift_release(v178);

                            swift_unknownObjectRelease(v234);
                            swift_unknownObjectRelease(v232);

                            swift_release(v180);
                            v7[v235] = 1;
LABEL_130:

                            return;
                          }
                          swift_bridgeObjectRelease(v223);
                          v186 = swift_allocObject(&unk_1008F5780, 56, 7);
                          *(_QWORD *)(v186 + 16) = v236;
                          *(CGRect *)(v186 + 24) = v213;
                          v187 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_backgroundFadeOutAnimator];
                          v188 = (_QWORD *)swift_allocObject(&unk_1008F57A8, 40, 7);
                          v188[2] = sub_100238BB0;
                          v188[3] = v186;
                          v188[4] = v187;
                          v240 = sub_100238BB8;
                          v241 = v188;
                          v20 = _NSConcreteStackBlock;
                          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                          v118 = 1107296256;
                          *((_QWORD *)&aBlock + 1) = 1107296256;
                          *(_QWORD *)&v239 = sub_1000147F0;
                          *((_QWORD *)&v239 + 1) = &unk_1008F57C0;
                          v189 = _Block_copy(&aBlock);
                          v190 = v241;
                          v191 = v187;
                          v192 = v236;
                          v193 = v191;
                          swift_retain(v186);
                          swift_retain(v188);
                          v110 = &selRef__teardownLocalViews;
                          objc_msgSend(v193, "addAnimations:", v189, swift_release(v190).n128_f64[0]);
                          _Block_release(v189);
                          swift_release(v186);

                          swift_release(v188);
                          v194 = swift_allocObject(&unk_1008F57F8, 24, 7);
                          *(_QWORD *)(v194 + 16) = v237;
                          v195 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_miniPlayerFadeOutAnimator];
                          v196 = (_QWORD *)swift_allocObject(&unk_1008F5820, 40, 7);
                          v196[2] = sub_100238BE0;
                          v196[3] = v194;
                          v196[4] = v195;
                          v240 = sub_100238BB8;
                          v241 = v196;
                          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                          *((_QWORD *)&aBlock + 1) = 1107296256;
                          v111 = sub_1000147F0;
                          *(_QWORD *)&v239 = sub_1000147F0;
                          *((_QWORD *)&v239 + 1) = &unk_1008F5838;
                          v197 = _Block_copy(&aBlock);
                          v198 = v241;
                          v199 = v195;
                          v200 = (id)v230;
                          v201 = v199;
                          swift_retain(v194);
                          swift_retain(v196);
                          objc_msgSend(v201, "addAnimations:", v197, swift_release(v198).n128_f64[0]);
                          _Block_release(v197);
                          swift_release(v194);

                          swift_release(v196);
                          v128 = v225 & 0xFFFFFFFFFFFFFF8;
                          if (!((unint64_t)v225 >> 62))
                          {
                            v202 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFFF8) + 0x10);
                            swift_bridgeObjectRetain(v225);
                            if (v202)
                            {
LABEL_116:
                              if (v202 < 1)
                              {
                                __break(1u);
                                return;
                              }
                              for (j = 0; j != v202; ++j)
                              {
                                if ((v225 & 0xC000000000000001) != 0)
                                  v204 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v225);
                                else
                                  v204 = *(id *)(v225 + 8 * j + 32);
                                v205 = v204;
                                objc_msgSend(v204, "setAlpha:", 0.0);

                              }
                            }
LABEL_128:
                            swift_bridgeObjectRelease(v225);
                            v178 = swift_allocObject(&unk_1008F5870, 24, 7);
                            *(_QWORD *)(v178 + 16) = v225;
                            v207 = *(void **)&v7[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_grabberFadeInAnimator];
                            v180 = (_QWORD *)swift_allocObject(&unk_1008F5898, 40, 7);
                            v180[2] = sub_100238C1C;
                            v180[3] = v178;
                            v180[4] = v207;
                            v240 = sub_100238BB8;
                            v241 = v180;
                            *(_QWORD *)&aBlock = v20;
                            *((_QWORD *)&aBlock + 1) = v118;
                            *(_QWORD *)&v239 = v111;
                            *((_QWORD *)&v239 + 1) = &unk_1008F58B0;
                            v181 = _Block_copy(&aBlock);
                            v182 = v241;
                            v185 = v207;
                            goto LABEL_129;
                          }
LABEL_124:
                          if (v225 >= 0)
                            v206 = v128;
                          else
                            v206 = v225;
                          swift_bridgeObjectRetain(v225);
                          v202 = _CocoaArrayWrapper.endIndex.getter(v206);
                          if (v202)
                            goto LABEL_116;
                          goto LABEL_128;
                        }
LABEL_123:
                        __break(1u);
                        goto LABEL_124;
                      }

                      swift_unknownObjectRelease(v234);
                      v115 = v232;
                    }
                    else
                    {
                      swift_unknownObjectRelease(v232);

                      v115 = v234;
                    }
                    swift_unknownObjectRelease(v115);

                    swift_bridgeObjectRelease(v223);
                    goto LABEL_77;
                  }

                  swift_unknownObjectRelease(v234);
                }
                else
                {
                  swift_unknownObjectRelease(v234);

                }
                swift_unknownObjectRelease(v232);

LABEL_77:
                v114 = v224;
                goto LABEL_65;
              }

              swift_unknownObjectRelease(v234);
              v113 = v232;
            }
            else
            {
              swift_unknownObjectRelease(v232);

              v113 = v234;
            }
            swift_unknownObjectRelease(v113);

            goto LABEL_68;
          }

          swift_unknownObjectRelease(v234);
        }
        else
        {
          swift_unknownObjectRelease(v234);

        }
        swift_unknownObjectRelease(v232);

        return;
      }
    }
    else
    {
      aBlock = 0u;
      v239 = 0u;
      v30 = v234;
    }

    swift_unknownObjectRelease(v30);
LABEL_57:

    sub_10004A7B8((uint64_t)&aBlock);
  }
}

uint64_t sub_100237A90(int a1, id a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, void *a13, void *a14, void *a15, unint64_t a16)
{
  uint64_t v24;
  uint64_t result;
  uint64_t i;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t j;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t k;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t m;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t n;
  id v46;
  void *v47;

  objc_msgSend(a2, "insertSubview:atIndex:");
  objc_msgSend(a3, "setFrame:", a9, a10, a11, a12);
  objc_msgSend(a3, "setAlpha:", 1.0);
  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v29 = a5;
    else
      v29 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a5);
    result = _CocoaArrayWrapper.endIndex.getter(v29);
    v24 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v24 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a5);
    if (!v24)
      goto LABEL_13;
  }
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_61;
  }
  for (i = 0; i != v24; ++i)
  {
    if ((a5 & 0xC000000000000001) != 0)
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a5);
    else
      v27 = *(id *)(a5 + 8 * i + 32);
    v28 = v27;
    objc_msgSend(v27, "setAlpha:", 1.0);

  }
LABEL_13:
  swift_bridgeObjectRelease(a5);
  if ((unint64_t)a6 >> 62)
  {
    if (a6 < 0)
      v34 = a6;
    else
      v34 = a6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a6);
    result = _CocoaArrayWrapper.endIndex.getter(v34);
    v30 = result;
    if (!result)
      goto LABEL_25;
  }
  else
  {
    v30 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a6);
    if (!v30)
      goto LABEL_25;
  }
  if (v30 < 1)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  for (j = 0; j != v30; ++j)
  {
    if ((a6 & 0xC000000000000001) != 0)
      v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, a6);
    else
      v32 = *(id *)(a6 + 8 * j + 32);
    v33 = v32;
    objc_msgSend(v32, "setAlpha:", 1.0);

  }
LABEL_25:
  swift_bridgeObjectRelease(a6);
  if ((unint64_t)a7 >> 62)
  {
    if (a7 < 0)
      v39 = a7;
    else
      v39 = a7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a7);
    result = _CocoaArrayWrapper.endIndex.getter(v39);
    v35 = result;
    if (!result)
      goto LABEL_37;
  }
  else
  {
    v35 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a7);
    if (!v35)
      goto LABEL_37;
  }
  if (v35 < 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  for (k = 0; k != v35; ++k)
  {
    if ((a7 & 0xC000000000000001) != 0)
      v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, a7);
    else
      v37 = *(id *)(a7 + 8 * k + 32);
    v38 = v37;
    objc_msgSend(v37, "setAlpha:", 1.0);

  }
LABEL_37:
  swift_bridgeObjectRelease(a7);
  objc_msgSend(a8, "setAlpha:", 1.0);
  if (a13)
    objc_msgSend(a13, "setAlpha:", 1.0);
  objc_msgSend(a14, "removeFromSuperview");
  objc_msgSend(a15, "removeFromSuperview");
  if (a16 >> 62)
  {
    if ((a16 & 0x8000000000000000) != 0)
      v44 = a16;
    else
      v44 = a16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a16);
    result = _CocoaArrayWrapper.endIndex.getter(v44);
    v40 = result;
    if (!result)
      goto LABEL_51;
  }
  else
  {
    v40 = *(_QWORD *)((a16 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a16);
    if (!v40)
      goto LABEL_51;
  }
  if (v40 < 1)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  for (m = 0; m != v40; ++m)
  {
    if ((a16 & 0xC000000000000001) != 0)
      v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(m, a16);
    else
      v42 = *(id *)(a16 + 8 * m + 32);
    v43 = v42;
    objc_msgSend(v42, "setAlpha:", 1.0);

  }
LABEL_51:
  result = swift_bridgeObjectRelease(a16);
  if (!v35)
    return result;
  if (v35 < 1)
  {
LABEL_64:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain(a7);
  for (n = 0; n != v35; ++n)
  {
    if ((a7 & 0xC000000000000001) != 0)
      v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(n, a7);
    else
      v46 = *(id *)(a7 + 8 * n + 32);
    v47 = v46;
    objc_msgSend(v46, "setAlpha:", 1.0);

  }
  return swift_bridgeObjectRelease(a7);
}

uint64_t sub_100237EAC(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v8 = *(id *)(a1 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setAlpha:", a3);

    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

id AudiobookPaletteStyleAnimationControllerPhone.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for AudiobookPaletteStyleAnimationControllerPhone);
}

void (*sub_100237F90())()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(&unk_1008F5690, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  return sub_1002385E0;
}

void sub_100237FD8(uint64_t a1)
{
  uint64_t v1;
  _BYTE *Strong;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_isPrepared] = 1;

  }
}

id AudiobookPaletteStyleAnimationControllerPad.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for AudiobookPaletteStyleAnimationControllerPad);
}

id sub_10023803C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_10023806C(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;
  double v18;
  id v19;
  id v20;
  double v21;
  id v22;
  id v23;
  double v24;
  id v25;
  id v26;
  double v27;
  id v28;
  id v29;
  objc_super v31;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_completionBlocks] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_isPrepared] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_interaction] = a1;
  v3 = qword_1009CDD00;
  v4 = v1;
  v5 = a1;
  if (v3 != -1)
    swift_once(&qword_1009CDD00, sub_100235714);
  v6 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 250.0 / *(double *)&qword_100A1E3B0, 30.0 / sqrt(*(double *)&qword_100A1E3B0), 0.0, 0.0);
  v7 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "init");
  objc_msgSend(v6, "setSpringCubicTimingParameters:", v7);

  v8 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringAnimator), "initWithDuration:timingParameters:", v6, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_commonAnimator] = v8;
  v9 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 150.0 / *(double *)&qword_100A1E3B0, 30.0 / sqrt(*(double *)&qword_100A1E3B0), 0.0, 0.0);
  v10 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "init");
  objc_msgSend(v9, "setSpringCubicTimingParameters:", v10);

  v11 = objc_msgSend(objc_allocWithZone((Class)MPCubicSpringAnimator), "initWithDuration:timingParameters:", v9, 0.0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_delayedCommonAnimator] = v11;
  v12 = *(double *)&qword_100A1E3B0 * 0.2;
  v13 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.18, 0.0, 1.0, 1.0);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v13, v12);

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_backgroundFadeOutAnimator] = v14;
  v15 = *(double *)&qword_100A1E3B0 * 0.38;
  v16 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.0, 0.0, 1.0, 1.0);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v16, v15);

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_grabberFadeInAnimator] = v17;
  v18 = *(double *)&qword_100A1E3B0 * 0.04;
  v19 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.19, 0.0, 1.0, 1.0);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v19, v18);

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_grabberFadeOutAnimator] = v20;
  v21 = *(double *)&qword_100A1E3B0 * 0.29;
  v22 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.0, 0.0, 0.56, 1.0);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v22, v21);

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_miniPlayerFadeInAnimator] = v23;
  v24 = *(double *)&qword_100A1E3B0 * 0.14;
  v25 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.0, 0.0, 1.0, 1.0);
  v26 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v25, v24);

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_miniPlayerFadeOutAnimator] = v26;
  v27 = *(double *)&qword_100A1E3B0 * 0.29;
  v28 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.0, 0.0, 0.56, 1.0);
  v29 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v28, v27);

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_tabBarFadeInAnimator] = v29;
  v31.receiver = v4;
  v31.super_class = (Class)type metadata accessor for AudiobookPaletteStyleAnimationController();
  return objc_msgSendSuper2(&v31, "init");
}

id _s5Books40AudiobookPaletteStyleAnimationControllerC07paletteD12OpenAnimator11interaction6traits14forceFullSlideSo08_UISheeteF0CAA0C23PresentationInteractionCSg_So17UITraitCollectionCSgSbtFZ_0(id result, id a2, char a3)
{
  void *v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;

  v3 = result;
  if ((a3 & 1) != 0 || a2 && (result = objc_msgSend(a2, "userInterfaceIdiom"), result == (id)1))
  {
    if (v3)
    {
      v4 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationControllerPad();
LABEL_8:
      v5 = objc_allocWithZone(v4);
      v6 = v3;
      v7 = sub_10023806C(v6);

      return v7;
    }
    __break(1u);
  }
  else if (v3)
  {
    v4 = (objc_class *)type metadata accessor for AudiobookPaletteStyleAnimationControllerPhone();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AudiobookPaletteStyleAnimationController()
{
  return objc_opt_self(_TtC5Books40AudiobookPaletteStyleAnimationController);
}

uint64_t type metadata accessor for AudiobookPaletteStyleAnimationControllerPhone()
{
  return objc_opt_self(BKAudiobookPaletteStyleAnimationControllerPhone);
}

uint64_t type metadata accessor for AudiobookPaletteStyleAnimationControllerPad()
{
  return objc_opt_self(BKAudiobookPaletteStyleAnimationControllerPad);
}

uint64_t sub_1002385BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002385E0()
{
  uint64_t v0;

  sub_100237FD8(v0);
}

uint64_t sub_1002385E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10023861C()
{
  uint64_t v0;

  sub_100236148(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_100238628()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D41B0;
  if (!qword_1009D41B0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D41B0);
  }
  return result;
}

void *sub_100238664(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v22;

  v3 = a2;
  v4 = (void *)a1;
  if (a2 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    v22 = v3 & 0xC000000000000001;
    v6 = OBJC_IVAR____TtC5Books40AudiobookPaletteStyleAnimationController_interaction;
    v7 = 4;
    while (1)
    {
      v8 = v22 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v3) : *(id *)(v3 + 8 * v7);
      v4 = v8;
      v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v10 = v3;
      v11 = v5;
      v12 = objc_msgSend(v8, "coordinatedViewControllersFor:", *(_QWORD *)(a3 + v6));
      v13 = sub_10004CFD4(&qword_1009D3398);
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

      v15 = v4;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);
      sub_1003747A4(v14);

      ++v7;
      v5 = v11;
      v19 = v9 == v11;
      v3 = v10;
      if (v19)
      {
        swift_bridgeObjectRelease(v10);
        return (void *)a1;
      }
    }
    __break(1u);
LABEL_14:
    if (v3 < 0)
      v20 = v3;
    else
      v20 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  swift_bridgeObjectRelease(v3);
  return v4;
}

void sub_10023882C()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v1 = objc_msgSend(v0, "sceneManager");

  v2 = objc_msgSend(v1, "primarySceneController");
  v3 = objc_msgSend(v2, "rootBarCoordinator");

  if (v3)
  {
    v4 = objc_msgSend(v3, "rootViewController");
    v5 = objc_msgSend(v4, "view");

    if (v5)
    {
      v6 = objc_msgSend(v5, "subviews");

      v7 = sub_100238628();
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      if ((unint64_t)v8 >> 62)
        goto LABEL_16;
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      for (; v9; v9 = _CocoaArrayWrapper.endIndex.getter(v15))
      {
        v10 = 4;
        while (1)
        {
          v11 = (v8 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8)
              : *(id *)(v8 + 8 * v10);
          v12 = v11;
          v13 = v10 - 3;
          if (__OFADD__(v10 - 4, 1))
            break;
          v14 = objc_opt_self(UITabBar);
          if (swift_dynamicCastObjCClass(v12, v14))
          {
            swift_unknownObjectRelease(v3);
            swift_bridgeObjectRelease_n(v8, 2);
            return;
          }

          ++v10;
          if (v13 == v9)
            goto LABEL_12;
        }
        __break(1u);
LABEL_16:
        if (v8 < 0)
          v15 = v8;
        else
          v15 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
      }
LABEL_12:
      swift_unknownObjectRelease(v3);
      swift_bridgeObjectRelease_n(v8, 2);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100238A44()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  return swift_deallocObject(v0, 136, 7);
}

uint64_t sub_100238AB0(int a1)
{
  uint64_t v1;

  return sub_100237A90(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(void **)(v1 + 96), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(void **)(v1 + 104), *(void **)(v1 + 112), *(void **)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100238AF4(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_100238B18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_100238B3C()
{
  uint64_t v0;
  void *v1;
  double v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(double *)(v0 + 56);
  objc_msgSend(v1, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  return objc_msgSend(v1, "_setContinuousCornerRadius:", v2);
}

uint64_t sub_100238B8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100238BBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100238BE0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

uint64_t sub_100238BF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100238C1C(double a1)
{
  uint64_t v1;

  return sub_100237EAC(*(_QWORD *)(v1 + 16), a1, 1.0);
}

id sub_100238C3C()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  return result;
}

id sub_100238C5C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_100238C78(double a1)
{
  uint64_t v1;

  return sub_100237EAC(*(_QWORD *)(v1 + 16), a1, 0.0);
}

id sub_100238C98()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_100238CB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100238CE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(id))(v0 + 16))(objc_msgSend(*(id *)(v0 + 32), "duration"));
}

uint64_t sub_100238D20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100238D4C()
{
  uint64_t v0;

  return sub_100235B30(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100238D5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100238D80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100238D90()
{
  uint64_t v0;

  return sub_100344528(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100238E0C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v27 - v13;
  v15 = sub_100059BB4();
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  static DispatchTime.now()();
  + infix(_:_:)(v12, 2.0);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  v18 = swift_allocObject(&unk_1008F5CE8, 24, 7);
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_10023A61C;
  v32 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F5D00;
  v19 = _Block_copy(aBlock);
  v20 = v32;
  v21 = v1;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v25 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v2, v23);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v29);
  v17(v14, v8);
  return 0;
}

void sub_100239080(void *a1)
{
  id v1;
  const void *v2;

  v1 = objc_msgSend(a1, "onReceiveHandler");
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void))v1 + 2))();
    _Block_release(v2);
  }
  else
  {
    __break(1u);
  }
}

id sub_100239108()
{
  return sub_10023803C(type metadata accessor for PPTHostedPageDependentTest);
}

uint64_t type metadata accessor for PPTHostedPageDependentTest()
{
  return objc_opt_self(_TtC5Books26PPTHostedPageDependentTest);
}

void sub_100239134()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  Swift::OpaquePointer v10;
  Swift::String v11;
  id v12;
  const void *v13;

  v1 = v0;
  objc_msgSend(v0, "setTestTimeout:", 100);
  objc_msgSend(v0, "setRunning:", 1);
  v2 = (void *)sub_10023A464();
  v3 = objc_msgSend(v1, "name");
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;

  v8 = objc_msgSend(v1, "options");
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  v10._rawValue = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v11._countAndFlagsBits = v5;
  v11._object = v7;
  UIHostingController.runTest(_:options:)(v11, v10);

  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v10._rawValue);
  objc_msgSend(v1, "setResult:", 0);
  v12 = objc_msgSend(v1, "onTestFinished");
  if (v12)
  {
    v13 = v12;
    (*((void (**)(void))v12 + 2))();
    _Block_release(v13);
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1002392AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t))
{
  void *v6;
  NSString v12;
  NSDictionary v13;
  NSDictionary v14;
  id v15;
  objc_super v17;

  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    a1 = swift_bridgeObjectRelease(a2);
  }
  else
  {
    v12 = 0;
  }
  if (a3)
  {
    v13.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    a1 = swift_bridgeObjectRelease(a3);
    if (a4)
    {
LABEL_6:
      v14.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      a1 = swift_bridgeObjectRelease(a4);
      goto LABEL_9;
    }
  }
  else
  {
    v13.super.isa = 0;
    if (a4)
      goto LABEL_6;
  }
  v14.super.isa = 0;
LABEL_9:
  v17.receiver = v6;
  v17.super_class = (Class)a6(a1);
  v15 = objc_msgSendSuper2(&v17, "initWithName:options:testDefinition:isMainTest:", v12, v13.super.isa, v14.super.isa, a5 & 1);

  if (v15)
  return v15;
}

id sub_1002393DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a3)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v13 = v12;
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  if (a4)
    a4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  if (a5)
    v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v14 = 0;
  return sub_1002392AC(v11, v13, a4, v14, a6, a7);
}

id sub_1002394C0(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_1002394FC()
{
  return sub_10023803C(type metadata accessor for PPTHostedPageScrollTest);
}

uint64_t type metadata accessor for PPTHostedPageScrollTest()
{
  return objc_opt_self(PPTHostedPageScrollTest);
}

uint64_t sub_100239528(NSString a1, Class isa, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  char *v11;
  unint64_t v12;
  char v13;
  Class v14;
  id v15;
  uint64_t result;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  objc_super v20;
  _QWORD v21[2];
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;

  v21[0] = 0xD000000000000013;
  v21[1] = 0x80000001007B8C50;
  v11 = v5;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a4 + 16) && (v12 = sub_1000561E8((uint64_t)&v22), (v13 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(a4 + 56) + 32 * v12, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1000569AC((uint64_t)&v22);
  if (!*((_QWORD *)&v25 + 1))
  {
LABEL_13:
    sub_10004A7B8((uint64_t)&v24);
    goto LABEL_14;
  }
  if ((swift_dynamicCast(v21, &v24, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    *(_QWORD *)&v11[OBJC_IVAR___PPTHostedPageGoToSeeAllTest_seeAllShelfIndex] = v21[0];

    a1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(isa);
    if (a3)
    {
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      isa = 0;
    }
    v14 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a4);
    v20.receiver = v11;
    v20.super_class = (Class)type metadata accessor for PPTHostedPageGoToSeeAllTest();
    v15 = objc_msgSendSuper2(&v20, "initWithName:options:testDefinition:isMainTest:", a1, isa, v14, a5 & 1);

    if (v15)
      return (uint64_t)v15;
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(61);
  v17._countAndFlagsBits = 0xD00000000000003ALL;
  v17._object = (void *)0x80000001007B8C70;
  String.append(_:)(v17);
  v18._countAndFlagsBits = (uint64_t)a1;
  v18._object = isa;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 39;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v22, v23, "Books/PPTHostedPageScrollTest.swift", 35, 2, 54, 0);
  __break(1u);
  return result;
}

uint64_t sub_100239834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4[7] = a4;
  v5 = type metadata accessor for ContinuousClock.Instant(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v7);
  v4[11] = swift_task_alloc(v7);
  v8 = type metadata accessor for ContinuousClock(0);
  v4[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[13] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[14] = swift_task_alloc(v10);
  v4[15] = swift_task_alloc(v10);
  v4[16] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v4[17] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v4[18] = v12;
  v4[19] = v13;
  return swift_task_switch(sub_10023991C, v12, v13);
}

uint64_t sub_10023991C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = (void *)sub_10023A464();
  PageHostingController.goToSeeAll(shelfIndex:)(*(_QWORD *)(v1 + OBJC_IVAR___PPTHostedPageGoToSeeAllTest_seeAllShelfIndex));

  ContinuousClock.init()();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1009E3628 + dword_1009E3628);
  v3 = (_QWORD *)swift_task_alloc(unk_1009E362C);
  *(_QWORD *)(v0 + 160) = v3;
  *v3 = v0;
  v3[1] = sub_1002399C8;
  return v5(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1002399C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc(v3);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v2[22] = v7;
  v7(v4, v5);
  if (v0)
    v8 = sub_100239BE8;
  else
    v8 = sub_100239A54;
  return swift_task_switch(v8, v2[18], v2[19]);
}

uint64_t sub_100239A54()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t ObjectType;
  uint64_t v7;

  v1 = (void *)objc_opt_self(BKAppDelegate);
  *(_QWORD *)(v0 + 184) = v1;
  *(_QWORD *)(v0 + 208) = 1;
  v2 = objc_msgSend(v1, "sceneManager");
  v3 = objc_msgSend(v2, "primarySceneController");

  v4 = objc_msgSend(v3, "rootBarCoordinator");
  if (v4)
  {
    v5 = objc_msgSend(v4, "selectedTopViewController");
    swift_unknownObjectRelease(v4);
    if (v5)
    {
      ObjectType = swift_getObjectType();
      v7 = type metadata accessor for PageHostingController(0);
      if (sub_10023A598((uint64_t)v5, ObjectType, v7, (uint64_t)&protocol descriptor for PPTTestHost))
      {
        PageHostingController.loadNextPage()();

        ContinuousClock.init()();
        *(_OWORD *)(v0 + 40) = xmmword_100713E10;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_BYTE *)(v0 + 32) = 1;
        return swift_task_switch(sub_100239DE4, 0, 0);
      }

    }
  }
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x80000001007B8C10, "Books/PPTHostedPageScrollTest.swift", 35, 2, 27, 0);
}

uint64_t sub_100239BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100239C5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  v4 = *(void (**)(uint64_t, uint64_t))(*v1 + 176);
  v5 = *(_QWORD *)(*v1 + 120);
  v6 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  v4(v5, v6);
  if (v0)
    v7 = sub_100239D70;
  else
    v7 = sub_100239CE4;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_100239CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(void **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 136));
  objc_msgSend(v6, "finishPPTTestWithResult:", 0);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100239D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100239DE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[12];
  v3 = v0[9];
  v2 = v0[10];
  v4 = v0[8];
  v5 = sub_100008DB0(&qword_1009D4250, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v1, v5);
  v6 = sub_100008DB0(&qword_1009D4258, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v4, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[27] = v7;
  v7(v2, v4);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[28] = v8;
  *v8 = v0;
  v8[1] = sub_100239EF0;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v0[12], v5);
}

uint64_t sub_100239EF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 216))(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 64));
    v4 = sub_10023A198;
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v2 + 176);
    v8 = *(_QWORD *)(v2 + 112);
    v9 = *(_QWORD *)(v2 + 96);
    (*(void (**)(_QWORD, _QWORD))(v2 + 216))(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 64));
    v7(v8, v9);
    v5 = *(_QWORD *)(v2 + 144);
    v6 = *(_QWORD *)(v2 + 152);
    v4 = sub_100239F94;
  }
  return swift_task_switch(v4, v5, v6);
}

uint64_t sub_100239F94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 208);
  if (v1 == 5)
  {
    ContinuousClock.init()();
    v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1009E3628 + dword_1009E3628);
    v2 = (_QWORD *)swift_task_alloc(unk_1009E362C);
    *(_QWORD *)(v0 + 192) = v2;
    *v2 = v0;
    v2[1] = sub_100239C5C;
    return v10(2000000000000000000, 0, 0, 0, 1);
  }
  *(_QWORD *)(v0 + 208) = v1 + 1;
  v4 = objc_msgSend(*(id *)(v0 + 184), "sceneManager");
  v5 = objc_msgSend(v4, "primarySceneController");

  v6 = objc_msgSend(v5, "rootBarCoordinator");
  if (v6)
  {
    v7 = objc_msgSend(v6, "selectedTopViewController");
    swift_unknownObjectRelease(v6);
    if (v7)
    {
      ObjectType = swift_getObjectType();
      v9 = type metadata accessor for PageHostingController(0);
      if (sub_10023A598((uint64_t)v7, ObjectType, v9, (uint64_t)&protocol descriptor for PPTTestHost))
      {
        PageHostingController.loadNextPage()();

        ContinuousClock.init()();
        *(_OWORD *)(v0 + 40) = xmmword_100713E10;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_BYTE *)(v0 + 32) = 1;
        return swift_task_switch(sub_100239DE4, 0, 0);
      }

    }
  }
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x80000001007B8C10, "Books/PPTHostedPageScrollTest.swift", 35, 2, 27, 0);
}

uint64_t sub_10023A198()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 176))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  return swift_task_switch(sub_10023A1D8, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
}

uint64_t sub_10023A1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10023A3A0()
{
  return sub_10023803C(type metadata accessor for PPTHostedPageGoToSeeAllTest);
}

uint64_t type metadata accessor for PPTHostedPageGoToSeeAllTest()
{
  return objc_opt_self(PPTHostedPageGoToSeeAllTest);
}

uint64_t sub_10023A3CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10023A3F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D4244);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_100239834(a1, v4, v5, v6);
}

uint64_t sub_10023A464()
{
  id v0;
  id v1;
  id v2;
  id v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneManager");
  v1 = objc_msgSend(v0, "primarySceneController");

  v2 = objc_msgSend(v1, "rootBarCoordinator");
  if (v2)
  {
    v3 = objc_msgSend(v2, "selectedTopViewController");
    swift_unknownObjectRelease(v2);
    if (v3)
    {
      ObjectType = swift_getObjectType();
      v5 = type metadata accessor for PageHostingController(0);
      result = sub_10023A598((uint64_t)v3, ObjectType, v5, (uint64_t)&protocol descriptor for PPTTestHost);
      if (result)
        return result;

    }
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x80000001007B8C10, "Books/PPTHostedPageScrollTest.swift", 35, 2, 27, 0);
  __break(1u);
  return result;
}

uint64_t sub_10023A598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = swift_dynamicCastMetatype(a2, a3);
  if (result)
  {
    if (swift_conformsToProtocol2(a2, a4))
      return a1;
    else
      return 0;
  }
  return result;
}

uint64_t sub_10023A5F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10023A61C()
{
  uint64_t v0;

  sub_100239080(*(void **)(v0 + 16));
}

uint64_t sub_10023A624(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v19);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = (void *)a2[10];
    *(_QWORD *)(v4 + 80) = v9;
    v10 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    v13 = v9;
    v12(v4 + 88, (uint64_t)(a2 + 11), v11);
    v14 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(v4 + 152) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v4 + 128, (uint64_t)(a2 + 16));
    v15 = *(int *)(a3 + 36);
    v16 = v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for ExplicitDeclineActionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 128));
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_10023A7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v8;
  v11(a1 + 88, a2 + 88, v10);
  v13 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 128, a2 + 128);
  v14 = *(int *)(a3 + 36);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *sub_10023A8B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  sub_1001EAB00(a1, a2);
  sub_1001EAB00(a1 + 5, a2 + 5);
  v6 = (void *)a1[10];
  v7 = (void *)a2[10];
  a1[10] = v7;
  v8 = v7;

  sub_1001EAB00(a1 + 11, a2 + 11);
  sub_1001EAB00(a1 + 16, a2 + 16);
  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_10023A94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 88);
  v7 = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(_OWORD *)(a2 + 144);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t sub_10023A9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 128));
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_10023AAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10023AACC);
}

uint64_t sub_10023AACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_10023AB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10023AB54);
}

uint64_t sub_10023AB54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_10023ABC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  __int128 v26[2];
  __int128 v27[2];
  __int128 v28[3];

  sub_10002E418((uint64_t)a1, (uint64_t)v28);
  sub_10002E418((uint64_t)a2, (uint64_t)v27);
  sub_10002E418((uint64_t)a4, (uint64_t)v26);
  v10 = (void *)objc_opt_self(BKAppDelegate);
  v11 = objc_msgSend(v10, "delegate");
  v12 = objc_msgSend(v11, "serviceCenter");

  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v14 = objc_msgSend(v10, "delegate");
  v15 = objc_msgSend(v14, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v24 = &type metadata for MenuLibraryOperationProvider;
    v25 = &off_10090F400;
    v19 = (_QWORD *)swift_allocObject(&unk_1008F5D38, 56, 7);
    *(_QWORD *)&v23 = v19;
    v19[2] = v12;
    v19[3] = v13;
    v19[4] = v15;
    v19[5] = v17;
    v19[6] = v18;
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v20 = a5 + *(int *)(type metadata accessor for AddToWantToReadActionItem(0) + 36);
    v21 = enum case for ContextActionType.addToWantToRead(_:);
    v22 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
    sub_100022840(v28, a5);
    sub_100022840(v27, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v26, a5 + 88);
    return (id)sub_100022840(&v23, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10023ADE8@<D0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9[2];
  char v10;
  __int128 v11[2];

  v2 = v1;
  v4 = v1[3];
  v5 = v2[4];
  sub_10003F198(v2, v4);
  ContextActionDataProtocol.selectionMode.getter(v9, v4, v5);
  if ((v10 & 1) != 0)
  {
    sub_1001EB7C0((uint64_t)v9);
  }
  else
  {
    sub_100022840(v9, (uint64_t)v11);
    sub_100022840(v11, (uint64_t)v9);
    v6 = sub_10004CFD4(&qword_1009DD4B0);
    v7 = sub_10004CFD4((uint64_t *)&unk_1009DFD10);
    if ((swift_dynamicCast(a1, v9, v6, v7, 6) & 1) != 0)
      return result;
  }
  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_10023AEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ActionItem;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v39 - v7;
  v9 = type metadata accessor for BooksFeatureFlag(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionItem = type metadata accessor for AddToWantToReadActionItem(0);
  __chkstk_darwin(ActionItem);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10023ADE8(&v45);
  if (v46)
  {
    v40 = v6;
    v41 = v3;
    sub_1001EB834(&v45, &v48);
    v16 = v49;
    v17 = v50;
    sub_10003F198(&v48, v49);
    v18 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v16, v17);
    v19 = static ContextActionAssetType.== infix(_:_:)(v18, 4);
    sub_1001EB84C((uint64_t)&v48, (uint64_t)&v45);
    if ((v19 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(&v45);
      sub_1001EB84C((uint64_t)&v48, (uint64_t)v42);
    }
    else
    {
      v21 = v46;
      v22 = v47;
      sub_10003F198(&v45, v46);
      v23 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v21, v22);
      v24 = static ContextActionAssetType.== infix(_:_:)(v23, 5);
      _s5Books15CurrentPageViewVwxx_0(&v45);
      sub_1001EB84C((uint64_t)&v48, (uint64_t)v42);
      if ((v24 & 1) == 0)
      {
        v26 = v43;
        v27 = v44;
        sub_10003F198(v42, v43);
        v28 = dispatch thunk of ContextAssetInfoProtocol.isInWantToRead.getter(v26, v27);
        if (v28 == 2)
        {
          _s5Books15CurrentPageViewVwxx_0(v42);
        }
        else
        {
          v29 = v28;
          _s5Books15CurrentPageViewVwxx_0(v42);
          if ((v29 & 1) != 0)
            goto LABEL_7;
        }
        sub_10023B600(v1, (uint64_t)v15);
        (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for BooksFeatureFlag.unifiedProductPage(_:), v9);
        v30 = sub_100008DB0((unint64_t *)&unk_1009D6230, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
        v31 = sub_10023B680();
        LOBYTE(v30) = RawRepresentable<>.isEnabled.getter(v9, v30, v31);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        if ((v30 & 1) != 0)
        {
          v20 = 1;
        }
        else
        {
          v32 = v15[3];
          v33 = v15[4];
          sub_10003F198(v15, v32);
          dispatch thunk of ContextActionDataProtocol.source.getter(v32, v33);
          v35 = v40;
          v34 = v41;
          (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for ContextActionSource.productPage(_:), v2);
          v36 = sub_100008DB0((unint64_t *)&qword_1009D4318, (uint64_t (*)(uint64_t))&type metadata accessor for ContextActionSource, (uint64_t)&protocol conformance descriptor for ContextActionSource);
          v37 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v35, v2, v36);
          v38 = *(void (**)(char *, uint64_t))(v34 + 8);
          v38(v35, v2);
          v38(v8, v2);
          v20 = v37 ^ 1;
        }
        goto LABEL_8;
      }
    }
    _s5Books15CurrentPageViewVwxx_0(v42);
LABEL_7:
    sub_10023B600(v1, (uint64_t)v15);
    v20 = 0;
LABEL_8:
    sub_10023B644((uint64_t)v15);
    _s5Books15CurrentPageViewVwxx_0(&v48);
    return v20 & 1;
  }
  sub_1001EB7F4((uint64_t)&v45);
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_10023B210()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[14] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[15] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[16] = v3;
  v1[17] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[18] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[19] = v5;
  v1[20] = v6;
  return swift_task_switch(sub_10023B2A4, v5, v6);
}

uint64_t sub_10023B2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_10023ADE8((_OWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 88))
  {
    sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
    v1 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v1);
    if ((dispatch thunk of ContextAssetInfoProtocol.isInWantToRead.getter(v1, v2) & 1) == 0)
    {
      v3 = *(_QWORD *)(v0 + 40);
      v4 = *(_QWORD *)(v0 + 48);
      sub_10003F198((_QWORD *)(v0 + 16), v3);
      v5 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v3, v4);
      v7 = v6;
      swift_bridgeObjectRelease(v6);
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v5 & 0xFFFFFFFFFFFFLL;
      if (v8)
      {
        v9 = *(_QWORD **)(v0 + 112);
        v10 = sub_10003F198(v9 + 16, v9[19]);
        v11 = v9[10];
        v12 = v10[1];
        v13 = v10[2];
        v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009EAAF0
                                                                                  + dword_1009EAAF0);
        v14 = (_QWORD *)swift_task_alloc(unk_1009EAAF4);
        *(_QWORD *)(v0 + 168) = v14;
        *v14 = v0;
        v14[1] = sub_10023B4A0;
        return v24(v0 + 16, v11, (uint64_t)(v9 + 5), v12, v13);
      }
    }
    swift_release(*(_QWORD *)(v0 + 144));
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 144));
    v16 = sub_1001EB7F4(v0 + 64);
    v17 = static Logger.contextActionItem.getter(v16);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Action doesn't have sufficient information to handle action.", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }
    v22 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 120);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023B4A0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 168));
  return swift_task_switch(sub_10023B4EC, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_10023B4EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 144));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023B530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_10023B574()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D4314);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_10023B210();
}

uint64_t sub_10023B5BC()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023B600(uint64_t a1, uint64_t a2)
{
  uint64_t ActionItem;

  ActionItem = type metadata accessor for AddToWantToReadActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ActionItem - 8) + 16))(a2, a1, ActionItem);
  return a2;
}

uint64_t sub_10023B644(uint64_t a1)
{
  uint64_t ActionItem;

  ActionItem = type metadata accessor for AddToWantToReadActionItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(ActionItem - 8) + 8))(a1, ActionItem);
  return a1;
}

unint64_t sub_10023B680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7660;
  if (!qword_1009E7660)
  {
    v1 = sub_100030B74(&qword_1009D6240);
    result = swift_getWitnessTable(&protocol conformance descriptor for StaticFeatureFlagsKey<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7660);
  }
  return result;
}

uint64_t AppShareActionItem.__allocating_init(data:context:tracker:figaroProvider:)(_QWORD *a1, _QWORD *a2, void *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_100063750((uint64_t)a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = sub_100063750((uint64_t)a2, v12);
  v15 = sub_10023D9A8(v11, v14, a3, a4, v4, v9, v12, v10, v13);

  _s5Books15CurrentPageViewVwxx_0(a2);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return v15;
}

uint64_t AppShareActionItem.init(data:context:tracker:figaroProvider:)(_QWORD *a1, _QWORD *a2, void *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[2];

  v9 = a1[3];
  v8 = a1[4];
  v10 = sub_100063750((uint64_t)a1, v9);
  __chkstk_darwin(v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  v15 = a2[3];
  v14 = a2[4];
  v16 = sub_100063750((uint64_t)a2, v15);
  __chkstk_darwin(v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v20 = sub_10023D800((uint64_t)v12, (uint64_t)v18, a3, a4, v22[1], v9, v15, v8, v14);

  _s5Books15CurrentPageViewVwxx_0(a2);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return v20;
}

uint64_t sub_10023B8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v4[12] = a4;
  v5 = type metadata accessor for URL(0);
  v4[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[14] = v6;
  v4[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MRequestMetadata(0);
  v4[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[17] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[18] = swift_task_alloc(v9);
  v4[19] = swift_task_alloc(v9);
  v4[20] = swift_task_alloc(v9);
  v4[21] = swift_task_alloc(v9);
  v11 = type metadata accessor for MResourceType(0, v10);
  v4[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[23] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[24] = swift_task_alloc(v13);
  v4[25] = swift_task_alloc(v13);
  v14 = type metadata accessor for MCatalogService(0);
  v4[26] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[27] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[28] = swift_task_alloc(v16);
  v4[29] = swift_task_alloc(v16);
  v4[30] = swift_task_alloc(v16);
  v4[31] = swift_task_alloc(v16);
  v17 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D23D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[32] = swift_task_alloc(v17);
  v4[33] = swift_task_alloc(v17);
  v4[34] = swift_task_alloc(v17);
  v4[35] = swift_task_alloc(v17);
  v4[36] = swift_task_alloc(v17);
  v4[37] = swift_task_alloc(v17);
  return swift_task_switch(sub_10023BA54, 0, 0);
}

uint64_t sub_10023BA54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD **)(v0 + 96);
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  v4 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v2, v3);
  v5 = v4;
  if (!*(_QWORD *)(v4 + 16))
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    swift_bridgeObjectRelease(v4);
    goto LABEL_8;
  }
  sub_10002E418(v4 + 32, v0 + 56);
  swift_bridgeObjectRelease(v5);
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_8:
    sub_100010960(v0 + 56, qword_1009D4378);
    goto LABEL_9;
  }
  sub_100022840((__int128 *)(v0 + 56), v0 + 16);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v6);
  *(_QWORD *)(v0 + 304) = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v6, v7);
  *(_QWORD *)(v0 + 312) = v8;
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v10);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.getter(v10, v11);
    v13 = v12;
    swift_bridgeObjectRelease(v12);
    if (!v13)
    {
      v24 = *(_QWORD *)(v0 + 40);
      v25 = *(_QWORD *)(v0 + 48);
      sub_10003F198((_QWORD *)(v0 + 16), v24);
      v26 = (char *)&loc_10023BB34
          + 4 * byte_100713F70[dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v24, v25)];
      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease(v9);
  }
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
LABEL_9:
  v14 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023BC90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v2[23];
  v3 = v2[24];
  v5 = v2[22];
  ((void (*)(void))static MCatalogService.default.getter)();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for MResourceType.books(_:), v5);
  ((void (*)(unint64_t, unint64_t, uint64_t))MRequestMetadata.init(_:_:))(0xD00000000000001ELL, 0x80000001007B8CD0, 24);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)[1]);
  v2[42] = v6;
  *v6 = v2;
  v6[1] = sub_10023C2DC;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:))(v1, v0, v2[24], 0, 0, 0, v2[20]);
}

uint64_t sub_10023BDCC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;

  ((void (*)(void))static MCatalogService.default.getter)();
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v4 = swift_allocObject(v3, 48, 7);
  v2[47] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v0;
  v5 = swift_bridgeObjectRetain(v0);
  ((void (*)(unint64_t, unint64_t, uint64_t, __n128))MRequestMetadata.init(_:_:))(0xD00000000000001ELL, 0x80000001007B8CD0, 28, v5);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:)[1]);
  v2[48] = v6;
  *v6 = v2;
  v6[1] = sub_10023CA30;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))MCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:))(0, v4, 0, 0, 0, 150, v2[18]);
}

uint64_t sub_10023BF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)();
  uint64_t v16;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 320);
  *(_QWORD *)(*(_QWORD *)v2 + 328) = a1;
  swift_task_dealloc(v4);
  v16 = v3[31];
  v5 = v3[26];
  v6 = v3[27];
  v7 = v3[25];
  v8 = v3[22];
  v9 = v3[23];
  v10 = v3[21];
  v13 = v3 + 16;
  v12 = v3[16];
  v11 = v13[1];
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    v14 = sub_10023CDD8;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    v14 = sub_10023C048;
  }
  return swift_task_switch(v14, 0, 0);
}

uint64_t sub_10023C048()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSURL *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(void **)(v0 + 328);
  if (v1)
  {
    MAsset.url.getter();

    v2 = 0;
  }
  else
  {
    v2 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 288), v2, 1, *(_QWORD *)(v0 + 104));
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 288), v3);
  sub_10000B59C(v3, v4);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v6);
  v8 = *(_QWORD *)(v0 + 312);
  if (v7 == 1)
  {
    v9 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 296);
    v10 = *(_QWORD *)(v0 + 120);
    v37 = *(_QWORD *)(v0 + 104);
    v39 = *(_QWORD *)(v0 + 112);
    v11 = (*(uint64_t (**)(uint64_t, _QWORD))(v39 + 32))(v10, *(_QWORD *)(v0 + 256));
    v12 = URL.absoluteString.getter(v11);
    v14 = v13;
    v16 = *(_QWORD *)(v0 + 40);
    v15 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v16);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v12, v14, v16, v15);
    v17 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    URL._bridgeToObjectiveC()(v19);
    v21 = v20;
    objc_msgSend(v17, "updateAssetWithID:url:", v18, v20);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v10, v37);
  }
  sub_100010960(v9, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v22 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  v27 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 248);
  v30 = *(_QWORD *)(v0 + 224);
  v29 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 192);
  v34 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023C2DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)();
  uint64_t v16;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 336);
  *(_QWORD *)(*(_QWORD *)v2 + 344) = a1;
  swift_task_dealloc(v4);
  v16 = v3[30];
  v5 = v3[26];
  v6 = v3[27];
  v8 = v3[23];
  v7 = v3[24];
  v9 = v3[22];
  v10 = v3[20];
  v13 = v3 + 16;
  v12 = v3[16];
  v11 = v13[1];
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    v14 = sub_10023D55C;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
    v14 = sub_10023C3EC;
  }
  return swift_task_switch(v14, 0, 0);
}

uint64_t sub_10023C3EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSURL *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(void **)(v0 + 344);
  if (v1)
  {
    MAsset.url.getter();

    v2 = 0;
  }
  else
  {
    v2 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 280), v2, 1, *(_QWORD *)(v0 + 104));
  v3 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 280), v3);
  sub_10000B59C(v3, v4);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v6);
  v8 = *(_QWORD *)(v0 + 312);
  if (v7 == 1)
  {
    v9 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 296);
    v10 = *(_QWORD *)(v0 + 120);
    v37 = *(_QWORD *)(v0 + 104);
    v39 = *(_QWORD *)(v0 + 112);
    v11 = (*(uint64_t (**)(uint64_t, _QWORD))(v39 + 32))(v10, *(_QWORD *)(v0 + 256));
    v12 = URL.absoluteString.getter(v11);
    v14 = v13;
    v16 = *(_QWORD *)(v0 + 40);
    v15 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v16);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v12, v14, v16, v15);
    v17 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    URL._bridgeToObjectiveC()(v19);
    v21 = v20;
    objc_msgSend(v17, "updateAssetWithID:url:", v18, v20);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v10, v37);
  }
  sub_100010960(v9, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v22 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  v27 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 248);
  v30 = *(_QWORD *)(v0 + 224);
  v29 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 192);
  v34 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023C684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 352);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 360));
  swift_bridgeObjectRelease(v5);
  v8 = v4[29];
  v9 = v4[26];
  v10 = v4[19];
  v11 = v4[16];
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v9);
    v12 = sub_10023D058;
  }
  else
  {
    v4[46] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v9);
    v12 = sub_10023C774;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_10023C774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSURL *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 368);
  sub_1003A3410(v1);
  v3 = v2;
  v5 = v4;
  swift_bridgeObjectRelease(v1);
  if (v3)
  {
    v6 = swift_bridgeObjectRelease(v3);
    MSeries.url.getter(v6);

    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 272), v7, 1, *(_QWORD *)(v0 + 104));
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 272), v8);
  sub_10000B59C(v8, v9);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11);
  v13 = *(_QWORD *)(v0 + 312);
  if (v12 == 1)
  {
    v14 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 120);
    v42 = *(_QWORD *)(v0 + 104);
    v44 = *(_QWORD *)(v0 + 112);
    v16 = (*(uint64_t (**)(uint64_t, _QWORD))(v44 + 32))(v15, *(_QWORD *)(v0 + 256));
    v17 = URL.absoluteString.getter(v16);
    v19 = v18;
    v21 = *(_QWORD *)(v0 + 40);
    v20 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v21);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v17, v19, v21, v20);
    v22 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    URL._bridgeToObjectiveC()(v24);
    v26 = v25;
    objc_msgSend(v22, "updateAssetWithID:url:", v23, v25);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v15, v42);
  }
  sub_100010960(v14, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v27 = *(_QWORD *)(v0 + 288);
  v29 = *(_QWORD *)(v0 + 272);
  v28 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 256);
  v30 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 240);
  v33 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 224);
  v34 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 200);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 168);
  v40 = *(_QWORD *)(v0 + 160);
  v41 = *(_QWORD *)(v0 + 152);
  v43 = *(_QWORD *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023CA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 376);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 216);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 384));
  swift_bridgeObjectRelease(v5);
  v8 = v4[28];
  v9 = v4[26];
  v10 = v4[18];
  v11 = v4[16];
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v9);
    v12 = sub_10023D2DC;
  }
  else
  {
    v4[49] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v9);
    v12 = sub_10023CB20;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_10023CB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSURL *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 392);
  sub_1003A3410(v1);
  v3 = v2;
  v5 = v4;
  swift_bridgeObjectRelease(v1);
  if (v3)
  {
    v6 = swift_bridgeObjectRelease(v3);
    MSeries.url.getter(v6);

    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 264), v7, 1, *(_QWORD *)(v0 + 104));
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 264), v8);
  sub_10000B59C(v8, v9);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11);
  v13 = *(_QWORD *)(v0 + 312);
  if (v12 == 1)
  {
    v14 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 120);
    v42 = *(_QWORD *)(v0 + 104);
    v44 = *(_QWORD *)(v0 + 112);
    v16 = (*(uint64_t (**)(uint64_t, _QWORD))(v44 + 32))(v15, *(_QWORD *)(v0 + 256));
    v17 = URL.absoluteString.getter(v16);
    v19 = v18;
    v21 = *(_QWORD *)(v0 + 40);
    v20 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v21);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v17, v19, v21, v20);
    v22 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    URL._bridgeToObjectiveC()(v24);
    v26 = v25;
    objc_msgSend(v22, "updateAssetWithID:url:", v23, v25);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v15, v42);
  }
  sub_100010960(v14, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v27 = *(_QWORD *)(v0 + 288);
  v29 = *(_QWORD *)(v0 + 272);
  v28 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 256);
  v30 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 240);
  v33 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 224);
  v34 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 200);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 168);
  v40 = *(_QWORD *)(v0 + 160);
  v41 = *(_QWORD *)(v0 + 152);
  v43 = *(_QWORD *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023CDD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSURL *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = (_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 288), 1, 1, *(_QWORD *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 288), v2);
  sub_10000B59C(v2, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = *(_QWORD *)(v0 + 312);
  if (v6 == 1)
  {
    v8 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v10, *(_QWORD *)(v0 + 256), v11);
    v13 = URL.absoluteString.getter(v12);
    v15 = v14;
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v17);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v13, v15, v17, v16);
    v18 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    URL._bridgeToObjectiveC()(v20);
    v22 = v21;
    objc_msgSend(v18, "updateAssetWithID:url:", v19, v21);

    v23 = v11;
    v1 = (_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v23);
  }
  sub_100010960(v8, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0(v1);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 280);
  v28 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 192);
  v36 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 160);
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D058()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSURL *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = (_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 272), 1, 1, *(_QWORD *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 272), v2);
  sub_10000B59C(v2, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = *(_QWORD *)(v0 + 312);
  if (v6 == 1)
  {
    v8 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v10, *(_QWORD *)(v0 + 256), v11);
    v13 = URL.absoluteString.getter(v12);
    v15 = v14;
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v17);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v13, v15, v17, v16);
    v18 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    URL._bridgeToObjectiveC()(v20);
    v22 = v21;
    objc_msgSend(v18, "updateAssetWithID:url:", v19, v21);

    v23 = v11;
    v1 = (_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v23);
  }
  sub_100010960(v8, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0(v1);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 280);
  v28 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 192);
  v36 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 160);
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D2DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSURL *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = (_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 264), v2);
  sub_10000B59C(v2, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = *(_QWORD *)(v0 + 312);
  if (v6 == 1)
  {
    v8 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v10, *(_QWORD *)(v0 + 256), v11);
    v13 = URL.absoluteString.getter(v12);
    v15 = v14;
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v17);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v13, v15, v17, v16);
    v18 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    URL._bridgeToObjectiveC()(v20);
    v22 = v21;
    objc_msgSend(v18, "updateAssetWithID:url:", v19, v21);

    v23 = v11;
    v1 = (_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v23);
  }
  sub_100010960(v8, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0(v1);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 280);
  v28 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 192);
  v36 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 160);
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D55C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSURL *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = (_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 280), 1, 1, *(_QWORD *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  sub_10006CE68(*(_QWORD *)(v0 + 280), v2);
  sub_10000B59C(v2, v3);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  v7 = *(_QWORD *)(v0 + 312);
  if (v6 == 1)
  {
    v8 = *(_QWORD *)(v0 + 256);
    sub_100010960(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_1009D23D0);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v10, *(_QWORD *)(v0 + 256), v11);
    v13 = URL.absoluteString.getter(v12);
    v15 = v14;
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    sub_100063750(v0 + 16, v17);
    dispatch thunk of ContextAssetInfoProtocol.shareableURLString.setter(v13, v15, v17, v16);
    v18 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    URL._bridgeToObjectiveC()(v20);
    v22 = v21;
    objc_msgSend(v18, "updateAssetWithID:url:", v19, v21);

    v23 = v11;
    v1 = (_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v23);
  }
  sub_100010960(v8, (uint64_t *)&unk_1009D23D0);
  _s5Books15CurrentPageViewVwxx_0(v1);
  v24 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 280);
  v28 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 240);
  v30 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 192);
  v36 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 160);
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppShareActionItem.__deallocating_deinit()
{
  uint64_t v0;

  v0 = _s5Books18AppShareActionItemCfd_0();
  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_10023D800(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[40];
  _BYTE v28[40];
  __int128 v29[2];
  _QWORD v30[5];
  _QWORD v31[6];

  v16 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v16);
  v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[3] = a6;
  v31[4] = a8;
  v19 = sub_1000257F8(v31);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v19, a1, a6);
  v30[3] = a7;
  v30[4] = a9;
  v20 = sub_1000257F8(v30);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v20, a2, a7);
  sub_10002E418((uint64_t)v31, (uint64_t)v29);
  sub_10002E418((uint64_t)v30, (uint64_t)v28);
  sub_10002E418((uint64_t)a4, (uint64_t)v27);
  v21 = a3;
  v22 = ShareActionItem.init(data:context:tracker:figaroProvider:)(v29, v28, a3, v27);
  v23 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
  sub_10002E418((uint64_t)v31, (uint64_t)v29);
  v24 = swift_allocObject(&unk_1008F5E00, 72, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  sub_100022840(v29, v24 + 32);
  v25 = sub_10030C02C((uint64_t)v18, (uint64_t)&unk_1009DDF60, v24);
  swift_release(v25);
  _s5Books15CurrentPageViewVwxx_0(a4);
  _s5Books15CurrentPageViewVwxx_0(v30);
  _s5Books15CurrentPageViewVwxx_0(v31);
  return v22;
}

uint64_t sub_10023D9A8(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;

  v26 = a4;
  v27 = a8;
  v25 = a3;
  v13 = *(_QWORD *)(a7 - 8);
  v14 = __chkstk_darwin(a1);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v14);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AppShareActionItem(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, a7);
  return sub_10023D800((uint64_t)v20, (uint64_t)v16, v25, v26, v22, a6, a7, v27, a9);
}

uint64_t sub_10023DAC4()
{
  return type metadata accessor for AppShareActionItem(0);
}

uint64_t sub_10023DACC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t *sub_10023DAF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_10023DB68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_10023DB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_10023DBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_10023DBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_10023DC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_10023DC38(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10023DCE8 + 4 * byte_100713F98[(v7 - 1)]))();
}

void sub_10023DD38(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t storeEnumTagSinglePayload for CoverCacheServiceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10023DF28 + 4 * byte_100713FD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10023DF48 + 4 * byte_100713FD5[v4]))();
}

_BYTE *sub_10023DF28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10023DF48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10023DF50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10023DF58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10023DF60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10023DF68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CoverCacheServiceError()
{
  return &type metadata for CoverCacheServiceError;
}

unint64_t sub_10023DF88()
{
  unint64_t result;

  result = qword_1009D4400;
  if (!qword_1009D4400)
  {
    result = swift_getWitnessTable(&unk_100714048, &type metadata for CoverCacheServiceError);
    atomic_store(result, (unint64_t *)&qword_1009D4400);
  }
  return result;
}

id sub_10023E020()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookReaderPurchaseHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BookReaderPurchaseHandler()
{
  return objc_opt_self(_TtC5Books25BookReaderPurchaseHandler);
}

uint64_t sub_10023E080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Books25BookReaderPurchaseHandler_delegate);
  if (result)
  {
    v6 = result;
    v7 = objc_opt_self(AEUserPublishingProductProfile);
    v8 = swift_dynamicCastObjCClass(a1, v7);
    if (v8)
    {
      v9 = (void *)v8;
      swift_unknownObjectRetain(a1);
      if (objc_msgSend(v9, "isPreorder"))
      {
        v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Books21BookReaderDataManager_bookProviderService + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v6 + OBJC_IVAR____TtC5Books21BookReaderDataManager_bookProviderService), v10);
        dispatch thunk of BookProviding.setPreordered(_:)(1, ObjectType, v11);
      }
      swift_unknownObjectRelease(a1);
    }
    (*(void (**)(uint64_t))(a3 + 16))(a3);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_10023E1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t ObjectType;
  unint64_t v18;

  ObjectType = swift_getObjectType();
  v1 = sub_10004CFD4(&qword_1009D4470);
  v2 = String.init<A>(describing:)(&ObjectType, v1);
  v4 = v3;
  ObjectType = 0;
  v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease(v18);
  ObjectType = v2;
  v18 = v4;
  v5._countAndFlagsBits = 0x497465737361203ALL;
  v5._object = (void *)0xEA00000000003D44;
  String.append(_:)(v5);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books20CarPlayListenNowData_assetID);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Books20CarPlayListenNowData_assetID + 8);
  swift_bridgeObjectRetain(v7);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  v9._object = (void *)0x80000001007B8DB0;
  v9._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v9);
  v10 = *(id *)(v0 + OBJC_IVAR____TtC5Books20CarPlayListenNowData_updatedReadingProgress);
  v11 = objc_msgSend(v10, "description");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);

  swift_bridgeObjectRelease(v14);
  return ObjectType;
}

id sub_10023E348()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayListenNowData();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CarPlayListenNowData()
{
  return objc_opt_self(_TtC5Books20CarPlayListenNowData);
}

uint64_t sub_10023E3D4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D4478);
  sub_100048F64(v0, (uint64_t)qword_1009D4478);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x6341686374697753, 0xED0000746E756F63);
}

double sub_10023E454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v23 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS.QoSClass(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject(&unk_1008F6180, 32, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.userInitiated(_:), v11);
  swift_retain(a2);
  v16 = (void *)static OS_dispatch_queue.global(qos:)(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v17 = (_QWORD *)swift_allocObject(&unk_1008F61A8, 40, 7);
  v17[2] = sub_10024057C;
  v17[3] = v15;
  v17[4] = v23;
  aBlock[4] = sub_1002405DC;
  v28 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F61C0;
  v18 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v18);
  v26 = _swiftEmptyArrayStorage;
  v19 = sub_100008E8C();
  v20 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v21 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v5, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

void sub_10023E6EC(void (*a1)(void *, void *, uint64_t))
{
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  _QWORD *v36;
  _OWORD v37[2];
  _BYTE v38[24];
  uint64_t v39;

  v1 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  v2 = objc_msgSend(v1, "activeStoreAccount");

  v3 = objc_msgSend((id)objc_opt_self(ACAccountStore), "bu_sharedAccountStore");
  v4 = objc_msgSend(v3, "ams_iTunesAccounts");

  v5 = sub_100009E04(0, &qword_1009D44D8, ACAccount_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  v34 = v2;
  if ((unint64_t)v6 >> 62)
  {
LABEL_33:
    if (v6 < 0)
      v32 = v6;
    else
      v32 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v32);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v7)
    {
LABEL_3:
      v8 = 0;
      v9 = v6 & 0xC000000000000001;
      v10 = v6 + 32;
      while (1)
      {
        if (v9)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
        else
          v11 = *(id *)(v10 + 8 * v8);
        v12 = v11;
        if (__OFADD__(v8++, 1))
          goto LABEL_32;
        v14 = objc_msgSend(v11, "accountProperties");
        if (!v14)
        {
          __break(1u);
          return;
        }
        v15 = v14;
        *(_QWORD *)&v37[0] = 0xD000000000000010;
        *((_QWORD *)&v37[0] + 1) = 0x80000001007B8E10;
        v16 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v37, &type metadata for String);
        v17 = objc_msgSend(v15, "__swift_objectForKeyedSubscript:", v16);
        swift_unknownObjectRelease(v16);

        if (v17)
        {
          _bridgeAnyObjectToAny(_:)(v17);
          swift_unknownObjectRelease(v17);
        }
        else
        {
          memset(v37, 0, sizeof(v37));
        }
        sub_10004C7B4((uint64_t)v37, (uint64_t)v38);
        if (!v39)
          break;
        v18 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
        if ((swift_dynamicCast(&v36, v38, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0)
          goto LABEL_5;
        v19 = v36;
        v20 = v36[2];
        if (v20)
        {
          v21 = v36[4];
          v22 = v36[5];
          if (v21 == 0xD000000000000033 && v22 == 0x80000001007B8E30
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0xD000000000000033, 0x80000001007B8E30, 0) & 1) != 0)
          {
LABEL_30:
            v28 = v34;
            swift_bridgeObjectRelease(v19);
            swift_bridgeObjectRelease_n(v6, 2);
            v29 = v12;
            v30 = 2 * (v34 != 0);
            v31 = v34;
            goto LABEL_41;
          }
          if (v20 != 1)
          {
            v23 = v19 + 7;
            v24 = 1;
            while (1)
            {
              v25 = v24 + 1;
              if (__OFADD__(v24, 1))
                break;
              v26 = *(v23 - 1);
              v27 = *v23;
              if (v26 == 0xD000000000000033 && v27 == 0x80000001007B8E30
                || (_stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, 0xD000000000000033, 0x80000001007B8E30, 0) & 1) != 0)
              {
                goto LABEL_30;
              }
              v23 += 2;
              ++v24;
              if (v25 == v20)
                goto LABEL_28;
            }
            __break(1u);
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_28:

          swift_bridgeObjectRelease(v19);
          v10 = v6 + 32;
          v9 = v6 & 0xC000000000000001;
        }
        else
        {

          swift_bridgeObjectRelease(v19);
        }
LABEL_6:
        if (v8 == v7)
          goto LABEL_37;
      }
      sub_10004A7B8((uint64_t)v38);
LABEL_5:

      goto LABEL_6;
    }
  }
LABEL_37:
  swift_bridgeObjectRelease_n(v6, 2);
  v31 = 0;
  v29 = 0;
  v28 = v34;
  if (v34)
    v30 = 1;
  else
    v30 = 3;
  v12 = v34;
LABEL_41:
  v33 = v28;
  sub_10023FDCC(v12, v31, v30);
  a1(v12, v31, v30);
  sub_10023FE14(v12, v31, v30);

  sub_10023FE14(v12, v31, v30);
}

double sub_10023EBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[3];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = swift_allocObject(&unk_1008F60E0, 33, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = 3;
  v12[0] = *(_QWORD *)(v1 + OBJC_IVAR___BKSwitchAccountStorageController_accountsState);
  v4 = v12[0];
  v5 = swift_allocObject(&unk_1008F6108, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  v6 = (_QWORD *)swift_allocObject(&unk_1008F6130, 40, 7);
  v6[2] = v5;
  v6[3] = v3;
  v6[4] = ObjectType;
  swift_retain_n(v3, 2);
  swift_retain(v4);
  v7 = sub_10004CFD4(&qword_1009D44C8);
  v8 = sub_100030B34(&qword_1009D44D0, &qword_1009D44C8, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v9 = Publisher.sink(receiveCompletion:receiveValue:)(sub_10024052C, v6, sub_100240538, v3, v7, v8);
  swift_release(v6);
  swift_release(v3);
  swift_release(v12[0]);
  v10 = v1 + OBJC_IVAR___BKSwitchAccountStorageController_cancellables;
  swift_beginAccess(v10, v12, 33, 0);
  AnyCancellable.store(in:)(v10);
  swift_endAccess(v12);
  swift_release(v3);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_10023ED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[24];
  _BYTE v10[24];

  v5 = type metadata accessor for Logger(0);
  v6 = __chkstk_darwin(v5);
  v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    swift_beginAccess(a3 + 16, v9, 0, 0);
    __asm { BR              X10 }
  }
  return result;
}

void sub_10023F14C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  _BYTE v9[24];

  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(a2 + 16, v9, 1, 0);
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  v8 = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a2 + 32) = v5;
  sub_10023FDCC(v3, v4, v5);
  sub_10023FE14(v6, v7, v8);
}

double sub_10023F1D8(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t ObjectType;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v27 = a2;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(ACAccountStore), "bu_sharedAccountStore");
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.userInitiated(_:), v9);
  v14 = (void *)static OS_dispatch_queue.global(qos:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15 = (_QWORD *)swift_allocObject(&unk_1008F6040, 48, 7);
  v16 = ObjectType;
  v17 = v27;
  v15[2] = v27;
  v15[3] = v13;
  v15[4] = a1;
  v15[5] = v16;
  aBlock[4] = sub_100240138;
  v33 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F6058;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  v20 = v17;
  v21 = v13;
  static DispatchQoS.unspecified.getter(v21);
  v31 = _swiftEmptyArrayStorage;
  v22 = sub_100008E8C();
  v23 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v24 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v23, v24, v3, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
  *(_QWORD *)&result = swift_release(v33).n128_u64[0];
  return result;
}

void sub_10023F480(void *a1, uint64_t a2, id a3)
{
  unint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  void **v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  _QWORD *v62;
  Class isa;
  NSString v64;
  id v65;
  void *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char **v73;
  char *v74;
  char *v75;
  const char *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  const char *v83;
  id v84;
  void **aBlock;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, void *);
  void *v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  _QWORD *v91;
  _OWORD v92[2];
  _QWORD *v93;

  v6 = type metadata accessor for Logger(0);
  v7 = *(const char **)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char **)((char *)&v80 - v11);
  v84 = (id)a2;
  if (a1)
  {
    v13 = qword_1009CDD08;
    v14 = a1;
    if (v13 != -1)
LABEL_56:
      swift_once(&qword_1009CDD08, sub_10023E3D4);
    v15 = sub_100048F64(v6, (uint64_t)qword_1009D4478);
    (*((void (**)(_QWORD *, uint64_t, unint64_t))v7 + 2))(v12, v15, v6);
    v16 = v14;
    v17 = Logger.logObject.getter(v16);
    v21 = static os_log_type_t.debug.getter(v17, v18, v19, v20);
    if (os_log_type_enabled(v17, v21))
    {
      v81 = (unint64_t)a3;
      v82 = v10;
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v80 = (char *)swift_slowAlloc(32, -1);
      aBlock = (void **)v80;
      *(_DWORD *)v22 = 136315138;
      v23 = objc_msgSend(v16, "username");
      v83 = v7;
      if (v23)
      {
        v24 = v23;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v27 = v26;

      }
      else
      {
        v25 = 0;
        v27 = 0;
      }
      v28 = Optional<A>.description.getter(v25, v27);
      v30 = v29;
      swift_bridgeObjectRelease(v27);
      *(_QWORD *)&v92[0] = sub_100040F58(v28, v30, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, (char *)v92 + 8, v22 + 4, v22 + 12);

      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v17, v21, "About to set shared account: %s", v22, 0xCu);
      v31 = v80;
      swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      v7 = v83;
      (*((void (**)(_QWORD *, unint64_t))v83 + 1))(v12, v6);
      a2 = (uint64_t)v84;
      a3 = (id)v81;
      v10 = v82;
    }
    else
    {

      (*((void (**)(_QWORD *, unint64_t))v7 + 1))(v12, v6);
    }
    objc_msgSend(v16, "ams_setActive:forMediaType:", 1, AMSAccountMediaTypeProduction, v80, v81);
    v32 = objc_msgSend((id)a2, "ams_saveAccount:verifyCredentials:", v16, 0);
    v89 = sub_100240144;
    v90 = 0;
    aBlock = _NSConcreteStackBlock;
    v86 = 1107296256;
    v87 = sub_1002A7214;
    v88 = &unk_1008F60A8;
    v33 = _Block_copy(&aBlock);
    objc_msgSend(v32, "addFinishBlock:", v33, swift_release(v90).n128_f64[0]);
    _Block_release(v33);

  }
  if (!a3)
    return;
  v34 = qword_1009CDD08;
  v35 = a3;
  if (v34 != -1)
    swift_once(&qword_1009CDD08, sub_10023E3D4);
  v36 = sub_100048F64(v6, (uint64_t)qword_1009D4478);
  (*((void (**)(char *, uint64_t, unint64_t))v7 + 2))(v10, v36, v6);
  a3 = v35;
  v37 = Logger.logObject.getter(a3);
  v41 = static os_log_type_t.debug.getter(v37, v38, v39, v40);
  if (os_log_type_enabled(v37, v41))
  {
    v82 = v10;
    v42 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = (void **)swift_slowAlloc(32, -1);
    aBlock = v43;
    *(_DWORD *)v42 = 136315138;
    v44 = objc_msgSend(a3, "username");
    v83 = v7;
    if (v44)
    {
      v45 = v44;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v48 = v47;

    }
    else
    {
      v46 = 0;
      v48 = 0;
    }
    v49 = Optional<A>.description.getter(v46, v48);
    v51 = v50;
    swift_bridgeObjectRelease(v48);
    *(_QWORD *)&v92[0] = sub_100040F58(v49, v51, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, (char *)v92 + 8, v42 + 4, v42 + 12);

    swift_bridgeObjectRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v37, v41, "About to remove account property from legacy books account: %s", v42, 0xCu);
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);

    (*((void (**)(char *, unint64_t))v83 + 1))(v82, v6);
  }
  else
  {

    (*((void (**)(char *, unint64_t))v7 + 1))(v10, v6);
  }
  v52 = objc_msgSend(a3, "accountProperties");
  if (!v52)
  {
LABEL_61:
    __break(1u);
    return;
  }
  v53 = v52;
  *(_QWORD *)&v92[0] = 0xD000000000000010;
  *((_QWORD *)&v92[0] + 1) = 0x80000001007B8E10;
  v54 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v92, &type metadata for String);
  v55 = objc_msgSend(v53, "__swift_objectForKeyedSubscript:", v54);
  swift_unknownObjectRelease(v54);

  if (v55)
  {
    _bridgeAnyObjectToAny(_:)(v55);
    swift_unknownObjectRelease(v55);
  }
  else
  {
    memset(v92, 0, sizeof(v92));
  }
  sub_10004C7B4((uint64_t)v92, (uint64_t)&aBlock);
  if (!v88)
  {

    sub_10004A7B8((uint64_t)&aBlock);
    return;
  }
  v56 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  if ((swift_dynamicCast(&v91, &aBlock, (char *)&type metadata for Any + 8, v56, 6) & 1) == 0)
  {

    return;
  }
  v12 = v91;
  v93 = v91;
  v57 = v91[2];
  if (v57)
  {
    v58 = 0;
    a2 = 0;
    v7 = "activeMediaTypes";
    v80 = "";
    v81 = 0xD000000000000010;
    while (1)
    {
      v59 = v12[v58 + 4];
      v60 = v12[v58 + 5];
      if (v59 == 0xD000000000000033 && v60 == 0x80000001007B8E30)
        break;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, 0xD000000000000033, 0x80000001007B8E30, 0) & 1) != 0)
        break;
      ++a2;
      v58 += 2;
      if (v57 == a2)
      {
        a2 = v57;
        goto LABEL_36;
      }
    }
    v6 = a2 + 1;
    if (!__OFADD__(a2, 1))
    {
      if (v6 == v57)
      {
LABEL_36:
        v61 = v12[2];
        if (v61 >= a2)
          goto LABEL_39;
        __break(1u);
        goto LABEL_38;
      }
      v10 = (char *)0x80000001007B8E30;
      while (1)
      {
        v14 = (id)v12[2];
        if (v6 >= (unint64_t)v14)
        {
          __break(1u);
          goto LABEL_56;
        }
        v70 = &v12[v58];
        v71 = v12[v58 + 6];
        v72 = v12[v58 + 7];
        if ((v71 != 0xD000000000000033 || v72 != 0x80000001007B8E30)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, 0xD000000000000033, 0x80000001007B8E30, 0) & 1) == 0)
        {
          if (v6 != a2)
          {
            if (a2 >= (unint64_t)v14)
              goto LABEL_58;
            v73 = (char **)&v12[2 * a2 + 4];
            v74 = *v73;
            v75 = v73[1];
            v76 = (const char *)v70[6];
            v77 = v70[7];
            v82 = v74;
            v83 = v76;
            swift_bridgeObjectRetain(v75);
            swift_bridgeObjectRetain(v77);
            if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
              v12 = sub_1002C3598(v12);
            v78 = &v12[2 * a2];
            v79 = v78[5];
            v78[4] = v83;
            v78[5] = v77;
            swift_bridgeObjectRelease(v79);
            if (v6 >= v12[2])
              goto LABEL_59;
            v67 = &v12[v58];
            v68 = v12[v58 + 7];
            v67[6] = v82;
            v67[7] = v75;
            swift_bridgeObjectRelease(v68);
            v93 = v12;
          }
          if (__OFADD__(a2++, 1))
            break;
        }
        ++v6;
        v58 += 2;
        if (v6 == v12[2])
          goto LABEL_36;
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
    }
    __break(1u);
    goto LABEL_61;
  }
LABEL_38:
  v61 = 0;
  a2 = 0;
LABEL_39:
  sub_1002C6D64(a2, v61);
  v62 = v93;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v62);
  v64 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "setAccountProperty:forKey:", isa, v64);

  v65 = objc_msgSend(v84, "ams_saveAccount:verifyCredentials:", a3, 0);
  v89 = sub_10024016C;
  v90 = 0;
  aBlock = _NSConcreteStackBlock;
  v86 = 1107296256;
  v87 = sub_1002A7214;
  v88 = &unk_1008F6080;
  v66 = _Block_copy(&aBlock);
  objc_msgSend(v65, "addFinishBlock:", v66, swift_release(v90).n128_f64[0]);

  _Block_release(v66);
}

id sub_10023FD40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwitchAccountStorageController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SwitchAccountStorageController()
{
  return objc_opt_self(BKSwitchAccountStorageController);
}

id sub_10023FDCC(id result, void *a2, unsigned __int8 a3)
{
  id v3;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    v3 = result;
    result = a2;
  }
  return result;
}

void destroy for SwitchAccountStorageController.AccountsState(uint64_t a1)
{
  sub_10023FE14(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_10023FE14(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2)
      return;

    a1 = a2;
  }

}

uint64_t _s5Books30SwitchAccountStorageControllerC13AccountsStateOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10023FDCC(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SwitchAccountStorageController.AccountsState(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10023FDCC(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10023FE14(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SwitchAccountStorageController.AccountsState(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10023FE14(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SwitchAccountStorageController.AccountsState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SwitchAccountStorageController.AccountsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10023FFB8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_10023FFD0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SwitchAccountStorageController.AccountsState()
{
  return &type metadata for SwitchAccountStorageController.AccountsState;
}

uint64_t sub_10023FFF8(void *a1, void *a2, char a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  char v11;

  if (a3 != 2)
    return 0;
  v4 = a1;
  v5 = a2;
  v6 = objc_msgSend(v4, "identifier");
  v7 = objc_msgSend(v5, "identifier");
  v8 = v7;
  if (!v6)
  {

    if (!v8)
    {
      v11 = 0;
      return v11 & 1;
    }

    goto LABEL_9;
  }
  if (!v7)
  {

LABEL_9:
    v11 = 1;
    return v11 & 1;
  }
  sub_100009E04(0, (unint64_t *)&qword_1009E9020, NSString_ptr);
  v9 = v6;
  v10 = static NSObject.== infix(_:_:)(v9, v8);

  v11 = v10 ^ 1;
  return v11 & 1;
}

uint64_t sub_100240104()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100240138()
{
  uint64_t v0;

  sub_10023F480(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_100240144(uint64_t a1, uint64_t a2)
{
  return sub_100240194(a2, "Error saving shared account: %s", "Success saving shared account");
}

uint64_t sub_10024016C(uint64_t a1, uint64_t a2)
{
  return sub_100240194(a2, "Error saving legacy books account: %s", "Success saving legacy books account");
}

uint64_t sub_100240194(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint8_t *v32;
  const char *v33;
  uint64_t v34;
  _QWORD v35[3];
  _BYTE v36[8];
  uint64_t v37;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v32 - v11;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1009CDD08 != -1)
      swift_once(&qword_1009CDD08, sub_10023E3D4);
    v13 = sub_100048F64(v6, (uint64_t)qword_1009D4478);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
    swift_errorRetain(a1);
    v14 = swift_errorRetain(a1);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v33 = a2;
      v19 = v18;
      v37 = v18;
      *(_DWORD *)v17 = 136315138;
      v32 = v17 + 4;
      swift_getErrorValue(a1, v36, v35);
      v20 = Error.localizedDescription.getter(v35[1], v35[2]);
      v22 = v21;
      v34 = sub_100040F58(v20, v21, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v32, v17 + 12);
      swift_bridgeObjectRelease(v22);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, v33, v17, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    if (qword_1009CDD08 != -1)
      swift_once(&qword_1009CDD08, sub_10023E3D4);
    v23 = sub_100048F64(v6, (uint64_t)qword_1009D4478);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v23, v6);
    v25 = Logger.logObject.getter(v24);
    v29 = static os_log_type_t.debug.getter(v25, v26, v27, v28);
    if (os_log_type_enabled(v25, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v29, a3, v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1002404B4()
{
  uint64_t v0;

  sub_10023FE14(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1002404DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100240500()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10024052C(uint64_t a1)
{
  uint64_t v1;

  return sub_10023ED54(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100240538(uint64_t a1)
{
  uint64_t v1;

  sub_10023F14C(a1, v1);
}

uint64_t sub_100240540()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100240550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10023E454(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100240558()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024057C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  __int16 v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 0x1FF;
  return v4(v6);
}

uint64_t sub_1002405B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002405DC()
{
  uint64_t v0;

  sub_10023E6EC(*(void (**)(void *, void *, uint64_t))(v0 + 16));
}

uint64_t sub_100240600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D4580);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InfoBar.MessageQueue(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  swift_defaultActor_initialize(v11);
  v12 = v11 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage;
  v17 = 0;
  v13 = sub_10004CFD4(&qword_1009D4588);
  Published.init(initialValue:)(&v17, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12, v9, v6);
  *(_QWORD *)(v11 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask) = 0;
  *(_QWORD *)(v11 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v11 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage) = 0;
  v14 = type metadata accessor for InfoBarPresenter();
  swift_allocObject(v14, 56, 7);
  *(_QWORD *)(v3 + 16) = sub_1002832BC(a1, a2, v11);
  return v3;
}

uint64_t sub_100240744()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for InfoBarModule()
{
  return objc_opt_self(_TtC5Books13InfoBarModule);
}

uint64_t sub_100240788(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    v7 = (void *)a2[2];
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    v8 = (void *)a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = *(int *)(a3 + 32);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v12 = type metadata accessor for Logger(0);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain(v4);
    swift_retain(v6);
    v14 = v7;
    v15 = v8;
    v13(v10, v11, v12);
  }
  return v5;
}

uint64_t sub_100240858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));

  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1002408B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = (void *)a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = (void *)a2[4];
  *(_QWORD *)(a1 + 32) = v8;
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  v12 = type metadata accessor for Logger(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain(v4);
  swift_retain(v5);
  v14 = v7;
  v15 = v8;
  v13(v10, v11, v12);
  return a1;
}

uint64_t *sub_100240960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a1[2];
  v11 = (void *)a2[2];
  a1[2] = (uint64_t)v11;
  v12 = v11;

  a1[3] = a2[3];
  v13 = (void *)a2[4];
  v14 = (void *)a1[4];
  a1[4] = (uint64_t)v13;
  v15 = v13;

  a1[5] = a2[5];
  a1[6] = a2[6];
  v16 = *(int *)(a3 + 32);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_100240A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t *sub_100240A98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  v8 = (void *)a1[2];
  a1[2] = a2[2];

  v9 = a2[4];
  v10 = (void *)a1[4];
  a1[3] = a2[3];
  a1[4] = v9;

  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  v11 = *(int *)(a3 + 32);
  v12 = (uint64_t)a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_100240B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100240B48);
}

uint64_t sub_100240B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100240BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100240BD0);
}

uint64_t sub_100240BD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SnapshotImageView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D45E8;
  if (!qword_1009D45E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SnapshotImageView);
  return result;
}

uint64_t sub_100240C80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1007141C8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_1007141E0;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100240D18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100868C54, 1);
}

_QWORD *sub_100240D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *result;
  id v33;
  double v34;
  double v35;
  Swift::String v36;
  void *object;
  Swift::String v38;
  id v39;
  uint64_t v40;
  double v41;
  double v42;
  Swift::String v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;

  v2 = v1;
  v65 = a1;
  v3 = sub_10004CFD4(&qword_1009D4630);
  v4 = __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v64 = (uint64_t)&v56 - v7;
  v8 = type metadata accessor for SnapshotImageView(0);
  v9 = __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v13 = (char *)&v56 - v12;
  v14 = type metadata accessor for Logger(0);
  v67 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + 16);
  v72 = *(_OWORD *)v1;
  v73 = v17;
  v66 = sub_10004CFD4(&qword_1009D4638);
  Binding.wrappedValue.getter(&v69, v66);
  v18 = v69;
  if (v69)

  v19 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v16, v1 + *(int *)(v8 + 32), v14);
  sub_1002417B4(v1, (uint64_t)v13);
  v20 = sub_1002417B4(v1, (uint64_t)v11);
  v21 = v14;
  v22 = Logger.logObject.getter(v20);
  v26 = static os_log_type_t.debug.getter(v22, v23, v24, v25);
  if (!os_log_type_enabled(v22, (os_log_type_t)v26))
  {
    sub_1002417F8((uint64_t)v13);
    sub_1002417F8((uint64_t)v11);

    v47 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v16, v21);
    v40 = v65;
LABEL_11:
    *v6 = static Alignment.center.getter(v47);
    v6[1] = v49;
    v50 = sub_10004CFD4(&qword_1009D4640);
    sub_100241218((__int128 *)v2, v18 != 0, (uint64_t)v6 + *(int *)(v50 + 44));
    v51 = static Color.green.getter();
    v52 = v64;
    sub_10000B5E4((uint64_t)v6, v64, &qword_1009D4630);
    swift_release(v51);
    sub_100010960((uint64_t)v6, &qword_1009D4630);
    v53 = *(_QWORD *)(v2 + 16);
    v72 = *(_OWORD *)v2;
    v73 = v53;
    Binding.wrappedValue.getter(&v69, v66);
    v54 = v69;
    sub_10000B5E4(v52, v40, &qword_1009D4630);
    v55 = (_QWORD *)(v40 + *(int *)(sub_10004CFD4(&qword_1009D4648) + 36));
    *v55 = 0;
    v55[1] = v54;
    return (_QWORD *)sub_100010960(v52, &qword_1009D4630);
  }
  v62 = v26;
  v63 = v21;
  v27 = swift_slowAlloc(22, -1);
  v61 = swift_slowAlloc(32, -1);
  v71 = v61;
  *(_DWORD *)v27 = 134218242;
  v28 = *((_QWORD *)v13 + 3);
  sub_1002417F8((uint64_t)v13);
  *(_QWORD *)&v72 = v28;
  v60 = (char *)&v72 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, (char *)&v72 + 8, v27 + 4, v27 + 12);
  *(_WORD *)(v27 + 12) = 2080;
  if (!v18)
  {
    v46 = 0xEA00000000006465;
    v45 = 0x64616F6C20746F4ELL;
    v40 = v65;
    goto LABEL_10;
  }
  v69 = 0;
  v70 = 0xE000000000000000;
  v29 = *v11;
  v30 = v11[2];
  v58 = v11[1];
  v59 = v29;
  *(_QWORD *)&v72 = v29;
  *((_QWORD *)&v72 + 1) = v58;
  v57 = v30;
  v73 = v30;
  v31 = v66;
  result = Binding.wrappedValue.getter(&v68, v66);
  v33 = v68;
  if (v68)
  {
    objc_msgSend(v68, "size");
    v35 = v34;

    v36._countAndFlagsBits = Double.description.getter(v35);
    object = v36._object;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(object);
    v38._countAndFlagsBits = 2127904;
    v38._object = (void *)0xE300000000000000;
    String.append(_:)(v38);
    *(_QWORD *)&v72 = v59;
    *((_QWORD *)&v72 + 1) = v58;
    v73 = v57;
    result = Binding.wrappedValue.getter(&v68, v31);
    v39 = v68;
    v40 = v65;
    if (v68)
    {
      objc_msgSend(v68, "size");
      v42 = v41;

      v43._countAndFlagsBits = Double.description.getter(v42);
      v44 = v43._object;
      String.append(_:)(v43);
      swift_bridgeObjectRelease(v44);
      v45 = (uint64_t)v69;
      v46 = v70;
LABEL_10:
      *(_QWORD *)&v72 = sub_100040F58(v45, v46, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v60, v27 + 14, v27 + 22);
      swift_bridgeObjectRelease(v46);
      sub_1002417F8((uint64_t)v11);
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v62, "ImageView refreshed for page %ld %s", (uint8_t *)v27, 0x16u);
      v48 = v61;
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      v47 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v16, v63);
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100241218(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;

  v75 = sub_10004CFD4(&qword_1009D8400);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_10004CFD4(&qword_1009D4650);
  __chkstk_darwin(v71);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_10004CFD4(&qword_1009D4658);
  v9 = __chkstk_darwin(v72);
  v77 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v69 = (uint64_t)&v59 - v12;
  __chkstk_darwin(v11);
  v76 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for Image.ResizingMode(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = static Color.pink.getter(v16);
  swift_release(v19);
  v20 = *((_QWORD *)a1 + 4);
  KeyPath = swift_getKeyPath(&unk_100714248);
  v22 = swift_getKeyPath(&unk_100714270);
  static Published.subscript.getter(&v90, v20, KeyPath, v22);
  swift_release(KeyPath);
  swift_release(v22);
  v70 = v90;
  v68 = swift_getKeyPath(&unk_100714290);
  v23 = *((_QWORD *)a1 + 5);
  v24 = *((_QWORD *)a1 + 6);
  v25 = static Alignment.center.getter(v68);
  _FrameLayout.init(width:height:alignment:)(&v78, v23, 0, v24, 0, v25, v26);
  v67 = v78;
  v66 = v79;
  v65 = v80;
  v64 = v81;
  v63 = v82;
  v62 = v83;
  v27 = *((_QWORD *)a1 + 2);
  v90 = *a1;
  *(_QWORD *)&v91 = v27;
  v28 = sub_10004CFD4(&qword_1009D4638);
  Binding.wrappedValue.getter(&v84, v28);
  if (!v84)
    objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v29 = Image.init(uiImage:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for Image.ResizingMode.stretch(_:), v14);
  v30 = 0.0;
  v31 = Image.resizable(capInsets:resizingMode:)(v18, v29, 0.0, 0.0, 0.0, 0.0);
  v32 = swift_release(v29);
  v33 = (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v32);
  if ((a2 & 1) != 0)
    v34 = 0.0;
  else
    v34 = 1.0;
  if ((a2 & 1) != 0)
    v30 = 1.0;
  v35 = *((_QWORD *)a1 + 5);
  v36 = *((_QWORD *)a1 + 6);
  v37 = static Alignment.center.getter(v33);
  v39 = _FrameLayout.init(width:height:alignment:)(&v84, v35, 0, v36, 0, v37, v38);
  v61 = v84;
  v60 = v85;
  v40 = v86;
  v41 = v87;
  v42 = v88;
  v59 = v89;
  v43 = v73;
  v44 = ProgressView<>.init<>()(v39);
  v45 = static Alignment.center.getter(v44);
  _FrameLayout.init(width:height:alignment:)(&v90, v35, 0, v36, 0, v45, v46);
  v47 = v74;
  v48 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v8, v43, v75);
  v49 = &v8[*(int *)(v71 + 36)];
  v50 = v91;
  *(_OWORD *)v49 = v90;
  *((_OWORD *)v49 + 1) = v50;
  *((_OWORD *)v49 + 2) = v92;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v48);
  v51 = v69;
  sub_10000B5E4((uint64_t)v8, v69, &qword_1009D4650);
  *(double *)(v51 + *(int *)(v72 + 36)) = v34;
  sub_100010960((uint64_t)v8, &qword_1009D4650);
  v52 = v76;
  sub_100241844(v51, v76);
  v53 = v77;
  sub_10000B5E4(v52, v77, &qword_1009D4658);
  v54 = v68;
  v55 = v70;
  *(_QWORD *)a3 = v68;
  *(_QWORD *)(a3 + 8) = v55;
  *(_QWORD *)(a3 + 16) = v67;
  *(_BYTE *)(a3 + 24) = v66;
  *(_QWORD *)(a3 + 32) = v65;
  *(_BYTE *)(a3 + 40) = v64;
  v56 = v62;
  *(_QWORD *)(a3 + 48) = v63;
  *(_QWORD *)(a3 + 56) = v56;
  *(double *)(a3 + 64) = v34;
  *(_QWORD *)(a3 + 72) = v31;
  *(double *)(a3 + 80) = v30;
  *(_QWORD *)(a3 + 88) = 0;
  *(_WORD *)(a3 + 96) = 1;
  *(_QWORD *)(a3 + 104) = v61;
  *(_BYTE *)(a3 + 112) = v60;
  *(_QWORD *)(a3 + 120) = v40;
  *(_BYTE *)(a3 + 128) = v41;
  v57 = v59;
  *(_QWORD *)(a3 + 136) = v42;
  *(_QWORD *)(a3 + 144) = v57;
  *(_WORD *)(a3 + 152) = 257;
  v58 = sub_10004CFD4(&qword_1009D4660);
  sub_10000B5E4(v53, a3 + *(int *)(v58 + 64), &qword_1009D4658);
  swift_retain(v54);
  swift_retain(v55);
  swift_retain(v31);
  sub_100010960(v52, &qword_1009D4658);
  sub_100010960(v53, &qword_1009D4658);
  swift_release(v55);
  swift_release(v54);
  swift_release(v31);
}

uint64_t sub_1002417B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnapshotImageView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002417F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SnapshotImageView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100241844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D4658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100241890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4668;
  if (!qword_1009D4668)
  {
    v1 = sub_100030B74(&qword_1009D4648);
    sub_100030B34(&qword_1009D4670, &qword_1009D4630, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(&qword_1009D4678, &qword_1009D4680, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4668);
  }
  return result;
}

ValueMetadata *type metadata accessor for Blur()
{
  return &type metadata for Blur;
}

void *sub_10024193C()
{
  return &protocol witness table for Never;
}

id sub_100241948()
{
  _QWORD *v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", *v0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v1);

  return v2;
}

void sub_1002419B4(void *a1)
{
  _QWORD *v1;
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", *v1);
  objc_msgSend(a1, "setEffect:", v3);

}

uint64_t sub_100241A2C(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_100241A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100241B78();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100241ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100241B78();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100241B0C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100241B78();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100241B34()
{
  unint64_t result;

  result = qword_1009D4688;
  if (!qword_1009D4688)
  {
    result = swift_getWitnessTable(&unk_1007142C8, &type metadata for Blur);
    atomic_store(result, (unint64_t *)&qword_1009D4688);
  }
  return result;
}

unint64_t sub_100241B78()
{
  unint64_t result;

  result = qword_1009D4690;
  if (!qword_1009D4690)
  {
    result = swift_getWitnessTable(&unk_100714318, &type metadata for Blur);
    atomic_store(result, (unint64_t *)&qword_1009D4690);
  }
  return result;
}

uint64_t sub_100241BBC(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = &unk_1007143E8;
  v2[3] = &unk_100714400;
  return swift_initClassMetadata2(a1, 0, 4, v2, a1 + 112);
}

void sub_100241C14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t WitnessTable;
  uint64_t v26;
  char *v27;
  id v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;
  id v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  id v55;
  char v56;
  id v57;
  void *v58;
  void *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void *v63;
  uint64_t (*v64)(char *);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  id v73;
  id v74;
  char v75;
  id v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  void *v80;
  void *v81;
  _QWORD *v82;
  _QWORD *v83;
  __n128 v84;
  id v85;
  id v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (**v95)();
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  char *v113;
  char *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  _QWORD aBlock[5];
  _QWORD *v126;

  v100 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v98 = v5;
  v99 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for AccessibilityTraits(0);
  v107 = *(_QWORD *)(v108 - 8);
  v6 = __chkstk_darwin(v108);
  v106 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 16);
  v105 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v6);
  v104 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v118 = v8;
  v103 = type metadata accessor for ModifiedContent(255, v8, v10);
  v11 = type metadata accessor for Optional(0, v103);
  v12 = __chkstk_darwin(v11);
  v102 = (char *)&v98 - v13;
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v12);
  v114 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Optional(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin(v17);
  v119 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v113 = (char *)&v98 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v98 - v23;
  WitnessTable = swift_getWitnessTable(&unk_100714460, a3);
  v120 = a3;
  v26 = type metadata accessor for UIViewControllerRepresentableContext(0, a3, WitnessTable);
  UIViewControllerRepresentableContext.coordinator.getter(aBlock, v26);
  v27 = (char *)aBlock[0];
  v28 = *(id *)(aBlock[0] + qword_1009D46B0);
  v101 = a1;
  v121 = objc_msgSend(a1, "presentedViewController");
  v122 = v18;
  v29 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v124 = v17;
  v30 = v17;
  v31 = v29;
  v29(v24, v123, v30);
  v32 = objc_msgSend(v28, "sheetPresentationController");
  if (v32)
  {
    v115 = v28;
    v116 = v15;
    v117 = v14;
    v112 = v32;
    objc_msgSend(v32, "invalidateDetents");
    v33 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v111 = swift_allocObject(v33, 40, 7);
    *(_OWORD *)(v111 + 16) = xmmword_1007118F0;
    v110 = sub_100009E04(0, (unint64_t *)&unk_1009D47F0, UISheetPresentationControllerDetent_ptr);
    if (qword_1009CDD10 != -1)
      swift_once(&qword_1009CDD10, sub_10024346C);
    v109 = qword_1009D46A0;
    v34 = swift_allocObject(&unk_1008F64C8, 24, 7);
    swift_unknownObjectWeakInit(v34 + 16, v27);
    v35 = v113;
    v36 = v124;
    v31(v113, v24, v124);
    v37 = v122;
    v38 = *(unsigned __int8 *)(v122 + 80);
    v39 = v31;
    v40 = (v38 + 56) & ~v38;
    v41 = swift_allocObject(&unk_1008F64F0, v40 + v19, v38 | 7);
    v42 = v117;
    *(_QWORD *)(v41 + 16) = v118;
    *(_QWORD *)(v41 + 24) = v42;
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v120 + 32);
    *(_QWORD *)(v41 + 48) = v34;
    v43 = v41 + v40;
    v31 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v43, v35, v36);
    swift_retain(v34);
    v44 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(v109, sub_10024654C, v41);
    v45 = v34;
    v14 = v42;
    swift_release(v45);
    swift_release(v41);
    v46 = v111;
    *(_QWORD *)(v111 + 32) = v44;
    aBlock[0] = v46;
    specialized Array._endMutation()(v47);
    v48 = aBlock[0];
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v48);
    v50 = v112;
    objc_msgSend(v112, "setDetents:", isa);

    v28 = v115;
    v15 = v116;
  }
  v51 = v119;
  v31(v119, v123, v124);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v51, 1, v14) == 1)
  {
    v52 = v122;
    (*(void (**)(char *, uint64_t))(v122 + 8))(v51, v124);
    v53 = v121;
    if (!v121)
      goto LABEL_15;
    goto LABEL_10;
  }
  v54 = v114;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v114, v51, v14);
  if ((v27[qword_1009D46C0] & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v54, v14);
    v52 = v122;
    v53 = v121;
    if (!v121)
    {
LABEL_15:

LABEL_36:
      (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v124);
      return;
    }
LABEL_10:
    sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v55 = v28;
    v28 = v53;
    v56 = static NSObject.== infix(_:_:)(v28, v55);

    if ((v56 & 1) != 0
      && (objc_msgSend(v55, "isBeingPresented") & 1) == 0
      && (objc_msgSend(v55, "isBeingDismissed") & 1) == 0)
    {
      objc_msgSend(v101, "dismissViewControllerAnimated:completion:", 1, 0);
    }

    goto LABEL_15;
  }
  v116 = v15;
  v119 = v24;
  v57 = objc_msgSend(v28, "view");
  if (v57)
  {
    v58 = v57;
    v59 = v28;
    sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
    v60 = v120;
    v61 = v123;
    v62 = swift_retain(*(_QWORD *)&v123[*(int *)(v120 + 60)]);
    v63 = (void *)UIColor.init(_:)(v62);
    objc_msgSend(v58, "setBackgroundColor:", v63);

    v64 = *(uint64_t (**)(char *))&v61[*(int *)(v60 + 68)];
    v65 = v104;
    v66 = v64(v54);
    v67 = v106;
    static AccessibilityTraits.isModal.getter(v66);
    v68 = *(_QWORD *)(v60 + 32);
    v69 = v102;
    v70 = v118;
    View.accessibilityAddTraits(_:)(v67, v118, v68);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v67, v108);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v65, v70);
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v69, 0, 1);
    v71 = v69;
    v72 = v27;
    dispatch thunk of UIHostingController.rootView.setter(v71);
    sub_100242C30();
    v115 = v59;
    v73 = objc_msgSend(v59, "sheetPresentationController");
    v74 = v73;
    v117 = v14;
    if (!v121)
    {
LABEL_23:
      v24 = v119;
      v77 = v116;
      if (v74)
      {
        objc_msgSend(v74, "setPrefersEdgeAttachedInCompactHeight:", 1);
        objc_msgSend(v74, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
        if ((v123[*(int *)(v120 + 64)] & 1) != 0)
        {
          v85 = 0;
        }
        else
        {
          if (qword_1009CDD10 != -1)
            swift_once(&qword_1009CDD10, sub_10024346C);
          v85 = (id)qword_1009D46A0;
        }
        objc_msgSend(v74, "setLargestUndimmedDetentIdentifier:", v85);

        v72 = v27;
        objc_msgSend(v74, "setDelegate:", v27);

      }
      v87 = v100;
      v88 = v99;
      v89 = v120;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v99, v123, v120);
      v90 = *(unsigned __int8 *)(v87 + 80);
      v91 = (v90 + 48) & ~v90;
      v92 = (char *)swift_allocObject(&unk_1008F6428, v91 + v98, v90 | 7);
      v93 = v117;
      *((_QWORD *)v92 + 2) = v70;
      *((_QWORD *)v92 + 3) = v93;
      v94 = *(_QWORD *)(v89 + 40);
      *((_QWORD *)v92 + 4) = v68;
      *((_QWORD *)v92 + 5) = v94;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v92[v91], v88, v89);
      v95 = (uint64_t (**)())((char *)v72 + qword_1009D46B8);
      v96 = *(_QWORD *)((char *)v72 + qword_1009D46B8);
      v97 = *(_QWORD *)((char *)v72 + qword_1009D46B8 + 8);
      *v95 = sub_1002463E0;
      v95[1] = (uint64_t (*)())v92;
      sub_10002AD00(v96, v97);
      v86 = v115;
      objc_msgSend(v101, "presentViewController:animated:completion:", v115, 1, 0);
      goto LABEL_34;
    }
    v24 = v119;
    if (v73)
    {
      v75 = v123[*(int *)(v120 + 64)];
      v76 = objc_msgSend(v73, "largestUndimmedDetentIdentifier");
      v77 = v116;
      if (v76)
      {

        v78 = v121;
        if ((v75 & 1) != 0)
        {
LABEL_21:
          v79 = swift_allocObject(&unk_1008F6450, 25, 7);
          *(_QWORD *)(v79 + 16) = v74;
          *(_BYTE *)(v79 + 24) = v75;
          v80 = v72;
          v72 = (_QWORD *)swift_allocObject(&unk_1008F6478, 32, 7);
          v72[2] = sub_100246474;
          v72[3] = v79;
          aBlock[4] = sub_100238D90;
          v126 = v72;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100605AE4;
          aBlock[3] = &unk_1008F6490;
          v81 = _Block_copy(aBlock);
          v27 = v24;
          v82 = v126;
          v74 = v74;
          swift_retain(v72);
          v83 = v82;
          v24 = v27;
          objc_msgSend(v74, "animateChanges:", v81, swift_release(v83).n128_f64[0]);
          _Block_release(v81);
          LOBYTE(v81) = swift_isEscapingClosureAtFileLocation(v72, "", 79, 192, 28, 1);

          v77 = v116;
          swift_release(v79);
          v84 = swift_release(v72);
          if ((v81 & 1) == 0)
          {
LABEL_35:
            (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v114, v117, v84);
            v52 = v122;
            goto LABEL_36;
          }
          __break(1u);
          goto LABEL_23;
        }
      }
      else
      {
        v78 = v121;
        if ((v75 & 1) == 0)
          goto LABEL_21;
      }

      v86 = v72;
      v72 = v74;
    }
    else
    {

      v86 = v121;
      v77 = v116;
    }
LABEL_34:

    goto LABEL_35;
  }

  __break(1u);
}

double sub_100242690(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  double v15;
  double result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  _QWORD v24[4];
  _BYTE v25[24];

  v9 = type metadata accessor for Optional(0, a5);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24[-1] - v11;
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
  {
    objc_msgSend(a1, "maximumDetentValue");
    return result;
  }
  v14 = (void *)Strong;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 48))(v12, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else if ((swift_dynamicCast(v24, v12, a5, &type metadata for OverlayViewModel.ReadingSettings, 6) & 1) != 0)
  {
    v18 = v24[2];
    v17 = v24[3];
    *(_QWORD *)&v15 = swift_release(v24[0]).n128_u64[0];
    goto LABEL_8;
  }
  v18 = 0;
  v17 = 0;
LABEL_8:
  v19 = objc_msgSend(a1, "containerTraitCollection", v15);
  v20 = sub_100244824(v19, v18, v17);
  swift_bridgeObjectRelease(v17);
  objc_msgSend(a1, "maximumDetentValue");
  v22 = v21;

  if (v22 >= v20)
    return v20;
  else
    return v22;
}

uint64_t sub_100242858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[4];

  v10 = type metadata accessor for Optional(0, a3);
  __chkstk_darwin(v10);
  v12 = (char *)v22 - v11;
  v14 = type metadata accessor for Binding(255, v13);
  v15 = type metadata accessor for Optional(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v22 - v17;
  v22[0] = a2;
  v22[1] = a3;
  v22[2] = a4;
  v22[3] = a5;
  v19 = type metadata accessor for HalfSheet(0, (uint64_t)v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1 + *(int *)(v19 + 52), v15);
  v20 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v14) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v12, 1, 1, a3);
    Binding.wrappedValue.setter(v12, v14);
    v16 = v20;
    v15 = v14;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1002429B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + qword_1009D46B8);
  v4 = *(_QWORD *)(v2 + qword_1009D46B8);
  v5 = *(_QWORD *)(v2 + qword_1009D46B8 + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_10002AD00(v4, v5);
}

uint64_t sub_1002429D8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1009D46C0);
}

uint64_t sub_1002429E8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1009D46C0) = result;
  return result;
}

id sub_1002429F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id result;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  _QWORD v23[4];
  objc_super v24;
  uint64_t WitnessTable;
  uint64_t v26;
  unint64_t v27;

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v4 = type metadata accessor for ModifiedContent(255, v2, v3);
  v5 = type metadata accessor for Optional(0, v4);
  __chkstk_darwin(v5);
  v7 = (char *)&v23[-1] - v6;
  v8 = (_QWORD *)((char *)v0 + qword_1009D46B8);
  *v8 = 0;
  v8[1] = 0;
  *((_BYTE *)v0 + qword_1009D46C0) = 0;
  v9 = v1[12];
  v10 = sub_100244A50();
  v26 = v9;
  v27 = v10;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v5);
  type metadata accessor for UIHostingController(0, v5, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v7, 1, 1, v4);
  v12 = v0;
  v13 = (void *)UIHostingController.__allocating_init(rootView:)(v7);
  *(_QWORD *)((char *)v12 + qword_1009D46A8) = v13;
  result = objc_msgSend(v13, "view");
  if (result)
  {
    v15 = result;
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v15, "setBackgroundColor:", v16);

    v17 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    *(_QWORD *)((char *)v12 + qword_1009D46B0) = v17;
    v18 = v17;
    objc_msgSend(v18, "setModalPresentationStyle:", 1);

    v19 = v1[11];
    v20 = v1[13];
    v23[0] = v2;
    v23[1] = v19;
    v23[2] = v9;
    v23[3] = v20;
    v21 = (objc_class *)type metadata accessor for HalfSheet.Coordinator(0, (uint64_t)v23);
    v24.receiver = v12;
    v24.super_class = v21;
    return objc_msgSendSuper2(&v24, "init");
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100242C10()
{
  return sub_1002429F8();
}

void sub_100242C30()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Class isa;
  id v34;

  v1 = *(void **)(v0 + qword_1009D46A8);
  v2 = objc_msgSend(v1, "view");
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)(v0 + qword_1009D46B0);
    v5 = objc_msgSend(v4, "view");
    if (v5)
    {
      v34 = v5;
      v6 = objc_msgSend(v4, "childViewControllers");
      v7 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      v9 = v1;
      LOBYTE(v6) = sub_1004EC0EC((uint64_t)v9, v8);
      swift_bridgeObjectRelease(v8);

      if ((v6 & 1) != 0)
      {
LABEL_7:

        return;
      }
      objc_msgSend(v4, "addChildViewController:", v9);
      v10 = objc_msgSend(v4, "view");
      if (v10)
      {
        v11 = v10;
        v12 = objc_msgSend(v9, "view");
        if (v12)
        {
          v13 = v12;
          objc_msgSend(v11, "addSubview:", v12);

          objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v14 = (void *)objc_opt_self(NSLayoutConstraint);
          v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
          v16 = swift_allocObject(v15, 64, 7);
          *(_OWORD *)(v16 + 16) = xmmword_1007143B0;
          v17 = objc_msgSend(v3, "topAnchor");
          v18 = objc_msgSend(v34, "topAnchor");
          v19 = objc_msgSend(v17, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v18, 1.0);

          *(_QWORD *)(v16 + 32) = v19;
          v20 = objc_msgSend(v34, "safeAreaLayoutGuide");
          v21 = objc_msgSend(v20, "bottomAnchor");

          v22 = objc_msgSend(v3, "bottomAnchor");
          v23 = objc_msgSend(v21, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v22, 1.0);

          *(_QWORD *)(v16 + 40) = v23;
          v24 = objc_msgSend(v3, "leadingAnchor");
          v25 = objc_msgSend(v34, "readableContentGuide");
          v26 = objc_msgSend(v25, "leadingAnchor");

          v27 = objc_msgSend(v24, "constraintEqualToAnchor:", v26);
          *(_QWORD *)(v16 + 48) = v27;
          v28 = objc_msgSend(v3, "trailingAnchor");
          v29 = objc_msgSend(v34, "readableContentGuide");
          v30 = objc_msgSend(v29, "trailingAnchor");

          v31 = objc_msgSend(v28, "constraintEqualToAnchor:", v30);
          *(_QWORD *)(v16 + 56) = v31;
          specialized Array._endMutation()(v32);
          sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v16);
          objc_msgSend(v14, "activateConstraints:", isa);

          objc_msgSend(v9, "didMoveToParentViewController:", v4);
          goto LABEL_7;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {

    }
  }
}

void sub_10024305C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1002449BC();

}

id sub_1002430A8()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  _OWORD v4[2];
  objc_super v5;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v4[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x50);
  v4[1] = v1;
  v2 = (objc_class *)type metadata accessor for HalfSheet.Coordinator(0, (uint64_t)v4);
  v5.receiver = v0;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_1002430FC(uint64_t a1)
{

  return sub_10002AD00(*(_QWORD *)(a1 + qword_1009D46B8), *(_QWORD *)(a1 + qword_1009D46B8 + 8));
}

uint64_t type metadata accessor for HalfSheet.Coordinator(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for HalfSheet.Coordinator);
}

uint64_t sub_100243154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v30[4];

  v18 = type metadata accessor for Optional(0, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v30[0] = a10;
  v30[1] = a11;
  v30[2] = a12;
  v30[3] = a13;
  v19 = (int *)type metadata accessor for HalfSheet(0, (uint64_t)v30);
  v20 = a9 + v19[13];
  v21 = type metadata accessor for Binding(255, v18);
  v22 = type metadata accessor for Optional(0, v21);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, a2, v22);
  v24 = (_QWORD *)(a9 + v19[14]);
  *v24 = a3;
  v24[1] = a4;
  *(_QWORD *)(a9 + v19[15]) = a5;
  *(_BYTE *)(a9 + v19[16]) = a6;
  v25 = (_QWORD *)(a9 + v19[17]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

UIViewController __swiftcall BookActionMenuDataSource.viewController(forPage:)(Swift::Int forPage)
{
  return (UIViewController)objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
}

id sub_10024329C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1002435F8(a1[2], a1[3], a1[4], a1[5]);
  *a2 = result;
  return result;
}

uint64_t sub_1002432CC(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_100243304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100714460, a3);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_100243360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100714460, a3);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void sub_1002433BC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100714460, a1);
  UIViewControllerRepresentable.body.getter(a1, WitnessTable);
  __break(1u);
}

void sub_1002433EC(id a1, char a2)
{
  id v3;
  id v4;

  if ((a2 & 1) != 0)
  {
    v3 = 0;
  }
  else
  {
    if (qword_1009CDD10 != -1)
      swift_once(&qword_1009CDD10, sub_10024346C);
    v3 = (id)qword_1009D46A0;
  }
  v4 = v3;
  objc_msgSend(a1, "setLargestUndimmedDetentIdentifier:");

}

NSString sub_10024346C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D46A0 = (uint64_t)result;
  return result;
}

uint64_t sub_1002434A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a4;
  v28 = a5;
  v26 = a3;
  v25 = a2;
  v15 = type metadata accessor for Optional(255, a7);
  v16 = type metadata accessor for Binding(255, v15);
  v17 = type metadata accessor for Optional(0, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v25 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v25 - v21;
  Binding.wrappedValue.getter((uint64_t *)((char *)&v25 - v21), v16);
  v23 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v19, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v16);
  return sub_100243154((uint64_t)v22, (uint64_t)v19, 0, 0, v25, v26, v27, v28, a9, a6, a7, a8, a10);
}

id sub_1002435F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[4];

  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HalfSheet.Coordinator(0, (uint64_t)v5)), "init");
}

double sub_100243634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  double v79;
  uint64_t v80;
  uint64_t v81;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v6 = v5;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v9 = v7;
  v11 = v4 == v8 && v6 == v7;
  if (!a1)
  {
    if (v11)
    {
      v12 = 0x4070200000000000;
      goto LABEL_57;
    }
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v7, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v9);
    if ((v15 & 1) != 0)
    {
      v14 = 0x200000000000;
      goto LABEL_50;
    }
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
    v6 = v24;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    if (v23 == v25 && v6 == v26)
    {
      v12 = 0x4070500000000000;
      goto LABEL_57;
    }
    v28 = v26;
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v6, v25, v26, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
    {
      v14 = 0x500000000000;
      goto LABEL_50;
    }
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
    v6 = v36;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v39 = v37;
    if (v35 == v38 && v6 == v37)
    {
      v12 = 0x4070700000000000;
      goto LABEL_57;
    }
    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v6, v38, v37, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v39);
    if ((v41 & 1) != 0)
    {
      v14 = 0x700000000000;
      goto LABEL_50;
    }
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
    v6 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v51 = v49;
    if (v47 == v50 && v6 == v49)
    {
      v12 = 0x4070A00000000000;
      goto LABEL_57;
    }
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v6, v50, v49, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v51);
    if ((v53 & 1) != 0)
    {
      v14 = 0xA00000000000;
      goto LABEL_50;
    }
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
    v6 = v61;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v64 = v62;
    if (v60 == v63 && v6 == v62)
    {
      v12 = 0x4071000000000000;
      goto LABEL_57;
    }
    v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v6, v63, v62, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v64);
    if ((v68 & 1) != 0)
      return 272.0;
    v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
    v6 = v75;
    v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v65 = v76;
    if (v74 == v77 && v6 == v76)
    {
      v73 = 0x900000000000;
      goto LABEL_70;
    }
    v78 = (_stringCompareWithSmolCheck(_:_:expecting:)(v74, v6, v77, v76, 0) & 1) == 0;
    v79 = 289.0;
    v80 = 0x900000000000;
LABEL_73:
    v81 = v80 & 0xFFFFFFFFFFFFLL | 0x4071000000000000;
    if (v78)
      v54 = v79;
    else
      v54 = *(double *)&v81;
    goto LABEL_58;
  }
  if (v11)
  {
    v12 = 0x4070300000000000;
LABEL_57:
    v54 = *(double *)&v12;
    v65 = v6;
LABEL_58:
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v65);
    return v54;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v7, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v9);
  if ((v13 & 1) == 0)
  {
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
    v6 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    if (v16 == v18 && v6 == v19)
    {
      v12 = 0x4070600000000000;
      goto LABEL_57;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v6, v18, v19, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
    {
      v14 = 0x600000000000;
      goto LABEL_50;
    }
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
    v6 = v31;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v34 = v32;
    if (v30 == v33 && v6 == v32)
    {
      v12 = 0x4070900000000000;
      goto LABEL_57;
    }
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v6, v33, v32, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v34);
    if ((v40 & 1) != 0)
    {
      v14 = 0x900000000000;
      goto LABEL_50;
    }
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
    v6 = v43;
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v46 = v44;
    if (v42 == v45 && v6 == v44)
    {
      v12 = 0x4070B00000000000;
      goto LABEL_57;
    }
    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v6, v45, v44, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v46);
    if ((v52 & 1) != 0)
    {
      v14 = 0xB00000000000;
      goto LABEL_50;
    }
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
    v6 = v56;
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v59 = v57;
    if (v55 == v58 && v6 == v57)
    {
      v12 = 0x4071200000000000;
      goto LABEL_57;
    }
    v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v6, v58, v57, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v59);
    if ((v67 & 1) != 0)
      return 274.0;
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
    v6 = v70;
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v65 = v71;
    if (v69 == v72 && v6 == v71)
    {
      v73 = 0xB00000000000;
LABEL_70:
      *(_QWORD *)&v54 = v73 & 0xFFFFFFFFFFFFLL | 0x4071000000000000;
      goto LABEL_58;
    }
    v78 = (_stringCompareWithSmolCheck(_:_:expecting:)(v69, v6, v72, v71, 0) & 1) == 0;
    v79 = 291.0;
    v80 = 0xB00000000000;
    goto LABEL_73;
  }
  v14 = 0x300000000000;
LABEL_50:
  *(_QWORD *)&v54 = v14 & 0xFFFFFFFFFFFFLL | 0x4070000000000000;
  return v54;
}

double sub_100243BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  char v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  BOOL v163;
  double v164;
  uint64_t v165;
  double v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  if (!a2)
  {
    if (a1 != 2)
    {
      if (a1 == 1)
      {
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
        v6 = v14;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
        if (v13 == v15 && v6 == v16)
        {
          v36 = 0x407AA00000000000;
        }
        else
        {
          v18 = v16;
          v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v6, v15, v16, 0);
          swift_bridgeObjectRelease(v6);
          swift_bridgeObjectRelease(v18);
          if ((v19 & 1) != 0)
          {
            v12 = 0xA00000000000;
            goto LABEL_18;
          }
          v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
          v6 = v54;
          v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
          if (v53 != v55 || v6 != v56)
          {
            v58 = v56;
            v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v6, v55, v56, 0);
            swift_bridgeObjectRelease(v6);
            swift_bridgeObjectRelease(v58);
            if ((v59 & 1) != 0)
              return 432.0;
            v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
            v6 = v78;
            v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
            v81 = v79;
            if (v77 == v80 && v6 == v79)
            {
              v36 = 0x407B400000000000;
              goto LABEL_120;
            }
            v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v6, v80, v79, 0);
            swift_bridgeObjectRelease(v6);
            swift_bridgeObjectRelease(v81);
            if ((v89 & 1) != 0)
            {
              v44 = 0x400000000000;
              goto LABEL_43;
            }
            v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
            v6 = v102;
            v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
            v105 = v103;
            if (v101 == v104 && v6 == v103)
            {
              v36 = 0x407BA00000000000;
              goto LABEL_120;
            }
            v113 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, v6, v104, v103, 0);
            swift_bridgeObjectRelease(v6);
            swift_bridgeObjectRelease(v105);
            if ((v113 & 1) != 0)
            {
              v44 = 0xA00000000000;
              goto LABEL_43;
            }
            v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
            v6 = v127;
            v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
            v130 = v128;
            if (v126 == v129 && v6 == v128)
            {
              v36 = 0x407C400000000000;
              goto LABEL_120;
            }
            v142 = _stringCompareWithSmolCheck(_:_:expecting:)(v126, v6, v129, v128, 0);
            swift_bridgeObjectRelease(v6);
            swift_bridgeObjectRelease(v130);
            if ((v142 & 1) != 0)
            {
              v139 = 0x400000000000;
              goto LABEL_129;
            }
            v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
            v6 = v155;
            v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
            v158 = v156;
            if (v154 == v157 && v6 == v156)
            {
              v36 = 0x407D100000000000;
              goto LABEL_120;
            }
            v167 = _stringCompareWithSmolCheck(_:_:expecting:)(v154, v6, v157, v156, 0);
            swift_bridgeObjectRelease(v6);
            swift_bridgeObjectRelease(v158);
            if ((v167 & 1) != 0)
              return 465.0;
            v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraExtraLarge);
            v6 = v169;
            v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
            v136 = v170;
            if (v168 == v171 && v6 == v170)
            {
              v148 = 0xE00000000000;
              goto LABEL_136;
            }
            v163 = (_stringCompareWithSmolCheck(_:_:expecting:)(v168, v6, v171, v170, 0) & 1) == 0;
            v164 = 480.0;
            v165 = 0xE00000000000;
            goto LABEL_148;
          }
          v36 = 0x407B000000000000;
        }
LABEL_120:
        v20 = *(double *)&v36;
        v136 = v6;
LABEL_121:
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v136);
        return v20;
      }
      return 1000.0;
    }
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
    v6 = v30;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    if (v29 == v31 && v6 == v32)
    {
      v36 = 0x4073B00000000000;
      goto LABEL_120;
    }
    v34 = v32;
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v6, v31, v32, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v34);
    if ((v35 & 1) != 0)
    {
      v28 = 0xB00000000000;
      goto LABEL_32;
    }
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
    v6 = v61;
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    if (v60 == v62 && v6 == v63)
    {
      v36 = 0x4074100000000000;
      goto LABEL_120;
    }
    v65 = v63;
    v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v6, v62, v63, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v65);
    if ((v66 & 1) != 0)
    {
      v52 = 0x100000000000;
      goto LABEL_106;
    }
    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
    v6 = v83;
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v86 = v84;
    if (v82 == v85 && v6 == v84)
    {
      v36 = 0x4074500000000000;
      goto LABEL_120;
    }
    v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v6, v85, v84, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v86);
    if ((v90 & 1) != 0)
    {
      v52 = 0x500000000000;
      goto LABEL_106;
    }
    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
    v6 = v107;
    v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v110 = v108;
    if (v106 == v109 && v6 == v108)
    {
      v36 = 0x4074B00000000000;
      goto LABEL_120;
    }
    v114 = _stringCompareWithSmolCheck(_:_:expecting:)(v106, v6, v109, v108, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v110);
    if ((v114 & 1) != 0)
    {
      v52 = 0xB00000000000;
      goto LABEL_106;
    }
    v131 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
    v6 = v132;
    v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v135 = v133;
    if (v131 == v134 && v6 == v133)
    {
      v125 = 0x500000000000;
      goto LABEL_119;
    }
    v143 = _stringCompareWithSmolCheck(_:_:expecting:)(v131, v6, v134, v133, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v135);
    if ((v143 & 1) != 0)
    {
      v141 = 0x500000000000;
      goto LABEL_132;
    }
    v159 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
    v6 = v160;
    v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v136 = v161;
    if (v159 == v162 && v6 == v161)
    {
      v153 = 0x200000000000;
      goto LABEL_146;
    }
    v163 = (_stringCompareWithSmolCheck(_:_:expecting:)(v159, v6, v162, v161, 0) & 1) == 0;
    v164 = 367.0;
    v166 = 354.0;
LABEL_153:
    if (v163)
      v20 = v164;
    else
      v20 = v166;
    goto LABEL_121;
  }
  if (a1 == 2)
  {
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
    v6 = v22;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    if (v21 == v23 && v6 == v24)
    {
      v36 = 0x4073D00000000000;
      goto LABEL_120;
    }
    v26 = v24;
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v6, v23, v24, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v26);
    if ((v27 & 1) != 0)
    {
      v28 = 0xD00000000000;
LABEL_32:
      *(_QWORD *)&v20 = v28 & 0xFFFFFFFFFFFFLL | 0x4073000000000000;
      return v20;
    }
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
    v6 = v46;
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    if (v45 == v47 && v6 == v48)
    {
      v36 = 0x4074200000000000;
      goto LABEL_120;
    }
    v50 = v48;
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v6, v47, v48, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v50);
    if ((v51 & 1) != 0)
    {
      v52 = 0x200000000000;
LABEL_106:
      *(_QWORD *)&v20 = v52 & 0xFFFFFFFFFFFFLL | 0x4074000000000000;
      return v20;
    }
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
    v6 = v73;
    v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v76 = v74;
    if (v72 == v75 && v6 == v74)
    {
      v36 = 0x4074700000000000;
      goto LABEL_120;
    }
    v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v6, v75, v74, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v76);
    if ((v88 & 1) != 0)
    {
      v52 = 0x700000000000;
      goto LABEL_106;
    }
    v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
    v6 = v97;
    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v100 = v98;
    if (v96 == v99 && v6 == v98)
    {
      v36 = 0x4074D00000000000;
      goto LABEL_120;
    }
    v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v96, v6, v99, v98, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v100);
    if ((v112 & 1) != 0)
    {
      v52 = 0xD00000000000;
      goto LABEL_106;
    }
    v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
    v6 = v121;
    v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v124 = v122;
    if (v120 == v123 && v6 == v122)
    {
      v125 = 0x600000000000;
LABEL_119:
      v36 = v125 & 0xFFFFFFFFFFFFLL | 0x4075000000000000;
      goto LABEL_120;
    }
    v140 = _stringCompareWithSmolCheck(_:_:expecting:)(v120, v6, v123, v122, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v124);
    if ((v140 & 1) != 0)
    {
      v141 = 0x600000000000;
LABEL_132:
      *(_QWORD *)&v20 = v141 & 0xFFFFFFFFFFFFLL | 0x4075000000000000;
      return v20;
    }
    v149 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
    v6 = v150;
    v152 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v136 = v151;
    if (v149 == v152 && v6 == v151)
    {
      v153 = 0x400000000000;
LABEL_146:
      *(_QWORD *)&v20 = v153 & 0xFFFFFFFFFFFFLL | 0x4076000000000000;
      goto LABEL_121;
    }
    v163 = (_stringCompareWithSmolCheck(_:_:expecting:)(v149, v6, v152, v151, 0) & 1) == 0;
    v164 = 369.0;
    v166 = 356.0;
    goto LABEL_153;
  }
  if (a1 != 1)
    return 1000.0;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  if (v4 == v7 && v6 == v8)
  {
    v36 = 0x407AC00000000000;
    goto LABEL_120;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) == 0)
  {
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
    v6 = v38;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    if (v37 != v39 || v6 != v40)
    {
      v42 = v40;
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v6, v39, v40, 0);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v42);
      if ((v43 & 1) != 0)
      {
        v44 = 0x100000000000;
LABEL_43:
        *(_QWORD *)&v20 = v44 & 0xFFFFFFFFFFFFLL | 0x407B000000000000;
        return v20;
      }
      v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
      v6 = v68;
      v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v71 = v69;
      if (v67 == v70 && v6 == v69)
      {
        v36 = 0x407B600000000000;
        goto LABEL_120;
      }
      v87 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v6, v70, v69, 0);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v71);
      if ((v87 & 1) != 0)
      {
        v44 = 0x600000000000;
        goto LABEL_43;
      }
      v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryLarge);
      v6 = v92;
      v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v95 = v93;
      if (v91 == v94 && v6 == v93)
      {
        v36 = 0x407BC00000000000;
        goto LABEL_120;
      }
      v111 = _stringCompareWithSmolCheck(_:_:expecting:)(v91, v6, v94, v93, 0);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v95);
      if ((v111 & 1) != 0)
      {
        v44 = 0xC00000000000;
        goto LABEL_43;
      }
      v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraLarge);
      v6 = v116;
      v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v119 = v117;
      if (v115 == v118 && v6 == v117)
      {
        v36 = 0x407C500000000000;
        goto LABEL_120;
      }
      v138 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v6, v118, v117, 0);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v119);
      if ((v138 & 1) != 0)
      {
        v139 = 0x500000000000;
LABEL_129:
        *(_QWORD *)&v20 = v139 & 0xFFFFFFFFFFFFLL | 0x407C000000000000;
        return v20;
      }
      v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraExtraLarge);
      v6 = v145;
      v147 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v136 = v146;
      if (v144 == v147 && v6 == v146)
      {
        v148 = 0x300000000000;
LABEL_136:
        *(_QWORD *)&v20 = v148 & 0xFFFFFFFFFFFFLL | 0x407D000000000000;
        goto LABEL_121;
      }
      v163 = (_stringCompareWithSmolCheck(_:_:expecting:)(v144, v6, v147, v146, 0) & 1) == 0;
      v164 = 480.0;
      v165 = 0x300000000000;
LABEL_148:
      *(_QWORD *)&v166 = v165 & 0xFFFFFFFFFFFFLL | 0x407D000000000000;
      goto LABEL_153;
    }
    v36 = 0x407B100000000000;
    goto LABEL_120;
  }
  v12 = 0xC00000000000;
LABEL_18:
  *(_QWORD *)&v20 = v12 & 0xFFFFFFFFFFFFLL | 0x407A000000000000;
  return v20;
}

double sub_100244824(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  _QWORD v18[2];

  v6 = sub_10004CFD4(&qword_1009D1BF0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "preferredContentSizeCategory");
  v11 = objc_msgSend(a1, "legibilityWeight");
  v12 = objc_msgSend(a1, "horizontalSizeClass");
  if (objc_msgSend(a1, "verticalSizeClass") != (id)1)
  {
    v13 = sub_100243BF8((uint64_t)v12, (uint64_t)v11, (uint64_t)v10);
    goto LABEL_7;
  }
  v13 = sub_100243634((uint64_t)v11, (uint64_t)v10);
  if (!a3)
  {
LABEL_7:

    return v13;
  }
  v18[0] = a2;
  v18[1] = a3;
  Regex.init(_regexString:version:)(795376175, 0xE400000000000000, 1, &type metadata for Substring);
  v14 = sub_100048F7C();
  v15 = sub_1002465B8();
  v16 = BidirectionalCollection<>.starts<A>(with:)(v9, &type metadata for String, v6, v14, v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v16 & 1) != 0)
    return v13 + 15.0;
  return v13;
}

uint64_t sub_1002449BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v1 = v0;
  *(_BYTE *)(v0 + qword_1009D46C0) = 1;
  v2 = qword_1009D46B8;
  v3 = *(void (**)(uint64_t))(v0 + qword_1009D46B8);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + qword_1009D46B8 + 8);
    v5 = swift_retain(v4);
    v3(v5);
    sub_10002AD00((uint64_t)v3, v4);
    v2 = qword_1009D46B8;
    v6 = *(_QWORD *)(v1 + qword_1009D46B8);
  }
  else
  {
    v6 = 0;
  }
  v7 = (_QWORD *)(v1 + v2);
  v8 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  result = sub_10002AD00(v6, v8);
  *(_BYTE *)(v1 + qword_1009D46C0) = 0;
  return result;
}

unint64_t sub_100244A50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4760[0];
  if (!qword_1009D4760[0])
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, qword_1009D4760);
  }
  return result;
}

uint64_t type metadata accessor for HalfSheet(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for HalfSheet);
}

uint64_t sub_100244AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_100244AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[6];

  v2 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 24));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(v2 - 8) + 64;
    v5 = type metadata accessor for Binding(255, v2);
    v6 = type metadata accessor for Optional(319, v5);
    v3 = v6;
    if (v7 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(v6 - 8) + 64;
      v9[2] = &unk_1007143E8;
      v9[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v9[4] = &unk_100714400;
      v9[5] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 6, v9, a1 + 48);
      return 0;
    }
  }
  return v3;
}

uint64_t *sub_100244B80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v36;
  unsigned int (*v37)(uint64_t *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(_DWORD *)(v6 + 80);
  v10 = ~(v9 | 7);
  v11 = ((v9 + 16) & ~v9) + v8;
  if (v9 <= 7
    && (*(_DWORD *)(v6 + 80) & 0x100000) == 0
    && ((((v11 + (((v9 | 7) + v8) & ~(v9 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x18)
  {
    v37 = *(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48);
    if (v37(a2, 1, *(_QWORD *)(a3 + 24)))
    {
      memcpy(v4, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(v4, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    }
    v15 = ~v9;
    v16 = ((unint64_t)v4 + v8 + 7) & v10;
    v17 = ((unint64_t)a2 + v8 + 7) & v10;
    v18 = (uint64_t *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (v7 >= 0x80000001)
    {
      v36 = (_QWORD *)v16;
      v19 = v9 + 8;
      v20 = (uint64_t *)(((unint64_t)v18 + v9 + 8) & v15);
      v21 = v7;
      v22 = v15;
      if (v37(v20, v21, v5) <= 1)
      {
        v15 = v22;
        goto LABEL_21;
      }
      v16 = (uint64_t)v36;
    }
    else if ((unint64_t)*v18 >= 0xFFFFFFFF)
    {
      v36 = (_QWORD *)v16;
      v19 = v9 + 8;
      v20 = (uint64_t *)(((unint64_t)v18 + v9 + 8) & v15);
LABEL_21:
      v23 = *(_QWORD *)v17;
      *v36 = *(_QWORD *)v17;
      v24 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
      v25 = *v18;
      *v24 = v25;
      v26 = (void *)(((unint64_t)v24 + v19) & v15);
      swift_retain(v23);
      swift_retain(v25);
      if (v37(v20, 1, v5))
      {
        memcpy(v26, v20, v8);
      }
      else
      {
        (*(void (**)(void *, uint64_t *, uint64_t))(v6 + 16))(v26, v20, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v26, 0, 1, v5);
      }
      v16 = (uint64_t)v36;
      goto LABEL_27;
    }
    memcpy((void *)v16, (const void *)v17, v11);
LABEL_27:
    v27 = (_QWORD *)(((v16 | 7) + v11) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((v17 | 7) + v11) & 0xFFFFFFFFFFFFFFF8);
    *v27 = *v28;
    v29 = v28[1];
    v27[1] = v29;
    v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = *(_QWORD *)v31;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
    v33 = (_QWORD *)(((unint64_t)v27 + 39) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8);
    v14 = v34[1];
    *v33 = *v34;
    v33[1] = v14;
    swift_bridgeObjectRetain(v29);
    swift_retain(v32);
    goto LABEL_28;
  }
  v14 = *a2;
  *a1 = *a2;
  v4 = (uint64_t *)(v14 + ((v9 + 16) & v10));
LABEL_28:
  swift_retain(v14);
  return v4;
}

uint64_t sub_100244E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v5(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v6 = *(_DWORD *)(v4 + 84);
  if (v6)
    v7 = *(_QWORD *)(v4 + 64);
  else
    v7 = *(_QWORD *)(v4 + 64) + 1;
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = (_QWORD *)((v7 + a1 + (v8 | 7)) & ~(v8 | 7));
  v10 = ~v8;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v6 >= 0x80000001)
  {
    v12 = ((unint64_t)v11 + v8 + 8) & v10;
    if (((unsigned int (*)(uint64_t))v5)(v12) > 1)
      goto LABEL_12;
  }
  else
  {
    if (*v11 < 0xFFFFFFFFuLL)
      goto LABEL_12;
    v12 = ((unint64_t)v11 + v8 + 8) & v10;
  }
  swift_release(*v9);
  swift_release(*v11);
  if (!v5(v12, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
LABEL_12:
  v13 = ((unint64_t)v9 + v7 + ((v8 + 16) & v10) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8));
  swift_release(*(_QWORD *)((v13 + 23) & 0xFFFFFFFFFFFFF8));
  return swift_release(*(_QWORD *)(((v13 + 39) & 0xFFFFFFFFFFFFF8) + 8));
}

void *sub_100244F90(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  size_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  void *v36;
  unsigned int (*v37)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v37(a2, 1, v5))
  {
    v7 = *(unsigned int *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if ((_DWORD)v7)
      v9 = *(_QWORD *)(v6 + 64);
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(unsigned int *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if ((_DWORD)v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = (v11 | 7) + v10;
  v13 = ((unint64_t)a1 + v12) & ~(v11 | 7);
  v14 = ((unint64_t)a2 + v12) & ~(v11 | 7);
  v15 = ~v11;
  v16 = (v11 + 16) & ~v11;
  v17 = (uint64_t *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v7 >= 0x80000001)
  {
    v35 = (v11 + 16) & ~v11;
    v36 = a1;
    v18 = v11 + 8;
    v19 = (const void *)(((unint64_t)v17 + v11 + 8) & v15);
    if (v37(v19, v7, v5) > 1)
    {
      v24 = v35 + v10;
      memcpy((void *)v13, (const void *)v14, v35 + v10);
      a1 = v36;
      goto LABEL_20;
    }
  }
  else
  {
    if ((unint64_t)*v17 < 0xFFFFFFFF)
    {
      v24 = v16 + v10;
      memcpy((void *)v13, (const void *)v14, v16 + v10);
      goto LABEL_20;
    }
    v35 = (v11 + 16) & ~v11;
    v36 = a1;
    v18 = v11 + 8;
    v19 = (const void *)(((unint64_t)v17 + v11 + 8) & v15);
  }
  v20 = *(_QWORD *)v14;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v21 = (_QWORD *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v17;
  *v21 = v22;
  v23 = (void *)(((unint64_t)v21 + v18) & v15);
  swift_retain(v20);
  swift_retain(v22);
  if (v37(v19, 1, v5))
  {
    memcpy(v23, v19, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v23, v19, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  a1 = v36;
  v24 = v10 + v35;
LABEL_20:
  v25 = (_QWORD *)(((v13 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((v14 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = v26[1];
  v25[1] = v27;
  v28 = ((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)v29;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  v31 = (_QWORD *)(((unint64_t)v25 + 39) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)(((unint64_t)v26 + 39) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain(v27);
  swift_retain(v30);
  swift_retain(v33);
  return a1;
}

void *sub_100245220(void *a1, const void *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  int v29;
  int v30;
  size_t v31;
  uint64_t v32;
  const void *v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  unint64_t v38;
  size_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  const void *v53;
  void *v54;
  uint64_t v55;
  size_t __n;
  uint64_t *__src;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void))(v6 + 48);
  v8 = ((uint64_t (*)(void *, uint64_t, uint64_t))v7)(a1, 1, v5);
  v9 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v7)(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v4, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 24))(v4, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(v4, a2, v10);
LABEL_10:
  v11 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v11)
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = *(_QWORD *)(v6 + 64) + 1;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (v13 | 7) + v12;
  v15 = ((unint64_t)v4 + v14) & ~(v13 | 7);
  v16 = ((unint64_t)a2 + v14) & ~(v13 | 7);
  v17 = ~v13;
  v18 = (_QWORD *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  __n = v12;
  __src = (uint64_t *)v16;
  v55 = (v13 + 16) & ~v13;
  if (v11 >= 0x80000001)
  {
    v54 = v4;
    v21 = v13 + 8;
    v22 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v7)(((unint64_t)v18 + v13 + 8) & v17, v11, v5);
    v19 = (unint64_t *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v53 = (const void *)(((unint64_t)v19 + v21) & v17);
    v23 = v7();
    if (v22 < 2)
    {
      if (v23 <= 1)
      {
LABEL_19:
        v24 = *(_QWORD *)v15;
        v25 = *__src;
        *(_QWORD *)v15 = *__src;
        swift_retain(v25);
        swift_release(v24);
        v26 = *v19;
        v27 = *v18;
        *v18 = *v19;
        swift_retain(v26);
        swift_release(v27);
        v28 = (void *)(((unint64_t)v18 + v21) & v17);
        v29 = ((uint64_t (*)(void *, uint64_t, uint64_t))v7)(v28, 1, v5);
        v30 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v7)(v53, 1, v5);
        if (v29)
        {
          v32 = v55;
          v31 = __n;
          if (!v30)
          {
            (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v28, v53, v5);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v28, 0, 1, v5);
LABEL_36:
            v4 = v54;
            v38 = (unint64_t)__src;
            goto LABEL_39;
          }
        }
        else
        {
          v32 = v55;
          v31 = __n;
          if (!v30)
          {
            (*(void (**)(void *, const void *, uint64_t))(v6 + 24))(v28, v53, v5);
            goto LABEL_36;
          }
          (*(void (**)(void *, uint64_t))(v6 + 8))(v28, v5);
        }
        memcpy(v28, v53, v31);
        goto LABEL_36;
      }
      v4 = v54;
      goto LABEL_30;
    }
    v4 = v54;
    if (v23 <= 1)
    {
      v33 = (const void *)(((unint64_t)v19 + v21) & v17);
      goto LABEL_26;
    }
LABEL_32:
    v32 = v55;
    v31 = __n;
    v38 = (unint64_t)__src;
    memcpy((void *)v15, __src, v55 + __n);
    goto LABEL_39;
  }
  v19 = (unint64_t *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v19;
  if (*v18 > 0xFFFFFFFEuLL)
  {
    v21 = v13 + 8;
    if (v20 >= 0xFFFFFFFF)
    {
      v53 = (const void *)(((unint64_t)v19 + v21) & v17);
      v54 = v4;
      goto LABEL_19;
    }
LABEL_30:
    swift_release(*(_QWORD *)v15);
    swift_release(*v18);
    if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v7)(((unint64_t)v18 + v21) & v17, 1, v5))(*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v18 + v21) & v17, v5);
    goto LABEL_32;
  }
  if (v20 < 0xFFFFFFFF)
    goto LABEL_32;
  v54 = v4;
  v21 = v13 + 8;
  v33 = (const void *)(((unint64_t)v19 + v13 + 8) & v17);
LABEL_26:
  v34 = *__src;
  *(_QWORD *)v15 = *__src;
  v35 = *v19;
  *v18 = *v19;
  v36 = (void *)(((unint64_t)v18 + v21) & v17);
  swift_retain(v34);
  swift_retain(v35);
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v7)(v33, 1, v5))
  {
    v37 = v36;
    v31 = __n;
    memcpy(v37, v33, __n);
    v4 = v54;
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v36, v33, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v36, 0, 1, v5);
    v4 = v54;
    v31 = __n;
  }
  v38 = (unint64_t)__src;
  v32 = v55;
LABEL_39:
  v39 = v31 + v32;
  v40 = (_QWORD *)(((v15 | 7) + v31 + v32) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((v38 | 7) + v39) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v41;
  v42 = v41[1];
  v43 = v40[1];
  v40[1] = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  v44 = ((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v46 = *(_QWORD *)v45;
  v47 = *(_QWORD *)v44;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  swift_retain(v46);
  swift_release(v47);
  *(_BYTE *)(v44 + 8) = *(_BYTE *)(v45 + 8);
  v48 = (_QWORD *)(((unint64_t)v40 + 39) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)v41 + 39) & 0xFFFFFFFFFFFFFFF8);
  v50 = v49[1];
  v51 = v48[1];
  *v48 = *v49;
  v48[1] = v50;
  swift_retain(v50);
  swift_release(v51);
  return v4;
}

void *sub_100245698(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  const void *v19;
  _QWORD *v20;
  void *v21;
  size_t v22;
  _OWORD *v23;
  _OWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  void *v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v30(a2, 1, v5))
  {
    v7 = *(unsigned int *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if ((_DWORD)v7)
      v9 = *(_QWORD *)(v6 + 64);
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(unsigned int *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if ((_DWORD)v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = (v11 | 7) + v10;
  v13 = ((unint64_t)a1 + v12) & ~(v11 | 7);
  v14 = ((unint64_t)a2 + v12) & ~(v11 | 7);
  v15 = ~v11;
  v16 = (v11 + 16) & ~v11;
  v17 = (_QWORD *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v7 >= 0x80000001)
  {
    v28 = (v11 + 16) & ~v11;
    v29 = a1;
    v18 = v11 + 8;
    v19 = (const void *)(((unint64_t)v17 + v11 + 8) & v15);
    if (v30(v19, v7, v5) > 1)
    {
      v22 = v28 + v10;
      memcpy((void *)v13, (const void *)v14, v28 + v10);
      a1 = v29;
      goto LABEL_20;
    }
  }
  else
  {
    if (*v17 < 0xFFFFFFFFuLL)
    {
      v22 = v16 + v10;
      memcpy((void *)v13, (const void *)v14, v16 + v10);
      goto LABEL_20;
    }
    v28 = (v11 + 16) & ~v11;
    v29 = a1;
    v18 = v11 + 8;
    v19 = (const void *)(((unint64_t)v17 + v11 + 8) & v15);
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v20 = (_QWORD *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v17;
  v21 = (void *)(((unint64_t)v20 + v18) & v15);
  if (v30(v19, 1, v5))
  {
    memcpy(v21, v19, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v21, v19, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
  }
  a1 = v29;
  v22 = v10 + v28;
LABEL_20:
  v23 = (_OWORD *)(((v13 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_OWORD *)(((v14 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_OWORD *)(((unint64_t)v23 + 39) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v24 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_100245900(void *a1, void *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  void *v30;
  size_t v31;
  size_t v32;
  unint64_t v33;
  unint64_t v34;
  size_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v45;
  uint64_t v46;
  size_t __n;
  _QWORD *__src;
  _QWORD *__dst;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v4, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v4, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(v4, a2, v10);
LABEL_10:
  v11 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v11)
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = *(_QWORD *)(v6 + 64) + 1;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (v13 | 7) + v12;
  v15 = ((unint64_t)a2 + v14) & ~(v13 | 7);
  v16 = ~v13;
  v17 = (_QWORD *)(((((unint64_t)v4 + v14) & ~(v13 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8);
  __n = v12;
  __src = (_QWORD *)v15;
  __dst = (_QWORD *)(((unint64_t)v4 + v14) & ~(v13 | 7));
  v46 = (v13 + 16) & ~v13;
  if (v11 < 0x80000001)
  {
    v18 = (unint64_t *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    v19 = *v18;
    if (*v17 > 0xFFFFFFFEuLL)
    {
      v20 = v13 + 8;
      if (v19 >= 0xFFFFFFFF)
      {
        v45 = v4;
        v21 = (void *)(((unint64_t)v18 + v20) & v16);
        goto LABEL_19;
      }
LABEL_30:
      v33 = (unint64_t)__dst;
      swift_release(*__dst);
      swift_release(*v17);
      if (!v7((void *)(((unint64_t)v17 + v20) & v16), 1, v5))
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v17 + v20) & v16, v5);
      v29 = v46;
      v31 = __n;
      v32 = v46 + __n;
      goto LABEL_33;
    }
    if (v19 >= 0xFFFFFFFF)
    {
      v20 = v13 + 8;
      v21 = (void *)(((unint64_t)v18 + v13 + 8) & v16);
      goto LABEL_25;
    }
LABEL_27:
    v29 = v46;
    v31 = __n;
    v32 = v46 + __n;
    v33 = (unint64_t)__dst;
LABEL_33:
    v34 = (unint64_t)__src;
    memcpy((void *)v33, __src, v32);
    goto LABEL_42;
  }
  v45 = v4;
  v20 = v13 + 8;
  v22 = v7((void *)(((unint64_t)v17 + v13 + 8) & v16), v11, v5);
  v18 = (unint64_t *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (void *)(((unint64_t)v18 + v20) & v16);
  v23 = v7(v21, v11, v5);
  if (v22 < 2)
  {
    if (v23 <= 1)
    {
LABEL_19:
      v24 = *__dst;
      *__dst = *__src;
      swift_release(v24);
      v25 = *v17;
      *v17 = *v18;
      swift_release(v25);
      v26 = (void *)(((unint64_t)v17 + v20) & v16);
      v27 = v7(v26, 1, v5);
      v28 = v7(v21, 1, v5);
      if (v27)
      {
        v29 = v46;
        if (!v28)
        {
          (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v26, v21, v5);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v26, 0, 1, v5);
LABEL_40:
          v4 = v45;
          v31 = __n;
          goto LABEL_41;
        }
      }
      else
      {
        v29 = v46;
        if (!v28)
        {
          (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v26, v21, v5);
          goto LABEL_40;
        }
        (*(void (**)(void *, uint64_t))(v6 + 8))(v26, v5);
      }
      v31 = __n;
      memcpy(v26, v21, __n);
      v4 = v45;
LABEL_41:
      v34 = (unint64_t)__src;
      v33 = (unint64_t)__dst;
      goto LABEL_42;
    }
    v4 = v45;
    goto LABEL_30;
  }
  v4 = v45;
  if (v23 > 1)
    goto LABEL_27;
LABEL_25:
  *__dst = *__src;
  *v17 = *v18;
  if (v7(v21, 1, v5))
  {
    v30 = (void *)(((unint64_t)v17 + v20) & v16);
    v31 = __n;
    memcpy(v30, v21, __n);
  }
  else
  {
    (*(void (**)(unint64_t, void *, uint64_t))(v6 + 32))(((unint64_t)v17 + v20) & v16, v21, v5);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)v17 + v20) & v16, 0, 1, v5);
    v31 = __n;
  }
  v34 = (unint64_t)__src;
  v33 = (unint64_t)__dst;
  v29 = v46;
LABEL_42:
  v35 = v31 + v29;
  v36 = (_QWORD *)(((v33 | 7) + v31 + v29) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((v34 | 7) + v35) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  v38 = v36[1];
  v36[1] = v37[1];
  swift_bridgeObjectRelease(v38);
  v39 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)v39;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  swift_release(v41);
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  v42 = ((unint64_t)v36 + 39) & 0xFFFFFFFFFFFFFFF8;
  v43 = *(_QWORD *)(v42 + 8);
  *(_OWORD *)v42 = *(_OWORD *)(((unint64_t)v37 + 39) & 0xFFFFFFFFFFFFF8);
  swift_release(v43);
  return v4;
}

uint64_t sub_100245D54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v25;
  unsigned int v26;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  v8 = v7 - 1;
  if (v7 - 1 <= v6)
    v9 = v6;
  else
    v9 = v7 - 1;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  if (v5)
    v11 = *(_QWORD *)(v4 + 64);
  else
    v11 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = v12 | 7;
  v14 = (v12 | 7) + v11;
  v15 = ((v12 + 16) & ~v12) + v11;
  if (v10 < a2)
  {
    if (((((((v15 + (v14 & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v10 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X5 }
  }
  if (v6 == v10)
  {
    if (v5 < 2)
      return 0;
    v24 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v24 >= 2)
      return v24 - 1;
    else
      return 0;
  }
  else
  {
    v20 = (v14 + a1) & ~v13;
    if (v8 == v10)
    {
      v21 = (unint64_t *)((v20 + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v6 & 0x80000000) != 0)
      {
        v26 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v21 + v12 + 8) & ~v12);
        v23 = v26 - 1;
        if (v26 < 2)
          v23 = 0;
      }
      else
      {
        v22 = *v21;
        if (v22 >= 0xFFFFFFFF)
          LODWORD(v22) = -1;
        v23 = v22 + 1;
      }
      if (v23 >= 2)
        return v23 - 1;
      else
        return 0;
    }
    else
    {
      v25 = *(_QWORD *)(((((v20 | 7) + v15) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8);
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
      return (v25 + 1);
    }
  }
}

void sub_100245F44(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  if (v10 - 1 <= v9)
    v11 = v9;
  else
    v11 = v10 - 1;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v13;
  if (v12 < a3)
  {
    v14 = a3 - v12;
    if (((((((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80))
           + (_DWORD)v13
           + (((*(unsigned __int8 *)(v7 + 80) | 7) + (_DWORD)v13) & ~(*(unsigned __int8 *)(v7 + 80) | 7))
           + 7) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v15 = v14 + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v6 = v16;
    else
      v6 = 0;
  }
  if (a2 > v12)
  {
    if (((((((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80))
           + (_DWORD)v13
           + (((*(unsigned __int8 *)(v7 + 80) | 7) + (_DWORD)v13) & ~(*(unsigned __int8 *)(v7 + 80) | 7))
           + 7) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v17 = ~v12 + a2;
      bzero(a1, ((((((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ v13+ (((*(unsigned __int8 *)(v7 + 80) | 7) + v13) & ~(*(unsigned __int8 *)(v7 + 80) | 7))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 39) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X6 }
}

uint64_t sub_100246080@<X0>(uint64_t result@<X0>, unsigned int a2@<W1>, size_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  size_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;

  v20[v21] = 0;
  if (a2)
  {
    if (v13 == v17)
    {
      v22 = a2 + 1;
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 56))(v20, v22);
    }
    v23 = (unint64_t)&v20[v19] & result;
    if (v18 == v17)
    {
      v24 = a2 + 1;
      if (a2 + 1 <= v15)
      {
        if (a2 != -1)
        {
          v28 = (_QWORD *)((v23 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v13 & 0x80000000) != 0)
          {
            v20 = (_BYTE *)(((unint64_t)v28 + v16 + 8) & v12);
            if (v24 <= v13)
            {
              v22 = a2 + 2;
              return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 56))(v20, v22);
            }
            if ((_DWORD)a3)
            {
              if (a3 <= 3)
                v30 = a3;
              else
                v30 = 4;
              bzero(v20, a3);
              __asm { BR              X10 }
            }
          }
          else
          {
            if ((v24 & 0x80000000) != 0)
              v29 = a2 - 0x7FFFFFFF;
            else
              v29 = a2;
            *v28 = v29;
          }
        }
      }
      else if ((_DWORD)v11)
      {
        if (v11 <= 3)
          v25 = v11;
        else
          v25 = 4;
        bzero((void *)v23, v11);
        __asm { BR              X10 }
      }
    }
    else
    {
      v26 = (_QWORD *)(((((v23 | 7) + v11) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
        v27 = a2 ^ 0x80000000;
      else
        v27 = a2 - 1;
      *v26 = v27;
    }
  }
  return result;
}

uint64_t sub_100246250(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1007144D8, a1);
}

uint64_t sub_100246260()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 16);
  v18 = *(_OWORD *)(v0 + 24);
  v15 = v18;
  v19 = v1;
  v2 = (int *)type metadata accessor for HalfSheet(0, (uint64_t)&v17);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 48) & ~v4;
  v16 = *(_QWORD *)(v3 + 64);
  v6 = v0 + v5;
  v7 = *(_QWORD *)(v15 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v0 + v5, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v5, v15);
  v9 = (_QWORD *)(v6 + v2[13]);
  v10 = type metadata accessor for Optional(255, v15);
  v11 = type metadata accessor for Binding(0, v10);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11))
  {
    swift_release(*v9);
    v12 = swift_release(v9[1]);
    v13 = (char *)v9 + *(int *)(v11 + 32);
    if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v8)(v13, 1, v15, v12))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v15);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v2[14] + 8));
  swift_release(*(_QWORD *)(v6 + v2[15]));
  swift_release(*(_QWORD *)(v6 + v2[17] + 8));
  return swift_deallocObject(v0, v5 + v16, v4 | 7);
}

uint64_t sub_1002463E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v7[0] = v0[2];
  v1 = v7[0];
  v7[1] = v2;
  v7[2] = v3;
  v7[3] = v4;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HalfSheet(0, (uint64_t)v7) - 8) + 80);
  return sub_100242858((uint64_t)v0 + ((v5 + 48) & ~v5), v1, v2, v3, v4);
}

uint64_t sub_100246450()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100246474()
{
  uint64_t v0;

  sub_1002433EC(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100246480()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100246490()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002464B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(type metadata accessor for Optional(0, v1) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 48));
  v6 = *(_QWORD *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v4, 1, v1))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_10024654C(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[2];
  v4 = v1[3];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Optional(0, v4) - 8) + 80);
  return sub_100242690(a1, v1[6], (uint64_t)v1 + ((v5 + 56) & ~v5), v3, v4);
}

unint64_t sub_1002465B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D1C00;
  if (!qword_1009D1C00)
  {
    v1 = sub_100030B74(&qword_1009D1BF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Regex<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D1C00);
  }
  return result;
}

uint64_t sub_100246604()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D4870);
  sub_100048F64(v0, (uint64_t)qword_1009D4870);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000026, 0x8000000100714600);
}

uint64_t AudiobookNowPlayingTouchViewController.assetViewControllerDelegate.getter()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  v2 = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    swift_retain(v3);
    swift_unknownObjectRelease(v2);
    v2 = swift_unknownObjectWeakLoadStrong(v3 + 24);
    swift_release(v3);
  }
  return v2;
}

uint64_t AudiobookNowPlayingTouchViewController.assetViewControllerDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    swift_retain(v5);
    swift_unknownObjectRelease(v4);
    swift_unknownObjectWeakAssign(v5 + 24, a1);
    swift_release(v5);
  }
  return swift_unknownObjectRelease(a1);
}

uint64_t (*AudiobookNowPlayingTouchViewController.assetViewControllerDelegate.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler);
  v4 = OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate;
  a1[1] = v3;
  a1[2] = v4;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + v4);
  v6 = Strong;
  if (Strong)
  {
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    swift_retain(v7);
    swift_unknownObjectRelease(v6);
    v6 = swift_unknownObjectWeakLoadStrong(v7 + 24);
    swift_release(v7);
  }
  *a1 = v6;
  return sub_100246954;
}

uint64_t sub_100246954(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  Strong = swift_unknownObjectWeakLoadStrong(a1[1] + a1[2]);
  v5 = Strong;
  if ((a2 & 1) != 0)
  {
    if (Strong)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
      swift_unknownObjectRetain(v3);
      swift_retain(v6);
      swift_unknownObjectRelease(v5);
      swift_unknownObjectWeakAssign(v6 + 24, v3);
      swift_unknownObjectRelease(v3);
LABEL_6:
      swift_release(v6);
    }
  }
  else if (Strong)
  {
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    swift_retain(v6);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectWeakAssign(v6 + 24, v3);
    goto LABEL_6;
  }
  return swift_unknownObjectRelease(v3);
}

uint64_t AudiobookNowPlayingTouchViewController.contentOpenAnimator.getter()
{
  return sub_100246D24(&OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator);
}

uint64_t AudiobookNowPlayingTouchViewController.contentOpenAnimator.setter(uint64_t a1)
{
  return sub_100246DE0(a1, &OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator);
}

uint64_t (*AudiobookNowPlayingTouchViewController.contentOpenAnimator.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_100246CD4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(a1 + *a3);
  swift_beginAccess(v3, v5, 0, 0);
  return (id)swift_unknownObjectRetain(*v3);
}

uint64_t AudiobookNowPlayingTouchViewController.bookPositionProcessor.getter()
{
  return sub_100246D24(&OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_bookPositionProcessor);
}

uint64_t sub_100246D24(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  return swift_unknownObjectRetain(*v2);
}

uint64_t sub_100246D74(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *v5;
  *v5 = a3;
  swift_unknownObjectRetain(a3);
  return swift_unknownObjectRelease(v6);
}

uint64_t AudiobookNowPlayingTouchViewController.bookPositionProcessor.setter(uint64_t a1)
{
  return sub_100246DE0(a1, &OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_bookPositionProcessor);
}

uint64_t sub_100246DE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  return swift_unknownObjectRelease(v5);
}

uint64_t (*AudiobookNowPlayingTouchViewController.bookPositionProcessor.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_bookPositionProcessor, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100246E70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x240))();
  v2 = v1;
  if (!((unint64_t)v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v1);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    v10 = *(_QWORD *)((char *)v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cachedPointerInteractionViews);
    *(_QWORD *)((char *)v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cachedPointerInteractionViews) = v2;
    return swift_bridgeObjectRelease(v10);
  }
  if (v1 < 0)
    v9 = v1;
  else
    v9 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  v3 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v0);
      objc_msgSend(v7, "addInteraction:", v8);

    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id AudiobookNowPlayingTouchViewController.__deallocating_deinit()
{
  _QWORD *v0;
  objc_super v2;

  (*(void (**)(void))((swift_isaMask & *v0) + 0x1E0))();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudiobookNowPlayingTouchViewController()
{
  return objc_opt_self(BKAudiobookNowPlayingTouchViewController);
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  objc_msgSendSuper2(&v2, "viewDidLoad");
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "onAppWillEnterForeground:", UIApplicationWillEnterForegroundNotification, 0);
  sub_100247220(*(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel]);

}

double sub_100247220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  double result;
  id v27[3];

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D4D70);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D4AF0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__supplementalContents, v27, 33, 0);
  v15 = sub_10004CFD4(&qword_1009D1980);
  Published.projectedValue.getter(v15);
  swift_endAccess(v27);
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v27[0] = (id)static OS_dispatch_queue.main.getter(v16);
  v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  v18 = sub_100030B34((unint64_t *)&unk_1009D4B00, (uint64_t *)&unk_1009D4D70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v19 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(v27, v6, v7, v16, v18, v19);
  sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v20 = swift_allocObject(&unk_1008F65B8, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v2);
  v21 = sub_100030B34((unint64_t *)&unk_1009D4B10, (uint64_t *)&unk_1009D4AF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v22 = Publisher<>.sink(receiveValue:)(sub_10024B6F8, v20, v11, v21);
  v23 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v23);
  v24 = v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cancellables;
  swift_beginAccess(v24, v27, 33, 0);
  AnyCancellable.store(in:)(v24);
  swift_endAccess(v27);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.viewDidLayoutSubviews()()
{
  char *v0;
  void **v1;
  double v2;
  void *v3;
  _BYTE v4[24];
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  objc_msgSendSuper2(&v5, "viewDidLayoutSubviews");
  v1 = (void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator];
  *(_QWORD *)&v2 = swift_beginAccess(&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator], v4, 1, 0).n128_u64[0];
  v3 = *v1;
  if (*v1)
  {
    objc_msgSend(v3, "bookContentDidLoad", v2);
    v3 = *v1;
  }
  *v1 = 0;
  swift_unknownObjectRelease(v3);
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  objc_msgSendSuper2(&v3, "viewWillAppear:", a1);
  objc_msgSend(v1, "setNeedsStatusBarAppearanceUpdate");
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  objc_msgSendSuper2(&v5, "viewDidAppear:", a1);
  v3 = objc_msgSend(v1, "ba_effectiveAnalyticsTracker");
  v4 = *(void **)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_recommendedTracker];
  *(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_recommendedTracker] = v3;

  sub_1002477B4();
}

void sub_1002477B4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  Class isa;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v1 = sub_1002492EC();
  v2 = v1;
  if (*(_QWORD *)(v1 + 16))
  {
    v3 = OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_amsEngagement;
    v4 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_amsEngagement];
    if (v4
      || (v5 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag"),
          v6 = objc_msgSend(objc_allocWithZone((Class)AMSEngagement), "initWithBag:", v5),
          v5,
          v7 = *(void **)&v0[v3],
          *(_QWORD *)&v0[v3] = v6,
          v7,
          (v4 = *(void **)&v0[v3]) != 0))
    {
      v23 = v4;
      v8 = v0;
      sub_10024AA70(v2, v23, (uint64_t)v8);

      v9 = objc_msgSend(v8, "bc_effectiveEngagementProvider");
      if (v9)
      {
        v10 = v9;
        sub_10024944C();
        isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v2);
        v12 = swift_allocObject(&unk_1008F65B8, 24, 7);
        swift_unknownObjectWeakInit(v12 + 16, v8);
        aBlock[4] = sub_10024B6B0;
        v25 = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100249A58;
        aBlock[3] = &unk_1008F6670;
        v13 = _Block_copy(aBlock);
        objc_msgSend(v10, "fetchDialogRequestsFor:completion:", isa, v13, swift_release(v25).n128_f64[0]);
        _Block_release(v13);

        swift_unknownObjectRelease(v10);
        return;
      }
      swift_bridgeObjectRelease(v2);
      if (qword_1009CDD18 != -1)
        swift_once(&qword_1009CDD18, sub_100246604);
      v14 = type metadata accessor for Logger(0);
      v15 = sub_100048F64(v14, (uint64_t)qword_1009D4870);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.error.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "No Engagement provider found", v18, 2u);
        swift_slowDealloc(v18, -1, -1);
      }

    }
    else
    {
      swift_bridgeObjectRelease(v2);
      if (qword_1009CDD18 != -1)
        swift_once(&qword_1009CDD18, sub_100246604);
      v19 = type metadata accessor for Logger(0);
      v20 = sub_100048F64(v19, (uint64_t)qword_1009D4870);
      v23 = Logger.logObject.getter(v20);
      v21 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v21, "AMSEngagement is nil.", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }
    }

  }
  else
  {
    swift_bridgeObjectRelease(v1);
  }
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  double v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  objc_msgSendSuper2(&v8, "viewWillDisappear:", a1);
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler]+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    swift_retain(v5);
    swift_unknownObjectRelease(v4);
    v6 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
    *(_QWORD *)&v7 = swift_release(v5).n128_u64[0];
    if (v6)
    {
      objc_msgSend(v6, "audiobookNowPlayingViewControllerWillDisappear:", v1, v7);
      swift_unknownObjectRelease(v6);
    }
  }
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.bc_analyticsForceEndSession()()
{
  uint64_t v0;

  dispatch thunk of AudiobookAnalyticsRecorder.forceEndPlaySession()(objc_msgSend(*(id *)(v0
                                                                                        + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "togglePlayPause"));
}

uint64_t sub_100247D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = dispatch thunk of AudiobookAnalyticsRecorder.forceEndPlaySession()(a1);
  result = dispatch thunk of AudiobookAnalyticsRecorder.trackerHost.getter(v2);
  if (result)
  {
    v4 = result;
    result = swift_unknownObjectRelease(result);
    if (v4 == v1)
      return dispatch thunk of AudiobookAnalyticsRecorder.trackerHost.setter(0);
  }
  return result;
}

id sub_100247E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  id result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_100714550);
  v7 = swift_getKeyPath(&unk_100714578);
  static Published.subscript.getter(&v11, v5, KeyPath, v7);
  swift_release(KeyPath);
  result = (id)swift_release(v7);
  v9 = v12;
  if (v12)
  {
    if (v11 == a1 && v12 == a2)
    {
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v11, v12, 0);
      result = (id)swift_bridgeObjectRelease(v9);
      if ((v10 & 1) == 0)
        return result;
    }
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "togglePlayPause");
  }
  return result;
}

id AudiobookNowPlayingTouchViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void AudiobookNowPlayingTouchViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.AudiobookNowPlayingTouchViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_1002481A0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

id sub_100248214()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookAsset(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

id AudiobookNowPlayingTouchViewController.asset.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  uint64_t v32;
  uint64_t v33;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_100714550);
  v13 = swift_getKeyPath(&unk_100714578);
  static Published.subscript.getter(&v32, v11, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v14 = v33;
  if (v33)
  {
    v15 = v32;
    URL.init(string:)(0x6F632E656C707061, 0xE90000000000006DLL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
      v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v17(v8, v10, v4);
      v18 = swift_getKeyPath(&unk_100714598);
      v30 = v15;
      v19 = v18;
      v20 = swift_getKeyPath(&unk_1007145C0);
      static Published.subscript.getter(&v32, v11, v19, v20);
      swift_release(v19);
      swift_release(v20);
      v21 = v32;
      v22 = v33;
      v23 = (objc_class *)type metadata accessor for AudiobookAsset(0);
      v24 = (char *)objc_allocWithZone(v23);
      v25 = &v24[OBJC_IVAR___BKAudiobookAsset_audiobookAssetID];
      *(_QWORD *)v25 = v30;
      *((_QWORD *)v25 + 1) = v14;
      v17(&v24[OBJC_IVAR___BKAudiobookAsset_audiobookURL], v8, v4);
      v26 = &v24[OBJC_IVAR___BKAudiobookAsset_audiobookDisplayTitle];
      *(_QWORD *)v26 = v21;
      *((_QWORD *)v26 + 1) = v22;
      v31.receiver = v24;
      v31.super_class = v23;
      v16 = objc_msgSendSuper2(&v31, "init");
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v8, v4);
      v27(v10, v4);
      return v16;
    }
    swift_bridgeObjectRelease(v14);
    sub_100010960((uint64_t)v3, (uint64_t *)&unk_1009D23D0);
  }
  return 0;
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.open(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler);
  swift_unknownObjectWeakAssign(v4 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController, v2);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v6 = Strong;
    sub_1002A73E0(0, a1);
    swift_unknownObjectRelease(v6);
  }
}

uint64_t AudiobookNowPlayingTouchViewController.open(toLocation:animated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler);
  swift_unknownObjectWeakAssign(v6 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController, v3);
  result = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (result)
  {
    v8 = result;
    sub_1002A73E0(a1, a2 & 1);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.close(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  _BOOL4 v6;
  _BYTE v7[24];

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v7, 0, 0);
    v6 = (char *)objc_msgSend(*(id *)(*sub_10003F198(v5, v5[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state")- 4 < (char *)0xFFFFFFFFFFFFFFFELL;
    sub_1002A4B2C(a1, v6, 0);
    swift_unknownObjectRelease(v4);
  }
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.saveStateClosing(_:suspending:)(Swift::Bool _, Swift::Bool suspending)
{
  uint64_t v2;
  uint64_t Strong;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
    swift_unknownObjectRelease(Strong);
}

id AudiobookNowPlayingTouchViewController.dismissShouldBegin(_:)(void *a1)
{
  return objc_msgSend(a1, "proposedBeginState");
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.requestClose(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v4 = Strong;
    v7 = (id)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
    if (v7)
    {
      v5 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v4
                                                               + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates) + 24);
      if (v5)
      {
        v6 = (uint64_t)v5;
        objc_msgSend(v5, "assetViewController:requestClose:error:", v7, a1, 0);
        swift_unknownObjectRelease(v4);
        v4 = v6;
      }
      swift_unknownObjectRelease(v4);

    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.assetViewControllerDidOpen(animated:)(Swift::Bool animated)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_1002A8B5C();
    swift_unknownObjectRelease(v3);
  }
}

Swift::Void __swiftcall AudiobookNowPlayingTouchViewController.assetViewControllerWillUnload()()
{
  _QWORD *v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  _BYTE v4[24];

  (*(void (**)(void))((swift_isaMask & *v0) + 0x1E0))();
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)((char *)v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v2 = Strong;
    v3 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v4, 0, 0);
    objc_msgSend(*(id *)(*sub_10003F198(v3, v3[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "removeObserver:");
    swift_unknownObjectRelease(v2);
  }
}

void AudiobookNowPlayingTouchViewController.didPurchase(withProductProfile:completion:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;

  v5 = objc_opt_self(AEUserPublishingProductProfile);
  if (swift_dynamicCastObjCClass(a1, v5))
  {
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
    if (Strong)
    {
      v7 = Strong;
      v8 = swift_unknownObjectRetain(a1);
      a2(v8);
      swift_unknownObjectRelease(a1);
      swift_unknownObjectRelease(v7);
    }
  }
  else
  {
    if (qword_1009CDD18 != -1)
      swift_once(&qword_1009CDD18, sub_100246604);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100048F64(v9, (uint64_t)qword_1009D4870);
    oslog = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Wrong type of user publishing product profile", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

  }
}

uint64_t AudiobookNowPlayingTouchViewController.setDownloadState(_:assetState:progressValue:)(uint64_t a1, unsigned __int16 a2, float a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v3 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (result)
  {
    v8 = result;
    sub_1002A0B40(a1, a2, a3);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

Swift::Bool __swiftcall AudiobookNowPlayingTouchViewController.shouldCloseDueToAssetDeletion()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  char v3;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (Strong)
  {
    v2 = Strong;
    v3 = sub_1002A7B34();
    swift_unknownObjectRelease(v2);
    LOBYTE(Strong) = v3 & 1;
  }
  return Strong;
}

void sub_1002490C0()
{
  qword_1009D4888 = 0xC014000000000000;
}

UIView_optional __swiftcall AudiobookNowPlayingTouchViewController.transitionContentView()()
{
  void *v0;
  objc_class *v1;
  Swift::Bool v2;
  UIView_optional result;

  v1 = (objc_class *)objc_msgSend(v0, "view");
  result.value.super.super.isa = v1;
  result.is_nil = v2;
  return result;
}

double AudiobookNowPlayingTouchViewController.transitionCoverFrame()()
{
  return 0.0;
}

UIViewContentMode __swiftcall AudiobookNowPlayingTouchViewController.coverContentMode()()
{
  void *v0;
  id v1;
  id v2;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "verticalSizeClass");

  if (v2 == (id)1)
    return 2;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  if (v5 == (id)1)
    return 2;
  else
    return 1;
}

double AudiobookNowPlayingTouchViewController.transitionCoverImagePlayControlShadowOpacityValue()()
{
  return 0.22;
}

id AudiobookNowPlayingTouchViewController.trackerForAudiobookAnalytics.getter()
{
  void *v0;

  return objc_msgSend(v0, "ba_effectiveAnalyticsTracker");
}

id AudiobookNowPlayingTouchViewController.analyticsData()()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "analyticsData");
}

uint64_t sub_1002492EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_1007146E8);
  v3 = swift_getKeyPath(&unk_100714710);
  static Published.subscript.getter(&v13, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v13;
  v5 = sub_10004CFD4(&qword_1009D18A0);
  v6 = sub_100030B34((unint64_t *)&unk_1009D4F30, &qword_1009D18A0, (uint64_t)&protocol conformance descriptor for [A]);
  LOBYTE(KeyPath) = Collection.isNotEmpty.getter(v5, v6);
  swift_bridgeObjectRelease(v4);
  if ((KeyPath & 1) != 0)
  {
    v7 = sub_100043ED0(0, 1, 1, _swiftEmptyArrayStorage);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_100043ED0((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    v10 = &v7[2 * v9];
    v10[4] = 0xD00000000000001FLL;
    v10[5] = 0x80000001007B2070;
  }
  else
  {
    v7 = _swiftEmptyArrayStorage;
  }
  v11 = sub_10003455C((uint64_t)v7);
  swift_bridgeObjectRelease(v7);
  return v11;
}

void sub_10024944C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider;
  v2 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider);
  if (v2)
  {
    v12 = v2;
    v3 = sub_1002492EC();
    v4 = objc_msgSend(v12, "placement");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    LOBYTE(v4) = sub_1003242F8(v5, v7, v3);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v3);
    if ((v4 & 1) != 0 || (v8 = *(void **)(v0 + v1)) == 0)
    {

    }
    else
    {
      v9 = v8;
      v10 = objc_msgSend(v9, "viewController");
      objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);

      v11 = *(void **)(v0 + v1);
      *(_QWORD *)(v0 + v1) = 0;

    }
  }
}

void sub_100249568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id Strong;
  _QWORD aBlock[5];
  _QWORD *v45;
  char v46[32];

  v38 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v46, 0, 0);
  Strong = (id)swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return;
  v10 = *(_QWORD *)(a1 + 64);
  v36 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v42 = a1;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    v33 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v33 >= v37)
      goto LABEL_22;
    v34 = *(_QWORD *)(v36 + 8 * v33);
    ++v14;
    if (!v34)
    {
      v14 = v33 + 1;
      if (v33 + 1 >= v37)
        goto LABEL_22;
      v34 = *(_QWORD *)(v36 + 8 * v14);
      if (!v34)
      {
        v14 = v33 + 2;
        if (v33 + 2 >= v37)
          goto LABEL_22;
        v34 = *(_QWORD *)(v36 + 8 * v14);
        if (!v34)
          break;
      }
    }
LABEL_21:
    v13 = (v34 - 1) & v34;
    v16 = __clz(__rbit64(v34)) + (v14 << 6);
LABEL_6:
    v17 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(void **)(*(_QWORD *)(v42 + 56) + 8 * v16);
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    swift_bridgeObjectRetain(v19);
    v21 = v20;
    v22 = (void *)static OS_dispatch_queue.main.getter(v21);
    v23 = swift_allocObject(&unk_1008F65B8, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16, Strong);
    v24 = (_QWORD *)swift_allocObject(&unk_1008F66A8, 48, 7);
    v24[2] = v23;
    v24[3] = v21;
    v24[4] = v18;
    v24[5] = v19;
    aBlock[4] = sub_10024B65C;
    v45 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008F66C0;
    v25 = _Block_copy(aBlock);
    v26 = v45;
    v27 = v21;
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v28);
    aBlock[0] = _swiftEmptyArrayStorage;
    v29 = sub_100008E8C();
    v30 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v31 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    v32 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v38, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v32);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
  }
  v35 = v33 + 3;
  if (v35 >= v37)
  {
LABEL_22:

    swift_release(v42);
    return;
  }
  v34 = *(_QWORD *)(v36 + 8 * v35);
  if (v34)
  {
    v14 = v35;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v14 >= v37)
      goto LABEL_22;
    v34 = *(_QWORD *)(v36 + 8 * v14);
    ++v35;
    if (v34)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

void sub_100249924(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  _BYTE v10[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    if ((char *)objc_msgSend(a2, "style") - 3 <= (char *)1
      && !*(_QWORD *)&v9[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider])
    {
      if (a3 == 0xD00000000000001FLL && a4 == 0x80000001007B2070
        || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD00000000000001FLL, 0x80000001007B2070, 0) & 1) != 0)
      {
        sub_100249B00(a2);
      }
      else if (a3 == 0xD000000000000024 && a4 == 0x80000001007B2210
             || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000024, 0x80000001007B2210, 0) & 1) != 0)
      {
        sub_100249C8C(a2);
      }
    }

  }
}

void sub_100249A58(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_100009E04(0, &qword_1009D4AD8, AMSDialogRequest_ptr);
  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, v7, &protocol witness table for String);
  swift_retain(v5);
  v9 = a3;
  v6(v8, a3);
  swift_release(v5);
  swift_bridgeObjectRelease(v8);

}

void sub_100249B00(void *a1)
{
  _QWORD *v1;
  id v3;
  id v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v3 = objc_allocWithZone((Class)BCMessageViewControllerProvider);
  v4 = a1;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "initWithRequest:placement:", v4, v5);

  v7 = *(void **)((char *)v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider);
  *(_QWORD *)((char *)v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider) = v6;
  v8 = v6;

  objc_msgSend(v8, "setDelegate:", v1);
  v13 = objc_msgSend(v8, "viewController");
  objc_msgSend(v13, "setModalPresentationStyle:", 7);
  v9 = objc_msgSend(v13, "popoverPresentationController");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "setDelegate:", v1);
    v12 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x230))(v11);
    objc_msgSend(v10, "setSourceView:", v12);

    objc_msgSend(v10, "setPermittedArrowDirections:", 15);
    objc_msgSend(v1, "presentViewController:animated:completion:", v13, 1, 0);

    v8 = v13;
    v13 = v10;
  }

}

void sub_100249C8C(void *a1)
{
  _QWORD *v1;
  id v3;
  id v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[5];
  double v14[4];
  char v15;

  v3 = objc_allocWithZone((Class)BCMessageViewControllerProvider);
  v4 = a1;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "initWithRequest:placement:", v4, v5);

  v7 = *(void **)((char *)v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider);
  *(_QWORD *)((char *)v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider) = v6;
  v8 = v6;

  objc_msgSend(v8, "setDelegate:", v1);
  v12 = objc_msgSend(v8, "viewController");
  objc_msgSend(v12, "setModalPresentationStyle:", 7);
  v9 = objc_msgSend(v12, "popoverPresentationController");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setDelegate:", v1);
    v11 = objc_msgSend(v1, "view");
    objc_msgSend(v10, "setSourceView:", v11);

    (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v1) + 0x238))(v13);
    sub_10024B668((uint64_t)v13, (uint64_t)v14);
    if ((v15 & 1) == 0)
      objc_msgSend(v10, "setSourceRect:", v14[0], v14[1], v14[2], v14[3]);
    objc_msgSend(v10, "setPermittedArrowDirections:", 15);
    objc_msgSend(v1, "presentViewController:animated:completion:", v12, 1, 0);

  }
  else
  {

  }
}

uint64_t AudiobookNowPlayingTouchViewController.engagement(_:didUpdate:placement:serviceType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10024AE98(a2, a3, a4);
}

void AudiobookNowPlayingTouchViewController.messageViewControllerDidSelectCancel(_:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend(v2, "presentedViewController");
  v12 = objc_msgSend(a1, "viewController");
  if (v25)
  {
    if (v12)
    {
      v24 = v12;
      sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
      v13 = v25;
      v14 = static NSObject.== infix(_:_:)(v13, v24);

      if ((v14 & 1) == 0)
        return;
      goto LABEL_6;
    }
    v12 = v25;
LABEL_9:

    return;
  }
  if (v12)
    goto LABEL_9;
LABEL_6:
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v25 = (id)static OS_dispatch_queue.main.getter(v15);
  v16 = swift_allocObject(&unk_1008F65B8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v2);
  aBlock[4] = sub_10024B288;
  v27 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F65D0;
  v17 = _Block_copy(aBlock);
  swift_release(v27);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = v5;
  v20 = sub_100008E8C();
  v21 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v22 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v4, v20);
  v23 = v25;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_10024A1D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char *v8;
  char v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider;
    v5 = *(void **)(Strong + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v6, "viewController");
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);

      v8 = *(char **)&v3[v4];
      *(_QWORD *)&v3[v4] = 0;

      v3 = v8;
    }

  }
}

void AudiobookNowPlayingTouchViewController.messageViewController(_:didFailWithError:)()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1009CDD18 != -1)
    swift_once(&qword_1009CDD18, sub_100246604);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048F64(v0, (uint64_t)qword_1009D4870);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Message View Controller did fail to load", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_10024A52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1002477B4();

  }
}

UIModalPresentationStyle __swiftcall AudiobookNowPlayingTouchViewController.adaptivePresentationStyle(for:)(UIPresentationController a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v1, "adaptivePresentationStyleForPresentationController:traitCollection:", a1.super.isa, v3);

  return (UIModalPresentationStyle)v4;
}

UIModalPresentationStyle __swiftcall AudiobookNowPlayingTouchViewController.adaptivePresentationStyle(for:traitCollection:)(UIPresentationController a1, UITraitCollection traitCollection)
{
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = -[objc_class presentedViewController](a1.super.isa, "presentedViewController");
  v3 = objc_opt_self(BCAMSUIBubbleTipViewController);
  v4 = swift_dynamicCastObjCClass(v2, v3);

  if (v4)
    return -1;
  else
    return 5;
}

UIPointerRegion_optional __swiftcall AudiobookNowPlayingTouchViewController.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  objc_class *v3;
  Swift::Bool v4;
  UIPointerRegion_optional result;

  v3 = (objc_class *)sub_10024B2A0(_.super.isa);
  result.value.super.isa = v3;
  result.is_nil = v4;
  return result;
}

uint64_t sub_10024A834@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100714598);
  v5 = swift_getKeyPath(&unk_1007145C0);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_10024A8B0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100714598);
  v6 = swift_getKeyPath(&unk_1007145C0);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

double sub_10024A92C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100714550);
  v5 = swift_getKeyPath(&unk_100714578);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_10024A9AC(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100714550);
  v6 = swift_getKeyPath(&unk_100714578);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t type metadata accessor for AudiobookAsset(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D49E8;
  if (!qword_1009D49E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookAsset);
  return result;
}

void sub_10024AA70(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v19 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v19 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v19 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v19 + 8 * v10);
        if (!v17)
        {
          v10 = v16 + 3;
          if (v16 + 3 >= v9)
            goto LABEL_23;
          v17 = *(_QWORD *)(v19 + 8 * v10);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12 + 8);
    swift_bridgeObjectRetain(v13);
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "addObserver:placement:serviceType:", a3, v14, v15);
    swift_bridgeObjectRelease(v13);

  }
  v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v19 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_10024AC4C()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cancellables] = &_swiftEmptySetSingleton;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_minibarViewControllerDelegate], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_minifiedController], 0);
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_recommendedTracker] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_bookPositionProcessor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_amsEngagement] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cachedPointerInteractionViews] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookNowPlayingTouchViewController.swift", 50, 2, 83, 0);
  __break(1u);
}

void sub_10024AD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;

  v6 = objc_opt_self(AEUserPublishingProductProfile);
  if (swift_dynamicCastObjCClass(a1, v6))
  {
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(a2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(void (**)(uint64_t))(a3 + 16);
      swift_unknownObjectRetain(a1);
      v9(a3);
      swift_unknownObjectRelease(a1);
      swift_unknownObjectRelease(v8);
    }
  }
  else
  {
    if (qword_1009CDD18 != -1)
      swift_once(&qword_1009CDD18, sub_100246604);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100048F64(v10, (uint64_t)qword_1009D4870);
    oslog = Logger.logObject.getter(v11);
    v12 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Wrong type of user publishing product profile", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
}

uint64_t sub_10024AE98(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  void (*v44)();
  _QWORD *v45;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 != 0xD00000000000001FLL || a3 != 0x80000001007B2070)
  {
    result = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD00000000000001FLL, 0x80000001007B2070, 0);
    if ((result & 1) == 0)
    {
      if (!a1)
        return result;
      goto LABEL_7;
    }
  }
  if (a1)
  {
LABEL_7:
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v24 = a1;
    v38 = v12;
    v25 = v9;
    v26 = v24;
    v17 = (void *)static OS_dispatch_queue.main.getter(v24);
    v27 = swift_allocObject(&unk_1008F65B8, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v4);
    v28 = (_QWORD *)swift_allocObject(&unk_1008F6608, 48, 7);
    v28[2] = v27;
    v28[3] = v26;
    v28[4] = a2;
    v28[5] = a3;
    v44 = sub_10024B65C;
    v45 = v28;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_1000147F0;
    v43 = &unk_1008F6620;
    v29 = _Block_copy(&aBlock);
    v30 = v45;
    v31 = v26;
    swift_bridgeObjectRetain(a3);
    swift_release(v30);
    static DispatchQoS.unspecified.getter(v32);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v33 = sub_100008E8C();
    v34 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v35 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    v36 = v34;
    v9 = v25;
    v12 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v36, v35, v8, v33);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v29);
    _Block_release(v29);

    goto LABEL_8;
  }
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_1008F65B8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v4);
  v44 = sub_10024B288;
  v45 = (_QWORD *)v18;
  aBlock = _NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_1000147F0;
  v43 = &unk_1008F6648;
  v19 = _Block_copy(&aBlock);
  swift_release(v45);
  static DispatchQoS.unspecified.getter(v20);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v21 = sub_100008E8C();
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v23 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v19);
  _Block_release(v19);
LABEL_8:
  v37 = v39;

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v14, v12);
}

uint64_t sub_10024B264()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10024B288()
{
  uint64_t v0;

  sub_10024A1D8(v0);
}

uint64_t sub_10024B2A0(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  char v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double x;
  double y;
  double width;
  double height;
  _QWORD v19[5];
  CGRect v20;
  CGRect v21;

  v2 = objc_msgSend(a1, "view");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cachedPointerInteractionViews);
  if (!v4)
  {
LABEL_10:

    return v4;
  }
  swift_bridgeObjectRetain(v4);
  v5 = sub_1004EC1C4((uint64_t)v3, v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
  {
    objc_msgSend(v3, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    if (qword_1009CDD20 != -1)
      swift_once(&qword_1009CDD20, sub_1002490C0);
    v20.origin.x = UIRectInset(v7, v9, v11, v13, *(double *)&qword_1009D4888, *(double *)&qword_1009D4888, *(double *)&qword_1009D4888, *(double *)&qword_1009D4888);
    x = v20.origin.x;
    y = v20.origin.y;
    width = v20.size.width;
    height = v20.size.height;
    v21.origin.x = 0.0;
    v21.origin.y = 0.0;
    v21.size.width = 0.0;
    v21.size.height = 0.0;
    if (!CGRectEqualToRect(v20, v21))
    {
      sub_100009E04(0, &qword_1009D4AC8, UIPointerRegion_ptr);
      UIPointerRegion.identifier.getter(v19);
      v4 = UIPointerRegion.init(rect:identifier:)(v19, x, y, width, height);
      goto LABEL_10;
    }
  }

  return 0;
}

uint64_t _s5Books38AudiobookNowPlayingTouchViewControllerC18pointerInteraction_8styleForSo14UIPointerStyleCSgSo0lI0C_So0L6RegionCtF_0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v3 = sub_10004CFD4((uint64_t *)&unk_1009E4FE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIPointerEffect(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = objc_msgSend(a1, "view");
  if (!v10)
    return 0;
  v11 = v10;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cachedPointerInteractionViews);
  if (!v12
    || (swift_bridgeObjectRetain(v12),
        v13 = sub_1004EC1C4((uint64_t)v11, v12),
        swift_bridgeObjectRelease(v12),
        (v13 & 1) == 0))
  {

    return 0;
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v11);
  sub_100009E04(0, &qword_1009D4AC0, UIPointerStyle_ptr);
  *v9 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIPointerEffect.automatic(_:), v6);
  v15 = type metadata accessor for UIPointerShape(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 1, 1, v15);
  v16 = v14;
  v17 = UIPointerStyle.init(effect:shape:)(v9, v5);

  return v17;
}

uint64_t sub_10024B5D0()
{
  return type metadata accessor for AudiobookAsset(0);
}

uint64_t sub_10024B5D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100714688;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100714688;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10024B65C()
{
  uint64_t v0;

  sub_100249924(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10024B668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D4AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10024B6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100249568(a1, a2, v2);
}

uint64_t sub_10024B6BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10024B6F8(uint64_t a1)
{
  uint64_t v1;

  sub_10024A52C(a1, v1);
}

uint64_t destroy for MenuReadingLoupeItem(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 16));
  return swift_unknownObjectWeakDestroy(a1 + 40);
}

uint64_t initializeWithCopy for MenuReadingLoupeItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = a1 + 40;
  v8 = a2 + 40;
  v9 = v4;
  swift_retain(v6);
  swift_unknownObjectWeakCopyInit(v7, v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for MenuReadingLoupeItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakCopyAssign(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t initializeWithTake for MenuReadingLoupeItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectWeakTakeInit(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for MenuReadingLoupeItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_release(v6);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectWeakTakeAssign(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for MenuReadingLoupeItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuReadingLoupeItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuReadingLoupeItem()
{
  return &type metadata for MenuReadingLoupeItem;
}

unint64_t sub_10024B9AC(uint64_t a1)
{
  unint64_t result;

  result = sub_100234658();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10024B9D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100868FF0, 1);
}

uint64_t sub_10024B9E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t KeyPath;
  char v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  __n128 v43;
  _BYTE *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjCClassFromMetadata;
  void *v54;
  id v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  char *v68;
  id v69;
  unint64_t v70;
  void (*v71)(char *, uint64_t);
  double (*v72)(char *, uint64_t);
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  __n128 v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  __int128 v124;
  unint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  char v132[8];

  v2 = v1;
  v120 = type metadata accessor for Locale(0);
  v112 = *(_QWORD *)(v120 - 8);
  v4 = __chkstk_darwin(v120);
  v117 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v119 = (char *)&v101 - v6;
  v118 = type metadata accessor for String.LocalizationValue(0);
  v111 = *(_QWORD *)(v118 - 8);
  v7 = __chkstk_darwin(v118);
  v114 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v116 = (char *)&v101 - v9;
  v109 = (void (*)(char *, char *, uint64_t))type metadata accessor for AccessibilityActionKind(0);
  v108 = *((_QWORD *)v109 - 1);
  __chkstk_darwin(v109);
  v107 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D8460);
  v102 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10004CFD4(&qword_1009D4B20);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v15 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_10004CFD4(&qword_1009D4B28);
  __chkstk_darwin(v106);
  v17 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_10004CFD4(&qword_1009D4B30);
  v18 = __chkstk_darwin(v113);
  v115 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v122 = (uint64_t)&v101 - v20;
  v21 = *(_BYTE **)(v1 + 16);
  KeyPath = swift_getKeyPath(&unk_1007147B8);
  v123 = v21;
  v105 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v123, KeyPath, v105);
  swift_release(KeyPath);
  swift_beginAccess(v21 + 297, v132, 0, 0);
  v23 = v21[297];
  sub_10024C43C(v1, (uint64_t)&v123);
  v24 = swift_allocObject(&unk_1008F67D8, 72, 7);
  sub_10023461C((uint64_t)&v123, v24 + 16);
  v130 = 0;
  v131 = 0xE000000000000000;
  v25 = sub_1001F2108();
  Button<>.init<A>(_:action:)(&v130, sub_10024C69C, v24, &type metadata for String, v25);
  v26 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    v110 = v25;
    v101 = *(_OWORD *)(v2 + 24);
    v27 = v26;
    v121 = a1;
    if ((v23 & 1) != 0)
    {
      v28 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
      v29 = static Color.blue.getter();
    }
    else
    {
      v28 = static Color.primary.getter();
      v29 = 0;
    }
    v123 = v27;
    v124 = v101;
    v125 = 0xD000000000000011;
    v126 = 0x80000001007B8710;
    v127 = 1;
    v128 = v28;
    v129 = v29;
    v30 = sub_10024C474();
    v31 = sub_10024C4C0();
    View.buttonStyle<A>(_:)(&v123, v11, &type metadata for IconButtonStyle, v30, v31);

    sub_100209510(0xD000000000000011, 0x80000001007B8710);
    swift_release(v28);
    v32 = swift_release(v29);
    (*(void (**)(char *, uint64_t, __n128))(v102 + 8))(v13, v11, v32);
    v33 = *(_QWORD *)(v2 + 24);
    LOBYTE(v130) = 0;
    State.init(wrappedValue:)(&v123, &v130, &type metadata for Bool);
    LOBYTE(v30) = (_BYTE)v123;
    v34 = v124;
    v35 = v103;
    v36 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v17, v15, v104);
    v37 = v106;
    v38 = &v17[*(int *)(v106 + 36)];
    *(_QWORD *)v38 = v33;
    v38[8] = v30;
    *((_QWORD *)v38 + 2) = v34;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
    sub_10024C43C(v2, (uint64_t)&v123);
    v39 = swift_allocObject(&unk_1008F6800, 72, 7);
    v40 = sub_10023461C((uint64_t)&v123, v39 + 16);
    v41 = v107;
    static AccessibilityActionKind.default.getter(v40);
    v42 = sub_10024C520();
    View.accessibilityAction(_:_:)(v41, sub_10024C508, v39, v37, v42);
    v43 = swift_release(v39);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t), __n128))(v108 + 8))(v41, v109, v43);
    sub_100010960((uint64_t)v17, &qword_1009D4B28);
    v44 = *(_BYTE **)(v2 + 16);
    v45 = swift_getKeyPath(&unk_1007147B8);
    v123 = v44;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v123, v45, v105);
    swift_release(v45);
    swift_beginAccess(v44 + 297, &v123, 0, 0);
    v46 = v116;
    if (v44[297] == 1)
    {
      v47 = String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
      v48 = v119;
      static Locale.current.getter(v47);
      v49 = v111;
      v50 = v114;
      v51 = v118;
      v109 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
      v109(v114, v46, v118);
      v52 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v52);
      v54 = (void *)objc_opt_self(NSBundle);
      v108 = ObjCClassFromMetadata;
      v55 = objc_msgSend(v54, "bundleForClass:", ObjCClassFromMetadata);
      v56 = v112;
      v57 = v117;
      v58 = v120;
      v106 = *(_QWORD *)(v112 + 16);
      ((void (*)(char *, char *, uint64_t))v106)(v117, v48, v120);
      v59 = v55;
      v60 = v57;
      v61 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v59, v57, "Accessibility label for the bookmark button being in the on state in the action menu.", 85, 2);
    }
    else
    {
      v63 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
      v48 = v119;
      static Locale.current.getter(v63);
      v49 = v111;
      v50 = v114;
      v51 = v118;
      v109 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
      v109(v114, v46, v118);
      v64 = type metadata accessor for BundleFinder();
      v65 = swift_getObjCClassFromMetadata(v64);
      v66 = (void *)objc_opt_self(NSBundle);
      v108 = v65;
      v67 = objc_msgSend(v66, "bundleForClass:", v65);
      v56 = v112;
      v68 = v117;
      v58 = v120;
      v106 = *(_QWORD *)(v112 + 16);
      ((void (*)(char *, char *, uint64_t))v106)(v117, v48, v120);
      v69 = v67;
      v60 = v68;
      v61 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v69, v68, "Accessibility label for the bookmark button being in the off state in the action menu.", 86, 2);
    }
    v107 = (char *)v61;
    v70 = v62;
    v71 = *(void (**)(char *, uint64_t))(v56 + 8);
    v71(v48, v58);
    v72 = *(double (**)(char *, uint64_t))(v49 + 8);
    v72(v46, v51);
    v73 = String.LocalizationValue.init(stringLiteral:)(0x69754720656E694CLL, 0xEA00000000006564);
    static Locale.current.getter(v73);
    v109(v50, v46, v51);
    type metadata accessor for BundleFinder();
    v74 = (void *)objc_opt_self(NSBundle);
    v75 = objc_msgSend(v74, "bundleForClass:", v108);
    ((void (*)(char *, char *, uint64_t))v106)(v60, v48, v58);
    v76 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v75, v60, "Accessibility label for the line guide button in the action menu.", 65, 2);
    v78 = v77;
    v71(v48, v58);
    v79.n128_f64[0] = v72(v46, v51);
    v130 = (char *)v76;
    v131 = v78;
    v80 = v110;
    v81 = Text.init<A>(_:)(&v130, &type metadata for String, v110, v79);
    v83 = v82;
    v85 = v84;
    v87 = v86 & 1;
    v88 = (uint64_t)v115;
    ModifiedContent<>.accessibility(label:)();
    sub_1001F5B28(v81, v83, v87);
    swift_bridgeObjectRelease(v85);
    v130 = v107;
    v131 = v70;
    v90 = Text.init<A>(_:)(&v130, &type metadata for String, v80, v89);
    v92 = v91;
    v94 = v93;
    LOBYTE(v81) = v95 & 1;
    ModifiedContent<>.accessibility(value:)();
    sub_1001F5B28(v90, v92, v81);
    swift_bridgeObjectRelease(v94);
    sub_100010960(v88, &qword_1009D4B30);
    return sub_100010960(v122, &qword_1009D4B30);
  }
  else
  {
    v97 = *(_QWORD *)(v2 + 8);
    v98 = type metadata accessor for ChromeStyle(0);
    v99 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v97, v98, v99, v100);
    __break(1u);
  }
  return result;
}

uint64_t sub_10024C3E0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a1 + 40);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(a1 + 48);
    ObjectType = swift_getObjectType(result, v3);
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_10024C43C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MenuReadingLoupeItem(a2, a1);
  return a2;
}

unint64_t sub_10024C474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F4060;
  if (!qword_1009F4060)
  {
    v1 = sub_100030B74(&qword_1009D8460);
    result = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F4060);
  }
  return result;
}

unint64_t sub_10024C4C0()
{
  unint64_t result;

  result = qword_1009D4B38;
  if (!qword_1009D4B38)
  {
    result = swift_getWitnessTable(&unk_10071D6C8, &type metadata for IconButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1009D4B38);
  }
  return result;
}

uint64_t sub_10024C508()
{
  uint64_t v0;

  return sub_10024C3E0(v0 + 16);
}

unint64_t sub_10024C520()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D4B40;
  if (!qword_1009D4B40)
  {
    v1 = sub_100030B74(&qword_1009D4B28);
    v2[0] = sub_100030B74(&qword_1009D8460);
    v2[1] = &type metadata for IconButtonStyle;
    v2[2] = sub_10024C474();
    v2[3] = sub_10024C4C0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10024C5D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4B40);
  }
  return result;
}

unint64_t sub_10024C5D0()
{
  unint64_t result;

  result = qword_1009D4B48;
  if (!qword_1009D4B48)
  {
    result = swift_getWitnessTable(&unk_10071C1E4, &type metadata for HoverActionMenuItem);
    atomic_store(result, (unint64_t *)&qword_1009D4B48);
  }
  return result;
}

unint64_t sub_10024C618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4B50;
  if (!qword_1009D4B50)
  {
    v1 = sub_100030B74(&qword_1009D4B30);
    sub_10024C520();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4B50);
  }
  return result;
}

uint64_t sub_10024C6A4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D4B60);
  sub_100048F64(v0, (uint64_t)qword_1009D4B60);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000030, 0x80000001007149B0);
}

char *sub_10024C720()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  char *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___nowPlayingView;
  v2 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___nowPlayingView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___nowPlayingView);
  }
  else
  {
    v4 = v0;
    v5 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
    v6 = objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingFullscreenTouchView(0));
    v7 = (char *)sub_100347FE0(v5, 0.0, 0.0, 0.0, 0.0);
    v8 = &v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate];
    *((_QWORD *)v8 + 1) = &off_1008F6870;
    swift_unknownObjectWeakAssign(v8, v4);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider], "setDelegate:", v4);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void sub_10024C7FC()
{
  qword_1009D4B78 = 0xC02C000000000000;
}

uint64_t sub_10024C80C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___languageSuffix);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___languageSuffix
                 + 8);
  if (v2)
  {
    v3 = *v1;
  }
  else
  {
    v3 = sub_10024C880();
    v4 = v1[1];
    *v1 = v3;
    v1[1] = v5;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_10024C880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(NSLocale), "systemLocale");
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  v5 = Locale.languageCode.getter();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7)
    v8 = v5;
  else
    v8 = 0;
  if (v7)
    v9 = v7;
  else
    v9 = 0xE000000000000000;
  v10 = (void *)objc_opt_self(UIImage);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v12 = swift_allocObject(v11, 72, 7);
  v21 = xmmword_10070CCA0;
  *(_OWORD *)(v12 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  v13 = sub_10002BE50();
  *(_QWORD *)(v12 + 64) = v13;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v12 + 40) = v9;
  swift_bridgeObjectRetain(v9);
  String.init(format:_:)(0x726177726F666F67, 0xEF40252E35312E64, v12);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v10, "__systemImageNamedSwift:", v16);

  if (v17)
  {
    v18 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v18 + 16) = v21;
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    *(_QWORD *)(v18 + 64) = v13;
    *(_QWORD *)(v18 + 32) = v8;
    *(_QWORD *)(v18 + 40) = v9;
    v19 = String.init(format:_:)(4203822, 0xE300000000000000, v18);

  }
  else
  {
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  return v19;
}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.loadView()()
{
  void *v0;
  char *v1;

  v1 = sub_10024C720();
  objc_msgSend(v0, "setView:", v1);

}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.viewDidLoad()()
{
  char *v0;
  uint64_t v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, "viewDidLoad");
  v1 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
  sub_10024CB78(v1);
  sub_10024D1CC(v1);
  sub_10024FF48();
}

void sub_10024CB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  double v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  NSString v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t __x;
  uint64_t v58;

  v2 = v1;
  v4 = sub_10024C720();
  KeyPath = swift_getKeyPath(&unk_100714CB8);
  v6 = swift_getKeyPath(&unk_100714CE0);
  static Published.subscript.getter(&__x, a1, KeyPath, v6);
  swift_release(KeyPath);
  *(_QWORD *)&v7 = swift_release(v6).n128_u64[0];
  if ((_BYTE)__x)
    v8 = &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_pauseImage;
  else
    v8 = &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause], "setBackgroundImage:forState:", *(_QWORD *)&v4[*v8], 0, v7);

  v9 = swift_getKeyPath(&unk_100714BE0);
  v10 = swift_getKeyPath(&unk_100714C08);
  static Published.subscript.getter(&__x, a1, v9, v10);
  swift_release(v9);
  swift_release(v10);
  if (__x == 1)
  {
    v11 = swift_getKeyPath(&unk_100714E20);
    v12 = &unk_100714E48;
  }
  else
  {
    v11 = swift_getKeyPath(&unk_100714D00);
    v12 = &unk_100714D28;
  }
  v13 = swift_getKeyPath(v12);
  static Published.subscript.getter(&__x, a1, v11, v13);
  swift_release(v11);
  swift_release(v13);
  v14 = v58;
  sub_100251AAC(__x, v58, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel);
  swift_bridgeObjectRelease(v14);
  sub_100250EA0(a1);
  v15 = sub_10024C720();
  v16 = swift_getKeyPath(&unk_100714828);
  v17 = swift_getKeyPath(&unk_100714850);
  static Published.subscript.getter(&__x, a1, v16, v17);
  swift_release(v16);
  *(_QWORD *)&v18 = swift_release(v17).n128_u64[0];
  v19 = (void *)__x;
  objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView], "setImage:", __x, v18);

  v20 = swift_getKeyPath(&unk_100714BE0);
  v21 = swift_getKeyPath(&unk_100714C08);
  static Published.subscript.getter(&__x, a1, v20, v21);
  swift_release(v20);
  swift_release(v21);
  v22 = sub_10024C720();
  v23 = *(id *)&v22[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton];

  v24 = *(_QWORD *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  v25 = swift_getKeyPath(&unk_100714BE0);
  v26 = swift_getKeyPath(&unk_100714C08);
  static Published.subscript.getter(&__x, v24, v25, v26);
  swift_release(v25);
  *(_QWORD *)&v27 = swift_release(v26).n128_u64[0];
  objc_msgSend(v23, "setEnabled:", (__x & 1) == 0, v27);

  v28 = swift_getKeyPath(&unk_100714C28);
  v29 = swift_getKeyPath(&unk_100714C50);
  static Published.subscript.getter(&__x, a1, v28, v29);
  swift_release(v28);
  swift_release(v29);
  v30 = lround(*(long double *)&__x);
  sub_1002524B0(v30, 0x61776B6361626F67, 0xEC00000040256472);
  v32 = v31;
  v33 = (void *)objc_opt_self(UIImage);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v35 = objc_msgSend(v33, "__systemImageNamedSwift:", v34);

  if (v35)
  {
    v36 = sub_10024C720();
    sub_10034BB00(v35);

  }
  v37 = swift_getKeyPath(&unk_100714C70);
  v38 = swift_getKeyPath(&unk_100714C98);
  static Published.subscript.getter(&__x, a1, v37, v38);
  swift_release(v37);
  swift_release(v38);
  v39 = lround(*(long double *)&__x);
  sub_1002524B0(v39, 0x726177726F666F67, 0xEB00000000402564);
  v41 = v40;
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v43 = objc_msgSend(v33, "__systemImageNamedSwift:", v42);

  if (v43)
  {
    v44 = sub_10024C720();
    sub_10034BB0C(v43);

  }
  v45 = swift_getKeyPath(&unk_100714D48);
  v46 = swift_getKeyPath(&unk_100714D70);
  static Published.subscript.getter(&__x, a1, v45, v46);
  swift_release(v45);
  swift_release(v46);
  sub_100251080(__x);
  v47 = swift_getKeyPath(&unk_100714AE0);
  v48 = swift_getKeyPath(&unk_100714B08);
  static Published.subscript.getter(&__x, a1, v47, v48);
  swift_release(v47);
  swift_release(v48);
  sub_100251868(*(float *)&__x);
  v49 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v2, "resetPlaybackSpeed");
  v50 = sub_10024C720();
  v51 = *(id *)&v50[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed];

  objc_msgSend(v51, "addGestureRecognizer:", v49);
  v52 = swift_getKeyPath(&unk_100714D90);
  v53 = swift_getKeyPath(&unk_100714DB8);
  static Published.subscript.getter(&__x, a1, v52, v53);
  swift_release(v52);
  swift_release(v53);
  if ((__x & 1) != 0)
  {
    v54 = 1;
  }
  else
  {
    v55 = swift_getKeyPath(&unk_100714DD8);
    v56 = swift_getKeyPath(&unk_100714E00);
    static Published.subscript.getter(&__x, a1, v55, v56);
    swift_release(v55);
    swift_release(v56);
    v54 = __x;
  }
  sub_1002519BC(v54);
}

double sub_10024D1CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  void (*v106)(char *, uint64_t, __n128);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  void (*v145)(char *, uint64_t, __n128);
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __n128 v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(char *, uint64_t, uint64_t, uint64_t);
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __n128 v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t, __n128);
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __n128 v212;
  char *v213;
  uint64_t v214;
  void *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  __n128 v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  char *v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  __n128 v265;
  uint64_t v266;
  char *v267;
  void *v268;
  char *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  __n128 v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void (*v299)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v300;
  char *v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  __n128 v310;
  uint64_t v311;
  char *v312;
  char *v313;
  char *v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  __n128 v325;
  void (*v326)(char *, uint64_t, __n128);
  uint64_t v327;
  char *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  __n128 v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  __n128 v358;
  double result;
  char *v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  char *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  char *v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  void (*v425)(char *, uint64_t, __n128);
  char *v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  char *v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  char *v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  unint64_t v448;
  void (*v449)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v450;
  uint64_t v451;
  id v452;

  v438 = a1;
  v420 = sub_10004CFD4(&qword_1009D4D00);
  __chkstk_darwin(v420);
  v416 = (char *)&v360 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v418 = sub_10004CFD4(&qword_1009D4D08);
  __chkstk_darwin(v418);
  v414 = (char *)&v360 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v419 = sub_10004CFD4(&qword_1009D4D10);
  v421 = *(_QWORD *)(v419 - 8);
  __chkstk_darwin(v419);
  v415 = (char *)&v360 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v422 = sub_10004CFD4(&qword_1009D4D18);
  v423 = *(_QWORD *)(v422 - 8);
  __chkstk_darwin(v422);
  v417 = (char *)&v360 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v433 = sub_10004CFD4(&qword_1009D4D20);
  __chkstk_darwin(v433);
  v431 = (char *)&v360 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = sub_10004CFD4(&qword_1009D4D28);
  v411 = *(_QWORD *)(v432 - 8);
  __chkstk_darwin(v432);
  v409 = (char *)&v360 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v412 = sub_10004CFD4((uint64_t *)&unk_1009D4D30);
  v413 = *(_QWORD *)(v412 - 8);
  __chkstk_darwin(v412);
  v410 = (char *)&v360 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v404 = sub_10004CFD4(&qword_1009DE380);
  v9 = __chkstk_darwin(v404);
  v401 = (char *)&v360 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v400 = (char *)&v360 - v12;
  __chkstk_darwin(v11);
  v399 = (char *)&v360 - v13;
  v405 = sub_10004CFD4(&qword_1009D4D40);
  v406 = *(_QWORD *)(v405 - 8);
  __chkstk_darwin(v405);
  v402 = (char *)&v360 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v407 = sub_10004CFD4(&qword_1009D4D48);
  v408 = *(_QWORD *)(v407 - 8);
  __chkstk_darwin(v407);
  v403 = (char *)&v360 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v395 = sub_10004CFD4(&qword_1009D4D50);
  v396 = *(_QWORD *)(v395 - 8);
  __chkstk_darwin(v395);
  v393 = (char *)&v360 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v397 = sub_10004CFD4(&qword_1009D4D58);
  v398 = *(_QWORD *)(v397 - 8);
  __chkstk_darwin(v397);
  v394 = (char *)&v360 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v388 = sub_10004CFD4(&qword_1009D4D60);
  v389 = *(_QWORD *)(v388 - 8);
  __chkstk_darwin(v388);
  v386 = (char *)&v360 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v390 = sub_10004CFD4(&qword_1009D4D68);
  v391 = *(_QWORD *)(v390 - 8);
  __chkstk_darwin(v390);
  v387 = (char *)&v360 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v381 = sub_10004CFD4((uint64_t *)&unk_1009D4D70);
  v382 = *(_QWORD *)(v381 - 8);
  __chkstk_darwin(v381);
  v379 = (char *)&v360 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v383 = sub_10004CFD4((uint64_t *)&unk_1009D4AF0);
  v384 = *(_QWORD *)(v383 - 8);
  __chkstk_darwin(v383);
  v380 = (char *)&v360 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v375 = sub_10004CFD4(&qword_1009D4D80);
  v376 = *(_QWORD *)(v375 - 8);
  __chkstk_darwin(v375);
  v373 = (char *)&v360 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v377 = sub_10004CFD4(&qword_1009D4D88);
  v378 = *(_QWORD *)(v377 - 8);
  __chkstk_darwin(v377);
  v374 = (char *)&v360 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v440 = sub_10004CFD4(&qword_1009D4D90);
  v370 = *(_QWORD *)(v440 - 8);
  v24 = __chkstk_darwin(v440);
  v392 = (char *)&v360 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v436 = (char *)&v360 - v26;
  v371 = sub_10004CFD4(&qword_1009D4D98);
  v372 = *(_QWORD *)(v371 - 8);
  __chkstk_darwin(v371);
  v369 = (char *)&v360 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v428 = sub_10004CFD4(&qword_1009D4DA0);
  v430 = *(_QWORD *)(v428 - 8);
  __chkstk_darwin(v428);
  v426 = (char *)&v360 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v429 = sub_10004CFD4(&qword_1009D4DA8);
  v437 = *(_QWORD *)(v429 - 8);
  __chkstk_darwin(v429);
  v427 = (char *)&v360 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v445 = sub_10004CFD4(&qword_1009D4DB0);
  v439 = *(char **)(v445 - 8);
  v30 = __chkstk_darwin(v445);
  v385 = (char *)&v360 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v444 = (char *)&v360 - v32;
  v441 = sub_10004CFD4(&qword_1009D4DB8);
  v425 = *(void (**)(char *, uint64_t, __n128))(v441 - 8);
  __chkstk_darwin(v441);
  v434 = (char *)&v360 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v368 = sub_10004CFD4(&qword_1009D4DC0);
  v435 = *(_QWORD *)(v368 - 8);
  __chkstk_darwin(v368);
  v366 = (char *)&v360 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10004CFD4(&qword_1009D4DC8);
  v36 = *(_QWORD *)(v35 - 8);
  v442 = v35;
  v443 = v36;
  __chkstk_darwin(v35);
  v367 = (char *)&v360 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v362 = sub_10004CFD4(&qword_1009D4DD0);
  v363 = *(_QWORD *)(v362 - 8);
  __chkstk_darwin(v362);
  v360 = (char *)&v360 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v364 = (_QWORD *)sub_10004CFD4((uint64_t *)&unk_1009D4DD8);
  v365 = *(v364 - 1);
  __chkstk_darwin(v364);
  v361 = (char *)&v360 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v40);
  v42 = (char *)&v360 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10004CFD4(&qword_1009D4DE8);
  v44 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v46 = (char *)&v360 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4((uint64_t *)&unk_1009D4DF0);
  v48 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v50 = (char *)&v360 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__artwork, &v452, 33, 0);
  v51 = sub_10004CFD4(&qword_1009D19F0);
  Published.projectedValue.getter(v51);
  swift_endAccess(&v452);
  v52 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v451 = v52;
  v452 = (id)static OS_dispatch_queue.main.getter(v52);
  v450 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v450 - 8) + 56);
  v53(v42, 1, 1, v450);
  v449 = v53;
  v54 = sub_100030B34((unint64_t *)&unk_1009DE390, &qword_1009D4DE8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v448 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v452, v42, v43, v52, v54, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  v55 = swift_allocObject(&unk_1008F6990, 24, 7);
  v56 = v446;
  swift_unknownObjectWeakInit(v55 + 16, v446);
  v57 = sub_100030B34(&qword_1009DE3A0, (uint64_t *)&unk_1009D4DF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v58 = Publisher<>.sink(receiveValue:)(sub_1002589CC, v55, v47, v57);
  v59 = swift_release(v55);
  (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v50, v47, v59);
  v60 = v56 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_cancellables;
  v61 = v56;
  swift_beginAccess(v56 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_cancellables, &v452, 33, 0);
  AnyCancellable.store(in:)(v60);
  swift_endAccess(&v452);
  swift_release(v58);
  v62 = v438;
  swift_beginAccess(v438 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__backgroundColorClosure, &v452, 33, 0);
  v63 = sub_10004CFD4(&qword_1009D4E10);
  v64 = v360;
  Published.projectedValue.getter(v63);
  v65 = swift_endAccess(&v452);
  v66 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v65);
  v67 = v450;
  v53(v42, 1, 1, v450);
  v68 = sub_100030B34(&qword_1009D4E18, &qword_1009D4DD0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v69 = v361;
  v70 = v362;
  Publisher.receive<A>(on:options:)(&v452, v42, v362, v66, v68, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v363 + 8))(v64, v70);
  v71 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v71 + 16, v61);
  v72 = sub_100030B34((unint64_t *)&unk_1009D4E20, (uint64_t *)&unk_1009D4DD8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v73 = v364;
  v74 = Publisher<>.sink(receiveValue:)(sub_1002589D4, v71, v364, v72);
  v75 = swift_release(v71);
  (*(void (**)(char *, _QWORD *, __n128))(v365 + 8))(v69, v73, v75);
  swift_beginAccess(v60, &v452, 33, 0);
  AnyCancellable.store(in:)(v60);
  swift_endAccess(&v452);
  swift_release(v74);
  swift_beginAccess(v62 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__assetID, &v452, 33, 0);
  v76 = sub_10004CFD4(&qword_1009D19E8);
  v77 = v366;
  Published.projectedValue.getter(v76);
  v78 = swift_endAccess(&v452);
  v79 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v78);
  v80 = v67;
  v81 = v67;
  v82 = v449;
  v449(v42, 1, 1, v80);
  v83 = sub_100030B34(&qword_1009D4E30, &qword_1009D4DC0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v84 = v367;
  v85 = v368;
  v86 = v448;
  Publisher.receive<A>(on:options:)(&v452, v42, v368, v79, v83, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v435 + 8))(v77, v85);
  v87 = swift_allocObject(&unk_1008F6990, 24, 7);
  v88 = v446;
  swift_unknownObjectWeakInit(v87 + 16, v446);
  v89 = sub_100030B34(&qword_1009D4E38, &qword_1009D4DC8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v90 = v442;
  v91 = Publisher<>.sink(receiveValue:)(sub_1002589DC, v87, v442, v89);
  v92 = swift_release(v87);
  (*(void (**)(char *, uint64_t, __n128))(v443 + 8))(v84, v90, v92);
  v447 = v60;
  swift_beginAccess(v60, &v452, 33, 0);
  AnyCancellable.store(in:)(v60);
  swift_endAccess(&v452);
  swift_release(v91);
  v93 = v438;
  swift_beginAccess(v438 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__bufferedProportion, &v452, 33, 0);
  v443 = sub_10004CFD4((uint64_t *)&unk_1009D4E40);
  v94 = v444;
  Published.projectedValue.getter(v443);
  v95 = swift_endAccess(&v452);
  v96 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v95);
  v82(v42, 1, 1, v81);
  v442 = sub_100030B34((unint64_t *)&unk_1009DBFE0, &qword_1009D4DB0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v97 = v434;
  v98 = v445;
  Publisher.receive<A>(on:options:)(&v452, v42, v445, v96, v442, v86);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  v439 = (char *)*((_QWORD *)v439 + 1);
  v99 = v94;
  ((void (*)(char *, uint64_t))v439)(v94, v98);
  v100 = swift_allocObject(&unk_1008F6990, 24, 7);
  v101 = v88;
  swift_unknownObjectWeakInit(v100 + 16, v88);
  v102 = sub_100030B34((unint64_t *)&unk_1009D4E50, &qword_1009D4DB8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v103 = v441;
  v435 = v102;
  v104 = Publisher<>.sink(receiveValue:)(sub_1002589E4, v100, v441, v102);
  v105 = swift_release(v100);
  v106 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v425 + 1);
  v106(v97, v103, v105);
  v425 = v106;
  v107 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v107);
  swift_endAccess(&v452);
  swift_release(v104);
  swift_beginAccess(v93 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterPlayedProportion, &v452, 33, 0);
  Published.projectedValue.getter(v443);
  v108 = swift_endAccess(&v452);
  v109 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v108);
  v449(v42, 1, 1, v450);
  v110 = v97;
  v111 = v445;
  v112 = v448;
  Publisher.receive<A>(on:options:)(&v452, v42, v445, v109, v442, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v439)(v99, v111);
  v113 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v113 + 16, v101);
  v114 = v441;
  v115 = Publisher<>.sink(receiveValue:)(sub_1002589EC, v113, v441, v102);
  v116 = swift_release(v113);
  v106(v110, v114, v116);
  v117 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v117);
  swift_endAccess(&v452);
  swift_release(v115);
  v118 = v438;
  swift_beginAccess(v438 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__downloadProgress, &v452, 33, 0);
  v368 = sub_10004CFD4(&qword_1009D19C8);
  v119 = v426;
  Published.projectedValue.getter(v368);
  v120 = swift_endAccess(&v452);
  v121 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v120);
  v122 = v449;
  v123 = v450;
  v449(v42, 1, 1, v450);
  v367 = (char *)sub_100030B34(&qword_1009D4E60, &qword_1009D4DA0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v124 = v427;
  v125 = v428;
  Publisher.receive<A>(on:options:)(&v452, v42, v428, v121, v367, v112);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  v366 = *(char **)(v430 + 8);
  ((void (*)(char *, uint64_t))v366)(v119, v125);
  v126 = swift_allocObject(&unk_1008F6990, 24, 7);
  v127 = v446;
  swift_unknownObjectWeakInit(v126 + 16, v446);
  v365 = sub_100030B34(&qword_1009D4E68, &qword_1009D4DA8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v128 = v429;
  v129 = Publisher<>.sink(receiveValue:)(sub_1002589F4, v126, v429, v365);
  v130 = swift_release(v126);
  v364 = *(_QWORD **)(v437 + 8);
  ((void (*)(char *, uint64_t, __n128))v364)(v124, v128, v130);
  swift_beginAccess(v117, &v452, 33, 0);
  AnyCancellable.store(in:)(v117);
  swift_endAccess(&v452);
  swift_release(v129);
  swift_beginAccess(v118 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isScrubbing, &v452, 33, 0);
  v437 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v131 = v436;
  Published.projectedValue.getter(v437);
  v132 = swift_endAccess(&v452);
  v133 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v132);
  v122(v42, 1, 1, v123);
  v134 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v135 = v369;
  v136 = v440;
  v430 = v134;
  Publisher.receive<A>(on:options:)(&v452, v42, v440, v133, v134, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  v370 = *(_QWORD *)(v370 + 8);
  ((void (*)(char *, uint64_t))v370)(v131, v136);
  v137 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v137 + 16, v127);
  v138 = swift_allocObject(&unk_1008F6AD0, 32, 7);
  *(_QWORD *)(v138 + 16) = v137;
  v139 = (void *)v438;
  *(_QWORD *)(v138 + 24) = v438;
  v140 = sub_100030B34((unint64_t *)&unk_1009D4E80, &qword_1009D4D98, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v141 = v139;
  v438 = (uint64_t)v141;
  v142 = v371;
  v143 = Publisher<>.sink(receiveValue:)(sub_100258A00, v138, v371, v140);
  v144 = swift_release(v138);
  v145 = *(void (**)(char *, uint64_t, __n128))(v372 + 8);
  v145(v135, v142, v144);
  v146 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v146);
  swift_endAccess(&v452);
  swift_release(v143);
  swift_beginAccess(&v141[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isSkipping], &v452, 33, 0);
  v147 = v131;
  Published.projectedValue.getter(v437);
  v148 = swift_endAccess(&v452);
  v149 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v148);
  v150 = v449;
  v449(v42, 1, 1, v450);
  v151 = v440;
  v152 = v134;
  v153 = v448;
  Publisher.receive<A>(on:options:)(&v452, v42, v440, v149, v152, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v370)(v147, v151);
  v154 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v154 + 16, v446);
  v155 = Publisher<>.sink(receiveValue:)(sub_100258A08, v154, v142, v140);
  v156 = swift_release(v154);
  v145(v135, v142, v156);
  v157 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v157);
  swift_endAccess(&v452);
  swift_release(v155);
  v158 = v438;
  swift_beginAccess(v438 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__listeningSessionStartTimeProportion, &v452, 33, 0);
  v159 = v426;
  Published.projectedValue.getter(v368);
  v160 = swift_endAccess(&v452);
  v161 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v160);
  v162 = v450;
  v150(v42, 1, 1, v450);
  v163 = v427;
  v164 = v428;
  Publisher.receive<A>(on:options:)(&v452, v42, v428, v161, v367, v153);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v366)(v159, v164);
  v165 = swift_allocObject(&unk_1008F6990, 24, 7);
  v166 = v446;
  swift_unknownObjectWeakInit(v165 + 16, v446);
  v167 = v429;
  v168 = v163;
  v169 = Publisher<>.sink(receiveValue:)(sub_100258A10, v165, v429, v365);
  v170 = swift_release(v165);
  ((void (*)(char *, uint64_t, __n128))v364)(v168, v167, v170);
  swift_beginAccess(v157, &v452, 33, 0);
  v171 = v157;
  AnyCancellable.store(in:)(v157);
  swift_endAccess(&v452);
  swift_release(v169);
  v172 = v158;
  swift_beginAccess(v158 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playButtonState, &v452, 33, 0);
  v173 = sub_10004CFD4((uint64_t *)&unk_1009D19B0);
  v174 = v373;
  Published.projectedValue.getter(v173);
  v175 = swift_endAccess(&v452);
  v176 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v175);
  v150(v42, 1, 1, v162);
  v177 = sub_100030B34((unint64_t *)&unk_1009D4E90, &qword_1009D4D80, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v178 = v374;
  v179 = v375;
  v180 = v448;
  Publisher.receive<A>(on:options:)(&v452, v42, v375, v176, v177, v448);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v376 + 8))(v174, v179);
  v181 = swift_allocObject(&unk_1008F6990, 24, 7);
  v182 = v166;
  swift_unknownObjectWeakInit(v181 + 16, v166);
  v183 = sub_100030B34((unint64_t *)&unk_1009DBFD0, &qword_1009D4D88, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v184 = v377;
  v185 = Publisher<>.sink(receiveValue:)(sub_100258A18, v181, v377, v183);
  v186 = swift_release(v181);
  (*(void (**)(char *, uint64_t, __n128))(v378 + 8))(v178, v184, v186);
  swift_beginAccess(v171, &v452, 33, 0);
  AnyCancellable.store(in:)(v171);
  swift_endAccess(&v452);
  swift_release(v185);
  swift_beginAccess(v172 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipBackwardInterval, &v452, 33, 0);
  v187 = v444;
  Published.projectedValue.getter(v443);
  v188 = swift_endAccess(&v452);
  v189 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v188);
  v190 = v449;
  v449(v42, 1, 1, v450);
  v191 = v434;
  v192 = v445;
  v193 = v442;
  Publisher.receive<A>(on:options:)(&v452, v42, v445, v189, v442, v180);
  sub_100010960((uint64_t)v42, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v439)(v187, v192);
  v194 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v194 + 16, v182);
  v195 = v441;
  v196 = Publisher<>.sink(receiveValue:)(sub_100258A20, v194, v441, v435);
  v197 = swift_release(v194);
  v198 = v195;
  v199 = v425;
  v425(v191, v198, v197);
  v200 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v200);
  swift_endAccess(&v452);
  swift_release(v196);
  swift_beginAccess(v172 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipForwardInterval, &v452, 33, 0);
  v202 = v443;
  v201 = v444;
  Published.projectedValue.getter(v443);
  v203 = swift_endAccess(&v452);
  v204 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v203);
  v205 = (uint64_t)v42;
  v424 = v42;
  v206 = v450;
  v190(v42, 1, 1, v450);
  v207 = v434;
  v208 = v445;
  Publisher.receive<A>(on:options:)(&v452, v205, v445, v204, v193, v448);
  sub_100010960(v205, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v439)(v201, v208);
  v209 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v209 + 16, v182);
  v210 = v441;
  v211 = Publisher<>.sink(receiveValue:)(sub_100258A5C, v209, v441, v435);
  v212 = swift_release(v209);
  v213 = v207;
  v199(v207, v210, v212);
  v214 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v214);
  swift_endAccess(&v452);
  swift_release(v211);
  v215 = (void *)v438;
  swift_beginAccess(v438 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skippingCumulativeDelta, &v452, 33, 0);
  v216 = v444;
  Published.projectedValue.getter(v202);
  v217 = swift_endAccess(&v452);
  v218 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v217);
  v219 = (uint64_t)v424;
  v220 = v206;
  v221 = v206;
  v222 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v449;
  v449(v424, 1, 1, v220);
  v223 = v445;
  v224 = v448;
  Publisher.receive<A>(on:options:)(&v452, v219, v445, v218, v442, v448);
  sub_100010960(v219, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v439)(v216, v223);
  v225 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v225 + 16, v182);
  v226 = swift_allocObject(&unk_1008F6AF8, 32, 7);
  *(_QWORD *)(v226 + 16) = v225;
  *(_QWORD *)(v226 + 24) = v215;
  v227 = v215;
  v439 = v227;
  v228 = v441;
  v229 = Publisher<>.sink(receiveValue:)(sub_100258A9C, v226, v441, v435);
  v230 = swift_release(v226);
  v425(v213, v228, v230);
  v231 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v231);
  swift_endAccess(&v452);
  swift_release(v229);
  swift_beginAccess(&v227[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__supplementalContents], &v452, 33, 0);
  v232 = sub_10004CFD4(&qword_1009D1980);
  v233 = v379;
  Published.projectedValue.getter(v232);
  v234 = swift_endAccess(&v452);
  v235 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v234);
  v236 = v219;
  v237 = v219;
  v238 = v221;
  v222(v237, 1, 1, v221);
  v239 = sub_100030B34((unint64_t *)&unk_1009D4B00, (uint64_t *)&unk_1009D4D70, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v240 = v380;
  v241 = v381;
  v242 = v224;
  Publisher.receive<A>(on:options:)(&v452, v236, v381, v235, v239, v224);
  v243 = v236;
  sub_100010960(v236, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v382 + 8))(v233, v241);
  v244 = swift_allocObject(&unk_1008F6990, 24, 7);
  v245 = v446;
  swift_unknownObjectWeakInit(v244 + 16, v446);
  v246 = sub_100030B34((unint64_t *)&unk_1009D4B10, (uint64_t *)&unk_1009D4AF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v247 = v383;
  v248 = Publisher<>.sink(receiveValue:)(sub_100258AA4, v244, v383, v246);
  v249 = swift_release(v244);
  (*(void (**)(char *, uint64_t, __n128))(v384 + 8))(v240, v247, v249);
  swift_beginAccess(v231, &v452, 33, 0);
  AnyCancellable.store(in:)(v231);
  swift_endAccess(&v452);
  swift_release(v248);
  v250 = v439;
  swift_beginAccess(&v439[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playbackRate], &v452, 33, 0);
  v251 = sub_10004CFD4(&qword_1009D19A8);
  v252 = v386;
  Published.projectedValue.getter(v251);
  v253 = swift_endAccess(&v452);
  v254 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v253);
  v255 = v243;
  v449((char *)v243, 1, 1, v238);
  v256 = sub_100030B34(&qword_1009D4EA0, &qword_1009D4D60, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v257 = v387;
  v258 = v255;
  v259 = v255;
  v260 = v388;
  Publisher.receive<A>(on:options:)(&v452, v258, v388, v254, v256, v242);
  sub_100010960(v259, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v389 + 8))(v252, v260);
  v261 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v261 + 16, v245);
  v262 = sub_100030B34(&qword_1009D4EA8, &qword_1009D4D68, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v263 = v390;
  v264 = Publisher<>.sink(receiveValue:)(sub_100258AAC, v261, v390, v262);
  v265 = swift_release(v261);
  (*(void (**)(char *, uint64_t, __n128))(v391 + 8))(v257, v263, v265);
  swift_beginAccess(v231, &v452, 33, 0);
  AnyCancellable.store(in:)(v231);
  swift_endAccess(&v452);
  swift_release(v264);
  swift_beginAccess(&v250[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playedInterval], &v452, 33, 0);
  v266 = v443;
  v267 = v444;
  Published.projectedValue.getter(v443);
  swift_endAccess(&v452);
  v268 = v250;
  swift_beginAccess(&v250[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__toPlayInterval], &v452, 33, 0);
  v269 = v385;
  Published.projectedValue.getter(v266);
  swift_endAccess(&v452);
  swift_beginAccess(&v250[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isLoadingResources], &v452, 33, 0);
  v271 = v436;
  v270 = v437;
  Published.projectedValue.getter(v437);
  swift_endAccess(&v452);
  swift_beginAccess(&v250[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isStalling], &v452, 33, 0);
  v272 = v392;
  Published.projectedValue.getter(v270);
  swift_endAccess(&v452);
  v273 = v393;
  v274 = Publishers.CombineLatest4.init(_:_:_:_:)(v267, v269, v271, v272, v445, v445, v440, v440, v442, v442, v430, v430);
  v275 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v274);
  v449((char *)v259, 1, 1, v450);
  v276 = sub_100030B34(&qword_1009D4EB0, &qword_1009D4D50, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v277 = v394;
  v278 = v395;
  v279 = v448;
  Publisher.receive<A>(on:options:)(&v452, v259, v395, v275, v276, v448);
  sub_100010960(v259, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v396 + 8))(v273, v278);
  v280 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v280 + 16, v446);
  v281 = swift_allocObject(&unk_1008F6B20, 32, 7);
  *(_QWORD *)(v281 + 16) = v280;
  *(_QWORD *)(v281 + 24) = v268;
  v282 = swift_allocObject(&unk_1008F6B48, 32, 7);
  *(_QWORD *)(v282 + 16) = sub_100258AE4;
  *(_QWORD *)(v282 + 24) = v281;
  v283 = sub_100030B34(&qword_1009D4EB8, &qword_1009D4D58, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v284 = v268;
  v285 = v397;
  v286 = Publisher<>.sink(receiveValue:)(sub_100258B10, v282, v397, v283);
  v287 = swift_release(v282);
  (*(void (**)(char *, uint64_t, __n128))(v398 + 8))(v277, v285, v287);
  v288 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v288);
  swift_endAccess(&v452);
  swift_release(v286);
  swift_beginAccess(&v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__audiobookTitle], &v452, 33, 0);
  v289 = sub_10004CFD4(&qword_1009D19E0);
  v290 = v399;
  Published.projectedValue.getter(v289);
  swift_endAccess(&v452);
  swift_beginAccess(&v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__authorName], &v452, 33, 0);
  v291 = v400;
  Published.projectedValue.getter(v289);
  swift_endAccess(&v452);
  swift_beginAccess(&v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterTitle], &v452, 33, 0);
  v292 = v401;
  Published.projectedValue.getter(v289);
  swift_endAccess(&v452);
  swift_beginAccess(&v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPreview], &v452, 33, 0);
  v293 = v436;
  Published.projectedValue.getter(v437);
  swift_endAccess(&v452);
  v294 = sub_100030B34((unint64_t *)&unk_1009DBFF0, &qword_1009DE380, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v295 = v402;
  v296 = Publishers.CombineLatest4.init(_:_:_:_:)(v290, v291, v292, v293, v404, v404, v404, v440, v294, v294, v294, v430);
  v297 = v275;
  v452 = (id)static OS_dispatch_queue.main.getter(v296);
  v299 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v449;
  v298 = v450;
  v449((char *)v259, 1, 1, v450);
  v300 = sub_100030B34(&qword_1009D4EC0, &qword_1009D4D40, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v301 = v403;
  v302 = v405;
  v303 = v279;
  Publisher.receive<A>(on:options:)(&v452, v259, v405, v297, v300, v279);
  sub_100010960(v259, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v406 + 8))(v295, v302);
  v304 = swift_allocObject(&unk_1008F6990, 24, 7);
  v305 = v446;
  swift_unknownObjectWeakInit(v304 + 16, v446);
  v306 = swift_allocObject(&unk_1008F6B70, 32, 7);
  *(_QWORD *)(v306 + 16) = sub_100258B40;
  *(_QWORD *)(v306 + 24) = v304;
  v307 = sub_100030B34((unint64_t *)&unk_1009D4EC8, &qword_1009D4D48, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v308 = v407;
  v309 = Publisher<>.sink(receiveValue:)(sub_100258B48, v306, v407, v307);
  v310 = swift_release(v306);
  (*(void (**)(char *, uint64_t, __n128))(v408 + 8))(v301, v308, v310);
  v311 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v311);
  swift_endAccess(&v452);
  swift_release(v309);
  v439 = v284;
  swift_beginAccess(&v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerRemainingTime], &v452, 33, 0);
  v312 = v444;
  Published.projectedValue.getter(v443);
  swift_endAccess(&v452);
  v313 = &v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerSelectedOption];
  swift_beginAccess(&v284[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerSelectedOption], &v452, 33, 0);
  v441 = sub_10004CFD4((uint64_t *)&unk_1009D1990);
  v314 = v431;
  Published.projectedValue.getter(v441);
  swift_endAccess(&v452);
  v440 = sub_100030B34(&qword_1009D4ED8, &qword_1009D4D20, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v315 = v409;
  v316 = Publishers.CombineLatest.init(_:_:)(v312, v314, v445, v433, v442, v440);
  v317 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v316);
  v299(v259, 1, 1, v298);
  v438 = sub_100030B34(&qword_1009D4EE0, &qword_1009D4D28, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v318 = v410;
  v319 = v432;
  Publisher.receive<A>(on:options:)(&v452, v259, v432, v317, v438, v303);
  sub_100010960(v259, (uint64_t *)&unk_1009D4AE0);

  v437 = *(_QWORD *)(v411 + 8);
  ((void (*)(char *, uint64_t))v437)(v315, v319);
  v320 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v320 + 16, v305);
  v321 = swift_allocObject(&unk_1008F6B98, 32, 7);
  *(_QWORD *)(v321 + 16) = sub_100258B50;
  *(_QWORD *)(v321 + 24) = v320;
  v322 = sub_100030B34(&qword_1009D4EE8, (uint64_t *)&unk_1009D4D30, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v323 = v412;
  v324 = Publisher<>.sink(receiveValue:)(sub_100258B58, v321, v412, v322);
  v325 = swift_release(v321);
  v326 = *(void (**)(char *, uint64_t, __n128))(v413 + 8);
  v326(v318, v323, v325);
  v327 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v327);
  swift_endAccess(&v452);
  swift_release(v324);
  v328 = v439;
  swift_beginAccess(&v439[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerInitialDuration], &v452, 33, 0);
  v329 = v444;
  Published.projectedValue.getter(v443);
  swift_endAccess(&v452);
  swift_beginAccess(v313, &v452, 33, 0);
  v330 = v431;
  Published.projectedValue.getter(v441);
  swift_endAccess(&v452);
  v331 = Publishers.CombineLatest.init(_:_:)(v329, v330, v445, v433, v442, v440);
  v332 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v331);
  v333 = (uint64_t)v424;
  v449(v424, 1, 1, v450);
  v334 = v432;
  Publisher.receive<A>(on:options:)(&v452, v333, v432, v332, v438, v448);
  sub_100010960(v333, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v437)(v315, v334);
  v335 = swift_allocObject(&unk_1008F6990, 24, 7);
  v336 = v446;
  swift_unknownObjectWeakInit(v335 + 16, v446);
  v337 = swift_allocObject(&unk_1008F6BC0, 32, 7);
  *(_QWORD *)(v337 + 16) = sub_100258B80;
  *(_QWORD *)(v337 + 24) = v335;
  v338 = Publisher<>.sink(receiveValue:)(sub_100258ED8, v337, v323, v322);
  v339 = swift_release(v337);
  v326(v318, v323, v339);
  v340 = v447;
  swift_beginAccess(v447, &v452, 33, 0);
  AnyCancellable.store(in:)(v340);
  swift_endAccess(&v452);
  swift_release(v338);
  swift_beginAccess(&v328[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__downloadState], &v452, 33, 0);
  v341 = sub_10004CFD4(&qword_1009D19C0);
  v342 = v414;
  Published.projectedValue.getter(v341);
  swift_endAccess(&v452);
  swift_beginAccess(&v328[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__buyButtonProvider], &v452, 33, 0);
  v343 = sub_10004CFD4((uint64_t *)&unk_1009DC000);
  v344 = v416;
  Published.projectedValue.getter(v343);
  swift_endAccess(&v452);
  v345 = sub_100030B34(&qword_1009D4EF0, &qword_1009D4D08, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v346 = sub_100030B34(&qword_1009D4EF8, &qword_1009D4D00, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v347 = v415;
  v348 = Publishers.CombineLatest.init(_:_:)(v342, v344, v418, v420, v345, v346);
  v349 = v451;
  v452 = (id)static OS_dispatch_queue.main.getter(v348);
  v449((char *)v333, 1, 1, v450);
  v350 = sub_100030B34(&qword_1009D4F00, &qword_1009D4D10, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v351 = v417;
  v352 = v419;
  Publisher.receive<A>(on:options:)(&v452, v333, v419, v349, v350, v448);
  sub_100010960(v333, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v421 + 8))(v347, v352);
  v353 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v353 + 16, v336);
  v354 = swift_allocObject(&unk_1008F6BE8, 32, 7);
  *(_QWORD *)(v354 + 16) = sub_100258B88;
  *(_QWORD *)(v354 + 24) = v353;
  v355 = sub_100030B34(&qword_1009D4F08, &qword_1009D4D18, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v356 = v422;
  v357 = Publisher<>.sink(receiveValue:)(sub_100258B90, v354, v422, v355);
  v358 = swift_release(v354);
  (*(void (**)(char *, uint64_t, __n128))(v423 + 8))(v351, v356, v358);
  swift_beginAccess(v340, &v452, 33, 0);
  AnyCancellable.store(in:)(v340);
  swift_endAccess(&v452);
  *(_QWORD *)&result = swift_release(v357).n128_u64[0];
  return result;
}

void sub_10024FF48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  _QWORD v16[5];
  uint64_t v17;

  v1 = (void *)objc_opt_self(UIDeferredMenuElement);
  v2 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v16[4] = sub_1002589C4;
  v17 = v2;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10033AE6C;
  v16[3] = &unk_1008F6A98;
  v3 = _Block_copy(v16);
  v4 = objc_msgSend(v1, "elementWithUncachedProvider:", v3, swift_release(v17).n128_f64[0]);
  _Block_release(v3);
  v5 = sub_10024C720();
  v6 = *(id *)&v5[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];

  objc_msgSend(v6, "setShowsMenuAsPrimaryAction:", 1);
  v7 = sub_10024C720();
  v8 = *(id *)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];

  v9 = (void *)objc_opt_self(UIMenu);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v11 + 32) = v4;
  v16[0] = v11;
  specialized Array._endMutation()(v11);
  v12 = v16[0];
  sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v13 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v15 = objc_msgSend(v9, "bk_menuWithChildren:", isa);

  objc_msgSend(v8, "setMenu:", v15);
}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v3;
  id v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  double v10;
  void *v11;
  void *v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewWillAppear:", a1);
  v3 = sub_10024C720();
  v4 = *(id *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];

  objc_msgSend(v4, "setContentMode:", objc_msgSend(v1, "coverContentMode"));
  v5 = sub_10024C720();
  v6 = *(id *)&v5[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];

  v7 = *(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_100714828);
  v9 = swift_getKeyPath(&unk_100714850);
  static Published.subscript.getter(&v12, v7, KeyPath, v9);
  swift_release(KeyPath);
  *(_QWORD *)&v10 = swift_release(v9).n128_u64[0];
  v11 = v12;
  objc_msgSend(v6, "setImage:", v12, v10);

}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  char *v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, "viewDidAppear:", a1);
  v3 = sub_10024C720();
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView], "setMarqueeEnabled:withOptions:", 1, 0);
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView], "setMarqueeEnabled:withOptions:", 1, 0);

}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  void *v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1);
  v3 = (void *)sub_1003B0800();
  if (v3)
  {
    v4 = v3;
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v3);

  }
}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.viewSafeAreaInsetsDidChange()()
{
  void *v0;
  char *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, "viewSafeAreaInsetsDidChange");
  v1 = sub_10024C720();
  objc_msgSend(v1, "setNeedsLayout");

}

uint64_t AudiobookNowPlayingFullscreenTouchViewController.supportedInterfaceOrientations.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2)
    return 30;
  else
    return 2;
}

char *sub_1002506D0()
{
  uint64_t v0;
  char *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (char *)sub_1003B0CF0();
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  v3 = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    v5 = v1;
    swift_retain(v4);
    swift_unknownObjectRelease(v3);
    v3 = swift_unknownObjectWeakLoadStrong(v4 + 24);
    swift_release(v4);
  }
  else
  {
    v6 = v1;
  }
  v7 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler]+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
    swift_retain(v9);
    swift_unknownObjectRelease(v8);
    swift_unknownObjectWeakAssign(v9 + 24, v3);

    swift_release(v9);
  }
  else
  {

  }
  swift_unknownObjectRelease(v3);
  return v1;
}

id sub_1002507FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;

  v2 = dispatch thunk of AudiobookAnalyticsRecorder.forceEndPlaySession()(a1);
  v3 = dispatch thunk of AudiobookAnalyticsRecorder.trackerHost.getter(v2);
  if (v3)
  {
    v4 = v3;
    swift_unknownObjectRelease(v3);
    if (v4 == v1)
      dispatch thunk of AudiobookAnalyticsRecorder.trackerHost.setter(0);
  }
  result = *(id *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer);
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

uint64_t sub_10025087C()
{
  char *v0;
  uint64_t v1;

  v0 = sub_10024C720();
  v1 = sub_1003471C8();

  return v1;
}

uint64_t sub_1002508AC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  _BYTE v27[24];

  v5 = type metadata accessor for ContextActionSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v10 = (void *)result;
    v11 = *(void **)(result + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler);
    swift_unknownObjectRetain(v11);
    v12 = sub_10024C720();
    v13 = *(id *)&v12[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];

    v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ContextActionSource.unknown(_:), v5);
    ContextActionSource.key.getter(v14);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    v18 = objc_msgSend(v11, "contextMenuItemsFor:from:actionSource:", v10, v13, v17);

    swift_unknownObjectRelease(v11);
    v19 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0)
        v23 = v20;
      else
        v23 = v20 & 0xFFFFFFFFFFFFFF8;
      v24 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
      v25 = swift_bridgeObjectRetain(v20);
      v22 = _bridgeCocoaArray<A>(_:)(v23, v24, v25);
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v21 = swift_bridgeObjectRetain(v20);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v21);
      sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
      v22 = v20;
    }
    swift_bridgeObjectRelease(v20);
    a1(v22);

    return swift_bridgeObjectRelease(v22);
  }
  return result;
}

id AudiobookNowPlayingFullscreenTouchViewController.ba_analyticsTracker.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "ba_analyticsTracker");
}

void AudiobookNowPlayingFullscreenTouchViewController.ba_analyticsTracker.setter(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "ba_setAnalyticsTracker:", a1);
  sub_100250C24();

}

void sub_100250C24()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;

  v1 = type metadata accessor for ContextActionSource(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "ba_effectiveAnalyticsTracker");
  if (v5)
  {
    v6 = v5;
    v7 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler];
    v8 = sub_10024C720();
    v9 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ContextActionSource.unknown(_:), v1);
    ContextActionSource.key.getter(v9);
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v13 = objc_msgSend(v7, "analyticsAssetPropertyProviderFor:actionSource:", v8, v12);

    if (v13)
    {
      v14 = sub_10024C720();
      v15 = *(id *)&v14[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];

      objc_msgSend(v15, "setupAppAnalyticsReportingUsingTracker:withPropertyProvider:", v6, v13);
      swift_unknownObjectRelease(v13);
      v6 = v15;
    }

  }
}

void (*AudiobookNowPlayingFullscreenTouchViewController.ba_analyticsTracker.modify(objc_super **a1))(objc_super **a1, char a2)
{
  objc_class *v1;
  objc_super *v3;
  uint64_t ObjectType;

  v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].super_class = v1;
  ObjectType = swift_getObjectType();
  v3[4].receiver = (id)ObjectType;
  v3->receiver = v1;
  v3->super_class = (Class)ObjectType;
  v3[3].receiver = -[objc_super ba_analyticsTracker](v3, "ba_analyticsTracker");
  return sub_100250E20;
}

void sub_100250E20(objc_super **a1, char a2)
{
  objc_super *v2;
  id receiver;
  objc_class *v4;
  Class super_class;

  v2 = *a1;
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v4 = (objc_class *)(*a1)[4].receiver;
  if ((a2 & 1) != 0)
  {
    v2[1].receiver = super_class;
    v2[1].super_class = v4;
    objc_msgSendSuper2(v2 + 1, "ba_setAnalyticsTracker:", receiver);

  }
  else
  {
    v2[2].receiver = super_class;
    v2[2].super_class = v4;
    objc_msgSendSuper2(v2 + 2, "ba_setAnalyticsTracker:", receiver);

    sub_100250C24();
  }
  free(v2);
}

void sub_100250EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  id v5;
  uint64_t KeyPath;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = sub_10024C720();
  v5 = *(id *)&v4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel];

  KeyPath = swift_getKeyPath(&unk_100714BE0);
  v7 = swift_getKeyPath(&unk_100714C08);
  static Published.subscript.getter(&v22, a1, KeyPath, v7);
  swift_release(KeyPath);
  *(_QWORD *)&v8 = swift_release(v7).n128_u64[0];
  if (v22 == 1)
  {
    v9 = swift_getKeyPath(&unk_100714E68);
    v10 = swift_getKeyPath(&unk_100714E90);
    static Published.subscript.getter(&v22, a1, v9, v10);
    swift_release(v9);
    swift_release(v10);
    v11 = v23;
    sub_100251AAC(v22, v23, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
    swift_bridgeObjectRelease(v11);
  }
  else if (objc_msgSend(*(id *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "audiobookTimeRemainingMode", v8))
  {
    v12 = sub_10044B6D4(1);
    v14 = v13;
    sub_100251AAC(v12, v13, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
    swift_bridgeObjectRelease(v14);
    v15 = v5;
    sub_10044B6D4(0);
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v15, "setAccessibilityLabel:", v18);

  }
  else
  {
    v19 = sub_1001EF350();
    v21 = v20;
    sub_100251AAC(v19, v20, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v5, "setAccessibilityLabel:", 0);
  }

}

void sub_100251080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  __int128 v12;
  uint64_t v13;
  NSObject *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  unint64_t v29;
  UIAccessibilityTraits v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjCClassFromMetadata;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  NSString v57;
  uint64_t v58;
  void *v59;
  void *v60;
  UIAccessibilityTraits v61;
  id v62;
  unint64_t v63;
  UIAccessibilityTraits v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  UIMenuElementSize v70;
  id v71;
  __n128 v72;
  UIMenuElementSize v73;
  Swift::String v74;
  Class isa;
  uint64_t v76;
  uint64_t v77;
  id v78;
  __n128 v79;
  Swift::OpaquePointer v80;
  __int128 v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  UIAccessibilityTraits v91;
  uint64_t ObjectType;
  uint64_t v93;
  uint64_t v94;
  double v95[2];
  uint64_t v96;
  UIImage_optional v97;

  v94 = a1;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for Locale(0);
  v88 = *(_QWORD *)(v2 - 8);
  v89 = v2;
  v3 = __chkstk_darwin(v2);
  v85 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v87 = (char *)&v81 - v5;
  v86 = type metadata accessor for String.LocalizationValue(0);
  v84 = *(_QWORD *)(v86 - 8);
  v6 = __chkstk_darwin(v86);
  v82 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v83 = (char *)&v81 - v8;
  v93 = v1;
  v9 = sub_10024C720();
  v90 = *(id *)&v9[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton];

  v96 = (uint64_t)_swiftEmptyArrayStorage;
  v10 = 9;
  v11 = &qword_1008EFE40;
  v91 = UIAccessibilityTraitSelected;
  *(_QWORD *)&v12 = 134217984;
  v81 = v12;
  v13 = v94;
  do
  {
    v19 = *v11++;
    v18 = v19;
    v20 = v19 == 8;
    if (v19 < 8)
    {
      v21 = sub_100597994(v18);
      v23 = v22;
      sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
      v24 = String._bridgeToObjectiveC()();
      v25 = swift_allocObject(&unk_1008F6990, 24, 7);
      swift_unknownObjectWeakInit(v25 + 16, v93);
      v26 = (_QWORD *)swift_allocObject(&unk_1008F6E90, 40, 7);
      v26[2] = v25;
      v26[3] = v18;
      v26[4] = ObjectType;
      v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, 0, 0, v24, 0, 0, 0, 0, sub_100258D84, v26);
      objc_msgSend(v27, "setState:", v18 == v13);
      if (v18 == v13)
      {
        v28 = v27;
        v29 = (unint64_t)objc_msgSend(v28, "accessibilityTraits");
        v30 = v91;
        if ((v91 & ~v29) == 0)
          v30 = 0;
        objc_msgSend(v28, "setAccessibilityTraits:", v30 | v29, v81);

      }
      v14 = v27;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v16 >= v15 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized Array._endMutation()(v17);
LABEL_5:

      goto LABEL_6;
    }
    if (!v20)
    {
      if (qword_1009CDD28 != -1)
        swift_once(&qword_1009CDD28, sub_10024C6A4);
      v31 = type metadata accessor for Logger(0);
      v32 = sub_100048F64(v31, (uint64_t)qword_1009D4B60);
      v14 = Logger.logObject.getter(v32);
      v33 = static os_log_type_t.error.getter(v14);
      if (os_log_type_enabled(v14, v33))
      {
        v34 = swift_slowAlloc(12, -1);
        *(_DWORD *)v34 = v81;
        *(_QWORD *)(v34 + 4) = v18;
        _os_log_impl((void *)&_mh_execute_header, v14, v33, "Unexpected sleep option tag %ld", (uint8_t *)v34, 0xCu);
        swift_slowDealloc(v34, -1, -1);
      }
      goto LABEL_5;
    }
LABEL_6:
    --v10;
  }
  while (v10);
  v35 = v83;
  v36 = String.LocalizationValue.init(stringLiteral:)(0x6D6F74737543, 0xE600000000000000);
  v37 = v87;
  static Locale.current.getter(v36);
  v38 = v84;
  v39 = v82;
  v40 = v86;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v82, v35, v86);
  v41 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v41);
  v43 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v45 = v88;
  v44 = v89;
  v46 = v85;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v37, v89);
  v47 = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, v43, v46, "Custom", 6, 2);
  v49 = v48;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v44);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v40);
  if (v94 == 8)
  {
    v50 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
    objc_msgSend(v50, "setUnitsStyle:", 3);
    objc_msgSend(v50, "setAllowedUnits:", 96);
    v51 = *(_QWORD *)(v93 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
    KeyPath = swift_getKeyPath(&unk_100714B98);
    v53 = swift_getKeyPath(&unk_100714BC0);
    static Published.subscript.getter(v95, v51, KeyPath, v53);
    swift_release(KeyPath);
    swift_release(v53);
    v54 = objc_msgSend(v50, "stringFromTimeInterval:", v95[0]);
    if (v54)
    {
      v55 = v54;
      swift_bridgeObjectRelease(v49);
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v49 = v56;

    }
  }
  sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
  v57 = String._bridgeToObjectiveC()();
  v58 = swift_allocObject(&unk_1008F6990, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16, v93);
  v59 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v47, v49, 0, 0, 0, 0, v57, 0, 0, 0, 0, sub_100258D50, v58);
  v60 = v59;
  if (v94 == 8)
  {
    objc_msgSend(v59, "setState:", 1);
    v61 = UIAccessibilityTraitSelected;
    v62 = v60;
    v63 = (unint64_t)objc_msgSend(v62, "accessibilityTraits");
    if ((v61 & ~v63) != 0)
      v64 = v61;
    else
      v64 = 0;
    objc_msgSend(v62, "setAccessibilityTraits:", v64 | v63, (_QWORD)v81);

  }
  v65 = v60;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
  v67 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
  v68 = v90;
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
  specialized Array._endMutation()(v69);
  v70 = v96;
  if ((unint64_t)v96 >> 62)
  {
    if (v96 < 0)
      v76 = v96;
    else
      v76 = v96 & 0xFFFFFFFFFFFFFF8;
    v77 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    v78 = v68;
    v79 = swift_bridgeObjectRetain(v70);
    v73 = _bridgeCocoaArray<A>(_:)(v76, v77, v79);
    swift_bridgeObjectRelease(v70);
  }
  else
  {
    v71 = v68;
    v72 = swift_bridgeObjectRetain(v70);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v72);
    sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    v73 = v70;
  }
  swift_bridgeObjectRelease(v70);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v74._countAndFlagsBits = 0;
  v74._object = (void *)0xE000000000000000;
  v97.value.super.isa = 0;
  v97.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v74, (Swift::String_optional)0, v97, 0, 0xFFFFFFFFFFFFFFFFLL, v73, v80).super.super.isa;
  objc_msgSend(v68, "setMenu:", isa);

  objc_msgSend(v68, "setShowsMenuAsPrimaryAction:", 1);
}

void sub_100251868(float a1)
{
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  NSString v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v2 = sub_10024C720();
  v3 = *(id *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed];

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v5 + 56) = &type metadata for Float;
  *(_QWORD *)(v5 + 64) = &protocol witness table for Float;
  *(float *)(v5 + 32) = a1;
  String.init(format:_:)(26405, 0xE200000000000000, v5);
  v14 = v6;
  v7._countAndFlagsBits = 38851;
  v7._object = (void *)0xA200000000000000;
  String.append(_:)(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v3, "setTitle:forState:", v8, 0);

  v9 = sub_10024C720();
  v10 = *(id *)&v9[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed];

  sub_1001EE0E4(a1);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v10, "setAccessibilityValue:", v13);

}

void sub_1002519BC(int a1)
{
  char *v2;
  id v3;
  char *v4;
  char **v5;
  id v6;

  v2 = sub_10024C720();
  v3 = *(id *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_loadingSpinner];

  v4 = sub_10024C720();
  v6 = *(id *)&v4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played];

  if (((objc_msgSend(v6, "isHidden") ^ a1) & 1) != 0
    || ((objc_msgSend(v3, "isHidden") ^ a1) & 1) == 0)
  {
    if ((a1 & 1) != 0)
      v5 = &selRef_startAnimating;
    else
      v5 = &selRef_stopAnimating;
    objc_msgSend(v6, "setHidden:", a1 & 1);
    objc_msgSend(v3, "setHidden:", (a1 & 1) == 0);
    objc_msgSend(v3, *v5);
  }

}

void sub_100251AAC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char *v14;
  id v15;
  NSString v16;
  char *v17;

  v6 = sub_10024C720();
  v7 = *(id *)&v6[*a3];

  v8 = objc_msgSend(v7, "text");
  if (!v8)
  {
LABEL_7:
    v14 = sub_10024C720();
    v15 = *(id *)&v14[*a3];

    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setText:", v16);

    v17 = sub_10024C720();
    objc_msgSend(v17, "setNeedsLayout");

    return;
  }
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (v9 != a1 || v11 != a2)
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, a1, a2, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) != 0)
      return;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease(a2);
}

void sub_100251C14(char a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;

  v5 = type metadata accessor for UIAccessibility.BooksAccessibilityAnnouncementIdentifier(0);
  v61 = *(_QWORD *)(v5 - 8);
  v62 = (char *)v5;
  __chkstk_darwin(v5);
  v60 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (char *)type metadata accessor for Locale(0);
  v7 = *((_QWORD *)v63 - 1);
  v8 = __chkstk_darwin(v63);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v59 - v11;
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v59 - v18;
  if ((a2 & 1) != 0)
  {
    v62 = sub_10024C720();
    v20 = String.LocalizationValue.init(stringLiteral:)(0x656C706D6153, 0xE600000000000000);
    static Locale.current.getter(v20);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    v21 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v24 = v63;
    (*(void (**)(char *, char *, char *))(v7 + 16))(v10, v12, v63);
    v25 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v23, v10, "String that appears below scrubber when listening to an audiobook preview", 73, 2);
    v27 = v26;
    (*(void (**)(char *, char *))(v7 + 8))(v12, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v28 = v62;
    v29 = (uint64_t *)&v62[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong];
    v30 = *(_QWORD *)&v62[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong + 8];
    *v29 = v25;
    v29[1] = v27;
    swift_bridgeObjectRelease(v30);
    sub_10034BC48();

    return;
  }
  if ((a1 & 1) == 0)
  {
    v41 = sub_10024C720();
    v42 = sub_10044B6D4(0);
    v43 = (uint64_t *)&v41[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong];
    v44 = *(_QWORD *)&v41[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong + 8];
    *v43 = v42;
    v43[1] = v45;
    swift_bridgeObjectRelease(v44);
    sub_10034BC48();

    v63 = sub_10024C720();
    v46 = sub_10044B6D4(1);
    v47 = (uint64_t *)&v63[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort];
    v48 = *(_QWORD *)&v63[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort + 8];
    *v47 = v46;
    v47[1] = v49;
    swift_bridgeObjectRelease(v48);
    sub_10034BC48();

    return;
  }
  v31 = v2;
  v32 = sub_100252054();
  v34 = v33;
  v35 = sub_10024C720();
  v36 = (uint64_t *)&v35[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong];
  v37 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong + 8];
  *v36 = v32;
  v36[1] = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v37);
  sub_10034BC48();

  v38 = (uint64_t *)(v31
                  + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed);
  v39 = *(_QWORD *)(v31
                  + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed
                  + 8);
  if (v39)
  {
    if (*v38 == v32 && v39 == v34 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v38, v39, v32, v34, 0) & 1) != 0)
      goto LABEL_12;
    v40 = v38[1];
  }
  else
  {
    v40 = 0;
  }
  *v38 = v32;
  v38[1] = v34;
  swift_bridgeObjectRelease(v40);
  v51 = v60;
  v50 = v61;
  v52 = v62;
  (*(void (**)(char *, _QWORD, char *))(v61 + 104))(v60, enum case for UIAccessibility.BooksAccessibilityAnnouncementIdentifier.scrubbingSpeedChanged(_:), v62);
  swift_bridgeObjectRetain(v34);
  static UIAccessibility.bkaxAccessibilityDebounceAnnounce(_:identifier:delay:)(v32, v34, v51, 0.5);
  (*(void (**)(char *, char *))(v50 + 8))(v51, v52);
LABEL_12:
  swift_bridgeObjectRelease(v34);
  v53 = sub_10024C720();
  v54 = sub_10024C720();
  v56 = *(_QWORD *)&v54[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong];
  v55 = *(_QWORD *)&v54[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong + 8];
  swift_bridgeObjectRetain(v55);

  v57 = &v53[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort];
  v58 = *(_QWORD *)&v53[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort + 8];
  *(_QWORD *)v57 = v56;
  *((_QWORD *)v57 + 1) = v55;
  swift_bridgeObjectRelease(v58);
  sub_10034BC48();

}

uint64_t sub_100252054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _BYTE v35[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v35[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v35[-v12];
  v14 = sub_10024C720();
  v15 = *(id *)&v14[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];

  LODWORD(v14) = objc_msgSend(v15, "speed");
  switch((int)v14)
  {
    case 0:
      v16 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007B9960);
      static Locale.current.getter(v16);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
      v17 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
      v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
      v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v4, "Label in Now Playing when scrubbing audiobook at high speed", 59, 2);
      goto LABEL_7;
    case 1:
      v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007B99C0);
      static Locale.current.getter(v22);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
      v23 = type metadata accessor for BundleFinder();
      v24 = swift_getObjCClassFromMetadata(v23);
      v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v24);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
      v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v4, "Label in Now Playing when scrubbing audiobook at half of the normal speed", 73, 2);
      goto LABEL_7;
    case 2:
      v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001007B9A30);
      static Locale.current.getter(v26);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
      v27 = type metadata accessor for BundleFinder();
      v28 = swift_getObjCClassFromMetadata(v27);
      v29 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v28);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
      v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v29, v4, "Label in Now Playing when scrubbing audiobook at one-quarter of the normal speed", 80, 2);
      goto LABEL_7;
    case 3:
      v30 = String.LocalizationValue.init(stringLiteral:)(0x72635320656E6946, 0xEE00676E69626275);
      static Locale.current.getter(v30);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
      v31 = type metadata accessor for BundleFinder();
      v32 = swift_getObjCClassFromMetadata(v31);
      v33 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v32);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
      v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v33, v4, "Label in Now Playing when scrubbing audiobook at normal speed", 61, 2);
LABEL_7:
      v21 = v20;
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
      break;
    default:
      v21 = 0;
      break;
  }
  return v21;
}

uint64_t sub_1002524B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v7 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10070CCA0;
  if ((sub_10032442C(a1, *(_QWORD *)(v3 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_supportedSkipAmounts)) & 1) != 0)
  {
    v9 = swift_allocObject(v7, 112, 7);
    *(_OWORD *)(v9 + 16) = xmmword_10070FC00;
    *(_QWORD *)(v9 + 56) = &type metadata for Int;
    *(_QWORD *)(v9 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v9 + 32) = a1;
    v10 = sub_10024C80C();
    v12 = v11;
    *(_QWORD *)(v9 + 96) = &type metadata for String;
    *(_QWORD *)(v9 + 104) = sub_10002BE50();
    *(_QWORD *)(v9 + 72) = v10;
    *(_QWORD *)(v9 + 80) = v12;
    v13 = String.init(format:_:)(0x402564252ELL, 0xE500000000000000, v9);
    v15 = v14;
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_10002BE50();
  v16 = 0x73756C702ELL;
  if (v15)
    v16 = v13;
  v17 = 0xE500000000000000;
  if (v15)
    v17 = v15;
  *(_QWORD *)(v8 + 32) = v16;
  *(_QWORD *)(v8 + 40) = v17;
  return String.init(format:_:)(a2, a3, v8);
}

void sub_1002525F0(unsigned __int8 a1, int a2)
{
  _BYTE *v2;
  int v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  _BOOL4 v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  _BYTE *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  _BYTE *v20;
  uint64_t v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD *v30;

  v4 = a1;
  v5 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_downloadState;
  v6 = v2[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_downloadState];
  v7 = sub_10024C720();
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton];

  if (v6 == 3)
  {
    v9 = v8 != 0;
    if (v4 != 3)
      goto LABEL_7;
LABEL_6:
    if (((v9 ^ a2) & 1) == 0)
      return;
    goto LABEL_7;
  }
  if (v4 != 3)
  {
    v9 = v8 != 0;
    if (v6 == v4)
      goto LABEL_6;
  }
LABEL_7:
  v2[v5] = v4;
  v10 = sub_10024C720();
  v10[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadState] = v4;

  v11 = swift_allocObject(&unk_1008F6C10, 32, 7);
  *(_BYTE *)(v11 + 16) = v4;
  *(_BYTE *)(v11 + 17) = a2 & 1;
  *(_QWORD *)(v11 + 24) = v2;
  v12 = swift_allocObject(&unk_1008F6C38, 32, 7);
  *(_BYTE *)(v12 + 16) = v4;
  *(_QWORD *)(v12 + 24) = v2;
  v13 = (void *)objc_opt_self(UIView);
  if (v4 == 3)
  {
    v29 = sub_100258CAC;
    v30 = (_QWORD *)v11;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_1000147F0;
    v28 = &unk_1008F6C50;
    v14 = _Block_copy(&v25);
    v15 = v30;
    v16 = v2;
    swift_retain(v11);
    swift_release(v15);
    v17 = (_QWORD *)swift_allocObject(&unk_1008F6C88, 40, 7);
    v17[2] = v16;
    v17[3] = sub_100258CBC;
    v17[4] = v12;
    v29 = sub_100258CD0;
    v30 = v17;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004DCB4;
    v28 = &unk_1008F6CA0;
    v18 = _Block_copy(&v25);
    v19 = v30;
    v20 = v16;
  }
  else
  {
    v21 = swift_allocObject(&unk_1008F6CD8, 24, 7);
    *(_QWORD *)(v21 + 16) = v2;
    v29 = sub_100258EC8;
    v30 = (_QWORD *)v21;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_1000147F0;
    v28 = &unk_1008F6CF0;
    v14 = _Block_copy(&v25);
    v22 = v30;
    v23 = v2;
    swift_release(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_1008F6D28, 48, 7);
    v24[2] = sub_100258CAC;
    v24[3] = v11;
    v24[4] = sub_100258CBC;
    v24[5] = v12;
    v29 = sub_100258D2C;
    v30 = v24;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10004DCB4;
    v28 = &unk_1008F6D40;
    v18 = _Block_copy(&v25);
    v19 = v30;
    swift_retain(v11);
  }
  swift_retain(v12);
  swift_release(v19);
  objc_msgSend(v13, "animateWithDuration:delay:options:animations:completion:", 4, v14, v18, 0.2, 0.0);
  swift_release(v12);
  swift_release(v11);
  _Block_release(v18);
  _Block_release(v14);
}

void sub_100252914(char a1, char a2)
{
  char *v2;
  id v3;
  char *v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  char *v9;
  char *v10;
  id v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  char *v19;
  id v20;

  if (a1 == 3 || (a2 & 1) != 0)
  {
    v7 = sub_10024C720();
    v8 = *(id *)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];

    objc_msgSend(v8, "setAlpha:", 0.0);
LABEL_8:

    v10 = sub_10024C720();
    v11 = *(id *)&v10[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner];

    objc_msgSend(v11, "setAlpha:", 0.0);
    v12 = sub_10024C720();
    v20 = *(id *)&v12[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton];

    objc_msgSend(v20, "setAlpha:", 0.0);
    goto LABEL_9;
  }
  if (!a1)
  {
    v9 = sub_10024C720();
    v8 = *(id *)&v9[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];

    objc_msgSend(v8, "setAlpha:", 1.0);
    goto LABEL_8;
  }
  if (a1 == 1)
  {
    v2 = sub_10024C720();
    v3 = *(id *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];

    objc_msgSend(v3, "setAlpha:", 0.0);
    v4 = sub_10024C720();
    v5 = *(id *)&v4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner];

    objc_msgSend(v5, "setAlpha:", 0.0);
    v6 = sub_10024C720();
    v20 = *(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton];

    objc_msgSend(v20, "setAlpha:", 1.0);
  }
  else
  {
    v13 = sub_10024C720();
    v14 = *(id *)&v13[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];

    objc_msgSend(v14, "setAlpha:", 0.0);
    v15 = sub_10024C720();
    v16 = *(id *)&v15[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton];

    objc_msgSend(v16, "setAlpha:", 0.0);
    v17 = sub_10024C720();
    v18 = *(id *)&v17[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner];

    objc_msgSend(v18, "setAlpha:", 1.0);
    v19 = sub_10024C720();
    v20 = *(id *)&v19[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner];

    objc_msgSend(v20, "startAnimating");
  }
LABEL_9:

}

void sub_100252BC8(char a1)
{
  __asm { BR              X10 }
}

void sub_100252BF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id argument, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  UIAccessibilityNotifications v14;
  char *v15;
  id v16;

  v14 = UIAccessibilityLayoutChangedNotification;
  v15 = sub_10024C720();
  v16 = *(id *)&v15[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];

  UIAccessibilityPostNotification(v14, v16);
}

void sub_100252CB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v7 = (void *)objc_opt_self(UIView);
  v8 = swift_allocObject(&unk_1008F6DF0, 24, 7);
  *(_QWORD *)(v8 + 16) = a2;
  v19 = sub_100258D38;
  v20 = v8;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1000147F0;
  v18 = &unk_1008F6E08;
  v9 = _Block_copy(&v15);
  v10 = v20;
  v11 = a2;
  swift_release(v10);
  v12 = swift_allocObject(&unk_1008F6E40, 32, 7);
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  v19 = sub_10004DE04;
  v20 = v12;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_10004DCB4;
  v18 = &unk_1008F6E58;
  v13 = _Block_copy(&v15);
  v14 = v20;
  swift_retain(a4);
  swift_release(v14);
  objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 4, v9, v13, 0.2, 0.0);
  _Block_release(v13);
  _Block_release(v9);
}

void sub_100252E10()
{
  char *v0;
  uint64_t v1;
  char *v3;

  v3 = sub_10024C720();
  sub_10034A210();
  v0 = v3;
  v1 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 8];
  if (!v1)
  {
    if (v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 393] != 1)
      goto LABEL_11;
    sub_10034B320();
LABEL_10:
    v0 = v3;
    goto LABEL_11;
  }
  if (v1 == 5 || v1 == 1)
  {
    sub_10034AF18();
    goto LABEL_10;
  }
LABEL_11:

}

void sub_100252E8C(uint64_t a1, uint64_t (*a2)(), uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)();
  uint64_t v20;

  v9 = (void *)objc_opt_self(UIView);
  v19 = a2;
  v20 = a3;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1000147F0;
  v18 = &unk_1008F6D68;
  v10 = _Block_copy(&v15);
  v11 = v20;
  swift_retain(a3);
  swift_release(v11);
  v12 = swift_allocObject(&unk_1008F6DA0, 32, 7);
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  v19 = sub_100258E34;
  v20 = v12;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_10004DCB4;
  v18 = &unk_1008F6DB8;
  v13 = _Block_copy(&v15);
  v14 = v20;
  swift_retain(a5);
  swift_release(v14);
  objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 4, v10, v13, 0.2, 0.0);
  _Block_release(v13);
  _Block_release(v10);
}

id sub_100252FD4()
{
  char *v0;
  id v1;

  v0 = sub_10024C720();
  v1 = *(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton];

  return v1;
}

void sub_100253014(uint64_t a1@<X8>)
{
  void *v1;
  char *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_10024C720();
  v4 = *(id *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];

  objc_msgSend(v4, "frame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v13 = sub_10024C720();
  v14 = *(id *)&v13[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer];

  v15 = objc_msgSend(v1, "view");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "convertRect:toCoordinateSpace:", v14, v6, v8, v10, v12);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 16) = v22;
    *(_QWORD *)(a1 + 24) = v24;
    *(_BYTE *)(a1 + 32) = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10025311C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___nowPlayingView));

  sub_100010960(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonProvider, (uint64_t *)&unk_1009D4CE0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_supportedSkipAmounts));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_cancellables));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___languageSuffix
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition
                                      + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed
                                             + 8));
}

void sub_100253330(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10024C720();

    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView], "setImage:", v2);
  }
}

void sub_1002533B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  void *Strong;
  char *v9;
  void *v10;
  _BYTE v11[24];

  v4 = *a1;
  v3 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1008F6F08, 32, 7);
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    v6 = sub_1001F1574;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = a2 + 16;
  swift_beginAccess(v7, v11, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  sub_10002ACF0(v4, v3);
  if (Strong)
  {
    v9 = sub_10024C720();

    if (v4)
    {
      swift_retain(v5);
      v10 = (void *)v6();
      sub_10034B774(v10);

      sub_10002AD00((uint64_t)v6, v5);
      sub_10002AD00((uint64_t)v6, v5);
    }
    else
    {
      sub_10034B774(0);
    }

  }
  else
  {
    sub_10002AD00((uint64_t)v6, v5);
  }
}

void sub_1002534C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10025352C(v2, v3);

  }
}

void sub_10025352C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;

  v3 = v2;
  sub_100250C24();
  v6 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_attributionView;
  v7 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_attributionView];
  if (v7)
  {
    objc_msgSend(v7, "removeFromSuperview");
    v8 = *(void **)&v2[v6];
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)&v2[v6] = 0;

  if (a2)
  {
    type metadata accessor for BSUISharedWithYouController(0);
    v9 = (void *)static BSUISharedWithYouController.shared.getter();
    v10 = dispatch thunk of BSUISharedWithYouController.highlightIdentifier(for:)(a1, a2);
    v12 = v11;

    if (v12)
    {
      v13 = (void *)static BSUISharedWithYouController.shared.getter();
      v14 = (void *)dispatch thunk of BSUISharedWithYouController.createHighlightAttributionView(for:viewController:)(v10, v12, v3);

      swift_bridgeObjectRelease(v12);
      if (!v14)
      {
LABEL_9:
        v18 = *(void **)&v3[v6];
        *(_QWORD *)&v3[v6] = v14;

        return;
      }
      v15 = v14;
      v16 = objc_msgSend(v3, "view");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, "addSubview:", v15);

        objc_msgSend(v15, "setFrame:", 0.0, 0.0, 0.0, 0.0);
        goto LABEL_9;
      }
      __break(1u);
    }
  }
}

void sub_100253680(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10024C720();

    v7 = *(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];
    objc_msgSend(v7, "setBufferedValue:", v2);

  }
}

void sub_100253714(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  id v7;
  double v8;
  _BYTE v9[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingPositionViaScrubber) & 1) == 0)
    {
      v6 = sub_10024C720();
      v7 = *(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];

      *(float *)&v8 = v2;
      objc_msgSend(v7, "setValue:", v8);

    }
  }
}

void sub_1002537C0(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  char *v7;
  id v8;
  double v9;
  _BYTE v10[24];

  v2 = *(double *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = sub_10024C720();

    v8 = *(id *)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];
    *(float *)&v9 = v2;
    if (v3)
      *(float *)&v9 = 1.0;
    objc_msgSend(v8, "setProgress:", v9);

  }
}

void sub_10025386C(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char *v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v16[3];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, (char *)v16 + 1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    sub_1002539CC();
    KeyPath = swift_getKeyPath(&unk_100714BE0);
    v9 = swift_getKeyPath(&unk_100714C08);
    static Published.subscript.getter(v16, a3, KeyPath, v9);
    swift_release(KeyPath);
    swift_release(v9);
    sub_100251C14(v4, v16[0]);
    if ((v4 & 1) != 0)
    {
      v10 = sub_10024C720();
      v11 = *(id *)&v10[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

      if (qword_1009CDD30 != -1)
        swift_once(&qword_1009CDD30, sub_10024C7FC);
      objc_msgSend(v11, "setVerticalOffset:", *(double *)&qword_1009D4B78);

    }
    else
    {
      v12 = &v7[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed];
      v13 = *(_QWORD *)&v7[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed
                         + 8];
      *(_QWORD *)v12 = 0;
      *((_QWORD *)v12 + 1) = 0;
      swift_bridgeObjectRelease(v13);
      v14 = &v7[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition];
      v15 = *(_QWORD *)&v7[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition
                         + 8];
      *(_QWORD *)v14 = 0;
      *((_QWORD *)v14 + 1) = 0;

      swift_bridgeObjectRelease(v15);
    }
  }
}

void sub_1002539CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  id v34;
  NSString v35;
  char *v36;
  id v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;

  v1 = v0;
  v2 = type metadata accessor for UIAccessibility.BooksAccessibilityAnnouncementIdentifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v6, "begin");
  objc_msgSend(v6, "setDisableActions:", 1);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath("Н.");
  v9 = swift_getKeyPath(&unk_100714A30);
  static Published.subscript.getter(&v58, v7, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = &qword_1009D3FB0[10];
  if (LOBYTE(v58) == 1)
  {
    v11 = objc_msgSend((id)objc_opt_self(NSString), "stringWithDuration:explicitPositive:", 1, *(double *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_skipCumulativeDelta));
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v28 = (uint64_t *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText);
    v29 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText + 8);
    *v28 = v13;
    v28[1] = v15;
    goto LABEL_9;
  }
  v16 = swift_getKeyPath(&unk_100714A50);
  v17 = swift_getKeyPath(&unk_100714A78);
  static Published.subscript.getter(&v58, v7, v16, v17);
  swift_release(v16);
  swift_release(v17);
  if (LOBYTE(v58) == 1)
  {
    v18 = swift_getKeyPath(&unk_1007148B8);
    v19 = swift_getKeyPath(&unk_1007148E0);
    static Published.subscript.getter(&v58, v7, v18, v19);
    swift_release(v18);
    swift_release(v19);
    v20 = v58;
    v21 = swift_getKeyPath(&unk_100714AE0);
    v22 = swift_getKeyPath(&unk_100714B08);
    static Published.subscript.getter(&v58, v7, v21, v22);
    swift_release(v21);
    swift_release(v22);
    v23 = objc_msgSend((id)objc_opt_self(NSString), "stringWithDuration:explicitPositive:adjustedForRate:", 0, v20, *(float *)&v58);
    if (v23)
    {
      v24 = v23;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v27 = v26;

    }
    else
    {
      v25 = 0;
      v27 = 0;
    }
    v46 = (uint64_t *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText);
    v47 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText + 8);
    *v46 = v25;
    v46[1] = v27;
    swift_bridgeObjectRelease(v47);
    if (qword_1009CDDE8 != -1)
      swift_once(&qword_1009CDDE8, sub_1002CA940);
    v48 = (void *)qword_100A1E450;
    v49 = swift_getKeyPath(&unk_1007148B8);
    v50 = swift_getKeyPath(&unk_1007148E0);
    v51 = v48;
    static Published.subscript.getter(&v58, v7, v49, v50);
    swift_release(v49);
    swift_release(v50);
    v52 = objc_msgSend(v51, "stringFromTimeInterval:", v58);

    v10 = qword_1009D3FB0 + 80;
    if (v52)
    {
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v29 = v54;

      v55 = (uint64_t *)(v1
                      + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition);
      v56 = *(_QWORD *)(v1
                      + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition
                      + 8);
      if (v56)
      {
        if (*v55 == v53 && v56 == v29
          || (_stringCompareWithSmolCheck(_:_:expecting:)(*v55, v56, v53, v29, 0) & 1) != 0)
        {
          goto LABEL_9;
        }
        v57 = v55[1];
      }
      else
      {
        v57 = 0;
      }
      *v55 = v53;
      v55[1] = v29;
      swift_bridgeObjectRelease(v57);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UIAccessibility.BooksAccessibilityAnnouncementIdentifier.scrubbingPositionChanged(_:), v2);
      swift_bridgeObjectRetain(v29);
      static UIAccessibility.bkaxAccessibilityDebounceAnnounce(_:identifier:delay:)(v53, v29, v5, 0.25);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_9:
      swift_bridgeObjectRelease(v29);
    }
  }
  v30 = v1 + v10[382];
  v31 = *(_QWORD *)(v30 + 8);
  if (v31)
  {
    v58 = *(double *)v30;
    v59 = v31;
    v32 = sub_1001F15BC();
    swift_bridgeObjectRetain(v31);
    if ((Collection.isNotEmpty.getter(&type metadata for String, v32) & 1) != 0)
    {
      v33 = sub_10024C720();
      v34 = *(id *)&v33[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      objc_msgSend(v34, "setTitle:", v35);

    }
    else
    {
      swift_bridgeObjectRelease(v31);
    }
  }
  v36 = sub_10024C720();
  v37 = *(id *)&v36[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

  objc_msgSend(v37, "sizeToFit");
  v38 = sub_10024C720();
  v39 = *(id *)&v38[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

  v40 = swift_getKeyPath(&unk_100714A98);
  v41 = swift_getKeyPath(&unk_100714AC0);
  static Published.subscript.getter(&v58, v7, v40, v41);
  swift_release(v40);
  swift_release(v41);
  HIDWORD(v42) = HIDWORD(v58);
  *(float *)&v42 = v58;
  objc_msgSend(v39, "setValue:", v42);

  objc_msgSend(v6, "commit");
  v43 = *(_QWORD *)(v30 + 8);
  if (v43)
  {
    v58 = *(double *)v30;
    v59 = v43;
    v44 = sub_1001F15BC();
    v45 = Collection.isNotEmpty.getter(&type metadata for String, v44);
  }
  else
  {
    v45 = 0;
  }
  sub_100255D48(v45 & 1);
}

void sub_100253F9C(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1002539CC();
    if (v2)
    {
      v6 = sub_10024C720();
      v7 = *(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

      objc_msgSend(v7, "setVerticalOffset:", 0.0);
    }

  }
}

void sub_100254038(uint64_t a1, uint64_t a2)
{
  double v2;
  char v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  char *v8;
  id v9;
  _BYTE v10[24];

  v2 = *(double *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if ((v3 & 1) != 0)
      v7 = 0;
    else
      v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v2);
    v8 = sub_10024C720();
    v9 = *(id *)&v8[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];

    objc_msgSend(v9, "setSessionIndicatorValue:", v7);
  }
}

void sub_100254108(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  uint64_t *v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10024C720();

    v7 = &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_pauseImage;
    if (!v2)
      v7 = &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause], "setBackgroundImage:forState:", *(_QWORD *)&v6[*v7], 0);

  }
}

void sub_1002541A8(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  long double v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  id v17;
  char *v18;
  _BYTE v19[24];

  v8 = *a1;
  v9 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = lround(v8);
    sub_1002524B0(v12, a3, a4);
    v14 = v13;
    v15 = (void *)objc_opt_self(UIImage);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v17 = objc_msgSend(v15, "__systemImageNamedSwift:", v16);

    if (v17)
    {
      v18 = sub_10024C720();
      a5(v17);

      v11 = v18;
    }

  }
}

void sub_1002542AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  double v15;
  _BYTE v16[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    KeyPath = swift_getKeyPath(&unk_100714B28);
    v8 = swift_getKeyPath(&unk_100714B50);
    static Published.subscript.getter(&v15, a3, KeyPath, v8);
    swift_release(KeyPath);
    swift_release(v8);
    v9 = v15 - *(double *)&v6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudAppearanceTime];
    v10 = swift_getKeyPath("Н.");
    v11 = swift_getKeyPath(&unk_100714A30);
    static Published.subscript.getter(&v15, a3, v10, v11);
    swift_release(v10);
    swift_release(v11);
    if (LOBYTE(v15) == 1)
    {
      if (v9 <= 0.0)
      {
        v12 = swift_getKeyPath(&unk_100714C28);
        v13 = &unk_100714C50;
      }
      else
      {
        v12 = swift_getKeyPath(&unk_100714C70);
        v13 = &unk_100714C98;
      }
      v14 = swift_getKeyPath(v13);
      static Published.subscript.getter(&v15, a3, v12, v14);
      swift_release(v12);
      swift_release(v14);
      if (v15 != 0.0)
        v9 = v15 * round(v9 / v15);
    }
    *(double *)&v6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_skipCumulativeDelta] = v9;
    sub_1002539CC();
    sub_100254448();

  }
}

void sub_100254448()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText + 8))
  {
    v2 = sub_1001F15BC();
    v3 = Collection.isNotEmpty.getter(&type metadata for String, v2);
  }
  else
  {
    v3 = 0;
  }
  sub_100255D48(v3 & 1);
  v4 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer;
  v5 = *(void **)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer);
  if (v5)
    objc_msgSend(v5, "invalidate");
  v6 = objc_msgSend((id)objc_opt_self(NSTimer), "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", v1, "fadeOutHUD:", 0, 0, 1.0);
  v7 = *(void **)(v1 + v4);
  *(_QWORD *)(v1 + v4) = v6;

}

void sub_100254514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_10024C720();

    v6 = *(id *)&v5[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton];
    v7 = sub_10004CFD4(&qword_1009D18A0);
    v8 = sub_100030B34((unint64_t *)&unk_1009D4F30, &qword_1009D18A0, (uint64_t)&protocol conformance descriptor for [A]);
    v9 = Collection.isNotEmpty.getter(v7, v8);
    v10 = v6[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_hasSupplementalContent];
    v6[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_hasSupplementalContent] = v9 & 1;
    if ((v9 & 1) != v10)
      sub_1002829EC();

  }
}

void sub_1002545FC(float *a1, uint64_t a2)
{
  float v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100251868(v2);

  }
}

void sub_10025465C(unsigned __int8 a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  char *v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  char *v21;
  char *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, (char *)v31 + 1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = sub_10024C720();
    v15 = sub_10024C720();
    v16 = *(id *)&v15[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played];

    v17 = (void *)objc_opt_self(NSString);
    v18 = objc_msgSend(v17, "stringWithDuration:explicitPositive:", 0, a5);
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v16, "setText:", v18);

      if (qword_1009CDDE8 != -1)
        swift_once(&qword_1009CDDE8, sub_1002CA940);
      v20 = objc_msgSend((id)qword_100A1E450, "stringFromTimeInterval:", fabs(round(a5)));
      objc_msgSend(v16, "setAccessibilityValue:", v20);

      v21 = sub_10024C720();
      v22 = sub_10024C720();
      v23 = *(id *)&v22[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay];

      v24 = objc_msgSend(v17, "stringWithDuration:explicitPositive:", 0, a6);
      if (v24)
      {
        v25 = v24;
        objc_msgSend(v23, "setText:", v24);

        v26 = objc_msgSend((id)qword_100A1E450, "stringFromTimeInterval:", fabs(round(a6)));
        objc_msgSend(v23, "setAccessibilityValue:", v26);

        KeyPath = swift_getKeyPath(&unk_100714A50);
        v28 = swift_getKeyPath(&unk_100714A78);
        static Published.subscript.getter(v31, a4, KeyPath, v28);
        swift_release(KeyPath);
        swift_release(v28);
        LOBYTE(KeyPath) = v31[0];
        v29 = swift_getKeyPath(&unk_100714BE0);
        v30 = swift_getKeyPath(&unk_100714C08);
        static Published.subscript.getter(v31, a4, v29, v30);
        swift_release(v29);
        swift_release(v30);
        sub_100251C14(KeyPath, v31[0]);
        sub_1002519BC((a1 | a2) & 1);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100254924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t Strong;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  double v24;
  _QWORD v25[3];

  v15 = a8 + 16;
  swift_beginAccess(a8 + 16, (char *)v25 + 1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v17 = (char *)Strong;
    if ((a7 & 1) != 0)
    {
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(a4);
    }
    else
    {
      if ((objc_msgSend(*(id *)(Strong + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "audiobookTimeRemainingMode") & 1) != 0)
      {
LABEL_7:
        v19 = sub_10024C720();
        v20 = *(id *)&v19[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton];

        v21 = *(_QWORD *)&v17[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
        KeyPath = swift_getKeyPath(&unk_100714BE0);
        v23 = swift_getKeyPath(&unk_100714C08);
        static Published.subscript.getter(v25, v21, KeyPath, v23);
        swift_release(KeyPath);
        *(_QWORD *)&v24 = swift_release(v23).n128_u64[0];
        objc_msgSend(v20, "setEnabled:", (v25[0] & 1) == 0, v24);

        return;
      }
      swift_bridgeObjectRetain(a6);
      a3 = sub_1001EF350();
      a4 = v18;
      a1 = a5;
      a2 = a6;
    }
    sub_100251AAC(a1, a2, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel);
    sub_100251AAC(a3, a4, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a2);
    goto LABEL_7;
  }
}

void sub_100254AE0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v6;
  char *v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  _BYTE v15[24];
  CGSize v16;
  CGSize v17;

  v3 = a2 + 16;
  if (a1 == 7 || !a1)
    a3 = 0.0;
  swift_beginAccess(v3, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = sub_10024C720();

    v8 = *(void **)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton];
    objc_msgSend(v8, "intrinsicContentSize");
    v10 = v9;
    v12 = v11;
    sub_10035D0EC(a3);
    objc_msgSend(v8, "intrinsicContentSize");
    v17.width = v13;
    v17.height = v14;
    v16.width = v10;
    v16.height = v12;
    if (!CGSizeEqualToSize(v16, v17))
      objc_msgSend(v7, "setNeedsLayout");

  }
}

void sub_100254BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100251080(a1);

  }
}

void sub_100254C20(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_1002525F0(a1, *(_QWORD *)(a2 + 24) != 0);
    sub_100254C98(a2);

  }
}

id sub_100254C98(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  id v13;
  id result;
  void *v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  char *v50;
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  uint64_t KeyPath;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;

  v2 = v1;
  v59 = sub_10004CFD4(&qword_1009D4F10);
  __chkstk_darwin(v59);
  v61 = (uint64_t *)((char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10004CFD4(&qword_1009D4F18);
  v8 = __chkstk_darwin(v58);
  v60 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v55 - v10);
  v62 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonViewController;
  v12 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonViewController];
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v13, "willMoveToParentViewController:", 0);
    objc_msgSend(v13, "removeFromParentViewController");
    result = objc_msgSend(v13, "view");
    if (!result)
    {
      __break(1u);
      goto LABEL_12;
    }
    v15 = result;
    objc_msgSend(result, "removeFromSuperview");

    objc_msgSend(v13, "didMoveToParentViewController:", 0);
  }
  v16 = (uint64_t)&v2[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonProvider];
  swift_beginAccess(&v2[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonProvider], v65, 33, 0);
  sub_100258BB8(a1, v16);
  swift_endAccess(v65);
  sub_10000B5E4(a1, (uint64_t)&v63, (uint64_t *)&unk_1009D4CE0);
  if (!v64)
    return (id)sub_100010960((uint64_t)&v63, (uint64_t *)&unk_1009D4CE0);
  sub_100022840(&v63, (uint64_t)v65);
  v17 = (void **)sub_10003F198(v65, v66);
  sub_100257FD0(*v17);
  sub_10003F198(v65, v66);
  v18 = sub_100205964();
  KeyPath = swift_getKeyPath(&unk_100714B70);
  v55 = (id)objc_opt_self(UIColor);
  v19 = Color.init(_:)(objc_msgSend(v55, "bc_nowPlayingVibrantQuaternary"));
  v20 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v21 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v57 = v2;
  v22 = v21;
  v23 = &v7[*(int *)(v5 + 44)];
  v24 = enum case for BlendMode.plusLighter(_:);
  v25 = v11;
  v26 = type metadata accessor for BlendMode(0);
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v23, v24, v26);
  v28 = v26;
  v29 = (uint64_t)v25;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v28);
  *(_QWORD *)v7 = v22;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v7 + 8) = _Q0;
  *((_QWORD *)v7 + 3) = v22;
  *((_OWORD *)v7 + 2) = xmmword_1007147E0;
  *((_QWORD *)v7 + 6) = v20;
  *((_QWORD *)v7 + 7) = v19;
  *((_QWORD *)v7 + 8) = v20;
  *((_QWORD *)v7 + 9) = v19;
  *((_OWORD *)v7 + 5) = 0u;
  *((_OWORD *)v7 + 6) = 0u;
  *((_OWORD *)v7 + 7) = 0u;
  v35 = v61;
  sub_100258C08((uint64_t)v7, (uint64_t)v61 + *(int *)(v59 + 28));
  *v35 = KeyPath;
  sub_10000B5E4((uint64_t)v35, (uint64_t)v25 + *(int *)(v58 + 36), &qword_1009D4F10);
  *v25 = v18;
  v36 = v22;
  v37 = v57;
  swift_retain(v36);
  swift_retain(v20);
  swift_retain(v19);
  swift_retain(v18);
  sub_100010960((uint64_t)v35, &qword_1009D4F10);
  sub_100258C4C((uint64_t)v7);
  swift_release(v18);
  v38 = v60;
  sub_10000B5E4((uint64_t)v25, v60, &qword_1009D4F18);
  v39 = objc_allocWithZone((Class)sub_10004CFD4((uint64_t *)&unk_1009D4F20));
  v40 = (void *)UIHostingController.init(rootView:)(v38);
  UIHostingController.safeAreaRegions.setter(0);
  v41 = v62;
  v42 = *(void **)&v37[v62];
  *(_QWORD *)&v37[v62] = v40;
  v43 = v40;

  v44 = *(_QWORD *)(*sub_10003F198(v65, v66) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor);
  v45 = *(_QWORD *)(v44 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  swift_unknownObjectRetain(v44);
  swift_unknownObjectRetain(v45);
  sub_100344A18();
  swift_unknownObjectRelease(v45);
  sub_1004A9FC4();
  sub_1004A9D70();
  swift_unknownObjectRelease(v44);
  objc_msgSend(v43, "willMoveToParentViewController:", v37);
  objc_msgSend(v37, "addChildViewController:", v43);
  v46 = *(void **)&v37[v41];
  *(_QWORD *)&v37[v41] = v40;
  v47 = v43;

  result = objc_msgSend(v47, "view");
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v48 = result;
  v49 = objc_msgSend(v55, "clearColor");
  objc_msgSend(v48, "setBackgroundColor:", v49);

  v50 = sub_10024C720();
  v51 = objc_msgSend(v47, "view");
  v52 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton;
  v53 = *(void **)&v50[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton];
  *(_QWORD *)&v50[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton] = v51;
  v54 = v51;
  objc_msgSend(v53, "removeFromSuperview");
  if (*(_QWORD *)&v50[v52])
    objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer], "addSubview:");
  objc_msgSend(v50, "setNeedsLayout");

  objc_msgSend(v47, "didMoveToParentViewController:", v37);
  sub_100010960(v29, &qword_1009D4F18);
  return (id)_s5Books15CurrentPageViewVwxx_0(v65);
}

void sub_100255240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", a2, 1, 0);

  }
}

double AudiobookNowPlayingFullscreenTouchViewController.durationOfCurrentChapter.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_100714870);
  v3 = swift_getKeyPath(&unk_100714898);
  static Published.subscript.getter(&v8, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = fabs(v8);
  v5 = swift_getKeyPath(&unk_1007148B8);
  v6 = swift_getKeyPath(&unk_1007148E0);
  static Published.subscript.getter(&v8, v1, v5, v6);
  swift_release(v5);
  swift_release(v6);
  return v4 + v8;
}

void sub_100255380(uint64_t a1, void *a2)
{
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v3 = type metadata accessor for Logger(0);
  sub_100048F64(v3, (uint64_t)qword_1009D4B60);
  v4 = a2;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    v8 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
    KeyPath = swift_getKeyPath(&unk_1007148B8);
    v10 = swift_getKeyPath(&unk_1007148E0);
    static Published.subscript.getter(&v11, v8, KeyPath, v10);
    swift_release(KeyPath);
    swift_release(v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v7 + 4, v7 + 12);

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "current media time: %f", v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  sub_1002539CC();
}

UIImage_optional __swiftcall AudiobookNowPlayingFullscreenTouchViewController.transitionCurrentCoverImage()()
{
  char *v0;
  id v1;
  objc_class *v2;
  Swift::Bool v3;
  objc_class *v4;
  UIImage_optional result;

  v0 = sub_10024C720();
  v1 = *(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];

  v2 = (objc_class *)objc_msgSend(v1, "image");
  v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

double AudiobookNowPlayingFullscreenTouchViewController.transitionCoverFrame()()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;

  v0 = sub_10024C720();
  v1 = *(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];

  v2 = objc_msgSend(v1, "superview");
  if (v2)
  {
    v3 = v2;
    v4 = sub_10024C720();
    objc_msgSend(v1, "frame");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = v3;
    objc_msgSend(v4, "convertRect:fromCoordinateSpace:", v13, v6, v8, v10, v12);
    v15 = v14;

  }
  else
  {
    if (qword_1009CDD28 != -1)
      swift_once(&qword_1009CDD28, sub_10024C6A4);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048F64(v16, (uint64_t)qword_1009D4B60);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "artworkImageView not set up correctly, can't calculate transition cover frame", v20, 2u);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

    }
    return 0.0;
  }
  return v15;
}

UIImageView_optional __swiftcall AudiobookNowPlayingFullscreenTouchViewController.transitionBackgroundImageView()()
{
  char *v0;
  objc_class *v1;
  Swift::Bool v2;
  objc_class *v3;
  UIImageView_optional result;

  v0 = sub_10024C720();
  v1 = (objc_class *)sub_1003479F4();

  v3 = v1;
  result.value.super.super.super.isa = v3;
  result.is_nil = v2;
  return result;
}

uint64_t AudiobookNowPlayingFullscreenTouchViewController.transitionToolbarViews()()
{
  return sub_100255A74(&OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView, &qword_1009D4B88, _UIGrabber_ptr);
}

uint64_t AudiobookNowPlayingFullscreenTouchViewController.transitionControlsViews()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  char *v8;
  id v9;

  v0 = sub_10004CFD4(&qword_1009D4B80);
  v1 = swift_allocObject(v0, 160, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1007147F0;
  v2 = sub_10024C720();
  v3 = *(id *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];

  *(_QWORD *)(v1 + 56) = sub_100009E04(0, (unint64_t *)&unk_1009D4B90, &off_1008E5370);
  *(_QWORD *)(v1 + 32) = v3;
  v4 = sub_10024C720();
  v5 = *(id *)&v4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer];

  *(_QWORD *)(v1 + 88) = type metadata accessor for ConstraintsDisabledView();
  *(_QWORD *)(v1 + 64) = v5;
  v6 = sub_10024C720();
  v7 = *(id *)&v6[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_transportContainer];

  *(_QWORD *)(v1 + 120) = type metadata accessor for TransportContainer();
  *(_QWORD *)(v1 + 96) = v7;
  v8 = sub_10024C720();
  v9 = *(id *)&v8[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer];

  *(_QWORD *)(v1 + 152) = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  *(_QWORD *)(v1 + 128) = v9;
  return v1;
}

uint64_t AudiobookNowPlayingFullscreenTouchViewController.transitionCoverViews()()
{
  return sub_100255A74(&OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView, &qword_1009D4BA0, UIImageView_ptr);
}

uint64_t sub_100255A74(_QWORD *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;

  v6 = sub_10004CFD4(&qword_1009D4B80);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  v8 = sub_10024C720();
  v9 = *(id *)&v8[*a1];

  *(_QWORD *)(v7 + 56) = sub_100009E04(0, a2, a3);
  *(_QWORD *)(v7 + 32) = v9;
  return v7;
}

Class sub_100255B24(void *a1, uint64_t a2, _QWORD *a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  Class isa;

  v9 = sub_10004CFD4(&qword_1009D4B80);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  v11 = a1;
  v12 = sub_10024C720();
  v13 = *(id *)&v12[*a3];

  *(_QWORD *)(v10 + 56) = sub_100009E04(0, a4, a5);
  *(_QWORD *)(v10 + 32) = v13;

  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  return isa;
}

double AudiobookNowPlayingFullscreenTouchViewController.coverCornerRadius()()
{
  char *v0;
  double v1;

  v0 = sub_10024C720();
  if (qword_1009CDF30 != -1)
    swift_once(&qword_1009CDF30, sub_100347AE4);
  v1 = *(double *)&qword_1009DC548;

  return v1;
}

UIView_optional __swiftcall AudiobookNowPlayingFullscreenTouchViewController.transitionCoverImagePlayControl()()
{
  char *v0;
  objc_class *v1;
  Swift::Bool v2;
  objc_class *v3;
  UIView_optional result;

  v0 = sub_10024C720();
  v1 = (objc_class *)*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];

  v3 = v1;
  result.value.super.super.isa = v3;
  result.is_nil = v2;
  return result;
}

void sub_100255D48(int a1)
{
  uint64_t v1;
  char *v3;
  id v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  double v10;
  uint64_t v11;

  v3 = sub_10024C720();
  v4 = *(id *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

  objc_msgSend(v4, "alpha");
  v6 = v5;

  if ((((v6 == 0.0) ^ a1) & 1) == 0)
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
    KeyPath = swift_getKeyPath(&unk_100714B28);
    v9 = swift_getKeyPath(&unk_100714B50);
    static Published.subscript.getter(&v11, v7, KeyPath, v9);
    swift_release(KeyPath);
    swift_release(v9);
    *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudAppearanceTime) = v11;
    v10 = 0.0;
    if ((a1 & 1) != 0)
      v10 = 1.0;
    sub_100255E48(v10);
  }
}

void sub_100255E48(double a1)
{
  void *v1;
  char *v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v3 = sub_10024C720();
  v4 = *(id *)&v3[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

  objc_msgSend(v4, "alpha");
  v6 = v5;

  if (v6 != a1)
  {
    v7 = (void *)objc_opt_self(UIView);
    v8 = swift_allocObject(&unk_1008F6A08, 32, 7);
    *(_QWORD *)(v8 + 16) = v1;
    *(double *)(v8 + 24) = a1;
    v19 = sub_1002589AC;
    v20 = v8;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_1000147F0;
    v18 = &unk_1008F6A20;
    v9 = _Block_copy(&v15);
    v10 = v20;
    v11 = v1;
    swift_release(v10);
    v12 = swift_allocObject(&unk_1008F6990, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v11);
    v13 = swift_allocObject(&unk_1008F6A58, 32, 7);
    *(double *)(v13 + 16) = a1;
    *(_QWORD *)(v13 + 24) = v12;
    v19 = sub_1002589B8;
    v20 = v13;
    v15 = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_10004DCB4;
    v18 = &unk_1008F6A70;
    v14 = _Block_copy(&v15);
    swift_release(v20);
    objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 4, v9, v14, 0.2, 0.0);
    _Block_release(v14);
    _Block_release(v9);
  }
}

void sub_100256000(double a1)
{
  char *v2;
  id v3;

  v2 = sub_10024C720();
  v3 = *(id *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

  objc_msgSend(v3, "setAlpha:", a1);
}

void sub_10025606C(char a1, uint64_t a2, double a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  char *v7;
  id v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  _QWORD v17[3];

  if (fabs(a3) < 0.00999999978)
  {
    v4 = a2 + 16;
    swift_beginAccess(a2 + 16, (char *)v17 + 1, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = (char *)Strong;
      if ((a1 & 1) == 0)
        goto LABEL_6;
      v7 = sub_10024C720();
      v8 = *(id *)&v7[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

      objc_msgSend(v8, "alpha");
      v10 = v9;

      if (fabs(v10) >= 0.00999999978)
        goto LABEL_6;
      v11 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
      KeyPath = swift_getKeyPath("Н.");
      v13 = swift_getKeyPath(&unk_100714A30);
      static Published.subscript.getter(v17, v11, KeyPath, v13);
      swift_release(KeyPath);
      swift_release(v13);
      if ((v17[0] & 1) == 0)
      {
        v14 = sub_10024C720();
        v15 = *(id *)&v14[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

        objc_msgSend(v15, "setVerticalOffset:", 0.0);
        v16 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText + 8];
        *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText] = xmmword_100714800;

        swift_bridgeObjectRelease(v16);
      }
      else
      {
LABEL_6:

      }
    }
  }
}

id AudiobookNowPlayingFullscreenTouchViewController.beginTracking(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  double v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id result;
  uint64_t v20;

  v2 = v1;
  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048F64(v4, (uint64_t)qword_1009D4B60);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "begin scrubbing", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = *(_QWORD *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_100714900);
  v11 = swift_getKeyPath(&unk_100714928);
  static Published.subscript.getter(&v20, v9, KeyPath, v11);
  swift_release(KeyPath);
  *(_QWORD *)&v12 = swift_release(v11).n128_u64[0];
  *(_BYTE *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_wasPlaying) = v20;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "setIsScrubbing:", 1, v12);
  v13 = sub_10024C720();
  v14 = *(id *)&v13[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack];

  if (qword_1009CDD30 != -1)
    swift_once(&qword_1009CDD30, sub_10024C7FC);
  objc_msgSend(v14, "setVerticalOffset:", *(double *)&qword_1009D4B78);

  v15 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior;
  v16 = *(void **)(v2 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior);
  if (v16)
    objc_msgSend(v16, "deactivate");
  v17 = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:coordinateSpace:", 1, a1);
  v18 = *(void **)(v2 + v15);
  *(_QWORD *)(v2 + v15) = v17;

  result = *(id *)(v2 + v15);
  if (result)
    return objc_msgSend(result, "activateWithCompletionBlock:", 0);
  return result;
}

id AudiobookNowPlayingFullscreenTouchViewController.fineScrubSpeedChanged(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id result;

  v2 = v1;
  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048F64(v4, (uint64_t)qword_1009D4B60);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "scrubber moved", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  sub_100255D48(objc_msgSend(a1, "speed") == 0);
  result = *(id *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior);
  if (result)
    return objc_msgSend(result, "_impactOccurredWithIntensity:", 1.0);
  return result;
}

BOOL AudiobookNowPlayingFullscreenTouchViewController.sliderIsProgressSlider(_:)(uint64_t a1)
{
  char *v2;
  uint64_t v3;

  v2 = sub_10024C720();
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];

  return v3 == a1;
}

double AudiobookNowPlayingFullscreenTouchViewController.playedInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_1007148B8);
  v3 = swift_getKeyPath(&unk_1007148E0);
  static Published.subscript.getter(&v5, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  return v5;
}

Swift::Void (__swiftcall *AudiobookNowPlayingFullscreenTouchViewController.playedInterval.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v3 = a1 + 1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_1007148B8);
  v6 = swift_getKeyPath(&unk_1007148E0);
  static Published.subscript.getter(v3, v4, KeyPath, v6);
  swift_release(v6);
  swift_release(KeyPath);
  *a1 = a1[1];
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

Swift::Void (__swiftcall *AudiobookNowPlayingFullscreenTouchViewController.durationOfCurrentChapter.modify(double *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1 + 1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_100714870);
  v6 = swift_getKeyPath(&unk_100714898);
  static Published.subscript.getter(v3, v4, KeyPath, v6);
  swift_release(v6);
  swift_release(KeyPath);
  v7 = fabs(a1[1]);
  v8 = swift_getKeyPath(&unk_1007148B8);
  v9 = swift_getKeyPath(&unk_1007148E0);
  static Published.subscript.getter(v3, v4, v8, v9);
  swift_release(v9);
  swift_release(v8);
  *a1 = v7 + a1[1];
  return BKAppDelegate.enableMetricsInspectorOnDebugMode();
}

Swift::Void __swiftcall AudiobookNowPlayingFullscreenTouchViewController.didTapSessionIndicator(_:)(BKScrubberSlider *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSNumber *v3;
  NSNumber *v4;
  float v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  double v12;
  double v13;
  uint64_t v14;

  v2 = v1;
  v3 = -[BKScrubberSlider sessionIndicatorValue](a1, "sessionIndicatorValue");
  if (v3)
  {
    v4 = v3;
    -[NSNumber floatValue](v3, "floatValue");
    v6 = v5;

  }
  else
  {
    v6 = 0.0;
  }
  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100048F64(v7, (uint64_t)qword_1009D4B60);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    v13 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v11 + 4, v11 + 12);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Audiobook bookmark tapped value: %f", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }

  *(float *)&v12 = v6;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "scrubTo:completion:", 0, v12);
}

Swift::String_optional __swiftcall AudiobookNowPlayingFullscreenTouchViewController.accessibleDescriptionOfSessionIndicatorPosition()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  Swift::String_optional result;
  double v19;
  char v20;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_100714948);
  v3 = swift_getKeyPath(&unk_100714970);
  static Published.subscript.getter(&v19, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  if ((v20 & 1) != 0)
    goto LABEL_6;
  v4 = v19;
  if (qword_1009CDDE8 != -1)
    swift_once(&qword_1009CDDE8, sub_1002CA940);
  v5 = (void *)qword_100A1E450;
  v6 = swift_getKeyPath(&unk_100714870);
  v7 = swift_getKeyPath(&unk_100714898);
  v8 = v5;
  static Published.subscript.getter(&v19, v1, v6, v7);
  swift_release(v6);
  swift_release(v7);
  v9 = fabs(v19);
  v10 = swift_getKeyPath(&unk_1007148B8);
  v11 = swift_getKeyPath(&unk_1007148E0);
  static Published.subscript.getter(&v19, v1, v10, v11);
  swift_release(v10);
  swift_release(v11);
  v12 = objc_msgSend(v8, "stringFromTimeInterval:", v4 * (v9 + v19));

  if (!v12)
  {
LABEL_6:
    v13 = 0;
    v15 = 0;
  }
  else
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

  }
  v16 = v13;
  v17 = v15;
  result.value._object = v17;
  result.value._countAndFlagsBits = v16;
  return result;
}

double AudiobookNowPlayingFullscreenTouchViewController.alternateAccessibilityFrame(for:)(void *a1)
{
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  char *v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double MinX;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  objc_msgSend(a1, "bkaxDefaultAccessibilityFrame");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_10024C720();
  v10 = *(id *)&v9[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView];

  objc_msgSend(v10, "accessibilityFrame");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v21.origin.x = v12;
  v21.origin.y = v14;
  v21.size.width = v16;
  v21.size.height = v18;
  CGRectGetMaxY(v21);
  v22.origin.x = v2;
  v22.origin.y = v4;
  v22.size.width = v6;
  v22.size.height = v8;
  CGRectGetMinY(v22);
  v23.origin.x = v2;
  v23.origin.y = v4;
  v23.size.width = v6;
  v23.size.height = v8;
  CGRectGetHeight(v23);
  v24.origin.x = v2;
  v24.origin.y = v4;
  v24.size.width = v6;
  v24.size.height = v8;
  CGRectGetMinY(v24);
  v25.origin.x = v2;
  v25.origin.y = v4;
  v25.size.width = v6;
  v25.size.height = v8;
  MinX = CGRectGetMinX(v25);
  v26.origin.x = v2;
  v26.origin.y = v4;
  v26.size.width = v6;
  v26.size.height = v8;
  CGRectGetWidth(v26);
  return MinX;
}

void sub_10025704C(void *a1, void *a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;
  double v30;
  id v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  double v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD aBlock[5];
  _QWORD *v64;

  v57 = a2;
  v51 = a1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Locale(0);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v6 = __chkstk_darwin(v5);
  v59 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v58 = (char *)&v51 - v8;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v56 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v51 - v13;
  v15 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
  objc_msgSend(v15, "setOverrideUserInterfaceStyle:", 2);
  v16 = objc_msgSend(v15, "view");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v18 = type metadata accessor for AudiobookSleepTimerCustomHeaderViewController();
    v55 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
    objc_msgSend(v15, "_setHeaderContentViewController:");
    v19 = type metadata accessor for AudiobookSleepTimerCustomDateViewController();
    v20 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
    objc_msgSend(v15, "setContentViewController:", v20);
    v21 = type metadata accessor for AudiobookSleepTimerOKActionViewController();
    v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21)), "init");
    v23 = (void *)objc_opt_self(UIAlertAction);
    v24 = (_QWORD *)swift_allocObject(&unk_1008F6EB8, 48, 7);
    v25 = v57;
    v24[2] = v20;
    v24[3] = v25;
    v24[4] = a3;
    v24[5] = ObjectType;
    aBlock[4] = sub_100258DD8;
    v64 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000B65C;
    aBlock[3] = &unk_1008F6ED0;
    v26 = a3;
    v27 = _Block_copy(aBlock);
    v28 = v64;
    v29 = v22;
    v54 = v20;
    swift_retain(v26);
    *(_QWORD *)&v30 = swift_release(v28).n128_u64[0];
    v52 = v23;
    v31 = objc_msgSend(v23, "_actionWithContentViewController:style:handler:", v29, 0, v27, v30);
    _Block_release(v27);
    v57 = v29;

    if (v31)
      objc_msgSend(v15, "addAction:", v31);
    v53 = v31;
    v32 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    v33 = v58;
    static Locale.current.getter(v32);
    v34 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v12, v14, v9);
    v35 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v35);
    v37 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v38 = v9;
    v39 = v59;
    v40 = v60;
    v41 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v33, v61);
    String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v37, v39, "Cancel", 6, 2);
    v43 = v42;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v38);
    v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43);
    v45 = objc_msgSend(v52, "actionWithTitle:style:handler:", v44, 1, 0);

    v46 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksLabelColor");
    objc_msgSend(v45, "_setTitleTextColor:", v46);

    objc_msgSend(v15, "addAction:", v45);
    v47 = objc_msgSend(v15, "popoverPresentationController");
    if (v47)
    {
      v48 = v47;
      v49 = v51;
      objc_msgSend(v47, "setSourceView:", v51);
      objc_msgSend(v49, "bounds");
      objc_msgSend(v48, "setSourceRect:", v50 * 0.5, 0.0, 1.0, 1.0);
      objc_msgSend(v48, "setPermittedArrowDirections:", 3);

    }
    objc_msgSend(v62, "presentViewController:animated:completion:", v15, 1, 0, v51);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100257588(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5Books43AudiobookSleepTimerCustomDateViewController_datePicker), "countDownDuration");
  v5 = v4;
  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048F64(v6, (uint64_t)qword_1009D4B60);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    v13 = lround(v5 / 60.0);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10 + 4, v10 + 12);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Setting custom sleep timer %ld minutes", v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(BKAudiobookSleepTimer), "defaultTimer");
  objc_msgSend(v11, "setFixedTimerWithDuration:", v5);

  return a3();
}

void sub_10025771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _BYTE v13[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (qword_1009CDD28 != -1)
      swift_once(&qword_1009CDD28, sub_10024C6A4);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009D4B60);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v11 = 134217984;
      v12 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, v13, v11 + 4, v11 + 12);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Setting sleep timer, option numeric index %ld", v11, 0xCu);
      swift_slowDealloc(v11, -1, -1);
    }

    objc_msgSend(*(id *)&v6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler], "setSleepTimerOption:", a3);
    sub_100251080(a3);

  }
}

uint64_t sub_10025787C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  char *v5;
  id v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v5 = sub_10024C720();
    v6 = *(id *)&v5[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton];

    v7 = swift_allocObject(&unk_1008F6990, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v4);
    swift_retain(v7);
    sub_10025704C(v6, sub_100258D90, v7);

    return swift_release_n(v7, 2);
  }
  return result;
}

void sub_100257944(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100251080(8);

  }
}

uint64_t sub_1002579A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100714900);
  v5 = swift_getKeyPath(&unk_100714928);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100257A1C(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100714900);
  v5 = swift_getKeyPath(&unk_100714928);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100257A88@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100714828);
  v5 = swift_getKeyPath(&unk_100714850);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100257B08(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100714828);
  v5 = swift_getKeyPath(&unk_100714850);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

double sub_100257B7C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_1007148B8, (uint64_t)&unk_1007148E0, a2);
}

uint64_t sub_100257B90(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_1007148B8, (uint64_t)&unk_1007148E0);
}

double sub_100257BA4@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_100714870, (uint64_t)&unk_100714898, a2);
}

double sub_100257BB8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, double *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  double v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  result = v10;
  *a4 = v10;
  return result;
}

uint64_t sub_100257C30(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_100714870, (uint64_t)&unk_100714898);
}

uint64_t sub_100257C44(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_100257CB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100714948);
  v5 = swift_getKeyPath(&unk_100714970);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_100257D38(uint64_t *a1, void **a2)
{
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100714948);
  v6 = swift_getKeyPath(&unk_100714970);
  v8 = v2;
  v9 = v3;
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

double sub_100257DB4@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_100714870, (uint64_t)&unk_100714898, a2);
}

uint64_t sub_100257DD8(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_100714870, (uint64_t)&unk_100714898);
}

double sub_100257DFC@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_1007148B8, (uint64_t)&unk_1007148E0, a2);
}

uint64_t sub_100257E20(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_1007148B8, (uint64_t)&unk_1007148E0);
}

void sub_100257E4C()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___nowPlayingView] = 0;
  v1 = &v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonProvider];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_datePicker] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudAppearanceTime] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer] = 0;
  v2 = &v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior] = 0;
  v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingPositionViaScrubber] = 0;
  v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingPositionViaPlayer] = 0;
  v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingVolumeViaSlider] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_skipCumulativeDelta] = 0;
  v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_wasPlaying] = 0;
  v3 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_supportedSkipAmounts;
  *(_QWORD *)&v0[v3] = sub_1001E0070((uint64_t)&off_1008F00A0);
  v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_downloadState] = 3;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_attributionView] = 0;
  v4 = &v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___languageSuffix];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v0[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed];
  *v6 = 0;
  v6[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookNowPlayingFullscreenTouchViewController.swift", 60, 2, 96, 0);
  __break(1u);
}

uint64_t sub_100257FD0(void *a1)
{
  _QWORD *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t ObjectType;
  _UNKNOWN **v15;

  ObjectType = swift_getObjectType();
  v15 = &off_1008F3968;
  v13[0] = a1;
  v2 = *(_QWORD **)(*sub_10003F198(v13, ObjectType) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = a1;
  swift_retain(v2);
  v5 = Color.init(_:)(objc_msgSend(v3, "bc_nowPlayingVibrantQuaternary"));
  v6 = v2[4];
  v2[4] = v5;
  swift_release(v6);
  v8 = static Color.clear.getter(v7);
  v9 = v2[6];
  v2[6] = v8;
  swift_release(v9);
  v10 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v11 = v2[28];
  v2[28] = v10;
  swift_release(v2);
  swift_release(v11);
  return _s5Books15CurrentPageViewVwxx_0(v13);
}

void sub_1002580B0(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  void *v15;
  void (*v16)();
  uint64_t v17;

  v2 = v1;
  v4 = objc_msgSend(v1, "presentedViewController");
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject(&unk_1008F6990, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    v7 = swift_allocObject(&unk_1008F69B8, 32, 7);
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = a1;
    v16 = sub_10025899C;
    v17 = v7;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_1000147F0;
    v15 = &unk_1008F69D0;
    v8 = _Block_copy(&v12);
    v9 = v17;
    v10 = a1;
    objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
  else
  {
    v16 = BKAppDelegate.enableMetricsInspectorOnDebugMode();
    v17 = 0;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_1000147F0;
    v15 = &unk_1008F6958;
    v11 = _Block_copy(&v12);
    objc_msgSend(v2, "presentViewController:animated:completion:", a1, 1, v11);
    _Block_release(v11);
  }
}

void sub_100258220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  v1 = v0;
  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009D4B60);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "openTOC()", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_tocVC));
  objc_msgSend(v7, "setModalPresentationStyle:", 1);
  objc_msgSend(v7, "setNavigationBarHidden:", 1);
  objc_msgSend(v7, "setOverrideUserInterfaceStyle:", 2);
  sub_1002580B0(v7);

}

void sub_10025836C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009D4B60);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "openNarrationSpeedPicker()", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler);
  swift_unknownObjectRetain(v7);
  v8 = sub_10024C720();
  v9 = *(id *)&v8[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed];

  v10 = objc_allocWithZone((Class)type metadata accessor for NarrationSpeedPopoverController(0));
  v11 = sub_10038C7A8(v7, v9);
  sub_1002580B0(v11);

}

void sub_1002584B0(float a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  float v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  __n128 v24;
  double v25;
  _QWORD v26[4];
  uint64_t v27;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = *(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_100714870);
  v7 = swift_getKeyPath(&unk_100714898);
  static Published.subscript.getter(&v25, v5, KeyPath, v7);
  swift_release(KeyPath);
  swift_release(v7);
  v8 = fabs(v25);
  v9 = swift_getKeyPath(&unk_1007148B8);
  v10 = swift_getKeyPath(&unk_1007148E0);
  static Published.subscript.getter(&v25, v5, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v8 + v25;
  if (v11 > 0.0)
  {
    if (v11 * a1 >= v11 + -0.4)
      v12 = v11 + -0.4;
    else
      v12 = v11 * a1;
    if (qword_1009CDD28 != -1)
      swift_once(&qword_1009CDD28, sub_10024C6A4);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048F64(v13, (uint64_t)qword_1009D4B60);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v17 = 134217984;
      v25 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v17 + 4, v17 + 12);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Audiobook setting chapter progress time: %f", v17, 0xCu);
      swift_slowDealloc(v17, -1, -1);
    }

    v19 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler];
    v20 = swift_allocObject(&unk_1008F6918, 32, 7);
    *(_QWORD *)(v20 + 16) = v2;
    *(_QWORD *)(v20 + 24) = ObjectType;
    v26[3] = sub_10025894C;
    v27 = v20;
    v25 = COERCE_DOUBLE(_NSConcreteStackBlock);
    v26[0] = 1107296256;
    v26[1] = sub_10004DCB4;
    v26[2] = &unk_1008F6930;
    v21 = _Block_copy(&v25);
    v22 = v27;
    v23 = v2;
    v24 = swift_release(v22);
    v18 = v12 / v11;
    v24.n128_f32[0] = v18;
    objc_msgSend(v19, "scrubTo:completion:", v21, v24.n128_f64[0]);
    _Block_release(v21);
  }
}

void _s5Books48AudiobookNowPlayingFullscreenTouchViewControllerC11endTrackingyySo14IMCustomSliderCF_0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "setIsScrubbing:", 0);
  v1 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer;
  v2 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer);
  if (v2)
    objc_msgSend(v2, "invalidate");
  v3 = objc_msgSend((id)objc_opt_self(NSTimer), "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", v0, "fadeOutHUD:", 0, 0, 1.0);
  v4 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = v3;

  v5 = sub_10024C720();
  v6 = *(id *)&v5[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];

  objc_msgSend(v6, "setSpeed:", 0);
  v7 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior;
  v8 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior);
  if (v8)
  {
    objc_msgSend(v8, "deactivate");
    v9 = *(void **)(v0 + v7);
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(v0 + v7) = 0;

  if (qword_1009CDD28 != -1)
    swift_once(&qword_1009CDD28, sub_10024C6A4);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100048F64(v10, (uint64_t)qword_1009D4B60);
  oslog = Logger.logObject.getter(v11);
  v12 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v12, "end scrubbing", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

}

uint64_t type metadata accessor for AudiobookNowPlayingFullscreenTouchViewController()
{
  return objc_opt_self(BKAudiobookNowPlayingFullscreenTouchViewController);
}

uint64_t sub_100258928()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10025894C(uint64_t a1)
{
  uint64_t v1;

  sub_100255380(a1, *(void **)(v1 + 16));
}

uint64_t sub_100258974()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10025899C()
{
  uint64_t v0;

  sub_100255240(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1002589AC()
{
  uint64_t v0;

  sub_100256000(*(double *)(v0 + 24));
}

void sub_1002589B8(char a1)
{
  uint64_t v1;

  sub_10025606C(a1, *(_QWORD *)(v1 + 24), *(double *)(v1 + 16));
}

uint64_t sub_1002589C4(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_1002508AC(a1, a2, v2);
}

void sub_1002589CC(uint64_t *a1)
{
  uint64_t v1;

  sub_100253330(a1, v1);
}

void sub_1002589D4(uint64_t *a1)
{
  uint64_t v1;

  sub_1002533B4(a1, v1);
}

void sub_1002589DC(uint64_t *a1)
{
  uint64_t v1;

  sub_1002534C4(a1, v1);
}

void sub_1002589E4(double *a1)
{
  uint64_t v1;

  sub_100253680(a1, v1);
}

void sub_1002589EC(double *a1)
{
  uint64_t v1;

  sub_100253714(a1, v1);
}

void sub_1002589F4(uint64_t a1)
{
  uint64_t v1;

  sub_1002537C0(a1, v1);
}

void sub_100258A00(char *a1)
{
  uint64_t v1;

  sub_10025386C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100258A08(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100253F9C(a1, v1);
}

void sub_100258A10(uint64_t a1)
{
  uint64_t v1;

  sub_100254038(a1, v1);
}

void sub_100258A18(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100254108(a1, v1);
}

void sub_100258A20(double *a1)
{
  uint64_t v1;

  sub_1002541A8(a1, v1, 0x61776B6361626F67, 0xEC00000040256472, sub_10034BB00);
}

void sub_100258A5C(double *a1)
{
  uint64_t v1;

  sub_1002541A8(a1, v1, 0x726177726F666F67, 0xEB00000000402564, sub_10034BB0C);
}

void sub_100258A9C(uint64_t a1)
{
  uint64_t v1;

  sub_1002542AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100258AA4(uint64_t a1)
{
  uint64_t v1;

  sub_100254514(a1, v1);
}

void sub_100258AAC(float *a1)
{
  uint64_t v1;

  sub_1002545FC(a1, v1);
}

uint64_t sub_100258AB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100258AE4(unsigned __int8 a1, unsigned __int8 a2, double a3, double a4)
{
  uint64_t v4;

  sub_10025465C(a1, a2, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a3, a4);
}

uint64_t sub_100258AEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100258B10(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, double, double))(v1 + 16))(*(unsigned __int8 *)(a1 + 16), *(unsigned __int8 *)(a1 + 17), *(double *)a1, *(double *)(a1 + 8));
}

void sub_100258B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  sub_100254924(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_100258B48(uint64_t a1)
{
  uint64_t v1;

  return sub_10033AF40(a1, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16));
}

void sub_100258B50(uint64_t a1, double a2)
{
  uint64_t v2;

  sub_100254AE0(a1, v2, a2);
}

uint64_t sub_100258B58(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, double))(v1 + 16))(*(_QWORD *)(a1 + 8), *(double *)a1);
}

void sub_100258B80(uint64_t a1)
{
  uint64_t v1;

  sub_100254BC8(a1, v1);
}

void sub_100258B88(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;

  sub_100254C20(a1, a2, v2);
}

uint64_t sub_100258B90(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, unsigned __int8 *))(v1 + 16))(*a1, a1 + 8);
}

uint64_t sub_100258BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100258C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BuyButtonView.Style(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100258C4C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BuyButtonView.Style(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100258C88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100258CAC()
{
  uint64_t v0;

  sub_100252914(*(_BYTE *)(v0 + 16), *(_BYTE *)(v0 + 17));
}

void sub_100258CBC()
{
  uint64_t v0;

  sub_100252BC8(*(_BYTE *)(v0 + 16));
}

uint64_t sub_100258CC8()
{
  return sub_100258DA0(40);
}

void sub_100258CD0(uint64_t a1)
{
  uint64_t v1;

  sub_100252CB0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100258CDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100258D00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100258D2C(uint64_t a1)
{
  uint64_t v1;

  sub_100252E8C(a1, *(uint64_t (**)())(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_100258D38()
{
  sub_100252E10();
}

uint64_t sub_100258D50(uint64_t a1)
{
  uint64_t v1;

  return sub_10025787C(a1, v1);
}

uint64_t sub_100258D60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100258D84(uint64_t a1)
{
  uint64_t v1;

  sub_10025771C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100258D90()
{
  uint64_t v0;

  sub_100257944(v0);
}

uint64_t sub_100258D98()
{
  return sub_100258DA0(48);
}

uint64_t sub_100258DA0(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100258DD8(uint64_t a1)
{
  uint64_t v1;

  return sub_100257588(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

void (*sub_100258F00(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView);
  a1[2] = (uint64_t)v3;
  v4 = objc_msgSend(v3, "_groupName");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a1 = v6;
  a1[1] = v8;
  return sub_100258F7C;
}

void sub_100258F7C(uint64_t a1, char a2)
{
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(*(id *)(a1 + 16), "_setGroupName:", v4);
    swift_bridgeObjectRelease(v3);
  }
  else if (v3)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    objc_msgSend(*(id *)(a1 + 16), "_setGroupName:", v4);
  }
  else
  {
    v4 = 0;
    objc_msgSend(*(id *)(a1 + 16), "_setGroupName:", 0);
  }

}

id sub_10025903C(double a1, double a2, double a3, double a4)
{
  char *v4;
  double *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id result;

  v5 = (double *)&v4[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets];
  v6 = *(double *)&v4[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets];
  v7 = *(double *)&v4[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 8];
  v8 = *(double *)&v4[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 16];
  v9 = *(double *)&v4[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 24];
  *v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  if (v6 != a1 || v7 != a2 || v8 != a3 || v9 != a4)
    return objc_msgSend(v4, "setNeedsLayout");
  return result;
}

BOOL sub_100259080(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1002599AC((double *)v5, (double *)v7);
}

void sub_1002590C8(double *a1)
{
  unsigned __int8 *v1;
  int v2;
  double v3;
  double v4;
  double v5;
  double v6;
  int v7;
  BOOL v9;
  BOOL v10;
  id v11;

  v2 = v1[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration];
  v4 = *(double *)&v1[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration + 8];
  v3 = *(double *)&v1[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration + 16];
  v5 = *(double *)&v1[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration + 24];
  v6 = *(double *)&v1[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration + 32];
  v7 = *(unsigned __int8 *)a1;
  if (v2 == 4)
  {
    if (v7 != 4)
      goto LABEL_18;
  }
  else if (v7 == 4 || v2 != v7)
  {
LABEL_19:
    objc_msgSend(v1, "setNeedsLayout", v3, v5, v6, v4);
    return;
  }
  if (v4 != a1[1]
    || ((v4 = a1[4], v3 == a1[2]) ? (v9 = v5 == a1[3]) : (v9 = 0), v9 ? (v10 = v6 == v4) : (v10 = 0), !v10))
  {
    if (v2 == 4)
    {
LABEL_18:
      v11 = sub_1002592E4();
      objc_msgSend(v11, "removeFromSuperview");

      return;
    }
    goto LABEL_19;
  }
}

CGFloat CGRect.applyingLayoutDirection(_:inBounds:)(uint64_t a1, double a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  double MaxX;
  double v14;
  CGRect v16;
  CGRect v17;

  if (a1 == 1)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&a2);
    v16.origin.x = a6;
    v16.origin.y = a7;
    v16.size.width = a8;
    v16.size.height = a9;
    v14 = MaxX - CGRectGetMinX(v16);
    v17.origin.x = a6;
    v17.origin.y = a7;
    v17.size.width = a8;
    v17.size.height = a9;
    return v14 - CGRectGetWidth(v17);
  }
  return a6;
}

id sub_1002592E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Books20PaletteContainerView____lazy_storage___separator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books20PaletteContainerView____lazy_storage___separator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Books20PaletteContainerView____lazy_storage___separator);
  }
  else
  {
    v4 = sub_100259344(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100259344(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  if (qword_1009CDD38 != -1)
    swift_once(&qword_1009CDD38, sub_100009C98);
  v2 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", qword_100A1E3D8, 7);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v2);
  v4 = objc_allocWithZone((Class)UIColor);
  v11[4] = sub_10025950C;
  v12 = 0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10033F158;
  v11[3] = &unk_1008F70D8;
  v5 = _Block_copy(v11);
  v6 = v3;
  v7 = objc_msgSend(v4, "initWithDynamicProvider:", v5);
  _Block_release(v5);
  swift_release(v12);
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "_setGroupName:", v8);

  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView), "contentView"));
  objc_msgSend(v9, "addSubview:", v6);

  return v6;
}

id sub_10025950C(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 != (id)2)
    return objc_msgSend(v2, "_barHairlineShadowColor");
  v3 = objc_msgSend(v2, "whiteColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.3);

  return v4;
}

id sub_100259604()
{
  return sub_10025965C(0, type metadata accessor for PaletteContainerView.ContainerView);
}

id sub_100259650(uint64_t a1)
{
  return sub_10025965C(a1, type metadata accessor for PaletteContainerView);
}

id sub_10025965C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

double sub_1002596D4()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC5Books20PaletteContainerView_defaultHeight);
}

double sub_1002596E4()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets);
}

void (*sub_100259700(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10003A744(v2);
  return sub_100259744;
}

uint64_t sub_100259748()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView), "_groupName"));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void sub_1002597B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v5;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView);
  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, "_setGroupName:", v5);

}

void (*sub_100259820(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_100258F00(v2);
  return sub_100259744;
}

void sub_100259864(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

id sub_100259890(void *a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books20PaletteContainerView_containerView);
  objc_msgSend(v3, "bounds");
  objc_msgSend(a1, "setFrame:");
  objc_msgSend(a1, "setAutoresizingMask:", 18);
  return objc_msgSend(v3, "addSubview:", a1);
}

uint64_t getEnumTagSinglePayload for PaletteContainerView.SeparatorConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && a1[40])
    return (*(_DWORD *)a1 + 252);
  if (*a1 <= 4u)
    v3 = 4;
  else
    v3 = *a1;
  v4 = v3 - 5;
  if (*a1 < 4u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PaletteContainerView.SeparatorConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaletteContainerView.SeparatorConfiguration()
{
  return &type metadata for PaletteContainerView.SeparatorConfiguration;
}

BOOL sub_1002599AC(double *a1, double *a2)
{
  int v2;
  int v3;
  BOOL v5;

  v2 = *(unsigned __int8 *)a1;
  v3 = *(unsigned __int8 *)a2;
  if (v2 == 4)
  {
    if (v3 != 4)
      return 0;
  }
  else if (v3 == 4 || v2 != v3)
  {
    return 0;
  }
  if (a1[1] != a2[1])
    return 0;
  v5 = a1[2] == a2[2] && a1[3] == a2[3];
  return v5 && a1[4] == a2[4];
}

void sub_100259A14()
{
  char *v0;
  CGFloat *v1;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView_defaultHeight] = 0x4050000000000000;
  v1 = (CGFloat *)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v1 = UIEdgeInsetsZero.top;
  v1[1] = left;
  v1[2] = bottom;
  v1[3] = right;
  v5 = &v0[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration];
  *v5 = 4;
  *((_QWORD *)v5 + 1) = *(_QWORD *)&UIEdgeInsetsZero.top;
  *((CGFloat *)v5 + 2) = left;
  *((CGFloat *)v5 + 3) = bottom;
  *((CGFloat *)v5 + 4) = right;
  v6 = OBJC_IVAR____TtC5Books20PaletteContainerView_containerView;
  v7 = type metadata accessor for PaletteContainerView.ContainerView();
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView____lazy_storage___separator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/PaletteContainerView.swift", 32, 2, 33, 0);
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for PaletteContainerView.SeparatorConfiguration.Position(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100259B44 + 4 * byte_100714EB5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100259B78 + 4 * byte_100714EB0[v4]))();
}

uint64_t sub_100259B78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100259B80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100259B88);
  return result;
}

uint64_t sub_100259B94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100259B9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100259BA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100259BA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaletteContainerView.SeparatorConfiguration.Position()
{
  return &type metadata for PaletteContainerView.SeparatorConfiguration.Position;
}

unint64_t sub_100259BC8()
{
  unint64_t result;

  result = qword_1009D5028;
  if (!qword_1009D5028)
  {
    result = swift_getWitnessTable(&unk_100714F54, &type metadata for PaletteContainerView.SeparatorConfiguration.Position);
    atomic_store(result, (unint64_t *)&qword_1009D5028);
  }
  return result;
}

uint64_t sub_100259C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81[16];
  uint64_t v82;
  _QWORD v83[5];

  v2 = v1;
  v79 = a1;
  v80 = type metadata accessor for AccessibilityChildBehavior(0);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v77 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContentShapeKinds(0);
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  __chkstk_darwin(v4);
  v74 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for BorderlessButtonStyle(0);
  v64 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D50F8);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10004CFD4(&qword_1009D5100);
  v66 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_10004CFD4(&qword_1009D5108);
  __chkstk_darwin(v63);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10004CFD4(&qword_1009D5110);
  __chkstk_darwin(v62);
  v61 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009D5118);
  __chkstk_darwin(v68);
  v65 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_10004CFD4(&qword_1009D5120);
  __chkstk_darwin(v70);
  v69 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009D5128);
  v22 = *(_QWORD *)(v21 - 8);
  v72 = v21;
  v73 = v22;
  v23 = __chkstk_darwin(v21);
  v71 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v23);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v25 = sub_10004CFD4(&qword_1009D5130);
  v26 = sub_10025A29C(v2, (uint64_t)&v13[*(int *)(v25 + 44)]);
  BorderlessButtonStyle.init()(v26);
  v27 = sub_100030B34(&qword_1009D5138, &qword_1009D50F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v28 = sub_10025BBF4();
  v29 = v60;
  View.buttonStyle<A>(_:)(v10, v11, v60, v27, v28);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v10, v29);
  sub_100010960((uint64_t)v13, &qword_1009D50F8);
  v30 = v2 + *(int *)(type metadata accessor for ContentSizeStepper(0) + 20);
  v31 = *(_QWORD *)v30;
  LOBYTE(v13) = *(_BYTE *)(v30 + 8);
  v32 = swift_retain(*(_QWORD *)v30);
  v33 = sub_1006682B0(v32, (char)v13);
  v34 = swift_release(v31);
  LOBYTE(v31) = static Edge.Set.all.getter(v34);
  v35 = v66;
  v36 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v17, v15, v67);
  v37 = &v17[*(int *)(v63 + 36)];
  *(_QWORD *)v37 = v33;
  v37[8] = v31;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
  sub_10066805C((uint64_t)v8);
  v38 = (uint64_t)v61;
  v39 = (uint64_t)&v61[*(int *)(v62 + 36)];
  sub_10025BC3C((uint64_t)v8, v39);
  *(_WORD *)(v39 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4((uint64_t)v17, v38, &qword_1009D5108);
  sub_10025BC80((uint64_t)v8);
  sub_100010960((uint64_t)v17, &qword_1009D5108);
  sub_10066805C((uint64_t)v8);
  v40 = (uint64_t)v65;
  v41 = (uint64_t)&v65[*(int *)(v68 + 36)];
  sub_10025BC3C((uint64_t)v8, v41);
  *(_BYTE *)(v41 + *(int *)(sub_10004CFD4(&qword_1009D5140) + 36)) = 0;
  sub_10000B5E4(v38, v40, &qword_1009D5110);
  sub_10025BC80((uint64_t)v8);
  v42 = sub_100010960(v38, &qword_1009D5110);
  v43 = v74;
  static ContentShapeKinds.hoverEffect.getter(v42);
  sub_10066805C((uint64_t)v8);
  v44 = (uint64_t)v69;
  v45 = v70;
  v46 = (uint64_t)&v69[*(int *)(v70 + 36)];
  sub_10025BC3C((uint64_t)v8, v46);
  v47 = sub_10004CFD4(&qword_1009D5148);
  v49 = v75;
  v48 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v46 + *(int *)(v47 + 40), v43, v76);
  *(_BYTE *)(v46 + *(int *)(v47 + 36)) = 0;
  sub_10000B5E4(v40, v44, &qword_1009D5118);
  sub_10025BC80((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v48);
  sub_100010960(v40, &qword_1009D5118);
  v82 = v2;
  v50 = sub_10004CFD4(&qword_1009D5150);
  v51 = sub_10025BCC4();
  v52 = sub_100030B34(&qword_1009D5190, &qword_1009D5150, (uint64_t)&protocol conformance descriptor for Button<A>);
  v53 = v71;
  View.contextMenu<A>(menuItems:)(sub_10025BCBC, v81, v45, v50, v51, v52);
  v54 = sub_100010960(v44, &qword_1009D5120);
  v55 = v77;
  static AccessibilityChildBehavior.contain.getter(v54);
  v83[0] = v45;
  v83[1] = v50;
  v83[2] = v51;
  v83[3] = v52;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v83, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v57 = v72;
  View.accessibilityElement(children:)(v55, v72, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v55, v80);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v53, v57);
}

uint64_t sub_10025A29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjCClassFromMetadata;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  int *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  int v89;
  int v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  id v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  unint64_t *v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  void (*v139)(char *, char *, uint64_t);
  id v140;
  unint64_t v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[2];
  unint64_t v160;
  unint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;

  v156 = a2;
  v131 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v131);
  v130 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_10004CFD4(&qword_1009D5198);
  __chkstk_darwin(v135);
  v132 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_10004CFD4(&qword_1009D51A0);
  __chkstk_darwin(v137);
  v129 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10004CFD4(&qword_1009D51A8);
  v6 = __chkstk_darwin(v146);
  v155 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v145 = (uint64_t)&v127 - v9;
  __chkstk_darwin(v8);
  v154 = (uint64_t)&v127 - v10;
  v11 = type metadata accessor for Locale(0);
  v152 = *(char **)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v127 - v15;
  v17 = type metadata accessor for String.LocalizationValue(0);
  v148 = *(char **)(v17 - 8);
  v18 = v148;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v127 - v22;
  v157 = sub_10004CFD4(&qword_1009D51B0);
  v24 = __chkstk_darwin(v157);
  v153 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v127 = (char *)&v127 - v27;
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v127 - v29;
  __chkstk_darwin(v28);
  v158 = (uint64_t)&v127 - v31;
  v32 = (int *)type metadata accessor for ContentSizeStepper(0);
  v33 = v32[7];
  v128 = a1;
  LOBYTE(v33) = *(_BYTE *)(a1 + v33);
  v34 = (uint64_t *)(a1 + v32[10]);
  v36 = *v34;
  v35 = v34[1];
  *(_QWORD *)&v165 = 0xD000000000000017;
  *((_QWORD *)&v165 + 1) = 0x80000001007B9D20;
  LOBYTE(v166) = v33;
  *((_QWORD *)&v166 + 1) = v36;
  *(_QWORD *)&v167 = v35;
  swift_retain(v35);
  v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B9D40);
  static Locale.current.getter(v37);
  v143 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v18 + 2);
  v143(v21, v23, v17);
  v38 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v38);
  v140 = (id)objc_opt_self(NSBundle);
  v142 = ObjCClassFromMetadata;
  v40 = objc_msgSend(v140, "bundleForClass:", ObjCClassFromMetadata);
  v41 = (uint64_t)v152;
  v139 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v152 + 2);
  v139(v14, v16, v11);
  v147 = v21;
  v149 = v14;
  v42 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v40, v14, "Accessibility string for a 'reduce text size' button.", 53, 2);
  v44 = v43;
  v45 = *(void (**)(char *, uint64_t))(v41 + 8);
  v150 = v16;
  v46 = v16;
  v47 = v17;
  v151 = v11;
  v48 = v11;
  v49 = (uint64_t)v127;
  v138 = v45;
  v45(v46, v48);
  v50 = (void (*)(char *, uint64_t))*((_QWORD *)v148 + 1);
  v148 = v23;
  v51 = v23;
  v52 = v32;
  v136 = v50;
  v50(v51, v17);
  v160 = v42;
  v161 = v44;
  v53 = sub_10025BF3C();
  v54 = sub_1001F2108();
  v141 = v53;
  View.accessibilityLabel<A>(_:)(&v160, &type metadata for StepperButton, &type metadata for String, v53, v54);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(*((_QWORD *)&v165 + 1));
  swift_release(v167);
  v55 = v32[6];
  v56 = v128;
  v57 = (unint64_t *)(v128 + v55);
  v58 = *(_QWORD *)(v128 + v55);
  v59 = v57[1];
  v134 = v57;
  *(_QWORD *)&v165 = v58;
  *((_QWORD *)&v165 + 1) = v59;
  v60 = (uint64_t *)(v128 + v52[12]);
  v61 = *v60;
  v62 = v60[1];
  v133 = v60;
  v63 = swift_bridgeObjectRetain(v59);
  v64 = (uint64_t)v129;
  v144 = v54;
  ModifiedContent<>.accessibilityAction<A>(named:_:)(&v165, v61, v62, v157, &type metadata for String, v54, v63);
  swift_bridgeObjectRelease(v59);
  sub_100010960(v49, &qword_1009D51B0);
  v152 = v30;
  v65 = v56;
  sub_100025B3C((uint64_t)v30, v158, &qword_1009D51B0);
  v66 = v130;
  v67 = &v130[*(int *)(v131 + 20)];
  v68 = enum case for RoundedCornerStyle.circular(_:);
  v69 = type metadata accessor for RoundedCornerStyle(0);
  v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v67, v68, v69);
  __asm { FMOV            V0.2D, #1.0 }
  *v66 = _Q0;
  v76 = static Alignment.center.getter(v70);
  _FrameLayout.init(width:height:alignment:)(&v165, 0x3FF0000000000000, 0, 0, 1, v76, v77);
  v78 = v132;
  sub_10025BC3C((uint64_t)v66, v132);
  v79 = (_OWORD *)(v78 + *(int *)(v135 + 36));
  v80 = v166;
  *v79 = v165;
  v79[1] = v80;
  v79[2] = v167;
  sub_10025BC80((uint64_t)v66);
  v81 = *(_QWORD *)(v56 + v52[9]);
  KeyPath = swift_getKeyPath(&unk_100715070);
  sub_10000B5E4(v78, v64, &qword_1009D5198);
  v83 = (uint64_t *)(v64 + *(int *)(v137 + 36));
  *v83 = KeyPath;
  v83[1] = v81;
  swift_retain(v81);
  v84 = sub_100010960(v78, &qword_1009D5198);
  v85 = static Edge.Set.top.getter(v84);
  v86 = v85;
  v87 = static Edge.Set.bottom.getter(v85);
  v88 = Edge.Set.init(rawValue:)(0);
  v89 = Edge.Set.init(rawValue:)(v88);
  if (Edge.Set.init(rawValue:)(v89 & v86) != v86)
    v88 = Edge.Set.init(rawValue:)(v88 | v86);
  v90 = Edge.Set.init(rawValue:)(v88);
  if (Edge.Set.init(rawValue:)(v90 & v87) != v87)
    LOBYTE(v88) = Edge.Set.init(rawValue:)(v88 | v87);
  v91 = EdgeInsets.init(_all:)(6.0);
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v98 = v145;
  sub_10000B5E4(v64, v145, &qword_1009D51A0);
  v99 = v98 + *(int *)(v146 + 36);
  *(_BYTE *)v99 = v88;
  *(double *)(v99 + 8) = v91;
  *(_QWORD *)(v99 + 16) = v93;
  *(_QWORD *)(v99 + 24) = v95;
  *(_QWORD *)(v99 + 32) = v97;
  *(_BYTE *)(v99 + 40) = 0;
  sub_100010960(v64, &qword_1009D51A0);
  v100 = v154;
  sub_100025B3C(v98, v154, &qword_1009D51A8);
  v101 = *(_BYTE *)(v65 + v52[8]);
  v102 = (uint64_t *)(v65 + v52[11]);
  v104 = *v102;
  v103 = v102[1];
  v160 = 0xD000000000000016;
  v161 = 0x80000001007B9DA0;
  v162 = v101;
  v163 = v104;
  v164 = v103;
  swift_retain(v103);
  v105 = v148;
  v106 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007B9DC0);
  v107 = v150;
  static Locale.current.getter(v106);
  v108 = v147;
  v143(v147, v105, v47);
  v109 = objc_msgSend(v140, "bundleForClass:", v142);
  v110 = v149;
  v111 = v151;
  v139(v149, v107, v151);
  v112 = String.init(localized:table:bundle:locale:comment:)(v108, 0, 0, v109, v110, "Accessibility string for an 'increase text size' button.", 56, 2);
  v114 = v113;
  v138(v107, v111);
  v136(v105, v47);
  v159[0] = v112;
  v159[1] = v114;
  v115 = (uint64_t)v153;
  v116 = v144;
  View.accessibilityLabel<A>(_:)(v159, &type metadata for StepperButton, &type metadata for String, v141, v144);
  swift_bridgeObjectRelease(v114);
  swift_bridgeObjectRelease(v161);
  swift_release(v164);
  v117 = v134[1];
  v160 = *v134;
  v161 = v117;
  v118 = *v133;
  v119 = v133[1];
  v120 = swift_bridgeObjectRetain(v117);
  ModifiedContent<>.accessibilityAction<A>(named:_:)(&v160, v118, v119, v157, &type metadata for String, v116, v120);
  swift_bridgeObjectRelease(v117);
  sub_100010960(v115, &qword_1009D51B0);
  v121 = (uint64_t)v152;
  sub_100025B3C(v49, (uint64_t)v152, &qword_1009D51B0);
  v122 = v158;
  sub_10000B5E4(v158, v49, &qword_1009D51B0);
  v123 = v155;
  sub_10000B5E4(v100, v155, &qword_1009D51A8);
  sub_10000B5E4(v121, v115, &qword_1009D51B0);
  v124 = v156;
  sub_10000B5E4(v49, v156, &qword_1009D51B0);
  v125 = sub_10004CFD4(&qword_1009D51C0);
  sub_10000B5E4(v123, v124 + *(int *)(v125 + 48), &qword_1009D51A8);
  sub_10000B5E4(v115, v124 + *(int *)(v125 + 64), &qword_1009D51B0);
  sub_100010960(v121, &qword_1009D51B0);
  sub_100010960(v100, &qword_1009D51A8);
  sub_100010960(v122, &qword_1009D51B0);
  sub_100010960(v115, &qword_1009D51B0);
  sub_100010960(v123, &qword_1009D51A8);
  return sub_100010960(v49, &qword_1009D51B0);
}

uint64_t sub_10025AD48(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ContentSizeStepper(0) + 48));
  v3 = *v2;
  v4 = v2[1];
  v8[2] = a1;
  swift_retain(v4);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v6 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  return Button.init(action:label:)(v3, v4, sub_10025BF34, v8, v5, v6);
}

uint64_t sub_10025ADF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[2];

  v1 = (_QWORD *)(a1 + *(int *)(type metadata accessor for ContentSizeStepper(0) + 24));
  v2 = v1[1];
  v5[0] = *v1;
  v5[1] = v2;
  v3 = sub_1001F2108();
  swift_bridgeObjectRetain(v2);
  return Label<>.init<A>(_:systemImage:)(v5, 0xD00000000000001BLL, 0x80000001007B9D00, &type metadata for String, v3);
}

uint64_t sub_10025AE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjCClassFromMetadata;
  id v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v55 = a5;
  v53 = a4;
  LODWORD(v51) = a3;
  v60 = a13;
  v61 = a8;
  v58 = a12;
  v59 = a7;
  v56 = a11;
  v57 = a6;
  v54 = a10;
  v52 = type metadata accessor for Locale(0);
  v16 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v49 - v20;
  v22 = type metadata accessor for String.LocalizationValue(0);
  v23 = *(_QWORD *)(v22 - 8);
  v50 = v22;
  __chkstk_darwin(v22);
  v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v49 - v27;
  sub_100025B3C(a1, a9, &qword_1009D5030);
  v29 = (int *)type metadata accessor for ContentSizeStepper(0);
  v30 = a9 + v29[5];
  *(_QWORD *)v30 = a2;
  *(_BYTE *)(v30 + 8) = v51 & 1;
  v51 = (uint64_t *)(a9 + v29[6]);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6554207465736552, 0xEF657A6953207478);
  static Locale.current.getter(v31);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v28, v22);
  v32 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32);
  v34 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v35 = v16;
  v36 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v37 = v52;
  v36(v18, v21, v52);
  v38 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v34, v18, "Reading settings reset text size menu text", 42, 2);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v37);
  result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v28, v50);
  v42 = v51;
  *v51 = v38;
  v42[1] = v40;
  *(_BYTE *)(a9 + v29[7]) = v53;
  *(_BYTE *)(a9 + v29[8]) = v55;
  *(_QWORD *)(a9 + v29[9]) = v57;
  v43 = (_QWORD *)(a9 + v29[10]);
  v44 = v61;
  *v43 = v59;
  v43[1] = v44;
  v45 = (_QWORD *)(a9 + v29[11]);
  v46 = v56;
  *v45 = v54;
  v45[1] = v46;
  v47 = (_QWORD *)(a9 + v29[12]);
  v48 = v60;
  *v47 = v58;
  v47[1] = v48;
  return result;
}

uint64_t type metadata accessor for ContentSizeStepper(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D5098;
  if (!qword_1009D5098)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContentSizeStepper);
  return result;
}

_OWORD *sub_10025B170(_QWORD *a1, _QWORD *a2, int *a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (_OWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      *v4 = *(_OWORD *)a2;
      v8 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v9 = (char *)v4 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = v4;
      v13 = v7;
      v14 = 1;
    }
    else
    {
      v16 = *a2;
      *(_QWORD *)v4 = *a2;
      swift_retain(v16);
      v12 = v4;
      v13 = v7;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
    v17 = a3[5];
    v18 = a3[6];
    v19 = (char *)v4 + v17;
    v20 = (char *)a2 + v17;
    v21 = *(_QWORD *)v20;
    LOBYTE(v20) = v20[8];
    *(_QWORD *)v19 = v21;
    v19[8] = (char)v20;
    v22 = (_QWORD *)((char *)v4 + v18);
    v23 = (_QWORD *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v25) = *((_BYTE *)a2 + v25);
    v26 = a3[9];
    v27 = a3[10];
    v28 = *(_QWORD *)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + v26) = v28;
    v29 = (_QWORD *)((char *)v4 + v27);
    v30 = (_QWORD *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[11];
    v33 = a3[12];
    v34 = (_QWORD *)((char *)v4 + v32);
    v35 = (_QWORD *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (_QWORD *)((char *)v4 + v33);
    v38 = (_QWORD *)((char *)a2 + v33);
    v15 = v38[1];
    *v37 = *v38;
    v37[1] = v15;
    swift_retain(v21);
    swift_bridgeObjectRetain(v24);
    swift_retain(v28);
    swift_retain(v31);
    swift_retain(v36);
  }
  swift_retain(v15);
  return v4;
}

double sub_10025B308(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double result;

  v4 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = (char *)a1 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v6 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[9]));
  swift_release(*(_QWORD *)((char *)a1 + a2[10] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[11] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[12] + 8)).n128_u64[0];
  return result;
}

_OWORD *sub_10025B3DC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v6 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a1;
    v12 = v6;
    v13 = 1;
  }
  else
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain(v14);
    v11 = a1;
    v12 = v6;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v15 = a3[5];
  v16 = a3[6];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = v18[8];
  *(_QWORD *)v17 = v19;
  v17[8] = (char)v18;
  v20 = (_QWORD *)((char *)a1 + v16);
  v21 = (_QWORD *)((char *)a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  v24 = a3[9];
  v25 = a3[10];
  v26 = *(_QWORD *)((char *)a2 + v24);
  *(_QWORD *)((char *)a1 + v24) = v26;
  v27 = (_QWORD *)((char *)a1 + v25);
  v28 = (_QWORD *)((char *)a2 + v25);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[11];
  v31 = a3[12];
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (_QWORD *)((char *)a1 + v31);
  v36 = (_QWORD *)((char *)a2 + v31);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  swift_retain(v19);
  swift_bridgeObjectRetain(v22);
  swift_retain(v26);
  swift_retain(v29);
  swift_retain(v34);
  swift_retain(v37);
  return a1;
}

_OWORD *sub_10025B54C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D5038);
    v6 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v14 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain(v14);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  v15 = a3[5];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = v17[8];
  v19 = *(_QWORD *)v16;
  *(_QWORD *)v16 = v18;
  v16[8] = (char)v17;
  swift_retain(v18);
  swift_release(v19);
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v23 = v22[1];
  v24 = v21[1];
  v21[1] = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v25 = a3[9];
  v26 = *(_QWORD *)((char *)a2 + v25);
  v27 = *(_QWORD *)((char *)a1 + v25);
  *(_QWORD *)((char *)a1 + v25) = v26;
  swift_retain(v26);
  swift_release(v27);
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = v30[1];
  v32 = v29[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain(v31);
  swift_release(v32);
  v33 = a3[11];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v36 = v35[1];
  v37 = v34[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_retain(v36);
  swift_release(v37);
  v38 = a3[12];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = v40[1];
  v42 = v39[1];
  *v39 = *v40;
  v39[1] = v41;
  swift_retain(v41);
  swift_release(v42);
  return a1;
}

_OWORD *sub_10025B720(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v15 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  v17 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  return a1;
}

_OWORD *sub_10025B840(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D5038);
    v6 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  swift_release(v15);
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[9];
  v24 = *(_QWORD *)((char *)a1 + v23);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  swift_release(v24);
  v25 = a3[10];
  v26 = *(_QWORD *)((char *)a1 + v25 + 8);
  *(_OWORD *)((char *)a1 + v25) = *(_OWORD *)((char *)a2 + v25);
  swift_release(v26);
  v27 = a3[11];
  v28 = *(_QWORD *)((char *)a1 + v27 + 8);
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  swift_release(v28);
  v29 = a3[12];
  v30 = *(_QWORD *)((char *)a1 + v29 + 8);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  swift_release(v30);
  return a1;
}

uint64_t sub_10025B9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025B9D4);
}

uint64_t sub_10025B9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4(&qword_1009D5030);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10025BA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025BA64);
}

uint64_t sub_10025BA64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009D5030);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_10025BAE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  sub_10025BB8C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100714FF0;
    v4[3] = &unk_100715008;
    v4[4] = &unk_100715008;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for () + 64;
    v4[7] = (char *)&value witness table for () + 64;
    v4[8] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
  }
}

void sub_10025BB8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D50A8)
  {
    v2 = type metadata accessor for RoundedRectangle(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D50A8);
  }
}

uint64_t sub_10025BBE0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086920C, 1);
}

unint64_t sub_10025BBF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EBC10;
  if (!qword_1009EBC10)
  {
    v1 = type metadata accessor for BorderlessButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderlessButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1009EBC10);
  }
  return result;
}

uint64_t sub_10025BC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025BC80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10025BCBC()
{
  uint64_t v0;

  return sub_10025AD48(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10025BCC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5158;
  if (!qword_1009D5158)
  {
    v1 = sub_100030B74(&qword_1009D5120);
    sub_10025BD48();
    sub_100030B34(&qword_1009D5188, &qword_1009D5148, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5158);
  }
  return result;
}

unint64_t sub_10025BD48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5160;
  if (!qword_1009D5160)
  {
    v1 = sub_100030B74(&qword_1009D5118);
    sub_10025BDCC();
    sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5160);
  }
  return result;
}

unint64_t sub_10025BDCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5168;
  if (!qword_1009D5168)
  {
    v1 = sub_100030B74(&qword_1009D5110);
    sub_10025BE50();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5168);
  }
  return result;
}

unint64_t sub_10025BE50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D5170;
  if (!qword_1009D5170)
  {
    v1 = sub_100030B74(&qword_1009D5108);
    v2[0] = sub_100030B74(&qword_1009D50F8);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_100030B34(&qword_1009D5138, &qword_1009D50F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v2[3] = sub_10025BBF4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5170);
  }
  return result;
}

uint64_t sub_10025BF34()
{
  uint64_t v0;

  return sub_10025ADF0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10025BF3C()
{
  unint64_t result;

  result = qword_1009D51B8;
  if (!qword_1009D51B8)
  {
    result = swift_getWitnessTable(&unk_1007345D4, &type metadata for StepperButton);
    atomic_store(result, (unint64_t *)&qword_1009D51B8);
  }
  return result;
}

uint64_t sub_10025BF88()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = sub_100030B74(&qword_1009D5128);
  v3 = sub_100030B74(&qword_1009D5120);
  v4 = sub_100030B74(&qword_1009D5150);
  v5 = sub_10025BCC4();
  v6 = sub_100030B34(&qword_1009D5190, &qword_1009D5150, (uint64_t)&protocol conformance descriptor for Button<A>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v3 = v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

char *sub_10025C040(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  int *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  int *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t EnumCaseMultiPayload;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  int *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  int *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  int *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  id v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v17);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = type metadata accessor for SpreadPaginationEntity(0);
        v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
        v9(a1, a2, v8);
        v10 = (int *)_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
        v11 = v10[5];
        v12 = *(void **)&a2[v11];
        *(_QWORD *)&a1[v11] = v12;
        a1[v10[6]] = a2[v10[6]];
        v13 = v10[7];
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = v12;
        v9(v14, v15, v8);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v19 = type metadata accessor for SpreadPaginationEntity(0);
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        v20(a1, a2, v19);
        v21 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        v22 = v21[5];
        v23 = *(void **)&a2[v22];
        *(_QWORD *)&a1[v22] = v23;
        a1[v21[6]] = a2[v21[6]];
        v24 = v21[7];
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = v23;
        v20(v25, v26, v19);
        v28 = v21[8];
        v29 = *(void **)&a2[v28];
        *(_QWORD *)&a1[v28] = v29;
        *(_QWORD *)&a1[v21[9]] = *(_QWORD *)&a2[v21[9]];
        *(_QWORD *)&a1[v21[10]] = *(_QWORD *)&a2[v21[10]];
        v30 = v29;
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v31 = type metadata accessor for SpreadPaginationEntity(0);
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        v32(a1, a2, v31);
        v33 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        v34 = v33[5];
        v35 = *(void **)&a2[v34];
        *(_QWORD *)&a1[v34] = v35;
        a1[v33[6]] = a2[v33[6]];
        v36 = v33[7];
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = v35;
        v32(v37, v38, v31);
        v40 = v33[8];
        v41 = *(void **)&a2[v40];
        *(_QWORD *)&a1[v40] = v41;
        *(_QWORD *)&a1[v33[9]] = *(_QWORD *)&a2[v33[9]];
        *(_QWORD *)&a1[v33[10]] = *(_QWORD *)&a2[v33[10]];
        v42 = v41;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v43 = type metadata accessor for SpreadPaginationEntity(0);
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        v44(a1, a2, v43);
        v45 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
        v46 = v45[5];
        v47 = *(void **)&a2[v46];
        *(_QWORD *)&a1[v46] = v47;
        v48 = v45[6];
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = v47;
        v52 = sub_10004CFD4(&qword_1009D51F8);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v50, v52);
        if ((_DWORD)EnumCaseMultiPayload == 2)
        {
          v44(v49, v50, v43);
          v100 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v54 = &v49[v100];
          v55 = &v50[v100];
        }
        else
        {
          v54 = v49;
          v55 = v50;
        }
        v44(v54, v55, v43);
        swift_storeEnumTagMultiPayload(v49, v52, EnumCaseMultiPayload);
        *(_QWORD *)&a1[v45[7]] = *(_QWORD *)&a2[v45[7]];
        *(_QWORD *)&a1[v45[8]] = *(_QWORD *)&a2[v45[8]];
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v56 = type metadata accessor for SpreadPaginationEntity(0);
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        v57(a1, a2, v56);
        v58 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
        v59 = v58[5];
        v60 = *(void **)&a2[v59];
        *(_QWORD *)&a1[v59] = v60;
        v61 = v58[6];
        v62 = *(void **)&a2[v61];
        *(_QWORD *)&a1[v61] = v62;
        v63 = v58[7];
        v64 = &a1[v63];
        v65 = &a2[v63];
        v66 = v60;
        v67 = v62;
        v68 = sub_10004CFD4(&qword_1009D51F8);
        v69 = swift_getEnumCaseMultiPayload(v65, v68);
        if ((_DWORD)v69 == 2)
        {
          v57(v64, v65, v56);
          v101 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v70 = &v64[v101];
          v71 = &v65[v101];
        }
        else
        {
          v70 = v64;
          v71 = v65;
        }
        v57(v70, v71, v56);
        swift_storeEnumTagMultiPayload(v64, v68, v69);
        *(_QWORD *)&a1[v58[8]] = *(_QWORD *)&a2[v58[8]];
        *(_QWORD *)&a1[v58[9]] = *(_QWORD *)&a2[v58[9]];
        *(_QWORD *)&a1[v58[10]] = *(_QWORD *)&a2[v58[10]];
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v72 = type metadata accessor for SpreadPaginationEntity(0);
        v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
        v73(a1, a2, v72);
        v74 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
        v75 = v74[5];
        v76 = *(void **)&a2[v75];
        *(_QWORD *)&a1[v75] = v76;
        v77 = v74[6];
        v78 = *(void **)&a2[v77];
        *(_QWORD *)&a1[v77] = v78;
        v79 = v74[7];
        v80 = &a1[v79];
        v81 = &a2[v79];
        v82 = v76;
        v83 = v78;
        v84 = sub_10004CFD4(&qword_1009D51F8);
        v85 = swift_getEnumCaseMultiPayload(v81, v84);
        if ((_DWORD)v85 == 2)
        {
          v73(v80, v81, v72);
          v102 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v86 = &v80[v102];
          v87 = &v81[v102];
        }
        else
        {
          v86 = v80;
          v87 = v81;
        }
        v73(v86, v87, v72);
        swift_storeEnumTagMultiPayload(v80, v84, v85);
        *(_QWORD *)&a1[v74[8]] = *(_QWORD *)&a2[v74[8]];
        *(_QWORD *)&a1[v74[9]] = *(_QWORD *)&a2[v74[9]];
        *(_QWORD *)&a1[v74[10]] = *(_QWORD *)&a2[v74[10]];
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v88 = type metadata accessor for SpreadPaginationEntity(0);
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        v89(a1, a2, v88);
        v90 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        v91 = v90[5];
        v92 = *(void **)&a2[v91];
        *(_QWORD *)&a1[v91] = v92;
        a1[v90[6]] = a2[v90[6]];
        v93 = v90[7];
        v94 = &a1[v93];
        v95 = &a2[v93];
        v96 = v92;
        v89(v94, v95, v88);
        v97 = v90[8];
        v98 = *(void **)&a2[v97];
        *(_QWORD *)&a1[v97] = v98;
        *(_QWORD *)&a1[v90[9]] = *(_QWORD *)&a2[v90[9]];
        *(_QWORD *)&a1[v90[10]] = *(_QWORD *)&a2[v90[10]];
        v99 = v98;
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D5580, (uint64_t)&_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMn);
}

uint64_t _s14descr1008F7311C5StateO4TurnVMa(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D54D8, (uint64_t)&_s14descr1008F7311C5StateO4TurnVMn);
}

uint64_t _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D5438, (uint64_t)&_s14descr1008F7311C5StateO21CapturingDragSnapshotVMn);
}

uint64_t _s14descr1008F7311C5StateO8DraggingVMa(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009D5308, (uint64_t)&_s14descr1008F7311C5StateO8DraggingVMn);
}

void sub_10025C6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v6 = type metadata accessor for SpreadPaginationEntity(0);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v15(v2, v6);
      v9 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);

      v10 = *(int *)(v9 + 28);
      goto LABEL_11;
    case 1u:
    case 2u:
    case 6u:
      v3 = type metadata accessor for SpreadPaginationEntity(0);
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(v2, v3);
      v5 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

      v4(v2 + v5[7], v3);
      return;
    case 3u:
      v6 = type metadata accessor for SpreadPaginationEntity(0);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v15(v2, v6);
      v11 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);

      v8 = *(int *)(v11 + 24);
      goto LABEL_6;
    case 4u:
    case 5u:
      v6 = type metadata accessor for SpreadPaginationEntity(0);
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v15(v2, v6);
      v7 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);

      v8 = v7[7];
LABEL_6:
      v2 += v8;
      v12 = sub_10004CFD4(&qword_1009D51F8);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v12);
      if (EnumCaseMultiPayload == 2)
      {
        v15(v2, v6);
        v10 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
LABEL_11:
        v14 = v2 + v10;
      }
      else
      {
        if (EnumCaseMultiPayload > 1)
          return;
        v14 = v2;
      }
      v15(v14, v6);
      return;
    default:
      return;
  }
}

char *sub_10025C8B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  int *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t EnumCaseMultiPayload;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  int *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  int *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  int *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  id v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for SpreadPaginationEntity(0);
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = (int *)_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
      v9 = v8[5];
      v10 = *(void **)&a2[v9];
      *(_QWORD *)&a1[v9] = v10;
      a1[v8[6]] = a2[v8[6]];
      v11 = v8[7];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = v10;
      v7(v12, v13, v6);
      v15 = a1;
      v16 = a3;
      v17 = 0;
      goto LABEL_19;
    case 1u:
      v18 = type metadata accessor for SpreadPaginationEntity(0);
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(a1, a2, v18);
      v20 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      v21 = v20[5];
      v22 = *(void **)&a2[v21];
      *(_QWORD *)&a1[v21] = v22;
      a1[v20[6]] = a2[v20[6]];
      v23 = v20[7];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = v22;
      v19(v24, v25, v18);
      v27 = v20[8];
      v28 = *(void **)&a2[v27];
      *(_QWORD *)&a1[v27] = v28;
      *(_QWORD *)&a1[v20[9]] = *(_QWORD *)&a2[v20[9]];
      *(_QWORD *)&a1[v20[10]] = *(_QWORD *)&a2[v20[10]];
      v29 = v28;
      v15 = a1;
      v16 = a3;
      v17 = 1;
      goto LABEL_19;
    case 2u:
      v30 = type metadata accessor for SpreadPaginationEntity(0);
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      v31(a1, a2, v30);
      v32 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      v33 = v32[5];
      v34 = *(void **)&a2[v33];
      *(_QWORD *)&a1[v33] = v34;
      a1[v32[6]] = a2[v32[6]];
      v35 = v32[7];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = v34;
      v31(v36, v37, v30);
      v39 = v32[8];
      v40 = *(void **)&a2[v39];
      *(_QWORD *)&a1[v39] = v40;
      *(_QWORD *)&a1[v32[9]] = *(_QWORD *)&a2[v32[9]];
      *(_QWORD *)&a1[v32[10]] = *(_QWORD *)&a2[v32[10]];
      v41 = v40;
      v15 = a1;
      v16 = a3;
      v17 = 2;
      goto LABEL_19;
    case 3u:
      v42 = type metadata accessor for SpreadPaginationEntity(0);
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      v43(a1, a2, v42);
      v44 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
      v45 = v44[5];
      v46 = *(void **)&a2[v45];
      *(_QWORD *)&a1[v45] = v46;
      v47 = v44[6];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = v46;
      v51 = sub_10004CFD4(&qword_1009D51F8);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49, v51);
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v43(v48, v49, v42);
        v99 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
        v53 = &v48[v99];
        v54 = &v49[v99];
      }
      else
      {
        v53 = v48;
        v54 = v49;
      }
      v43(v53, v54, v42);
      swift_storeEnumTagMultiPayload(v48, v51, EnumCaseMultiPayload);
      *(_QWORD *)&a1[v44[7]] = *(_QWORD *)&a2[v44[7]];
      *(_QWORD *)&a1[v44[8]] = *(_QWORD *)&a2[v44[8]];
      v15 = a1;
      v16 = a3;
      v17 = 3;
      goto LABEL_19;
    case 4u:
      v55 = type metadata accessor for SpreadPaginationEntity(0);
      v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
      v56(a1, a2, v55);
      v57 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
      v58 = v57[5];
      v59 = *(void **)&a2[v58];
      *(_QWORD *)&a1[v58] = v59;
      v60 = v57[6];
      v61 = *(void **)&a2[v60];
      *(_QWORD *)&a1[v60] = v61;
      v62 = v57[7];
      v63 = &a1[v62];
      v64 = &a2[v62];
      v65 = v59;
      v66 = v61;
      v67 = sub_10004CFD4(&qword_1009D51F8);
      v68 = swift_getEnumCaseMultiPayload(v64, v67);
      if ((_DWORD)v68 == 2)
      {
        v56(v63, v64, v55);
        v100 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
        v69 = &v63[v100];
        v70 = &v64[v100];
      }
      else
      {
        v69 = v63;
        v70 = v64;
      }
      v56(v69, v70, v55);
      swift_storeEnumTagMultiPayload(v63, v67, v68);
      *(_QWORD *)&a1[v57[8]] = *(_QWORD *)&a2[v57[8]];
      *(_QWORD *)&a1[v57[9]] = *(_QWORD *)&a2[v57[9]];
      *(_QWORD *)&a1[v57[10]] = *(_QWORD *)&a2[v57[10]];
      v15 = a1;
      v16 = a3;
      v17 = 4;
      goto LABEL_19;
    case 5u:
      v71 = type metadata accessor for SpreadPaginationEntity(0);
      v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
      v72(a1, a2, v71);
      v73 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
      v74 = v73[5];
      v75 = *(void **)&a2[v74];
      *(_QWORD *)&a1[v74] = v75;
      v76 = v73[6];
      v77 = *(void **)&a2[v76];
      *(_QWORD *)&a1[v76] = v77;
      v78 = v73[7];
      v79 = &a1[v78];
      v80 = &a2[v78];
      v81 = v75;
      v82 = v77;
      v83 = sub_10004CFD4(&qword_1009D51F8);
      v84 = swift_getEnumCaseMultiPayload(v80, v83);
      if ((_DWORD)v84 == 2)
      {
        v72(v79, v80, v71);
        v101 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
        v85 = &v79[v101];
        v86 = &v80[v101];
      }
      else
      {
        v85 = v79;
        v86 = v80;
      }
      v72(v85, v86, v71);
      swift_storeEnumTagMultiPayload(v79, v83, v84);
      *(_QWORD *)&a1[v73[8]] = *(_QWORD *)&a2[v73[8]];
      *(_QWORD *)&a1[v73[9]] = *(_QWORD *)&a2[v73[9]];
      *(_QWORD *)&a1[v73[10]] = *(_QWORD *)&a2[v73[10]];
      v15 = a1;
      v16 = a3;
      v17 = 5;
      goto LABEL_19;
    case 6u:
      v87 = type metadata accessor for SpreadPaginationEntity(0);
      v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
      v88(a1, a2, v87);
      v89 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      v90 = v89[5];
      v91 = *(void **)&a2[v90];
      *(_QWORD *)&a1[v90] = v91;
      a1[v89[6]] = a2[v89[6]];
      v92 = v89[7];
      v93 = &a1[v92];
      v94 = &a2[v92];
      v95 = v91;
      v88(v93, v94, v87);
      v96 = v89[8];
      v97 = *(void **)&a2[v96];
      *(_QWORD *)&a1[v96] = v97;
      *(_QWORD *)&a1[v89[9]] = *(_QWORD *)&a2[v89[9]];
      *(_QWORD *)&a1[v89[10]] = *(_QWORD *)&a2[v89[10]];
      v98 = v97;
      v15 = a1;
      v16 = a3;
      v17 = 6;
LABEL_19:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_10025CE98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  int *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t EnumCaseMultiPayload;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  int *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  int *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  int *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  id v95;
  uint64_t v96;
  void *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  if (a1 != a2)
  {
    sub_10002C8F0((uint64_t)a1, _s14descr1008F7311C5StateOMa);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for SpreadPaginationEntity(0);
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        v8 = (int *)_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
        v9 = v8[5];
        v10 = *(void **)&a2[v9];
        *(_QWORD *)&a1[v9] = v10;
        a1[v8[6]] = a2[v8[6]];
        v11 = v8[7];
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = v10;
        v7(v12, v13, v6);
        v15 = a1;
        v16 = a3;
        v17 = 0;
        goto LABEL_20;
      case 1u:
        v18 = type metadata accessor for SpreadPaginationEntity(0);
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        v20 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        v21 = v20[5];
        v22 = *(void **)&a2[v21];
        *(_QWORD *)&a1[v21] = v22;
        a1[v20[6]] = a2[v20[6]];
        v23 = v20[7];
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = v22;
        v19(v24, v25, v18);
        v27 = v20[8];
        v28 = *(void **)&a2[v27];
        *(_QWORD *)&a1[v27] = v28;
        *(_QWORD *)&a1[v20[9]] = *(_QWORD *)&a2[v20[9]];
        *(_QWORD *)&a1[v20[10]] = *(_QWORD *)&a2[v20[10]];
        v29 = v28;
        v15 = a1;
        v16 = a3;
        v17 = 1;
        goto LABEL_20;
      case 2u:
        v30 = type metadata accessor for SpreadPaginationEntity(0);
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        v31(a1, a2, v30);
        v32 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        v33 = v32[5];
        v34 = *(void **)&a2[v33];
        *(_QWORD *)&a1[v33] = v34;
        a1[v32[6]] = a2[v32[6]];
        v35 = v32[7];
        v36 = &a1[v35];
        v37 = &a2[v35];
        v38 = v34;
        v31(v36, v37, v30);
        v39 = v32[8];
        v40 = *(void **)&a2[v39];
        *(_QWORD *)&a1[v39] = v40;
        *(_QWORD *)&a1[v32[9]] = *(_QWORD *)&a2[v32[9]];
        *(_QWORD *)&a1[v32[10]] = *(_QWORD *)&a2[v32[10]];
        v41 = v40;
        v15 = a1;
        v16 = a3;
        v17 = 2;
        goto LABEL_20;
      case 3u:
        v42 = type metadata accessor for SpreadPaginationEntity(0);
        v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
        v43(a1, a2, v42);
        v44 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
        v45 = v44[5];
        v46 = *(void **)&a2[v45];
        *(_QWORD *)&a1[v45] = v46;
        v47 = v44[6];
        v48 = &a1[v47];
        v49 = &a2[v47];
        v50 = v46;
        v51 = sub_10004CFD4(&qword_1009D51F8);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49, v51);
        if ((_DWORD)EnumCaseMultiPayload == 2)
        {
          v43(v48, v49, v42);
          v99 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v53 = &v48[v99];
          v54 = &v49[v99];
        }
        else
        {
          v53 = v48;
          v54 = v49;
        }
        v43(v53, v54, v42);
        swift_storeEnumTagMultiPayload(v48, v51, EnumCaseMultiPayload);
        *(_QWORD *)&a1[v44[7]] = *(_QWORD *)&a2[v44[7]];
        *(_QWORD *)&a1[v44[8]] = *(_QWORD *)&a2[v44[8]];
        v15 = a1;
        v16 = a3;
        v17 = 3;
        goto LABEL_20;
      case 4u:
        v55 = type metadata accessor for SpreadPaginationEntity(0);
        v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
        v56(a1, a2, v55);
        v57 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
        v58 = v57[5];
        v59 = *(void **)&a2[v58];
        *(_QWORD *)&a1[v58] = v59;
        v60 = v57[6];
        v61 = *(void **)&a2[v60];
        *(_QWORD *)&a1[v60] = v61;
        v62 = v57[7];
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = v59;
        v66 = v61;
        v67 = sub_10004CFD4(&qword_1009D51F8);
        v68 = swift_getEnumCaseMultiPayload(v64, v67);
        if ((_DWORD)v68 == 2)
        {
          v56(v63, v64, v55);
          v100 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v69 = &v63[v100];
          v70 = &v64[v100];
        }
        else
        {
          v69 = v63;
          v70 = v64;
        }
        v56(v69, v70, v55);
        swift_storeEnumTagMultiPayload(v63, v67, v68);
        *(_QWORD *)&a1[v57[8]] = *(_QWORD *)&a2[v57[8]];
        *(_QWORD *)&a1[v57[9]] = *(_QWORD *)&a2[v57[9]];
        *(_QWORD *)&a1[v57[10]] = *(_QWORD *)&a2[v57[10]];
        v15 = a1;
        v16 = a3;
        v17 = 4;
        goto LABEL_20;
      case 5u:
        v71 = type metadata accessor for SpreadPaginationEntity(0);
        v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        v72(a1, a2, v71);
        v73 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
        v74 = v73[5];
        v75 = *(void **)&a2[v74];
        *(_QWORD *)&a1[v74] = v75;
        v76 = v73[6];
        v77 = *(void **)&a2[v76];
        *(_QWORD *)&a1[v76] = v77;
        v78 = v73[7];
        v79 = &a1[v78];
        v80 = &a2[v78];
        v81 = v75;
        v82 = v77;
        v83 = sub_10004CFD4(&qword_1009D51F8);
        v84 = swift_getEnumCaseMultiPayload(v80, v83);
        if ((_DWORD)v84 == 2)
        {
          v72(v79, v80, v71);
          v101 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v85 = &v79[v101];
          v86 = &v80[v101];
        }
        else
        {
          v85 = v79;
          v86 = v80;
        }
        v72(v85, v86, v71);
        swift_storeEnumTagMultiPayload(v79, v83, v84);
        *(_QWORD *)&a1[v73[8]] = *(_QWORD *)&a2[v73[8]];
        *(_QWORD *)&a1[v73[9]] = *(_QWORD *)&a2[v73[9]];
        *(_QWORD *)&a1[v73[10]] = *(_QWORD *)&a2[v73[10]];
        v15 = a1;
        v16 = a3;
        v17 = 5;
        goto LABEL_20;
      case 6u:
        v87 = type metadata accessor for SpreadPaginationEntity(0);
        v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
        v88(a1, a2, v87);
        v89 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        v90 = v89[5];
        v91 = *(void **)&a2[v90];
        *(_QWORD *)&a1[v90] = v91;
        a1[v89[6]] = a2[v89[6]];
        v92 = v89[7];
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = v91;
        v88(v93, v94, v87);
        v96 = v89[8];
        v97 = *(void **)&a2[v96];
        *(_QWORD *)&a1[v96] = v97;
        *(_QWORD *)&a1[v89[9]] = *(_QWORD *)&a2[v89[9]];
        *(_QWORD *)&a1[v89[10]] = *(_QWORD *)&a2[v89[10]];
        v98 = v97;
        v15 = a1;
        v16 = a3;
        v17 = 6;
LABEL_20:
        swift_storeEnumTagMultiPayload(v15, v16, v17);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s14descr1008F7311C5StateOMa(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D5278, (uint64_t)&_s14descr1008F7311C5StateOMn);
}

_BYTE *sub_10025D4A4(_BYTE *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, char *, uint64_t);
  int *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t EnumCaseMultiPayload;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, char *, uint64_t);
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for SpreadPaginationEntity(0);
      v7 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
      *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
      a1[v8[6]] = a2[v8[6]];
      v7(&a1[v8[7]], &a2[v8[7]], v6);
      v9 = a1;
      v10 = a3;
      v11 = 0;
      goto LABEL_19;
    case 1u:
      v12 = type metadata accessor for SpreadPaginationEntity(0);
      v13 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(a1, a2, v12);
      v14 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
      a1[v14[6]] = a2[v14[6]];
      v13(&a1[v14[7]], &a2[v14[7]], v12);
      *(_QWORD *)&a1[v14[8]] = *(_QWORD *)&a2[v14[8]];
      *(_QWORD *)&a1[v14[9]] = *(_QWORD *)&a2[v14[9]];
      *(_QWORD *)&a1[v14[10]] = *(_QWORD *)&a2[v14[10]];
      v9 = a1;
      v10 = a3;
      v11 = 1;
      goto LABEL_19;
    case 2u:
      v15 = type metadata accessor for SpreadPaginationEntity(0);
      v16 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
      v16(a1, a2, v15);
      v17 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      *(_QWORD *)&a1[v17[5]] = *(_QWORD *)&a2[v17[5]];
      a1[v17[6]] = a2[v17[6]];
      v16(&a1[v17[7]], &a2[v17[7]], v15);
      *(_QWORD *)&a1[v17[8]] = *(_QWORD *)&a2[v17[8]];
      *(_QWORD *)&a1[v17[9]] = *(_QWORD *)&a2[v17[9]];
      *(_QWORD *)&a1[v17[10]] = *(_QWORD *)&a2[v17[10]];
      v9 = a1;
      v10 = a3;
      v11 = 2;
      goto LABEL_19;
    case 3u:
      v18 = type metadata accessor for SpreadPaginationEntity(0);
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      v20 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
      *(_QWORD *)&a1[v20[5]] = *(_QWORD *)&a2[v20[5]];
      v21 = v20[6];
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = sub_10004CFD4(&qword_1009D51F8);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v24);
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v19(v22, v23, v18);
        v51 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
        v26 = &v22[v51];
        v27 = &v23[v51];
      }
      else
      {
        v26 = v22;
        v27 = v23;
      }
      v19(v26, v27, v18);
      swift_storeEnumTagMultiPayload(v22, v24, EnumCaseMultiPayload);
      *(_QWORD *)&a1[v20[7]] = *(_QWORD *)&a2[v20[7]];
      *(_QWORD *)&a1[v20[8]] = *(_QWORD *)&a2[v20[8]];
      v9 = a1;
      v10 = a3;
      v11 = 3;
      goto LABEL_19;
    case 4u:
      v28 = type metadata accessor for SpreadPaginationEntity(0);
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
      v29(a1, a2, v28);
      v30 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
      *(_QWORD *)&a1[v30[5]] = *(_QWORD *)&a2[v30[5]];
      *(_QWORD *)&a1[v30[6]] = *(_QWORD *)&a2[v30[6]];
      v31 = v30[7];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = sub_10004CFD4(&qword_1009D51F8);
      v35 = swift_getEnumCaseMultiPayload(v33, v34);
      if ((_DWORD)v35 == 2)
      {
        v29(v32, v33, v28);
        v52 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
        v36 = &v32[v52];
        v37 = &v33[v52];
      }
      else
      {
        v36 = v32;
        v37 = v33;
      }
      v29(v36, v37, v28);
      swift_storeEnumTagMultiPayload(v32, v34, v35);
      *(_QWORD *)&a1[v30[8]] = *(_QWORD *)&a2[v30[8]];
      *(_QWORD *)&a1[v30[9]] = *(_QWORD *)&a2[v30[9]];
      *(_QWORD *)&a1[v30[10]] = *(_QWORD *)&a2[v30[10]];
      v9 = a1;
      v10 = a3;
      v11 = 4;
      goto LABEL_19;
    case 5u:
      v38 = type metadata accessor for SpreadPaginationEntity(0);
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
      v39(a1, a2, v38);
      v40 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
      *(_QWORD *)&a1[v40[5]] = *(_QWORD *)&a2[v40[5]];
      *(_QWORD *)&a1[v40[6]] = *(_QWORD *)&a2[v40[6]];
      v41 = v40[7];
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = sub_10004CFD4(&qword_1009D51F8);
      v45 = swift_getEnumCaseMultiPayload(v43, v44);
      if ((_DWORD)v45 == 2)
      {
        v39(v42, v43, v38);
        v53 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
        v46 = &v42[v53];
        v47 = &v43[v53];
      }
      else
      {
        v46 = v42;
        v47 = v43;
      }
      v39(v46, v47, v38);
      swift_storeEnumTagMultiPayload(v42, v44, v45);
      *(_QWORD *)&a1[v40[8]] = *(_QWORD *)&a2[v40[8]];
      *(_QWORD *)&a1[v40[9]] = *(_QWORD *)&a2[v40[9]];
      *(_QWORD *)&a1[v40[10]] = *(_QWORD *)&a2[v40[10]];
      v9 = a1;
      v10 = a3;
      v11 = 5;
      goto LABEL_19;
    case 6u:
      v48 = type metadata accessor for SpreadPaginationEntity(0);
      v49 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
      v49(a1, a2, v48);
      v50 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      *(_QWORD *)&a1[v50[5]] = *(_QWORD *)&a2[v50[5]];
      a1[v50[6]] = a2[v50[6]];
      v49(&a1[v50[7]], &a2[v50[7]], v48);
      *(_QWORD *)&a1[v50[8]] = *(_QWORD *)&a2[v50[8]];
      *(_QWORD *)&a1[v50[9]] = *(_QWORD *)&a2[v50[9]];
      *(_QWORD *)&a1[v50[10]] = *(_QWORD *)&a2[v50[10]];
      v9 = a1;
      v10 = a3;
      v11 = 6;
LABEL_19:
      swift_storeEnumTagMultiPayload(v9, v10, v11);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_10025DA34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t EnumCaseMultiPayload;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (a1 != a2)
  {
    sub_10002C8F0((uint64_t)a1, _s14descr1008F7311C5StateOMa);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for SpreadPaginationEntity(0);
        v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        v8 = (int *)_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
        *(_QWORD *)&a1[v8[5]] = *(_QWORD *)&a2[v8[5]];
        a1[v8[6]] = a2[v8[6]];
        v7(&a1[v8[7]], &a2[v8[7]], v6);
        v9 = a1;
        v10 = a3;
        v11 = 0;
        goto LABEL_20;
      case 1u:
        v12 = type metadata accessor for SpreadPaginationEntity(0);
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
        v13(a1, a2, v12);
        v14 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
        a1[v14[6]] = a2[v14[6]];
        v13(&a1[v14[7]], &a2[v14[7]], v12);
        *(_QWORD *)&a1[v14[8]] = *(_QWORD *)&a2[v14[8]];
        *(_QWORD *)&a1[v14[9]] = *(_QWORD *)&a2[v14[9]];
        *(_QWORD *)&a1[v14[10]] = *(_QWORD *)&a2[v14[10]];
        v9 = a1;
        v10 = a3;
        v11 = 1;
        goto LABEL_20;
      case 2u:
        v15 = type metadata accessor for SpreadPaginationEntity(0);
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v16(a1, a2, v15);
        v17 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        *(_QWORD *)&a1[v17[5]] = *(_QWORD *)&a2[v17[5]];
        a1[v17[6]] = a2[v17[6]];
        v16(&a1[v17[7]], &a2[v17[7]], v15);
        *(_QWORD *)&a1[v17[8]] = *(_QWORD *)&a2[v17[8]];
        *(_QWORD *)&a1[v17[9]] = *(_QWORD *)&a2[v17[9]];
        *(_QWORD *)&a1[v17[10]] = *(_QWORD *)&a2[v17[10]];
        v9 = a1;
        v10 = a3;
        v11 = 2;
        goto LABEL_20;
      case 3u:
        v18 = type metadata accessor for SpreadPaginationEntity(0);
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
        v19(a1, a2, v18);
        v20 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
        *(_QWORD *)&a1[v20[5]] = *(_QWORD *)&a2[v20[5]];
        v21 = v20[6];
        v22 = &a1[v21];
        v23 = &a2[v21];
        v24 = sub_10004CFD4(&qword_1009D51F8);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v24);
        if ((_DWORD)EnumCaseMultiPayload == 2)
        {
          v19(v22, v23, v18);
          v51 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v26 = &v22[v51];
          v27 = &v23[v51];
        }
        else
        {
          v26 = v22;
          v27 = v23;
        }
        v19(v26, v27, v18);
        swift_storeEnumTagMultiPayload(v22, v24, EnumCaseMultiPayload);
        *(_QWORD *)&a1[v20[7]] = *(_QWORD *)&a2[v20[7]];
        *(_QWORD *)&a1[v20[8]] = *(_QWORD *)&a2[v20[8]];
        v9 = a1;
        v10 = a3;
        v11 = 3;
        goto LABEL_20;
      case 4u:
        v28 = type metadata accessor for SpreadPaginationEntity(0);
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
        v29(a1, a2, v28);
        v30 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
        *(_QWORD *)&a1[v30[5]] = *(_QWORD *)&a2[v30[5]];
        *(_QWORD *)&a1[v30[6]] = *(_QWORD *)&a2[v30[6]];
        v31 = v30[7];
        v32 = &a1[v31];
        v33 = &a2[v31];
        v34 = sub_10004CFD4(&qword_1009D51F8);
        v35 = swift_getEnumCaseMultiPayload(v33, v34);
        if ((_DWORD)v35 == 2)
        {
          v29(v32, v33, v28);
          v52 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v36 = &v32[v52];
          v37 = &v33[v52];
        }
        else
        {
          v36 = v32;
          v37 = v33;
        }
        v29(v36, v37, v28);
        swift_storeEnumTagMultiPayload(v32, v34, v35);
        *(_QWORD *)&a1[v30[8]] = *(_QWORD *)&a2[v30[8]];
        *(_QWORD *)&a1[v30[9]] = *(_QWORD *)&a2[v30[9]];
        *(_QWORD *)&a1[v30[10]] = *(_QWORD *)&a2[v30[10]];
        v9 = a1;
        v10 = a3;
        v11 = 4;
        goto LABEL_20;
      case 5u:
        v38 = type metadata accessor for SpreadPaginationEntity(0);
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
        v39(a1, a2, v38);
        v40 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
        *(_QWORD *)&a1[v40[5]] = *(_QWORD *)&a2[v40[5]];
        *(_QWORD *)&a1[v40[6]] = *(_QWORD *)&a2[v40[6]];
        v41 = v40[7];
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = sub_10004CFD4(&qword_1009D51F8);
        v45 = swift_getEnumCaseMultiPayload(v43, v44);
        if ((_DWORD)v45 == 2)
        {
          v39(v42, v43, v38);
          v53 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
          v46 = &v42[v53];
          v47 = &v43[v53];
        }
        else
        {
          v46 = v42;
          v47 = v43;
        }
        v39(v46, v47, v38);
        swift_storeEnumTagMultiPayload(v42, v44, v45);
        *(_QWORD *)&a1[v40[8]] = *(_QWORD *)&a2[v40[8]];
        *(_QWORD *)&a1[v40[9]] = *(_QWORD *)&a2[v40[9]];
        *(_QWORD *)&a1[v40[10]] = *(_QWORD *)&a2[v40[10]];
        v9 = a1;
        v10 = a3;
        v11 = 5;
        goto LABEL_20;
      case 6u:
        v48 = type metadata accessor for SpreadPaginationEntity(0);
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
        v49(a1, a2, v48);
        v50 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
        *(_QWORD *)&a1[v50[5]] = *(_QWORD *)&a2[v50[5]];
        a1[v50[6]] = a2[v50[6]];
        v49(&a1[v50[7]], &a2[v50[7]], v48);
        *(_QWORD *)&a1[v50[8]] = *(_QWORD *)&a2[v50[8]];
        *(_QWORD *)&a1[v50[9]] = *(_QWORD *)&a2[v50[9]];
        *(_QWORD *)&a1[v50[10]] = *(_QWORD *)&a2[v50[10]];
        v9 = a1;
        v10 = a3;
        v11 = 6;
LABEL_20:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s12ReadingEventOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t _s12ReadingEventOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_10025DFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10025E008(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    result = _s14descr1008F7311C5StateO4TurnVMa(319);
    if (v4 <= 0x3F)
    {
      v5 = *(_QWORD *)(result - 8) + 64;
      v8[1] = v5;
      v8[2] = v5;
      result = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(319);
      if (v6 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(result - 8) + 64;
        result = _s14descr1008F7311C5StateO8DraggingVMa(319);
        if (v7 <= 0x3F)
        {
          v9 = *(_QWORD *)(result - 8) + 64;
          v10 = v9;
          v11 = v5;
          swift_initEnumMetadataMultiPayload(a1, 256, 7, v8);
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10025E0C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t EnumCaseMultiPayload;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for SpreadPaginationEntity(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = v11;
    v17 = v12;
    v18 = sub_10004CFD4(&qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v18);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v8((uint64_t *)v14, (uint64_t *)v15, v7);
      v23 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
      v20 = &v14[v23];
      v21 = &v15[v23];
    }
    else
    {
      v20 = v14;
      v21 = v15;
    }
    v8((uint64_t *)v20, (uint64_t *)v21, v7);
    swift_storeEnumTagMultiPayload(v14, v18, EnumCaseMultiPayload);
    v24 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_10025E21C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v9(a1, v4);

  v5 = a1 + a2[7];
  v6 = sub_10004CFD4(&qword_1009D51F8);
  result = swift_getEnumCaseMultiPayload(v5, v6);
  if ((_DWORD)result == 2)
  {
    v9(v5, v4);
    v8 = v5 + *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
  }
  else
  {
    if (result > 1)
      return result;
    v8 = v5;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
}

uint64_t sub_10025E304(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = *(void **)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = v10;
  v16 = v11;
  v17 = sub_10004CFD4(&qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v17);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v7(v13, v14, v6);
    v21 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
    v19 = v13 + v21;
    v20 = v14 + v21;
  }
  else
  {
    v19 = v13;
    v20 = v14;
  }
  v7(v19, v20, v6);
  swift_storeEnumTagMultiPayload(v13, v17, EnumCaseMultiPayload);
  v22 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10025E430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t EnumCaseMultiPayload;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  v12 = a3[6];
  v13 = *(void **)(a2 + v12);
  v14 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v15 = v13;

  if (a1 != a2)
  {
    v16 = a3[7];
    v17 = a1 + v16;
    v18 = a2 + v16;
    sub_100010960(a1 + v16, &qword_1009D51F8);
    v19 = sub_10004CFD4(&qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v21(v17, v18, v6);
      v22 = sub_10004CFD4(&qword_1009D5200);
      v21(v17 + *(int *)(v22 + 48), v18 + *(int *)(v22 + 48), v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v17, v18, v6);
    }
    swift_storeEnumTagMultiPayload(v17, v19, EnumCaseMultiPayload);
  }
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10025E59C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_10004CFD4(&qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v7(v10, v11, v6);
    v16 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
    v14 = v10 + v16;
    v15 = v11 + v16;
  }
  else
  {
    v14 = v10;
    v15 = v11;
  }
  v7(v14, v15, v6);
  swift_storeEnumTagMultiPayload(v10, v12, EnumCaseMultiPayload);
  v17 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10025E6C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t EnumCaseMultiPayload;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[6];
  v11 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);

  if (a1 != a2)
  {
    v12 = a3[7];
    v13 = a1 + v12;
    v14 = a2 + v12;
    sub_100010960(a1 + v12, &qword_1009D51F8);
    v15 = sub_10004CFD4(&qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v17(v13, v14, v6);
      v18 = sub_10004CFD4(&qword_1009D5200);
      v17(v13 + *(int *)(v18 + 48), v14 + *(int *)(v18 + 48), v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v13, v14, v6);
    }
    swift_storeEnumTagMultiPayload(v13, v15, EnumCaseMultiPayload);
  }
  v19 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10025E820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025E82C);
}

uint64_t sub_10025E82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_10004CFD4(&qword_1009D51F8);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10025E8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025E8E4);
}

uint64_t sub_10025E8E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for SpreadPaginationEntity(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_10004CFD4(&qword_1009D51F8);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10025E98C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v2 = type metadata accessor for SpreadPaginationEntity(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_10025EA30(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[6] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

void sub_10025EA30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1009D5318)
  {
    v2 = type metadata accessor for SpreadPaginationEntity(255);
    v4 = _s14descr1008F7311C5StateO12EitherOrBothOMa(a1, v2, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1009D5318);
  }
}

uint64_t _s14descr1008F7311C5StateO12EitherOrBothOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&_s14descr1008F7311C5StateO12EitherOrBothOMn);
}

uint64_t sub_10025EA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10025EA9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v7[0] = v4;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v5 <= 0x3F)
    {
      v7[1] = *(_QWORD *)(result - 8) + 64;
      swift_getTupleTypeLayout2(v6, v4);
      v7[2] = v6;
      swift_initEnumMetadataMultiPayload(a1, 0, 3, v7);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10025EB40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v9 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_DWORD *)(v8 + 80);
  v12 = v7 + v11;
  if ((v12 & ~(unint64_t)v11) + v9 <= v10)
    v13 = v10;
  else
    v13 = (v12 & ~(unint64_t)v11) + v9;
  v14 = (*(_BYTE *)(v6 + 80) | v11);
  if (v14 > 7 || ((*(_DWORD *)(v6 + 80) | v11) & 0x100000) != 0 || v13 + 1 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain(v17);
  }
  else
  {
    v18 = *((unsigned __int8 *)a2 + v13);
    if (v18 >= 3)
    {
      if (v13 <= 3)
        v19 = v13;
      else
        v19 = 4;
      __asm { BR              X14 }
    }
    if (v18 == 2)
    {
      v20 = ~(unint64_t)v11;
      (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v12) & v20, ((unint64_t)a2 + v12) & v20, v5);
      *((_BYTE *)v4 + v13) = 2;
    }
    else if (v18 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v5);
      *((_BYTE *)v4 + v13) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
      *((_BYTE *)v4 + v13) = 0;
    }
  }
  return v4;
}

uint64_t sub_10025ECEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v3 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v9 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = v7 + v11;
  v13 = ((v7 + v11) & ~v11) + v9;
  if (v13 <= v10)
    v13 = v10;
  v14 = *(unsigned __int8 *)(a1 + v13);
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X15 }
  }
  if (v14 == 2)
  {
    v17 = ~v11;
    (*(void (**)(uint64_t))(v6 + 8))(a1);
    a1 = (v12 + v3) & v17;
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  }
  else
  {
    if (v14 != 1)
    {
      v16 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v16(a1, v4);
    }
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  }
  v4 = v5;
  return v16(a1, v4);
}

uint64_t sub_10025EE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v9 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = v7 + v11;
  v13 = ((v7 + v11) & ~v11) + v9;
  if (v13 <= v10)
    v14 = v10;
  else
    v14 = v13;
  v15 = *(unsigned __int8 *)(a2 + v14);
  if (v15 >= 3)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  if (v15 == 2)
  {
    v18 = ~v11;
    (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v12 + a1) & v18, (v12 + a2) & v18, v5);
    v17 = 2;
  }
  else if (v15 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, v5);
    v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, a2);
    v17 = 0;
  }
  *(_BYTE *)(a1 + v14) = v17;
  return a1;
}

uint64_t sub_10025EF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  char v23;

  v3 = a1;
  if (a1 == a2)
    return v3;
  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v10 <= v8)
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = v8 + v12;
  v14 = ((v8 + v12) & ~v12) + v10;
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = v14;
  v16 = *(unsigned __int8 *)(a1 + v15);
  if (v16 >= 3)
  {
    if (v15 <= 3)
      v17 = v15;
    else
      v17 = 4;
    __asm { BR              X13 }
  }
  v18 = ~v12;
  if (v16 == 2)
  {
    (*(void (**)(uint64_t, _QWORD))(v7 + 8))(a1, *(_QWORD *)(a3 + 16));
    a1 = (v13 + v3) & v18;
    v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  else
  {
    if (v16 != 1)
    {
      v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v20 = *(_QWORD *)(a3 + 16);
      goto LABEL_19;
    }
    v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  v20 = v5;
LABEL_19:
  v19(a1, v20);
  v21 = *(unsigned __int8 *)(a2 + v15);
  if (v21 >= 3)
  {
    if (v15 <= 3)
      v22 = v15;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  if (v21 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, a2, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((v13 + v3) & v18, (v13 + a2) & v18, v5);
    v23 = 2;
  }
  else if (v21 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, a2, v5);
    v23 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, a2, v6);
    v23 = 0;
  }
  *(_BYTE *)(v3 + v15) = v23;
  return v3;
}

uint64_t sub_10025F1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v9 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = v7 + v11;
  v13 = ((v7 + v11) & ~v11) + v9;
  if (v13 <= v10)
    v14 = v10;
  else
    v14 = v13;
  v15 = *(unsigned __int8 *)(a2 + v14);
  if (v15 >= 3)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  if (v15 == 2)
  {
    v18 = ~v11;
    (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a1, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))((v12 + a1) & v18, (v12 + a2) & v18, v5);
    v17 = 2;
  }
  else if (v15 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, v5);
    v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a1, a2);
    v17 = 0;
  }
  *(_BYTE *)(a1 + v14) = v17;
  return a1;
}

uint64_t sub_10025F308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  char v23;

  v3 = a1;
  if (a1 == a2)
    return v3;
  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v10 <= v8)
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = v8 + v12;
  v14 = ((v8 + v12) & ~v12) + v10;
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = v14;
  v16 = *(unsigned __int8 *)(a1 + v15);
  if (v16 >= 3)
  {
    if (v15 <= 3)
      v17 = v15;
    else
      v17 = 4;
    __asm { BR              X13 }
  }
  v18 = ~v12;
  if (v16 == 2)
  {
    (*(void (**)(uint64_t, _QWORD))(v7 + 8))(a1, *(_QWORD *)(a3 + 16));
    a1 = (v13 + v3) & v18;
    v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  else
  {
    if (v16 != 1)
    {
      v19 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v20 = *(_QWORD *)(a3 + 16);
      goto LABEL_19;
    }
    v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  v20 = v5;
LABEL_19:
  v19(a1, v20);
  v21 = *(unsigned __int8 *)(a2 + v15);
  if (v21 >= 3)
  {
    if (v15 <= 3)
      v22 = v15;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  if (v21 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a2, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))((v13 + v3) & v18, (v13 + a2) & v18, v5);
    v23 = 2;
  }
  else if (v21 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v3, a2, v5);
    v23 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a2, v6);
    v23 = 0;
  }
  *(_BYTE *)(v3 + v15) = v23;
  return v3;
}

uint64_t sub_10025F53C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (v5 <= v3)
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  else
    v6 = *(_QWORD *)(v4 + 64);
  v7 = ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (v7 <= v6)
    v8 = v6;
  else
    v8 = v7;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_25;
  v9 = v8 + 1;
  v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    v13 = ((a2 + ~(-1 << v10) - 253) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v13 < 2)
    {
LABEL_25:
      v15 = *(unsigned __int8 *)(a1 + v8);
      if (v15 >= 3)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_25;
LABEL_18:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return (v14 + 254);
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10025F61C + 4 * byte_1007150F2[(v9 - 1)]))();
}

void sub_10025F668(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= v5)
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  else
    v8 = *(_QWORD *)(v6 + 64);
  v9 = ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + v7;
  if (v9 <= v8)
    v9 = v8;
  v10 = v9 + 1;
  if (a3 < 0xFE)
  {
    v11 = 0;
  }
  else if (v10 <= 3)
  {
    v13 = ((a3 + ~(-1 << (8 * v10)) - 253) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v11 = &dword_100000004;
    }
    else if (v13 >= 0x100)
    {
      v11 = 2;
    }
    else
    {
      v11 = v13 > 1;
    }
  }
  else
  {
    v11 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v12 = a2 - 254;
  if (v10 < 4)
  {
    if ((_DWORD)v9 != -1)
    {
      v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if ((_DWORD)v10 == 3)
      {
        *a1 = v14;
        *((_BYTE *)a1 + 2) = BYTE2(v14);
      }
      else if ((_DWORD)v10 == 2)
      {
        *a1 = v14;
      }
      else
      {
        *(_BYTE *)a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v9 + 1);
    *(_DWORD *)a1 = v12;
  }
  __asm { BR              X10 }
}

uint64_t sub_10025F82C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= v2)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  else
    v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v6 <= v5)
    v7 = v5;
  else
    v7 = v6;
  if (*(unsigned __int8 *)(a1 + v7) < 3u)
    return *(unsigned __int8 *)(a1 + v7);
  if (v7 <= 3)
    v8 = v7;
  else
    v8 = 4;
  return ((uint64_t (*)(void))((char *)&loc_10025F890 + 4 * byte_100715100[v8]))();
}

void sub_10025F8D8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (a2 > 2)
  {
    v9 = *(_QWORD *)(v5 + 64);
    if (v9 <= v4)
      v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    else
      v10 = *(_QWORD *)(v5 + 64);
    v11 = ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v9;
    if (v11 <= v10)
      v12 = v10;
    else
      v12 = v11;
    v13 = a2 - 3;
    if (v12 < 4)
    {
      v14 = v13 >> (8 * v12);
      v15 = v13 & ~(-1 << (8 * v12));
      a1[v12] = v14 + 3;
      bzero(a1, v12);
      if ((_DWORD)v12 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if ((_DWORD)v12 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
    else
    {
      a1[v12] = 3;
      bzero(a1, v12);
      *(_DWORD *)a1 = v13;
    }
  }
  else
  {
    v6 = *(unsigned __int8 *)(v5 + 80);
    v7 = *(_QWORD *)(v5 + 64);
    v8 = ((v4 + v6) & ~v6) + v7;
    if (v7 > v4)
      v4 = v7;
    if (v8 > v4)
      v4 = v8;
    a1[v4] = a2;
  }
}

uint64_t *sub_10025F9E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t EnumCaseMultiPayload;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    v7 = type metadata accessor for SpreadPaginationEntity(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = (char *)a1 + v10;
    v13 = (char *)a2 + v10;
    v14 = v11;
    v15 = sub_10004CFD4(&qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v15);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v8((uint64_t *)v12, (uint64_t *)v13, v7);
      v20 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
      v17 = &v12[v20];
      v18 = &v13[v20];
    }
    else
    {
      v17 = v12;
      v18 = v13;
    }
    v8((uint64_t *)v17, (uint64_t *)v18, v7);
    swift_storeEnumTagMultiPayload(v12, v15, EnumCaseMultiPayload);
    v21 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
  }
  return a1;
}

uint64_t sub_10025FB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v9(a1, v4);

  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_10004CFD4(&qword_1009D51F8);
  result = swift_getEnumCaseMultiPayload(v5, v6);
  if ((_DWORD)result == 2)
  {
    v9(v5, v4);
    v8 = v5 + *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
  }
  else
  {
    if (result > 1)
      return result;
    v8 = v5;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
}

uint64_t sub_10025FBF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a1 + v9;
  v12 = a2 + v9;
  v13 = v10;
  v14 = sub_10004CFD4(&qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v14);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v7(v11, v12, v6);
    v18 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
    v16 = v11 + v18;
    v17 = v12 + v18;
  }
  else
  {
    v16 = v11;
    v17 = v12;
  }
  v7(v16, v17, v6);
  swift_storeEnumTagMultiPayload(v11, v14, EnumCaseMultiPayload);
  v19 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_10025FD08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t EnumCaseMultiPayload;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = a1 + v12;
    v14 = a2 + v12;
    sub_100010960(a1 + v12, &qword_1009D51F8);
    v15 = sub_10004CFD4(&qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v17(v13, v14, v6);
      v18 = sub_10004CFD4(&qword_1009D5200);
      v17(v13 + *(int *)(v18 + 48), v14 + *(int *)(v18 + 48), v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v13, v14, v6);
    }
    swift_storeEnumTagMultiPayload(v13, v15, EnumCaseMultiPayload);
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10025FE50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_10004CFD4(&qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v7(v9, v10, v6);
    v15 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
    v13 = v9 + v15;
    v14 = v10 + v15;
  }
  else
  {
    v13 = v9;
    v14 = v10;
  }
  v7(v13, v14, v6);
  swift_storeEnumTagMultiPayload(v9, v11, EnumCaseMultiPayload);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  return a1;
}

uint64_t sub_10025FF5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = a1 + v10;
    v12 = a2 + v10;
    sub_100010960(a1 + v10, &qword_1009D51F8);
    v13 = sub_10004CFD4(&qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v15(v11, v12, v6);
      v16 = sub_10004CFD4(&qword_1009D5200);
      v15(v11 + *(int *)(v16 + 48), v12 + *(int *)(v16 + 48), v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v11, v12, v6);
    }
    swift_storeEnumTagMultiPayload(v11, v13, EnumCaseMultiPayload);
  }
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_10026009C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002600A8);
}

uint64_t sub_1002600A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_10004CFD4(&qword_1009D51F8);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100260154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100260160);
}

uint64_t sub_100260160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for SpreadPaginationEntity(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_10004CFD4(&qword_1009D51F8);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100260208(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for SpreadPaginationEntity(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_10025EA30(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

char *sub_1002602A8(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for SpreadPaginationEntity(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(void **)&a2[v9];
    *(_QWORD *)&a1[v9] = v11;
    a1[v10] = a2[v10];
    v12 = a3[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = v11;
    v8(v13, v14, v7);
    v16 = a3[8];
    v17 = a3[9];
    v18 = *(void **)&a2[v16];
    *(_QWORD *)&a1[v16] = v18;
    *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
    v19 = v18;
  }
  return a1;
}

void sub_100260390(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);

  v5(a1 + a2[7], v4);
}

uint64_t sub_1002603FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = v10;
  v7(v12, v13, v6);
  v15 = a3[8];
  v16 = a3[9];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v18 = v17;
  return a1;
}

uint64_t sub_1002604B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v12 = a3[8];
  v13 = *(void **)(a1 + v12);
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = v14;

  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10026057C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v9 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100260620(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7(a1 + v10, a2 + v10, v6);
  v11 = a3[8];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1002606D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002606E0);
}

uint64_t sub_1002606E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002606F0);
}

uint64_t sub_1002606F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for SpreadPaginationEntity(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100715180;
    v4[3] = v4[0];
    v4[4] = &unk_100715198;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100260790(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for SpreadPaginationEntity(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(void **)&a2[v9];
    *(_QWORD *)&a1[v9] = v11;
    a1[v10] = a2[v10];
    v12 = a3[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = v11;
    v8(v13, v14, v7);
  }
  return a1;
}

uint64_t sub_10026084C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);

  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 28), v4);
}

uint64_t sub_1002608C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = v10;
  v7(v12, v13, v6);
  return a1;
}

uint64_t sub_100260950(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_1002609E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_100260A68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7(a1 + v10, a2 + v10, v6);
  return a1;
}

uint64_t sub_100260AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100260B00);
}

uint64_t sub_100260B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100260B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100260B8C);
}

uint64_t sub_100260B90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SpreadPaginationEntity(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100260C08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for SpreadPaginationEntity(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100715180;
    v4[3] = v4[0];
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_100260C88()
{
  qword_1009D51C8 = 0x3FD5555555555555;
}

void sub_100260C9C()
{
  qword_1009D51D0 = 0x407F400000000000;
}

void sub_100260CB0()
{
  qword_1009D51D8 = 0xC069000000000000;
}

uint64_t sub_100260CC0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D51E0);
  sub_100048F64(v0, (uint64_t)qword_1009D51E0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000024, 0x80000001007B9E20);
}

uint64_t sub_100260D44(uint64_t a1, uint64_t a2, int *a3)
{
  if ((((uint64_t (*)(void))static SpreadPaginationEntity.== infix(_:_:))() & 1) != 0
    && (sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + a3[5]), *(_QWORD *)(a2 + a3[5])) & 1) != 0)
    && (static LocationMovement.Direction.== infix(_:_:)(*(unsigned __int8 *)(a1 + a3[6]), *(unsigned __int8 *)(a2 + a3[6])) & 1) != 0)
  {
    return static SpreadPaginationEntity.== infix(_:_:)(a1 + a3[7], a2 + a3[7]);
  }
  else
  {
    return 0;
  }
}

void sub_100260DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  __chkstk_darwin(v2);
  v3 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v6);
  v7 = _s14descr1008F7311C5StateO7TurningVMa(0);
  __chkstk_darwin(v7);
  sub_10002CD84(v1, (uint64_t)v5, _s14descr1008F7311C5StateOMa);
  v8 = (char *)sub_100260F2C + 4 * byte_100715105[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_100260F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = _s14descr1008F7311C5StateO4TurnVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
  return sub_10002C8F0(v1, _s14descr1008F7311C5StateOMa);
}

uint64_t sub_10026105C@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  _BYTE *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  int v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  int *v35;
  void *v36;
  uint64_t v37;
  double v38;
  void (*v39)(_BYTE *, uint64_t);
  id v40;
  id v41;
  id v42;
  void (*v43)(uint64_t, _BYTE *, uint64_t);
  int *v44;
  _BYTE v45[4];
  int v46;
  id v47;

  v8 = a1 & 1;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v9);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for SpreadPaginationEntity(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v18 = &v45[-v17];
  __chkstk_darwin(v19);
  v21 = &v45[-v20];
  v22 = sub_100263994(v8);
  v23 = v22 & 1;
  if (v22 == 2)
  {
    v46 = v22 & 1;
    v47 = a2;
    v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16);
    v24(v21, v4, v12);
LABEL_10:
    v24(v18, v4, v12);
    v35 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
    v36 = *(void **)&v4[v35[5]];
    v24(v15, v21, v12);
    v37 = *(_QWORD *)&v4[v35[10]];
    v38 = fabs(*(double *)&v4[v35[9]]) / fmax(a4, 1.0);
    v39 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
    v40 = v36;
    v41 = v47;
    v42 = v47;
    v39(v21, v12);
    v43 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32);
    v43(a3, v18, v12);
    v44 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
    *(_QWORD *)(a3 + v44[5]) = v40;
    *(_BYTE *)(a3 + v44[6]) = v46;
    v43(a3 + v44[7], v15, v12);
    *(_QWORD *)(a3 + v44[8]) = v41;
    *(_QWORD *)(a3 + v44[9]) = v37;
    *(double *)(a3 + v44[10]) = v38;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v44 - 1) + 56))(a3, 0, 1, v44);
  }
  sub_1002639FC(v22 & 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v46 = v23;
    v47 = a2;
    (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 32))(v21, v11, v12);
    v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16);
    goto LABEL_10;
  }
  sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009E8E70);
  if (qword_1009CDD58 != -1)
    swift_once(&qword_1009CDD58, sub_100260CC0);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100048F64(v25, (uint64_t)qword_1009D51E0);
  v27 = Logger.logObject.getter(v26);
  v31 = static os_log_type_t.debug.getter(v27, v28, v29, v30);
  if (os_log_type_enabled(v27, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v31, "Missing turnDestination", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  v33 = _s14descr1008F7311C5StateO4TurnVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a3, 1, 1, v33);
}

void sub_1002613A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v1);
  v2 = _s14descr1008F7311C5StateO7TurningVMa(0);
  __chkstk_darwin(v2);
  v3 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_1002614A4 + 4 * byte_10071510D[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1002614A4()
{
  uint64_t v0;

  sub_10002C8F0(v0, _s14descr1008F7311C5StateOMa);
  return 0;
}

void sub_10026154C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  __chkstk_darwin(v1);
  v2 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  __chkstk_darwin(v2);
  v3 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  __chkstk_darwin(v3);
  v4 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v7);
  v8 = _s14descr1008F7311C5StateO7TurningVMa(0);
  __chkstk_darwin(v8);
  sub_10002CD84(v0, (uint64_t)v6, _s14descr1008F7311C5StateOMa);
  v9 = (char *)sub_1002616EC + 4 * byte_100715115[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1002616EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_10002C960(v1, v2, _s14descr1008F7311C5StateO7TurningVMa);
  v3 = type metadata accessor for SpreadPaginationEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v2, v3);
  sub_10002C8F0(v2, _s14descr1008F7311C5StateO4TurnVMa);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v0, 0, 1, v3);
}

uint64_t sub_1002618E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  int EnumCaseMultiPayload;
  uint64_t v21;

  v2 = v1;
  v4 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D55C8);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v9, &qword_1009D55C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100010960((uint64_t)v9, &qword_1009D55C8);
    if (qword_1009CDD58 != -1)
      swift_once(&qword_1009CDD58, sub_100260CC0);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048F64(v14, (uint64_t)qword_1009D51E0);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      swift_slowDealloc(v18, -1, -1);
    }

    return sub_100010960(a1, &qword_1009D55C8);
  }
  else
  {
    sub_100010960(a1, &qword_1009D55C8);
    sub_10002C960((uint64_t)v9, (uint64_t)v13, _s14descr1008F7311C5StateO8DraggingVMa);
    sub_10002CD84(v2, (uint64_t)v6, _s14descr1008F7311C5StateOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
    if (EnumCaseMultiPayload == 5)
    {
      sub_10002C8F0(v2, _s14descr1008F7311C5StateOMa);
      sub_10002C960((uint64_t)v13, v2, _s14descr1008F7311C5StateO8DraggingVMa);
      swift_storeEnumTagMultiPayload(v2, v4, 5);
    }
    else if (EnumCaseMultiPayload == 4)
    {
      sub_10002C8F0(v2, _s14descr1008F7311C5StateOMa);
      sub_10002C960((uint64_t)v13, v2, _s14descr1008F7311C5StateO8DraggingVMa);
      swift_storeEnumTagMultiPayload(v2, v4, 4);
    }
    else
    {
      sub_10002C8F0((uint64_t)v13, _s14descr1008F7311C5StateO8DraggingVMa);
    }
    return sub_10002C8F0((uint64_t)v6, _s14descr1008F7311C5StateOMa);
  }
}

uint64_t sub_100261BA8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumCaseMultiPayload;
  void (*v13)(char *, char *, uint64_t);
  char *v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D51F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(v2, (uint64_t)v6, &qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
      return sub_100010960((uint64_t)v6, &qword_1009D51F8);
    }
    v14 = &v6[*(int *)(sub_10004CFD4(&qword_1009D5200) + 48)];
    v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v10, v6, v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v10, v6, v7);
  }
  v13(a1, v10, v7);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

uint64_t sub_100261D28@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int EnumCaseMultiPayload;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v5);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, a1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    }
    v15 = *(_QWORD *)(a1 + 24);
    v16 = &v7[*(int *)(swift_getTupleTypeMetadata2(0, v8, v15, 0, 0) + 48)];
    v14 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v14(v11, v7, v8);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v14(v11, v7, v8);
  }
  v14(a2, v11, v8);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
}

uint64_t sub_100261EA4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumCaseMultiPayload;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D51F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(v2, (uint64_t)v6, &qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v12(v10, v6, v7);
    }
    else
    {
      v14 = sub_10004CFD4(&qword_1009D5200);
      v12 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v12(v10, &v6[*(int *)(v14 + 48)], v7);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
    v12(a1, v10, v7);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
    return sub_100010960((uint64_t)v6, &qword_1009D51F8);
  }
}

uint64_t sub_100262020@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int EnumCaseMultiPayload;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v5 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v5);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, a1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v13 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v13(v11, v7, v8);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 16);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v15, v8, 0, 0);
      v13 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v13(v11, &v7[*(int *)(TupleTypeMetadata2 + 48)], v8);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v7, v15);
    }
    v13(a2, v11, v8);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  }
}

uint64_t sub_100262198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v6 = sub_10004CFD4(&qword_1009D55D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D51F8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100025B3C(a1, (uint64_t)v8, (uint64_t *)&unk_1009E8E70);
  sub_100025B3C(a2, v13, (uint64_t *)&unk_1009E8E70);
  v14 = type metadata accessor for SpreadPaginationEntity(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v8, 1, v14);
  v18 = v16((char *)v13, 1, v14);
  v19 = v18;
  if (v17 != 1)
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v21(v12, v8, v14);
    if (v19 == 1)
    {
      v22 = 0;
    }
    else
    {
      v23 = sub_10004CFD4(&qword_1009D5200);
      v21(&v12[*(int *)(v23 + 48)], (char *)v13, v14);
      v22 = 2;
    }
    goto LABEL_8;
  }
  if (v18 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v12, v13, v14);
    v22 = 1;
LABEL_8:
    swift_storeEnumTagMultiPayload(v12, v9, v22);
    sub_100025B3C((uint64_t)v12, a3, &qword_1009D51F8);
    v20 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v20, 1, v9);
  }
  v20 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v20, 1, v9);
}

uint64_t sub_100262378(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a2;
  v3 = type metadata accessor for SpreadPaginationEntity(0);
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v4 = __chkstk_darwin(v3);
  v56 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v57 = (char *)&v56 - v7;
  v8 = __chkstk_darwin(v6);
  v58 = (char *)&v56 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v56 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - v13;
  v15 = sub_10004CFD4(&qword_1009D51F8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v56 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v56 - v22;
  v24 = sub_10004CFD4(&qword_1009D55E8);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t)&v27[*(int *)(v25 + 48)];
  sub_10000B5E4(a1, (uint64_t)v27, &qword_1009D51F8);
  sub_10000B5E4(v61, v28, &qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v27, v15);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10000B5E4((uint64_t)v27, (uint64_t)v21, &qword_1009D51F8);
      if (swift_getEnumCaseMultiPayload(v28, v15) == 1)
      {
        v30 = v59;
        v31 = v28;
        v32 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v12, v31, v60);
        v33 = sub_100264970();
        v34 = dispatch thunk of static Equatable.== infix(_:_:)(v21, v12, v32, v33);
        v35 = *(void (**)(char *, uint64_t))(v30 + 8);
        v35(v12, v32);
        v36 = v21;
LABEL_15:
        v35(v36, v32);
LABEL_17:
        v51 = &qword_1009D51F8;
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v21, v60);
    }
    else
    {
      sub_10000B5E4((uint64_t)v27, (uint64_t)v18, &qword_1009D51F8);
      v37 = *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
      v38 = &v18[v37];
      if (swift_getEnumCaseMultiPayload(v28, v15) == 2)
      {
        v40 = v58;
        v39 = v59;
        v41 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
        v42 = v60;
        v41(v58, v28, v60);
        v43 = v57;
        v41(v57, (uint64_t)&v18[v37], v42);
        v44 = v56;
        v41(v56, v28 + v37, v42);
        v45 = v44;
        v46 = sub_100264970();
        LOBYTE(v44) = dispatch thunk of static Equatable.== infix(_:_:)(v18, v40, v42, v46);
        v47 = *(void (**)(char *, uint64_t))(v39 + 8);
        v47(v18, v42);
        if ((v44 & 1) != 0)
        {
          v34 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v45, v42, v46);
          v47(v45, v42);
          v47(v43, v42);
          v47(v40, v42);
        }
        else
        {
          v47(v45, v42);
          v47(v43, v42);
          v47(v40, v42);
          v34 = 0;
        }
        goto LABEL_17;
      }
      v48 = *(void (**)(char *, uint64_t))(v59 + 8);
      v49 = v38;
      v50 = v60;
      v48(v49, v60);
      v48(v18, v50);
    }
  }
  else
  {
    sub_10000B5E4((uint64_t)v27, (uint64_t)v23, &qword_1009D51F8);
    if (!swift_getEnumCaseMultiPayload(v28, v15))
    {
      v52 = v59;
      v53 = v28;
      v32 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v14, v53, v60);
      v54 = sub_100264970();
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v14, v32, v54);
      v35 = *(void (**)(char *, uint64_t))(v52 + 8);
      v35(v14, v32);
      v36 = v23;
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v23, v60);
  }
  v34 = 0;
  v51 = &qword_1009D55E8;
LABEL_18:
  sub_100010960((uint64_t)v27, v51);
  return v34 & 1;
}

uint64_t sub_1002627EC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t TupleTypeMetadata2;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v60 = a6;
  v61 = a5;
  v69 = a1;
  v70 = a2;
  v66 = *(_QWORD *)(a4 - 8);
  v7 = __chkstk_darwin(a1);
  v58 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v63 = (char *)&v57 - v10;
  v11 = __chkstk_darwin(v9);
  v59 = (char *)&v57 - v12;
  v68 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v11);
  v62 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v57 - v16;
  v67 = v18;
  v20 = _s14descr1008F7311C5StateO12EitherOrBothOMa(0, v18, v19, v19);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v57 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v57 - v28;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v20, v20, 0, 0);
  v65 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v31 = __chkstk_darwin(TupleTypeMetadata2);
  v33 = (char *)&v57 - v32;
  v34 = (char *)&v57 + *(int *)(v31 + 48) - v32;
  v64 = v21;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v35((char *)&v57 - v32, v69, v20);
  v35(v34, (uint64_t)v70, v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33, v20);
  if (!EnumCaseMultiPayload)
  {
    v35(v29, (uint64_t)v33, v20);
    if (!swift_getEnumCaseMultiPayload(v34, v20))
    {
      v53 = v67;
      v54 = v68;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v17, v34, v67);
      v39 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v17, v53, v61);
      v40 = *(void (**)(char *, uint64_t))(v54 + 8);
      v40(v17, v53);
      v41 = v29;
      v42 = v53;
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v29, v67);
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v35(v27, (uint64_t)v33, v20);
    if (swift_getEnumCaseMultiPayload(v34, v20) == 1)
    {
      v37 = v66;
      v38 = v59;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v59, v34, a4);
      v39 = dispatch thunk of static Equatable.== infix(_:_:)(v27, v38, a4, v60);
      v40 = *(void (**)(char *, uint64_t))(v37 + 8);
      v40(v38, a4);
      v41 = v27;
      v42 = a4;
LABEL_14:
      v40(v41, v42);
      v51 = v64;
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v27, a4);
    goto LABEL_12;
  }
  v35(v24, (uint64_t)v33, v20);
  v43 = v67;
  v44 = *(int *)(swift_getTupleTypeMetadata2(0, v67, a4, 0, 0) + 48);
  v45 = &v24[v44];
  if (swift_getEnumCaseMultiPayload(v34, v20) != 2)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(&v24[v44], a4);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v43);
LABEL_12:
    v39 = 0;
    v51 = v65;
    v20 = TupleTypeMetadata2;
    goto LABEL_16;
  }
  v70 = &v34[v44];
  v46 = v62;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v62, v34, v43);
  v47 = v66;
  v48 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  v48(v63, v45, a4);
  v49 = v58;
  v48(v58, v70, a4);
  LOBYTE(v46) = dispatch thunk of static Equatable.== infix(_:_:)(v24, v46, v43, v61);
  v50 = *(void (**)(char *, uint64_t))(v68 + 8);
  v50(v24, v43);
  v51 = v64;
  if ((v46 & 1) != 0)
  {
    v39 = dispatch thunk of static Equatable.== infix(_:_:)(v63, v49, a4, v60);
    v52 = *(void (**)(char *, uint64_t))(v47 + 8);
    v52(v49, a4);
    v52(v63, a4);
    v50(v62, v43);
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t))(v47 + 8);
    v55(v49, a4);
    v55(v63, a4);
    v50(v62, v43);
    v39 = 0;
  }
LABEL_16:
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v20);
  return v39 & 1;
}

uint64_t sub_100262CAC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002627EC(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
}

uint64_t sub_100262CBC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v59 = a3;
  v6 = a2 & 1;
  v7 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - v18;
  sub_10026105C(v6, 0, (uint64_t)v12, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100010960((uint64_t)v12, &qword_1009D55C0);
    if (qword_1009CDD58 != -1)
      swift_once(&qword_1009CDD58, sub_100260CC0);
    v20 = type metadata accessor for Logger(0);
    sub_100048F64(v20, (uint64_t)qword_1009D51E0);
    v21 = sub_10002CD84(a1, (uint64_t)v9, _s14descr1008F7311C5StateO8DraggingVMa);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(32, -1);
      v25 = swift_slowAlloc(64, -1);
      v61 = v25;
      *(_DWORD *)v24 = 136315650;
      v26 = sub_100569D0C();
      v28 = v27;
      v60 = sub_100040F58(v26, v27, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v28);
      sub_10002C8F0((uint64_t)v9, _s14descr1008F7311C5StateO8DraggingVMa);
      *(_WORD *)(v24 + 12) = 2080;
      v29 = PageProgressDirection.description.getter(v6);
      v31 = v30;
      v60 = sub_100040F58(v29, v30, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease(v31);
      *(_WORD *)(v24 + 22) = 2048;
      v60 = *(_QWORD *)&a4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v24 + 24, v24 + 32);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Cannot produce a Turning state from %s, for pageProgressDirection: %s, contentWidth: %f", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

      sub_10002C8F0((uint64_t)v9, _s14descr1008F7311C5StateO8DraggingVMa);
    }
    v32 = a1;
    v33 = _s14descr1008F7311C5StateO8DraggingVMa;
    goto LABEL_34;
  }
  sub_10002C960((uint64_t)v12, (uint64_t)v19, _s14descr1008F7311C5StateO4TurnVMa);
  v34 = -1.0;
  if ((_DWORD)v6)
  {
    if (v19[*(int *)(v13 + 24)])
      goto LABEL_13;
    goto LABEL_12;
  }
  if ((v19[*(int *)(v13 + 24)] & 1) != 0)
LABEL_12:
    v34 = 1.0;
LABEL_13:
  v35 = v34 * *(double *)(a1 + *(int *)(v7 + 40));
  if (qword_1009CDD50 != -1)
    swift_once(&qword_1009CDD50, sub_100260CB0);
  if (*(double *)&qword_1009D51D8 <= v35)
  {
    v45 = *(double *)&v19[*(int *)(v13 + 40)];
    if (qword_1009CDD40 != -1)
    {
      v58 = *(double *)&v19[*(int *)(v13 + 40)];
      swift_once(&qword_1009CDD40, sub_100260C88);
      v45 = v58;
    }
    if (*(double *)&qword_1009D51C8 < v45)
      goto LABEL_26;
    v46 = fabs(v35);
    if (qword_1009CDD48 != -1)
    {
      v58 = v46;
      swift_once(&qword_1009CDD48, sub_100260C9C);
      v46 = v58;
    }
    if (*(double *)&qword_1009D51D0 < v46)
    {
LABEL_26:
      sub_10002C8F0(a1, _s14descr1008F7311C5StateO8DraggingVMa);
      v47 = v59;
      sub_10002C960((uint64_t)v19, v59, _s14descr1008F7311C5StateO4TurnVMa);
      v48 = _s14descr1008F7311C5StateO7TurningVMa(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
    }
    if (qword_1009CDD58 != -1)
      swift_once(&qword_1009CDD58, sub_100260CC0);
    v50 = type metadata accessor for Logger(0);
    sub_100048F64(v50, (uint64_t)qword_1009D51E0);
    v51 = sub_10002CD84((uint64_t)v19, (uint64_t)v16, _s14descr1008F7311C5StateO4TurnVMa);
    v38 = Logger.logObject.getter(v51);
    v55 = static os_log_type_t.debug.getter(v38, v52, v53, v54);
    if (!os_log_type_enabled(v38, v55))
    {

      sub_10002C8F0((uint64_t)v16, _s14descr1008F7311C5StateO4TurnVMa);
      goto LABEL_33;
    }
    v56 = swift_slowAlloc(42, -1);
    *(_DWORD *)v56 = 134218752;
    v61 = *(_QWORD *)&v16[*(int *)(v13 + 40)];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v56 + 4, v56 + 12);
    sub_10002C8F0((uint64_t)v16, _s14descr1008F7311C5StateO4TurnVMa);
    *(_WORD *)(v56 + 12) = 2048;
    v61 = qword_1009D51C8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v56 + 14, v56 + 22);
    *(_WORD *)(v56 + 22) = 2048;
    v61 = *(_QWORD *)&v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v56 + 24, v56 + 32);
    *(_WORD *)(v56 + 32) = 2048;
    v61 = qword_1009D51D0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v56 + 34, v56 + 42);
    _os_log_impl((void *)&_mh_execute_header, v38, v55, "Refusing to drag, progress %f (threshold %f). velocity %f (threshold %f)", (uint8_t *)v56, 0x2Au);
    v44 = v56;
  }
  else
  {
    if (qword_1009CDD58 != -1)
      swift_once(&qword_1009CDD58, sub_100260CC0);
    v36 = type metadata accessor for Logger(0);
    v37 = sub_100048F64(v36, (uint64_t)qword_1009D51E0);
    v38 = Logger.logObject.getter(v37);
    v42 = static os_log_type_t.debug.getter(v38, v39, v40, v41);
    if (!os_log_type_enabled(v38, v42))
      goto LABEL_32;
    v43 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v42, "Refusing to drag, ended with flick in opposite direction", v43, 2u);
    v44 = (uint64_t)v43;
  }
  swift_slowDealloc(v44, -1, -1);
LABEL_32:

LABEL_33:
  sub_10002C8F0(a1, _s14descr1008F7311C5StateO8DraggingVMa);
  v33 = _s14descr1008F7311C5StateO4TurnVMa;
  v32 = (uint64_t)v19;
LABEL_34:
  sub_10002C8F0(v32, v33);
  v57 = _s14descr1008F7311C5StateO7TurningVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v59, 1, 1, v57);
}

uint64_t sub_1002633AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[4];
  int v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v71 = a4;
  v72 = a5;
  v73 = a2;
  v76 = a1;
  v10 = type metadata accessor for SpreadPaginationEntity(0);
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  __chkstk_darwin(v10);
  v68 = &v64[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v67);
  v70 = &v64[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v69 = &v64[-v14];
  __chkstk_darwin(v15);
  v17 = &v64[-v16];
  __chkstk_darwin(v18);
  v20 = &v64[-v19];
  v21 = sub_10004CFD4(&qword_1009D55D0);
  __chkstk_darwin(v21);
  v23 = &v64[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_10004CFD4(&qword_1009D51F8);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = &v64[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v30 = &v64[-v29];
  v31 = a3;
  v32 = a3;
  v33 = v71;
  sub_10000B5E4(v32, (uint64_t)v20, (uint64_t *)&unk_1009E8E70);
  sub_10000B5E4(v33, (uint64_t)v17, (uint64_t *)&unk_1009E8E70);
  sub_100262198((uint64_t)v20, (uint64_t)v17, (uint64_t)v23);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    v34 = v33;
    v35 = v75;
    v36 = v76;
    sub_100010960((uint64_t)v23, &qword_1009D55D0);
    if (qword_1009CDD58 != -1)
      swift_once(&qword_1009CDD58, sub_100260CC0);
    v37 = type metadata accessor for Logger(0);
    sub_100048F64(v37, (uint64_t)qword_1009D51E0);
    v38 = (_BYTE *)v31;
    v39 = v69;
    sub_10000B5E4(v31, (uint64_t)v69, (uint64_t *)&unk_1009E8E70);
    v40 = v70;
    v41 = sub_10000B5E4(v34, (uint64_t)v70, (uint64_t *)&unk_1009E8E70);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = (uint64_t)v40;
      v46 = swift_slowAlloc(22, -1);
      v66 = swift_slowAlloc(64, -1);
      v78 = v66;
      *(_DWORD *)v46 = 136315394;
      v65 = v44;
      sub_10000B5E4((uint64_t)v39, (uint64_t)v20, (uint64_t *)&unk_1009E8E70);
      v47 = v67;
      v48 = String.init<A>(describing:)(v20, v67);
      v68 = v38;
      v50 = v49;
      v77 = sub_100040F58(v48, v49, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v46 + 4, v46 + 12);
      swift_bridgeObjectRelease(v50);
      sub_100010960((uint64_t)v39, (uint64_t *)&unk_1009E8E70);
      *(_WORD *)(v46 + 12) = 2080;
      sub_10000B5E4(v45, (uint64_t)v20, (uint64_t *)&unk_1009E8E70);
      v51 = String.init<A>(describing:)(v20, v47);
      v53 = v52;
      v77 = sub_100040F58(v51, v52, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v46 + 14, v46 + 22);
      swift_bridgeObjectRelease(v53);
      sub_100010960(v45, (uint64_t *)&unk_1009E8E70);
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v65, "Cannot produce destination for backwardDestination: %s, forward: %s", (uint8_t *)v46, 0x16u);
      v54 = v66;
      swift_arrayDestroy(v66, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v46, -1, -1);

      sub_100010960(v34, (uint64_t *)&unk_1009E8E70);
      sub_100010960((uint64_t)v68, (uint64_t *)&unk_1009E8E70);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v76, v75);
    }
    else
    {

      sub_100010960((uint64_t)v40, (uint64_t *)&unk_1009E8E70);
      sub_100010960((uint64_t)v39, (uint64_t *)&unk_1009E8E70);
      sub_100010960(v34, (uint64_t *)&unk_1009E8E70);
      sub_100010960((uint64_t)v38, (uint64_t *)&unk_1009E8E70);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v36, v35);
    }
    v62 = v72;
    v63 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 1, 1, v63);
  }
  else
  {
    sub_100025B3C((uint64_t)v23, (uint64_t)v30, &qword_1009D51F8);
    v55 = v74;
    v56 = v75;
    v57 = v68;
    v58 = v76;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v74 + 16))(v68, v76, v75);
    sub_10000B5E4((uint64_t)v30, (uint64_t)v27, &qword_1009D51F8);
    sub_100010960(v33, (uint64_t *)&unk_1009E8E70);
    sub_100010960(v31, (uint64_t *)&unk_1009E8E70);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v58, v56);
    sub_100010960((uint64_t)v30, &qword_1009D51F8);
    v59 = v72;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v55 + 32))(v72, v57, v56);
    v60 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
    *(_QWORD *)(v59 + v60[5]) = v73;
    sub_100025B3C((uint64_t)v27, v59 + v60[6], &qword_1009D51F8);
    *(double *)(v59 + v60[7]) = a6;
    *(double *)(v59 + v60[8]) = a7;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v60 - 1) + 56))(v59, 0, 1, v60);
  }
}

uint64_t sub_100263994(char a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;

  v3 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  v4 = *(double *)(v1 + *(int *)(v3 + 36));
  if (v4 == 0.0)
  {
    v4 = *(double *)(v1 + *(int *)(v3 + 40));
    if (v4 == 0.0)
      return 2;
  }
  if ((a1 & 1) != 0)
  {
    if (v4 < 0.0)
      return 1;
  }
  else if (v4 >= 0.0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1002639FC@<X0>(char a1@<W0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, char *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;

  v5 = sub_10004CFD4(&qword_1009D51F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - v9;
  v11 = type metadata accessor for SpreadPaginationEntity(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - v16;
  v18 = v2 + *(int *)(_s14descr1008F7311C5StateO8DraggingVMa(0) + 28);
  if ((a1 & 1) != 0)
  {
    sub_10000B5E4(v18, (uint64_t)v10, &qword_1009D51F8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v5);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v11);
        return sub_100010960((uint64_t)v10, &qword_1009D51F8);
      }
      v25 = &v10[*(int *)(sub_10004CFD4(&qword_1009D5200) + 48)];
      v26 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v26(v17, v10, v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
      v26(a2, v17, v11);
    }
    else
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v24(v17, v10, v11);
      v24(a2, v17, v11);
    }
  }
  else
  {
    sub_10000B5E4(v18, (uint64_t)v7, &qword_1009D51F8);
    v19 = swift_getEnumCaseMultiPayload(v7, v5);
    if (!v19)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v11);
      return sub_100010960((uint64_t)v7, &qword_1009D51F8);
    }
    if (v19 == 1)
    {
      v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v20(v14, v7, v11);
    }
    else
    {
      v23 = sub_10004CFD4(&qword_1009D5200);
      v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v20(v14, &v7[*(int *)(v23 + 48)], v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    }
    v20(a2, v14, v11);
  }
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
}

uint64_t sub_100263C78@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v7 = a2 & 1;
  v8 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026105C(v7, *(void **)(a1 + *(int *)(v8 + 20)), (uint64_t)v13, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100010960((uint64_t)v13, &qword_1009D55C0);
    if (qword_1009CDD58 != -1)
      swift_once(&qword_1009CDD58, sub_100260CC0);
    v18 = type metadata accessor for Logger(0);
    sub_100048F64(v18, (uint64_t)qword_1009D51E0);
    v19 = sub_10002CD84(a1, (uint64_t)v10, _s14descr1008F7311C5StateO8DraggingVMa);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(32, -1);
      v23 = swift_slowAlloc(64, -1);
      v36 = a3;
      v24 = v23;
      v38 = v23;
      *(_DWORD *)v22 = 136315650;
      v25 = sub_100569D0C();
      v27 = v26;
      v37 = sub_100040F58(v25, v26, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease(v27);
      sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateO8DraggingVMa);
      *(_WORD *)(v22 + 12) = 2080;
      v28 = PageProgressDirection.description.getter(v7);
      v30 = v29;
      v37 = sub_100040F58(v28, v29, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 14, v22 + 22);
      swift_bridgeObjectRelease(v30);
      *(_WORD *)(v22 + 22) = 2048;
      v37 = *(_QWORD *)&a4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 24, v22 + 32);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot produce a Turning state from %s, for pageProgressDirection: %s, contentWidth: %f", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      v31 = v24;
      a3 = v36;
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateO8DraggingVMa);
    }

    sub_10002C8F0(a1, _s14descr1008F7311C5StateO8DraggingVMa);
    v34 = _s14descr1008F7311C5StateO9ResettingVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a3, 1, 1, v34);
  }
  else
  {
    sub_10002C960((uint64_t)v13, (uint64_t)v17, _s14descr1008F7311C5StateO4TurnVMa);
    sub_10002C960((uint64_t)v17, a3, _s14descr1008F7311C5StateO4TurnVMa);
    sub_10002C8F0(a1, _s14descr1008F7311C5StateO8DraggingVMa);
    v32 = _s14descr1008F7311C5StateO9ResettingVMa(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a3, 0, 1, v32);
  }
}

uint64_t _s14descr1008F7311C5StateO9ResettingVMa(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D5648, (uint64_t)&_s14descr1008F7311C5StateO9ResettingVMn);
}

uint64_t _s14descr1008F7311C5StateO7TurningVMa(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009D56D8, (uint64_t)&_s14descr1008F7311C5StateO7TurningVMn);
}

BOOL sub_100264044(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;

  if ((static SpreadPaginationEntity.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
  v4 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a2 + v4[5])) & 1) == 0
    || (static LocationMovement.Direction.== infix(_:_:)(*(unsigned __int8 *)(a1 + v4[6]), *(unsigned __int8 *)(a2 + v4[6])) & 1) == 0|| (static SpreadPaginationEntity.== infix(_:_:)(a1 + v4[7], a2 + v4[7]) & 1) == 0)
  {
    return 0;
  }
  v5 = v4[8];
  v6 = *(void **)(a1 + v5);
  v7 = *(void **)(a2 + v5);
  if (v6)
  {
    if (!v7)
      return 0;
    sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
    v8 = v7;
    v9 = v6;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (*(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]))
    return *(double *)(a1 + v4[10]) == *(double *)(a2 + v4[10]);
  return 0;
}

void sub_100264170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  v38 = a2;
  v2 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  __chkstk_darwin(v2);
  v34 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v4);
  v33 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v32 = (char *)v28 - v7;
  v29 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  __chkstk_darwin(v29);
  v35 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s14descr1008F7311C5StateO7TurningVMa(0);
  __chkstk_darwin(v9);
  v31 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v30 = (char *)v28 - v12;
  v28[0] = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  __chkstk_darwin(v28[0]);
  v28[1] = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v36 = (char *)v28 - v18;
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  __chkstk_darwin(v21);
  v22 = sub_10004CFD4(&qword_1009D55E0);
  __chkstk_darwin(v22);
  v24 = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (uint64_t)&v24[*(int *)(v25 + 48)];
  sub_10002CD84(v37, (uint64_t)v24, _s14descr1008F7311C5StateOMa);
  sub_10002CD84(v38, v26, _s14descr1008F7311C5StateOMa);
  v27 = (char *)sub_100264468 + 4 * byte_10071511D[swift_getEnumCaseMultiPayload(v24, v14)];
  __asm { BR              X10 }
}

uint64_t sub_100264468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_10002CD84(v0, v3, _s14descr1008F7311C5StateOMa);
  if (swift_getEnumCaseMultiPayload(v1, v2))
  {
    sub_10002C8F0(v3, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
    sub_100010960(v0, &qword_1009D55E0);
  }
  else
  {
    v7 = *(_QWORD *)(v4 - 168);
    sub_10002C960(v1, v7, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
    if ((static SpreadPaginationEntity.== infix(_:_:)(v3, v7) & 1) != 0)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
      v8 = *(int *)(*(_QWORD *)(v4 - 176) + 20);
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)(v3 + v8), *(_QWORD *)(v7 + v8)) & 1) != 0)
      {
        v9 = *(int *)(*(_QWORD *)(v4 - 176) + 24);
        if ((static LocationMovement.Direction.== infix(_:_:)(*(unsigned __int8 *)(v3 + v9), *(unsigned __int8 *)(v7 + v9)) & 1) != 0)
        {
          v10 = *(int *)(*(_QWORD *)(v4 - 176) + 28);
          if ((static SpreadPaginationEntity.== infix(_:_:)(v3 + v10, v7 + v10) & 1) != 0)
          {
            sub_10002C8F0(v7, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
            sub_10002C8F0(v3, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
            sub_10002C8F0(v0, _s14descr1008F7311C5StateOMa);
            v5 = 1;
            return v5 & 1;
          }
        }
      }
    }
    sub_10002C8F0(v7, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
    sub_10002C8F0(v3, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
    sub_10002C8F0(v0, _s14descr1008F7311C5StateOMa);
  }
  v5 = 0;
  return v5 & 1;
}

unint64_t sub_100264970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E8E80;
  if (!qword_1009E8E80)
  {
    v1 = type metadata accessor for SpreadPaginationEntity(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SpreadPaginationEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1009E8E80);
  }
  return result;
}

BOOL sub_1002649B8(uint64_t a1, uint64_t a2)
{
  int *v4;

  if ((static SpreadPaginationEntity.== infix(_:_:)(a1, a2) & 1) != 0
    && (sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr),
        v4 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a2 + v4[5])) & 1) != 0)
    && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + v4[6]), *(_QWORD *)(a2 + v4[6])) & 1) != 0
    && (sub_100262378(a1 + v4[7], a2 + v4[7]) & 1) != 0
    && *(_QWORD *)(a1 + v4[8]) == *(_QWORD *)(a2 + v4[8])
    && *(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]))
  {
    return *(double *)(a1 + v4[10]) == *(double *)(a2 + v4[10]);
  }
  else
  {
    return 0;
  }
}

BOOL sub_100264A90(uint64_t a1, uint64_t a2)
{
  int *v4;

  if ((static SpreadPaginationEntity.== infix(_:_:)(a1, a2) & 1) != 0
    && (sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr),
        v4 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a2 + v4[5])) & 1) != 0)
    && (sub_100262378(a1 + v4[6], a2 + v4[6]) & 1) != 0
    && *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7]))
  {
    return *(double *)(a1 + v4[8]) == *(double *)(a2 + v4[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t _s14descr1008F7311C5StateO12PanDirectionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100264B8C + 4 * byte_10071512A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100264BC0 + 4 * byte_100715125[v4]))();
}

uint64_t sub_100264BC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100264BC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100264BD0);
  return result;
}

uint64_t sub_100264BDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100264BE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100264BE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100264BF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1008F7311C5StateO12PanDirectionOMa()
{
  return &_s14descr1008F7311C5StateO12PanDirectionON;
}

uint64_t sub_100264C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100264C30);
}

uint64_t sub_100264C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100264C40);
}

char *sub_100264C48(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v4 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for SpreadPaginationEntity(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = v6[5];
    v10 = *(void **)&a2[v9];
    *(_QWORD *)&a1[v9] = v10;
    a1[v6[6]] = a2[v6[6]];
    v11 = v6[7];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = v10;
    v8(v12, v13, v7);
    v15 = v6[8];
    v16 = *(void **)&a2[v15];
    *(_QWORD *)&a1[v15] = v16;
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
    v17 = v16;
  }
  return a1;
}

void sub_100264D40(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  int *v4;

  v2 = type metadata accessor for SpreadPaginationEntity(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

  v3(a1 + v4[7], v2);
}

uint64_t sub_100264DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v7 = v6[5];
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v9 = v6[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = v8;
  v5(v10, v11, v4);
  v13 = v6[8];
  v14 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  v15 = v14;
  return a1;
}

uint64_t sub_100264E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  v6 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v7 = v6[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v5(a1 + v6[7], a2 + v6[7], v4);
  v11 = v6[8];
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  return a1;
}

uint64_t sub_100264F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v5(a1 + v6[7], a2 + v6[7], v4);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  return a1;
}

uint64_t sub_100265000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  v6 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v7 = v6[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
  v5(a1 + v6[7], a2 + v6[7], v4);
  v9 = v6[8];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  return a1;
}

uint64_t sub_1002650C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002650D0);
}

uint64_t sub_1002650D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14descr1008F7311C5StateO4TurnVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100265110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026511C);
}

uint64_t sub_100265120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14descr1008F7311C5StateO4TurnVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_100265160(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = _s14descr1008F7311C5StateO4TurnVMa(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_1002651CC()
{
  unint64_t result;

  result = qword_1009D5710[0];
  if (!qword_1009D5710[0])
  {
    result = swift_getWitnessTable(&unk_100715380, &_s14descr1008F7311C5StateO12PanDirectionON);
    atomic_store(result, qword_1009D5710);
  }
  return result;
}

void sub_100265214(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_100233378(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100265DE0(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      v6[3] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_1002652B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for UserInterfaceSizeClass(0);
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v13 = a1;
      v14 = v7;
      v15 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v13 = a1;
      v14 = v7;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    v16 = a3[9];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = v17;
      v22 = v19;
      v23 = 1;
    }
    else
    {
      v24 = *v18;
      *v17 = *v18;
      swift_retain(v24);
      v21 = v17;
      v22 = v19;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
    v25 = a3[10];
    v26 = a3[11];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = (uint64_t *)((char *)a1 + v26);
    v30 = (uint64_t *)((char *)a2 + v26);
    v11 = v30[1];
    *v29 = *v30;
    v29[1] = v11;
  }
  swift_retain(v11);
  return a1;
}

double sub_100265484(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v4 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 36));
  v8 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 44) + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_10026556C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a1;
    v12 = v6;
    v13 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    swift_retain(v10);
    v11 = a1;
    v12 = v6;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v14 = a3[9];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = v15;
    v20 = v17;
    v21 = 1;
  }
  else
  {
    v22 = *v16;
    *v15 = *v16;
    swift_retain(v22);
    v19 = v15;
    v20 = v17;
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v20, v21);
  v23 = a3[10];
  v24 = a3[11];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = (uint64_t *)((char *)a1 + v24);
  v28 = (uint64_t *)((char *)a2 + v24);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_retain(v29);
  return a1;
}

uint64_t *sub_100265718(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D26B8);
    v6 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      swift_retain(v10);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    v14 = a3[9];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_100010960((uint64_t)a1 + v14, &qword_1009D8790);
    v17 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      v22 = *v16;
      *v15 = *v16;
      swift_retain(v22);
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
  }
  v23 = a3[10];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)v24 = v26;
  v27 = a3[11];
  v28 = (uint64_t *)((char *)a1 + v27);
  v29 = (uint64_t *)((char *)a2 + v27);
  v30 = v29[1];
  v31 = v28[1];
  *v28 = *v29;
  v28[1] = v30;
  swift_retain(v30);
  swift_release(v31);
  return a1;
}

char *sub_1002658FC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v10 = a3[9];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload(v11, v13, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[10];
  v16 = a3[11];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  return a1;
}

char *sub_100265A94(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D26B8);
    v6 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v10 = a3[9];
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_100010960((uint64_t)&a1[v10], &qword_1009D8790);
    v13 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[10];
  v16 = a3[11];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = *(_QWORD *)&a1[v16 + 8];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  swift_release(v19);
  return a1;
}

uint64_t sub_100265C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100265C6C);
}

uint64_t sub_100265C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_10004CFD4(&qword_1009D26A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10004CFD4(&qword_1009D39F8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100265D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100265D28);
}

uint64_t sub_100265D28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_10004CFD4(&qword_1009D26A0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_10004CFD4(&qword_1009D39F8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for OptionsAdaptiveStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionsAdaptiveStack);
}

void sub_100265DE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D3A88)
  {
    v2 = type metadata accessor for ContentSizeCategory(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D3A88);
  }
}

uint64_t sub_100265E34(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1008693D4, 1);
}

uint64_t sub_100265E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100265F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100265FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = type metadata accessor for VStack(255, v3, v4);
  v6 = type metadata accessor for HStack(255, v3, v4);
  v7 = type metadata accessor for _ConditionalContent(255, v5, v6);
  v8 = type metadata accessor for Group(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - v13;
  v23 = v3;
  v24 = v4;
  v25 = v2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v5);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v6);
  v27 = WitnessTable;
  v28 = v16;
  v17 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
  Group<A>.init(content:)(sub_100266A84, v22, v7, v17);
  v26 = v17;
  swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v8);
  sub_100344038((uint64_t)v12, v8, (uint64_t)v14);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  sub_100341C00((uint64_t)v14, v8, v21);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

uint64_t sub_100266190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t WitnessTable;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v106 = a4;
  v7 = type metadata accessor for HStack(0, a2, a3);
  v95 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v97 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v96 = (uint64_t)&v86 - v10;
  v11 = type metadata accessor for VStack(0, a2, a3);
  v87 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v89 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v88 = (uint64_t)&v86 - v14;
  v15 = type metadata accessor for ContentSizeCategory(0);
  v93 = *(_QWORD *)(v15 - 8);
  v94 = v15;
  v16 = __chkstk_darwin(v15);
  v92 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v91 = (uint64_t)&v86 - v18;
  v107 = a2;
  v102 = a3;
  v108 = type metadata accessor for OptionsAdaptiveStack(0, a2, a3, v19);
  v99 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v98 = (char *)&v86 - v20;
  v21 = type metadata accessor for UserInterfaceSizeClass(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v90 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v24);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v86 - v32;
  __chkstk_darwin(v31);
  v35 = (char *)&v86 - v34;
  v103 = v11;
  v100 = type metadata accessor for _ConditionalContent(0, v11, v7);
  v105 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v104 = (char *)&v86 - v36;
  v101 = a1;
  sub_100667DCC((uint64_t)v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v33, enum case for UserInterfaceSizeClass.compact(_:), v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
  v37 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_100266A90((uint64_t)v35, (uint64_t)v26);
  sub_100266A90((uint64_t)v33, v37);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v38((uint64_t)v26, 1, v21) == 1)
  {
    sub_100010960((uint64_t)v33, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v35, (uint64_t *)&unk_1009D8210);
    v39 = v38(v37, 1, v21);
    v40 = v103;
    if (v39 == 1)
    {
      sub_100010960((uint64_t)v26, (uint64_t *)&unk_1009D8210);
      v41 = v98;
      v42 = v99;
      v43 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v101, v108);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_100266A90((uint64_t)v26, (uint64_t)v30);
  if (v38(v37, 1, v21) == 1)
  {
    sub_100010960((uint64_t)v33, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v35, (uint64_t *)&unk_1009D8210);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v21);
    v40 = v103;
LABEL_6:
    sub_100010960((uint64_t)v26, &qword_1009D3C08);
    v41 = v98;
    v42 = v99;
    v43 = v101;
    v44 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v101, v108);
    v45 = v107;
LABEL_7:
    v46 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v44);
    v47 = v102;
    v48 = v100;
LABEL_11:
    v74 = static VerticalAlignment.center.getter(v46);
    v75 = *(int *)(v44 + 44);
    v76 = v43 + *(int *)(v44 + 40);
    v77 = *(_QWORD *)(v43 + v75);
    v78 = *(_QWORD *)(v43 + v75 + 8);
    v79 = (uint64_t)v97;
    HStack.init(alignment:spacing:content:)(v74, *(_QWORD *)v76, *(unsigned __int8 *)(v76 + 8), v77, v78, v45, v47);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
    v81 = v96;
    sub_100344038(v79, v7, v96);
    v69 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
    v69(v79, v7);
    sub_100341C00(v81, v7, v79);
    v82 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v40);
    v71 = (uint64_t)v104;
    sub_100265F2C(v79, v40, v7, v82, WitnessTable);
    v69(v79, v7);
    v72 = v81;
    v73 = v7;
    goto LABEL_12;
  }
  v49 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v90, v37, v21);
  v50 = sub_100266AD8();
  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v49, v21, v50);
  v52 = *(void (**)(char *, uint64_t))(v22 + 8);
  v52(v49, v21);
  sub_100010960((uint64_t)v33, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v35, (uint64_t *)&unk_1009D8210);
  v52(v30, v21);
  sub_100010960((uint64_t)v26, (uint64_t *)&unk_1009D8210);
  v41 = v98;
  v42 = v99;
  v43 = v101;
  v44 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v101, v108);
  v40 = v103;
  v45 = v107;
  if ((v51 & 1) == 0)
    goto LABEL_7;
LABEL_9:
  v53 = v91;
  sub_100667DF8(v91);
  v55 = (uint64_t)v92;
  v54 = v93;
  v56 = v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v93 + 104))(v92, enum case for ContentSizeCategory.extraExtraExtraLarge(_:), v94);
  v57 = sub_1003438B8(v53, v55);
  v58 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
  v58(v55, v56);
  v59 = v53;
  v60 = v56;
  v45 = v107;
  v44 = v108;
  v58(v59, v60);
  v46 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v44);
  v47 = v102;
  v48 = v100;
  if (!v57)
    goto LABEL_11;
  v61 = static HorizontalAlignment.center.getter(v46);
  v62 = *(int *)(v44 + 44);
  v63 = v43 + *(int *)(v44 + 40);
  v64 = *(_QWORD *)(v43 + v62);
  v65 = *(_QWORD *)(v43 + v62 + 8);
  v66 = (uint64_t)v89;
  VStack.init(alignment:spacing:content:)(v61, *(_QWORD *)v63, *(unsigned __int8 *)(v63 + 8), v64, v65, v45, v47);
  v67 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v40);
  v68 = v88;
  sub_100344038(v66, v40, v88);
  v69 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  v69(v66, v40);
  sub_100341C00(v68, v40, v66);
  v70 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
  v71 = (uint64_t)v104;
  sub_100265E68(v66, v40, v7, v67, v70);
  v69(v66, v40);
  v72 = v68;
  v73 = v40;
LABEL_12:
  v69(v72, v73);
  v83 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v40);
  v84 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
  v109 = v83;
  v110 = v84;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v48);
  sub_100341C00(v71, v48, v106);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 8))(v71, v48);
}

uint64_t sub_10026695C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100266984((uint64_t)&unk_100715470, &qword_1009D26B8, a1);
}

uint64_t sub_100266970@<X0>(_QWORD *a1@<X8>)
{
  return sub_100266984((uint64_t)&unk_100715440, &qword_1009D8790, a1);
}

uint64_t sub_100266984@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  *a3 = swift_getKeyPath(a1);
  v5 = sub_10004CFD4(a2);
  return swift_storeEnumTagMultiPayload(a3, v5, 0);
}

uint64_t sub_1002669C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17;
  int *v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;

  sub_100025B3C(a1, a9, &qword_1009D26A0);
  v18 = (int *)type metadata accessor for OptionsAdaptiveStack(0, a7, a8, v17);
  result = sub_100025B3C(a2, a9 + v18[9], &qword_1009D39F8);
  v20 = a9 + v18[10];
  *(_QWORD *)v20 = a3;
  *(_BYTE *)(v20 + 8) = a4 & 1;
  v21 = (_QWORD *)(a9 + v18[11]);
  *v21 = a5;
  v21[1] = a6;
  return result;
}

uint64_t sub_100266A84@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100266190(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100266A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100266AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D87D0;
  if (!qword_1009D87D0)
  {
    v1 = type metadata accessor for UserInterfaceSizeClass(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UserInterfaceSizeClass, v1);
    atomic_store(result, (unint64_t *)&qword_1009D87D0);
  }
  return result;
}

uint64_t sub_100266B20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for VStack(255, *a1, v2);
  v4 = type metadata accessor for HStack(255, v1, v2);
  v5 = type metadata accessor for _ConditionalContent(255, v3, v4);
  v6 = type metadata accessor for Group(255, v5);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v5);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v6);
}

uint64_t _s13PriceTrackingCMa()
{
  return objc_opt_self(DebugViewControllerPriceTracking);
}

id sub_100266CE0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t KeyPath;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  NSString v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  NSString v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  NSString v48;
  void *v49;
  id v50;
  uint64_t v51;
  void **v52;
  id v53;
  NSString v54;
  Class isa;
  id v56;
  void **aBlock;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v3 = swift_allocObject(v2, 88, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1007154A0;
  sub_100009E04(0, (unint64_t *)&qword_1009D57C8, off_1008E51E0);
  v4 = (void *)objc_opt_self(NSUserDefaults);
  v5 = objc_msgSend(v4, "standardUserDefaults");
  KeyPath = swift_getKeyPath(&unk_1007154C8);
  *(_QWORD *)(v3 + 32) = sub_1002674E8(0xD000000000000016, 0x80000001007B9EB0, v5, KeyPath);
  v7 = String._bridgeToObjectiveC()();
  v62 = BKAppDelegate.enableMetricsInspectorOnDebugMode();
  v63 = 0;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1005A4264;
  v61 = &unk_1008F73F0;
  v8 = _Block_copy(&aBlock);
  v9 = (void *)objc_opt_self(BKDebugViewEntry);
  v10 = objc_msgSend(v9, "entryWithTitle:action:", v7, v8);

  _Block_release(v8);
  *(_QWORD *)&v11 = swift_release(v63).n128_u64[0];
  *(_QWORD *)(v3 + 40) = v10;
  v12 = objc_msgSend(v4, "standardUserDefaults", v11);
  v13 = swift_getKeyPath(&unk_1007154F8);
  *(_QWORD *)(v3 + 48) = sub_1002674E8(0x656C62616E45202DLL, 0xE900000000000064, v12, v13);
  v14 = swift_allocObject(&unk_1008F7428, 24, 7);
  *(_QWORD *)(v14 + 16) = v1;
  v62 = sub_100267820;
  v63 = v14;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100321BF8;
  v61 = &unk_1008F7440;
  v15 = _Block_copy(&aBlock);
  v16 = (void *)objc_opt_self(BKDebugViewCellModel);
  v17 = v1;
  v18 = objc_msgSend(v16, "modelWithDetailLineBreakMode:detailTextBlock:", 0, v15);
  _Block_release(v15);
  swift_release(v63);
  v19 = swift_allocObject(&unk_1008F7478, 24, 7);
  *(_QWORD *)(v19 + 16) = v17;
  v20 = v17;
  v21 = String._bridgeToObjectiveC()();
  v62 = sub_100267A00;
  v63 = v19;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1005A4264;
  v61 = &unk_1008F7490;
  v22 = _Block_copy(&aBlock);
  v23 = objc_msgSend(v9, "entryWithTitle:model:action:", v21, v18, v22, swift_release(v63).n128_f64[0]);

  _Block_release(v22);
  *(_QWORD *)(v3 + 56) = v23;
  v24 = swift_allocObject(&unk_1008F74C8, 24, 7);
  *(_QWORD *)(v24 + 16) = v20;
  v62 = sub_100267A08;
  v63 = v24;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100321BF8;
  v61 = &unk_1008F74E0;
  v25 = _Block_copy(&aBlock);
  v26 = v20;
  v27 = objc_msgSend(v16, "modelWithDetailLineBreakMode:detailTextBlock:", 0, v25);
  _Block_release(v25);
  swift_release(v63);
  v28 = swift_allocObject(&unk_1008F7518, 24, 7);
  *(_QWORD *)(v28 + 16) = v26;
  v29 = v26;
  v30 = String._bridgeToObjectiveC()();
  v62 = sub_100267B30;
  v63 = v28;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1005A4264;
  v61 = &unk_1008F7530;
  v31 = _Block_copy(&aBlock);
  v32 = objc_msgSend(v9, "entryWithTitle:model:action:", v30, v27, v31, swift_release(v63).n128_f64[0]);

  _Block_release(v31);
  *(_QWORD *)(v3 + 64) = v32;
  v33 = swift_allocObject(&unk_1008F7568, 24, 7);
  *(_QWORD *)(v33 + 16) = v29;
  v62 = sub_100267BAC;
  v63 = v33;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100321BF8;
  v61 = &unk_1008F7580;
  v34 = _Block_copy(&aBlock);
  v35 = v29;
  v36 = objc_msgSend(v16, "modelWithDetailLineBreakMode:detailTextBlock:", 0, v34);
  _Block_release(v34);
  swift_release(v63);
  v37 = swift_allocObject(&unk_1008F75B8, 24, 7);
  *(_QWORD *)(v37 + 16) = v35;
  v38 = v35;
  v39 = String._bridgeToObjectiveC()();
  v62 = sub_100267CD4;
  v63 = v37;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1005A4264;
  v61 = &unk_1008F75D0;
  v40 = _Block_copy(&aBlock);
  v41 = objc_msgSend(v9, "entryWithTitle:model:action:", v39, v36, v40, swift_release(v63).n128_f64[0]);

  _Block_release(v40);
  *(_QWORD *)(v3 + 72) = v41;
  v42 = swift_allocObject(&unk_1008F7608, 24, 7);
  *(_QWORD *)(v42 + 16) = v38;
  v62 = sub_100267D68;
  v63 = v42;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100321BF8;
  v61 = &unk_1008F7620;
  v43 = _Block_copy(&aBlock);
  v44 = v38;
  v45 = objc_msgSend(v16, "modelWithDetailLineBreakMode:detailTextBlock:", 0, v43);
  _Block_release(v43);
  swift_release(v63);
  v46 = swift_allocObject(&unk_1008F7658, 24, 7);
  *(_QWORD *)(v46 + 16) = v44;
  v47 = v44;
  v48 = String._bridgeToObjectiveC()();
  v62 = sub_100267E90;
  v63 = v46;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_1005A4264;
  v61 = &unk_1008F7670;
  v49 = _Block_copy(&aBlock);
  v50 = objc_msgSend(v9, "entryWithTitle:model:action:", v48, v45, v49, swift_release(v63).n128_f64[0]);

  _Block_release(v49);
  *(_QWORD *)(v3 + 80) = v50;
  aBlock = (void **)v3;
  specialized Array._endMutation()(v51);
  v52 = aBlock;
  v53 = objc_allocWithZone((Class)BKDebugViewSection);
  v54 = String._bridgeToObjectiveC()();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v52);
  v56 = objc_msgSend(v53, "initWithHeaderTitle:entries:footerTitle:", v54, isa, 0);

  return v56;
}

uint64_t sub_100267498@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = NSUserDefaults.priceTrackerHasShownOptInAlert.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002674C4(unsigned __int8 *a1)
{
  return NSUserDefaults.priceTrackerHasShownOptInAlert.setter(*a1);
}

id sub_1002674E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *ObjCClassFromMetadata;
  NSString v18;
  id v19;
  id v20;
  _QWORD v22[5];
  uint64_t v23;
  unsigned __int8 v24;
  void *v25;

  v5 = v4;
  v25 = a3;
  swift_getAtKeyPath(&v25, a4);
  v9 = v24;
  v10 = swift_allocObject(&unk_1008F79C8, 32, 7);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = objc_allocWithZone((Class)type metadata accessor for DebugBoolDefaultSwitch());
  v22[4] = sub_100269B20;
  v23 = v10;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_10004DCB4;
  v22[3] = &unk_1008F79E0;
  v12 = _Block_copy(v22);
  v13 = v23;
  v14 = a3;
  swift_retain(a4);
  swift_retain(v10);
  v15 = objc_msgSend(v11, "initWithInitialValue:synchronize:action:", v9, v12, 0, swift_release(v13).n128_f64[0]);
  swift_release(v10);
  _Block_release(v12);
  v16 = objc_msgSend((id)objc_opt_self(BKDebugViewCellModel), "modelWithAccessoryView:", v15);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v5);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v19 = v16;
  v20 = objc_msgSend(ObjCClassFromMetadata, "entryWithTitle:model:", v18, v19);

  swift_release(a4);
  return v20;
}

uint64_t sub_1002676B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = NSUserDefaults.priceTrackerEnabledOverride.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002676DC(unsigned __int8 *a1)
{
  return NSUserDefaults.priceTrackerEnabledOverride.setter(*a1);
}

uint64_t sub_100267700()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.priceTrackerUpdateScheduleStepsOverride.getter();
  v2 = v1;

  if (!v2)
    return 1701736270;
  if ((v2 & 0x1000000000000000) != 0)
    String.UTF8View._foreignCount()();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0x29736574794220;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v2);
  return 40;
}

uint64_t sub_1002677FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100267820()
{
  return sub_100267700();
}

void sub_100267828(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t updated;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t KeyPath;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *Strong;
  void *v21;
  _QWORD v23[2];
  __int128 v24;
  uint64_t v25;

  v3 = _s23MultilineTextEditorViewVMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  updated = NSUserDefaults.priceTrackerUpdateScheduleStepsOverride.getter();
  v9 = v8;

  if (v9)
    v10 = updated;
  else
    v10 = 0;
  if (v9)
    v11 = v9;
  else
    v11 = 0xE000000000000000;
  v12 = swift_allocObject(&unk_1008F79A0, 24, 7);
  *(_QWORD *)(v12 + 16) = a2;
  v13 = objc_allocWithZone((Class)_s29MultilineTextEditorControllerCMa(0));
  KeyPath = swift_getKeyPath(&unk_100715528);
  v15 = (uint64_t *)&v5[*(int *)(v3 + 32)];
  *v15 = KeyPath;
  v16 = sub_10004CFD4(&qword_1009D57D8);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v23[0] = v10;
  v23[1] = v11;
  v17 = a2;
  swift_retain(v12);
  swift_bridgeObjectRetain(v9);
  State.init(wrappedValue:)(&v24, v23, &type metadata for String);
  v18 = v25;
  *(_OWORD *)v5 = v24;
  *((_QWORD *)v5 + 2) = v18;
  *((_QWORD *)v5 + 3) = 0;
  *((_QWORD *)v5 + 4) = 0xE000000000000000;
  *((_QWORD *)v5 + 5) = sub_100268618;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 7) = sub_100269AD4;
  *((_QWORD *)v5 + 8) = v12;
  v19 = (void *)UIHostingController.init(rootView:)(v5);
  swift_release(v12);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
  if (Strong)
  {
    v21 = Strong;
    objc_msgSend(Strong, "present::", v19, 1);
    swift_bridgeObjectRelease(v9);

  }
  else
  {
    swift_bridgeObjectRelease(v9);
  }

}

void sub_100267A00(uint64_t a1)
{
  uint64_t v1;

  sub_100267828(a1, *(void **)(v1 + 16));
}

uint64_t sub_100267A08()
{
  uint64_t v0;

  return sub_100267B38(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))&NSUserDefaults.priceTrackerDealAbsoluteThresholdOverride.getter);
}

uint64_t sub_100267A28(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = COERCE_DOUBLE(NSUserDefaults.priceTrackerDealAbsoluteThresholdOverride.getter());
  v6 = v5;

  if ((v6 & 1) != 0)
  {
    v7 = 0;
    v9 = 0;
  }
  else
  {
    v7 = Double.description.getter(v4);
    v9 = v8;
  }
  v10 = swift_allocObject(&unk_1008F7900, 24, 7);
  *(_QWORD *)(v10 + 16) = a2;
  v11 = a2;
  sub_100267E98(0xD000000000000017, 0x80000001007BA1B0, 0xD0000000000000D0, 0x80000001007BA1D0, 8, v7, v9, (uint64_t)sub_1002699EC, v10);
  swift_release(v10);
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_100267B30(uint64_t a1)
{
  uint64_t v1;

  return sub_100267A28(a1, *(void **)(v1 + 16));
}

uint64_t sub_100267B38(uint64_t a1, uint64_t (*a2)(void))
{
  id v3;
  double v4;
  char v5;
  char v6;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = COERCE_DOUBLE(a2());
  v6 = v5;

  if ((v6 & 1) != 0)
    return 1701736270;
  else
    return Double.description.getter(v4);
}

uint64_t sub_100267BAC()
{
  uint64_t v0;

  return sub_100267B38(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))&NSUserDefaults.priceTrackerDealRelativeThresholdOverride.getter);
}

uint64_t sub_100267BCC(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = COERCE_DOUBLE(NSUserDefaults.priceTrackerDealRelativeThresholdOverride.getter());
  v6 = v5;

  if ((v6 & 1) != 0)
  {
    v7 = 0;
    v9 = 0;
  }
  else
  {
    v7 = Double.description.getter(v4);
    v9 = v8;
  }
  v10 = swift_allocObject(&unk_1008F7860, 24, 7);
  *(_QWORD *)(v10 + 16) = a2;
  v11 = a2;
  sub_100267E98(0xD000000000000017, 0x80000001007BA0C0, 0xD0000000000000CELL, 0x80000001007BA0E0, 8, v7, v9, (uint64_t)sub_100269934, v10);
  swift_release(v10);
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_100267CD4(uint64_t a1)
{
  uint64_t v1;

  return sub_100267BCC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100267CDC()
{
  id v0;
  char v1;
  char v2;
  unint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.priceTrackerCardLimitOverride.getter();
  v2 = v1;

  if ((v2 & 1) != 0)
    return 1701736270;
  v3 = sub_1002349C4();
  return BinaryInteger.description.getter(&type metadata for Int, v3);
}

uint64_t sub_100267D68()
{
  return sub_100267CDC();
}

uint64_t sub_100267D70(uint64_t a1, void *a2)
{
  id v3;
  char v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.priceTrackerCardLimitOverride.getter();
  v5 = v4;

  if ((v5 & 1) != 0)
  {
    v7 = 0;
    v9 = 0;
  }
  else
  {
    v6 = sub_1002349C4();
    v7 = BinaryInteger.description.getter(&type metadata for Int, v6);
    v9 = v8;
  }
  v10 = swift_allocObject(&unk_1008F76A8, 24, 7);
  *(_QWORD *)(v10 + 16) = a2;
  v11 = a2;
  sub_100267E98(0xD000000000000014, 0x80000001007B9FA0, 0xD0000000000000A7, 0x80000001007B9FC0, 4, v7, v9, (uint64_t)sub_100269250, v10);
  swift_release(v10);
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_100267E90(uint64_t a1)
{
  uint64_t v1;

  return sub_100267D70(a1, *(void **)(v1 + 16));
}

void sub_100267E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  NSString v16;
  NSString v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  NSString v24;
  void *v25;
  void *v26;
  id v27;
  NSString v28;
  id v29;
  void *Strong;
  void *v31;
  void **v32;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  void *v36;
  _QWORD *v37;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

  v19 = (_QWORD *)swift_allocObject(&unk_1008F76D0, 40, 7);
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  v36 = sub_100269280;
  v37 = v19;
  v32 = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_1001EDBF0;
  v35 = &unk_1008F76E8;
  v20 = _Block_copy(&v32);
  v21 = v37;
  swift_bridgeObjectRetain(a7);
  objc_msgSend(v18, "addTextFieldWithConfigurationHandler:", v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
  v22 = swift_allocObject(&unk_1008F7720, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v18);
  v23 = (_QWORD *)swift_allocObject(&unk_1008F7748, 40, 7);
  v23[2] = a8;
  v23[3] = a9;
  v23[4] = v22;
  swift_retain(a9);
  swift_retain(v22);
  v24 = String._bridgeToObjectiveC()();
  v36 = sub_1002692DC;
  v37 = v23;
  v32 = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_1001EDBF0;
  v35 = &unk_1008F7760;
  v25 = _Block_copy(&v32);
  swift_release(v37);
  v26 = (void *)objc_opt_self(UIAlertAction);
  v27 = objc_msgSend(v26, "actionWithTitle:style:handler:", v24, 0, v25);
  _Block_release(v25);
  swift_release(v22);

  objc_msgSend(v18, "addAction:", v27);
  objc_msgSend(v18, "setPreferredAction:", v27);
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "actionWithTitle:style:handler:", v28, 1, 0);

  objc_msgSend(v18, "addAction:", v29);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR___DebugViewControllerPriceTracking_owner);
  if (Strong)
  {
    v31 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v18, 1, 0);

  }
}

void sub_1002681AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;
  id v7;

  objc_msgSend(a1, "setKeyboardType:", a2);
  objc_msgSend(a1, "setClearButtonMode:", 1);
  if (a4)
    v6 = String._bridgeToObjectiveC()();
  else
    v6 = 0;
  v7 = v6;
  objc_msgSend(a1, "setText:");

}

void sub_100268238(uint64_t a1, void (*a2)(id, unint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v17, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
  {
LABEL_10:
    v8 = 0;
    goto LABEL_16;
  }
  v7 = Strong;
  v8 = objc_msgSend(Strong, "textFields");

  if (!v8)
  {
LABEL_16:
    v15 = 0xE000000000000000;
    goto LABEL_17;
  }
  v9 = sub_100009E04(0, &qword_1009D57D0, UITextField_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if (!((unint64_t)v10 >> 62))
  {
    v8 = *(id *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease(v10);
    goto LABEL_16;
  }
  if (v10 < 0)
    v16 = v10;
  else
    v16 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v8 = (id)_CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v10);
  if (!v8)
    goto LABEL_15;
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
LABEL_8:
    v12 = v11;
    swift_bridgeObjectRelease(v10);
    v13 = objc_msgSend(v12, "text");

    if (v13)
    {
      v8 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v15 = v14;

LABEL_17:
      a2(v8, v15);
      swift_bridgeObjectRelease(v15);
      return;
    }
    goto LABEL_10;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v10 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1002683C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::String v10;
  Swift::String v11;
  NSString v12;
  NSString v13;
  id v14;
  _QWORD *v15;
  NSString v16;
  void *v17;
  id v18;
  void *Strong;
  void *v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = v4;
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  String.append(_:)(v10);
  v11._object = (void *)0x80000001007BA090;
  v11._countAndFlagsBits = 0xD000000000000028;
  String.append(_:)(v11);
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE100000000000000);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1, 39);

  v15 = (_QWORD *)swift_allocObject(&unk_1008F77E8, 48, 7);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  v15[5] = a2;
  swift_retain(a4);
  swift_bridgeObjectRetain(a2);
  v16 = String._bridgeToObjectiveC()();
  v21[4] = sub_10026990C;
  v22 = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_1001EDBF0;
  v21[3] = &unk_1008F7800;
  v17 = _Block_copy(v21);
  swift_release(v22);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v16, 0, v17);
  _Block_release(v17);

  objc_msgSend(v14, "addAction:", v18);
  objc_msgSend(v14, "setPreferredAction:", v18);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR___DebugViewControllerPriceTracking_owner);
  if (Strong)
  {
    v20 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v14, 1, 0);

  }
}

uint64_t sub_100268618(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  void *v14;
  Class isa;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24[4];

  v4 = type metadata accessor for String.Encoding(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v9)
    return 1;
  static String.Encoding.utf8.getter(v6);
  v10 = String.data(using:allowLossyConversion:)(v8, 0, a1, a2);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  result = 0;
  if (v12 >> 60 != 15)
  {
    v14 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v24[0] = 0;
    v16 = objc_msgSend(v14, "JSONObjectWithData:options:error:", isa, 0, v24);

    v17 = v24[0];
    if (!v16)
    {
      v19 = v17;
      v20 = _convertNSErrorToError(_:)(v17);

      swift_willThrow(v21);
      sub_100269AE0(v10, v12);
      swift_errorRelease(v20);
      return 0;
    }
    _bridgeAnyObjectToAny(_:)(v16);
    sub_100269AE0(v10, v12);
    swift_unknownObjectRelease(v16);
    v18 = sub_10004CFD4(&qword_1009D57E0);
    result = swift_dynamicCast(&v23, v24, (char *)&type metadata for Any + 8, v18, 6);
    if ((_DWORD)result)
    {
      swift_bridgeObjectRelease(v23);
      return 1;
    }
  }
  return result;
}

void sub_1002687F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  void *v12;
  id v13;

  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults", swift_bridgeObjectRetain(a2).n128_f64[0]);
  v8 = sub_100268904(a1, a2);
  v10 = v9;
  swift_bridgeObjectRelease(a2);
  NSUserDefaults.priceTrackerUpdateScheduleStepsOverride.setter(v8, v10);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR___DebugViewControllerPriceTracking_owner);
  if (Strong)
  {
    v12 = Strong;
    v13 = objc_msgSend(Strong, "tableView");

    if (v13)
    {
      objc_msgSend(v13, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100268904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  static CharacterSet.whitespaces.getter(v6);
  v9 = sub_1001F2108();
  v10 = StringProtocol.trimmingCharacters(in:)(v8, &type metadata for String, v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  return v10;
}

void sub_1002689E0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  double v12;
  id v13;
  void *Strong;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  int v24;
  id v25;
  _QWORD v26[3];
  char v27;
  double v28;

  v3 = v2;
  if (a2)
  {
    v5 = sub_100268904(a1, a2);
    v7 = v6;
    v8 = swift_bridgeObjectRelease(a2);
    if (v7)
    {
      v28 = 0.0;
      __chkstk_darwin(v8);
      if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v5 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain(v7);
        _StringGuts._slowWithCString<A>(_:)(&v27, sub_1002699D0);
        swift_bridgeObjectRelease(v7);
        if ((v27 & 1) == 0)
          goto LABEL_21;
      }
      else
      {
        if ((v7 & 0x2000000000000000) == 0)
        {
          if ((v5 & 0x1000000000000000) != 0)
          {
            v9 = (v7 & 0xFFFFFFFFFFFFFFFLL) + 32;
            swift_bridgeObjectRetain(v7);
          }
          else
          {
            v9 = _StringObject.sharedUTF8.getter(v5, v7);
            swift_bridgeObjectRetain(v7);
            if (!v9)
            {
              v10 = 0;
LABEL_9:
              sub_1002699D0(v10, (BOOL *)v26);
              v11 = v26[0];
              swift_bridgeObjectRelease(v7);
              if ((v11 & 1) == 0)
                goto LABEL_21;
              goto LABEL_10;
            }
          }
          v10 = (_BYTE *)v9;
          goto LABEL_9;
        }
        v26[0] = v5;
        v26[1] = v7 & 0xFFFFFFFFFFFFFFLL;
        if (v5 <= 0x20u && ((1 << v5) & 0x100003E01) != 0)
        {
          swift_bridgeObjectRetain(v7);
LABEL_20:
          swift_bridgeObjectRelease(v7);
          goto LABEL_21;
        }
        swift_bridgeObjectRetain(v7);
        v23 = (unsigned __int8 *)_swift_stdlib_strtod_clocale(v26, &v28);
        if (!v23)
          goto LABEL_20;
        v24 = *v23;
        swift_bridgeObjectRelease(v7);
        if (v24)
          goto LABEL_21;
      }
LABEL_10:
      v12 = v28;
      if (v28 >= 0.0)
      {
        swift_bridgeObjectRelease(v7);
        v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        NSUserDefaults.priceTrackerDealAbsoluteThresholdOverride.setter(*(_QWORD *)&v12, 0);

        Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
        if (Strong)
        {
          v15 = Strong;
          v16 = objc_msgSend(Strong, "tableView");

          if (v16)
          {
            objc_msgSend(v16, "reloadData");

            return;
          }
LABEL_31:
          __break(1u);
          return;
        }
        return;
      }
LABEL_21:
      v20 = swift_allocObject(&unk_1008F7928, 24, 7);
      *(_QWORD *)(v20 + 16) = v3;
      v21 = swift_allocObject(&unk_1008F7950, 32, 7);
      *(_QWORD *)(v21 + 16) = sub_100269A64;
      *(_QWORD *)(v21 + 24) = v20;
      v22 = v3;
      sub_1002683C4(v5, (void *)v7, (uint64_t)sub_100258E34, v21);
      swift_release(v21);
      swift_bridgeObjectRelease(v7);
      return;
    }
  }
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.priceTrackerDealAbsoluteThresholdOverride.setter(0, 1);

  v18 = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
  if (v18)
  {
    v19 = v18;
    v25 = objc_msgSend(v18, "tableView");

    if (v25)
    {
      objc_msgSend(v25, "reloadData");

      return;
    }
    __break(1u);
    goto LABEL_31;
  }
}

double sub_100268D68(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;
  double result;

  v6 = swift_allocObject(&unk_1008F7978, 24, 7);
  *(_QWORD *)(v6 + 16) = a3;
  v7 = a3;
  sub_100267E98(0xD000000000000017, 0x80000001007BA1B0, 0xD0000000000000D0, 0x80000001007BA1D0, 8, a1, a2, (uint64_t)sub_1002699EC, v6);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_100268E18(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  double v12;
  id v13;
  void *Strong;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  int v24;
  id v25;
  _QWORD v26[3];
  char v27;
  double v28;

  v3 = v2;
  if (a2)
  {
    v5 = sub_100268904(a1, a2);
    v7 = v6;
    v8 = swift_bridgeObjectRelease(a2);
    if (v7)
    {
      v28 = 0.0;
      __chkstk_darwin(v8);
      if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v5 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain(v7);
        _StringGuts._slowWithCString<A>(_:)(&v27, sub_1002699D0);
        swift_bridgeObjectRelease(v7);
        if ((v27 & 1) == 0)
          goto LABEL_21;
      }
      else
      {
        if ((v7 & 0x2000000000000000) == 0)
        {
          if ((v5 & 0x1000000000000000) != 0)
          {
            v9 = (v7 & 0xFFFFFFFFFFFFFFFLL) + 32;
            swift_bridgeObjectRetain(v7);
          }
          else
          {
            v9 = _StringObject.sharedUTF8.getter(v5, v7);
            swift_bridgeObjectRetain(v7);
            if (!v9)
            {
              v10 = 0;
LABEL_9:
              sub_1002699D0(v10, (BOOL *)v26);
              v11 = v26[0];
              swift_bridgeObjectRelease(v7);
              if ((v11 & 1) == 0)
                goto LABEL_21;
              goto LABEL_10;
            }
          }
          v10 = (_BYTE *)v9;
          goto LABEL_9;
        }
        v26[0] = v5;
        v26[1] = v7 & 0xFFFFFFFFFFFFFFLL;
        if (v5 <= 0x20u && ((1 << v5) & 0x100003E01) != 0)
        {
          swift_bridgeObjectRetain(v7);
LABEL_20:
          swift_bridgeObjectRelease(v7);
          goto LABEL_21;
        }
        swift_bridgeObjectRetain(v7);
        v23 = (unsigned __int8 *)_swift_stdlib_strtod_clocale(v26, &v28);
        if (!v23)
          goto LABEL_20;
        v24 = *v23;
        swift_bridgeObjectRelease(v7);
        if (v24)
          goto LABEL_21;
      }
LABEL_10:
      v12 = v28;
      if (v28 >= 0.0)
      {
        swift_bridgeObjectRelease(v7);
        v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        NSUserDefaults.priceTrackerDealRelativeThresholdOverride.setter(*(_QWORD *)&v12, 0);

        Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
        if (Strong)
        {
          v15 = Strong;
          v16 = objc_msgSend(Strong, "tableView");

          if (v16)
          {
            objc_msgSend(v16, "reloadData");

            return;
          }
LABEL_31:
          __break(1u);
          return;
        }
        return;
      }
LABEL_21:
      v20 = swift_allocObject(&unk_1008F7888, 24, 7);
      *(_QWORD *)(v20 + 16) = v3;
      v21 = swift_allocObject(&unk_1008F78B0, 32, 7);
      *(_QWORD *)(v21 + 16) = sub_1002699E4;
      *(_QWORD *)(v21 + 24) = v20;
      v22 = v3;
      sub_1002683C4(v5, (void *)v7, (uint64_t)sub_100258E34, v21);
      swift_release(v21);
      swift_bridgeObjectRelease(v7);
      return;
    }
  }
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.priceTrackerDealRelativeThresholdOverride.setter(0, 1);

  v18 = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
  if (v18)
  {
    v19 = v18;
    v25 = objc_msgSend(v18, "tableView");

    if (v25)
    {
      objc_msgSend(v25, "reloadData");

      return;
    }
    __break(1u);
    goto LABEL_31;
  }
}

double sub_1002691A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;
  double result;

  v6 = swift_allocObject(&unk_1008F78D8, 24, 7);
  *(_QWORD *)(v6 + 16) = a3;
  v7 = a3;
  sub_100267E98(0xD000000000000017, 0x80000001007BA0C0, 0xD0000000000000CELL, 0x80000001007BA0E0, 8, a1, a2, (uint64_t)sub_100269934, v6);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_100269250(uint64_t a1, uint64_t a2)
{
  return sub_100269A90(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1002692E8);
}

uint64_t sub_10026925C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100269280(void *a1)
{
  uint64_t *v1;

  sub_1002681AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10026928C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002692B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002692DC(uint64_t a1)
{
  uint64_t v1;

  sub_100268238(a1, *(void (**)(id, unint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1002692E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;
  void *Strong;
  void *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  char v37;
  id v38;
  _QWORD v39[3];

  v3 = v2;
  if (!a2 || (v5 = sub_100268904(a1, a2), v7 = v6, swift_bridgeObjectRelease(a2), !v7))
  {
    v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    NSUserDefaults.priceTrackerCardLimitOverride.setter(0, 1);

    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
    if (!Strong)
      return;
    v17 = Strong;
    v38 = objc_msgSend(Strong, "tableView");

    if (v38)
    {
      objc_msgSend(v38, "reloadData");

      return;
    }
    goto LABEL_66;
  }
  v8 = HIBYTE(v7) & 0xF;
  v9 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v10 = HIBYTE(v7) & 0xF;
  else
    v10 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v10)
    goto LABEL_44;
  if ((v7 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v7);
    v12 = sub_100327700(v5, v7, 10);
    v14 = v37;
    swift_bridgeObjectRelease(v7);
    goto LABEL_39;
  }
  if ((v7 & 0x2000000000000000) != 0)
  {
    v39[0] = v5;
    v39[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    if (v5 == 43)
    {
      if (v8)
      {
        if (v8 != 1 && (BYTE1(v5) - 48) <= 9u)
        {
          v12 = (BYTE1(v5) - 48);
          if (v8 == 2)
            goto LABEL_38;
          if ((BYTE2(v5) - 48) <= 9u)
          {
            v12 = 10 * (BYTE1(v5) - 48) + (BYTE2(v5) - 48);
            v18 = v8 - 3;
            if (v18)
            {
              v19 = (unsigned __int8 *)v39 + 3;
              while (1)
              {
                v20 = *v19 - 48;
                if (v20 > 9)
                  goto LABEL_36;
                v21 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_36;
                v12 = v21 + v20;
                if (__OFADD__(v21, v20))
                  goto LABEL_36;
                v14 = 0;
                ++v19;
                if (!--v18)
                  goto LABEL_39;
              }
            }
            goto LABEL_38;
          }
        }
        goto LABEL_36;
      }
    }
    else
    {
      if (v5 != 45)
      {
        if (v8 && (v5 - 48) <= 9u)
        {
          v12 = (v5 - 48);
          if (v8 == 1)
            goto LABEL_38;
          if ((BYTE1(v5) - 48) <= 9u)
          {
            v12 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
            v29 = v8 - 2;
            if (v29)
            {
              v30 = (unsigned __int8 *)v39 + 2;
              while (1)
              {
                v31 = *v30 - 48;
                if (v31 > 9)
                  goto LABEL_36;
                v32 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_36;
                v12 = v32 + v31;
                if (__OFADD__(v32, v31))
                  goto LABEL_36;
                v14 = 0;
                ++v30;
                if (!--v29)
                  goto LABEL_39;
              }
            }
            goto LABEL_38;
          }
        }
LABEL_36:
        v12 = 0;
        v14 = 1;
        goto LABEL_39;
      }
      if (v8)
      {
        if (v8 != 1 && (BYTE1(v5) - 48) <= 9u)
        {
          if (v8 == 2)
          {
            v14 = 0;
            v12 = -(uint64_t)(BYTE1(v5) - 48);
            goto LABEL_39;
          }
          if ((BYTE2(v5) - 48) <= 9u)
          {
            v12 = -10 * (BYTE1(v5) - 48) - (BYTE2(v5) - 48);
            v33 = v8 - 3;
            if (v33)
            {
              v34 = (unsigned __int8 *)v39 + 3;
              while (1)
              {
                v35 = *v34 - 48;
                if (v35 > 9)
                  goto LABEL_36;
                v36 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_36;
                v12 = v36 - v35;
                if (__OFSUB__(v36, v35))
                  goto LABEL_36;
                v14 = 0;
                ++v34;
                if (!--v33)
                  goto LABEL_39;
              }
            }
LABEL_38:
            v14 = 0;
            goto LABEL_39;
          }
        }
        goto LABEL_36;
      }
      __break(1u);
    }
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    return;
  }
  if ((v5 & 0x1000000000000000) != 0)
    v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v11 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v5, v7);
  v12 = (uint64_t)sub_1003276D8(v11, v9, 10);
  v14 = v13 & 1;
LABEL_39:
  if ((v14 & 1) != 0 || v12 < 0)
  {
LABEL_44:
    v26 = swift_allocObject(&unk_1008F7798, 24, 7);
    *(_QWORD *)(v26 + 16) = v3;
    v27 = swift_allocObject(&unk_1008F77C0, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_1002698D8;
    *(_QWORD *)(v27 + 24) = v26;
    v28 = v3;
    sub_1002683C4(v5, (void *)v7, (uint64_t)sub_10004DE04, v27);
    swift_release(v27);
    swift_bridgeObjectRelease(v7);
    return;
  }
  swift_bridgeObjectRelease(v7);
  v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.priceTrackerCardLimitOverride.setter(v12, 0);

  v23 = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___DebugViewControllerPriceTracking_owner]);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, "tableView");

    if (v25)
    {
      objc_msgSend(v25, "reloadData");

      return;
    }
    goto LABEL_67;
  }
}

double sub_100269778(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;
  double result;

  v6 = swift_allocObject(&unk_1008F7838, 24, 7);
  *(_QWORD *)(v6 + 16) = a3;
  v7 = a3;
  sub_100267E98(0xD000000000000014, 0x80000001007B9FA0, 0xD0000000000000A7, 0x80000001007B9FC0, 4, a1, a2, (uint64_t)sub_100269250, v6);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_100269828(char a1, void *a2, uint64_t a3)
{
  id v4;
  char v5;
  void *v6;

  v6 = a2;
  v5 = a1;
  v4 = a2;
  swift_setAtReferenceWritableKeyPath(&v6, a3, &v5);

}

_BYTE *sub_100269870@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

double sub_1002698D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100269778(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002698E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10026990C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100269934(uint64_t a1, uint64_t a2)
{
  return sub_100269A90(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_100268E18);
}

uint64_t sub_100269940(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

_QWORD *sub_100269994@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

_BYTE *sub_1002699D0@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1002699F8(a1, a2);
}

double sub_1002699E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002691A0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002699EC(uint64_t a1, uint64_t a2)
{
  return sub_100269A90(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1002689E0);
}

_BYTE *sub_1002699F8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

double sub_100269A64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100268D68(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100269A6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100269A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain(a2);
  return a3(a1, a2);
}

void sub_100269AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002687F8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100269AE0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10005EE1C(result, a2);
  return result;
}

uint64_t sub_100269AF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100269B20(char a1)
{
  uint64_t v1;

  sub_100269828(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t *sub_100269BD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  __int128 v61;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for UserInterfaceSizeClass(0);
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v13 = a1;
      v14 = v7;
      v15 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v13 = a1;
      v14 = v7;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    v16 = a3[5];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v16, v7) == 1)
    {
      v19 = type metadata accessor for UserInterfaceSizeClass(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v23 = v17;
      v24 = v7;
      v25 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v23 = v17;
      v24 = v7;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
    v26 = a3[6];
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
      v31 = v27;
      v32 = v29;
      v33 = 1;
    }
    else
    {
      v34 = *v28;
      *v27 = *v28;
      swift_retain(v34);
      v31 = v27;
      v32 = v29;
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v32, v33);
    v35 = a3[7];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(_QWORD *)v37;
    v39 = v37[8];
    sub_1001F2508(*(_QWORD *)v37, v39);
    *(_QWORD *)v36 = v38;
    v36[8] = v39;
    v40 = a3[8];
    v41 = (uint64_t *)((char *)a1 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
      v45 = 1;
    }
    else
    {
      v46 = *v42;
      *v41 = *v42;
      swift_retain(v46);
      v45 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v45);
    v47 = a3[9];
    v48 = a3[10];
    v49 = (uint64_t *)((char *)a1 + v47);
    v50 = (char *)a2 + v47;
    v52 = *(void **)v50;
    v51 = *((_QWORD *)v50 + 1);
    *v49 = v52;
    v49[1] = v51;
    v53 = (char *)a1 + v48;
    v54 = (char *)a2 + v48;
    v55 = v52;
    v56 = sub_10004CFD4(&qword_1009D57E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v53, v54, v56);
    v57 = a3[11];
    v58 = a3[12];
    v59 = (_OWORD *)((char *)a1 + v57);
    v60 = (_OWORD *)((char *)a2 + v57);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)a1 + v58, (char *)a2 + v58) + 8) = *(uint64_t *)((char *)a2 + v58 + 8);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  return a1;
}

uint64_t sub_100269F60(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v4 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v7 = (_QWORD *)((char *)a1 + a2[5]);
  if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)((char *)a1 + a2[6]);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  sub_1001F2564(*(_QWORD *)((char *)a1 + a2[7]), *((_BYTE *)a1 + a2[7] + 8));
  v13 = (_QWORD *)((char *)a1 + a2[8]);
  v14 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }

  v16 = (char *)a1 + a2[10];
  v17 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  return swift_unknownObjectWeakDestroy((char *)a1 + a2[12]);
}

uint64_t *sub_10026A148(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  __int128 v59;

  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a1;
    v12 = v6;
    v13 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    swift_retain(v10);
    v11 = a1;
    v12 = v6;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v14 = a3[5];
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  if (swift_getEnumCaseMultiPayload((char *)a2 + v14, v6) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v21 = v15;
    v22 = v6;
    v23 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v21 = v15;
    v22 = v6;
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v21, v22, v23);
  v24 = a3[6];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  v27 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
    v29 = v25;
    v30 = v27;
    v31 = 1;
  }
  else
  {
    v32 = *v26;
    *v25 = *v26;
    swift_retain(v32);
    v29 = v25;
    v30 = v27;
    v31 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v30, v31);
  v33 = a3[7];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = v35[8];
  sub_1001F2508(*(_QWORD *)v35, v37);
  *(_QWORD *)v34 = v36;
  v34[8] = v37;
  v38 = a3[8];
  v39 = (uint64_t *)((char *)a1 + v38);
  v40 = (uint64_t *)((char *)a2 + v38);
  v41 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
  {
    v42 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v39, v40, v42);
    v43 = 1;
  }
  else
  {
    v44 = *v40;
    *v39 = *v40;
    swift_retain(v44);
    v43 = 0;
  }
  swift_storeEnumTagMultiPayload(v39, v41, v43);
  v45 = a3[9];
  v46 = a3[10];
  v47 = (uint64_t *)((char *)a1 + v45);
  v48 = (char *)a2 + v45;
  v50 = *(void **)v48;
  v49 = *((_QWORD *)v48 + 1);
  *v47 = v50;
  v47[1] = v49;
  v51 = (char *)a1 + v46;
  v52 = (char *)a2 + v46;
  v53 = v50;
  v54 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
  v55 = a3[11];
  v56 = a3[12];
  v57 = (_OWORD *)((char *)a1 + v55);
  v58 = (_OWORD *)((char *)a2 + v55);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)a1 + v56, (char *)a2 + v56) + 8) = *(uint64_t *)((char *)a2 + v56 + 8);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t *sub_10026A4A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D26B8);
    v6 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      swift_retain(v10);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    v14 = a3[5];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    sub_100010960((uint64_t)a1 + v14, &qword_1009D26B8);
    v17 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for UserInterfaceSizeClass(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        v20 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v19 + 16))(v15, v16, v18);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      v22 = v15;
      v23 = v17;
      v24 = 1;
    }
    else
    {
      v21 = *v16;
      *v15 = *v16;
      swift_retain(v21);
      v22 = v15;
      v23 = v17;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
    v25 = a3[6];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    sub_100010960((uint64_t)a1 + v25, (uint64_t *)&unk_1009EE650);
    v28 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = v26;
      v31 = v28;
      v32 = 1;
    }
    else
    {
      v33 = *v27;
      *v26 = *v27;
      swift_retain(v33);
      v30 = v26;
      v31 = v28;
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v31, v32);
  }
  v34 = a3[7];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)v36;
  v38 = v36[8];
  sub_1001F2508(*(_QWORD *)v36, v38);
  v39 = *(_QWORD *)v35;
  v40 = v35[8];
  *(_QWORD *)v35 = v37;
  v35[8] = v38;
  sub_1001F2564(v39, v40);
  if (a1 != a2)
  {
    v41 = a3[8];
    v42 = (uint64_t *)((char *)a1 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    sub_100010960((uint64_t)a1 + v41, &qword_1009D8790);
    v44 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
    {
      v45 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
      v46 = 1;
    }
    else
    {
      v47 = *v43;
      *v42 = *v43;
      swift_retain(v47);
      v46 = 0;
    }
    swift_storeEnumTagMultiPayload(v42, v44, v46);
  }
  v48 = a3[9];
  v49 = (uint64_t *)((char *)a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = *(void **)((char *)a1 + v48);
  v52 = *(void **)((char *)a2 + v48);
  *v49 = v52;
  v53 = v52;

  v49[1] = *((_QWORD *)v50 + 1);
  v54 = a3[10];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
  v58 = a3[11];
  v59 = (uint64_t *)((char *)a1 + v58);
  v60 = (uint64_t *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  v59[2] = v60[2];
  v59[3] = v60[3];
  v61 = a3[12];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign((char *)a1 + v61, (char *)a2 + v61) + 8) = *(uint64_t *)((char *)a2 + v61 + 8);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  return a1;
}

char *sub_10026A8A4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;

  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (swift_getEnumCaseMultiPayload(&a2[v10], v6) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload(v11, v6, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = &a1[v22];
  v26 = &a2[v22];
  v27 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
  {
    v28 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload(v25, v27, 1);
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v29 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  v33 = a3[11];
  v34 = a3[12];
  v35 = &a1[v33];
  v36 = &a2[v33];
  v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v37;
  *(_QWORD *)(swift_unknownObjectWeakTakeInit(&a1[v34], &a2[v34]) + 8) = *(_QWORD *)&a2[v34 + 8];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  return a1;
}

char *sub_10026ABE0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D26B8);
    v6 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_100010960((uint64_t)&a1[v10], &qword_1009D26B8);
    v13 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v17 = a3[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    sub_100010960((uint64_t)&a1[v17], (uint64_t *)&unk_1009EE650);
    v20 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_QWORD *)v24;
  LOBYTE(v24) = v24[8];
  v26 = *(_QWORD *)v23;
  v27 = v23[8];
  *(_QWORD *)v23 = v25;
  v23[8] = (char)v24;
  sub_1001F2564(v26, v27);
  if (a1 != a2)
  {
    v28 = a3[8];
    v29 = &a1[v28];
    v30 = &a2[v28];
    sub_100010960((uint64_t)&a1[v28], &qword_1009D8790);
    v31 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload(v29, v31, 1);
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
  }
  v33 = a3[9];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *(void **)&a1[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;

  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  v37 = a3[10];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = a3[11];
  v42 = a3[12];
  v43 = &a1[v41];
  v44 = &a2[v41];
  v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign(&a1[v42], &a2[v42]) + 8) = *(_QWORD *)&a2[v42 + 8];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  return a1;
}

uint64_t sub_10026AFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026AFB4);
}

uint64_t sub_10026AFB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v6 = sub_10004CFD4(&qword_1009D26A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10004CFD4(&qword_1009D8240);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[6];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_10004CFD4(&qword_1009D39F8);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[8];
    goto LABEL_9;
  }
  v15 = sub_10004CFD4(&qword_1009D57E8);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[10];
    goto LABEL_9;
  }
  v17 = a1 + a3[12];
  v18 = *(_QWORD *)(v17 + 8);
  v19 = *(_DWORD *)v17 & 0x7FFFFFFF;
  if ((v18 & 0xF000000000000007) != 0)
    return (v19 + 1);
  else
    return 0;
}

uint64_t sub_10026B0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026B0C4);
}

uint64_t sub_10026B0C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  v8 = sub_10004CFD4(&qword_1009D26A0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_10004CFD4(&qword_1009D8240);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[6];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_10004CFD4(&qword_1009D39F8);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[8];
    goto LABEL_9;
  }
  result = sub_10004CFD4(&qword_1009D57E8);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[10];
    goto LABEL_9;
  }
  v18 = (_QWORD *)(a1 + a4[12]);
  *v18 = (a2 - 1);
  v18[1] = 1;
  return result;
}

uint64_t type metadata accessor for REMenuButtonView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D5848;
  if (!qword_1009D5848)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for REMenuButtonView);
  return result;
}

void sub_10026B204(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[10];

  sub_100233378(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = v10[0];
    sub_10026B338(319, qword_1009D82C0, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      v10[3] = "\t";
      sub_10026B338(319, (unint64_t *)&qword_1009D3A88, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        v10[5] = &unk_1007155A0;
        sub_10026B338(319, (unint64_t *)&unk_1009D5858, type metadata accessor for BookReaderViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          v10[7] = &unk_1007155B8;
          v10[8] = &unk_1007155D0;
          v10[9] = (char *)&value witness table for Builtin.Int64 + 64;
          swift_initStructMetadata(a1, 256, 10, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_10026B338(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_10026B390(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086949C, 1);
}

void sub_10026B3A0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_10026B3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  _QWORD v29[3];

  v1 = v0;
  v2 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v29[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMenuButtonView(0);
  v6 = sub_10004CFD4(&qword_1009D57E8);
  Bindable.wrappedValue.getter(v29, v6);
  v7 = v29[0];
  KeyPath = swift_getKeyPath(&unk_1007156B0);
  v29[0] = v7;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v29, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
  swift_beginAccess(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v29, 0, 0);
  sub_10002CD84(v10, (uint64_t)v4, type metadata accessor for BookReaderChromeState);
  swift_release(v7);
  LODWORD(v10) = v4[*(int *)(v2 + 60)];
  sub_10002C8F0((uint64_t)v4, type metadata accessor for BookReaderChromeState);
  if ((_DWORD)v10 == 1)
  {
    v11 = sub_1005B0900(0, 1, 1, _swiftEmptyArrayStorage);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_1005B0900((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    *((_BYTE *)v11 + v13 + 32) = 0;
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v15 = objc_msgSend(v14, "userInterfaceIdiom");

  if (!v15)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1005B0900(0, v11[2] + 1, 1, v11);
    v17 = v11[2];
    v16 = v11[3];
    if (v17 >= v16 >> 1)
      v11 = sub_1005B0900((_QWORD *)(v16 > 1), v17 + 1, 1, v11);
    v11[2] = v17 + 1;
    *((_BYTE *)v11 + v17 + 32) = 1;
  }
  v18 = v1 + *(int *)(v5 + 36);
  v19 = *(void **)v18;
  if (*(_QWORD *)v18)
  {
    v20 = swift_getKeyPath(&unk_100715638);
    v21 = swift_getKeyPath(&unk_100715660);
    v22 = v19;
    static Published.subscript.getter((uint64_t *)((char *)&v28 + 7), v22, v20, v21);

    swift_release(v20);
    swift_release(v21);
    if ((v28 & 0x100000000000000) != 0)
      return sub_10026B6C0((uint64_t)v11);
    return (uint64_t)v11;
  }
  else
  {
    v24 = *(_QWORD *)(v18 + 8);
    v25 = type metadata accessor for ChromeStyle(0);
    v26 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v24, v25, v26, v27);
    __break(1u);
  }
  return result;
}

uint64_t sub_10026B6C0(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  char v7;
  char v8;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 31; ; --i)
  {
    if (v3 == i - 32)
      goto LABEL_5;
    v6 = v1[2];
    if (v3 >= v6)
      break;
    if (i - 32 >= v6)
      goto LABEL_12;
    v7 = *((_BYTE *)v1 + v3 + 32);
    v8 = *((_BYTE *)v1 + i);
    result = swift_isUniquelyReferenced_nonNull_native(v1);
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1002C35AC(v1);
      v1 = (_QWORD *)result;
    }
    *((_BYTE *)v1 + v3 + 32) = v8;
    *((_BYTE *)v1 + i) = v7;
LABEL_5:
    if (v4 == ++v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10026B778@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;

  v2 = v1;
  v4 = v1 + *(int *)(type metadata accessor for REMenuButtonView(0) + 36);
  v5 = *(void **)v4;
  if (!*(_QWORD *)v4)
    goto LABEL_11;
  KeyPath = swift_getKeyPath(&unk_100715638);
  v7 = swift_getKeyPath(&unk_100715660);
  v8 = v5;
  static Published.subscript.getter((uint64_t *)((char *)&v47 + 1), v8, KeyPath, v7);

  swift_release(KeyPath);
  swift_release(v7);
  v9 = BYTE1(v47);
  v10 = swift_getKeyPath(&unk_100715638);
  v11 = swift_getKeyPath(&unk_100715660);
  v12 = v8;
  static Published.subscript.getter(&v47, v12, v10, v11);

  swift_release(v10);
  swift_release(v11);
  v13 = v47;
  v14 = sub_10004CFD4(&qword_1009D57E8);
  Bindable.wrappedValue.getter(&v46, v14);
  v15 = v46;
  v16 = *(_QWORD *)(v46 + 40);
  v17 = *(_QWORD *)(v46 + 56);
  swift_unknownObjectRetain(v16);
  swift_release(v15);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 88))(ObjectType, v17);
  v20 = v19;
  v22 = v21;
  swift_unknownObjectRelease(v16);
  v23 = *(void **)v4;
  if (!*(_QWORD *)v4)
    goto LABEL_11;
  v24 = swift_getKeyPath(&unk_100715638);
  v25 = swift_getKeyPath(&unk_100715660);
  v26 = v23;
  static Published.subscript.getter(&v45, v26, v24, v25);

  swift_release(v24);
  swift_release(v25);
  v27 = *(void **)v4;
  if (*(_QWORD *)v4)
  {
    v28 = v45;
    if (v45)
      v29 = 0;
    else
      v29 = v20;
    v30 = v9 ^ 1;
    v31 = swift_getKeyPath(&unk_100715638);
    v32 = swift_getKeyPath(&unk_100715660);
    v33 = v27;
    static Published.subscript.getter(&v44, v33, v31, v32);

    swift_release(v31);
    swift_release(v32);
    v35 = v44;
    if (v44)
      v36 = v22;
    else
      v36 = 0;
    *a1 = static Alignment.center.getter(v34);
    a1[1] = v37;
    v38 = sub_10004CFD4(&qword_1009D58A8);
    return sub_10026BA40(0, v30, 0, v13, v2, v29, v28, v36, (uint64_t)a1 + *(int *)(v38 + 44), 0.0, v35 ^ 1u);
  }
  else
  {
LABEL_11:
    v40 = *(_QWORD *)(v4 + 8);
    v41 = type metadata accessor for ChromeStyle(0);
    v42 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v40, v41, v42, v43);
    __break(1u);
  }
  return result;
}

uint64_t sub_10026BA40@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, unsigned __int8 a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  double *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  double *v49;
  char *v50;
  char *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v71[12];
  int v72;
  uint64_t v73;
  int v74;
  _BYTE *v75;
  uint64_t v76;
  int v77;
  int v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;

  v80 = a8;
  v76 = a6;
  v74 = a4;
  v73 = a3;
  v72 = a2;
  v86 = a9;
  v77 = a11;
  v78 = a7;
  v14 = type metadata accessor for REMenuButtonView(0);
  v15 = *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64);
  v81 = *(_QWORD *)(v14 - 8);
  v82 = v15;
  __chkstk_darwin(v14);
  v79 = &v71[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = (int *)sub_10004CFD4(&qword_1009D58B0);
  v18 = __chkstk_darwin(v17);
  v20 = &v71[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v84 = &v71[-v21];
  v22 = sub_10004CFD4(&qword_1009D58B8);
  v23 = __chkstk_darwin(v22);
  v83 = &v71[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v85 = &v71[-v25];
  v26 = (int *)sub_10004CFD4(&qword_1009D58C0);
  v27 = __chkstk_darwin(v26);
  v29 = &v71[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v31 = &v71[-v30];
  v32 = sub_10004CFD4(&qword_1009D58C8);
  v33 = __chkstk_darwin(v32);
  v35 = &v71[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v33);
  v37 = &v71[-v36];
  v75 = &v71[-v36];
  *v29 = swift_getKeyPath(&unk_100715680);
  v38 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  swift_storeEnumTagMultiPayload(v29, v38, 0);
  v39 = (char *)v29 + v26[10];
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  v40 = (char *)v29 + v26[14];
  *(_QWORD *)v40 = a1;
  v40[8] = v72 & 1;
  v41 = (double *)((char *)v29 + v26[11]);
  *v41 = a10;
  *((_BYTE *)v41 + 8) = 0;
  v42 = (char *)v29 + v26[15];
  *(_QWORD *)v42 = v73;
  v42[8] = v74 & 1;
  sub_10026C038((uint64_t)v29 + v26[9]);
  v43 = (char *)v29 + v26[12];
  *(_QWORD *)v43 = 0;
  v43[8] = 1;
  v44 = (char *)v29 + v26[13];
  *(_QWORD *)v44 = 0;
  v44[8] = 1;
  sub_100025B3C((uint64_t)v29, (uint64_t)v31, &qword_1009D58C0);
  v45 = sub_100030B34(&qword_1009D58D0, &qword_1009D58C0, (uint64_t)&unk_10070F3D8);
  View.accessibilitySortPriority(_:)(v26, v45, -2.0);
  sub_100010960((uint64_t)v31, &qword_1009D58C0);
  sub_100025B3C((uint64_t)v35, (uint64_t)v37, &qword_1009D58C8);
  *v20 = swift_getKeyPath(&unk_100715680);
  v46 = swift_storeEnumTagMultiPayload(v20, v38, 0);
  v47 = (char *)v20 + v17[10];
  *(_QWORD *)v47 = 0;
  v47[8] = 1;
  v48 = (char *)v20 + v17[14];
  *(_QWORD *)v48 = v76;
  v48[8] = v78 & 1;
  v49 = (double *)((char *)v20 + v17[11]);
  *v49 = a10;
  *((_BYTE *)v49 + 8) = 0;
  v50 = (char *)v20 + v17[15];
  *(_QWORD *)v50 = v80;
  v50[8] = v77 & 1;
  v51 = (char *)v20 + v17[9];
  *(_QWORD *)v51 = static VerticalAlignment.center.getter(v46);
  *((_QWORD *)v51 + 1) = 0;
  v51[16] = 1;
  sub_10004CFD4(&qword_1009D58D8);
  v87 = sub_10026B3AC();
  v52 = v79;
  sub_10002CD84(a5, (uint64_t)v79, type metadata accessor for REMenuButtonView);
  v53 = *(unsigned __int8 *)(v81 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = swift_allocObject(&unk_1008F7A30, v54 + v82, v53 | 7);
  sub_10002C960((uint64_t)v52, v55 + v54, type metadata accessor for REMenuButtonView);
  v56 = sub_10004CFD4(&qword_1009D58E0);
  v57 = sub_10004CFD4(&qword_1009D58E8);
  v58 = sub_100030B34(&qword_1009D58F0, &qword_1009D58E0, (uint64_t)&protocol conformance descriptor for [A]);
  v59 = sub_10026F484();
  v60 = sub_10026F54C();
  ForEach<>.init(_:content:)(&v87, sub_10026F438, v55, v56, &type metadata for ChromeItem, v57, v58, v59, v60);
  v61 = (char *)v20 + v17[12];
  *(_QWORD *)v61 = 0;
  v61[8] = 1;
  v62 = (char *)v20 + v17[13];
  *(_QWORD *)v62 = 0;
  v62[8] = 1;
  v63 = v84;
  sub_100025B3C((uint64_t)v20, (uint64_t)v84, &qword_1009D58B0);
  v64 = sub_100030B34(&qword_1009D5918, &qword_1009D58B0, (uint64_t)&unk_10070F3D8);
  v65 = (uint64_t)v83;
  View.accessibilitySortPriority(_:)(v17, v64, -1.0);
  sub_100010960((uint64_t)v63, &qword_1009D58B0);
  v66 = v85;
  sub_100025B3C(v65, (uint64_t)v85, &qword_1009D58B8);
  v67 = v75;
  sub_10000B5E4((uint64_t)v75, (uint64_t)v35, &qword_1009D58C8);
  sub_10000B5E4((uint64_t)v66, v65, &qword_1009D58B8);
  v68 = v86;
  sub_10000B5E4((uint64_t)v35, v86, &qword_1009D58C8);
  v69 = sub_10004CFD4(&qword_1009D5920);
  sub_10000B5E4(v65, v68 + *(int *)(v69 + 48), &qword_1009D58B8);
  sub_100010960((uint64_t)v66, &qword_1009D58B8);
  sub_100010960((uint64_t)v67, &qword_1009D58C8);
  sub_100010960(v65, &qword_1009D58B8);
  return sub_100010960((uint64_t)v35, &qword_1009D58C8);
}

uint64_t sub_10026C038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  int v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  double v51;
  double v52;
  double v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t ObjCClassFromMetadata;
  id v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  double v78;
  double v79;
  char v80;
  void **v81;
  void *v82;
  int v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  char *v93;
  __n128 v94;
  uint64_t v95;
  void (*v96)(char *, _QWORD, uint64_t, __n128);
  char *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  char *v105;
  __n128 v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t OpaqueTypeConformance2;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  id v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t result;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __n128 v188;
  uint64_t v189;
  void (*v190)(char *, uint64_t);
  void (*v191)(char *, char *, uint64_t);
  id v192;
  uint64_t v193;
  void (*v194)(char *, char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  _QWORD v258[2];
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  char v263[8];
  char v264[8];

  v2 = v1;
  v244 = a1;
  v243 = type metadata accessor for AccessibilityTraits(0);
  v242 = *(_QWORD *)(v243 - 8);
  __chkstk_darwin(v243);
  v241 = (char *)&v189 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = type metadata accessor for AccessibilityChildBehavior(0);
  v233 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v232 = (char *)&v189 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = type metadata accessor for AutomaticHoverEffect(0);
  v226 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin(v227);
  v225 = (char *)&v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v207);
  v212 = (uint64_t *)((char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v211 = type metadata accessor for ContentShapeKinds(0);
  v210 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v209 = (char *)&v189 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D5938);
  __chkstk_darwin(v8);
  v208 = (char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_10004CFD4(&qword_1009D5940);
  __chkstk_darwin(v215);
  v213 = (char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_10004CFD4(&qword_1009D5948);
  v216 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v214 = (char *)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = sub_10004CFD4(&qword_1009D5950);
  v219 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v218 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_10004CFD4(&qword_1009D5958);
  v223 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v221 = (char *)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = sub_10004CFD4(&qword_1009D5960);
  v14 = __chkstk_darwin(v234);
  v222 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v229 = (char *)&v189 - v17;
  v18 = __chkstk_darwin(v16);
  v230 = (char *)&v189 - v19;
  __chkstk_darwin(v18);
  v231 = (char *)&v189 - v20;
  v228 = sub_10004CFD4(&qword_1009D5968);
  __chkstk_darwin(v228);
  v238 = (uint64_t)&v189 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = sub_10004CFD4(&qword_1009D5970);
  __chkstk_darwin(v236);
  v239 = (uint64_t)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = sub_10004CFD4(&qword_1009D5978);
  __chkstk_darwin(v237);
  v240 = (uint64_t)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = type metadata accessor for ColorScheme(0);
  v204 = *(_QWORD *)(v248 - 8);
  v24 = __chkstk_darwin(v248);
  v247 = (char *)&v189 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v246 = (char *)&v189 - v26;
  v255 = type metadata accessor for ContentSizeCategory(0);
  v206 = *(_QWORD *)(v255 - 8);
  v27 = __chkstk_darwin(v255);
  v202 = (char *)&v189 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v30 = (char *)&v189 - v29;
  v254 = type metadata accessor for Locale(0);
  v203 = *(_QWORD *)(v254 - 8);
  v31 = __chkstk_darwin(v254);
  v251 = (char *)&v189 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v253 = (char *)&v189 - v33;
  v252 = type metadata accessor for String.LocalizationValue(0);
  v198 = *(_QWORD *)(v252 - 8);
  v34 = __chkstk_darwin(v252);
  v249 = (char *)&v189 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v250 = (char *)&v189 - v36;
  v37 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v37);
  v39 = (char *)&v189 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for REMenuButtonView(0);
  v41 = v1 + *(int *)(v40 + 40);
  v42 = sub_10004CFD4(&qword_1009D57E8);
  v199 = v41;
  Bindable.wrappedValue.getter(&v259, v42);
  v43 = v259;
  KeyPath = swift_getKeyPath(&unk_1007156B0);
  v259 = v43;
  v196 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v259, KeyPath, v196);
  swift_release(KeyPath);
  v45 = v43 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
  swift_beginAccess(v43 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v264, 0, 0);
  sub_10002CD84(v45, (uint64_t)v39, type metadata accessor for BookReaderChromeState);
  swift_release(v43);
  v201 = v37;
  v46 = v39[*(int *)(v37 + 44)];
  sub_10002C8F0((uint64_t)v39, type metadata accessor for BookReaderChromeState);
  v195 = v40;
  v47 = *(int *)(v40 + 36);
  v257 = v2;
  v245 = v2 + v47;
  v48 = *(void **)(v2 + v47);
  if (!v48)
    goto LABEL_37;
  v49 = qword_1009CE598;
  v50 = v48;
  if (v49 != -1)
    swift_once(&qword_1009CE598, sub_100478F10);
  v197 = v42;
  v200 = v30;
  v256 = v46;
  v51 = *(double *)&static REConstants.menuButtonTapTargetSize;
  if (qword_1009CE628 != -1)
    swift_once(&qword_1009CE628, sub_100479520);
  v52 = *(double *)&static REConstants.floatingButtonHeight;

  if ((v51 - v52) * 0.5 < 0.0)
    v53 = 0.0;
  else
    v53 = (v51 - v52) * 0.5;
  v54 = v250;
  v55 = String.LocalizationValue.init(stringLiteral:)(1970169165, 0xE400000000000000);
  v56 = v253;
  static Locale.current.getter(v55);
  v57 = v198;
  v58 = v249;
  v59 = v252;
  v194 = *(void (**)(char *, char *, uint64_t))(v198 + 16);
  v194(v249, v54, v252);
  v60 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v60);
  v192 = (id)objc_opt_self(NSBundle);
  v193 = ObjCClassFromMetadata;
  v62 = objc_msgSend(v192, "bundleForClass:", ObjCClassFromMetadata);
  v63 = v203;
  v64 = v251;
  v65 = v254;
  v191 = *(void (**)(char *, char *, uint64_t))(v203 + 16);
  v191(v251, v56, v254);
  v205 = String.init(localized:table:bundle:locale:comment:)(v58, 0, 0, v62, v64, "Accessibility string for a menu button", 38, 2);
  v67 = v66;
  v68 = *(void (**)(char *, uint64_t))(v63 + 8);
  v68(v56, v65);
  v198 = *(_QWORD *)(v57 + 8);
  ((void (*)(char *, uint64_t))v198)(v54, v59);
  v69 = (uint64_t)v200;
  sub_100667DF8((uint64_t)v200);
  v70 = v206;
  v71 = (uint64_t)v202;
  v72 = v255;
  (*(void (**)(char *, _QWORD, uint64_t))(v206 + 104))(v202, enum case for ContentSizeCategory.large(_:), v255);
  LODWORD(v203) = sub_1003438B8(v69, v71);
  v73 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  v73(v71, v72);
  v73(v69, v72);
  Bindable.wrappedValue.getter(&v259, v197);
  v74 = v259;
  v75 = swift_getKeyPath(&unk_1007156B0);
  v259 = v74;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v259, v75, v196);
  swift_release(v75);
  v76 = v74 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
  swift_beginAccess(v74 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v263, 0, 0);
  sub_10002CD84(v76, (uint64_t)v39, type metadata accessor for BookReaderChromeState);
  swift_release(v74);
  v77 = v39[*(int *)(v201 + 44) + 1];
  sub_10002C8F0((uint64_t)v39, type metadata accessor for BookReaderChromeState);
  if (qword_1009CE5B8 != -1)
    swift_once(&qword_1009CE5B8, sub_10047909C);
  v78 = *(double *)&qword_100A1E9A0;
  v79 = *(double *)&static REConstants.floatingButtonHeight;
  type metadata accessor for DebugOptions(0);
  v80 = static DebugOptions.fullyFadeChrome.getter();
  v81 = (void **)v245;
  v82 = *(void **)v245;
  if ((v80 & 1) != 0)
  {
    v83 = v256;
    if (v82)
    {
      v84 = swift_getKeyPath(&unk_100715798);
      v85 = &unk_1007157C0;
      goto LABEL_16;
    }
LABEL_39:
    v185 = *(_QWORD *)(v245 + 8);
    goto LABEL_40;
  }
  v83 = v256;
  if (!v82)
    goto LABEL_39;
  v84 = swift_getKeyPath(&unk_1007156D8);
  v85 = &unk_100715700;
LABEL_16:
  v86 = swift_getKeyPath(v85);
  v87 = v82;
  static Published.subscript.getter(&v259, v87, v84, v86);

  swift_release(v84);
  swift_release(v86);
  v88 = v259;
  v206 = v67;
  v89 = *v81;
  if (!*v81)
  {
LABEL_37:
    v100 = v245;
LABEL_38:
    v185 = *(_QWORD *)(v100 + 8);
LABEL_40:
    v186 = type metadata accessor for ChromeStyle(0);
    v187 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v185, v186, v187, v188);
    __break(1u);
    return result;
  }
  v90 = swift_getKeyPath(&unk_100715720);
  v91 = swift_getKeyPath(&unk_100715748);
  v92 = v89;
  v93 = v246;
  static Published.subscript.getter(v246, v92, v90, v91);

  swift_release(v90);
  v94 = swift_release(v91);
  v95 = v204;
  v96 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v204 + 104);
  v97 = v247;
  v98 = v248;
  v96(v247, enum case for ColorScheme.dark(_:), v248, v94);
  LOBYTE(v90) = static ColorScheme.== infix(_:_:)(v93, v97);
  v99 = *(void (**)(char *, uint64_t))(v95 + 8);
  v99(v97, v98);
  v99(v93, v98);
  v190 = v68;
  if ((v90 & 1) == 0)
  {
    v110 = v77;
    if ((v83 & 1) != 0)
    {
      v111 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
      v112 = v111;
    }
    else
    {
      v111 = swift_retain(v88);
      v112 = v88;
    }
    v113 = v208;
    goto LABEL_30;
  }
  if ((v83 & 1) != 0)
  {
    v100 = v245;
    v101 = *(void **)v245;
    if (*(_QWORD *)v245)
    {
      v102 = swift_getKeyPath(&unk_100715720);
      v103 = swift_getKeyPath(&unk_100715748);
      v104 = v101;
      v105 = v246;
      static Published.subscript.getter(v246, v104, v102, v103);
      swift_release(v102);
      v106 = swift_release(v103);
      v107 = v247;
      v108 = v248;
      v96(v247, enum case for ColorScheme.light(_:), v248, v106);
      LOBYTE(v102) = static ColorScheme.== infix(_:_:)(v105, v107);
      v99(v107, v108);
      v99(v105, v108);
      if ((v102 & 1) != 0)
        v109 = 2711725567;
      else
        v109 = 4025480447;
      v112 = Color.init(rgbaHex:)(v109);

      goto LABEL_29;
    }
    goto LABEL_38;
  }
  v111 = swift_retain(v88);
  v112 = v88;
LABEL_29:
  v113 = v208;
  v110 = v77;
LABEL_30:
  v114 = v209;
  LODWORD(v255) = v110;
  v248 = v88;
  *v113 = static Alignment.center.getter(v111);
  v113[1] = v115;
  v116 = (uint64_t)v113 + *(int *)(sub_10004CFD4(&qword_1009D5980) + 44);
  v247 = (char *)v112;
  LODWORD(v246) = v83 ^ 1;
  v117 = sub_10026DA64(0xD000000000000016, 0x80000001007BA300, v112, v83 ^ 1u, v257, v110, v203 & 1, v116, v78 / v79, v53);
  static ContentShapeKinds.hoverEffect.getter(v117);
  if (qword_1009CE3A0 != -1)
    swift_once(&qword_1009CE3A0, sub_1003E0EF8);
  v118 = qword_100A1E828;
  v119 = v212;
  v120 = (char *)v212 + *(int *)(v207 + 20);
  v121 = enum case for RoundedCornerStyle.continuous(_:);
  v122 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 104))(v120, v121, v122);
  *v119 = v118;
  v119[1] = v118;
  v123 = v215;
  v124 = (uint64_t)v213;
  v125 = (uint64_t)&v213[*(int *)(v215 + 36)];
  sub_10002CD84((uint64_t)v119, v125, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v126 = sub_10004CFD4(&qword_1009D5148);
  v127 = v210;
  v128 = v211;
  (*(void (**)(uint64_t, char *, uint64_t))(v210 + 16))(v125 + *(int *)(v126 + 40), v114, v211);
  *(_BYTE *)(v125 + *(int *)(v126 + 36)) = 0;
  sub_10000B5E4((uint64_t)v113, v124, &qword_1009D5938);
  sub_10002C8F0((uint64_t)v119, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v114, v128);
  v129 = sub_100010960((uint64_t)v113, &qword_1009D5938);
  v130 = v225;
  static CustomHoverEffect<>.automatic.getter(v129);
  v131 = sub_10026F5A8();
  v132 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v133 = v214;
  v134 = v227;
  View.hoverEffect<A>(_:isEnabled:)(v130, 1, v123, v227, v131, v132);
  (*(void (**)(char *, uint64_t))(v226 + 8))(v130, v134);
  sub_100010960(v124, &qword_1009D5940);
  v135 = (v256 | v255) ^ 1;
  v259 = v123;
  v260 = v134;
  v261 = v131;
  v262 = v132;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v259, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v137 = v218;
  v138 = v217;
  View.hoverEffectDisabled(_:)(v135, v217, OpaqueTypeConformance2);
  v139 = (*(uint64_t (**)(char *, uint64_t))(v216 + 8))(v133, v138);
  v140 = v232;
  static AccessibilityChildBehavior.combine.getter(v139);
  v259 = v138;
  v260 = OpaqueTypeConformance2;
  v141 = swift_getOpaqueTypeConformance2(&v259, &opaque type descriptor for <<opaque return type of View.hoverEffectDisabled(_:)>>, 1);
  v142 = v221;
  v143 = v220;
  View.accessibilityElement(children:)(v140, v220, v141);
  (*(void (**)(char *, uint64_t))(v233 + 8))(v140, v235);
  (*(void (**)(char *, uint64_t))(v219 + 8))(v137, v143);
  v144 = v206;
  v259 = v205;
  v260 = v206;
  v258[0] = v143;
  v258[1] = v141;
  v145 = swift_getOpaqueTypeConformance2(v258, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v146 = sub_1001F2108();
  v147 = (uint64_t)v222;
  v148 = v224;
  View.accessibilityLabel<A>(_:)(&v259, v224, &type metadata for String, v145, v146);
  (*(void (**)(char *, uint64_t))(v223 + 8))(v142, v148);
  swift_bridgeObjectRelease(v144);
  v149 = (uint64_t)v229;
  v150 = v234;
  ModifiedContent<>.accessibilityIdentifier(_:)(0x74747542756E654DLL, 0xEA00000000006E6FLL, v234);
  sub_100010960(v147, &qword_1009D5960);
  v151 = sub_10004CFD4(&qword_1009D3B98);
  v152 = v242;
  v153 = swift_allocObject(v151, ((*(unsigned __int8 *)(v242 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80))+ *(_QWORD *)(v242 + 72), *(unsigned __int8 *)(v242 + 80) | 7);
  *(_OWORD *)(v153 + 16) = xmmword_10070CCA0;
  static AccessibilityTraits.isButton.getter();
  v259 = v153;
  v154 = sub_100008DB0(&qword_1009D3BA0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v155 = sub_10004CFD4(&qword_1009D3BA8);
  v156 = sub_100030B34(&qword_1009D3BB0, &qword_1009D3BA8, (uint64_t)&protocol conformance descriptor for [A]);
  v157 = v241;
  v158 = v155;
  v159 = v243;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v259, v158, v156, v243, v154);
  v160 = (uint64_t)v230;
  ModifiedContent<>.accessibility(addTraits:)(v157, v150);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v157, v159);
  sub_100010960(v149, &qword_1009D5960);
  v161 = (uint64_t)v231;
  v162 = (char)v246;
  ModifiedContent<>.accessibilityHidden(_:)(v246, v150);
  sub_100010960(v160, &qword_1009D5960);
  v163 = v238;
  sub_10000B5E4(v161, v238, &qword_1009D5960);
  *(_BYTE *)(v163 + *(int *)(v228 + 36)) = 0;
  sub_100010960(v161, &qword_1009D5960);
  v164 = 0;
  v165 = 0;
  if ((_DWORD)v255)
  {
    v166 = v250;
    v167 = String.LocalizationValue.init(stringLiteral:)(0x6F6F622065676150, 0xEF64656B72616D6BLL);
    v168 = v253;
    static Locale.current.getter(v167);
    v169 = v249;
    v170 = v252;
    v194(v249, v166, v252);
    v171 = objc_msgSend(v192, "bundleForClass:", v193);
    v172 = v251;
    v173 = v254;
    v191(v251, v168, v254);
    v164 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v171, v172, "Accessibility string indicating that the current page is bookmarked", 67, 2);
    v165 = v174;
    v190(v168, v173);
    ((void (*)(char *, uint64_t))v198)(v166, v170);
  }
  v175 = v239;
  sub_10000B5E4(v163, v239, &qword_1009D5968);
  v176 = (uint64_t *)(v175 + *(int *)(v236 + 36));
  *v176 = v164;
  v176[1] = v165;
  sub_100010960(v163, &qword_1009D5968);
  v177 = swift_getKeyPath(&unk_100715768);
  v178 = v240;
  sub_10000B5E4(v175, v240, &qword_1009D5970);
  v179 = v178 + *(int *)(v237 + 36);
  *(_QWORD *)v179 = v177;
  *(_BYTE *)(v179 + 8) = 0;
  sub_100010960(v175, &qword_1009D5970);
  v180 = v248;
  if (qword_1009CDDF0 != -1)
    swift_once(&qword_1009CDDF0, sub_1002CAE00);
  v181 = qword_100A1E458;
  swift_release(v247);
  swift_release(v180);
  v182 = v244;
  sub_10000B5E4(v178, v244, &qword_1009D5978);
  v183 = v182 + *(int *)(sub_10004CFD4(&qword_1009D59A0) + 36);
  *(_QWORD *)v183 = v181;
  *(_BYTE *)(v183 + 8) = v162;
  swift_retain(v181);
  return sub_100010960(v178, &qword_1009D5978);
}

uint64_t sub_10026D608@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  __int128 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t Strong;
  uint64_t v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v66 = a3;
  v64 = sub_10004CFD4(&qword_1009D5928);
  __chkstk_darwin(v64);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ReadingLoupeVisibilityState(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v60 - v12;
  v65 = type metadata accessor for ReadingLoupeButtonView(0);
  v14 = __chkstk_darwin(v65);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v60 - v17;
  LOBYTE(a1) = *a1;
  v19 = type metadata accessor for REMenuButtonView(0);
  v20 = v19;
  if ((a1 & 1) != 0)
  {
    v21 = sub_10004CFD4(&qword_1009D57E8);
    Bindable.wrappedValue.getter(&v67, v21);
    v22 = v67;
    v23 = *(_QWORD *)(v67 + 120);
    swift_retain(v23);
    swift_release(v22);
    v24 = *(id *)(v23 + 16);
    swift_release(v23);
    v25 = (__int128 *)(a2 + *(int *)(v20 + 44));
    v63 = *v25;
    v26 = *((_QWORD *)v25 + 2);
    v27 = *((_QWORD *)v25 + 3);
    v28 = type metadata accessor for ChromeStyle(0);
    v29 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    EnvironmentObject.init()(v28, v29);
    v31 = v30;
    v33 = v32;
    v34 = type metadata accessor for OrientationLockHintViewModel(0);
    v35 = sub_100008DB0(&qword_1009D5930, type metadata accessor for OrientationLockHintViewModel, (uint64_t)&protocol conformance descriptor for OrientationLockHintViewModel);
    v36 = ObservedObject.init(wrappedValue:)(v24, v34, v35);
    *(_QWORD *)v6 = v31;
    *((_QWORD *)v6 + 1) = v33;
    *((_QWORD *)v6 + 2) = v36;
    *((_QWORD *)v6 + 3) = v37;
    *((_OWORD *)v6 + 2) = v63;
    *((_QWORD *)v6 + 6) = v26;
    *((_QWORD *)v6 + 7) = v27;
    swift_storeEnumTagMultiPayload(v6, v64, 1);
    v38 = sub_100008DB0(&qword_1009D5900, type metadata accessor for ReadingLoupeButtonView, (uint64_t)&unk_100728800);
    v39 = sub_10026F508();
    return _ConditionalContent<>.init(storage:)(v6, v65, &type metadata for OrientationLockHintButtonView, v38, v39);
  }
  else
  {
    v41 = a2 + *(int *)(v19 + 48);
    Strong = swift_unknownObjectWeakLoadStrong(v41);
    *(_QWORD *)&v63 = v11;
    v43 = Strong;
    v61 = *(_QWORD *)(v41 + 8);
    v44 = (__int128 *)(a2 + *(int *)(v20 + 44));
    v62 = *v44;
    v45 = *((_QWORD *)v44 + 2);
    v46 = *((_QWORD *)v44 + 3);
    v47 = sub_10004CFD4(&qword_1009D57E8);
    Bindable.wrappedValue.getter(&v67, v47);
    v48 = v67;
    v49 = type metadata accessor for ChromeStyle(0);
    v50 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    EnvironmentObject.init()(v49, v50);
    *(_QWORD *)v16 = v51;
    *((_QWORD *)v16 + 1) = v52;
    *((_QWORD *)v16 + 3) = v61;
    swift_unknownObjectWeakInit(v16 + 16, v43);
    swift_unknownObjectRelease(v43);
    *((_OWORD *)v16 + 2) = v62;
    *((_QWORD *)v16 + 6) = v45;
    *((_QWORD *)v16 + 7) = v46;
    v53 = v65;
    v54 = type metadata accessor for BookReaderViewModel(0);
    v55 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    Bindable<A>.init(wrappedValue:)(v48, v54, v55);
    v56 = &v16[*(int *)(v53 + 32)];
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v13, enum case for ReadingLoupeVisibilityState.medium(_:), v7);
    v57 = v63;
    (*(void (**)(_QWORD, char *, uint64_t))(v8 + 16))(v63, v13, v7);
    State.init(wrappedValue:)(v56, v57, v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    sub_10002C960((uint64_t)v16, (uint64_t)v18, type metadata accessor for ReadingLoupeButtonView);
    sub_10002CD84((uint64_t)v18, (uint64_t)v6, type metadata accessor for ReadingLoupeButtonView);
    swift_storeEnumTagMultiPayload(v6, v64, 0);
    v58 = sub_100008DB0(&qword_1009D5900, type metadata accessor for ReadingLoupeButtonView, (uint64_t)&unk_100728800);
    v59 = sub_10026F508();
    _ConditionalContent<>.init(storage:)(v6, v53, &type metadata for OrientationLockHintButtonView, v58, v59);
    return sub_10002C8F0((uint64_t)v18, type metadata accessor for ReadingLoupeButtonView);
  }
}

uint64_t sub_10026DA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  _OWORD *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  double v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  double v86;
  double *v87;
  double v88;
  double v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  _BYTE *v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  double v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  _BYTE *v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  unsigned int v156;
  unsigned int v157;
  uint64_t v158;
  int v159;
  int v160;
  double v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE *v168;
  double *v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  double *v181;
  uint64_t v182;
  char v183;
  double v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _BYTE *v191;
  double *v192;
  _BYTE *v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v198;
  uint64_t OpaqueTypeConformance2;
  _BYTE v200[12];
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  _BYTE *v216;
  _BYTE *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE *v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _BYTE *v230;
  int v231;
  uint64_t v232;
  _BYTE *v233;
  uint64_t v234;
  uint64_t v235;
  _BYTE *v236;
  _BYTE *v237;
  _BYTE *v238;
  _BYTE *v239;
  _BYTE *v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE *v243;
  uint64_t v244;
  uint64_t v245;
  _BYTE *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  _OWORD v259[2];
  char v260;
  char v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  _OWORD v271[2];
  _OWORD v272[19];
  _QWORD v273[36];
  uint64_t v274;
  unsigned __int8 v275;
  uint64_t v276;
  unsigned __int8 v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  char v283;
  uint64_t v284;
  uint64_t v285;

  v201 = a7;
  v231 = a6;
  v249 = a5;
  LODWORD(v248) = a4;
  v244 = a3;
  v242 = a8;
  v14 = type metadata accessor for PopoverAttachmentAnchor(0);
  v226 = *(_QWORD *)(v14 - 8);
  v227 = v14;
  __chkstk_darwin(v14);
  v224 = (uint64_t *)&v200[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v247 = type metadata accessor for REMenuButtonView(0);
  v220 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v221 = v16;
  v222 = &v200[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_10004CFD4(&qword_1009D57E8);
  v218 = *(_QWORD *)(v17 - 8);
  v219 = v17;
  __chkstk_darwin(v17);
  v217 = &v200[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v213 = sub_10004CFD4(&qword_1009F4140);
  __chkstk_darwin(v213);
  v216 = &v200[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v20);
  v22 = &v200[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v23);
  v25 = &v200[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = sub_10004CFD4(&qword_1009D59A8);
  __chkstk_darwin(v26);
  v28 = &v200[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v212 = sub_10004CFD4(&qword_1009D59B0);
  __chkstk_darwin(v212);
  v30 = &v200[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v214 = sub_10004CFD4(&qword_1009D59B8);
  __chkstk_darwin(v214);
  v215 = &v200[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v245 = sub_10004CFD4(&qword_1009D59C0);
  __chkstk_darwin(v245);
  v246 = &v200[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = sub_10004CFD4(&qword_1009D59C8);
  v228 = *(_QWORD *)(v33 - 8);
  v229 = v33;
  __chkstk_darwin(v33);
  v243 = &v200[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v223 = sub_10004CFD4(&qword_1009D59D0);
  __chkstk_darwin(v223);
  v230 = &v200[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v225 = sub_10004CFD4(&qword_1009D59D8);
  __chkstk_darwin(v225);
  v233 = &v200[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v232 = sub_10004CFD4(&qword_1009D59E0);
  __chkstk_darwin(v232);
  v236 = &v200[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v234 = sub_10004CFD4(&qword_1009D59E8);
  __chkstk_darwin(v234);
  v240 = &v200[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v235 = sub_10004CFD4(&qword_1009D59F0);
  __chkstk_darwin(v235);
  v238 = &v200[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v241 = sub_10004CFD4(&qword_1009D59F8);
  __chkstk_darwin(v241);
  v239 = &v200[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = sub_10004CFD4(&qword_1009D5A00);
  __chkstk_darwin(v41);
  v237 = &v200[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = swift_bridgeObjectRetain(a2);
  v44 = Image.init(_:bundle:)(a1, a2, 0, v43);
  v45 = enum case for Image.TemplateRenderingMode.template(_:);
  v46 = type metadata accessor for Image.TemplateRenderingMode(0);
  v47 = *(_QWORD *)(v46 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v47 + 104))(v28, v45, v46);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v46);
  v211 = Image.renderingMode(_:)(v28, v44);
  swift_release(v44);
  v48 = sub_100010960((uint64_t)v28, &qword_1009D59A8);
  v49 = static Font.Weight.medium.getter(v48);
  v50 = type metadata accessor for Font.Design(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v25, 1, 1, v50);
  v210 = static Font.system(size:weight:design:)(*(_QWORD *)&v49, 0, v25, 30.0);
  sub_100010960((uint64_t)v25, &qword_1009CEDD0);
  KeyPath = swift_getKeyPath(&unk_1007157E0);
  v209 = swift_getKeyPath(&unk_100715810);
  v52 = qword_1009CE628;
  v53 = swift_retain(v244);
  if (v52 != -1)
    v53 = swift_once(&qword_1009CE628, sub_100479520);
  v54 = static REConstants.floatingButtonHeight;
  v55 = static Alignment.center.getter(v53);
  _FrameLayout.init(width:height:alignment:)(&v274, v54, 0, v54, 0, v55, v56);
  v208 = v274;
  v207 = v275;
  v206 = v276;
  v205 = v277;
  v203 = v279;
  v204 = v278;
  v57 = type metadata accessor for ChromeStyle(0);
  v58 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v57, v58);
  v60 = v59;
  v202 = v61;
  v62 = v22;
  v63 = &v22[*(int *)(v20 + 20)];
  v64 = enum case for RoundedCornerStyle.continuous(_:);
  v65 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v63, v64, v65);
  __asm { FMOV            V0.2D, #8.0 }
  *v62 = _Q0;
  v70 = v216;
  sub_10002CD84((uint64_t)v62, (uint64_t)v216, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v70[*(int *)(v213 + 36)] = 256;
  sub_10000B5E4((uint64_t)v70, (uint64_t)&v30[*(int *)(v212 + 36)], &qword_1009F4140);
  v71 = v211;
  *(_QWORD *)v30 = v211;
  *((_QWORD *)v30 + 1) = KeyPath;
  v72 = KeyPath;
  v73 = v209;
  v74 = v210;
  *((_QWORD *)v30 + 2) = v210;
  *((_QWORD *)v30 + 3) = v73;
  v75 = v244;
  v76 = v208;
  *((_QWORD *)v30 + 4) = v244;
  *((_QWORD *)v30 + 5) = v76;
  v30[48] = v207;
  *((_QWORD *)v30 + 7) = v206;
  v30[64] = v205;
  v77 = v203;
  *((_QWORD *)v30 + 9) = v204;
  *((_QWORD *)v30 + 10) = v77;
  *((_QWORD *)v30 + 11) = 0x3FF0000000000000;
  *((_QWORD *)v30 + 12) = v60;
  *((_QWORD *)v30 + 13) = v202;
  v78 = v60;
  swift_retain(v71);
  swift_retain(v72);
  swift_retain(v74);
  swift_retain(v73);
  swift_retain(v75);
  sub_100010960((uint64_t)v70, &qword_1009F4140);
  sub_10002C8F0((uint64_t)v62, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);

  swift_release(v75);
  swift_release(v73);
  swift_release(v74);
  swift_release(v72);
  swift_release(v71);
  v79 = BEChromeHiddenScale;
  v81 = static UnitPoint.center.getter(v80);
  v83 = v82;
  v84 = v215;
  sub_10000B5E4((uint64_t)v30, (uint64_t)v215, &qword_1009D59B0);
  _ZF = (v248 & 1) == 0;
  if ((v248 & 1) != 0)
    v86 = v79;
  else
    v86 = 1.0;
  v87 = (double *)&v84[*(int *)(v214 + 36)];
  *v87 = v86;
  v87[1] = v86;
  v87[2] = v81;
  *((_QWORD *)v87 + 3) = v83;
  v88 = 0.0;
  if (_ZF)
    v89 = 1.0;
  else
    v89 = 0.0;
  sub_100010960((uint64_t)v30, &qword_1009D59B0);
  v90 = v246;
  sub_10000B5E4((uint64_t)v84, (uint64_t)v246, &qword_1009D59B8);
  *(double *)&v90[*(int *)(v245 + 36)] = v89;
  sub_100010960((uint64_t)v84, &qword_1009D59B8);
  v91 = v249;
  v92 = v217;
  v93 = v219;
  Bindable.projectedValue.getter(v219);
  v94 = swift_getKeyPath(&unk_100715840);
  Bindable<A>.subscript.getter(v272, v94, v93);
  v95 = swift_release(v94);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v218 + 8))(v92, v93, v95);
  v97 = *((_QWORD *)&v272[0] + 1);
  v96 = *(_QWORD *)&v272[0];
  LODWORD(v244) = LOBYTE(v272[1]);
  v98 = v222;
  sub_10002CD84(v91, (uint64_t)v222, type metadata accessor for REMenuButtonView);
  v99 = *(unsigned __int8 *)(v220 + 80);
  v100 = (v99 + 16) & ~v99;
  v101 = swift_allocObject(&unk_1008F7A58, v100 + v221, v99 | 7);
  v102 = sub_10002C960((uint64_t)v98, v101 + v100, type metadata accessor for REMenuButtonView);
  v103 = static Anchor.Source<A>.bounds.getter(v102);
  v104 = v224;
  *v224 = v103;
  v106 = v226;
  v105 = v227;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v226 + 104))(v104, enum case for PopoverAttachmentAnchor.rect(_:), v227);
  v107 = sub_10004CFD4(&qword_1009D5A08);
  v108 = sub_1001F5558(&qword_1009D5A10, &qword_1009D59C0, (void (*)(void))sub_10026F6AC);
  v109 = sub_100030B74(&qword_1009D5A68);
  v110 = sub_10026F8E8();
  v273[0] = v109;
  v273[1] = v110;
  v198 = v108;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v273, &opaque type descriptor for <<opaque return type of View.presentationCompactAdaptation(_:)>>, 1);
  v111 = v243;
  v112 = v96;
  v113 = v96;
  v114 = v246;
  View.popover<A>(isPresented:attachmentAnchor:content:)(v113, v97, v244, v104, sub_10026F670, v101, v245, v107, v198, OpaqueTypeConformance2);
  swift_release(v97);
  swift_release(v101);
  v115 = swift_release(v112);
  (*(void (**)(uint64_t *, uint64_t, __n128))(v106 + 8))(v104, v105, v115);
  v116 = sub_100010960((uint64_t)v114, &qword_1009D59C0);
  v117 = static Alignment.center.getter(v116);
  v118 = v117;
  v120 = v119;
  v121 = v249;
  v122 = v247;
  v123 = v248;
  if ((v231 & 1) != 0)
  {
    v124 = (_BYTE *)static Alignment.center.getter(v117);
    v245 = v125;
    v246 = v124;
    if ((v123 & 1) != 0)
      v126 = 0.0;
    else
      v126 = -9.0;
    if ((v123 & 1) != 0)
      a9 = 1.0;
    else
      v88 = 9.0;
    v127 = sub_10026EEC4(v121, v123 & 1, v201 & 1, (uint64_t)&v262);
    v128 = static REConstants.floatingButtonHeight;
    v129 = static Alignment.center.getter(v127);
    v131 = _FrameLayout.init(width:height:alignment:)(&v280, v128, 0, 0, 1, v129, v130);
    v248 = v280;
    v244 = v282;
    v132 = v284;
    v133 = v285;
    v134 = v122;
    v261 = v281;
    v260 = v283;
    v250 = v262;
    v251 = v263;
    v254 = v266;
    v255 = v267;
    v252 = v264;
    v253 = v265;
    *(_OWORD *)((char *)v259 + 9) = *(_OWORD *)((char *)v271 + 9);
    v258 = v270;
    v259[0] = v271[0];
    v256 = v268;
    v257 = v269;
    v135 = v283;
    v136 = v120;
    v137 = v118;
    v138 = v281;
    v139 = static UnitPoint.topTrailing.getter(v131);
    v272[9] = v258;
    v272[10] = v259[0];
    *(_OWORD *)((char *)&v272[10] + 9) = *(_OWORD *)((char *)v259 + 9);
    v272[5] = v254;
    v272[6] = v255;
    v272[7] = v256;
    v272[8] = v257;
    v272[1] = v250;
    v272[2] = v251;
    v272[3] = v252;
    v272[4] = v253;
    *(_QWORD *)&v272[0] = v246;
    *((_QWORD *)&v272[0] + 1) = v245;
    *(_QWORD *)&v272[12] = v248;
    BYTE8(v272[12]) = v138;
    v118 = v137;
    v120 = v136;
    *(_QWORD *)&v272[13] = v244;
    BYTE8(v272[13]) = v135;
    *(_QWORD *)&v272[14] = v132;
    v111 = v243;
    *((_QWORD *)&v272[14] + 1) = v133;
    v122 = v134;
    *(double *)&v272[15] = v88;
    *((double *)&v272[15] + 1) = v126;
    *(double *)&v272[16] = a9;
    *((double *)&v272[16] + 1) = a9;
    *(double *)&v272[17] = v139;
    *((_QWORD *)&v272[17] + 1) = v140;
    BKAppDelegate.enableMetricsInspectorOnDebugMode()();
  }
  else
  {
    sub_10026F984(v272);
  }
  sub_100025B3C((uint64_t)v272, (uint64_t)v273, &qword_1009D5A80);
  sub_100025B3C((uint64_t)v273, (uint64_t)v272, &qword_1009D5A80);
  *(_QWORD *)&v272[18] = v118;
  *((_QWORD *)&v272[18] + 1) = v120;
  v142 = v228;
  v141 = v229;
  v143 = (uint64_t)v230;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v228 + 16))(v230, v111, v229);
  memcpy((void *)(v143 + *(int *)(v223 + 36)), v272, 0x130uLL);
  v144 = (*(uint64_t (**)(_BYTE *, uint64_t))(v142 + 8))(v111, v141);
  v145 = static Alignment.center.getter(v144);
  v147 = v146;
  sub_10026F1F4((uint64_t)&v262);
  v148 = v233;
  sub_10000B5E4(v143, (uint64_t)v233, &qword_1009D59D0);
  v149 = &v148[*(int *)(v225 + 36)];
  v150 = v269;
  *((_OWORD *)v149 + 6) = v268;
  *((_OWORD *)v149 + 7) = v150;
  *((_OWORD *)v149 + 8) = v270;
  v151 = v265;
  *((_OWORD *)v149 + 2) = v264;
  *((_OWORD *)v149 + 3) = v151;
  v152 = v267;
  *((_OWORD *)v149 + 4) = v266;
  *((_OWORD *)v149 + 5) = v152;
  v153 = v263;
  *(_OWORD *)v149 = v262;
  *((_OWORD *)v149 + 1) = v153;
  *((_QWORD *)v149 + 18) = v145;
  *((_QWORD *)v149 + 19) = v147;
  v154 = sub_100010960(v143, &qword_1009D59D0);
  v155 = static Edge.Set.top.getter(v154);
  v156 = v155;
  v157 = static Edge.Set.leading.getter(v155);
  v158 = Edge.Set.init(rawValue:)(0);
  v159 = Edge.Set.init(rawValue:)(v158);
  if (Edge.Set.init(rawValue:)(v159 & v156) != v156)
    v158 = Edge.Set.init(rawValue:)(v158 | v156);
  v160 = Edge.Set.init(rawValue:)(v158);
  if (Edge.Set.init(rawValue:)(v160 & v157) != v157)
    LOBYTE(v158) = Edge.Set.init(rawValue:)(v158 | v157);
  v161 = EdgeInsets.init(_all:)(a10);
  v163 = v162;
  v165 = v164;
  v167 = v166;
  v168 = v236;
  sub_10000B5E4((uint64_t)v148, (uint64_t)v236, &qword_1009D59D8);
  v169 = (double *)&v168[*(int *)(v232 + 36)];
  *(_BYTE *)v169 = v158;
  v169[1] = v161;
  *((_QWORD *)v169 + 2) = v163;
  *((_QWORD *)v169 + 3) = v165;
  *((_QWORD *)v169 + 4) = v167;
  *((_BYTE *)v169 + 40) = 0;
  v170 = sub_100010960((uint64_t)v148, &qword_1009D59D8);
  v171 = static Edge.Set.trailing.getter(v170);
  v172 = v121 + *(int *)(v122 + 44);
  v173 = EdgeInsets.init(_all:)(*(double *)(v172 + 24) + a10);
  v175 = v174;
  v177 = v176;
  v179 = v178;
  v180 = v240;
  sub_10000B5E4((uint64_t)v168, (uint64_t)v240, &qword_1009D59E0);
  v181 = (double *)&v180[*(int *)(v234 + 36)];
  *(_BYTE *)v181 = v171;
  v181[1] = v173;
  *((_QWORD *)v181 + 2) = v175;
  *((_QWORD *)v181 + 3) = v177;
  *((_QWORD *)v181 + 4) = v179;
  *((_BYTE *)v181 + 40) = 0;
  v182 = sub_100010960((uint64_t)v168, &qword_1009D59E0);
  v183 = static Edge.Set.bottom.getter(v182);
  v184 = EdgeInsets.init(_all:)(*(double *)(v172 + 16) + a10);
  v186 = v185;
  v188 = v187;
  v190 = v189;
  v191 = v238;
  sub_10000B5E4((uint64_t)v180, (uint64_t)v238, &qword_1009D59E8);
  v192 = (double *)&v191[*(int *)(v235 + 36)];
  *(_BYTE *)v192 = v183;
  v192[1] = v184;
  *((_QWORD *)v192 + 2) = v186;
  *((_QWORD *)v192 + 3) = v188;
  *((_QWORD *)v192 + 4) = v190;
  *((_BYTE *)v192 + 40) = 0;
  sub_100010960((uint64_t)v180, &qword_1009D59E8);
  v193 = v239;
  sub_10000B5E4((uint64_t)v191, (uint64_t)v239, &qword_1009D59F0);
  v194 = v241;
  v193[*(int *)(v241 + 36)] = 0;
  sub_100010960((uint64_t)v191, &qword_1009D59F0);
  v195 = sub_10026F9B0();
  v196 = (uint64_t)v237;
  View.accessibilityHidden(_:)(1, v194, v195);
  sub_100010960((uint64_t)v193, &qword_1009D59F8);
  return sub_100025B3C(v196, v242, &qword_1009D5A00);
}

uint64_t sub_10026E964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  __n128 v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  char *v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[2];

  v85 = a2;
  v3 = type metadata accessor for PresentationAdaptation(0);
  v83 = *(_QWORD *)(v3 - 8);
  v84 = v3;
  __chkstk_darwin(v3);
  v82 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for Font.TextStyle(0);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v76 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v72 - 8);
  v7 = __chkstk_darwin(v72);
  v71 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v63 - v9;
  v11 = type metadata accessor for String.LocalizationValue(0);
  v66 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v63 - v15;
  v74 = type metadata accessor for TipContentView(0);
  __chkstk_darwin(v74);
  v18 = (uint64_t *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = sub_10004CFD4(&qword_1009D5A68);
  __chkstk_darwin(v78);
  v73 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10004CFD4(&qword_1009D5A08);
  v77 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v75 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for REMenuButtonView(0);
  v22 = *(int *)(v21 + 40);
  v23 = v21;
  v69 = v21;
  v70 = a1;
  v65 = a1 + v22;
  v64 = sub_10004CFD4(&qword_1009D57E8);
  Bindable.wrappedValue.getter(v86, v64);
  v24 = v86[0];
  v25 = *(_QWORD *)(v86[0] + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookLanguage + 8);
  v68 = *(_QWORD *)(v86[0] + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookLanguage);
  v67 = v25;
  swift_bridgeObjectRetain(v25);
  swift_release(v24);
  v26 = *(_QWORD *)(a1 + *(int *)(v23 + 52));
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000050, 0x80000001007BA370);
  static Locale.current.getter(v27);
  v28 = v66;
  v29 = v14;
  v30 = v11;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v14, v16, v11);
  v31 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v31);
  v33 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v34 = v6;
  v35 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v36 = v71;
  v37 = v72;
  v35(v71, v10, v72);
  v38 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v33, v36, "Tooltip for the action menu affordance", 38, 2);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v37);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v30);
  Bindable.wrappedValue.getter(v86, v64);
  v41 = v86[0];
  v42 = type metadata accessor for ChromeStyle(0);
  v43 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  v44 = EnvironmentObject.init()(v42, v43);
  *v18 = v45;
  v18[1] = v46;
  v47 = v67;
  v18[2] = v68;
  v18[3] = v47;
  v18[4] = v26;
  v18[5] = v38;
  v18[6] = v40;
  v18[7] = sub_10026FC90;
  v18[8] = v41;
  v86[0] = 0x4079E00000000000;
  v48 = v76;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v79 + 104))(v76, enum case for Font.TextStyle.largeTitle(_:), v81, v44);
  v49 = sub_100224AA8();
  ScaledMetric.init(wrappedValue:relativeTo:)(v86, v48, &type metadata for Double, v49);
  v51 = v70 + *(int *)(v69 + 36);
  v52 = *(void **)v51;
  if (*(_QWORD *)v51)
  {
    v53 = v52;
    v54 = static ObservableObject.environmentStore.getter(v42, v43);
    v55 = v73;
    sub_10002CD84((uint64_t)v18, v73, type metadata accessor for TipContentView);
    v56 = v78;
    v57 = (uint64_t *)(v55 + *(int *)(v78 + 36));
    *v57 = v54;
    v57[1] = (uint64_t)v52;
    v58 = sub_10002C8F0((uint64_t)v18, type metadata accessor for TipContentView);
    v59 = v82;
    static PresentationAdaptation.none.getter(v58);
    v60 = sub_10026F8E8();
    v61 = v75;
    View.presentationCompactAdaptation(_:)(v59, v56, v60);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v84);
    sub_100010960(v55, &qword_1009D5A68);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v77 + 32))(v85, v61, v80);
  }
  else
  {
    result = EnvironmentObject.error()(0, *(_QWORD *)(v51 + 8), v42, v43, v50);
    __break(1u);
  }
  return result;
}

uint64_t sub_10026EEC4@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t KeyPath;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char v56;
  _QWORD v57[5];

  v55 = a3;
  v7 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Font.TextStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(int *)(type metadata accessor for REMenuButtonView(0) + 36);
  v15 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    KeyPath = swift_getKeyPath(&unk_100715798);
    v17 = swift_getKeyPath(&unk_1007157C0);
    v18 = v15;
    static Published.subscript.getter(v57, v18, KeyPath, v17);

    swift_release(KeyPath);
    v20 = swift_release(v17);
    v19 = v57[0];
    v20.n128_u64[0] = 3.0;
    v21 = 0.0;
    if ((a2 & 1) != 0)
      v20.n128_f64[0] = 0.0;
    v22 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v57, 0, 0, _swiftEmptyArrayStorage, v20, 10.0, 0.0);
    v23 = v57[0];
    v24 = v57[2];
    v25 = v57[3];
    v26 = v57[4];
    v27 = static Alignment.center.getter(v22);
    v53 = v28;
    v54 = v27;
    v29 = static Color.red.getter();
    v30 = Image.init(systemName:)(0x6B72616D6B6F6F62, 0xED00006C6C69662ELL);
    if ((v55 & 1) != 0)
      v21 = 10.0;
    v31 = v57[1];
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Font.TextStyle.footnote(_:), v10);
    v32 = type metadata accessor for Font.Design(0);
    v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
    v34 = static Font.Weight.semibold.getter(v33);
    v35 = static Font.system(_:design:weight:)(v13, v9, *(_QWORD *)&v34, 0);
    sub_100010960((uint64_t)v9, &qword_1009CEDD0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v36 = swift_getKeyPath(&unk_1007157E0);
    v37 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v38 = swift_getKeyPath(&unk_100715810);
    v40 = static Edge.Set.all.getter(v39);
    v41 = EdgeInsets.init(_all:)(v21);
    v56 = 0;
    *(_QWORD *)a4 = v23;
    *(_QWORD *)(a4 + 8) = v31;
    *(_QWORD *)(a4 + 16) = v24;
    *(_QWORD *)(a4 + 24) = v25;
    *(_QWORD *)(a4 + 32) = v26;
    *(_QWORD *)(a4 + 40) = v19;
    *(_WORD *)(a4 + 48) = 256;
    v42 = v53;
    *(_QWORD *)(a4 + 56) = v54;
    *(_QWORD *)(a4 + 64) = v42;
    *(_QWORD *)(a4 + 72) = v29;
    *(_WORD *)(a4 + 80) = 256;
    *(_QWORD *)(a4 + 88) = v30;
    *(_QWORD *)(a4 + 96) = v36;
    *(_QWORD *)(a4 + 104) = v35;
    *(_QWORD *)(a4 + 112) = v38;
    *(_QWORD *)(a4 + 120) = v37;
    *(_BYTE *)(a4 + 128) = v40;
    *(double *)(a4 + 136) = v41;
    *(_QWORD *)(a4 + 144) = v43;
    *(_QWORD *)(a4 + 152) = v44;
    *(_QWORD *)(a4 + 160) = v45;
    *(_BYTE *)(a4 + 168) = 0;
    swift_bridgeObjectRetain(v25);
    v46 = swift_retain(v19);
    swift_release(v46);
    return swift_bridgeObjectRelease(v25);
  }
  else
  {
    v48 = *(_QWORD *)(v14 + 8);
    v49 = type metadata accessor for ChromeStyle(0);
    v50 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v48, v49, v50, v51);
    __break(1u);
  }
  return result;
}

double sub_10026F1F4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for REMenuButtonView(0);
  v5 = v1 + *(int *)(v4 + 48);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v8 = sub_10004CFD4(&qword_1009D57E8);
  Bindable.wrappedValue.getter(&v29, v8);
  v9 = v29;
  KeyPath = swift_getKeyPath(&unk_100715868);
  v29 = v9;
  v11 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v29, KeyPath, v11);
  swift_release(KeyPath);
  v12 = swift_unknownObjectWeakLoadStrong(v9 + 144);
  v28 = *(_QWORD *)(v9 + 152);
  swift_release(v9);
  v13 = swift_allocObject(&unk_1008F7A80, 32, 7);
  *(_QWORD *)(v13 + 16) = Strong;
  *(_QWORD *)(v13 + 24) = v7;
  v14 = qword_1009CE598;
  swift_unknownObjectRetain(Strong);
  if (v14 != -1)
    swift_once(&qword_1009CE598, sub_100478F10);
  v15 = static REConstants.menuButtonTapTargetSize;
  v16 = v2 + *(int *)(v4 + 44);
  v17 = *(double *)&static REConstants.menuButtonTapTargetSize + *(double *)(v16 + 24) + *(double *)(v16 + 24);
  v18 = *(double *)&static REConstants.menuButtonTapTargetSize + *(double *)(v16 + 16) + *(double *)(v16 + 16);
  swift_unknownObjectRetain(v12);
  v19 = swift_retain(v13);
  v20 = static Alignment.center.getter(v19);
  _FrameLayout.init(width:height:alignment:)(&v29, *(_QWORD *)&v17, 0, *(_QWORD *)&v18, 0, v20, v21);
  v22 = v29;
  LOBYTE(v18) = v30;
  v23 = v31;
  v24 = v32;
  v26 = v33;
  v25 = v34;
  swift_release(v13);
  swift_unknownObjectRelease(v12);
  swift_unknownObjectRelease(Strong);
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v28;
  *(_QWORD *)(a1 + 40) = sub_10026FC6C;
  *(_QWORD *)(a1 + 48) = v13;
  result = 0.0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_QWORD *)(a1 + 88) = v22;
  *(_BYTE *)(a1 + 96) = LOBYTE(v18);
  *(_QWORD *)(a1 + 104) = v23;
  *(_BYTE *)(a1 + 112) = v24;
  *(_QWORD *)(a1 + 120) = v26;
  *(_QWORD *)(a1 + 128) = v25;
  *(_BYTE *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_10026F438@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMenuButtonView(0) - 8) + 80);
  return sub_10026D608(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_10026F484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D58F8;
  if (!qword_1009D58F8)
  {
    v1 = sub_100030B74(&qword_1009D58E8);
    sub_100008DB0(&qword_1009D5900, type metadata accessor for ReadingLoupeButtonView, (uint64_t)&unk_100728800);
    sub_10026F508();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D58F8);
  }
  return result;
}

unint64_t sub_10026F508()
{
  unint64_t result;

  result = qword_1009D5908;
  if (!qword_1009D5908)
  {
    result = swift_getWitnessTable(&unk_100732CE0, &type metadata for OrientationLockHintButtonView);
    atomic_store(result, (unint64_t *)&qword_1009D5908);
  }
  return result;
}

unint64_t sub_10026F54C()
{
  unint64_t result;

  result = qword_1009D5910;
  if (!qword_1009D5910)
  {
    result = swift_getWitnessTable(&unk_100715904, &type metadata for ChromeItem);
    atomic_store(result, (unint64_t *)&qword_1009D5910);
  }
  return result;
}

unint64_t sub_10026F5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5988;
  if (!qword_1009D5988)
  {
    v1 = sub_100030B74(&qword_1009D5940);
    sub_100030B34(&qword_1009D5990, &qword_1009D5938, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(&qword_1009D5188, &qword_1009D5148, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5988);
  }
  return result;
}

uint64_t sub_10026F670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for REMenuButtonView(0) - 8) + 80);
  return sub_10026E964(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_10026F6AC()
{
  return sub_1001F5558(&qword_1009D5A18, &qword_1009D59B8, (void (*)(void))sub_10026F6D0);
}

unint64_t sub_10026F6D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5A20;
  if (!qword_1009D5A20)
  {
    v1 = sub_100030B74(&qword_1009D59B0);
    sub_10026F754();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5A20);
  }
  return result;
}

unint64_t sub_10026F754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5A28;
  if (!qword_1009D5A28)
  {
    v1 = sub_100030B74(&qword_1009D5A30);
    sub_1001F5558(&qword_1009D5A38, &qword_1009D5A40, (void (*)(void))sub_10026F7E0);
    sub_1001F544C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5A28);
  }
  return result;
}

unint64_t sub_10026F7E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5A48;
  if (!qword_1009D5A48)
  {
    v1 = sub_100030B74(&qword_1009D5A50);
    sub_10026F864();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5A48);
  }
  return result;
}

unint64_t sub_10026F864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5A58;
  if (!qword_1009D5A58)
  {
    v1 = sub_100030B74(&qword_1009D5A60);
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5A58);
  }
  return result;
}

unint64_t sub_10026F8E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5A70;
  if (!qword_1009D5A70)
  {
    v1 = sub_100030B74(&qword_1009D5A68);
    sub_100008DB0(&qword_1009D5A78, type metadata accessor for TipContentView, (uint64_t)&unk_100713438);
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5A70);
  }
  return result;
}

double sub_10026F984(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t sub_10026F9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5A88;
  if (!qword_1009D5A88)
  {
    v1 = sub_100030B74(&qword_1009D59F8);
    sub_1001F5558(&qword_1009D5A90, &qword_1009D59F0, (void (*)(void))sub_10026FA54);
    sub_100030B34(&qword_1009D1E38, &qword_1009D1E40, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5A88);
  }
  return result;
}

uint64_t sub_10026FA54()
{
  return sub_1001F5558(&qword_1009D5A98, &qword_1009D59E8, (void (*)(void))sub_10026FA78);
}

uint64_t sub_10026FA78()
{
  return sub_1001F5558(&qword_1009D5AA0, &qword_1009D59E0, (void (*)(void))sub_10026FA9C);
}

unint64_t sub_10026FA9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D5AA8;
  if (!qword_1009D5AA8)
  {
    v1 = sub_100030B74(&qword_1009D59D8);
    sub_10026FB20();
    sub_100030B34(&qword_1009D5AC8, &qword_1009D5AD0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5AA8);
  }
  return result;
}

unint64_t sub_10026FB20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1009D5AB0;
  if (!qword_1009D5AB0)
  {
    v1 = sub_100030B74(&qword_1009D59D0);
    v2 = sub_100030B74(&qword_1009D59C0);
    v3 = sub_100030B74(&qword_1009D5A08);
    v4 = sub_1001F5558(&qword_1009D5A10, &qword_1009D59C0, (void (*)(void))sub_10026F6AC);
    v6 = sub_100030B74(&qword_1009D5A68);
    v7 = sub_10026F8E8();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.presentationCompactAdaptation(_:)>>, 1);
    v6 = v2;
    v7 = v3;
    v8 = v4;
    v9 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.popover<A>(isPresented:attachmentAnchor:content:)>>, 1);
    sub_100030B34(&qword_1009D5AB8, &qword_1009D5AC0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D5AB0);
  }
  return result;
}

uint64_t sub_10026FC48()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10026FC6C()
{
  uint64_t v0;
  double result;

  if (*(_QWORD *)(v0 + 16))
    return sub_1005E072C();
  return result;
}

void sub_10026FC90()
{
  sub_1004E7860(0);
}

uint64_t storeEnumTagSinglePayload for ChromeItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10026FCE4 + 4 * byte_100715565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10026FD18 + 4 * byte_100715560[v4]))();
}

uint64_t sub_10026FD18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10026FD20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10026FD28);
  return result;
}

uint64_t sub_10026FD34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10026FD3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10026FD40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10026FD48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChromeItem()
{
  return &type metadata for ChromeItem;
}

uint64_t sub_10026FD64()
{
  return sub_100030B34(&qword_1009D5AD8, &qword_1009D5AE0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

unint64_t sub_10026FD94()
{
  unint64_t result;

  result = qword_1009D5AE8;
  if (!qword_1009D5AE8)
  {
    result = swift_getWitnessTable(&unk_1007158DC, &type metadata for ChromeItem);
    atomic_store(result, (unint64_t *)&qword_1009D5AE8);
  }
  return result;
}

unint64_t sub_10026FDDC()
{
  unint64_t result;

  result = qword_1009D5AF0;
  if (!qword_1009D5AF0)
  {
    result = swift_getWitnessTable(&unk_10071589C, &type metadata for ChromeItem);
    atomic_store(result, (unint64_t *)&qword_1009D5AF0);
  }
  return result;
}

uint64_t sub_10026FE20()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D5AF8);
  sub_100048F64(v0, (uint64_t)qword_1009D5AF8);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000028, 0x80000001007BA4F0);
}

double sub_10026FE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[3];

  v1 = v0;
  v12[0] = *(_QWORD *)(v0 + 24);
  v2 = swift_allocObject(&unk_1008F7C08, 24, 7);
  swift_weakInit(v2 + 16, v0);
  swift_retain(v12[0]);
  v3 = sub_10004CFD4(&qword_1009D5C78);
  v4 = sub_100270C60(&qword_1009D5C80, &qword_1009D5C78);
  v5 = Publisher<>.sink(receiveValue:)(sub_100270C50, v2, v3, v4);
  swift_release(v2);
  swift_release(v12[0]);
  swift_beginAccess(v1 + 48, v12, 33, 0);
  AnyCancellable.store(in:)(v1 + 48);
  swift_endAccess(v12);
  swift_release(v5);
  v12[0] = *(_QWORD *)(v1 + 32);
  v6 = v12[0];
  v7 = swift_allocObject(&unk_1008F7C08, 24, 7);
  swift_weakInit(v7 + 16, v1);
  swift_retain(v6);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009E7760);
  v9 = sub_100270C60(&qword_1009D5C88, (uint64_t *)&unk_1009E7760);
  v10 = Publisher<>.sink(receiveValue:)(sub_100270C58, v7, v8, v9);
  swift_release(v7);
  swift_release(v12[0]);
  swift_beginAccess(v1 + 48, v12, 33, 0);
  AnyCancellable.store(in:)(v1 + 48);
  swift_endAccess(v12);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_100270030(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  _BYTE v54[24];

  v4 = type metadata accessor for _BookReaderInteractorState(0);
  __chkstk_darwin(v4);
  v6 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v54[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v54, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v11 = (_BYTE *)Strong;
    v12 = *(unsigned __int8 *)(Strong + 16);
    v13 = BookThemeType.rawValue.getter(a1[2]);
    v15 = v14;
    v16 = BookThemeType.rawValue.getter(v12);
    if (v13 == v16 && v15 == v17)
    {
      swift_bridgeObjectRelease_n(v15, 2);
      sub_100270BE8((uint64_t)a1, (uint64_t)v9);
    }
    else
    {
      v19 = v17;
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v19);
      sub_100270BE8((uint64_t)a1, (uint64_t)v9);
      if ((v20 & 1) == 0)
      {
        sub_100270BAC((uint64_t)v9);
        sub_100270BE8((uint64_t)a1, (uint64_t)v6);
LABEL_14:
        sub_100270BAC((uint64_t)v6);
        goto LABEL_21;
      }
    }
    v21 = v11[17];
    v22 = BookThemeVariant.rawValue.getter(v9[3]);
    v24 = v23;
    v25 = BookThemeVariant.rawValue.getter(v21);
    if (v22 == v25 && v24 == v26)
    {
      swift_bridgeObjectRelease_n(v24, 2);
      sub_100270BAC((uint64_t)v9);
      sub_100270BE8((uint64_t)a1, (uint64_t)v6);
    }
    else
    {
      v28 = v26;
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v28);
      sub_100270BAC((uint64_t)v9);
      sub_100270BE8((uint64_t)a1, (uint64_t)v6);
      if ((v29 & 1) == 0)
        goto LABEL_14;
    }
    v30 = PageNavigationStyle.rawValue.getter(*v6);
    v32 = v31;
    v33 = PageNavigationStyle.rawValue.getter(3);
    if (v30 == v33 && v32 == v34)
    {
      swift_bridgeObjectRelease_n(v32, 2);
      sub_100270BAC((uint64_t)v6);
      if ((v11[19] & 1) == 0)
      {
LABEL_21:
        sub_100270514((uint64_t)a1);
        v11[16] = a1[2];
        v11[17] = a1[3];
        v11[18] = a1[4];
        v38 = PageNavigationStyle.rawValue.getter(*a1);
        v40 = v39;
        v42 = PageNavigationStyle.rawValue.getter(3);
        v43 = v41;
        if (v38 == v42 && v40 == v41)
        {
          v44 = 1;
          v43 = v40;
        }
        else
        {
          v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
        }
        swift_bridgeObjectRelease(v40);
        swift_bridgeObjectRelease(v43);
        v11[19] = v44 & 1;
LABEL_26:
        swift_release(v11);
        return;
      }
    }
    else
    {
      v36 = v34;
      v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v33, v34, 0) & 1;
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v36);
      sub_100270BAC((uint64_t)v6);
      if (v37 != v11[19])
        goto LABEL_21;
    }
    if (qword_1009CDD60 != -1)
      swift_once(&qword_1009CDD60, sub_10026FE20);
    v45 = type metadata accessor for Logger(0);
    v46 = sub_100048F64(v45, (uint64_t)qword_1009D5AF8);
    v47 = Logger.logObject.getter(v46);
    v51 = static os_log_type_t.debug.getter(v47, v48, v49, v50);
    if (os_log_type_enabled(v47, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v51, "Reading state changed, but not visibly, ignoring", v52, 2u);
      swift_slowDealloc(v52, -1, -1);
      swift_release(v11);

      return;
    }

    goto LABEL_26;
  }
}

void sub_1002703F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _BYTE v13[24];

  v4 = type metadata accessor for BookContentLayoutController.LayoutState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for BookContentLayoutController.LayoutState.done(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v10 = *(_QWORD *)(v9 + 40);
      swift_retain(v10);
      sub_1002A9A2C();
      swift_release(v10);
      swift_release(v9);
    }
    else
    {
      v11 = swift_release(v9);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v11);
    }
  }
}

void sub_100270514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v2 = v1;
  v4 = type metadata accessor for _BookReaderInteractorState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (unsigned __int8 *)&v67 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  if (qword_1009CDD60 != -1)
    swift_once(&qword_1009CDD60, sub_10026FE20);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100048F64(v19, (uint64_t)qword_1009D5AF8);
  sub_100270BE8(a1, (uint64_t)v18);
  sub_100270BE8(a1, (uint64_t)v15);
  sub_100270BE8(a1, (uint64_t)v12);
  v21 = sub_100270BE8(a1, (uint64_t)v9);
  v72 = v20;
  v22 = Logger.logObject.getter(v21);
  v26 = static os_log_type_t.debug.getter(v22, v23, v24, v25);
  if (os_log_type_enabled(v22, (os_log_type_t)v26))
  {
    v69 = v26;
    v70 = v2;
    v71 = v6;
    v27 = swift_slowAlloc(34, -1);
    v68 = swift_slowAlloc(64, -1);
    v74 = v68;
    *(_DWORD *)v27 = 136446978;
    v28 = BookThemeType.description.getter(v18[2]);
    v30 = v29;
    v73 = sub_100040F58(v28, v29, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease(v30);
    sub_100270BAC((uint64_t)v18);
    *(_WORD *)(v27 + 12) = 2082;
    v31 = BookThemeVariant.description.getter(v15[3]);
    v33 = v32;
    v73 = sub_100040F58(v31, v32, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v27 + 14, v27 + 22);
    swift_bridgeObjectRelease(v33);
    sub_100270BAC((uint64_t)v15);
    *(_WORD *)(v27 + 22) = 1024;
    v34 = v12[4];
    sub_100270BAC((uint64_t)v12);
    LODWORD(v73) = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, (char *)&v73 + 4, v27 + 24, v27 + 28);
    *(_WORD *)(v27 + 28) = 1024;
    v35 = PageNavigationStyle.rawValue.getter(*v9);
    v37 = v36;
    v39 = PageNavigationStyle.rawValue.getter(3);
    v40 = v38;
    if (v35 == v39 && v37 == v38)
    {
      swift_bridgeObjectRelease_n(v37, 2);
    }
    else
    {
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v40);
      v42 = 0;
      if ((v41 & 1) == 0)
      {
LABEL_10:
        sub_100270BAC((uint64_t)v9);
        LODWORD(v73) = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, (char *)&v73 + 4, v27 + 30, v27 + 34);
        _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v69, "Handling Change to %{public}s-%{public}s, darkBackground:%{BOOL}d, scrollEnabled: %{BOOL}d", (uint8_t *)v27, 0x22u);
        v43 = v68;
        swift_arrayDestroy(v68, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v27, -1, -1);

        v2 = v70;
        v6 = v71;
        goto LABEL_11;
      }
    }
    v42 = 1;
    goto LABEL_10;
  }
  sub_100270BAC((uint64_t)v9);
  sub_100270BAC((uint64_t)v12);
  sub_100270BAC((uint64_t)v18);
  sub_100270BAC((uint64_t)v15);

LABEL_11:
  sub_1002A955C(*(_BYTE *)(v2 + 18));
  v44 = *(unsigned __int8 *)(a1 + 2);
  v45 = BookThemeType.rawValue.getter(*(unsigned __int8 *)(v2 + 16));
  v47 = v46;
  v49 = BookThemeType.rawValue.getter(v44);
  v50 = v48;
  if (v45 == v49 && v47 == v48)
  {
    swift_bridgeObjectRelease_n(v47, 2);
    sub_100270BE8(a1, (uint64_t)v6);
  }
  else
  {
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v50);
    sub_100270BE8(a1, (uint64_t)v6);
    if ((v51 & 1) == 0)
    {
LABEL_18:
      sub_100270BAC((uint64_t)v6);
      return;
    }
  }
  v52 = v6[3];
  v53 = BookThemeVariant.rawValue.getter(*(unsigned __int8 *)(v2 + 17));
  v55 = v54;
  v57 = BookThemeVariant.rawValue.getter(v52);
  v58 = v56;
  if (v53 == v57 && v55 == v56)
  {
    swift_bridgeObjectRelease_n(v55, 2);
    goto LABEL_18;
  }
  v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0);
  swift_bridgeObjectRelease(v55);
  swift_bridgeObjectRelease(v58);
  v60 = sub_100270BAC((uint64_t)v6);
  if ((v59 & 1) == 0)
  {
    v61 = Logger.logObject.getter(v60);
    v65 = static os_log_type_t.debug.getter(v61, v62, v63, v64);
    if (os_log_type_enabled(v61, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v65, "Handling Variant Change, without waiting for layout pass", v66, 2u);
      swift_slowDealloc(v66, -1, -1);
    }

    sub_1002A9A2C();
  }
}

uint64_t sub_100270A54()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for BookReaderThemeChangeWatcher()
{
  return objc_opt_self(_TtC5Books28BookReaderThemeChangeWatcher);
}

uint64_t sub_100270AB0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;

  v9 = a1[2];
  *(_QWORD *)(v4 + 48) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v4 + 16) = v9;
  *(_BYTE *)(v4 + 17) = a1[3];
  *(_BYTE *)(v4 + 18) = a1[4];
  v10 = PageNavigationStyle.rawValue.getter(*a1);
  v12 = v11;
  v13 = PageNavigationStyle.rawValue.getter(3);
  if (v10 == v13 && v12 == v14)
  {
    v17 = 1;
    v16 = v12;
  }
  else
  {
    v16 = v14;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
  }
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(v4 + 19) = v17 & 1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = a4;
  swift_retain(a2);
  swift_retain(a3);
  swift_retain(a4);
  sub_10026FE90();
  sub_100270BAC((uint64_t)a1);
  return v4;
}

uint64_t sub_100270BAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BookReaderInteractorState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100270BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BookReaderInteractorState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100270C2C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100270C50(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100270030(a1, v1);
}

void sub_100270C58(uint64_t a1)
{
  uint64_t v1;

  sub_1002703F8(a1, v1);
}

uint64_t sub_100270C60(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100030B74(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100270CA0()
{
  uint64_t result;

  sub_100009B88();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x6548656C706D6153, 0xEC00000072656461);
  qword_1009D5C90 = result;
  return result;
}

id static OS_os_log.sampleHeader.getter()
{
  if (qword_1009CDD68 != -1)
    swift_once(&qword_1009CDD68, sub_100270CA0);
  return (id)qword_1009D5C90;
}

id static OS_os_log.serviceCenter.getter()
{
  if (qword_1009CDD70 != -1)
    swift_once(&qword_1009CDD70, sub_10006A768);
  return (id)qword_1009D5C98;
}

id LanguageUtilities.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguageUtilities();
  return objc_msgSendSuper2(&v2, "init");
}

id LanguageUtilities.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguageUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id _s5Books17LanguageUtilitiesC08dominantB03forSSSgSo7JSValueC_tFZ_0(void *a1)
{
  id v2;
  id v3;

  if (!objc_msgSend(a1, "isString"))
    return 0;
  v2 = objc_msgSend(a1, "toString");
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(NLLanguageRecognizer), "dominantLanguageForString:", v2);

    if (v3)
    {
      v2 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

      return v2;
    }
    return 0;
  }
  return v2;
}

uint64_t type metadata accessor for LanguageUtilities()
{
  return objc_opt_self(BKLanguageUtilities);
}

uint64_t sub_100270F50(uint64_t a1)
{
  return sub_10001BF38(a1, qword_1009D5CC8, 0xD000000000000010, 0x80000001007BA5A0);
}

uint64_t sub_100270F74(uint64_t a1)
{
  return sub_10001BF38(a1, qword_1009D5CE0, 0xD000000000000025, 0x80000001007BA5C0);
}

uint64_t type metadata accessor for BooksDefaults()
{
  return objc_opt_self(_TtC5Books13BooksDefaults);
}

void sub_100270FB8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for Locale(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __asm { BR              X10 }
}

uint64_t sub_1002710A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;

  v8 = String.LocalizationValue.init(stringLiteral:)(0x746867694CLL, 0xE500000000000000);
  static Locale.current.getter(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v3, v2);
  v9 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v1, v0);
  v12 = String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v11, v4, "Appearance Options Menu Name", 28, 2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
  return v12;
}

uint64_t sub_1002713A4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1E3E0);
  sub_100048F64(v0, (uint64_t)qword_100A1E3E0);
  sub_100009B88();
  return static OS_os_log.be_logger(for:)(0xD000000000000010, 0x80000001007BA9F0);
}

void sub_100271414(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  uint64_t v15;
  _BYTE v16[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = Strong + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress + 8) & 1) != 0 && v2 > 0.0)
    {
      *(double *)v6 = v2;
      *(_BYTE *)(v6 + 8) = 0;
      v7 = Strong + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgressCancellable;
      swift_beginAccess(Strong + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgressCancellable, v13, 0, 0);
      sub_10000B5E4(v7, (uint64_t)v14, &qword_1009D6260);
      if (v15)
      {
        sub_10002E418((uint64_t)v14, (uint64_t)v10);
        sub_100010960((uint64_t)v14, &qword_1009D6260);
        v8 = v11;
        v9 = v12;
        sub_10003F198(v10, v11);
        dispatch thunk of Cancellable.cancel()(v8, v9);
        swift_release(v5);
        _s5Books15CurrentPageViewVwxx_0(v10);
      }
      else
      {
        swift_release(v5);
        sub_100010960((uint64_t)v14, &qword_1009D6260);
      }
    }
    else
    {
      swift_release(Strong);
    }
  }
}

uint64_t sub_100271544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  sub_1001FE9A0(v0 + 72);
  sub_1001FE9A0(v0 + 88);
  sub_1001FE9A0(v0 + 104);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate, &qword_1009D7440);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endSessionDate, &qword_1009D7440);
  v1 = v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_initialDnDState;
  v2 = type metadata accessor for DoNotDisturbStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_scrollViewState;
  v4 = type metadata accessor for ScrollViewStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_autoNightState;
  v6 = type metadata accessor for AutoNightThemeStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_backgroundColor;
  v8 = type metadata accessor for BackgroundColor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lifeCycleCancellable, &qword_1009D6260);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgressCancellable, &qword_1009D6260);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily + 8));
  sub_100010960(v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_contentDataCache, (uint64_t *)&unk_1009D60F0);
  return v0;
}

uint64_t sub_1002716BC()
{
  uint64_t v0;

  sub_100271544();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

id OrientationLockHintController.viewModel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1002716E8()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 24));
}

void sub_1002716F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[7];
  v2 = v0[8];
  sub_10003F198(v0 + 4, v1);
  v3 = (char *)sub_100271740
     + 4 * byte_1007159C0[dispatch thunk of BookEntityType.collectionType.getter(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100271740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for ContentType.book(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for ContentType)(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

void sub_100271790()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[7];
  v2 = v0[8];
  sub_10003F198(v0 + 4, v1);
  v3 = (char *)sub_1002717E0
     + 4 * byte_1007159C4[dispatch thunk of BookEntityType.collectionType.getter(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1002717E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for ContentSubType.traditional(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for ContentSubType)(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_10027183C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + 72);
}

uint64_t sub_100271858(uint64_t a1, uint64_t a2)
{
  sub_1002791EC(a1, a2);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*sub_10027187C(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;

  a1[2] = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  *a1 = Strong;
  a1[1] = v4;
  return sub_1002718B8;
}

uint64_t sub_1002718B8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = swift_unknownObjectRetain(v4);
    sub_1002791EC(v5, v3);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    sub_1002791EC(v4, v3);
  }
  return swift_unknownObjectRelease(v2);
}

uint64_t sub_10027190C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + 88);
}

uint64_t sub_100271928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a2;
  swift_unknownObjectWeakAssign(v2 + 88, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*sub_100271958(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;

  a1[2] = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  *a1 = Strong;
  a1[1] = v4;
  return sub_100271994;
}

uint64_t sub_100271994(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[2];
  v2 = *a1;
  *(_QWORD *)(v1 + 96) = a1[1];
  swift_unknownObjectWeakAssign(v1 + 88, v2);
  return swift_unknownObjectRelease(v2);
}

uint64_t sub_1002719CC()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 104, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 104);
}

uint64_t sub_100271A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 104, v6, 1, 0);
  *(_QWORD *)(v2 + 112) = a2;
  swift_unknownObjectWeakAssign(v2 + 104, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_100271A70(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 104, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_100271ADC;
}

void sub_100271ADC(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 104, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_100271B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _QWORD v16[3];
  uint64_t v17;
  void *v18;

  v3 = v1 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lifeCycleCancellable;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lifeCycleCancellable, v15, 0, 0);
  sub_10000B5E4(v3, (uint64_t)v16, &qword_1009D6260);
  if (v17)
  {
    sub_10002E418((uint64_t)v16, (uint64_t)v12);
    sub_100010960((uint64_t)v16, &qword_1009D6260);
    v4 = v13;
    v5 = v14;
    sub_10003F198(v12, v13);
    dispatch thunk of Cancellable.cancel()(v4, v5);
    result = _s5Books15CurrentPageViewVwxx_0(v12);
    if (!a1)
      return result;
  }
  else
  {
    result = sub_100010960((uint64_t)v16, &qword_1009D6260);
    if (!a1)
      return result;
  }
  v16[0] = a1;
  v7 = swift_allocObject(&unk_1008F7DD0, 24, 7);
  swift_weakInit(v7 + 16, v1);
  swift_retain(a1);
  v8 = sub_10004CFD4(&qword_1009D6268);
  v9 = sub_100030B34((unint64_t *)&unk_1009D6270, &qword_1009D6268, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v10 = Publisher<>.sink(receiveValue:)(sub_100279E44, v7, v8, v9);
  swift_release(v7);
  v17 = type metadata accessor for AnyCancellable(0);
  v18 = &protocol witness table for AnyCancellable;
  swift_release(a1);
  v16[0] = v10;
  sub_100025B3C((uint64_t)v16, (uint64_t)v12, &qword_1009D6260);
  swift_beginAccess(v3, v11, 33, 0);
  sub_10000B558((uint64_t)v12, v3, &qword_1009D6260);
  return swift_endAccess(v11);
}

uint64_t sub_100271D10(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Event;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  double v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  char *v41;
  _BYTE v42[24];

  v2 = v1;
  v40 = a1;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D60F0);
  __chkstk_darwin(v3);
  v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v39 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - v11;
  Event = type metadata accessor for ReadEvent(0);
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v16(v12, 1, 1, v14);
  v17 = sub_100008DB0(&qword_1009D61E0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadEvent, (uint64_t)&protocol conformance descriptor for ReadEvent);
  BATracker.time<A>(_:startTime:)(Event, v12, Event, v17);
  sub_100010960((uint64_t)v12, &qword_1009D7440);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, v40, v14);
  v16(v12, 0, 1, v14);
  sub_100025B3C((uint64_t)v12, (uint64_t)v9, &qword_1009D7440);
  v18 = (uint64_t)v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate, v42, 33, 0);
  sub_10000B558((uint64_t)v9, v18, &qword_1009D7440);
  swift_endAccess(v42);
  v19 = (double *)((char *)v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress);
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress + 8) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 9);
    if (Strong)
    {
      v21 = Strong;
      v22 = v2[10];
      ObjectType = swift_getObjectType();
      v24 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(ObjectType, v22));
      LOBYTE(v22) = v25;
      swift_unknownObjectRelease(v21);
      if ((v22 & 1) == 0 && v24 > 0.0)
      {
        *v19 = v24;
        *((_BYTE *)v19 + 8) = 0;
      }
    }
  }
  v26 = v2[7];
  v27 = v2[8];
  sub_10003F198(v2 + 4, v26);
  v28 = dispatch thunk of BookEntityType.assetID.getter(v26, v27);
  v30 = v29;
  sub_100279628(v28, v29);
  swift_bridgeObjectRelease(v30);
  if ((BATracker.optedIn.getter(v31) & 1) != 0)
  {
    v32 = type metadata accessor for TaskPriority(0);
    v33 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v39, 1, 1, v32);
    v34 = (_QWORD *)swift_allocObject(&unk_1008F7D90, 40, 7);
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = v2;
    swift_retain(v2);
    v35 = sub_10030C02C(v33, (uint64_t)&unk_1009D6250, (uint64_t)v34);
    swift_release(v35);
  }
  v36 = v41;
  sub_1002729C0(v41);
  v37 = (uint64_t)v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_contentDataCache;
  swift_beginAccess(v37, v42, 33, 0);
  sub_10000B558((uint64_t)v36, v37, (uint64_t *)&unk_1009D60F0);
  return swift_endAccess(v42);
}

double sub_10027206C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  char v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  __n128 v51;
  double result;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D60E8);
  v57 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v5;
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v53 - v7;
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D60F0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v56 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - v12;
  __chkstk_darwin(v14);
  v55 = (char *)&v53 - v15;
  v16 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v53 - v20;
  v22 = type metadata accessor for Date(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a1, v22);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v25 = 1;
  v24(v21, 0, 1, v22);
  sub_100025B3C((uint64_t)v21, (uint64_t)v18, &qword_1009D7440);
  v26 = v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endSessionDate;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endSessionDate, v60, 33, 0);
  sub_10000B558((uint64_t)v18, v26, &qword_1009D7440);
  swift_endAccess(v60);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 72);
  if (Strong)
  {
    v28 = Strong;
    v29 = *(_QWORD *)(v2 + 80);
    ObjectType = swift_getObjectType();
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(ObjectType, v29);
    LOBYTE(v29) = v32;
    swift_unknownObjectRelease(v28);
    v25 = v29 & 1;
  }
  else
  {
    v31 = 0;
  }
  v33 = v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endProgress;
  *(_QWORD *)v33 = v31;
  *(_BYTE *)(v33 + 8) = v25;
  v34 = v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_contentDataCache;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_contentDataCache, v60, 0, 0);
  sub_10000B5E4(v34, (uint64_t)v13, (uint64_t *)&unk_1009D60F0);
  v35 = type metadata accessor for ContentData(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v13, 1, v35) == 1)
  {
    v37 = v55;
    sub_1002729C0(v55);
    sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009D60F0);
  }
  else
  {
    v37 = v55;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v55, v13, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
  }
  v38 = v54;
  v39 = v9;
  v40 = swift_allocObject(&unk_1008F7CD8, 24, 7);
  v55 = *(char **)(v2 + 16);
  *(_QWORD *)(v40 + 16) = BATracker.newSessionAssertion()();
  v41 = v59;
  sub_100272E50(v59);
  v42 = v56;
  sub_10000B5E4((uint64_t)v37, v56, (uint64_t *)&unk_1009D60F0);
  v43 = v58;
  sub_10000B5E4(v41, v58, &qword_1009D60E8);
  v44 = *(unsigned __int8 *)(v39 + 80);
  v45 = (v44 + 24) & ~v44;
  v46 = (v10 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = *(unsigned __int8 *)(v57 + 80);
  v48 = (v47 + v46 + 8) & ~v47;
  v49 = swift_allocObject(&unk_1008F7D00, v48 + v38, v44 | v47 | 7);
  *(_QWORD *)(v49 + 16) = v40;
  sub_100025B3C(v42, v49 + v45, (uint64_t *)&unk_1009D60F0);
  *(_QWORD *)(v49 + v46) = v2;
  sub_100025B3C(v43, v49 + v48, &qword_1009D60E8);
  v50 = (_QWORD *)swift_allocObject(&unk_1008F7D28, 40, 7);
  v50[2] = v2;
  v50[3] = &unk_1009D6168;
  v50[4] = v49;
  swift_retain_n(v2, 2);
  swift_retain(v40);
  v51 = swift_retain(v49);
  BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_10027912C, v50, v51);
  swift_release(v49);
  swift_release(v50);
  sub_100010960(v41, &qword_1009D60E8);
  sub_100010960((uint64_t)v37, (uint64_t *)&unk_1009D60F0);
  *(_QWORD *)&result = swift_release(v40).n128_u64[0];
  return result;
}

double sub_1002724F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_100272554(v2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_100272554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100279810(a1);
  if (a1 == 2)
  {
    Date.init()(v6);
    v7.n128_f64[0] = sub_10027206C((uint64_t)v5);
    goto LABEL_5;
  }
  if (a1 == 1)
  {
    Date.init()(v6);
    sub_100271D10((uint64_t)v5);
LABEL_5:
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v7);
    return;
  }
  if (qword_1009CDD88 != -1)
    swift_once(&qword_1009CDD88, sub_1002713A4);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100048F64(v8, (uint64_t)qword_100A1E3E0);
  v18 = Logger.logObject.getter(v9);
  v10 = static os_log_type_t.info.getter(v18);
  if (os_log_type_enabled(v18, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v20 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = 0xEC00000065736163;
    v14 = 0x206E776F6E6B6E75;
    if (a1 == 3)
    {
      v14 = 0x7061736944646964;
      v13 = 0xEC00000072616570;
    }
    if (a1)
      v15 = v14;
    else
      v15 = 0x7465736E75;
    if (a1)
      v16 = v13;
    else
      v16 = 0xE500000000000000;
    v19 = sub_100040F58(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v18, v10, "Unhandled lifeCycle event: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1002727B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[18] = a4;
  v5 = type metadata accessor for DoNotDisturbStatus(0);
  v4[19] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[20] = v6;
  v4[21] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100272814, 0, 0);
}

uint64_t sub_100272814()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)objc_opt_self(BADoNotDisturbHelper);
  v0[7] = v0 + 22;
  v0[2] = v0;
  v0[3] = sub_1002728BC;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_10021A6F4;
  v4[3] = &unk_1008F7DA8;
  v4[4] = v3;
  objc_msgSend(v2, "fetchCurrentState:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_1002728BC()
{
  return swift_task_switch(sub_100272908, 0, 0);
}

uint64_t sub_100272908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  if (*(_BYTE *)(v0 + 176))
    v5 = (unsigned int *)&enum case for DoNotDisturbStatus.on(_:);
  else
    v5 = (unsigned int *)&enum case for DoNotDisturbStatus.off(_:);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 104))(*(_QWORD *)(v0 + 168), *v5, *(_QWORD *)(v0 + 152));
  v6 = v4 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_initialDnDState;
  swift_beginAccess(v6, v0 + 120, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40))(v6, v1, v3);
  swift_endAccess(v0 + 120);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002729C0@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _BYTE v53[24];

  v2 = v1;
  v4 = type metadata accessor for BooksFeatureFlag(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D60F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for ContentData(0);
  v11 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 88);
  if (Strong)
  {
    v15 = Strong;
    v50 = v5;
    v51 = a1;
    v16 = *(_QWORD *)(v2 + 96);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
    v18 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v52) == 1)
    {
      v19 = v11;
      sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D60F0);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16) & 1) != 0)
      {
        v20 = v51;
        if (qword_1009CDD88 != -1)
          swift_once(&qword_1009CDD88, sub_1002713A4);
        v21 = type metadata accessor for Logger(0);
        v22 = sub_100048F64(v21, (uint64_t)qword_100A1E3E0);
        v23 = Logger.logObject.getter(v22);
        v24 = static os_log_type_t.error.getter(v23);
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v25 = 0;
          swift_slowDealloc(v25, -1, -1);
          swift_unknownObjectRelease(v15);

        }
        else
        {

          swift_unknownObjectRelease(v15);
        }
      }
      else
      {
        swift_unknownObjectRelease(v15);
        v20 = v51;
      }
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, 1, 1, v52);
    }
    else
    {
      v49 = v11;
      v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v33(v13, v10, v18);
      swift_beginAccess(v2 + 104, v53, 0, 0);
      v34 = swift_unknownObjectWeakLoadStrong(v2 + 104);
      if (v34)
      {
        v35 = v34;
        v36 = *(_QWORD *)(v2 + 112);
        v37 = swift_getObjectType();
        v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v37, v36);
        swift_unknownObjectRelease(v35);
        if (v38)
        {
          v39 = v50;
          (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v7, enum case for BooksFeatureFlag.unifiedProductPage(_:), v4);
          v40 = sub_100008DB0((unint64_t *)&unk_1009D6230, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
          v41 = sub_100030B34((unint64_t *)&qword_1009E7660, &qword_1009D6240, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
          LOBYTE(v40) = RawRepresentable<>.isEnabled.getter(v4, v40, v41);
          v42 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v7, v4);
          if ((v40 & 1) != 0)
          {
            v43 = AppAnalyticsAdditionalData.supportsUnifiedProductPage.getter(v42);
            v44 = ContentData.isUnified.setter(v43 & 1);
            v45 = AppAnalyticsAdditionalData.editionKind.getter(v44);
            ContentData.contentKind.setter(v45);
          }

        }
      }
      swift_unknownObjectRelease(v15);
      v46 = v51;
      v47 = v52;
      v33(v51, v13, v52);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v47);
    }
  }
  else
  {
    v26 = v11;
    if (qword_1009CDD88 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100048F64(v27, (uint64_t)qword_100A1E3E0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.info.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      swift_slowDealloc(v31, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(a1, 1, 1, v52);
  }
}

uint64_t sub_100272E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t (**v5)(_QWORD, _QWORD);
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  __n128 v20;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(uint64_t (***)(_QWORD, _QWORD))(v1 + 80);
    ObjectType = swift_getObjectType();
    v7 = v5[3](ObjectType, v5);
    v8 = v5[4](ObjectType, v5);
    v9 = v5[5](ObjectType, v5);
    static ContentSettingsData.data(bookmarkCount:noteCount:highlightCount:)(v7, v8, v9);
    v10 = swift_unknownObjectRelease(v4);
    v11 = type metadata accessor for ContentSettingsData(0, v10);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a1;
    v14 = 0;
  }
  else
  {
    if (qword_1009CDD88 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048F64(v15, (uint64_t)qword_100A1E3E0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      swift_slowDealloc(v19, -1, -1);
    }

    v11 = type metadata accessor for ContentSettingsData(0, v20);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a1;
    v14 = 1;
  }
  return v12(v13, v14, 1, v11);
}

uint64_t sub_100272FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4[35] = a3;
  v4[36] = a4;
  v4[33] = a1;
  v4[34] = a2;
  v5 = type metadata accessor for Date(0);
  v4[37] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[38] = v6;
  v4[39] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[40] = swift_task_alloc(v7);
  v4[41] = swift_task_alloc(v7);
  v8 = type metadata accessor for DoNotDisturbData(0);
  v4[42] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[43] = v9;
  v4[44] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DoNotDisturbStatus(0);
  v4[45] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[46] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[47] = swift_task_alloc(v12);
  v4[48] = swift_task_alloc(v12);
  v4[49] = swift_task_alloc(v12);
  v4[50] = swift_task_alloc(v12);
  v4[51] = swift_task_alloc(v12);
  v13 = type metadata accessor for UpSellData(0);
  v4[52] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[53] = v14;
  v4[54] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ReadingSessionData(0);
  v4[55] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[56] = v16;
  v4[57] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ReadingSettingsData(0);
  v4[58] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v4[59] = v18;
  v4[60] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D60E8);
  v4[61] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ContentSettingsData(0, v20);
  v4[62] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v4[63] = v22;
  v4[64] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D60F0);
  v4[65] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v23 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContentData(0);
  v4[66] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v4[67] = v25;
  v4[68] = swift_task_alloc((*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MainActor(0);
  v4[69] = static MainActor.shared.getter(v26);
  v27 = dispatch thunk of Actor.unownedExecutor.getter(v26, &protocol witness table for MainActor);
  v4[70] = v27;
  v4[71] = v28;
  return swift_task_switch(sub_100273244, v27, v28);
}

uint64_t sub_100273244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t Strong;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, __n128);
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t Event;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSString v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  void (*v133)(uint64_t, _QWORD, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  sub_10000B5E4(*(_QWORD *)(v0 + 272), v3, (uint64_t *)&unk_1009D60F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_100010960(*(_QWORD *)(v0 + 520), (uint64_t *)&unk_1009D60F0);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 544);
    v5 = *(_QWORD *)(v0 + 536);
    v6 = *(_QWORD *)(v0 + 528);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 32))(v4, *(_QWORD *)(v0 + 520), v6);
    v7 = sub_10004CFD4(&qword_1009D2438);
    v8 = type metadata accessor for DataEventTrait(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = swift_allocObject(v7, v11 + *(_QWORD *)(v9 + 72), v10 | 7);
    *(_OWORD *)(v12 + 16) = xmmword_10070CCA0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12 + v11, enum case for DataEventTrait.onlyOnce(_:), v8);
    v13 = sub_100008DB0(&qword_1009D6208, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
    v14 = sub_100008DB0(&qword_1009D6210, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
    BATracker.push<A>(data:traits:file:line:)(v4, v12, 0xD000000000000065, 0x80000001007BA980, 172, v6, v13, v14);
    swift_bridgeObjectRelease(v12);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v15 = *(_QWORD *)(v0 + 280);
  v16 = (double *)(v15 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress);
  if ((*(_BYTE *)(v15 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress + 8) & 1) == 0)
  {
    v17 = v15 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endProgress;
    if ((*(_BYTE *)(v17 + 8) & 1) == 0)
    {
      if ((v18 = *v16, *(double *)v17 >= 0.5) && v18 < 0.5 || *(double *)v17 >= 0.9 && v18 < 0.9)
      {
        v19 = *(_QWORD *)(v0 + 496);
        v20 = *(_QWORD *)(v0 + 504);
        v21 = *(_QWORD *)(v0 + 488);
        sub_10000B5E4(*(_QWORD *)(v0 + 288), v21, &qword_1009D60E8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
        {
          sub_100010960(*(_QWORD *)(v0 + 488), &qword_1009D60E8);
        }
        else
        {
          v23 = *(_QWORD *)(v0 + 504);
          v22 = *(_QWORD *)(v0 + 512);
          v24 = *(_QWORD *)(v0 + 496);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 32))(v22, *(_QWORD *)(v0 + 488), v24);
          v25 = sub_10004CFD4(&qword_1009D2438);
          v26 = type metadata accessor for DataEventTrait(0);
          v27 = *(_QWORD *)(v26 - 8);
          v28 = *(unsigned __int8 *)(v27 + 80);
          v29 = (v28 + 32) & ~v28;
          v30 = swift_allocObject(v25, v29 + *(_QWORD *)(v27 + 72), v28 | 7);
          *(_OWORD *)(v30 + 16) = xmmword_10070CCA0;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v30 + v29, enum case for DataEventTrait.onlyOnce(_:), v26);
          v31 = sub_100008DB0(&qword_1009D61F8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSettingsData, (uint64_t)&protocol conformance descriptor for ContentSettingsData);
          v32 = sub_100008DB0(&qword_1009D6200, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSettingsData, (uint64_t)&protocol conformance descriptor for ContentSettingsData);
          BATracker.push<A>(data:traits:file:line:)(v22, v30, 0xD000000000000065, 0x80000001007BA980, 180, v24, v31, v32);
          swift_bridgeObjectRelease(v30);
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
        }
      }
    }
  }
  v33 = *(_QWORD *)(v0 + 480);
  v134 = *(_QWORD *)(v0 + 464);
  v136 = *(_QWORD *)(v0 + 472);
  v146 = *(_QWORD *)(v0 + 448);
  v138 = *(_QWORD *)(v0 + 456);
  v142 = *(_QWORD *)(v0 + 440);
  v161 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 576) = *(_QWORD *)(v161 + 16);
  sub_10027449C(v33);
  v34 = sub_10004CFD4(&qword_1009D2438);
  *(_QWORD *)(v0 + 584) = v34;
  v156 = v34;
  v35 = type metadata accessor for DataEventTrait(0);
  *(_QWORD *)(v0 + 592) = v35;
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 72);
  *(_QWORD *)(v0 + 600) = v37;
  LODWORD(v38) = *(_DWORD *)(v36 + 80);
  *(_DWORD *)(v0 + 624) = v38;
  v38 = v38;
  v39 = (v38 + 32) & ~v38;
  v131 = v39 + v37;
  v153 = v38 | 7;
  v40 = swift_allocObject(v34, v39 + v37, v153);
  *(_OWORD *)(v40 + 16) = xmmword_10070CCA0;
  v41 = enum case for DataEventTrait.onlyOnce(_:);
  *(_DWORD *)(v0 + 628) = enum case for DataEventTrait.onlyOnce(_:);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 104);
  *(_QWORD *)(v0 + 608) = v42;
  v42(v40 + v39, v41, v35);
  v43 = sub_100008DB0(&qword_1009D61B0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSettingsData, (uint64_t)&protocol conformance descriptor for ReadingSettingsData);
  v44 = sub_100008DB0(&qword_1009D61B8, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSettingsData, (uint64_t)&protocol conformance descriptor for ReadingSettingsData);
  BATracker.push<A>(data:traits:file:line:)(v33, v40, 0xD000000000000065, 0x80000001007BA980, 183, v134, v43, v44);
  swift_bridgeObjectRelease(v40);
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v33, v134);
  sub_10027488C();
  v45 = swift_allocObject(v156, v131, v153);
  *(_OWORD *)(v45 + 16) = xmmword_10070CCA0;
  v137 = v39;
  v128 = v35;
  v46 = v35;
  v47 = v42;
  v42(v45 + v39, v41, v46);
  v48 = sub_100008DB0(&qword_1009D61C0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSessionData, (uint64_t)&protocol conformance descriptor for ReadingSessionData);
  v49 = sub_100008DB0(&qword_1009D61C8, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSessionData, (uint64_t)&protocol conformance descriptor for ReadingSessionData);
  BATracker.push<A>(data:traits:file:line:)(v138, v45, 0xD000000000000065, 0x80000001007BA980, 185, v142, v48, v49);
  swift_bridgeObjectRelease(v45);
  (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v138, v142);
  swift_beginAccess(v161 + 104, v0 + 168, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v161 + 104);
  if (Strong)
  {
    v51 = Strong;
    v52 = *(_QWORD *)(*(_QWORD *)(v0 + 280) + 112);
    ObjectType = swift_getObjectType();
    v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(ObjectType, v52);
    Strong = swift_unknownObjectRelease(v51);
    if (v54)
    {
      v56 = *(_QWORD *)(v0 + 424);
      v55 = *(_QWORD *)(v0 + 432);
      v57 = *(_QWORD *)(v0 + 416);
      dispatch thunk of BridgedUpSellData.swiftType.getter(Strong);
      v58 = swift_allocObject(v156, v131, v153);
      *(_OWORD *)(v58 + 16) = xmmword_10070CCA0;
      v47(v58 + v137, v41, v128);
      v59 = sub_100008DB0(&qword_1009D61E8, (uint64_t (*)(uint64_t))&type metadata accessor for UpSellData, (uint64_t)&protocol conformance descriptor for UpSellData);
      v60 = sub_100008DB0(&qword_1009D61F0, (uint64_t (*)(uint64_t))&type metadata accessor for UpSellData, (uint64_t)&protocol conformance descriptor for UpSellData);
      BATracker.push<A>(data:traits:file:line:)(v55, v58, 0xD000000000000065, 0x80000001007BA980, 188, v57, v59, v60);
      swift_bridgeObjectRelease(v58);

      Strong = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
    }
  }
  v61 = BATracker.optedIn.getter(Strong);
  v62 = *(_QWORD *)(v0 + 360);
  v63 = *(_QWORD *)(v0 + 368);
  if ((v61 & 1) != 0)
  {
    v64 = v0 + 16;
    v65 = *(_QWORD *)(v0 + 408);
    v66 = *(_QWORD *)(v0 + 280) + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_initialDnDState;
    v67 = swift_beginAccess(v66, v0 + 192, 0, 0);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v63 + 16);
    *(_QWORD *)(v0 + 616) = v68;
    v68(v65, v66, v62, v67);
    v69 = (void *)objc_opt_self(BADoNotDisturbHelper);
    *(_QWORD *)(v0 + 56) = v0 + 632;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_100273EFC;
    v70 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v71 = (_QWORD *)(v0 + 80);
    v71[1] = 0x40000000;
    v71[2] = sub_10021A6F4;
    v71[3] = &unk_1008F7D68;
    v71[4] = v70;
    objc_msgSend(v69, "fetchCurrentState:", v71);
    return swift_continuation_await(v64);
  }
  else
  {
    v157 = v0 + 120;
    v74 = *(_QWORD *)(v0 + 400);
    v73 = *(_QWORD *)(v0 + 408);
    v75 = swift_release(*(_QWORD *)(v0 + 552));
    v76 = enum case for DoNotDisturbStatus.unknown(_:);
    v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 104);
    ((void (*)(uint64_t, _QWORD, uint64_t, __n128))v77)(v73, enum case for DoNotDisturbStatus.unknown(_:), v62, v75);
    v77(v74, v76, v62);
    v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
    v132 = *(_DWORD *)(v0 + 628);
    v79 = *(unsigned __int8 *)(v0 + 624);
    v130 = *(_QWORD *)(v0 + 592);
    v129 = *(_QWORD *)(v0 + 584);
    v80 = *(_QWORD *)(v0 + 400);
    v81 = *(_QWORD *)(v0 + 376);
    v82 = *(_QWORD *)(v0 + 384);
    v84 = *(_QWORD *)(v0 + 352);
    v83 = *(_QWORD *)(v0 + 360);
    v133 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 608);
    v135 = *(_QWORD *)(v0 + 336);
    v143 = *(_QWORD *)(v0 + 328);
    v147 = *(_QWORD *)(v0 + 304);
    v150 = *(_QWORD *)(v0 + 296);
    v85 = (v79 + 32) & ~v79;
    v86 = v85 + *(_QWORD *)(v0 + 600);
    v87 = v79 | 7;
    v139 = *(_QWORD *)(v0 + 280);
    v78(v82, *(_QWORD *)(v0 + 408), v83);
    v78(v81, v80, v83);
    DoNotDisturbData.init(startStatus:endStatus:)(v82, v81);
    v88 = swift_allocObject(v129, v86, v87);
    *(_OWORD *)(v88 + 16) = xmmword_10070CCA0;
    v133(v88 + v85, v132, v130);
    v89 = sub_100008DB0(&qword_1009D61D0, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
    v90 = sub_100008DB0(&qword_1009D61D8, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
    BATracker.push<A>(data:traits:file:line:)(v84, v88, 0xD000000000000065, 0x80000001007BA980, 202, v135, v89, v90);
    swift_bridgeObjectRelease(v88);
    Event = type metadata accessor for ReadEvent(0);
    v92 = sub_100008DB0(&qword_1009D61E0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadEvent, (uint64_t)&protocol conformance descriptor for ReadEvent);
    BATracker.submit<A>(_:completion:)(Event, sub_100274A38, 0, Event, v92);
    v93 = v139 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate;
    swift_beginAccess(v139 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate, v0 + 216, 0, 0);
    sub_10000B5E4(v93, v143, &qword_1009D7440);
    v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v143, 1, v150);
    v95 = *(_QWORD *)(v0 + 328);
    if (v94)
    {
      sub_100010960(*(_QWORD *)(v0 + 328), &qword_1009D7440);
      v96 = 0.0;
    }
    else
    {
      v98 = *(_QWORD *)(v0 + 304);
      v97 = *(_QWORD *)(v0 + 312);
      v99 = *(_QWORD *)(v0 + 296);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v98 + 16))(v97, *(_QWORD *)(v0 + 328), v99);
      v100 = sub_100010960(v95, &qword_1009D7440);
      v96 = Date.timeIntervalSinceNow.getter(v100);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
    }
    v159 = *(_QWORD *)(v0 + 408);
    v101 = *(_QWORD *)(v0 + 360);
    v102 = *(_QWORD *)(v0 + 344);
    v144 = *(_QWORD *)(v0 + 352);
    v148 = *(_QWORD *)(v0 + 368);
    v140 = *(_QWORD *)(v0 + 336);
    v103 = *(_QWORD *)(v0 + 320);
    v104 = *(_QWORD **)(v0 + 280);
    v151 = (id *)(*(_QWORD *)(v0 + 264) + 16);
    v154 = *(_QWORD *)(v0 + 400);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 56))(v103, 1, 1, *(_QWORD *)(v0 + 296));
    swift_beginAccess(v93, v157, 33, 0);
    sub_10000B558(v103, v93, &qword_1009D7440);
    swift_endAccess(v157);
    v105 = (void *)v104[3];
    v106 = v104[7];
    v107 = v104[8];
    sub_10003F198(v104 + 4, v106);
    dispatch thunk of BookEntityType.assetID.getter(v106, v107);
    v109 = v108;
    v110 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v109);
    objc_msgSend(v105, "readSessionDidEnd:readTime:", v110, -v96);

    v111 = v104[7];
    v112 = v104[8];
    sub_10003F198(v104 + 4, v111);
    v113 = dispatch thunk of BookEntityType.assetID.getter(v111, v112);
    v115 = v114;
    sub_100279A6C(v113, v114);
    swift_bridgeObjectRelease(v115);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v144, v140);
    v116 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
    v116(v154, v101);
    v116(v159, v101);
    *(_QWORD *)&v117 = swift_beginAccess(v151, v0 + 144, 0, 0).n128_u64[0];
    if (*v151)
      objc_msgSend(*v151, "invalidate", v117);
    v118 = *(_QWORD *)(v0 + 544);
    v119 = *(_QWORD *)(v0 + 520);
    v120 = *(_QWORD *)(v0 + 512);
    v122 = *(_QWORD *)(v0 + 480);
    v121 = *(_QWORD *)(v0 + 488);
    v123 = *(_QWORD *)(v0 + 456);
    v124 = *(_QWORD *)(v0 + 432);
    v125 = *(_QWORD *)(v0 + 408);
    v141 = *(_QWORD *)(v0 + 400);
    v145 = *(_QWORD *)(v0 + 392);
    v149 = *(_QWORD *)(v0 + 384);
    v152 = *(_QWORD *)(v0 + 376);
    v160 = *(_QWORD *)(v0 + 328);
    v126 = *(_QWORD *)(v0 + 264);
    v155 = *(_QWORD *)(v0 + 352);
    v158 = *(_QWORD *)(v0 + 320);
    v162 = *(_QWORD *)(v0 + 312);
    swift_beginAccess(v126 + 16, v0 + 240, 1, 0);
    v127 = *(_QWORD *)(v126 + 16);
    *(_QWORD *)(v126 + 16) = 0;
    swift_unknownObjectRelease(v127);
    swift_task_dealloc(v118);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v121);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v141);
    swift_task_dealloc(v145);
    swift_task_dealloc(v149);
    swift_task_dealloc(v152);
    swift_task_dealloc(v155);
    swift_task_dealloc(v160);
    swift_task_dealloc(v158);
    swift_task_dealloc(v162);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100273EFC()
{
  uint64_t v0;

  return swift_task_switch(sub_100273F44, *(_QWORD *)(*(_QWORD *)v0 + 560), *(_QWORD *)(*(_QWORD *)v0 + 568));
}

uint64_t sub_100273F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  unsigned int *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Event;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  void (*v62)(uint64_t, _QWORD, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v80 = v0 + 120;
  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = swift_release(*(_QWORD *)(v0 + 552));
  if (*(_BYTE *)(v0 + 632))
    v6 = (unsigned int *)&enum case for DoNotDisturbStatus.on(_:);
  else
    v6 = (unsigned int *)&enum case for DoNotDisturbStatus.off(_:);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v3 + 104))(v1, *v6, v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v4);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 616);
  v61 = *(_DWORD *)(v0 + 628);
  v8 = *(unsigned __int8 *)(v0 + 624);
  v60 = *(_QWORD *)(v0 + 592);
  v59 = *(_QWORD *)(v0 + 584);
  v9 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 376);
  v11 = *(_QWORD *)(v0 + 384);
  v13 = *(_QWORD *)(v0 + 352);
  v12 = *(_QWORD *)(v0 + 360);
  v62 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 608);
  v63 = *(_QWORD *)(v0 + 336);
  v69 = *(_QWORD *)(v0 + 328);
  v72 = *(_QWORD *)(v0 + 304);
  v75 = *(_QWORD *)(v0 + 296);
  v14 = (v8 + 32) & ~v8;
  v15 = v14 + *(_QWORD *)(v0 + 600);
  v16 = v8 | 7;
  v66 = *(_QWORD *)(v0 + 280);
  v7(v11, *(_QWORD *)(v0 + 408), v12);
  v7(v10, v9, v12);
  v17 = v13;
  DoNotDisturbData.init(startStatus:endStatus:)(v11, v10);
  v18 = swift_allocObject(v59, v15, v16);
  *(_OWORD *)(v18 + 16) = xmmword_10070CCA0;
  v62(v18 + v14, v61, v60);
  v19 = sub_100008DB0(&qword_1009D61D0, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
  v20 = sub_100008DB0(&qword_1009D61D8, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
  BATracker.push<A>(data:traits:file:line:)(v17, v18, 0xD000000000000065, 0x80000001007BA980, 202, v63, v19, v20);
  swift_bridgeObjectRelease(v18);
  Event = type metadata accessor for ReadEvent(0);
  v22 = sub_100008DB0(&qword_1009D61E0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadEvent, (uint64_t)&protocol conformance descriptor for ReadEvent);
  BATracker.submit<A>(_:completion:)(Event, sub_100274A38, 0, Event, v22);
  v23 = v66 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate;
  swift_beginAccess(v66 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate, v0 + 216, 0, 0);
  sub_10000B5E4(v23, v69, &qword_1009D7440);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v69, 1, v75);
  v25 = *(_QWORD *)(v0 + 328);
  if (v24)
  {
    sub_100010960(*(_QWORD *)(v0 + 328), &qword_1009D7440);
    v26 = 0.0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 312);
    v29 = *(_QWORD *)(v0 + 296);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 16))(v27, *(_QWORD *)(v0 + 328), v29);
    v30 = sub_100010960(v25, &qword_1009D7440);
    v26 = Date.timeIntervalSinceNow.getter(v30);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }
  v76 = *(_QWORD *)(v0 + 400);
  v78 = *(_QWORD *)(v0 + 408);
  v31 = *(_QWORD *)(v0 + 360);
  v32 = *(_QWORD *)(v0 + 344);
  v67 = *(_QWORD *)(v0 + 352);
  v70 = *(_QWORD *)(v0 + 368);
  v64 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD *)(v0 + 320);
  v34 = *(_QWORD **)(v0 + 280);
  v73 = (id *)(*(_QWORD *)(v0 + 264) + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 56))(v33, 1, 1, *(_QWORD *)(v0 + 296));
  swift_beginAccess(v23, v80, 33, 0);
  sub_10000B558(v33, v23, &qword_1009D7440);
  swift_endAccess(v80);
  v35 = (void *)v34[3];
  v36 = v34[7];
  v37 = v34[8];
  sub_10003F198(v34 + 4, v36);
  dispatch thunk of BookEntityType.assetID.getter(v36, v37);
  v39 = v38;
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  objc_msgSend(v35, "readSessionDidEnd:readTime:", v40, -v26);

  v41 = v34[7];
  v42 = v34[8];
  sub_10003F198(v34 + 4, v41);
  v43 = dispatch thunk of BookEntityType.assetID.getter(v41, v42);
  v45 = v44;
  sub_100279A6C(v43, v44);
  swift_bridgeObjectRelease(v45);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v67, v64);
  v46 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
  v46(v76, v31);
  v46(v78, v31);
  *(_QWORD *)&v47 = swift_beginAccess(v73, v0 + 144, 0, 0).n128_u64[0];
  if (*v73)
    objc_msgSend(*v73, "invalidate", v47);
  v48 = *(_QWORD *)(v0 + 544);
  v49 = *(_QWORD *)(v0 + 520);
  v50 = *(_QWORD *)(v0 + 512);
  v52 = *(_QWORD *)(v0 + 480);
  v51 = *(_QWORD *)(v0 + 488);
  v53 = *(_QWORD *)(v0 + 456);
  v54 = *(_QWORD *)(v0 + 432);
  v55 = *(_QWORD *)(v0 + 408);
  v65 = *(_QWORD *)(v0 + 400);
  v68 = *(_QWORD *)(v0 + 392);
  v71 = *(_QWORD *)(v0 + 384);
  v74 = *(_QWORD *)(v0 + 376);
  v81 = *(_QWORD *)(v0 + 328);
  v56 = *(_QWORD *)(v0 + 264);
  v77 = *(_QWORD *)(v0 + 352);
  v79 = *(_QWORD *)(v0 + 320);
  v82 = *(_QWORD *)(v0 + 312);
  swift_beginAccess(v56 + 16, v0 + 240, 1, 0);
  v57 = *(_QWORD *)(v56 + 16);
  *(_QWORD *)(v56 + 16) = 0;
  swift_unknownObjectRelease(v57);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v65);
  swift_task_dealloc(v68);
  swift_task_dealloc(v71);
  swift_task_dealloc(v74);
  swift_task_dealloc(v77);
  swift_task_dealloc(v81);
  swift_task_dealloc(v79);
  swift_task_dealloc(v82);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10027449C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint8_t *v29;
  float v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  id v37;
  double v38;
  double v39;
  float v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[24];
  char v51[24];

  v2 = v1;
  v4 = type metadata accessor for BackgroundColor(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AutoNightThemeStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ScrollViewStatus(0);
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily + 8);
  if (v15)
  {
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily);
    v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily + 8);
    v46 = v16;
  }
  else
  {
    v43 = (char *)v4;
    v44 = v9;
    if (qword_1009CDD88 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_100A1E3E0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      v42 = a1;
      v22 = v21;
      *(_WORD *)v21 = 0;
      swift_slowDealloc(v22, -1, -1);
    }

    v45 = 0xE000000000000000;
    v46 = 0;
    v4 = (uint64_t)v43;
    v9 = v44;
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontSize + 8) & 1) != 0)
  {
    v44 = v9;
    v23 = qword_1009CDD88;
    swift_bridgeObjectRetain(v15);
    if (v23 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100048F64(v24, (uint64_t)qword_100A1E3E0);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      v43 = v14;
      v29 = v28;
      *(_WORD *)v28 = 0;
      v14 = v43;
      swift_slowDealloc(v29, -1, -1);
    }

    v30 = 1.0;
    v9 = v44;
  }
  else
  {
    v30 = *(double *)(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontSize);
    swift_bridgeObjectRetain(v15);
  }
  v31 = v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_scrollViewState;
  v32 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_scrollViewState, v51, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v47 + 16))(v14, v31, v48, v32);
  v33 = v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_autoNightState;
  v34 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_autoNightState, v50, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v33, v8, v34);
  v35 = v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_backgroundColor;
  v36 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_backgroundColor, v49, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v35, v4, v36);
  v37 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v37, "brightness");
  v39 = v38;

  v40 = v39;
  return ReadingSettingsData.init(scrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:)(v14, v11, v7, v46, v45, v30, v40);
}

uint64_t sub_10027488C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;
  int v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  char v12;
  char v13;
  unsigned __int8 v14;
  double v15;
  float v16;
  float v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[16];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D6228);
  __chkstk_darwin(v2);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(double *)((char *)v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress);
  v6 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress + 8);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 9);
  if (!Strong
    || (v8 = Strong,
        v9 = v1[10],
        ObjectType = swift_getObjectType(),
        *(double *)&v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9)),
        v13 = v12,
        swift_unknownObjectRelease(v8),
        (v13 & 1) != 0))
  {
    if ((*((_BYTE *)v1 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endProgress + 8) & 1) != 0)
    {
      v16 = 0.0;
      v14 = 1;
      goto LABEL_8;
    }
    v14 = 0;
    v15 = *(double *)((char *)v1 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endProgress);
  }
  else
  {
    v14 = 0;
    v15 = *(double *)&v11;
  }
  v17 = v15;
  v16 = v17;
LABEL_8:
  *(float *)&v18 = v5;
  v19 = v18;
  v20 = v1 + 4;
  v22 = v1[7];
  v21 = v1[8];
  sub_10003F198(v20, v22);
  v23 = dispatch thunk of BookEntityType.sample.getter(v22, v21);
  type metadata accessor for Utilities(0);
  v24 = dispatch thunk of static Utilities.deviceOrientationFromCurrentOrientation()();
  BridgedDeviceOrientation.swiftType.getter(v24);
  v25 = type metadata accessor for DeviceOrientation(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v4, 0, 1, v25);
  v28[12] = v6;
  if (v6)
    v26 = 0;
  else
    v26 = v19;
  v28[8] = v14;
  return ReadingSessionData.init(percentCompletionStart:percentCompletionEnd:isFreeSample:deviceOrientation:)(v26 | ((unint64_t)v6 << 32), LODWORD(v16) | ((unint64_t)v14 << 32), v23 & 1, v4);
}

void sub_100274A38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  _BYTE v27[8];
  uint64_t v28;

  v2 = sub_10004CFD4(&qword_1009D6220);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for EventSubmitResult.success<A>(_:))
  {
    if (qword_1009CDD88 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_100A1E3E0);
    v9 = Logger.logObject.getter(v8);
    v13 = static os_log_type_t.debug.getter(v9, v10, v11, v12);
    if (os_log_type_enabled(v9, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      swift_slowDealloc(v14, -1, -1);
    }

    goto LABEL_12;
  }
  if (v6 != enum case for EventSubmitResult.failed<A>(_:))
  {
LABEL_12:
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
  v15 = *v5;
  if (qword_1009CDD88 != -1)
    swift_once(&qword_1009CDD88, sub_1002713A4);
  v16 = type metadata accessor for Logger(0);
  sub_100048F64(v16, (uint64_t)qword_100A1E3E0);
  swift_errorRetain(v15);
  v17 = swift_errorRetain(v15);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v28 = v21;
    *(_DWORD *)v20 = 136315138;
    swift_getErrorValue(v15, v27, v26);
    v22 = Error.localizedDescription.getter(v26[1], v26[2]);
    v24 = v23;
    v25 = sub_100040F58(v22, v23, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v24);
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    swift_errorRelease(v15);
  }
  else
  {
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

  }
}

double sub_100274D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v6 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject(&unk_1008F7D50, 56, 7);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = a3;
  swift_retain(a1);
  swift_retain(a3);
  v11 = sub_10030C02C((uint64_t)v8, (uint64_t)&unk_1009D6180, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_100274E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_10004CFD4(&qword_1009D6188);
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserEmbeddingData(0);
  v6[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[8] = v9;
  v6[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100274ECC, 0, 0);
}

uint64_t sub_100274ECC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = type metadata accessor for EventReporter(0, a2);
  v2[10] = static EventReporter.shared.getter(v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to EventReporter.userEmbeddingData()[1]);
  v2[11] = v4;
  *v4 = v2;
  v4[1] = sub_100274F34;
  return EventReporter.userEmbeddingData()(v2[6]);
}

uint64_t sub_100274F34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002751C0;
  }
  else
  {

    v4 = sub_100274FA0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100274FA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(void);

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100010960(v3, &qword_1009D6188);
  }
  else
  {
    v4 = v0[9];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v3, v1);
    v5 = sub_10004CFD4(&qword_1009D2438);
    v6 = type metadata accessor for DataEventTrait(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v5, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10 + v9, enum case for DataEventTrait.onlyOnce(_:), v6);
    v11 = sub_100008DB0(&qword_1009D61A0, (uint64_t (*)(uint64_t))&type metadata accessor for UserEmbeddingData, (uint64_t)&protocol conformance descriptor for UserEmbeddingData);
    v12 = sub_100008DB0(&qword_1009D61A8, (uint64_t (*)(uint64_t))&type metadata accessor for UserEmbeddingData, (uint64_t)&protocol conformance descriptor for UserEmbeddingData);
    BATracker.push<A>(data:traits:file:line:)(v4, v10, 0xD000000000000065, 0x80000001007BA980, 227, v1, v11, v12);
    swift_bridgeObjectRelease(v10);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  }
  v13 = (int *)v0[4];
  v16 = (uint64_t (*)(void))((char *)v13 + *v13);
  v14 = (_QWORD *)swift_task_alloc(v13[1]);
  v0[13] = v14;
  *v14 = v0;
  v14[1] = sub_100275160;
  return v16();
}

uint64_t sub_100275160()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 72);
  v2 = *(_QWORD *)(*v0 + 48);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1002751C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  uint64_t (*v15)(void);

  if (qword_1009CDD88 != -1)
    swift_once(&qword_1009CDD88, sub_1002713A4);
  v1 = *(_QWORD *)(v0 + 96);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_100A1E3E0);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 96);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v10 = _convertErrorToNSError(_:)(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to attach userEmbeddingData: %@", v8, 0xCu);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    swift_errorRelease(v7);

  }
  v12 = *(int **)(v0 + 32);
  v15 = (uint64_t (*)(void))((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc(v12[1]);
  *(_QWORD *)(v0 + 104) = v13;
  *v13 = v0;
  v13[1] = sub_100275160;
  return v15();
}

void sub_1002753A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  char *v55;
  _QWORD v56[8];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;

  v61 = type metadata accessor for ReadingSettingsData(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v66 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for ScrollViewStatus(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v63 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for BackgroundColorData(0);
  v56[7] = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v56[6] = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for BackgroundColor(0);
  v70 = *(_QWORD *)(v68 - 8);
  v6 = __chkstk_darwin(v68);
  v56[2] = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v69 = (char *)v56 - v9;
  v10 = __chkstk_darwin(v8);
  v67 = (char *)v56 - v11;
  v12 = __chkstk_darwin(v10);
  v77 = (char *)v56 - v13;
  v14 = __chkstk_darwin(v12);
  v76 = (char *)v56 - v15;
  __chkstk_darwin(v14);
  v78 = (char *)v56 - v16;
  v73 = type metadata accessor for BookThemeEntity(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v71 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for ReadingSessionData(0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v82 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AutoNightThemeStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  v79 = v19;
  v80 = v20;
  v21 = __chkstk_darwin(v19);
  v56[1] = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v59 = (char *)v56 - v24;
  v25 = __chkstk_darwin(v23);
  v56[3] = (char *)v56 - v26;
  v27 = __chkstk_darwin(v25);
  v56[4] = (char *)v56 - v28;
  v29 = __chkstk_darwin(v27);
  v62 = (char *)v56 - v30;
  v31 = __chkstk_darwin(v29);
  v56[5] = (char *)v56 - v32;
  v33 = __chkstk_darwin(v31);
  v75 = (char *)v56 - v34;
  __chkstk_darwin(v33);
  v74 = (char *)v56 - v35;
  v36 = type metadata accessor for AnalyticsEvent.Reading(0);
  __chkstk_darwin(v36);
  v38 = (char *)v56 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_10004CFD4((uint64_t *)&unk_1009D60F0);
  __chkstk_darwin(v39);
  v41 = (char *)v56 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for ContentData(0);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v45 = (char *)v56 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100279E54(a1, (uint64_t (*)(_QWORD))&type metadata accessor for AnalyticsEvent.Reading, (uint64_t (*)(uint64_t))AnalyticsEvent.Reading.description.getter);
  sub_1002729C0(v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) != 1)
  {
    v58 = v1;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v45, v41, v42);
    sub_10002CD84(a1, (uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for AnalyticsEvent.Reading);
    v55 = (char *)&loc_100275984 + dword_100276E84[swift_getEnumCaseMultiPayload(v38, v36)];
    __asm { BR              X10 }
  }
  sub_100010960((uint64_t)v41, (uint64_t *)&unk_1009D60F0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 88);
  if (Strong)
  {
    v47 = Strong;
    v48 = *(_QWORD *)(v1 + 96);
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v48 + 16))(ObjectType, v48) & 1) != 0)
    {
      if (qword_1009CDD88 != -1)
        swift_once(&qword_1009CDD88, sub_1002713A4);
      v50 = type metadata accessor for Logger(0);
      v51 = sub_100048F64(v50, (uint64_t)qword_100A1E3E0);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.error.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to get necessary data to submit event", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
        swift_unknownObjectRelease(v47);

        return;
      }

    }
    swift_unknownObjectRelease(v47);
  }
}

void sub_100276EC0(unsigned __int8 a1, void (*a2)(char *, _QWORD, uint64_t), uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  os_log_t v55;
  uint64_t v56;
  unsigned int *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  __objc2_class *v61;
  char *v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  os_log_t v93;
  char *v94;
  uint64_t v95;
  char v96;
  char *v97;
  __n128 v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  NSObject *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  os_log_type_t v125;
  char *v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  int v158;
  NSObject *v159;
  NSObject *v160;
  void (*v161)(char *, uint64_t, uint64_t, __n128);
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  void (*v173)(char *, _QWORD, uint64_t);
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178[24];
  char *v179;
  _BYTE v180[16];
  uint64_t v181[3];
  uint64_t v182;
  _BYTE v183[4];

  v7 = v6;
  v174 = a6;
  v168 = a5;
  v175 = a3;
  v173 = a2;
  v9 = a1;
  v10 = type metadata accessor for BackgroundColor(0);
  v171 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v165 = (char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v162 = (char *)&v155 - v14;
  v15 = __chkstk_darwin(v13);
  v164 = (char *)&v155 - v16;
  __chkstk_darwin(v15);
  v167 = (char *)&v155 - v17;
  v18 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v18);
  v20 = (char *)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for BookThemeEntity(0);
  v176 = *(_QWORD *)(v21 - 8);
  v177 = v21;
  v22 = __chkstk_darwin(v21);
  v163 = (char *)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v166 = (char *)&v155 - v25;
  __chkstk_darwin(v24);
  v169 = (char *)&v155 - v26;
  v27 = type metadata accessor for ScrollViewStatus(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v155 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v29);
  v34 = (char *)&v155 - v33;
  __chkstk_darwin(v32);
  v36 = (char *)&v155 - v35;
  v172 = a4;
  if (v9 != 2)
  {
    v161 = (void (*)(char *, uint64_t, uint64_t, __n128))v10;
    v37 = v9 & 1;
    v170 = v7;
    v38 = v7 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_scrollViewState;
    v39 = swift_beginAccess(v7 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_scrollViewState, v178, 0, 0);
    v159 = *(NSObject **)(v28 + 16);
    ((void (*)(char *, uint64_t, uint64_t, __n128))v159)(v36, v38, v27, v39);
    v160 = *(NSObject **)(v28 + 104);
    ((void (*)(char *, _QWORD, uint64_t))v160)(v34, enum case for ScrollViewStatus.unknown(_:), v27);
    v40 = sub_100008DB0(&qword_1009D62A8, (uint64_t (*)(uint64_t))&type metadata accessor for ScrollViewStatus, (uint64_t)&protocol conformance descriptor for ScrollViewStatus);
    v41 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v34, v27, v40);
    v42 = *(void (**)(char *, uint64_t))(v28 + 8);
    v42(v34, v27);
    v42(v36, v27);
    if ((v41 & 1) == 0)
    {
      v158 = v37;
      if (qword_1009CDD88 != -1)
        swift_once(&qword_1009CDD88, sub_1002713A4);
      v43 = type metadata accessor for Logger(0);
      sub_100048F64(v43, (uint64_t)qword_100A1E3E0);
      v44 = v170;
      v45 = swift_retain_n(v170, 2);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.error.getter(v46);
      v48 = v47;
      if (os_log_type_enabled(v46, v47))
      {
        v49 = swift_slowAlloc(18, -1);
        v156 = v48;
        v50 = v49;
        v157 = swift_slowAlloc(32, -1);
        v181[0] = v157;
        *(_DWORD *)v50 = 136315394;
        v155 = v50 + 4;
        v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v159)(v36, v38, v27);
        v159 = v46;
        v52 = ScrollViewStatus.rawValue.getter(v51);
        v54 = v53;
        v42(v36, v27);
        v179 = (char *)sub_100040F58(v52, v54, v181);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v155, v50 + 12);
        swift_release_n(v170, 2);
        swift_bridgeObjectRelease(v54);
        *(_WORD *)(v50 + 12) = 1024;
        v37 = v158;
        LODWORD(v179) = v158;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, (char *)&v179 + 4, v50 + 14, v50 + 18);
        v55 = v159;
        v56 = v157;
        swift_arrayDestroy(v157, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v50, -1, -1);

      }
      else
      {

        swift_release_n(v44, 2);
        v37 = v158;
      }
    }
    v57 = (unsigned int *)&enum case for ScrollViewStatus.off(_:);
    if (v37)
      v57 = (unsigned int *)&enum case for ScrollViewStatus.on(_:);
    ((void (*)(char *, _QWORD, uint64_t))v160)(v31, *v57, v27);
    v58 = swift_beginAccess(v38, v181, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v28 + 40))(v38, v31, v27, v58);
    swift_endAccess(v181);
    v7 = v170;
    a4 = v172;
    v10 = (uint64_t)v161;
  }
  sub_10000B5E4((uint64_t)v173, (uint64_t)v20, (uint64_t *)&unk_1009D6290);
  v60 = v176;
  v59 = v177;
  v61 = &OBJC_METACLASS____TtCC5Books20PaletteContainerViewP33_B708909BBFE60AF0BC370E92243FB30413ContainerView;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v20, 1, v177) == 1)
  {
    sub_100010960((uint64_t)v20, (uint64_t *)&unk_1009D6290);
    goto LABEL_21;
  }
  v62 = v169;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v169, v20, v59);
  v63 = v7 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_backgroundColor;
  v64 = swift_beginAccess(v7 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_backgroundColor, v181, 0, 0);
  v65 = v171;
  v66 = v167;
  v161 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v171 + 16);
  v161(v167, v63, v10, v64);
  v173 = *(void (**)(char *, _QWORD, uint64_t))(v65 + 104);
  v67 = v164;
  v173(v164, enum case for BackgroundColor.unknown(_:), v10);
  v68 = sub_100008DB0(&qword_1009D62A0, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundColor, (uint64_t)&protocol conformance descriptor for BackgroundColor);
  v69 = v7;
  v70 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v67, v10, v68);
  v71 = *(void (**)(char *, uint64_t))(v65 + 8);
  v71(v67, v10);
  v72 = ((uint64_t (*)(char *, uint64_t))v71)(v66, v10);
  if ((v70 & 1) == 0)
  {
    if (qword_1009CDD88 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v73 = type metadata accessor for Logger(0);
    sub_100048F64(v73, (uint64_t)qword_100A1E3E0);
    v74 = v177;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v166, v62, v177);
    v75 = swift_retain_n(v69, 2);
    v76 = Logger.logObject.getter(v75);
    v77 = static os_log_type_t.error.getter(v76);
    v78 = v77;
    if (os_log_type_enabled(v76, v77))
    {
      v79 = swift_slowAlloc(22, -1);
      v164 = (char *)swift_slowAlloc(64, -1);
      v179 = v164;
      *(_DWORD *)v79 = 136315394;
      v159 = (v79 + 4);
      v160 = v76;
      v80 = v167;
      v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v161)(v167, v63, v10);
      v170 = v69;
      v82 = BackgroundColor.rawValue.getter(v81);
      v84 = v83;
      v71(v80, v10);
      v182 = sub_100040F58(v82, v84, (uint64_t *)&v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183, v159, v79 + 12);
      swift_release_n(v69, 2);
      v85 = swift_bridgeObjectRelease(v84);
      *(_WORD *)(v79 + 12) = 2080;
      LODWORD(v167) = v78;
      v86 = v166;
      v87 = BookThemeEntity.themeType.getter(v85);
      v88 = v162;
      v89 = ((uint64_t (*)(char *, _QWORD, uint64_t))v173)(v162, *(unsigned int *)*(&off_1008F7DE8 + v87), v10);
      v90 = BackgroundColor.rawValue.getter(v89);
      v92 = v91;
      v71(v88, v10);
      v182 = sub_100040F58(v90, v92, (uint64_t *)&v179);
      v62 = v169;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183, v79 + 14, v79 + 22);
      swift_bridgeObjectRelease(v92);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v86, v177);
      v93 = v160;
      v94 = v164;
      swift_arrayDestroy(v164, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1, -1);
      v95 = v79;
      v60 = v176;
      swift_slowDealloc(v95, -1, -1);

      v69 = v170;
    }
    else
    {
      swift_release_n(v69, 2);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v166, v74);

    }
  }
  v96 = BookThemeEntity.themeType.getter(v72);
  v97 = v165;
  v173(v165, *(unsigned int *)*(&off_1008F7DE8 + v96), v10);
  v98 = swift_beginAccess(v63, &v179, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v171 + 40))(v63, v97, v10, v98);
  swift_endAccess(&v179);
  v61 = &OBJC_METACLASS____TtCC5Books20PaletteContainerViewP33_B708909BBFE60AF0BC370E92243FB30413ContainerView;
  v99 = (uint64_t *)(v69 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily);
  v7 = v69;
  if (*(_QWORD *)(v69 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily + 8))
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v177);
    a4 = v172;
LABEL_21:
    v100 = v175;
    if (!a4)
      goto LABEL_39;
    goto LABEL_22;
  }
  v116 = v177;
  if (qword_1009CDD88 != -1)
    swift_once(&qword_1009CDD88, sub_1002713A4);
  v117 = type metadata accessor for Logger(0);
  sub_100048F64(v117, (uint64_t)qword_100A1E3E0);
  v118 = v163;
  v119 = (*(uint64_t (**)(char *, char *, uint64_t))(v60 + 16))(v163, v62, v116);
  v120 = Logger.logObject.getter(v119);
  v124 = v60;
  v125 = static os_log_type_t.debug.getter(v120, v121, v122, v123);
  if (os_log_type_enabled(v120, v125))
  {
    v126 = v118;
    v127 = (uint8_t *)swift_slowAlloc(12, -1);
    v128 = swift_slowAlloc(32, -1);
    v170 = v7;
    v129 = v128;
    v179 = (char *)v128;
    *(_DWORD *)v127 = 136315138;
    v130 = BookThemeEntity.fontFamily.getter();
    v132 = v131;
    v182 = sub_100040F58(v130, v131, (uint64_t *)&v179);
    v116 = v177;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183, v127 + 4, v127 + 12);
    swift_bridgeObjectRelease(v132);
    v133 = *(void (**)(char *, uint64_t))(v124 + 8);
    v133(v126, v116);
    swift_arrayDestroy(v129, 1, (char *)&type metadata for Any + 8);
    v134 = v129;
    v62 = v169;
    v7 = v170;
    swift_slowDealloc(v134, -1, -1);
    swift_slowDealloc(v127, -1, -1);
  }
  else
  {
    v133 = *(void (**)(char *, uint64_t))(v124 + 8);
    v133(v118, v116);
  }

  v135 = BookThemeEntity.fontFamily.getter();
  v137 = v136;
  v133(v62, v116);
  v138 = v99[1];
  *v99 = v135;
  v99[1] = v137;
  swift_bridgeObjectRelease(v138);
  a4 = v172;
  v100 = v175;
  v61 = &OBJC_METACLASS____TtCC5Books20PaletteContainerViewP33_B708909BBFE60AF0BC370E92243FB30413ContainerView;
  if (v172)
  {
LABEL_22:
    v101 = (uint64_t *)((char *)v61[88].info + v7);
    v102 = v101[1];
    if (v102
      && (*v101 != v100 || v102 != a4)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(*v101, v102, v100, a4, 0) & 1) == 0)
    {
      if (qword_1009CDD88 != -1)
        swift_once(&qword_1009CDD88, sub_1002713A4);
      v103 = type metadata accessor for Logger(0);
      sub_100048F64(v103, (uint64_t)qword_100A1E3E0);
      swift_retain_n(v7, 2);
      v104 = swift_bridgeObjectRetain_n(a4, 2);
      v105 = Logger.logObject.getter(v104);
      v106 = static os_log_type_t.error.getter(v105);
      if (os_log_type_enabled(v105, v106))
      {
        v107 = swift_slowAlloc(22, -1);
        v177 = swift_slowAlloc(64, -1);
        v179 = (char *)v177;
        *(_DWORD *)v107 = 136315394;
        v108 = *v101;
        v109 = v101[1];
        swift_bridgeObjectRetain(v109);
        v110 = Optional<A>.description.getter(v108, v109);
        v111 = a4;
        v113 = v112;
        swift_bridgeObjectRelease(v109);
        v182 = sub_100040F58(v110, v113, (uint64_t *)&v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183, v107 + 4, v107 + 12);
        swift_release_n(v7, 2);
        v114 = v113;
        a4 = v111;
        swift_bridgeObjectRelease(v114);
        *(_WORD *)(v107 + 12) = 2080;
        swift_bridgeObjectRetain(v111);
        v182 = sub_100040F58(v175, v111, (uint64_t *)&v179);
        v61 = &OBJC_METACLASS____TtCC5Books20PaletteContainerViewP33_B708909BBFE60AF0BC370E92243FB30413ContainerView;
        v100 = v175;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183, v107 + 14, v107 + 22);
        swift_bridgeObjectRelease_n(a4, 3);
        v115 = v177;
        swift_arrayDestroy(v177, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v115, -1, -1);
        swift_slowDealloc(v107, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a4, 2);
        swift_release_n(v7, 2);
      }
    }
    v139 = v101[1];
    *v101 = v100;
    v101[1] = a4;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRelease(v139);
  }
LABEL_39:
  v140 = (_QWORD *)((char *)&v61[88].info->flags + v7);
  v141 = v140[1];
  if (!v141)
    goto LABEL_43;
  v142 = *v140 & 0xFFFFFFFFFFFFLL;
  if ((v141 & 0x2000000000000000) != 0)
    v142 = HIBYTE(v141) & 0xF;
  if (!v142)
  {
LABEL_43:
    *(_OWORD *)v140 = xmmword_100715C10;
    swift_bridgeObjectRelease(v141);
  }
  if ((v174 & 1) == 0)
  {
    v143 = (uint64_t *)(v7 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontSize);
    if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontSize + 8) & 1) == 0)
    {
      if (qword_1009CDD88 != -1)
        swift_once(&qword_1009CDD88, sub_1002713A4);
      v144 = type metadata accessor for Logger(0);
      sub_100048F64(v144, (uint64_t)qword_100A1E3E0);
      v145 = swift_retain_n(v7, 2);
      v146 = Logger.logObject.getter(v145);
      v147 = static os_log_type_t.error.getter(v146);
      if (os_log_type_enabled(v146, v147))
      {
        v148 = swift_slowAlloc(22, -1);
        v149 = swift_slowAlloc(32, -1);
        v182 = v149;
        *(_DWORD *)v148 = 136315394;
        v150 = *((_BYTE *)v143 + 8);
        v179 = (char *)*v143;
        v180[0] = v150;
        v151 = sub_10004CFD4(&qword_1009D1838);
        v152 = String.init<A>(describing:)(&v179, v151);
        v154 = v153;
        v179 = (char *)sub_100040F58(v152, v153, &v182);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v148 + 4, v148 + 12);
        swift_release_n(v7, 2);
        swift_bridgeObjectRelease(v154);
        *(_WORD *)(v148 + 12) = 2048;
        v179 = (char *)v168;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v148 + 14, v148 + 22);
        swift_arrayDestroy(v149, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v149, -1, -1);
        swift_slowDealloc(v148, -1, -1);

      }
      else
      {

        swift_release_n(v7, 2);
      }
    }
    *v143 = v168;
    *((_BYTE *)v143 + 8) = 0;
  }
}

void sub_100277EC0(unsigned __int8 a1, void (*a2)(char *, _QWORD, uint64_t), uint64_t a3, unint64_t a4, uint64_t a5, char a6)
{
  sub_100276EC0(a1, a2, a3, a4, a5, a6 & 1);
}

double sub_100277ECC(uint64_t a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  char *v34;
  _QWORD v35[6];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v36 = type metadata accessor for ViewLocation(0);
  v35[4] = *(_QWORD *)(v36 - 8);
  v3 = __chkstk_darwin(v36);
  v38 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ViewAction(0, v3);
  v37 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v35[3] = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v35[5] = (char *)v35 - v8;
  v9 = type metadata accessor for ViewData(0, v7);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v39 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ViewType(0);
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  v45 = (char *)v35 - v13;
  v14 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  __chkstk_darwin(v14);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D60F0);
  __chkstk_darwin(v17);
  v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ContentData(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100279E54(a1, type metadata accessor for AnalyticsEvent.ReadingEvent, (uint64_t (*)(uint64_t))AnalyticsEvent.ReadingEvent.description.getter);
  sub_1002729C0(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    sub_10002CD84(a1, (uint64_t)v16, type metadata accessor for AnalyticsEvent.ReadingEvent);
    v34 = (char *)&loc_100278240 + 4 * byte_1007159C8[swift_getEnumCaseMultiPayload(v16, v14)];
    __asm { BR              X10 }
  }
  sub_100010960((uint64_t)v19, (uint64_t *)&unk_1009D60F0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 88);
  if (Strong)
  {
    v26 = Strong;
    v27 = *(_QWORD *)(v1 + 96);
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(ObjectType, v27) & 1) != 0)
    {
      if (qword_1009CDD88 != -1)
        swift_once(&qword_1009CDD88, sub_1002713A4);
      v29 = type metadata accessor for Logger(0);
      v30 = sub_100048F64(v29, (uint64_t)qword_100A1E3E0);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to get necessary data to submit event", v33, 2u);
        swift_slowDealloc(v33, -1, -1);
        swift_unknownObjectRelease(v26);

        return result;
      }

    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v26).n128_u64[0];
  }
  return result;
}

void AnalyticsEvent.Reading.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for BookThemeEntity(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for AnalyticsEvent.Reading(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v0, (uint64_t)v4, v5);
  v6 = (char *)sub_100278568 + 4 * byte_1007159CC[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100278568()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *v0;
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 - 88));
  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = 0x80000001007BA770;
  if (v3)
    v4 = 1702195828;
  else
    v4 = 0x65736C6166;
  if (v3)
    v5 = 0xE400000000000000;
  else
    v5 = 0xE500000000000000;
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  return *(_QWORD *)(v2 - 96);
}

void sub_1002788C8()
{
  JUMPOUT(0x1002788A0);
}

uint64_t AnalyticsEvent.LifeCycle.description.getter(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = 0xE500000000000000;
  v3 = 0x7465736E75;
  switch(a1)
  {
    case 0:
      break;
    case 1:
      v2 = 0xE900000000000072;
      v3 = 0x6165707041646964;
      break;
    case 2:
      v2 = 0xED00007261657070;
      v3 = 0x617369446C6C6977;
      break;
    case 3:
      v2 = 0xEC00000072616570;
      v3 = 0x7061736944646964;
      break;
    default:
      v2 = 0xEC00000065736163;
      v3 = 0x206E776F6E6B6E75;
      break;
  }
  v4 = v2;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v2);
  return 0x6C6379436566694CLL;
}

uint64_t sub_100278A10()
{
  uint64_t *v0;

  return AnalyticsEvent.LifeCycle.description.getter(*v0);
}

void AnalyticsEvent.ReadingEvent.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for ViewType(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v0, (uint64_t)v4, v5);
  v6 = (char *)sub_100278AFC + 4 * byte_1007159D9[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_100278AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v5 - 80) = 0;
  *(_QWORD *)(v5 - 72) = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  v6 = *(_QWORD *)(v5 - 72);
  *(_QWORD *)(v5 - 80) = *(_QWORD *)(v5 - 80);
  *(_QWORD *)(v5 - 72) = v6;
  v7._countAndFlagsBits = v4 - 2;
  v7._object = (void *)0x80000001007BA7F0;
  String.append(_:)(v7);
  _print_unlocked<A, B>(_:_:)(v1, v5 - 80, v0, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v8 = *(_QWORD *)(v5 - 80);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v8;
}

uint64_t BCAnalyticsViewLifeCycleState.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x7465736E75;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6165707041646964;
      break;
    case 2:
      result = 0x617369446C6C6977;
      break;
    case 3:
      result = 0x7061736944646964;
      break;
    default:
      result = 0x206E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_100278CBC()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x7465736E75;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 0x6165707041646964;
      break;
    case 2:
      result = 0x617369446C6C6977;
      break;
    case 3:
      result = 0x7061736944646964;
      break;
    default:
      result = 0x206E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_100278D70()
{
  return type metadata accessor for ReadingAnalyticsProvider(0);
}

uint64_t type metadata accessor for ReadingAnalyticsProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D5E20;
  if (!qword_1009D5E20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadingAnalyticsProvider);
  return result;
}

void sub_100278DB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[6];
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v14[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v14[1] = "\b";
  v14[2] = &unk_100715B08;
  v14[3] = &unk_100715B20;
  v14[4] = &unk_100715B20;
  v14[5] = &unk_100715B20;
  sub_10000AB68(319, (unint64_t *)&qword_1009D5E30, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v15 = *(_QWORD *)(v2 - 8) + 64;
    v16 = v15;
    v17 = &unk_100715B38;
    v18 = &unk_100715B38;
    v4 = type metadata accessor for DoNotDisturbStatus(319);
    if (v5 <= 0x3F)
    {
      v19 = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ScrollViewStatus(319);
      if (v7 <= 0x3F)
      {
        v20 = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for AutoNightThemeStatus(319);
        if (v9 <= 0x3F)
        {
          v21 = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for BackgroundColor(319);
          if (v11 <= 0x3F)
          {
            v22 = *(_QWORD *)(v10 - 8) + 64;
            v23 = &unk_100715B50;
            v24 = &unk_100715B50;
            v25 = &unk_100715B38;
            v26 = &unk_100715B68;
            v27 = &unk_100715B80;
            sub_10000AB68(319, (unint64_t *)&unk_1009D5E38, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData);
            if (v13 <= 0x3F)
            {
              v28 = *(_QWORD *)(v12 - 8) + 64;
              swift_updateClassMetadata2(a1, 256, 20, v14, a1 + 80);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100278F24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100278F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D60F0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_10004CFD4(&qword_1009D60E8) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v9 = v0 + v3;
  v10 = type metadata accessor for ContentData(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = swift_release(*(_QWORD *)(v0 + v4));
  v13 = type metadata accessor for ContentSettingsData(0, v12);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v7, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v7, v13);
  return swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_100279068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D60F0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D60E8) - 8) + 80);
  v6 = v4 + v5 + 8;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = *(_QWORD *)(v0 + v4);
  v10 = v0 + (v6 & ~v5);
  v11 = (_QWORD *)swift_task_alloc(dword_1009D6164);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10000AE34;
  return sub_100272FE0(v7, v8, v9, v10);
}

uint64_t sub_100279120()
{
  return sub_100279D84((void (*)(_QWORD))&_swift_release);
}

double sub_10027912C()
{
  uint64_t *v0;

  return sub_100274D64(v0[2], v0[3], v0[4]);
}

uint64_t sub_100279138()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10027916C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009D617C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_100274E44(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002791EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[40];
  _QWORD v16[5];

  v3 = v2;
  *(_QWORD *)(v2 + 80) = a2;
  v4 = swift_unknownObjectWeakAssign(v2 + 72, a1);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v2 + 80);
    ObjectType = swift_getObjectType();
    v16[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    v9 = swift_allocObject(&unk_1008F7DD0, 24, 7);
    swift_weakInit(v9 + 16, v2);
    v10 = sub_10004CFD4(&qword_1009D6280);
    v11 = sub_100030B34(&qword_1009D6288, &qword_1009D6280, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v12 = Publisher<>.sink(receiveValue:)(sub_100279E4C, v9, v10, v11);
    swift_release(v9);
    swift_release(v16[0]);
    v16[3] = type metadata accessor for AnyCancellable(0);
    v16[4] = &protocol witness table for AnyCancellable;
    swift_unknownObjectRelease(v6);
    v16[0] = v12;
    sub_100025B3C((uint64_t)v16, (uint64_t)v15, &qword_1009D6260);
    v13 = v3 + OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgressCancellable;
    swift_beginAccess(v13, v14, 33, 0);
    sub_10000B558((uint64_t)v15, v13, &qword_1009D6260);
    return swift_endAccess(v14);
  }
  return result;
}

char *sub_10027934C(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char v42[24];

  *((_QWORD *)v9 + 10) = 0;
  swift_unknownObjectWeakInit(v9 + 72);
  *((_QWORD *)v9 + 12) = 0;
  swift_unknownObjectWeakInit(v9 + 88);
  *((_QWORD *)v9 + 14) = 0;
  swift_unknownObjectWeakInit(v9 + 104);
  v12 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginSessionDate];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endSessionDate], 1, 1, v13);
  v15 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgress];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_endProgress];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_initialDnDState];
  v18 = enum case for DoNotDisturbStatus.unknown(_:);
  v19 = type metadata accessor for DoNotDisturbStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  v20 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_scrollViewState];
  v21 = enum case for ScrollViewStatus.unknown(_:);
  v22 = type metadata accessor for ScrollViewStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  v23 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_autoNightState];
  v24 = enum case for AutoNightThemeStatus.unknown(_:);
  v25 = type metadata accessor for AutoNightThemeStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  v26 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_backgroundColor];
  v27 = enum case for BackgroundColor.unknown(_:);
  v28 = type metadata accessor for BackgroundColor(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v26, v27, v28);
  v29 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lifeCycleCancellable];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((_QWORD *)v29 + 4) = 0;
  v30 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_beginProgressCancellable];
  *((_QWORD *)v30 + 4) = 0;
  *(_OWORD *)v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;
  v31 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontSize];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v32 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_lastFontFamily];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_LogEvents] = 1;
  v33 = &v9[OBJC_IVAR____TtC5Books24ReadingAnalyticsProvider_contentDataCache];
  v34 = type metadata accessor for ContentData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *((_QWORD *)v9 + 2) = a1;
  *((_QWORD *)v9 + 3) = a2;
  sub_100022840(a3, (uint64_t)(v9 + 32));
  *((_QWORD *)v9 + 10) = a5;
  swift_unknownObjectWeakAssign(v9 + 72, a4);
  *((_QWORD *)v9 + 12) = a7;
  swift_unknownObjectWeakAssign(v9 + 88, a6);
  swift_beginAccess(v9 + 104, v42, 1, 0);
  *((_QWORD *)v9 + 14) = a9;
  swift_unknownObjectWeakAssign(v9 + 104, a8);
  return v9;
}

double sub_100279628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  _QWORD v28[2];
  unsigned __int8 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;

  v19 = type metadata accessor for IntentDonationManager(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntentDonationIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001FAD88();
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRetain(a2);
  sub_1001FBB08(a1, a2, 0, 0, 0, 0, 0, 0, v28, 1u);
  v20 = v28[0];
  v21 = v28[1];
  v22 = v29;
  v23 = v30;
  v24 = v31;
  v25 = v32;
  v26 = v33;
  v27 = v34;
  sub_100279BFC(v28);
  IntentParameter.wrappedValue.setter(&v20);
  v16 = sub_100279C98(v28);
  static IntentDonationManager.shared.getter(v16);
  v20 = v11;
  v21 = v13;
  v22 = v15;
  v17 = sub_1001FC1E8();
  IntentDonationManager.donate<A>(intent:)(&v20, &type metadata for OpenBookIntent, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release(v15);
  swift_release(v13);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void sub_100279810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CDD88 != -1)
    swift_once(&qword_1009CDD88, sub_1002713A4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048F64(v6, (uint64_t)qword_100A1E3E0);
  v19 = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v19, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v21 = v10;
    *(_DWORD *)v9 = 136315394;
    Date.init()(v10);
    v11 = sub_100008DB0(&qword_1009E1D40, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v2, v11);
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v20 = sub_100040F58(v12, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v9 + 12) = 2080;
    v15 = AnalyticsEvent.LifeCycle.description.getter(a1);
    v17 = v16;
    v20 = sub_100040F58(v15, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v19, v8, "%s -- %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

}

double sub_100279A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  double result;
  _OWORD v16[6];
  _OWORD v17[6];

  v4 = type metadata accessor for IntentDonationManager(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IntentDonationIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1002F5ADC();
  swift_bridgeObjectRetain(a2);
  sub_1001FBB08(a1, a2, 0, 0, 0, 0, 0, 0, v17, 1u);
  v16[2] = v17[2];
  v16[3] = v17[3];
  v16[4] = v17[4];
  v16[5] = v17[5];
  v16[0] = v17[0];
  v16[1] = v17[1];
  sub_100279BFC(v17);
  IntentParameter.wrappedValue.setter(v16);
  v13 = sub_100279C98(v17);
  static IntentDonationManager.shared.getter(v13);
  *(_QWORD *)&v16[0] = v12;
  v14 = sub_100279D34();
  IntentDonationManager.donate<A>(intent:)(v16, &type metadata for CloseBookIntent, v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

_QWORD *sub_100279BFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  swift_bridgeObjectRetain(a1[11]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

_QWORD *sub_100279C98(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[11];
  swift_release(a1[9]);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v9);
  return a1;
}

unint64_t sub_100279D34()
{
  unint64_t result;

  result = qword_1009D6218;
  if (!qword_1009D6218)
  {
    result = swift_getWitnessTable(&unk_1007196B0, &type metadata for CloseBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009D6218);
  }
  return result;
}

uint64_t sub_100279D78()
{
  return sub_100279D84((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_100279D84(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100279DB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D624C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1002727B4(a1, v4, v5, v6);
}

uint64_t sub_100279E20()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100279E44(uint64_t *a1)
{
  uint64_t v1;

  return sub_1002724F8(a1, v1);
}

void sub_100279E4C(double *a1)
{
  uint64_t v1;

  sub_100271414(a1, v1);
}

void sub_100279E54(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  if (qword_1009CDD88 != -1)
    swift_once(&qword_1009CDD88, sub_1002713A4);
  v13 = type metadata accessor for Logger(0);
  sub_100048F64(v13, (uint64_t)qword_100A1E3E0);
  v14 = sub_10002CD84(a1, (uint64_t)v12, a2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.info.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v31 = a3;
    v18 = v17;
    v19 = swift_slowAlloc(64, -1);
    v32 = v19;
    v34 = v19;
    *(_DWORD *)v18 = 136315394;
    v30 = v18 + 4;
    Date.init()(v19);
    v20 = sub_100008DB0(&qword_1009E1D40, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v33 = sub_100040F58(v21, v23, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v30, v18 + 12);
    v24 = swift_bridgeObjectRelease(v23);
    *(_WORD *)(v18 + 12) = 2080;
    v25 = v31(v24);
    v27 = v26;
    v33 = sub_100040F58(v25, v26, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v18 + 14, v18 + 22);
    swift_bridgeObjectRelease(v27);
    sub_10002C8F0((uint64_t)v12, a2);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s -- %s", (uint8_t *)v18, 0x16u);
    v28 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    sub_10002C8F0((uint64_t)v12, a2);
  }

}

void sub_10027A100()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  byte_100A1E408 = v2;
}

uint64_t sub_10027A18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

void sub_10027A194(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[14];

  v10[0] = &unk_100715C68;
  v10[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v2 = type metadata accessor for GeometryProxy(319);
  if (v3 <= 0x3F)
  {
    v10[2] = *(_QWORD *)(v2 - 8) + 64;
    v10[3] = &unk_100715C80;
    v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[6] = &unk_100715C98;
    sub_100233378(319);
    if (v5 <= 0x3F)
    {
      v10[7] = *(_QWORD *)(v4 - 8) + 64;
      v6 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
      if (v7 <= 0x3F)
      {
        v10[8] = *(_QWORD *)(v6 - 8) + 64;
        v10[9] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[10] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[11] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[12] = (char *)&value witness table for Builtin.Int64 + 64;
        v8 = type metadata accessor for Logger(319);
        if (v9 <= 0x3F)
        {
          v10[13] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 0, 14, v10, a1 + 32);
        }
      }
    }
  }
}

uint64_t sub_10027A2A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v6;
  int v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  v7 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for UserInterfaceSizeClass(0) - 8) + 80);
  v8 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for Logger(0) - 8) + 80);
  v9 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80);
  v10 = *a2;
  *a1 = *a2;
  v11 = ((v7 | v6 | v8) | v9) & 0xF8 | 7u;
  v12 = v10 + ((v11 + 16) & ~v11);
  swift_retain(v10);
  return v12;
}

uint64_t sub_10027A344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  swift_unknownObjectWeakDestroy(a1);
  v4 = type metadata accessor for GeometryProxy(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((a1 + 19) & 0xFFFFFFFFFFFFFFFCLL) + *(unsigned __int8 *)(v5 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_weakDestroy(v7);
  swift_weakDestroy(v7 + 8);
  swift_weakDestroy(v7 + 16);
  swift_unknownObjectWeakDestroy(v7 + 24);
  v8 = (_QWORD *)((v7 + 47) & 0xFFFFFFFFFFFFF8);
  swift_release(*v8);
  v9 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release(*v9);
  v10 = (id *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);

  v11 = type metadata accessor for UserInterfaceSizeClass(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)(((unint64_t)v10 + v13 + 16) & ~v13);
  v15 = *(_QWORD *)(v12 + 64);
  if (!*(_DWORD *)(v12 + 84))
    ++v15;
  if (v15 <= 8)
    v16 = 8;
  else
    v16 = v15;
  v17 = *((unsigned __int8 *)v14 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X12 }
  }
  if (v17 == 1)
  {
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    swift_release(*v14);
  }
  v19 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v20 = ((unint64_t)v14 + v16 + *(unsigned __int8 *)(v19 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  (*(void (**)(unint64_t))(v19 + 8))(v20);
  v21 = (((((((*(_QWORD *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80), v22);
}

uint64_t sub_10027A564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  size_t v30;
  uint64_t v31;
  unsigned int v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v54;

  v4 = swift_unknownObjectWeakCopyInit(a1, a2);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(a2 + 8);
  v54 = v4;
  v5 = (_DWORD *)((v4 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  v6 = (_DWORD *)((a2 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  *v5 = *v6;
  v7 = type metadata accessor for GeometryProxy(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 4) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 4) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  swift_weakCopyInit(v13, v14);
  swift_weakCopyInit(v13 + 8, v14 + 8);
  swift_weakCopyInit(v13 + 16, v14 + 16);
  swift_unknownObjectWeakCopyInit(v13 + 24, v14 + 24);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v15 = (_QWORD *)((v13 + 47) & 0xFFFFFFFFFFFFF8);
  v16 = (uint64_t *)((v14 + 47) & 0xFFFFFFFFFFFFF8);
  v17 = *v16;
  *v15 = *v16;
  v18 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v20 = *v19;
  *v18 = *v19;
  v21 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(void **)v22;
  *v21 = *(_QWORD *)v22;
  v21[1] = *(_QWORD *)(v22 + 8);
  v24 = type metadata accessor for UserInterfaceSizeClass(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8;
  v27 = ~v26 & 0xFFFFFFFFFFFFFFF8;
  v26 += 23;
  v28 = (_QWORD *)(((unint64_t)v21 + v26) & v27);
  v29 = (uint64_t *)((v26 + v22) & v27);
  if (*(_DWORD *)(v25 + 84))
    v30 = *(_QWORD *)(v25 + 64);
  else
    v30 = *(_QWORD *)(v25 + 64) + 1;
  if (v30 <= 8)
    v31 = 8;
  else
    v31 = v30;
  v32 = *((unsigned __int8 *)v29 + v31);
  swift_retain(v17);
  swift_retain(v20);
  v33 = v23;
  if (v32 >= 2)
  {
    if (v31 <= 3)
      v34 = v31;
    else
      v34 = 4;
    __asm { BR              X11 }
  }
  if (v32 == 1)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v29, 1, v24))
    {
      memcpy(v28, v29, v30);
    }
    else
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v25 + 16))(v28, v29, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v24);
    }
    *((_BYTE *)v28 + v31) = 1;
  }
  else
  {
    v35 = *v29;
    *v28 = *v29;
    *((_BYTE *)v28 + v31) = 0;
    swift_retain(v35);
  }
  v36 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = v31 + v37 + 1;
  v39 = ((unint64_t)v28 + v38) & ~v37;
  v40 = ((unint64_t)v29 + v38) & ~v37;
  (*(void (**)(unint64_t, unint64_t))(v36 + 16))(v39, v40);
  v41 = *(_QWORD *)(v36 + 64) + 7;
  v42 = (_QWORD *)((v41 + v39) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)((v41 + v40) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v44 = *v45;
  v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v48 = *v49;
  v50 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v50 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))(((unint64_t)v48 + *(unsigned __int8 *)(v51 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80), ((unint64_t)v49 + *(unsigned __int8 *)(v51 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80), v50);
  return v54;
}

uint64_t sub_10027A8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  size_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;

  v6 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = (_DWORD *)((v6 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((a2 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 4) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 4) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  swift_weakCopyAssign(v15, v16);
  swift_weakCopyAssign(v15 + 8, v16 + 8);
  swift_weakCopyAssign(v15 + 16, v16 + 16);
  swift_unknownObjectWeakCopyAssign(v15 + 24, v16 + 24);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = (uint64_t *)((v15 + 47) & 0xFFFFFFFFFFFFFFF8);
  v18 = (uint64_t *)((v16 + 47) & 0xFFFFFFFFFFFFF8);
  v19 = *v18;
  v20 = *v17;
  *v17 = *v18;
  swift_retain(v19);
  swift_release(v20);
  v21 = (uint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = (uint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  v23 = *v22;
  v24 = *v21;
  *v21 = *v22;
  swift_retain(v23);
  swift_release(v24);
  v25 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(void **)v25;
  v28 = *(void **)v26;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v29 = v28;

  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  v30 = type metadata accessor for UserInterfaceSizeClass(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_DWORD *)(v31 + 84);
  v33 = *(_DWORD *)(v31 + 80) & 0xF8;
  v34 = v33 + 23;
  v35 = v33 + 23 + v25;
  v36 = ~v33 & 0xFFFFFFFFFFFFFFF8;
  v37 = (_QWORD *)(v35 & v36);
  v38 = v34 + v26;
  v39 = (uint64_t *)(v38 & v36);
  v40 = *(_QWORD *)(v31 + 64);
  if ((v35 & v36) != (v38 & v36))
  {
    v41 = v30;
    if (v32)
      v42 = *(_QWORD *)(v31 + 64);
    else
      v42 = v40 + 1;
    if (v42 <= 8)
      v43 = 8;
    else
      v43 = v42;
    v44 = *((unsigned __int8 *)v37 + v43);
    if (v44 >= 2)
    {
      if (v43 <= 3)
        v45 = v43;
      else
        v45 = 4;
      __asm { BR              X12 }
    }
    if (v44 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v37, 1, v30))
        (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v37, v41);
    }
    else
    {
      swift_release(*v37);
    }
    v46 = *((unsigned __int8 *)v39 + v43);
    if (v46 >= 2)
    {
      if (v43 <= 3)
        v47 = v43;
      else
        v47 = 4;
      __asm { BR              X12 }
    }
    if (v46 == 1)
    {
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v39, 1, v41))
      {
        memcpy(v37, v39, v42);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v31 + 16))(v37, v39, v41);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v37, 0, 1, v41);
      }
      *((_BYTE *)v37 + v43) = 1;
    }
    else
    {
      v48 = *v39;
      *v37 = *v39;
      *((_BYTE *)v37 + v43) = 0;
      swift_retain(v48);
    }
  }
  if (v32)
    v49 = v40;
  else
    v49 = v40 + 1;
  if (v49 <= 8)
    v49 = 8;
  v50 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v51 = *(unsigned __int8 *)(v50 + 80);
  v52 = v49 + v51 + 1;
  v53 = ((unint64_t)v37 + v52) & ~v51;
  v54 = ((unint64_t)v39 + v52) & ~v51;
  (*(void (**)(unint64_t, unint64_t))(v50 + 24))(v53, v54);
  v55 = *(_QWORD *)(v50 + 64) + 7;
  v56 = (_QWORD *)((v55 + v53) & 0xFFFFFFFFFFFFFFF8);
  v57 = (_QWORD *)((v55 + v54) & 0xFFFFFFFFFFFFFFF8);
  *v56 = *v57;
  v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v58 = *v59;
  v60 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = (_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
  v63 = (_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v62 = *v63;
  v64 = type metadata accessor for Logger(0);
  v65 = *(_QWORD *)(v64 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 24))(((unint64_t)v62 + *(unsigned __int8 *)(v65 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80), ((unint64_t)v63 + *(unsigned __int8 *)(v65 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80), v64);
  return a1;
}

uint64_t sub_10027ACB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  size_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  v6 = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = (_DWORD *)((v6 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((a2 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 4) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 4) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  swift_weakTakeInit(v15, v16);
  swift_weakTakeInit(v15 + 8, v16 + 8);
  swift_weakTakeInit(v15 + 16, v16 + 16);
  swift_unknownObjectWeakTakeInit(v15 + 24, v16 + 24);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = (_QWORD *)((v15 + 47) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + 47) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = (_OWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = type metadata accessor for UserInterfaceSizeClass(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  v26 = v25 + 23;
  v27 = (unint64_t)v21 + v25 + 23;
  v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  v29 = (_QWORD *)(v27 & v28);
  v30 = (_QWORD *)(((unint64_t)v22 + v26) & v28);
  if (*(_DWORD *)(v24 + 84))
    v31 = *(_QWORD *)(v24 + 64);
  else
    v31 = *(_QWORD *)(v24 + 64) + 1;
  if (v31 <= 8)
    v32 = 8;
  else
    v32 = v31;
  v33 = *((unsigned __int8 *)v30 + v32);
  if (v33 >= 2)
  {
    if (v32 <= 3)
      v34 = v32;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23))
    {
      memcpy(v29, v30, v31);
      v35 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v24 + 32))(v29, v30, v23);
      v35 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v23);
    }
  }
  else
  {
    v35 = 0;
    *v29 = *v30;
  }
  *((_BYTE *)v29 + v32) = v35;
  v36 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = v32 + v37 + 1;
  v39 = ((unint64_t)v29 + v38) & ~v37;
  v40 = ((unint64_t)v30 + v38) & ~v37;
  (*(void (**)(unint64_t, unint64_t))(v36 + 32))(v39, v40);
  v41 = *(_QWORD *)(v36 + 64) + 7;
  v42 = (_QWORD *)((v41 + v39) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)((v41 + v40) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v44 = *v45;
  v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v48 = *v49;
  v50 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v50 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 32))(((unint64_t)v48 + *(unsigned __int8 *)(v51 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80), ((unint64_t)v49 + *(unsigned __int8 *)(v51 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80), v50);
  return a1;
}

uint64_t sub_10027AFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  size_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;

  v6 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = (_DWORD *)((v6 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((a2 + 19) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 4) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 4) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  swift_weakTakeAssign(v15, v16);
  swift_weakTakeAssign(v15 + 8, v16 + 8);
  swift_weakTakeAssign(v15 + 16, v16 + 16);
  swift_unknownObjectWeakTakeAssign(v15 + 24, v16 + 24);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v17 = (uint64_t *)((v15 + 47) & 0xFFFFFFFFFFFFFFF8);
  v18 = (uint64_t *)((v16 + 47) & 0xFFFFFFFFFFFFF8);
  v19 = *v17;
  *v17 = *v18;
  swift_release(v19);
  v20 = (uint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (uint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  v22 = *v20;
  *v20 = *v21;
  swift_release(v22);
  v23 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = *(void **)v23;
  *(_QWORD *)v23 = *v24;

  *(_QWORD *)(v23 + 8) = v24[1];
  v26 = type metadata accessor for UserInterfaceSizeClass(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_DWORD *)(v27 + 84);
  v29 = *(_DWORD *)(v27 + 80) & 0xF8;
  v30 = v29 + 23;
  v31 = v29 + 23 + v23;
  v32 = ~v29 & 0xFFFFFFFFFFFFFFF8;
  v33 = (_QWORD *)(v31 & v32);
  v34 = (unint64_t)v24 + v30;
  v35 = (_QWORD *)(v34 & v32);
  v36 = *(_QWORD *)(v27 + 64);
  if ((v31 & v32) != (v34 & v32))
  {
    v37 = v26;
    if (v28)
      v38 = *(_QWORD *)(v27 + 64);
    else
      v38 = v36 + 1;
    if (v38 <= 8)
      v39 = 8;
    else
      v39 = v38;
    v40 = *((unsigned __int8 *)v33 + v39);
    if (v40 >= 2)
    {
      if (v39 <= 3)
        v41 = v39;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v40 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v33, 1, v26))
        (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v33, v37);
    }
    else
    {
      swift_release(*v33);
    }
    v42 = *((unsigned __int8 *)v35 + v39);
    if (v42 >= 2)
    {
      if (v39 <= 3)
        v43 = v39;
      else
        v43 = 4;
      __asm { BR              X12 }
    }
    if (v42 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v35, 1, v37))
      {
        memcpy(v33, v35, v38);
        v44 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v27 + 32))(v33, v35, v37);
        v44 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v33, 0, 1, v37);
      }
    }
    else
    {
      v44 = 0;
      *v33 = *v35;
    }
    *((_BYTE *)v33 + v39) = v44;
  }
  if (v28)
    v45 = v36;
  else
    v45 = v36 + 1;
  if (v45 <= 8)
    v45 = 8;
  v46 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v47 = *(unsigned __int8 *)(v46 + 80);
  v48 = v45 + v47 + 1;
  v49 = ((unint64_t)v33 + v48) & ~v47;
  v50 = ((unint64_t)v35 + v48) & ~v47;
  (*(void (**)(unint64_t, unint64_t))(v46 + 40))(v49, v50);
  v51 = *(_QWORD *)(v46 + 64) + 7;
  v52 = (_QWORD *)((v51 + v49) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_QWORD *)((v51 + v50) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  v55 = (_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v54 = *v55;
  v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFF8);
  v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFF8);
  *v56 = *v57;
  v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v58 = *v59;
  v60 = type metadata accessor for Logger(0);
  v61 = *(_QWORD *)(v60 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v61 + 40))(((unint64_t)v58 + *(unsigned __int8 *)(v61 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80), ((unint64_t)v59 + *(unsigned __int8 *)(v61 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80), v60);
  return a1;
}

uint64_t sub_10027B3C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int v33;
  unsigned int v35;
  int v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = type metadata accessor for GeometryProxy(0);
  v6 = *(_QWORD *)(v41 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(type metadata accessor for UserInterfaceSizeClass(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  v40 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v40 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v7 <= v12)
    v13 = *(_DWORD *)(v11 + 84);
  else
    v13 = v7;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int *)(v15 + 84);
  if (v13 <= v16)
    v17 = *(_DWORD *)(v15 + 84);
  else
    v17 = v13;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  if (v9)
    v19 = v10;
  else
    v19 = v10 + 1;
  if (v19 <= 8)
    v19 = 8;
  if (!a2)
    return 0;
  v20 = v14;
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = *(_QWORD *)(v6 + 64) + 7;
  v23 = *(_DWORD *)(v8 + 80) & 0xF8;
  v24 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 + 23;
  v26 = *(unsigned __int8 *)(v11 + 80);
  v27 = v19 + v26 + 1;
  v28 = *(_QWORD *)(v11 + 64) + 7;
  v29 = *(unsigned __int8 *)(v15 + 80);
  v30 = v29 + 8;
  if (a2 <= v18)
    goto LABEL_35;
  v31 = ((v30
        + ((((((((v28
                + ((v27
                  + ((v25
                    + ((((((((v22 + ((v21 + 20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & v24)) & ~v26)) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v29)
      + *(_QWORD *)(v15 + 64);
  v32 = 8 * v31;
  if (v31 <= 3)
  {
    v35 = ((a2 - v18 + ~(-1 << v32)) >> v32) + 1;
    if (HIWORD(v35))
    {
      v33 = *(_DWORD *)(a1 + v31);
      if (!v33)
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v35 > 0xFF)
    {
      v33 = *(unsigned __int16 *)(a1 + v31);
      if (!*(_WORD *)(a1 + v31))
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v35 < 2)
    {
LABEL_35:
      if ((v17 & 0x80000000) != 0)
      {
        v38 = (((a1 + 19) & 0xFFFFFFFFFFFFFFFCLL) + v21 + 4) & ~v21;
        if ((_DWORD)v7 == v18)
        {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v38, v7, v41);
        }
        else
        {
          v39 = (v27
               + ((v25
                 + ((((((((v22 + v38) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)) & v24)) & ~v26;
          if ((_DWORD)v12 == v18)
            return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v39, v12, v40);
          else
            return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))((v30+ ((((((((v28 + v39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)) & ~v29, v16, v20);
        }
      }
      else if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
      {
        return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
      }
      else
      {
        return 0;
      }
    }
  }
  v33 = *(unsigned __int8 *)(a1 + v31);
  if (!*(_BYTE *)(a1 + v31))
    goto LABEL_35;
LABEL_26:
  v36 = (v33 - 1) << v32;
  if (v31 > 3)
    v36 = 0;
  if ((_DWORD)v31)
  {
    if (v31 <= 3)
      v37 = v31;
    else
      v37 = 4;
    __asm { BR              X12 }
  }
  return v18 + v36 + 1;
}

void sub_10027B700(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  _BYTE *v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;

  v7 = *(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for UserInterfaceSizeClass(0) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v8 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v8;
  v14 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  if (v13 <= *(_DWORD *)(v14 + 84))
    v15 = *(_DWORD *)(v14 + 84);
  else
    v15 = v13;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  v17 = *(_DWORD *)(v9 + 80) & 0xF8;
  v18 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  v19 = v17 + 23;
  if (v10)
    v20 = v11;
  else
    v20 = v11 + 1;
  if (v20 <= 8)
    v20 = 8;
  v21 = ((*(unsigned __int8 *)(v14 + 80)
        + 8
        + ((((((((*(_QWORD *)(v12 + 64)
                + 7
                + ((v20
                  + *(unsigned __int8 *)(v12 + 80)
                  + 1
                  + ((v19
                    + ((((((((*(_QWORD *)(v7 + 64)
                            + 7
                            + ((*(unsigned __int8 *)(v7 + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & 0xFFFFFFFFFFFFFFF8)
                          + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & v18)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
      + *(_QWORD *)(v14 + 64);
  if (a3 <= v16)
  {
    v23 = 0;
    v22 = a1;
  }
  else
  {
    v22 = a1;
    if (v21 <= 3)
    {
      v26 = ((a3 - v16 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      v24 = a2;
      if (HIWORD(v26))
      {
        v23 = &dword_100000004;
      }
      else if (v26 >= 0x100)
      {
        v23 = 2;
      }
      else
      {
        v23 = v26 > 1;
      }
LABEL_20:
      if (v16 < v24)
      {
        v25 = ~v16 + v24;
        if (v21 < 4)
        {
          if ((_DWORD)v21)
          {
            v27 = v25 & ~(-1 << (8 * v21));
            bzero(v22, v21);
            if ((_DWORD)v21 == 3)
            {
              *(_WORD *)v22 = v27;
              v22[2] = BYTE2(v27);
            }
            else if ((_DWORD)v21 == 2)
            {
              *(_WORD *)v22 = v27;
            }
            else
            {
              *v22 = v27;
            }
          }
        }
        else
        {
          bzero(v22, v21);
          *(_DWORD *)v22 = v25;
        }
        __asm { BR              X10 }
      }
      __asm { BR              X7 }
    }
    v23 = &_mh_execute_header.magic + 1;
  }
  v24 = a2;
  goto LABEL_20;
}

uint64_t type metadata accessor for PageTurnView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageTurnView);
}

uint64_t sub_10027BAD4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100869838, 1);
}

uint64_t sub_10027BB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  double v39;
  uint64_t KeyPath;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  __n128 v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  char v66;
  char *v67;
  void *v68;
  id v69;
  uint64_t v70;
  double v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE v100[12];
  int v101;
  _BYTE *v102;
  uint64_t v103;
  _BYTE *v104;
  int v105;
  char *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t WitnessTable;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(_BYTE *, uint64_t);
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  double v127[6];

  v3 = v2;
  v118 = a2;
  *(_QWORD *)&v127[0] = sub_100030B74(&qword_1009D6340);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_100030B74(&qword_1009D6348);
  v117 = v5;
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  v8 = sub_100030B74(&qword_1009D6350);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for WithPageShadow);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _OffsetEffect);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _OpacityEffect);
  v13 = sub_100030B74(&qword_1009D6358);
  *(_QWORD *)&v127[1] = type metadata accessor for ModifiedContent(255, v12, v13);
  *(_QWORD *)&v127[2] = sub_100030B74(&qword_1009D6360);
  *(_QWORD *)&v127[3] = sub_100030B74(&qword_1009D6368);
  *(_QWORD *)&v127[4] = sub_100030B74(&qword_1009D6370);
  *(_QWORD *)&v127[5] = sub_100030B74(&qword_1009D6378);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v110 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v110);
  v15 = type metadata accessor for ZStack(0, v110, WitnessTable);
  v112 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v111 = &v100[-v16];
  v114 = v17;
  v18 = type metadata accessor for ModifiedContent(0, v17, &type metadata for _TransactionModifier);
  v115 = *(_QWORD *)(v18 - 8);
  v116 = v18;
  __chkstk_darwin(v18);
  v122 = &v100[-v19];
  v20 = sub_10004CFD4(&qword_1009D55C0);
  v21 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v20);
  v106 = &v100[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v21);
  v102 = &v100[-v24];
  v123 = *(_QWORD *)(a1 - 8);
  v25 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v23);
  v113 = &v100[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v107 = v26;
  __chkstk_darwin(v25);
  v104 = &v100[-v27];
  v121 = type metadata accessor for ColorScheme(0);
  v108 = *(_QWORD **)(v121 - 8);
  v28 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v121);
  v30 = &v100[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v32 = &v100[-v31];
  v120 = (void (*)(_BYTE *, uint64_t))type metadata accessor for PageTurnViewModel.State(0);
  v33 = ((uint64_t (*)(void (*)(_BYTE *, uint64_t)))__chkstk_darwin)(v120);
  v35 = &v100[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v33);
  v37 = &v100[-v36];
  v103 = a1;
  v38 = *(int *)(a1 + 52);
  v39 = *(double *)(v3 + v38);
  KeyPath = swift_getKeyPath(&unk_100715D10);
  v127[0] = v39;
  v119 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v127, KeyPath, v119);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(v37);
  v41 = (void *)sub_100280CFC(a1);
  v42 = swift_getKeyPath(&unk_100715D38);
  v43 = swift_getKeyPath(&unk_100715D60);
  v44 = v41;
  static Published.subscript.getter(v32, v44, v42, v43);

  swift_release(v42);
  v45 = swift_release(v43);
  v46 = v108;
  v47 = v121;
  ((void (*)(_BYTE *, _QWORD, uint64_t, __n128))v108[13])(v30, enum case for ColorScheme.dark(_:), v121, v45);
  v105 = static ColorScheme.== infix(_:_:)(v32, v30);
  v48 = (void (*)(_BYTE *, uint64_t))v46[1];
  v49 = v30;
  v50 = (uint64_t)v37;
  v51 = v104;
  v48(v49, v47);
  v48(v32, v47);
  v121 = v38;
  sub_10035D360(v127);
  swift_storeEnumTagMultiPayload(v35, v120, 2);
  LOBYTE(v47) = sub_100361374(v50, (uint64_t)v35);
  v108 = v35;
  sub_10002C8F0((uint64_t)v35, type metadata accessor for PageTurnViewModel.State);
  v52 = v3;
  v53 = v103;
  v120 = *(void (**)(_BYTE *, uint64_t))(v123 + 16);
  v120(v51, v3);
  if ((v47 & 1) != 0)
  {
    v101 = 0;
    v54 = (uint64_t)v102;
  }
  else
  {
    v55 = *(_QWORD *)&v51[*(int *)(v53 + 52)];
    v56 = swift_getKeyPath(&unk_100715D80);
    v126 = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v126, v56, v119);
    swift_release(v56);
    v57 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v55 + 80));
    v59 = v58;
    v61 = PageTurnStyle.rawValue.getter(0);
    v62 = v60;
    if (v57 == v61 && v59 == v60)
    {
      v101 = 1;
      v62 = v59;
    }
    else
    {
      v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v61, v60, 0);
    }
    v54 = (uint64_t)v102;
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v62);
  }
  (*(void (**)(_BYTE *, uint64_t))(v123 + 8))(v51, v53);
  sub_10035DA88(v54);
  v63 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48);
  if (v64(v54, 1, v63) == 1)
  {
    sub_100010960(v54, &qword_1009D55C0);
    v65 = 1;
  }
  else
  {
    v65 = *(unsigned __int8 *)(v54 + *(int *)(v63 + 24));
    sub_10002C8F0(v54, _s14descr1008F7311C5StateO4TurnVMa);
  }
  v66 = static LocationMovement.Direction.== infix(_:_:)(v65, 1);
  v67 = v106;
  sub_10035DA88((uint64_t)v106);
  if (v64((uint64_t)v67, 1, v63) == 1)
  {
    sub_100010960((uint64_t)v67, &qword_1009D55C0);
    v68 = 0;
  }
  else
  {
    v68 = *(void **)&v67[*(int *)(v63 + 32)];
    v69 = v68;
    sub_10002C8F0((uint64_t)v67, _s14descr1008F7311C5StateO4TurnVMa);
  }
  v106 = (char *)v68;
  sub_10035DC6C();
  v71 = __chkstk_darwin(v70);
  v72 = *(_BYTE **)(v53 + 24);
  v73 = v117;
  *(_QWORD *)&v100[-96] = v117;
  *(_QWORD *)&v100[-88] = v72;
  v104 = v72;
  *(_QWORD *)&v100[-80] = v52;
  v100[-72] = v66 & 1;
  *(_QWORD *)&v100[-64] = v127;
  *(_QWORD *)&v100[-56] = v74;
  v100[-48] = v105 & 1;
  *(double *)&v100[-40] = v71;
  v100[-32] = v101 & 1;
  *(_QWORD *)&v100[-24] = v68;
  *(_QWORD *)&v100[-16] = v50;
  v76 = static Alignment.center.getter(v75);
  v77 = v111;
  ZStack.init(alignment:content:)(v76, v78, sub_100280D74, &v100[-112], v110, WitnessTable);
  v79 = v113;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v120)(v113, v52, v53);
  v80 = v123;
  v81 = *(unsigned __int8 *)(v123 + 80);
  v82 = (v81 + 32) & ~v81;
  v83 = v82 + v107;
  WitnessTable = v82 + v107;
  v107 = v81 | 7;
  v84 = swift_allocObject(&unk_1008F7EC0, v83, v81 | 7);
  v110 = v50;
  v85 = v84;
  *(_QWORD *)(v84 + 16) = v73;
  *(_QWORD *)(v84 + 24) = v72;
  v123 = *(_QWORD *)(v80 + 32);
  ((void (*)(uint64_t, _BYTE *, uint64_t))v123)(v84 + v82, v79, v53);
  v86 = v114;
  v87 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v114);
  View.transaction(_:)(sub_100280DBC, v85, v86, v87);
  v88 = swift_release(v85);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v112 + 8))(v77, v86, v88);
  v89 = *(_QWORD *)(v52 + v121);
  v90 = swift_getKeyPath(&unk_100715D10);
  v126 = v89;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v126, v90, v119);
  swift_release(v90);
  v91 = v108;
  CurrentValueSubject.value.getter(v108);
  LOBYTE(v80) = sub_10035F558();
  sub_10002C8F0((uint64_t)v91, type metadata accessor for PageTurnViewModel.State);
  LOBYTE(v126) = v80;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v120)(v79, v52, v53);
  v92 = swift_allocObject(&unk_1008F7EE8, WitnessTable, v107);
  v93 = v104;
  *(_QWORD *)(v92 + 16) = v73;
  *(_QWORD *)(v92 + 24) = v93;
  ((void (*)(uint64_t, _BYTE *, uint64_t))v123)(v92 + v82, v79, v53);
  v94 = sub_10004CFD4(&qword_1009D6388);
  v124 = v87;
  v125 = &protocol witness table for _TransactionModifier;
  v95 = v116;
  v96 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v116);
  v97 = sub_100281870(&qword_1009D6390, &qword_1009D6388, (void (*)(void))sub_100280E9C, (uint64_t)&protocol conformance descriptor for <A> A?);
  v98 = v122;
  View.onChange<A>(of:initial:_:)(&v126, 0, sub_100280E34, v92, v95, v94, v96, v97);
  swift_release(v92);

  (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v98, v95);
  return sub_10002C8F0(v110, type metadata accessor for PageTurnViewModel.State);
}

void sub_10027C514(uint64_t a1@<X0>, int a2@<W1>, double *a3@<X2>, int a4@<W3>, int a5@<W4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t KeyPath;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  Swift::String v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  Swift::String v121;
  double *v122;
  double v123;
  Swift::String v124;
  void *object;
  Swift::String v126;
  Swift::String v127;
  double v128;
  uint64_t v129;
  uint64_t WitnessTable;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  double v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  __n128 v166;
  void (*v167)(char *, uint64_t, __n128);
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  void *v188;
  id v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  double *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void **v208;
  uint64_t v209;
  uint64_t v210;
  double v211;
  double v212;
  double v213;
  double v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  __int128 v224;
  uint64_t v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int *v236;
  char v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  uint64_t v248;
  double *v249;
  uint64_t v250;
  uint64_t *v251;
  void *v252;
  double v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t v261;
  void *v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  __n128 v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t (**v301)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  double *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  _QWORD *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  char *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  uint64_t v394;
  void **v395;
  uint64_t v396;
  _QWORD *v397;
  uint64_t v398;
  uint64_t v399;
  double *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  int v420;
  int v421;
  int v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  _QWORD v426[6];
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  _OWORD v431[3];
  __int128 v432;
  __int128 v433;
  _OWORD v434[2];
  uint64_t v435[17];
  char v436;
  unint64_t v437;
  _QWORD *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  _QWORD v443[6];
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  void *v449;
  uint64_t v450;
  void *v451;
  uint64_t v452;
  unint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  uint64_t v468;
  _BYTE v469[175];

  v411 = a7;
  v393 = a6;
  v421 = a5;
  v422 = a4;
  v400 = a3;
  v420 = a2;
  v408 = a9;
  v419 = a12;
  v337 = sub_10004CFD4(&qword_1009D63A0);
  __chkstk_darwin(v337);
  v341 = (uint64_t)&v325 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v338 = sub_10004CFD4(&qword_1009D63A8);
  __chkstk_darwin(v338);
  v339 = (uint64_t)&v325 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = sub_10004CFD4(&qword_1009D63B0);
  v18 = __chkstk_darwin(v374);
  v342 = (uint64_t)&v325 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v340 = (uint64_t)&v325 - v21;
  __chkstk_darwin(v20);
  v343 = (uint64_t)&v325 - v22;
  v371 = sub_10004CFD4(&qword_1009D63B8);
  __chkstk_darwin(v371);
  v373 = (uint64_t)&v325 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v372 = sub_10004CFD4(&qword_1009D63C0);
  __chkstk_darwin(v372);
  v336 = (uint64_t)&v325 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for PageTurnView(0, a8, a12, v25);
  v334 = *(_QWORD *)(v26 - 8);
  v332 = *(_QWORD *)(v334 + 64);
  __chkstk_darwin(v26);
  v333 = (char *)&v325 - v27;
  v28 = sub_10004CFD4(&qword_1009D63C8);
  __chkstk_darwin(v28);
  v370 = (uint64_t)&v325 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v326 = sub_10004CFD4(&qword_1009D63D0);
  __chkstk_darwin(v326);
  v327 = (uint64_t)&v325 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = sub_10004CFD4(&qword_1009D63D8);
  v31 = __chkstk_darwin(v325);
  v329 = (uint64_t)&v325 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v328 = (uint64_t)&v325 - v34;
  __chkstk_darwin(v33);
  v331 = (uint64_t)&v325 - v35;
  v330 = sub_10004CFD4(&qword_1009D63E0);
  v36 = __chkstk_darwin(v330);
  v335 = (uint64_t)&v325 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v369 = (uint64_t)&v325 - v38;
  v407 = sub_10004CFD4(&qword_1009D6370);
  v39 = __chkstk_darwin(v407);
  v416 = (uint64_t)&v325 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v415 = (uint64_t)&v325 - v41;
  v42 = type metadata accessor for LayoutDirection(0);
  v351 = *(_QWORD *)(v42 - 8);
  v352 = v42;
  __chkstk_darwin(v42);
  v350 = (char *)&v325 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10004CFD4(&qword_1009D63E8);
  __chkstk_darwin(v44);
  v345 = (uint64_t)&v325 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v344 = sub_10004CFD4(&qword_1009D63F0);
  __chkstk_darwin(v344);
  v347 = (uint64_t)&v325 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v346 = sub_10004CFD4(&qword_1009D63F8);
  __chkstk_darwin(v346);
  v396 = (uint64_t)&v325 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v348 = sub_10004CFD4(&qword_1009D6400);
  __chkstk_darwin(v348);
  v368 = (uint64_t)&v325 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v349 = sub_10004CFD4(&qword_1009D6408);
  __chkstk_darwin(v349);
  v355 = (char *)&v325 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v399 = sub_10004CFD4(&qword_1009D6410);
  v398 = *(_QWORD *)(v399 - 8);
  v50 = __chkstk_darwin(v399);
  v354 = (uint64_t)&v325 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v353 = (uint64_t)&v325 - v52;
  v405 = sub_10004CFD4(&qword_1009D6368);
  v53 = __chkstk_darwin(v405);
  v406 = (uint64_t)&v325 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  v424 = (uint64_t)&v325 - v55;
  v56 = sub_10004CFD4(&qword_1009D6418);
  __chkstk_darwin(v56);
  v357 = (uint64_t *)((char *)&v325 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v356 = sub_10004CFD4(&qword_1009D6420);
  __chkstk_darwin(v356);
  v362 = (uint64_t)&v325 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v358 = sub_10004CFD4(&qword_1009D6428);
  __chkstk_darwin(v358);
  v361 = (uint64_t)&v325 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v359 = sub_10004CFD4(&qword_1009D6430);
  v60 = __chkstk_darwin(v359);
  v364 = (uint64_t)&v325 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __chkstk_darwin(v60);
  v365 = (uint64_t)&v325 - v63;
  __chkstk_darwin(v62);
  v367 = (uint64_t)&v325 - v64;
  v363 = sub_10004CFD4(&qword_1009D6438);
  __chkstk_darwin(v363);
  v366 = (uint64_t)&v325 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v392 = sub_10004CFD4(&qword_1009D6440);
  v391 = *(_QWORD *)(v392 - 8);
  __chkstk_darwin(v392);
  v360 = (uint64_t)&v325 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v403 = sub_10004CFD4(&qword_1009D6360);
  v67 = __chkstk_darwin(v403);
  v404 = (uint64_t)&v325 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v418 = (uint64_t)&v325 - v69;
  v394 = type metadata accessor for PageTurnViewModel.State(0);
  v70 = __chkstk_darwin(v394);
  v395 = (void **)((char *)&v325 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = __chkstk_darwin(v70);
  v397 = (uint64_t *)((char *)&v325 - v73);
  v74 = *(_QWORD *)(a8 - 8);
  __chkstk_darwin(v72);
  v76 = (char *)&v325 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100030B74(&qword_1009D6348);
  v78 = type metadata accessor for ModifiedContent(0, a8, v77);
  v377 = *(_QWORD *)(v78 - 8);
  v79 = __chkstk_darwin(v78);
  v417 = (char *)&v325 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  v375 = (uint64_t)&v325 - v81;
  v82 = sub_100030B74(&qword_1009D6350);
  v83 = type metadata accessor for ModifiedContent(0, v78, v82);
  v383 = *(_QWORD *)(v83 - 8);
  v380 = v83;
  __chkstk_darwin(v83);
  v376 = (char *)&v325 - v84;
  v86 = type metadata accessor for ModifiedContent(0, v85, &type metadata for WithPageShadow);
  v384 = *(_QWORD *)(v86 - 8);
  v382 = v86;
  __chkstk_darwin(v86);
  v378 = (char *)&v325 - v87;
  v89 = type metadata accessor for ModifiedContent(0, v88, &type metadata for _OffsetEffect);
  v387 = *(_QWORD *)(v89 - 8);
  v90 = __chkstk_darwin(v89);
  v379 = (char *)&v325 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v90);
  v385 = (char *)&v325 - v92;
  v381 = v93;
  v94 = type metadata accessor for ModifiedContent(0, v93, &type metadata for _OpacityEffect);
  v389 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v388 = (char *)&v325 - v95;
  v96 = sub_100030B74(&qword_1009D6358);
  v390 = v94;
  v414 = type metadata accessor for ModifiedContent(0, v94, v96);
  v412 = *(_QWORD *)(v414 - 8);
  v97 = __chkstk_darwin(v414);
  v413 = (char *)&v325 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __chkstk_darwin(v97);
  v386 = (char *)&v325 - v100;
  __chkstk_darwin(v99);
  v423 = (uint64_t)&v325 - v101;
  v102 = v26;
  v410 = v26;
  v103 = (void *)sub_100280CFC(v26);
  KeyPath = swift_getKeyPath(&unk_100715DA8);
  v105 = swift_getKeyPath(&unk_100715DD0);
  v106 = v103;
  static Published.subscript.getter(v469, v106, KeyPath, v105);

  swift_release(KeyPath);
  swift_release(v105);
  v402 = *(_QWORD *)v469;
  v401 = swift_getKeyPath(&unk_100715DF0);
  v107 = *(int *)(v102 + 64);
  v425 = a1;
  v108 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 16))(v76, a1 + v107, a8);
  v426[2] = a8;
  v109 = v419;
  v426[3] = v419;
  v426[4] = a1;
  v110 = static Alignment.center.getter(v108);
  v112 = v111;
  v113 = sub_10004CFD4(&qword_1009D6448);
  v114 = sub_100030B34(&qword_1009D6450, &qword_1009D6448, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v115 = v109;
  View.overlay<A>(alignment:content:)(v110, v112, sub_100280F6C, v426, a8, v113, v109, v114);
  v116 = *(void (**)(char *, uint64_t))(v74 + 8);
  v409 = a8;
  v116(v76, a8);
  *(_QWORD *)v469 = 0;
  *(_QWORD *)&v469[8] = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v117._object = (void *)0xEB00000000203F6BLL;
  v117._countAndFlagsBits = 0x636142676E696F67;
  String.append(_:)(v117);
  if ((v420 & 1) != 0)
    v118 = 1702195828;
  else
    v118 = 0x65736C6166;
  if ((v420 & 1) != 0)
    v119 = 0xE400000000000000;
  else
    v119 = 0xE500000000000000;
  v120 = v119;
  String.append(_:)(*(Swift::String *)&v118);
  swift_bridgeObjectRelease(v119);
  v121._countAndFlagsBits = 0x66664F6576696C20;
  v121._object = (void *)0xED0000203A746573;
  String.append(_:)(v121);
  v122 = v400;
  v123 = *v400;
  v124._countAndFlagsBits = Double.description.getter(*v400);
  object = v124._object;
  String.append(_:)(v124);
  swift_bridgeObjectRelease(object);
  v126._countAndFlagsBits = 0x7974696361706F20;
  v126._object = (void *)0xEB00000000203F20;
  String.append(_:)(v126);
  Double.write<A>(to:)(v469, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a10);
  v127._countAndFlagsBits = 0x7865646E497A202ELL;
  v127._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v127);
  v128 = v122[5];
  Double.write<A>(to:)(v469, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v128);
  *(_QWORD *)&v469[24] = &type metadata for String;
  v129 = sub_100030B34(&qword_1009D6458, &qword_1009D6348, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
  v456 = v115;
  v457 = v129;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v78);
  v131 = v375;
  v132 = v417;
  sub_10060354C(v78, v375);
  v133 = *(void (**)(char *, uint64_t))(v377 + 8);
  v133(v132, v78);
  v134 = _s5Books15CurrentPageViewVwxx_0(v469);
  v469[0] = v422;
  *(double *)&v469[8] = a11;
  v469[16] = v421;
  *(_QWORD *)&v469[24] = 0x3FC999999999999ALL;
  v135 = static Alignment.center.getter(v134);
  v137 = v136;
  v138 = sub_100280F78();
  v139 = v376;
  View.overlay<A>(_:alignment:)(v469, v135, v137, v78, &type metadata for DarkModeBorderRectangle, WitnessTable, v138);
  v140 = v78;
  v141 = v425;
  v133((char *)v131, v140);
  v142 = v410;
  v143 = (void *)sub_100280CFC(v410);
  v144 = v122[4];
  v145 = sub_100030B34(&qword_1009D6468, &qword_1009D6350, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
  v454 = WitnessTable;
  v146 = v142;
  v455 = v145;
  v147 = v143;
  v148 = v380;
  v149 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v380);
  v150 = v378;
  sub_10043DC80(v147, v148, v149, a11, v144);

  (*(void (**)(char *, uint64_t))(v383 + 8))(v139, v148);
  v151 = sub_100280FBC();
  v452 = v149;
  v453 = v151;
  v152 = v379;
  v153 = v382;
  v154 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v382);
  View.offset(x:y:)(v153, v154, v123, 0.0);
  (*(void (**)(char *, uint64_t))(v384 + 8))(v150, v153);
  v417 = (char *)*(int *)(v146 + 52);
  v155 = *(_QWORD *)&v417[v141];
  v156 = swift_getKeyPath(&unk_100715D10);
  *(_QWORD *)v469 = v155;
  v157 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v469, v156, v157);
  swift_release(v156);
  v158 = v397;
  CurrentValueSubject.value.getter(v397);
  LODWORD(v143) = sub_10035F558();
  v159 = sub_10002C8F0((uint64_t)v158, type metadata accessor for PageTurnViewModel.State);
  if ((_DWORD)v143 == 3)
    v160 = static Color.red.getter(v159);
  else
    v160 = static Color.clear.getter(v159);
  v161 = v160;
  v450 = v154;
  v451 = &protocol witness table for _OffsetEffect;
  v162 = v381;
  v163 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v381);
  v164 = v387;
  v165 = v385;
  (*(void (**)(char *, char *, uint64_t))(v387 + 16))(v385, v152, v162);
  v166 = swift_release(v161);
  v167 = *(void (**)(char *, uint64_t, __n128))(v164 + 8);
  v167(v152, v162, v166);
  v168 = v388;
  View.opacity(_:)(v162, v163, a10);
  ((void (*)(char *, uint64_t))v167)(v165, v162);
  v448 = v163;
  v449 = &protocol witness table for _OpacityEffect;
  v169 = v390;
  v170 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v390);
  v171 = (uint64_t)v386;
  View.zIndex(_:)(v169, v170, v128);
  (*(void (**)(char *, uint64_t))(v389 + 8))(v168, v169);
  v172 = sub_100030B34(&qword_1009D6478, &qword_1009D6358, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v446 = v170;
  v447 = v172;
  v173 = v414;
  v397 = (_QWORD *)swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v414);
  sub_100344038(v171, v173, v423);
  v400 = *(double **)(v412 + 8);
  ((void (*)(uint64_t, uint64_t))v400)(v171, v173);
  v174 = v421;
  if (v393)
  {
    v175 = v146;
    v176 = v422 & 1;
    v393 = v393;
    v177 = v357;
    v178 = v425;
    v179 = sub_10027ECE4(v393, v175, v357);
    v180 = static Alignment.center.getter(v179);
    v182 = v181;
    v183 = v362;
    sub_10000B5E4((uint64_t)v177, v362, &qword_1009D6418);
    v184 = v183 + *(int *)(v356 + 36);
    *(_BYTE *)v184 = v176;
    v146 = v175;
    *(double *)(v184 + 8) = a11;
    *(_BYTE *)(v184 + 16) = v174 & 1;
    *(_QWORD *)(v184 + 24) = 0x3FC999999999999ALL;
    *(_QWORD *)(v184 + 32) = v180;
    *(_QWORD *)(v184 + 40) = v182;
    v185 = (uint64_t)v177;
    v186 = v178;
    sub_100010960(v185, &qword_1009D6418);
    v187 = (void *)sub_100280CFC(v175);
    v188 = (void *)objc_opt_self(UITraitCollection);
    v189 = v187;
    v190 = objc_msgSend(v188, "currentTraitCollection");
    objc_msgSend(v190, "displayCornerRadius");
    v192 = v191;

    v193 = v361;
    sub_10000B5E4(v183, v361, &qword_1009D6420);

    v194 = v193 + *(int *)(v358 + 36);
    *(_QWORD *)v194 = v189;
    *(double *)(v194 + 8) = a11;
    *(double *)(v194 + 16) = v144;
    *(_QWORD *)(v194 + 24) = 0x3FB999999999999ALL;
    *(_QWORD *)(v194 + 32) = v192;
    *(_QWORD *)(v194 + 40) = 0x4010000000000000;
    sub_100010960(v183, &qword_1009D6420);
    v195 = v364;
    sub_10000B5E4(v193, v364, &qword_1009D6428);
    v196 = (double *)(v195 + *(int *)(v359 + 36));
    *v196 = v123;
    v196[1] = 0.0;
    v197 = sub_100010960(v193, &qword_1009D6428);
    v198 = static Color.orange.getter(v197);
    v199 = v365;
    sub_10000B5E4(v195, v365, &qword_1009D6430);
    swift_release(v198);
    sub_100010960(v195, &qword_1009D6430);

    v200 = v367;
    sub_100025B3C(v199, v367, &qword_1009D6430);
    v201 = v366;
    sub_10000B5E4(v200, v366, &qword_1009D6430);
    *(_BYTE *)(v201 + *(int *)(v363 + 36)) = 0;
    sub_100010960(v200, &qword_1009D6430);
    v202 = v360;
    sub_10000B5E4(v201, v360, &qword_1009D6438);
    v203 = v392;
    *(double *)(v202 + *(int *)(v392 + 36)) = v128;
    v204 = v201;
    v174 = v421;
    sub_100010960(v204, &qword_1009D6438);
    v205 = v418;
    sub_100025B3C(v202, v418, &qword_1009D6440);
    v206 = 0;
  }
  else
  {
    v206 = 1;
    v205 = v418;
    v203 = v392;
    v186 = v425;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v391 + 56))(v205, v206, 1, v203);
  if ((v174 & 1) != 0)
  {
    if ((v422 & 1) != 0)
      v207 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
    else
      v207 = Color.init(rgbaHex:)(1010582527);
    v209 = v207;
    v210 = v345;
    sub_10027ED3C(v207, v146, v345);
    swift_release(v209);
    if ((v420 & 1) != 0)
    {
      sub_10035DC6C();
      v212 = v211 * *(double *)(v186 + *(int *)(v146 + 68));
    }
    else
    {
      v213 = *(double *)(v186 + *(int *)(v146 + 68));
      sub_10035DC6C();
      v212 = v213 - v213 * v214;
    }
    v215 = v347;
    sub_10000B5E4(v210, v347, &qword_1009D63E8);
    *(double *)(v215 + *(int *)(v344 + 36)) = v212;
    v216 = sub_100010960(v210, &qword_1009D63E8);
    v217 = static Alignment.center.getter(v216);
    v219 = v218;
    v220 = static VerticalAlignment.center.getter(v217);
    sub_10027EF40(v420 & 1, v409, v419, (uint64_t)&v458);
    *(_OWORD *)&v469[71] = v462;
    *(_OWORD *)&v469[55] = v461;
    *(_OWORD *)&v469[119] = v465;
    *(_OWORD *)&v469[135] = v466;
    *(_OWORD *)&v469[151] = v467;
    *(_OWORD *)&v469[87] = v463;
    *(_OWORD *)&v469[103] = v464;
    *(_OWORD *)&v469[7] = v458;
    LOBYTE(v435[0]) = 1;
    *(_QWORD *)&v469[167] = v468;
    *(_OWORD *)&v469[23] = v459;
    *(_OWORD *)&v469[39] = v460;
    v433 = *(_OWORD *)&v469[128];
    v434[0] = *(_OWORD *)&v469[144];
    *(_OWORD *)((char *)v434 + 15) = *(_OWORD *)&v469[159];
    v431[0] = *(_OWORD *)&v469[64];
    v431[1] = *(_OWORD *)&v469[80];
    v431[2] = *(_OWORD *)&v469[96];
    v432 = *(_OWORD *)&v469[112];
    v427 = *(_OWORD *)v469;
    v428 = *(_OWORD *)&v469[16];
    v429 = *(_OWORD *)&v469[32];
    v430 = *(_OWORD *)&v469[48];
    v221 = v396;
    sub_10000B5E4(v215, v396, &qword_1009D63F0);
    v222 = v221 + *(int *)(v346 + 36);
    v223 = v431[2];
    *(_OWORD *)(v222 + 145) = v432;
    v224 = v434[0];
    *(_OWORD *)(v222 + 161) = v433;
    *(_OWORD *)(v222 + 177) = v224;
    v225 = v425;
    *(_OWORD *)(v222 + 192) = *(_OWORD *)((char *)v434 + 15);
    v226 = v429;
    *(_OWORD *)(v222 + 81) = v430;
    v227 = v431[1];
    *(_OWORD *)(v222 + 97) = v431[0];
    *(_OWORD *)(v222 + 113) = v227;
    *(_OWORD *)(v222 + 129) = v223;
    v228 = v428;
    *(_OWORD *)(v222 + 33) = v427;
    *(_OWORD *)(v222 + 49) = v228;
    *(_QWORD *)v222 = v217;
    *(_QWORD *)(v222 + 8) = v219;
    *(_QWORD *)(v222 + 16) = v220;
    *(_QWORD *)(v222 + 24) = 0;
    *(_BYTE *)(v222 + 32) = 1;
    *(_OWORD *)(v222 + 65) = v226;
    sub_100010960(v215, &qword_1009D63F0);
    v229 = swift_getKeyPath(&unk_100715E20);
    v230 = PageProgressDirection.rawValue.getter(*(unsigned __int8 *)(*(_QWORD *)&v417[v225] + 16));
    v232 = v231;
    v234 = PageProgressDirection.rawValue.getter(1);
    v235 = v233;
    if (v230 == v234 && v232 == v233)
    {
      swift_bridgeObjectRelease_n(v232, 2);
      v236 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
    }
    else
    {
      v237 = _stringCompareWithSmolCheck(_:_:expecting:)(v230, v232, v234, v233, 0);
      swift_bridgeObjectRelease(v232);
      swift_bridgeObjectRelease(v235);
      v236 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
      if ((v237 & 1) != 0)
        v236 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
    }
    v238 = (uint64_t)v355;
    v239 = v350;
    v240 = v351;
    v241 = v352;
    (*(void (**)(char *, _QWORD, uint64_t))(v351 + 104))(v350, *v236, v352);
    v242 = v368;
    v243 = (uint64_t *)(v368 + *(int *)(v348 + 36));
    v244 = sub_10004CFD4(&qword_1009D1250);
    (*(void (**)(char *, char *, uint64_t))(v240 + 16))((char *)v243 + *(int *)(v244 + 28), v239, v241);
    *v243 = v229;
    v245 = v396;
    sub_10000B5E4(v396, v242, &qword_1009D63F8);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v239, v241);
    sub_100010960(v245, &qword_1009D63F8);
    v146 = v410;
    if ((v420 & 1) != 0)
    {
      v246 = sub_10035DFB4();
      v208 = v395;
      if (v247)
      {
        v248 = v246;

      }
      else
      {
        v248 = 0;
      }
      v250 = v368;
      sub_10000B5E4(v368, v238, &qword_1009D6400);
      v251 = (uint64_t *)(v238 + *(int *)(v349 + 36));
      *v251 = v248;
      v251[1] = 0;
      sub_100010960(v250, &qword_1009D6400);
      sub_10035DFB4();
      if (v252)
      {
        v128 = v253;

      }
      else
      {
        v128 = 0.0;
      }
    }
    else
    {
      sub_10000B5E4(v242, v238, &qword_1009D6400);
      v249 = (double *)(v238 + *(int *)(v349 + 36));
      *v249 = v123;
      v249[1] = 0.0;
      sub_100010960(v242, &qword_1009D6400);
      v208 = v395;
    }
    v254 = v354;
    sub_10000B5E4(v238, v354, &qword_1009D6408);
    v255 = v399;
    *(double *)(v254 + *(int *)(v399 + 36)) = v128 + 1.0;
    sub_100010960(v238, &qword_1009D6408);
    v256 = v254;
    v257 = v353;
    sub_100025B3C(v256, v353, &qword_1009D6410);
    v258 = v257;
    v259 = v424;
    sub_100025B3C(v258, v424, &qword_1009D6410);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v398 + 56))(v259, 0, 1, v255);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v398 + 56))(v424, 1, 1, v399);
    v208 = v395;
  }
  sub_10002CD84(v411, (uint64_t)v208, type metadata accessor for PageTurnViewModel.State);
  p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___ATConnectionDelegate + 48);
  if (swift_getEnumCaseMultiPayload(v208, v394))
  {
    sub_10002C8F0((uint64_t)v208, type metadata accessor for PageTurnViewModel.State);
    v261 = sub_10035DFB4();
    if (v262)
    {
      v264 = v262;
      v265 = v263;
      v266 = v370;
      sub_10027F0E4(v262, v146, v370, *(double *)&v261);
      v267 = v341;
      sub_10000B5E4(v266, v341, &qword_1009D63C8);
      *(_QWORD *)(v267 + *(int *)(v337 + 36)) = v265;
      sub_100010960(v266, &qword_1009D63C8);
      v269 = static Edge.Set.all.getter(v268);
      v270 = v339;
      sub_10000B5E4(v267, v339, &qword_1009D63A0);
      *(_BYTE *)(v270 + *(int *)(v338 + 36)) = v269;
      sub_100010960(v267, &qword_1009D63A0);
      v271 = v342;
      sub_10000B5E4(v270, v342, &qword_1009D63A8);
      v272 = v374;
      *(_BYTE *)(v271 + *(int *)(v374 + 36)) = 0;
      v273 = sub_100010960(v270, &qword_1009D63A8);
      v274 = static Color.orange.getter(v273);
      v275 = v340;
      sub_10000B5E4(v271, v340, &qword_1009D63B0);
      swift_release(v274);
      sub_100010960(v271, &qword_1009D63B0);
      v276 = v275;
      v277 = v343;
      sub_100025B3C(v276, v343, &qword_1009D63B0);
      v278 = v373;
      sub_10000B5E4(v277, v373, &qword_1009D63B0);
      swift_storeEnumTagMultiPayload(v278, v371, 1);
      v279 = sub_100030B34(&qword_1009D6540, &qword_1009D63C0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v280 = sub_10028156C(&qword_1009D6548, &qword_1009D63B0, (void (*)(void))sub_100281704, (void (*)(void))sub_1002812F0);
      v281 = v278;
      v282 = v416;
      _ConditionalContent<>.init(storage:)(v281, v372, v272, v279, v280);

      sub_100010960(v277, &qword_1009D63B0);
      v283 = sub_10004CFD4(&qword_1009D6480);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 56))(v282, 0, 1, v283);
      v284 = sub_100025B3C(v282, v415, &qword_1009D6370);
    }
    else
    {
      v306 = sub_10004CFD4(&qword_1009D6480);
      v284 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 56))(v415, 1, 1, v306);
      v282 = v416;
    }
  }
  else
  {
    v285 = *v208;
    v286 = v370;
    v287 = v425;
    sub_10027F0E4(*v208, v146, v370, 0.0);
    v288 = v327;
    sub_10000B5E4(v286, v327, &qword_1009D63C8);
    *(_QWORD *)(v288 + *(int *)(v326 + 52)) = v285;
    sub_100010960(v286, &qword_1009D63C8);
    v289 = v329;
    sub_10000B5E4(v288, v329, &qword_1009D63D0);
    *(_QWORD *)(v289 + *(int *)(v325 + 36)) = 0x4014000000000000;
    v290 = sub_100010960(v288, &qword_1009D63D0);
    v291 = static Color.yellow.getter(v290);
    v292 = v328;
    sub_10000B5E4(v289, v328, &qword_1009D63D8);
    swift_release(v291);
    sub_100010960(v289, &qword_1009D63D8);
    v293 = v331;
    sub_100025B3C(v292, v331, &qword_1009D63D8);
    v295 = v333;
    v294 = v334;
    (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v333, v287, v146);
    v296 = *(unsigned __int8 *)(v294 + 80);
    v297 = (v296 + 32) & ~v296;
    v298 = swift_allocObject(&unk_1008F7F10, v297 + v332, v296 | 7);
    v299 = v419;
    *(_QWORD *)(v298 + 16) = v409;
    *(_QWORD *)(v298 + 24) = v299;
    (*(void (**)(uint64_t, char *, uint64_t))(v294 + 32))(v298 + v297, v295, v146);
    v300 = v335;
    sub_10000B5E4(v293, v335, &qword_1009D63D8);
    v301 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + *(int *)(v330 + 36));
    *v301 = sub_100281A10;
    v301[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v298;
    v301[2] = 0;
    v301[3] = 0;
    sub_100010960(v293, &qword_1009D63D8);
    sub_100025B3C(v300, v369, &qword_1009D63E0);
    if (qword_1009CDD90 != -1)
      swift_once(&qword_1009CDD90, sub_10027A100);
    if (byte_100A1E408 == 1)
    {
      v302 = Color.init(rgbaHex:)(1610592511);
      v303 = swift_getKeyPath(&unk_100715DF0);
      v304 = static Alignment.center.getter(v303);
      sub_1005F1C8C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v458, 0.0, 1, 200.0, 0, v304, v305, v303, v302);
      swift_release(v302);
      swift_release(v303);
      v431[0] = v462;
      v431[1] = v463;
      v431[2] = v464;
      v432 = v465;
      v427 = v458;
      v428 = v459;
      v429 = v460;
      v430 = v461;
      *(_QWORD *)&v433 = 0x4018000000000000;
      BKAppDelegate.enableMetricsInspectorOnDebugMode()();
    }
    else
    {
      sub_100281A1C((uint64_t)&v427);
    }
    sub_100025B3C((uint64_t)&v427, (uint64_t)v469, &qword_1009D65B0);
    v307 = v369;
    sub_10000B5E4(v369, v300, &qword_1009D63E0);
    sub_100025B3C((uint64_t)v469, (uint64_t)v435, &qword_1009D65B0);
    v308 = v336;
    sub_10000B5E4(v300, v336, &qword_1009D63E0);
    v309 = v308 + *(int *)(sub_10004CFD4(&qword_1009D65B8) + 48);
    sub_100025B3C((uint64_t)v435, (uint64_t)&v458, &qword_1009D65B0);
    sub_100025B3C((uint64_t)&v458, v309, &qword_1009D65B0);
    sub_100025B3C((uint64_t)v435, (uint64_t)&v427, &qword_1009D65B0);
    sub_100281A68(&v458, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100281A38);
    sub_100281A68(v469, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100281A38);
    sub_100281A68(&v427, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100281AC4);
    sub_100010960(v300, &qword_1009D63E0);
    v310 = v373;
    sub_10000B5E4(v308, v373, &qword_1009D63C0);
    swift_storeEnumTagMultiPayload(v310, v371, 0);
    v311 = sub_100030B34(&qword_1009D6540, &qword_1009D63C0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v312 = sub_10028156C(&qword_1009D6548, &qword_1009D63B0, (void (*)(void))sub_100281704, (void (*)(void))sub_1002812F0);
    v313 = v311;
    v282 = v416;
    _ConditionalContent<>.init(storage:)(v310, v372, v374, v313, v312);

    sub_100281A68(v469, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100281AC4);
    sub_100010960(v308, &qword_1009D63C0);
    sub_100010960(v307, &qword_1009D63E0);
    v314 = sub_10004CFD4(&qword_1009D6480);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v314 - 8) + 56))(v282, 0, 1, v314);
    v284 = sub_100025B3C(v282, v415, &qword_1009D6370);
    v205 = v418;
    p_opt_class_meths = &OBJC_PROTOCOL___ATConnectionDelegate.opt_class_meths;
  }
  if (p_opt_class_meths[434] != (__objc2_meth_list *)-1)
    v284 = swift_once(&qword_1009CDD90, sub_10027A100);
  if (byte_100A1E408 == 1)
  {
    v315 = static HorizontalAlignment.center.getter(v284);
    sub_10027FA68(v411, v425, v422 & 1, v409, v419, (uint64_t)v469);
    LOBYTE(v458) = 1;
    LOBYTE(v435[0]) = v469[8];
    LOBYTE(v443[0]) = v469[24];
    LOBYTE(v437) = v469[40];
    LOBYTE(v444) = v469[80];
    v436 = v469[104];
    v427 = (unint64_t)v315;
    LOBYTE(v428) = 1;
    *((_QWORD *)&v428 + 1) = *(_QWORD *)v469;
    LOBYTE(v429) = v469[8];
    *((_QWORD *)&v429 + 1) = *(_QWORD *)&v469[16];
    LOBYTE(v430) = v469[24];
    *((_QWORD *)&v430 + 1) = *(_QWORD *)&v469[32];
    LOBYTE(v431[0]) = v469[40];
    *(_OWORD *)((char *)v431 + 8) = *(_OWORD *)&v469[48];
    *(_OWORD *)((char *)&v431[1] + 8) = *(_OWORD *)&v469[64];
    BYTE8(v431[2]) = v469[80];
    v432 = *(_OWORD *)&v469[88];
    LOBYTE(v433) = v469[104];
    *((_QWORD *)&v433 + 1) = 0x4018000000000000;
    BKAppDelegate.enableMetricsInspectorOnDebugMode()();
  }
  else
  {
    sub_100281000(&v427);
  }
  sub_100025B3C((uint64_t)&v427, (uint64_t)v469, &qword_1009D6378);
  v316 = v401;
  v444 = v401;
  v317 = v402;
  v445 = v402;
  v435[0] = (uint64_t)&v444;
  v318 = (uint64_t)v413;
  v319 = v414;
  (*(void (**)(char *, uint64_t, uint64_t))(v412 + 16))(v413, v423, v414);
  v435[1] = v318;
  v320 = v404;
  sub_10000B5E4(v205, v404, &qword_1009D6360);
  v435[2] = v320;
  v321 = v406;
  sub_10000B5E4(v424, v406, &qword_1009D6368);
  v435[3] = v321;
  v322 = v415;
  sub_10000B5E4(v415, v282, &qword_1009D6370);
  v435[4] = v282;
  sub_100025B3C((uint64_t)v469, (uint64_t)&v458, &qword_1009D6378);
  v435[5] = (uint64_t)&v458;
  swift_retain(v316);
  swift_retain(v317);
  sub_100281970(v469, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10028101C);
  v443[0] = sub_10004CFD4(&qword_1009D6340);
  v443[1] = v319;
  v443[2] = v403;
  v443[3] = v405;
  v443[4] = v407;
  v443[5] = sub_10004CFD4(&qword_1009D6378);
  v437 = sub_10028105C();
  v438 = v397;
  v439 = sub_100281870(&qword_1009D6498, &qword_1009D6360, (void (*)(void))sub_100281124, (uint64_t)&protocol conformance descriptor for <A> A?);
  v440 = sub_100281870(&qword_1009D64D8, &qword_1009D6368, (void (*)(void))sub_100281334, (uint64_t)&protocol conformance descriptor for <A> A?);
  v441 = sub_100281870(&qword_1009D6530, &qword_1009D6370, (void (*)(void))sub_100281660, (uint64_t)&protocol conformance descriptor for <A> A?);
  v442 = sub_100281870(&qword_1009D6588, &qword_1009D6378, (void (*)(void))sub_1002818D4, (uint64_t)&protocol conformance descriptor for <A> A?);
  sub_100341C18(v435, 6uLL, (uint64_t)v443);
  sub_100281970(v469, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002819CC);
  sub_100010960(v322, &qword_1009D6370);
  sub_100010960(v424, &qword_1009D6368);
  sub_100010960(v418, &qword_1009D6360);
  v323 = v400;
  ((void (*)(uint64_t, uint64_t))v400)(v423, v319);
  swift_release(v317);
  swift_release(v316);
  sub_100025B3C((uint64_t)&v458, (uint64_t)&v427, &qword_1009D6378);
  sub_100281970(&v427, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002819CC);
  sub_100010960(v416, &qword_1009D6370);
  sub_100010960(v321, &qword_1009D6368);
  sub_100010960(v320, &qword_1009D6360);
  ((void (*)(char *, uint64_t))v323)(v413, v319);
  v324 = v445;
  swift_release(v444);
  swift_release(v324);
}

void sub_10027E890(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  *a4 = static Alignment.top.getter();
  a4[1] = v8;
  v9 = sub_10004CFD4(&qword_1009D65E0);
  sub_10027E8EC(a1, a2, a3, (uint64_t)a4 + *(int *)(v9 + 44));
}

void sub_10027E8EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t KeyPath;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;

  v8 = sub_10004CFD4(&qword_1009D65C8);
  __chkstk_darwin(v8);
  v10 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v54 = sub_10004CFD4(&qword_1009D65E8);
  v11 = __chkstk_darwin(v54);
  v55 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __chkstk_darwin(v11);
  v15 = &v46[-v14];
  __chkstk_darwin(v13);
  v17 = &v46[-v16];
  v19 = type metadata accessor for PageTurnView(0, a2, a3, v18);
  v20 = (void *)sub_100280CFC(v19);
  KeyPath = swift_getKeyPath(&unk_100715DA8);
  v22 = swift_getKeyPath(&unk_100715DD0);
  v23 = v20;
  static Published.subscript.getter(&v57, v23, KeyPath, v22);

  swift_release(KeyPath);
  swift_release(v22);
  v24 = sub_100281C00();
  v25 = Color.init<A>(_:)(&v57, &type metadata for Color, v24, &protocol witness table for Color);
  v26 = *(_QWORD *)(a1 + *(int *)(v19 + 48));
  v27 = *(_QWORD *)(v26 + 56);
  ObjectType = swift_getObjectType();
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(ObjectType, v27);
  v31 = v30;
  v32 = static Alignment.center.getter(v29);
  v34 = _FrameLayout.init(width:height:alignment:)(&v57, 0, 1, v31, 0, v32, v33);
  v53 = v57;
  v52 = v58;
  v51 = v59;
  v50 = v60;
  v48 = v62;
  v49 = v61;
  v47 = static Edge.Set.top.getter(v34);
  v35 = swift_getKeyPath(&unk_100715EA0);
  v56 = v26;
  v36 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v56, v35, v36);
  swift_release(v35);
  v37 = *(_QWORD *)(v26 + OBJC_IVAR____TtC5Books19BookReaderViewModel__statusBarBackgroundOpacity);
  sub_10028CA68(3, 1, (uint64_t)v10);
  v38 = *(_QWORD *)(a1 + *(int *)(v19 + 52));
  v39 = swift_getKeyPath(&unk_100715EC8);
  v56 = v38;
  v40 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v56, v39, v40);
  swift_release(v39);
  if (*(_BYTE *)(v38 + 17))
    v41 = 1.0;
  else
    v41 = 0.0;
  sub_10000B5E4((uint64_t)v10, (uint64_t)v15, &qword_1009D65C8);
  *(double *)&v15[*(int *)(v54 + 36)] = v41;
  sub_100010960((uint64_t)v10, &qword_1009D65C8);
  sub_100025B3C((uint64_t)v15, (uint64_t)v17, &qword_1009D65E8);
  v42 = v55;
  sub_10000B5E4((uint64_t)v17, (uint64_t)v55, &qword_1009D65E8);
  v43 = v53;
  *(_QWORD *)a4 = v25;
  *(_QWORD *)(a4 + 8) = v43;
  *(_BYTE *)(a4 + 16) = v52;
  *(_QWORD *)(a4 + 24) = v51;
  *(_BYTE *)(a4 + 32) = v50;
  v44 = v48;
  *(_QWORD *)(a4 + 40) = v49;
  *(_QWORD *)(a4 + 48) = v44;
  *(_BYTE *)(a4 + 56) = v47;
  *(_QWORD *)(a4 + 64) = v37;
  v45 = sub_10004CFD4(&qword_1009D65F8);
  sub_10000B5E4((uint64_t)v42, a4 + *(int *)(v45 + 48), &qword_1009D65E8);
  swift_retain(v25);
  sub_100010960((uint64_t)v17, &qword_1009D65E8);
  sub_100010960((uint64_t)v42, &qword_1009D65E8);
  swift_release(v25);
}

uint64_t sub_10027ECE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  *a3 = static Alignment.bottom.getter();
  a3[1] = v7;
  v8 = sub_10004CFD4(&qword_1009D65C0);
  return sub_1002804D4(v3, a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t)a3 + *(int *)(v8 + 44));
}

uint64_t sub_10027ED3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t KeyPath;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v6 = sub_10004CFD4(&qword_1009F4140);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10004CFD4(&qword_1009D6518);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100715DF0);
  v16 = *(_QWORD *)(v3 + *(int *)(a2 + 80));
  v17 = (char *)v11 + *(int *)(v9 + 20);
  v18 = enum case for RoundedCornerStyle.continuous(_:);
  v19 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  *v11 = v16;
  v11[1] = v16;
  sub_10002CD84((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v8[*(int *)(v6 + 36)] = 256;
  sub_10000B5E4((uint64_t)v8, (uint64_t)v14 + *(int *)(v12 + 36), &qword_1009F4140);
  *v14 = KeyPath;
  v14[1] = a1;
  swift_retain(a1);
  swift_retain(KeyPath);
  sub_100010960((uint64_t)v8, &qword_1009F4140);
  sub_10002C8F0((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  swift_release(KeyPath);
  v20 = v23;
  sub_10000B5E4((uint64_t)v14, v23, &qword_1009D6518);
  *(_BYTE *)(v20 + *(int *)(sub_10004CFD4(&qword_1009D63E8) + 36)) = 0;
  return sub_100010960((uint64_t)v14, &qword_1009D6518);
}

__n128 sub_10027EF40@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  __n128 result;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  __n128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  if ((a1 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    type metadata accessor for PageTurnView(0, a2, a3, a3);
    sub_10035DC6C();
    if (v6 >= 0.3)
      v5 = 0;
    else
      v5 = 0x4059000000000000;
  }
  v7 = static Alignment.center.getter(a1);
  v9 = _FrameLayout.init(width:height:alignment:)(&v44, v5, 0, 0, 1, v7, v8);
  v10 = v44;
  v11 = v45;
  v12 = v46;
  v13 = v47;
  v14 = v48;
  v15 = v49;
  v16 = static Alignment.center.getter(v9);
  sub_1005F1E2C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v31, 0.0, 1, 0.0, 1, v16, v17);
  v18 = v31;
  v19 = v32;
  v20 = v33;
  v21 = v34;
  v22 = v35;
  v23 = v37;
  v24 = v38;
  v25 = v39;
  v26 = v40;
  v27 = v41;
  v28 = v42;
  result = v43;
  v30 = v36;
  *(_QWORD *)a4 = v10;
  *(_BYTE *)(a4 + 8) = v11;
  *(_QWORD *)(a4 + 16) = v12;
  *(_BYTE *)(a4 + 24) = v13;
  *(_QWORD *)(a4 + 32) = v14;
  *(_QWORD *)(a4 + 40) = v15;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = v18;
  *(_BYTE *)(a4 + 64) = v19;
  *(_QWORD *)(a4 + 72) = v20;
  *(_BYTE *)(a4 + 80) = v21;
  *(_QWORD *)(a4 + 88) = v22;
  *(_BYTE *)(a4 + 96) = v30;
  *(_QWORD *)(a4 + 104) = v23;
  *(_BYTE *)(a4 + 112) = v24;
  *(_QWORD *)(a4 + 120) = v25;
  *(_BYTE *)(a4 + 128) = v26;
  *(_QWORD *)(a4 + 136) = v27;
  *(_BYTE *)(a4 + 144) = v28;
  *(__n128 *)(a4 + 152) = result;
  return result;
}

uint64_t sub_10027F0E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t KeyPath;
  uint64_t v27;
  id v28;
  __n128 v29;
  void (*v30)(_QWORD *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, __n128);
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  __n128 v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, __n128);
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v5 = v4;
  v96 = a3;
  v9 = sub_10004CFD4(&qword_1009D63E8);
  __chkstk_darwin(v9);
  v97 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_10004CFD4(&qword_1009D63F0);
  __chkstk_darwin(v94);
  v95 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ColorScheme(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (uint64_t *)((char *)&v84 - v17);
  v19 = sub_10004CFD4(&qword_1009D6418);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = sub_10004CFD4(&qword_1009D6420);
  __chkstk_darwin(v85);
  v84 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10004CFD4(&qword_1009D6428);
  __chkstk_darwin(v90);
  v98 = (uint64_t)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10004CFD4(&qword_1009D6570);
  __chkstk_darwin(v92);
  v93 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10027ECE4(a1, a2, v21);
  v25 = (void *)sub_100280CFC(a2);
  KeyPath = swift_getKeyPath(&unk_100715D38);
  v27 = swift_getKeyPath(&unk_100715D60);
  v28 = v25;
  static Published.subscript.getter((char *)v18, v28, KeyPath, v27);

  swift_release(KeyPath);
  v29 = swift_release(v27);
  v91 = enum case for ColorScheme.dark(_:);
  v89 = *(void (**)(char *, __n128))(v13 + 104);
  v86 = v12;
  v87 = v16;
  v89(v16, v29);
  LOBYTE(v27) = static ColorScheme.== infix(_:_:)((char *)v18, v16);
  v30 = *(void (**)(_QWORD *, uint64_t))(v13 + 8);
  v88 = v30;
  v30(v16, v12);
  v30((char *)v18, v12);
  sub_10035DC6C();
  v32 = v31;
  v34 = static Alignment.center.getter(v33);
  v36 = v35;
  v37 = v84;
  sub_10000B5E4((uint64_t)v21, v84, &qword_1009D6418);
  v38 = v37 + *(int *)(v85 + 36);
  *(_BYTE *)v38 = v27 & 1;
  *(_QWORD *)(v38 + 8) = v32;
  *(_BYTE *)(v38 + 16) = 1;
  *(_QWORD *)(v38 + 24) = 0x3FC999999999999ALL;
  *(_QWORD *)(v38 + 32) = v34;
  *(_QWORD *)(v38 + 40) = v36;
  v39 = v98;
  sub_100010960((uint64_t)v21, &qword_1009D6418);
  v40 = a2;
  v41 = (id)sub_100280CFC(a2);
  sub_10035DC6C();
  v43 = v42;
  v44 = *(int *)(a2 + 76);
  if (a4 >= 0.0)
    v45 = -*(double *)(v5 + v44);
  else
    v45 = *(double *)(v5 + v44);
  v46 = (void *)objc_opt_self(UITraitCollection);
  v47 = v41;
  v48 = objc_msgSend(v46, "currentTraitCollection");
  objc_msgSend(v48, "displayCornerRadius");
  v50 = v49;

  sub_10000B5E4(v37, v39, &qword_1009D6420);
  v51 = v39 + *(int *)(v90 + 36);
  *(_QWORD *)v51 = v47;
  *(_QWORD *)(v51 + 8) = v43;
  *(double *)(v51 + 16) = v45;
  *(_QWORD *)(v51 + 24) = 0x3FB999999999999ALL;
  *(_QWORD *)(v51 + 32) = v50;
  *(_QWORD *)(v51 + 40) = 0x4010000000000000;
  sub_100010960(v37, &qword_1009D6420);
  v52 = (void *)sub_100280CFC(a2);
  v53 = swift_getKeyPath(&unk_100715D38);
  v54 = swift_getKeyPath(&unk_100715D60);
  v55 = v52;
  static Published.subscript.getter((char *)v18, v55, v53, v54);
  swift_release(v53);
  v56 = swift_release(v54);
  v58 = v86;
  v57 = v87;
  v59 = v89;
  ((void (*)(char *, _QWORD, uint64_t, __n128))v89)(v87, enum case for ColorScheme.light(_:), v86, v56);
  LOBYTE(v53) = static ColorScheme.== infix(_:_:)((char *)v18, v57);
  v60 = (void (*)(char *, uint64_t))v88;
  v88(v57, v58);
  v60((char *)v18, v58);
  if ((v53 & 1) != 0)
    v61 = 1010582527;
  else
    v61 = 3958109695;
  v62 = Color.init(rgbaHex:)(v61);

  sub_10027ED3C(v62, v40, v97);
  swift_release(v62);
  v63 = (void *)sub_100280CFC(v40);
  v64 = swift_getKeyPath(&unk_100715D38);
  v65 = swift_getKeyPath(&unk_100715D60);
  v66 = v63;
  static Published.subscript.getter((char *)v18, v66, v64, v65);

  swift_release(v64);
  v67 = swift_release(v65);
  ((void (*)(char *, _QWORD, uint64_t, __n128))v59)(v57, v91, v58, v67);
  LOBYTE(v66) = static ColorScheme.== infix(_:_:)((char *)v18, v57);
  v60(v57, v58);
  v60((char *)v18, v58);
  v68 = 0.0;
  if ((v66 & 1) != 0)
  {
    v69 = *(double *)(v5 + *(int *)(v40 + 72));
    sub_10035DC6C();
    v68 = v69 * (1.0 - pow(1.0 - v70, 3.0));
  }
  v71 = v97;
  v72 = v95;
  sub_10000B5E4(v97, v95, &qword_1009D63E8);
  *(double *)(v72 + *(int *)(v94 + 36)) = v68;
  v73 = sub_100010960(v71, &qword_1009D63E8);
  v74 = static Alignment.center.getter(v73);
  v76 = v75;
  v77 = (uint64_t)v93;
  v78 = (uint64_t)&v93[*(int *)(v92 + 36)];
  sub_10000B5E4(v72, v78, &qword_1009D63F0);
  v79 = (uint64_t *)(v78 + *(int *)(sub_10004CFD4(&qword_1009D6580) + 36));
  *v79 = v74;
  v79[1] = v76;
  v80 = v98;
  sub_10000B5E4(v98, v77, &qword_1009D6428);
  sub_100010960(v72, &qword_1009D63F0);
  sub_100010960(v80, &qword_1009D6428);
  v81 = v96;
  sub_10000B5E4(v77, v96, &qword_1009D6570);
  v82 = v81 + *(int *)(sub_10004CFD4(&qword_1009D63C8) + 36);
  *(double *)v82 = a4;
  *(_QWORD *)(v82 + 8) = 0;
  return sub_100010960(v77, &qword_1009D6570);
}

double sub_10027F7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  double result;
  _BYTE v25[24];

  v7 = type metadata accessor for PageTurnView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = &v25[-v10 - 8];
  if (qword_1009CE260 != -1)
    swift_once(&qword_1009CE260, sub_10039F304);
  v12 = qword_100A1E788;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(&unk_1008F7F38, v14 + v9, v13 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v15 + v14, v11, v7);
  v16 = swift_allocObject(&unk_1008F7F60, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_100281B68;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = (_QWORD *)(v12 + 24);
  swift_beginAccess(v12 + 24, v25, 33, 0);
  v18 = *(_QWORD **)(v12 + 24);
  swift_retain(v12);
  swift_retain(v15);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *(_QWORD *)(v12 + 24) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_1005B09F8(0, v18[2] + 1, 1, v18);
    *v17 = v18;
  }
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    v18 = sub_1005B09F8((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    *v17 = v18;
  }
  v18[2] = v21 + 1;
  v22 = &v18[2 * v21];
  v22[4] = sub_100238D90;
  v22[5] = v16;
  swift_endAccess(v25);
  sub_10039F49C();
  swift_release(v15);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_10027F9B4(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 176);
    v4 = *(_QWORD *)(v3 + 16);
    v7 = *(void (**)(uint64_t))(v4 + 88);
    v5 = (_QWORD *)(v4 + 88);
    v6 = v7;
    if (v7)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 96);
      *v5 = 0;
      v5[1] = 0;
      swift_retain(v3);
      sub_10002ACF0((uint64_t)v6, v8);
      v9 = sub_10002AD00((uint64_t)v6, v8);
      v6(v9);
      sub_10002AD00((uint64_t)v6, v8);
      swift_unknownObjectRelease(v2);
      swift_release(v3);
    }
    else
    {
      swift_unknownObjectRelease(Strong);
    }
  }
}

uint64_t sub_10027FA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;

  v12 = type metadata accessor for PageTurnViewModel.State.Active(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PageTurnViewModel.State(0);
  v16 = __chkstk_darwin(v15);
  v18 = (id *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = static Alignment.center.getter(v16);
  _FrameLayout.init(width:height:alignment:)(&v57, 0, 1, 0x4051800000000000, 0, v19, v20);
  v53 = v57;
  v52 = v58;
  v51 = v59;
  v50 = v60;
  v48 = v62;
  v49 = v61;
  v55 = 0x203A6574617453;
  v56 = 0xE700000000000000;
  sub_10002CD84(a1, (uint64_t)v18, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v15);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v18, (uint64_t)v14, type metadata accessor for PageTurnViewModel.State.Active);
      sub_10035F088();
      v23 = v22;
      v25 = v24;
      sub_10002C8F0((uint64_t)v14, type metadata accessor for PageTurnViewModel.State.Active);
    }
    else
    {
      v25 = (void *)0xE400000000000000;
      v23 = 1701602409;
    }
  }
  else
  {

    v25 = (void *)0xE900000000000067;
    v23 = 0x6E69726170657270;
  }
  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v25);
  v27._countAndFlagsBits = 8238;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  v29 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for PageTurnView(0, a4, a5, v28) + 52));
  KeyPath = swift_getKeyPath(&unk_100715E78);
  v54 = v29;
  v31 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v54, KeyPath, v31);
  swift_release(KeyPath);
  v32 = *(_QWORD *)(v29 + 64);
  v33 = *(void **)(v29 + 72);
  swift_bridgeObjectRetain(v33);
  v34._countAndFlagsBits = v32;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v33);
  v36 = v55;
  v35 = v56;
  if ((a3 & 1) != 0)
    v37 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  else
    v37 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v38 = v37;
  v39 = Text.foregroundColor(_:)(v37, v36, v35, 0, _swiftEmptyArrayStorage);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  swift_bridgeObjectRelease(v35);
  swift_release(v38);
  *(_QWORD *)a6 = 0;
  *(_BYTE *)(a6 + 8) = 1;
  *(_QWORD *)(a6 + 16) = v53;
  *(_BYTE *)(a6 + 24) = v52;
  *(_QWORD *)(a6 + 32) = v51;
  *(_BYTE *)(a6 + 40) = v50;
  v46 = v48;
  *(_QWORD *)(a6 + 48) = v49;
  *(_QWORD *)(a6 + 56) = v46;
  *(_QWORD *)(a6 + 64) = v39;
  *(_QWORD *)(a6 + 72) = v41;
  *(_BYTE *)(a6 + 80) = v43 & 1;
  *(_QWORD *)(a6 + 88) = v45;
  *(_QWORD *)(a6 + 96) = 0;
  *(_BYTE *)(a6 + 104) = 1;
  sub_1001F596C(v39, v41, v43 & 1);
  swift_bridgeObjectRetain(v45);
  sub_1001F5B28(v39, v41, v43 & 1);
  return swift_bridgeObjectRelease(v45);
}

uint64_t sub_10027FDAC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v14 = Logger.init(_:)((id)qword_100A1ECD8);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.info.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v35 = a3;
    v17 = swift_slowAlloc(12, -1);
    v36 = v13;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v34 = v10;
    v20 = v19;
    v38 = v19;
    *(_DWORD *)v18 = 136315138;
    LOBYTE(v37) = v36;
    v21 = sub_10004CFD4(&qword_1009D6388);
    v22 = String.init<A>(describing:)(&v37, v21);
    v33 = v9;
    v23 = a4;
    v24 = a5;
    v26 = v25;
    v37 = sub_100040F58(v22, v25, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v18 + 4, v18 + 12);
    v27 = v26;
    a5 = v24;
    a4 = v23;
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "animate state change %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v28 = v18;
    v13 = v36;
    swift_slowDealloc(v28, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v33);
  }
  else
  {

    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (v13 == 2)
  {
    v32 = type metadata accessor for PageTurnView(0, a4, a5, v30);
    return sub_100280360(v32);
  }
  else if (!v13)
  {
    v31 = type metadata accessor for PageTurnView(0, a4, a5, v30);
    return sub_10028000C(v31);
  }
  return result;
}

uint64_t sub_10028000C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35[3];
  uint64_t v36;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v4);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v35[0] = (uint64_t)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[1] = a1;
  v13 = *(int *)(a1 + 52);
  v14 = *(_QWORD *)(v2 + v13);
  KeyPath = swift_getKeyPath(&unk_100715D80);
  v36 = v14;
  v16 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v36, KeyPath, v16);
  swift_release(KeyPath);
  v17 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v14 + 80));
  v19 = v18;
  v20 = PageTurnStyle.rawValue.getter(2);
  if (v17 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n(v19, 2);
    goto LABEL_9;
  }
  v23 = v21;
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v23);
  if ((v24 & 1) != 0)
  {
LABEL_9:
    v27 = sub_10035E804();
    v28 = static Animation.easeInOut(duration:)(v27);
    goto LABEL_13;
  }
  v25 = *(_QWORD *)(v2 + v13);
  v26 = swift_getKeyPath(&unk_100715D10);
  v36 = v25;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v36, v26, v16);
  swift_release(v26);
  CurrentValueSubject.value.getter(v9);
  sub_10035DA88((uint64_t)v6);
  sub_10002C8F0((uint64_t)v9, type metadata accessor for PageTurnViewModel.State);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_100010960((uint64_t)v6, &qword_1009D55C0);
  }
  else
  {
    v29 = v35[0];
    v30 = sub_10002C960((uint64_t)v6, v35[0], _s14descr1008F7311C5StateO4TurnVMa);
    if (*(double *)(v29 + *(int *)(v10 + 36)) != 0.0)
    {
      v31 = static Animation.spring(response:dampingFraction:blendDuration:)(v30, 0.6, 0.9, 0.4);
      v28 = sub_10002C8F0(v29, _s14descr1008F7311C5StateO4TurnVMa);
      goto LABEL_14;
    }
    sub_10002C8F0(v29, _s14descr1008F7311C5StateO4TurnVMa);
  }
  v28 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 350.0, 50.0, 0.0);
LABEL_13:
  v31 = v28;
LABEL_14:
  __chkstk_darwin(v28);
  *(_OWORD *)&v35[-4] = *(_OWORD *)(v32 + 16);
  v35[-2] = v2;
  v33 = swift_retain(v31);
  withAnimation<A>(_:_:)(v33, sub_100280EE0, &v35[-6], (char *)&type metadata for () + 8);
  return swift_release_n(v31, 2);
}

uint64_t sub_100280360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  KeyPath = swift_getKeyPath(&unk_100715D80);
  v24 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v24, KeyPath, v6);
  swift_release(KeyPath);
  v7 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v4 + 80));
  v9 = v8;
  v10 = PageTurnStyle.rawValue.getter(2);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_8;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  v15 = swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_8:
    v17 = sub_10035E804();
    v16 = static Animation.easeInOut(duration:)(v17);
    goto LABEL_9;
  }
  v16 = static Animation.spring(response:dampingFraction:blendDuration:)(v15, 0.5, 1.0, 0.0);
LABEL_9:
  v18 = v16;
  v19 = __chkstk_darwin(v16);
  v22[1] = *(_OWORD *)(a1 + 16);
  v23 = v2;
  v20 = swift_retain(v19);
  withAnimation<A>(_:_:)(v20, sub_100280EF8, v22, (char *)&type metadata for () + 8);
  return swift_release_n(v18, 2);
}

uint64_t sub_1002804D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t KeyPath;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __n128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __n128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  char v103;

  v78 = a5;
  v79 = a2;
  v8 = sub_10004CFD4(&qword_1009D65C8);
  v9 = __chkstk_darwin(v8);
  v77 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v76 = (uint64_t)&v65 - v11;
  v75 = (int *)sub_10004CFD4(&qword_1009F4140);
  __chkstk_darwin(v75);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = sub_10004CFD4(&qword_1009D65D0);
  v17 = __chkstk_darwin(v73);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v74 = (uint64_t)&v65 - v20;
  v71 = type metadata accessor for PageTurnView(0, a3, a4, v21);
  v72 = a1;
  v22 = a1;
  v23 = (void *)sub_100280CFC(v71);
  KeyPath = swift_getKeyPath(&unk_100715DA8);
  v25 = swift_getKeyPath(&unk_100715DD0);
  v26 = v23;
  static Published.subscript.getter(&v95, v26, KeyPath, v25);

  swift_release(KeyPath);
  swift_release(v25);
  v27 = v95;
  v28 = swift_getKeyPath(&unk_100715DF0);
  v29 = static Alignment.center.getter(v28);
  sub_1005F1C8C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v95, 0.0, 1, INFINITY, 0, v29, v30, v28, v27);
  swift_release(v27);
  swift_release(v28);
  v92 = v100;
  v93 = v101;
  v94 = v102;
  v87 = v95;
  v88 = v96;
  v89 = v97;
  v90 = v98;
  v91 = v99;
  v31 = static Edge.Set.all.getter(v97);
  v99 = v91;
  v100 = v92;
  v101 = v93;
  v102 = v94;
  v95 = v87;
  v96 = v88;
  v103 = v31;
  v32 = v71;
  v33 = *(_QWORD *)(v22 + *(int *)(v71 + 80));
  v97 = v89;
  v98 = v90;
  v34 = (char *)v16 + *(int *)(v14 + 20);
  v35 = enum case for RoundedCornerStyle.continuous(_:);
  v36 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v34, v35, v36);
  *v16 = v33;
  v16[1] = v33;
  sub_10002CD84((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v13[v75[9]] = 256;
  sub_10000B5E4((uint64_t)v13, (uint64_t)&v19[*(int *)(v73 + 36)], &qword_1009F4140);
  v37 = v102;
  *((_OWORD *)v19 + 6) = v101;
  *((_OWORD *)v19 + 7) = v37;
  v19[128] = v103;
  v38 = v98;
  *((__n128 *)v19 + 2) = v97;
  *((_OWORD *)v19 + 3) = v38;
  v39 = v100;
  *((_OWORD *)v19 + 4) = v99;
  *((_OWORD *)v19 + 5) = v39;
  v40 = v96;
  *(_OWORD *)v19 = v95;
  *((_OWORD *)v19 + 1) = v40;
  sub_100281AF8((uint64_t *)&v95);
  sub_100010960((uint64_t)v13, &qword_1009F4140);
  sub_10002C8F0((uint64_t)v16, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100281B28(&v87);
  v41 = v74;
  sub_100025B3C((uint64_t)v19, v74, &qword_1009D65D0);
  v42 = (int *)v79;
  v75 = v42;
  objc_msgSend(v42, "frame");
  v44 = v43;
  v45 = objc_msgSend(v42, "frame");
  v47 = v46;
  v48 = static Alignment.center.getter(v45);
  _FrameLayout.init(width:height:alignment:)(&v81, v44, 0, v47, 0, v48, v49);
  v73 = v81;
  v70 = v82;
  v69 = v83;
  v68 = v84;
  v66 = v86;
  v67 = v85;
  v50 = *(_QWORD *)(v72 + *(int *)(v32 + 52));
  v51 = swift_getKeyPath(&unk_100715E50);
  v80 = v50;
  v52 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v80, v51, v52);
  v53 = swift_release(v51);
  v54 = *(_QWORD *)(v50 + 40);
  LOBYTE(v51) = static Edge.Set.all.getter(v53);
  v55 = v76;
  sub_10028CA68(35, 1, v76);
  v56 = v41;
  sub_10000B5E4(v41, (uint64_t)v19, &qword_1009D65D0);
  v57 = v77;
  sub_10000B5E4(v55, v77, &qword_1009D65C8);
  v58 = v78;
  sub_10000B5E4((uint64_t)v19, v78, &qword_1009D65D0);
  v59 = sub_10004CFD4(&qword_1009D65D8);
  v60 = v58 + *(int *)(v59 + 48);
  v61 = v73;
  *(_QWORD *)v60 = v79;
  *(_QWORD *)(v60 + 8) = v61;
  *(_BYTE *)(v60 + 16) = v70;
  *(_QWORD *)(v60 + 24) = v69;
  *(_BYTE *)(v60 + 32) = v68;
  v62 = v66;
  *(_QWORD *)(v60 + 40) = v67;
  *(_QWORD *)(v60 + 48) = v62;
  *(_WORD *)(v60 + 56) = 257;
  *(_BYTE *)(v60 + 64) = v51;
  *(_QWORD *)(v60 + 72) = 0;
  *(_QWORD *)(v60 + 80) = 0;
  *(_QWORD *)(v60 + 88) = v54;
  *(_QWORD *)(v60 + 96) = 0;
  *(_BYTE *)(v60 + 104) = 0;
  sub_10000B5E4(v57, v58 + *(int *)(v59 + 64), &qword_1009D65C8);
  v63 = v75;
  sub_100010960(v55, &qword_1009D65C8);
  sub_100010960(v56, &qword_1009D65D0);
  sub_100010960(v57, &qword_1009D65C8);

  return sub_100010960((uint64_t)v19, &qword_1009D65D0);
}

uint64_t sub_100280AA4@<X0>(unsigned __int8 a1@<W0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  v10 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10004CFD4(&qword_1009D6600);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v16, "displayCornerRadius");
  v18 = v17;

  v19 = (char *)v12 + *(int *)(v10 + 20);
  v20 = enum case for RoundedCornerStyle.continuous(_:);
  v21 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  *v12 = v18;
  v12[1] = v18;
  v22 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v23.n128_f64[0] = a5 - a4 * a5;
  v24 = Color.opacity(_:)(v22, v23);
  v25 = swift_release(v22);
  v25.n128_u64[0] = 0;
  if ((a2 & a1 & 1) != 0)
    v25.n128_f64[0] = 0.5;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v35, 0, 0, _swiftEmptyArrayStorage, v25, 10.0, 0.0);
  sub_10002CD84((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v26 = &v15[*(int *)(sub_10004CFD4(&qword_1009D6608) + 36)];
  v27 = v35[1];
  *(_OWORD *)v26 = v35[0];
  *((_OWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 4) = v36;
  v28 = sub_10004CFD4(&qword_1009D6610);
  *(_QWORD *)&v15[*(int *)(v28 + 52)] = v24;
  *(_WORD *)&v15[*(int *)(v28 + 56)] = 256;
  v29 = static Alignment.center.getter(v28);
  v31 = v30;
  v32 = (uint64_t *)&v15[*(int *)(sub_10004CFD4(&qword_1009D6618) + 36)];
  *v32 = v29;
  v32[1] = v31;
  sub_10002C8F0((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  return sub_100025B3C((uint64_t)v15, a3, &qword_1009D6600);
}

uint64_t sub_100280CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100280AA4(*(_BYTE *)v1, *(_BYTE *)(v1 + 16), a1, *(double *)(v1 + 8), *(double *)(v1 + 24));
}

uint64_t sub_100280CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 56));
  result = *v2;
  if (!*v2)
  {
    v4 = v2[1];
    v5 = type metadata accessor for ChromeStyle(0);
    v6 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v4, v5, v6, v7);
    __break(1u);
  }
  return result;
}

void sub_100280D74(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10027C514(*(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(double **)(v1 + 48), *(unsigned __int8 *)(v1 + 64), *(unsigned __int8 *)(v1 + 80), *(void **)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 56), *(double *)(v1 + 72), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100280DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageTurnView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v6 = v4 + ((v5 + 32) & ~v5);
  Transaction.animationFrameInterval.setter(0x3F81111111111111, 0);
  return Transaction.animationReason.setter(*(unsigned int *)(v6 + 16));
}

uint64_t sub_100280E34(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageTurnView(0, v7, v8, a4) - 8) + 80);
  return sub_10027FDAC(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

unint64_t sub_100280E9C()
{
  unint64_t result;

  result = qword_1009D6398;
  if (!qword_1009D6398)
  {
    result = swift_getWitnessTable(&unk_10071D428, &type metadata for PageTurnViewModel.State.AnimationState);
    atomic_store(result, (unint64_t *)&qword_1009D6398);
  }
  return result;
}

uint64_t sub_100280EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100280F10(1, a2, a3, a4);
}

uint64_t sub_100280EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100280F10(3, a2, a3, a4);
}

uint64_t sub_100280F10(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for PageTurnView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_10035FCAC(a1);
}

void sub_100280F6C(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  sub_10027E890(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100280F78()
{
  unint64_t result;

  result = qword_1009D6460;
  if (!qword_1009D6460)
  {
    result = swift_getWitnessTable(&unk_100715F08, &type metadata for DarkModeBorderRectangle);
    atomic_store(result, (unint64_t *)&qword_1009D6460);
  }
  return result;
}

unint64_t sub_100280FBC()
{
  unint64_t result;

  result = qword_1009D6470;
  if (!qword_1009D6470)
  {
    result = swift_getWitnessTable(&unk_100724910, &type metadata for WithPageShadow);
    atomic_store(result, (unint64_t *)&qword_1009D6470);
  }
  return result;
}

double sub_100281000(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double sub_10028101C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15)
{
  double result;

  if (a15)
  {
    sub_1001F596C(a12, a13, a14 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a15).n128_u64[0];
  }
  return result;
}

unint64_t sub_10028105C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6488;
  if (!qword_1009D6488)
  {
    v1 = sub_100030B74(&qword_1009D6340);
    sub_1002810E0();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6488);
  }
  return result;
}

unint64_t sub_1002810E0()
{
  unint64_t result;

  result = qword_1009D6490;
  if (!qword_1009D6490)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Rectangle, &type metadata for Rectangle);
    atomic_store(result, (unint64_t *)&qword_1009D6490);
  }
  return result;
}

unint64_t sub_100281124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D64A0;
  if (!qword_1009D64A0)
  {
    v1 = sub_100030B74(&qword_1009D6440);
    sub_10028156C(&qword_1009D64A8, &qword_1009D6438, (void (*)(void))sub_1002811C8, (void (*)(void))sub_1002812F0);
    sub_100030B34(&qword_1009D6478, &qword_1009D6358, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D64A0);
  }
  return result;
}

unint64_t sub_1002811C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D64B0;
  if (!qword_1009D64B0)
  {
    v1 = sub_100030B74(&qword_1009D6430);
    sub_10028156C(&qword_1009D64B8, &qword_1009D6428, (void (*)(void))sub_100281254, (void (*)(void))sub_100280FBC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D64B0);
  }
  return result;
}

unint64_t sub_100281254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D64C0;
  if (!qword_1009D64C0)
  {
    v1 = sub_100030B74(&qword_1009D6420);
    sub_100030B34(&qword_1009D64C8, &qword_1009D6418, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(&qword_1009D6468, &qword_1009D6350, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D64C0);
  }
  return result;
}

unint64_t sub_1002812F0()
{
  unint64_t result;

  result = qword_1009D64D0;
  if (!qword_1009D64D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AllowsHitTestingModifier, &type metadata for _AllowsHitTestingModifier);
    atomic_store(result, (unint64_t *)&qword_1009D64D0);
  }
  return result;
}

unint64_t sub_100281334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D64E0;
  if (!qword_1009D64E0)
  {
    v1 = sub_100030B74(&qword_1009D6410);
    sub_1001F5558(&qword_1009D64E8, &qword_1009D6408, (void (*)(void))sub_1002813D8);
    sub_100030B34(&qword_1009D6478, &qword_1009D6358, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D64E0);
  }
  return result;
}

unint64_t sub_1002813D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D64F0;
  if (!qword_1009D64F0)
  {
    v1 = sub_100030B74(&qword_1009D6400);
    sub_10028145C();
    sub_100030B34((unint64_t *)&qword_1009D1258, &qword_1009D1250, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D64F0);
  }
  return result;
}

unint64_t sub_10028145C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D64F8;
  if (!qword_1009D64F8)
  {
    v1 = sub_100030B74(&qword_1009D63F8);
    sub_1002814E0();
    sub_100030B34(&qword_1009D6520, &qword_1009D6528, (uint64_t)&protocol conformance descriptor for _MaskAlignmentEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D64F8);
  }
  return result;
}

unint64_t sub_1002814E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6500;
  if (!qword_1009D6500)
  {
    v1 = sub_100030B74(&qword_1009D63F0);
    sub_10028156C(&qword_1009D6508, &qword_1009D63E8, (void (*)(void))sub_1002815DC, (void (*)(void))sub_1002812F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6500);
  }
  return result;
}

uint64_t sub_10028156C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002815DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6510;
  if (!qword_1009D6510)
  {
    v1 = sub_100030B74(&qword_1009D6518);
    sub_10028105C();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6510);
  }
  return result;
}

unint64_t sub_100281660()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6538;
  if (!qword_1009D6538)
  {
    v1 = sub_100030B74(&qword_1009D6480);
    sub_100030B34(&qword_1009D6540, &qword_1009D63C0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_10028156C(&qword_1009D6548, &qword_1009D63B0, (void (*)(void))sub_100281704, (void (*)(void))sub_1002812F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6538);
  }
  return result;
}

uint64_t sub_100281704()
{
  return sub_1001F5558(&qword_1009D6550, &qword_1009D63A8, (void (*)(void))sub_100281728);
}

unint64_t sub_100281728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6558;
  if (!qword_1009D6558)
  {
    v1 = sub_100030B74(&qword_1009D63A0);
    sub_1001F5558(&qword_1009D6560, &qword_1009D63C8, (void (*)(void))sub_1002817CC);
    sub_100030B34(&qword_1009D6478, &qword_1009D6358, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6558);
  }
  return result;
}

unint64_t sub_1002817CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6568;
  if (!qword_1009D6568)
  {
    v1 = sub_100030B74(&qword_1009D6570);
    sub_10028156C(&qword_1009D64B8, &qword_1009D6428, (void (*)(void))sub_100281254, (void (*)(void))sub_100280FBC);
    sub_100030B34(&qword_1009D6578, &qword_1009D6580, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6568);
  }
  return result;
}

uint64_t sub_100281870(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002818D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6590;
  if (!qword_1009D6590)
  {
    v1 = sub_100030B74(&qword_1009D6598);
    sub_100030B34(&qword_1009D65A0, &qword_1009D65A8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100030B34(&qword_1009D6478, &qword_1009D6358, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6590);
  }
  return result;
}

_QWORD *sub_100281970(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17]);
  return a1;
}

uint64_t sub_1002819CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15)
{
  uint64_t result;

  if (a15)
  {
    sub_1001F5B28(a12, a13, a14 & 1);
    return swift_bridgeObjectRelease(a15);
  }
  return result;
}

uint64_t sub_100281A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100281B74((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10027F7C8, a2, a3, a4);
}

double sub_100281A1C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100281A38(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = result;
    swift_retain(a2);
    return swift_retain(v2);
  }
  return result;
}

_QWORD *sub_100281A68(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

uint64_t sub_100281AC4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_release(result);
    return swift_release(a2);
  }
  return result;
}

uint64_t *sub_100281AF8(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain(a1[1]);
  swift_retain(v2);
  return a1;
}

_QWORD *sub_100281B28(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  swift_release(*a1);
  swift_release(v2);
  return a1;
}

uint64_t sub_100281B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100281B74((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10027F9B4, a2, a3, a4);
}

uint64_t sub_100281B74(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageTurnView(0, v5, v6, a4) - 8) + 80);
  return a1(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_100281BD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100281C00()
{
  unint64_t result;

  result = qword_1009D65F0;
  if (!qword_1009D65F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_1009D65F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DarkModeBorderRectangle(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[32])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DarkModeBorderRectangle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DarkModeBorderRectangle()
{
  return &type metadata for DarkModeBorderRectangle;
}

uint64_t sub_100281CFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];

  v1 = *a1;
  sub_100030B74(&qword_1009D6340);
  v2 = sub_100030B74(&qword_1009D6348);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = sub_100030B74(&qword_1009D6350);
  v5 = type metadata accessor for ModifiedContent(255, v3, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for WithPageShadow);
  v7 = type metadata accessor for ModifiedContent(255, v6, &type metadata for _OffsetEffect);
  v8 = type metadata accessor for ModifiedContent(255, v7, &type metadata for _OpacityEffect);
  v9 = sub_100030B74(&qword_1009D6358);
  type metadata accessor for ModifiedContent(255, v8, v9);
  sub_100030B74(&qword_1009D6360);
  sub_100030B74(&qword_1009D6368);
  v17[4] = sub_100030B74(&qword_1009D6370);
  v17[5] = sub_100030B74(&qword_1009D6378);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 6);
  v11 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v13 = type metadata accessor for ZStack(255, v11, WitnessTable);
  v14 = type metadata accessor for ModifiedContent(255, v13, &type metadata for _TransactionModifier);
  v15 = sub_100030B74(&qword_1009D6388);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v13);
  v17[0] = v14;
  v17[1] = v15;
  v17[2] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v17[3] = sub_100281870(&qword_1009D6390, &qword_1009D6388, (void (*)(void))sub_100280E9C, (uint64_t)&protocol conformance descriptor for <A> A?);
  return swift_getOpaqueTypeConformance2(v17, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_100281EFC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086986C, 1);
}

uint64_t sub_100281F0C()
{
  return sub_100030B34(&qword_1009D6620, &qword_1009D6600, (uint64_t)&protocol conformance descriptor for StrokeShapeView<A, B, C>);
}

id sub_100281FA4()
{
  id v0;
  id v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;
  id v25;
  id v26;
  void *v28;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setAllowsGroupBlending:", 0);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 7, 1, 14.0);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

  v28 = v2;
  if (v4)
  {
    v5 = objc_msgSend(v4, "imageWithConfiguration:", v2, v2);

  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v5);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v6, "layer");
  v8 = kCAFilterPlusL;
  objc_msgSend(v7, "setCompositingFilter:", kCAFilterPlusL);

  objc_msgSend(v0, "addSubview:", v6);
  v9 = (void *)objc_opt_self(NSLayoutConstraint);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1007143B0;
  v12 = objc_msgSend(v0, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 20.0);

  *(_QWORD *)(v11 + 32) = v13;
  v14 = objc_msgSend(v0, "heightAnchor");
  v15 = objc_msgSend(v0, "widthAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v11 + 40) = v16;
  v17 = objc_msgSend(v6, "centerXAnchor");
  v18 = objc_msgSend(v0, "centerXAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v11 + 48) = v19;
  v20 = objc_msgSend(v6, "centerYAnchor");
  v21 = objc_msgSend(v0, "centerYAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v11 + 56) = v22;
  specialized Array._endMutation()(v23);
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v9, "activateConstraints:", isa);

  v25 = objc_msgSend(v0, "layer");
  objc_msgSend(v25, "setCornerRadius:", 10.0);

  v26 = objc_msgSend(v0, "layer");
  objc_msgSend(v26, "setCompositingFilter:", v8);

  objc_msgSend(v0, "setUserInteractionEnabled:", 0);
  return v0;
}

char *sub_1002823D4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _BYTE *v18;
  objc_class *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *result;
  char *v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  id v40;
  char *v41;
  id v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjCClassFromMetadata;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  objc_super v68;

  v9 = type metadata accessor for Locale(0);
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  __chkstk_darwin(v9);
  v62 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v64 = (char *)&v59 - v12;
  v63 = type metadata accessor for String.LocalizationValue(0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v60 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - v15;
  v4[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_hasSupplementalContent] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_platterColor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_docIconColor] = 0;
  v17 = OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_supplementalView;
  v18 = v4;
  *(_QWORD *)&v4[v17] = sub_100281FA4();

  v19 = (objc_class *)type metadata accessor for AudiobookNowPlayingTOCButton();
  v68.receiver = v18;
  v68.super_class = v19;
  v20 = (char *)objc_msgSendSuper2(&v68, "initWithFrame:", a1, a2, a3, a4);
  v21 = OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_supplementalView;
  v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_supplementalView];
  v23 = v20;
  objc_msgSend(v23, "addSubview:", v22);
  v24 = objc_msgSend(v23, "layer");
  objc_msgSend(v24, "setAllowsGroupBlending:", 0);

  v25 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v26 = swift_allocObject(v25, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1007118C0;
  v27 = objc_msgSend(*(id *)&v20[v21], "topAnchor");
  result = (char *)objc_msgSend(v23, "imageView");
  if (result)
  {
    v29 = result;
    v30 = objc_msgSend(result, "topAnchor");

    v31 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v30, -8.0);
    *(_QWORD *)(v26 + 32) = v31;
    v32 = objc_msgSend(*(id *)&v20[v21], "trailingAnchor");
    result = (char *)objc_msgSend(v23, "imageView");
    if (result)
    {
      v33 = result;
      v34 = (void *)objc_opt_self(NSLayoutConstraint);
      v35 = objc_msgSend(v33, "trailingAnchor");

      v36 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v35, 8.0);
      *(_QWORD *)(v26 + 40) = v36;
      v67 = v26;
      specialized Array._endMutation()(v37);
      v38 = v67;
      sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v38);
      objc_msgSend(v34, "activateConstraints:", isa);

      v40 = objc_allocWithZone((Class)UILargeContentViewerInteraction);
      v41 = v23;
      v42 = objc_msgSend(v40, "init");
      objc_msgSend(v41, "addInteraction:", v42);

      v43 = v41;
      v44 = v16;
      v45 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007BABC0);
      v46 = v64;
      static Locale.current.getter(v45);
      v47 = v60;
      v48 = v61;
      v49 = v63;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v44, v63);
      v50 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v50);
      v52 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v54 = v65;
      v53 = v66;
      v55 = v62;
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v46, v66);
      String.init(localized:table:bundle:locale:comment:)(v47, 0, 0, v52, v55, "Table of Contents", 17, 2);
      v57 = v56;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v53);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v49);
      v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v57);
      objc_msgSend(v43, "setAccessibilityLabel:", v58);

      objc_msgSend(v43, "setShowsLargeContentViewer:", 1);
      sub_1002829EC();

      return v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002829EC()
{
  _BYTE *v0;
  uint64_t v1;
  unint64_t v2;
  NSString v3;
  void *v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  UIImage *v12;
  UIImage *v13;
  objc_super v14;
  CGSize v15;

  v1 = OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_hasSupplementalContent;
  if (v0[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_hasSupplementalContent])
    v2 = 0x80000001007BAB00;
  else
    v2 = 0xEA0000000000434FLL;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v4 = (void *)objc_opt_self(UIImage);
  v5 = objc_msgSend(v4, "imageNamed:", v3);

  if (v5)
  {
    v6 = objc_msgSend(v5, "imageFlippedForRightToLeftLayoutDirection");

    v14.receiver = v0;
    v14.super_class = (Class)type metadata accessor for AudiobookNowPlayingTOCButton();
    objc_msgSendSuper2(&v14, "setImage:forState:", v6, 0);
    if (v0[v1] != 1)
    {
      v13 = (UIImage *)objc_msgSend(v0, "imageForState:", 0);
      goto LABEL_13;
    }
    v15.width = 60.0;
    v15.height = 60.0;
    UIGraphicsBeginImageContext(v15);
    objc_msgSend(v6, "drawInRect:", 0.0, 0.0, 60.0, 60.0);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v4, "systemImageNamed:", v7);

    if (v8)
    {
      v9 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
      v10 = objc_msgSend(v9, "layoutDirection");

      v11 = 40;
      if (v10 == (id)1)
        v11 = 0;
      objc_msgSend(v8, "drawAtPoint:", (double)v11, 0.0);

    }
    v12 = UIGraphicsGetImageFromCurrentImageContext();
    if (v12)
    {
      v13 = v12;
      UIGraphicsEndImageContext();
LABEL_13:
      objc_msgSend(v0, "setLargeContentImage:", v13);

      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_supplementalView], "setHidden:", (v0[v1] & 1) == 0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100282CC4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  objc_super v45;

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - v13;
  v15 = (objc_class *)type metadata accessor for AudiobookNowPlayingTOCButton();
  v45.receiver = v0;
  v45.super_class = v15;
  v16 = objc_msgSendSuper2(&v45, "accessibilityValue");
  if (v16)
  {
    v17 = v16;
    v40 = v11;
    v41 = v9;
    v42 = v4;
    v43 = v7;
    v18 = v1;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v21 = v20;

    v22 = sub_100043ED0(0, 1, 1, _swiftEmptyArrayStorage);
    v24 = v22[2];
    v23 = v22[3];
    if (v24 >= v23 >> 1)
      v22 = sub_100043ED0((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
    v22[2] = v24 + 1;
    v25 = &v22[2 * v24];
    v25[4] = v19;
    v25[5] = v21;
    v1 = v18;
    v4 = v42;
    v7 = v43;
    v11 = v40;
    v9 = v41;
  }
  else
  {
    v22 = _swiftEmptyArrayStorage;
  }
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_hasSupplementalContent) == 1)
  {
    v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000001007BAB20);
    static Locale.current.getter(v26);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v27 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v27);
    v29 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    v30 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v29, v4, "Accessibility string indicating that an element has supplemental content", 72, 2);
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
      v22 = sub_100043ED0(0, v22[2] + 1, 1, v22);
    v34 = v22[2];
    v33 = v22[3];
    if (v34 >= v33 >> 1)
      v22 = sub_100043ED0((_QWORD *)(v33 > 1), v34 + 1, 1, v22);
    v22[2] = v34 + 1;
    v35 = &v22[2 * v34];
    v35[4] = v30;
    v35[5] = v32;
  }
  else if (!v22[2])
  {
    swift_bridgeObjectRelease(v22);
    return 0;
  }
  v44 = v22;
  v36 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v37 = sub_100044F44();
  v38 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v36, v37);
  swift_bridgeObjectRelease(v22);
  return v38;
}

id sub_1002830B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookNowPlayingTOCButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudiobookNowPlayingTOCButton()
{
  return objc_opt_self(_TtC5Books28AudiobookNowPlayingTOCButton);
}

void sub_100283150(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_docIconColor;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_docIconColor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_docIconColor) = a1;
  v4 = a1;

  v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_supplementalView), "subviews"));
  v6 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v10 = v7;
    else
      v10 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v7);
    if (v11)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
LABEL_6:
    v12 = v8;
    swift_bridgeObjectRelease(v7);
    v9 = *(id *)(v1 + v2);
    objc_msgSend(v12, "setTintColor:", v9);

    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for SampleHeaderModule()
{
  return objc_opt_self(_TtC5Books18SampleHeaderModule);
}

_QWORD *sub_1002832BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v21;
  __int128 v22;

  v4 = v3;
  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[3] = 0;
  swift_unknownObjectWeakInit(v4 + 2);
  v4[5] = 0;
  v11 = type metadata accessor for InfoBarViewModel(0);
  v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v22 = xmmword_100715FD0;
  v13 = sub_10004CFD4(&qword_1009D67E0);
  Published.init(initialValue:)(v20, v13);
  LOBYTE(v20[0]) = 0;
  Published.init(initialValue:)(v20, &type metadata for Bool);
  v4[6] = v12;
  v4[3] = a2;
  v4[4] = a3;
  swift_unknownObjectWeakAssign(v4 + 2, a1);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  type metadata accessor for MainActor(0);
  swift_retain_n(v4, 2);
  swift_retain(a3);
  v16 = static MainActor.shared.getter(v15);
  v17 = (_QWORD *)swift_allocObject(&unk_1008F8080, 40, 7);
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v4;
  v18 = sub_10030C02C((uint64_t)v10, (uint64_t)&unk_1009D67F0, (uint64_t)v17);
  swift_release(v18);
  swift_release(v4);
  swift_unknownObjectRelease(a1);
  swift_release(a3);
  return v4;
}

uint64_t sub_100283484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[7] = a4;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  v4[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D67F8);
  v4[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[10] = v7;
  v4[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D6800);
  v4[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[13] = v9;
  v4[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v4[15] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[16] = v11;
  v4[17] = v12;
  return swift_task_switch(sub_10028356C, v11, v12);
}

uint64_t sub_10028356C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 144) = v2;
  swift_retain(v1);
  return swift_task_switch(sub_1002835B0, v2, 0);
}

uint64_t sub_1002835B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = v0[18];
  KeyPath = swift_getKeyPath(&unk_100716048);
  v3 = swift_getKeyPath(&unk_100716070);
  static Published.subscript.getter(v0 + 5, v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v0[19] = v0[5];
  return swift_task_switch(sub_10028363C, v0[16], v0[17]);
}

uint64_t sub_10028363C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;

  v1 = v0[19];
  if (v1)
  {
    v2 = v0[7];
    v3 = swift_task_alloc(32);
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    swift_retain(v1);
    v5 = static Animation.default.getter(v4);
    withAnimation<A>(_:_:)(v5, sub_100284004, v3, (char *)&type metadata for () + 8);
    swift_release(v5);
    swift_release_n(v1, 2);
    swift_task_dealloc(v3);
  }
  return swift_task_switch(sub_1002836E8, v0[18], 0);
}

uint64_t sub_1002836E8()
{
  _QWORD *v0;
  uint64_t v1;

  swift_beginAccess(v0[18] + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage, v0 + 2, 33, 0);
  v1 = sub_10004CFD4(&qword_1009D4580);
  Published.projectedValue.getter(v1);
  swift_endAccess(v0 + 2);
  return swift_task_switch(sub_10028376C, v0[16], v0[17]);
}

uint64_t sub_10028376C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 120));
  v7 = sub_100059BB4();
  *(_QWORD *)(v0 + 48) = static OS_dispatch_queue.main.getter(v7);
  v8 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = sub_100030B34(&qword_1009D6808, &qword_1009D67F8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v10 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(v0 + 48, v5, v4, v7, v9, v10);
  sub_1001EDE18(v5);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v11 = swift_allocObject(&unk_1008F80A8, 24, 7);
  swift_weakInit(v11 + 16, v6);
  v12 = sub_100030B34(&qword_1009D6810, &qword_1009D6800, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v13 = Publisher<>.sink(receiveValue:)(sub_100283FFC, v11, v17, v12);
  v14 = swift_release(v11);
  (*(void (**)(uint64_t, uint64_t, __n128))(v18 + 8))(v1, v17, v14);
  v15 = *(_QWORD *)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v13;
  swift_release(v6);
  swift_release(v15);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100283924(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  _BYTE v11[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7.n128_f64[0] = __chkstk_darwin(Strong);
    v10[2] = v8;
    v10[3] = v2;
    v9 = static Animation.default.getter(v7);
    withAnimation<A>(_:_:)(v9, sub_1002842F4, v10, (char *)&type metadata for () + 8);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002839E0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 40) != 1;
  return result;
}

uint64_t sub_1002839F4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 40) != 1 && *(_BYTE *)(result + 32) == 0;
  return result;
}

uint64_t sub_100283A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[7];

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 48);
  if (a2)
  {
    v4 = *(_QWORD *)(a2 + 24);
    v5 = *(_QWORD *)(a2 + 32);
    v6 = *(_QWORD *)(a2 + 40);
    v8 = *(_QWORD *)(a2 + 56);
    v7 = *(_QWORD *)(a2 + 64);
    if (*(_BYTE *)(a2 + 49))
      v9 = 256;
    else
      v9 = 0;
    v10 = v9 & 0xFFFFFFFFFFFFFF00 | *(unsigned __int8 *)(a2 + 48);
    v17 = *(_QWORD *)(a2 + 16);
    sub_100284264(v17, v4, v5, v6, *(_BYTE *)(a2 + 48));
    sub_10002ACF0(v8, v7);
  }
  else
  {
    v17 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v10 = 0;
    v7 = 0;
    v8 = 1;
  }
  KeyPath = swift_getKeyPath(&unk_100716090);
  v12 = swift_getKeyPath(&unk_1007160B8);
  v18[0] = v17;
  v18[1] = v4;
  v18[2] = v5;
  v18[3] = v6;
  v18[4] = v10;
  v18[5] = v8;
  v18[6] = v7;
  swift_retain(v3);
  static Published.subscript.setter(v18, v3, KeyPath, v12);
  if (v2)
  {
    v13 = type metadata accessor for InfoBar.TimedMessage(0);
    LOBYTE(v2) = swift_dynamicCastClass(v2, v13) != 0;
  }
  v14 = swift_getKeyPath(&unk_1007160D8);
  v15 = swift_getKeyPath(&unk_100716100);
  LOBYTE(v18[0]) = v2;
  swift_retain(v3);
  return static Published.subscript.setter(v18, v3, v14, v15);
}

uint64_t sub_100283B7C()
{
  _QWORD *v0;

  sub_1001FE9A0((uint64_t)(v0 + 2));
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for InfoBarPresenter()
{
  return objc_opt_self(_TtC5Books16InfoBarPresenter);
}

uint64_t sub_100283BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v7 + 72) = a7;
  *(_QWORD *)(v7 + 24) = a5;
  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 16) = a4;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 40) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v7 + 56) = v10;
  return swift_task_switch(sub_100283C4C, v9, v10);
}

uint64_t sub_100283C4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  *(_QWORD *)(v0 + 64) = v1;
  swift_retain(v1);
  return swift_task_switch(sub_100283C94, v1, 0);
}

uint64_t sub_100283C94()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(double *)(v0 + 32);
  if ((*(_BYTE *)(v0 + 72) & 1) != 0)
    v2 = 3.0;
  InfoBar.MessageQueue.addTimedMessage(_:duration:)(*(_QWORD *)(v0 + 24), v2);
  swift_release(v1);
  return swift_task_switch(sub_10020DB80, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100283CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[5] = v7;
  v5[6] = v8;
  return swift_task_switch(sub_100283D58, v7, v8);
}

uint64_t sub_100283D58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  *(_QWORD *)(v0 + 56) = v1;
  swift_retain(v1);
  return swift_task_switch(sub_100283DA0, v1, 0);
}

uint64_t sub_100283DA0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[7];
  InfoBar.MessageQueue.setPersistentMessage(_:)(v0[3]);
  swift_release(v1);
  return swift_task_switch(sub_100283DE4, v0[5], v0[6]);
}

uint64_t sub_100283DE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100283E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_100283E80, v6, v7);
}

uint64_t sub_100283E80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  *(_QWORD *)(v0 + 48) = v1;
  swift_retain(v1);
  return swift_task_switch(sub_100283EC8, v1, 0);
}

uint64_t sub_100283EC8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[6];
  InfoBar.MessageQueue.removePersistentMessage()();
  swift_release(v1);
  return swift_task_switch(sub_100283F08, v0[4], v0[5]);
}

uint64_t sub_100283F08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100283F38()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100283F64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D67EC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_100283484(a1, v4, v5, v6);
}

uint64_t sub_100283FD8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100283FFC(uint64_t *a1)
{
  uint64_t v1;

  return sub_100283924(a1, v1);
}

uint64_t sub_100284004()
{
  uint64_t v0;

  return sub_100283A1C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_10028401C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100716090);
  v5 = swift_getKeyPath(&unk_1007160B8);
  static Published.subscript.getter(v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v11;
  result = *(double *)v10;
  v8 = v10[1];
  v9 = v10[2];
  *(_OWORD *)a2 = v10[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 48) = v6;
  return result;
}

uint64_t sub_1002840AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v13[7];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = *a2;
  KeyPath = swift_getKeyPath(&unk_100716090);
  v11 = swift_getKeyPath(&unk_1007160B8);
  v13[0] = v2;
  v13[1] = v3;
  v13[2] = v4;
  v13[3] = v5;
  v13[4] = v6;
  v13[5] = v7;
  v13[6] = v8;
  sub_1002842BC(v2, v3, v4, v5, v6, v7, v8);
  swift_retain(v9);
  return static Published.subscript.setter(v13, v9, KeyPath, v11);
}

uint64_t sub_100284170@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007160D8);
  v5 = swift_getKeyPath(&unk_100716100);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002841F0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007160D8);
  v5 = swift_getKeyPath(&unk_100716100);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_100284264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a2;
  if (a5 >= 2u)
  {
    if (a5 == 2)
    {
      v6 = a2;
      v5 = a4;
    }
    else
    {
      if (a5 != 3)
        return;
      v6 = a4;
    }
    swift_bridgeObjectRetain(v6);
  }
  swift_bridgeObjectRetain(v5);
}

uint64_t sub_1002842BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7)
{
  if (a6 != 1)
  {
    sub_100284264(result, a2, a3, a4, a5);
    return sub_10002ACF0(a6, a7);
  }
  return result;
}

uint64_t sub_1002842F4()
{
  return sub_100284004();
}

uint64_t sub_100284308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100284314);
}

uint64_t sub_100284314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_100284390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10028439C);
}

uint64_t sub_10028439C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100284410@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  __int128 v18[2];
  __int128 v19[2];
  __int128 v20[2];

  sub_10002E418((uint64_t)a1, (uint64_t)v20);
  sub_10002E418((uint64_t)a2, (uint64_t)v19);
  sub_10002E418((uint64_t)a4, (uint64_t)v18);
  v10 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009DDF70, BKLibraryManager_ptr);
  v17 = &off_10091B9B0;
  *(_QWORD *)&v15 = v10;
  _s5Books15CurrentPageViewVwxx_0(a4);
  _s5Books15CurrentPageViewVwxx_0(a2);
  _s5Books15CurrentPageViewVwxx_0(a1);
  v11 = a5 + *(int *)(type metadata accessor for RenameActionItem(0) + 36);
  v12 = enum case for ContextActionType.rename(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(v20, a5);
  sub_100022840(v19, a5 + 40);
  *(_QWORD *)(a5 + 80) = a3;
  sub_100022840(v18, a5 + 88);
  return sub_100022840(&v15, a5 + 128);
}

BOOL sub_100284550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  sub_10023ADE8(&v9);
  if (v10)
  {
    sub_1001EB834(&v9, &v11);
    v0 = v12;
    v1 = v13;
    sub_10003F198(&v11, v12);
    dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v0, v1);
    v3 = v2;
    swift_bridgeObjectRelease(v2);
    if (!v3)
    {
      v4 = v12;
      v5 = v13;
      sub_10003F198(&v11, v12);
      v6 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v4, v5);
      if ((static ContextActionAssetType.== infix(_:_:)(v6, 3) & 1) == 0)
      {
        sub_10003F198(&v11, v12);
        v7 = (sub_1002934F0() & 1) == 0;
        _s5Books15CurrentPageViewVwxx_0(&v11);
        return v7;
      }
    }
    _s5Books15CurrentPageViewVwxx_0(&v11);
  }
  else
  {
    sub_1001EB7F4((uint64_t)&v9);
  }
  return 0;
}

uint64_t sub_100284634()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[2] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002846C8, v5, v6);
}

uint64_t sub_1002846C8()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release(*(_QWORD *)(v0 + 48));
  v1 = sub_1002847DC();
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD **)(v0 + 16);
    v4 = v3[8];
    v5 = v3[9];
    sub_10003F198(v3 + 5, v4);
    dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v2, 1, v4, v5);

  }
  else
  {
    v6 = static Logger.contextActionItem.getter(0);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to create alertController", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v12 = *(_QWORD *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002847DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  void *v64;
  double v65;
  id v66;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  _QWORD *v77;
  void (*v78)(char *, char *, _QWORD *);
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  void **aBlock;
  uint64_t v82;
  void (*v83)(uint64_t, void *);
  void *v84;
  void *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RenameActionItem(0);
  v72 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v73 = v6;
  v74 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = (_QWORD *)type metadata accessor for Locale(0);
  v7 = *(v77 - 1);
  __chkstk_darwin(v77);
  v80 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v68 - v17;
  v75 = v0;
  sub_10023ADE8(&v87);
  if (v88)
  {
    sub_1001EB834(&v87, &v89);
    v19 = v90;
    v20 = v91;
    sub_10003F198(&v89, v90);
    v21 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v19, v20);
    if ((static ContextActionAssetType.== infix(_:_:)(v21, 1) & 1) != 0)
    {
      v22 = String.LocalizationValue.init(stringLiteral:)(0x5020656D616E6552, 0xEA00000000004644);
      static Locale.current.getter(v22);
      v23 = v12;
      v79 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v79(v15, v18, v12);
      v24 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v24);
      v26 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v27 = v80;
      v28 = v77;
      v78 = *(void (**)(char *, char *, _QWORD *))(v7 + 16);
      v78(v80, v11, v77);
      String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v26, v27, "Rename PDF", 10, 2);
    }
    else
    {
      v36 = String.LocalizationValue.init(stringLiteral:)(0x4220656D616E6552, 0xEB000000006B6F6FLL);
      static Locale.current.getter(v36);
      v23 = v12;
      v79 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v79(v15, v18, v12);
      v37 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v37);
      v38 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v39 = v80;
      v28 = v77;
      v78 = *(void (**)(char *, char *, _QWORD *))(v7 + 16);
      v78(v80, v11, v77);
      String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v38, v39, "Rename Book", 11, 2);
    }
    v40 = v29;
    v77 = *(_QWORD **)(v7 + 8);
    ((void (*)(char *, _QWORD *))v77)(v11, v28);
    v76 = *(void (**)(char *, uint64_t))(v13 + 8);
    v76(v18, v23);
    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    v42 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v41, 0, 1);
    v70 = v42;

    sub_1001EB84C((uint64_t)&v89, (uint64_t)&v87);
    v43 = swift_allocObject(&unk_1008F80E8, 64, 7);
    sub_1001EB834(&v87, (_OWORD *)(v43 + 16));
    v85 = sub_100285440;
    v86 = v43;
    aBlock = _NSConcreteStackBlock;
    v82 = 1107296256;
    v83 = sub_1001EDBF0;
    v84 = &unk_1008F8100;
    v44 = _Block_copy(&aBlock);
    objc_msgSend(v42, "addTextFieldWithConfigurationHandler:", v44, swift_release(v86).n128_f64[0]);
    _Block_release(v44);
    v45 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    static Locale.current.getter(v45);
    v46 = v11;
    v47 = v23;
    v79(v15, v18, v23);
    type metadata accessor for BundleFinder();
    v69 = (id)objc_opt_self(NSBundle);
    v48 = objc_msgSend(v69, "bundleForClass:", ObjCClassFromMetadata);
    v49 = v80;
    v78(v80, v46, v28);
    String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v48, v49, "Cancel", 6, 2);
    v51 = v50;
    ((void (*)(char *, _QWORD *))v77)(v46, v28);
    v76(v18, v47);
    v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v51);
    v71 = (id)objc_opt_self(UIAlertAction);
    v53 = objc_msgSend(v71, "actionWithTitle:style:handler:", v52, 1, 0);

    v54 = v70;
    objc_msgSend(v70, "addAction:", v53);

    v55 = String.LocalizationValue.init(stringLiteral:)(0x656D616E6552, 0xE600000000000000);
    static Locale.current.getter(v55);
    v79(v15, v18, v47);
    v56 = objc_msgSend(v69, "bundleForClass:", ObjCClassFromMetadata);
    v78(v49, v46, v28);
    String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v56, v49, "Rename", 6, 2);
    v58 = v57;
    ((void (*)(char *, _QWORD *))v77)(v46, v28);
    v76(v18, v47);
    sub_1001EB84C((uint64_t)&v89, (uint64_t)&v87);
    v59 = v74;
    sub_100285448(v75, v74);
    v60 = *(unsigned __int8 *)(v72 + 80);
    v61 = (v60 + 72) & ~v60;
    v62 = swift_allocObject(&unk_1008F8138, v61 + v73, v60 | 7);
    *(_QWORD *)(v62 + 16) = v54;
    sub_1001EB834(&v87, (_OWORD *)(v62 + 24));
    sub_100285548(v59, v62 + v61);
    v35 = v54;
    v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v58);
    v85 = sub_10028558C;
    v86 = v62;
    aBlock = _NSConcreteStackBlock;
    v82 = 1107296256;
    v83 = sub_1001EDBF0;
    v84 = &unk_1008F8150;
    v64 = _Block_copy(&aBlock);
    *(_QWORD *)&v65 = swift_release(v86).n128_u64[0];
    v66 = objc_msgSend(v71, "actionWithTitle:style:handler:", v63, 0, v64, v65);
    _Block_release(v64);

    objc_msgSend(v35, "addAction:", v66);
    _s5Books15CurrentPageViewVwxx_0(&v89);
  }
  else
  {
    v30 = sub_1001EB7F4((uint64_t)&v87);
    v31 = static Logger.contextActionItem.getter(v30);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "asset information unavailable to create alert controller", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v35;
}

void sub_100285074(void *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = a2[3];
  v4 = a2[4];
  sub_10003F198(a2, v3);
  dispatch thunk of ContextAssetInfoProtocol.title.getter(v3, v4);
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(a1, "setText:", v7);

}

void sub_1002850F8(int a1, id a2, _QWORD *a3, _QWORD *a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  v6 = objc_msgSend(a2, "textFields");
  if (v6)
  {
    v7 = v6;
    v8 = sub_100009E04(0, &qword_1009D57D0, UITextField_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v34 = v9;
      else
        v34 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v9);
      if (!v35)
        goto LABEL_18;
    }
    else if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_18:
      v24 = v9;
LABEL_26:
      swift_bridgeObjectRelease(v24);
      return;
    }
    if ((v9 & 0xC000000000000001) != 0)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
LABEL_7:
      v36 = v10;
      swift_bridgeObjectRelease(v9);
      v11 = objc_msgSend(v36, "text");
      if (!v11)
      {

        return;
      }
      v12 = v11;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      v15 = objc_msgSend(v36, "text");
      if (v15)
      {
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v19 = v18;

      }
      else
      {
        v17 = 0;
        v19 = 0;
      }
      v20 = a3[3];
      v21 = a3[4];
      sub_10003F198(a3, v20);
      v22 = dispatch thunk of ContextAssetInfoProtocol.title.getter(v20, v21);
      v9 = v23;
      if (v19)
      {
        if (v23)
        {
          if (v17 == v22 && v19 == v23)
          {

            swift_bridgeObjectRelease(v14);
            swift_bridgeObjectRelease(v19);
            goto LABEL_18;
          }
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v22, v23, 0);
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v9);
          if ((v33 & 1) != 0)
          {
LABEL_25:

            v24 = v14;
            goto LABEL_26;
          }
LABEL_23:
          v25 = a4 + 16;
          v27 = a4[19];
          v26 = a4[20];
          sub_10003F198(v25, v27);
          v28 = a3[3];
          v29 = a3[4];
          sub_10003F198(a3, v28);
          v30 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v28, v29);
          v32 = v31;
          (*(void (**)(uint64_t))(v26 + 48))(v30);

          swift_bridgeObjectRelease(v14);
          v24 = v32;
          goto LABEL_26;
        }
        v9 = v19;
      }
      else if (!v23)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease(v9);
      goto LABEL_23;
    }
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v10 = *(id *)(v9 + 32);
      goto LABEL_7;
    }
    __break(1u);
  }
}

uint64_t sub_1002853D4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D68CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100284634();
}

uint64_t sub_10028541C()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100285440(void *a1)
{
  uint64_t v1;

  sub_100285074(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_100285448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RenameActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028548C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for RenameActionItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 24));
  v7 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v7);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v7 + 128));
  v8 = v7 + *(int *)(v1 + 36);
  v9 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100285548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RenameActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10028558C(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RenameActionItem(0) - 8) + 80);
  sub_1002850F8(a1, *(id *)(v1 + 16), (_QWORD *)(v1 + 24), (_QWORD *)(v1 + ((v3 + 72) & ~v3)));
}

char *sub_1002855D8(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char *v8;
  uint64_t v9;
  char *v10;
  _OWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char **v22;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v8 = a2[3];
    *((_QWORD *)a1 + 3) = v8;
    v9 = *(int *)(a3 + 24);
    v10 = &a1[v9];
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = v5;
    swift_retain(v8);
    v13 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(v11, v13) == 1)
    {
      *(_OWORD *)v10 = *v11;
      v14 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v15 = &v10[v14];
      v16 = (char *)v11 + v14;
      v17 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v18 = 1;
    }
    else
    {
      v19 = *(_QWORD *)v11;
      *(_QWORD *)v10 = *(_QWORD *)v11;
      swift_retain(v19);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v13, v18);
    v20 = *(int *)(a3 + 28);
    v21 = &a1[v20];
    v22 = (char **)((char *)a2 + v20);
    v5 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 8);
    *(_QWORD *)v21 = v5;
    v21[8] = (char)v22;
  }
  swift_retain(v5);
  return a1;
}

double sub_10028570C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double result;

  swift_release(*(_QWORD *)(a1 + 24));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = (char *)v4 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v7 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v4);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28))).n128_u64[0];
  return result;
}

uint64_t sub_1002857AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v6;
  swift_retain(v7);
  v12 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
  {
    *v9 = *v10;
    v13 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = 1;
  }
  else
  {
    v18 = *(_QWORD *)v10;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    swift_retain(v18);
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v12, v17);
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = (_BYTE)v21;
  swift_retain(v22);
  return a1;
}

uint64_t sub_1002858C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  swift_retain(v9);
  swift_release(v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (_OWORD *)(a1 + v11);
    v13 = (_OWORD *)(a2 + v11);
    sub_100010960(a1 + v11, &qword_1009D5038);
    v14 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      *v12 = *v13;
      v15 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v16 = (char *)v12 + v15;
      v17 = (char *)v13 + v15;
      v18 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = 1;
    }
    else
    {
      v20 = *(_QWORD *)v13;
      *(_QWORD *)v12 = *(_QWORD *)v13;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v19);
  }
  v21 = *(int *)(a3 + 28);
  v22 = (uint64_t *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v25 = *v22;
  *v22 = v24;
  *((_BYTE *)v22 + 8) = (_BYTE)v23;
  swift_retain(v24);
  swift_release(v25);
  return a1;
}

_OWORD *sub_100285A10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    *v8 = *v9;
    v11 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v12 = (char *)v8 + v11;
    v13 = (char *)v9 + v11;
    v14 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  return a1;
}

uint64_t sub_100285B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)(a2 + v8);
    sub_100010960(a1 + v8, &qword_1009D5038);
    v11 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      *v9 = *v10;
      v12 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v13 = (char *)v9 + v12;
      v14 = (char *)v10 + v12;
      v15 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v16 = *(int *)(a3 + 28);
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 8);
  v20 = *v17;
  *v17 = v19;
  *((_BYTE *)v17 + 8) = (_BYTE)v18;
  swift_release(v20);
  return a1;
}

uint64_t sub_100285C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100285C4C);
}

uint64_t sub_100285C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D5030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100285CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100285CD8);
}

uint64_t sub_100285CD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D5030);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DarkModeOptionsButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D6928;
  if (!qword_1009D6928)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DarkModeOptionsButton);
  return result;
}

void sub_100285D8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100716238;
  v4[1] = &unk_100716250;
  sub_10025BB8C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100716268;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_100285E10(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100869A20, 1);
}

void sub_100285E20(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjCClassFromMetadata;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD v102[2];

  v99 = a1;
  v2 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v2);
  v98 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PlainButtonStyle(0);
  v96 = *(_QWORD *)(v4 - 8);
  v97 = v4;
  __chkstk_darwin(v4);
  v95 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for AutomaticHoverEffect(0);
  v86 = *(_QWORD *)(v88 - 8);
  v6 = __chkstk_darwin(v88);
  v82 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for InlinePickerStyle(0, v6);
  v77 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v76 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for MenuOrder(0);
  v66 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v63 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10004CFD4(&qword_1009D6968);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v61 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009D6970);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v65 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_10004CFD4(&qword_1009D6978);
  v70 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v69 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_10004CFD4(&qword_1009D6980);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v72 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_10004CFD4(&qword_1009D6988);
  __chkstk_darwin(v79);
  v71 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v78 = (char *)&v54 - v16;
  v85 = sub_10004CFD4(&qword_1009D6990);
  v81 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v80 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10004CFD4(&qword_1009D6998);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v87 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_10004CFD4(&qword_1009D69A0);
  __chkstk_darwin(v84);
  v92 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_10004CFD4(&qword_1009D69A8);
  __chkstk_darwin(v83);
  v94 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10004CFD4(&qword_1009D69B0);
  __chkstk_darwin(v90);
  v93 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10004CFD4(&qword_1009D69B8);
  __chkstk_darwin(v59);
  v101 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Locale(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v54 - v28;
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v54 - v35;
  v37 = String.LocalizationValue.init(stringLiteral:)(0x6E61726165707041, 0xEA00000000006563);
  static Locale.current.getter(v37);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v33, v36, v30);
  v38 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v38);
  v40 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, v29, v23);
  v41 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v40, v26, "Appearance menu name", 20, 2);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v30);
  v102[0] = v41;
  v102[1] = v43;
  v44 = sub_1001F2108();
  Text.init<A>(_:)(v102, &type metadata for String, v44, v45);
  v100 = v1;
  v46 = *(_QWORD *)(v1 + 24);
  v47 = swift_retain(v46);
  LOBYTE(v41) = ThemeAppearanceManager.appearance.getter(v47);
  swift_release(v46);
  sub_100270FB8(v41);
  v49 = v48;
  v51 = v50;
  v52 = swift_retain(v46);
  LOBYTE(v41) = ThemeAppearanceManager.appearance.getter(v52);
  swift_release(v46);
  v53 = (char *)&loc_1002864F0 + dword_100286C7C[v41];
  v60 = v44;
  v58 = v51;
  v57 = v49;
  __asm { BR              X10 }
}

uint64_t sub_100286518()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v69[4];
  _BYTE v70[16];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  v5 = Image.init(systemName:)(0xD000000000000014, 0x80000001007BACB0);
  v6 = *(_QWORD *)(v4 - 520);
  v7 = *(_QWORD *)(v4 - 536);
  v8 = v1 & 1;
  *(_DWORD *)(v4 - 520) = v8;
  v9 = *(_QWORD *)(v4 - 144);
  sub_100286C8C(v5, v9);
  swift_release(v5);
  __chkstk_darwin(v10);
  v71 = *(_QWORD *)(v4 - 152);
  v72 = v3;
  *(_QWORD *)(v4 - 160) = v0;
  v73 = v0;
  v74 = v8;
  v75 = v2;
  __chkstk_darwin(v11);
  v69[2] = v9;
  *(_QWORD *)(v4 - 168) = v2;
  v12 = v3;
  v13 = sub_10004CFD4(&qword_1009D69C0);
  v14 = sub_100287970();
  v15 = sub_100030B34(&qword_1009D6A10, &qword_1009D69C0, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v16 = *(_QWORD *)(v4 - 480);
  v17 = ((uint64_t (*)(uint64_t (*)(), _BYTE *, uint64_t (*)@<X0>(uint64_t@<X8>), _QWORD *, _QWORD, uint64_t, unint64_t, uint64_t))Menu.init(content:label:))(sub_100287940, v70, sub_10028794C, v69, *(_QWORD *)(v4 - 496), v13, v14, v15);
  v18 = *(_QWORD *)(v4 - 464);
  ((void (*)(uint64_t))static MenuOrder.fixed.getter)(v17);
  v19 = sub_100030B34(&qword_1009D6A18, &qword_1009D6968, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v20 = *(_QWORD *)(v4 - 448);
  v21 = *(_QWORD *)(v4 - 456);
  ((void (*)(uint64_t, uint64_t, uint64_t))View.menuOrder(_:))(v18, v21, v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 440) + 8))(v18, v7);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 472) + 8))(v16, v21);
  v23 = *(_QWORD *)(v4 - 360);
  ((void (*)(uint64_t))InlinePickerStyle.init())(v22);
  *(_QWORD *)(v4 - 128) = v21;
  *(_QWORD *)(v4 - 120) = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v4 - 128, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
  v25 = *(_QWORD *)(v4 - 416);
  v26 = *(_QWORD *)(v4 - 424);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))View.pickerStyle<A>(_:))(v23, v26, v6, OpaqueTypeConformance2, &protocol witness table for InlinePickerStyle);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 352) + 8))(v23, v6);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 432) + 8))(v20, v26);
  v28 = *(_QWORD *)(v4 - 312);
  static CustomHoverEffect<>.automatic.getter(v27);
  *(_QWORD *)(v4 - 128) = v26;
  *(_QWORD *)(v4 - 120) = v6;
  *(_QWORD *)(v4 - 112) = OpaqueTypeConformance2;
  *(_QWORD *)(v4 - 104) = &protocol witness table for InlinePickerStyle;
  v29 = swift_getOpaqueTypeConformance2(v4 - 128, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
  v30 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v31 = *(_QWORD *)(v4 - 392);
  v32 = *(_QWORD *)(v4 - 384);
  v33 = *(_QWORD *)(v4 - 264);
  View.hoverEffect<A>(_:isEnabled:)(v28, 1, v32, v33, v29, v30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 280) + 8))(v28, v33);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 408) + 8))(v25, v32);
  *(_QWORD *)(v4 - 128) = v32;
  *(_QWORD *)(v4 - 120) = v33;
  *(_QWORD *)(v4 - 112) = v29;
  *(_QWORD *)(v4 - 104) = v30;
  v34 = swift_getOpaqueTypeConformance2(v4 - 128, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v35 = *(_QWORD *)(v4 - 400);
  *(_QWORD *)(v4 - 528) = v12;
  v37 = *(_QWORD *)(v4 - 168);
  v36 = *(_QWORD *)(v4 - 160);
  LODWORD(v30) = *(_DWORD *)(v4 - 520);
  v38 = *(_QWORD *)(v4 - 368);
  ((void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))View.accessibilityLabel(_:))(v12, v36, v30, v37, v38, v34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 376) + 8))(v31, v38);
  v39 = *(_QWORD *)(v4 - 504);
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 512);
  *(_QWORD *)(v4 - 120) = v39;
  v40 = *(_QWORD *)(v4 - 344);
  v41 = *(_QWORD *)(v4 - 336);
  ModifiedContent<>.accessibilityValue<A>(_:)(v4 - 128, v41, &type metadata for String, *(_QWORD *)(v4 - 488));
  sub_100010960(v35, &qword_1009D6988);
  v42 = swift_bridgeObjectRelease(v39);
  __chkstk_darwin(v42);
  v71 = *(_QWORD *)(v4 - 144);
  v72 = v12;
  v73 = v36;
  v74 = v30;
  LOBYTE(v12) = v30;
  v75 = v37;
  v43 = sub_10004CFD4(&qword_1009D6A20);
  v44 = sub_100287BF8();
  v45 = sub_100030B34(&qword_1009D6A30, &qword_1009D6A20, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v46 = *(_QWORD *)(v4 - 328);
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_100287BCC, v70, v41, v43, v44);
  v47 = sub_100010960(v40, &qword_1009D6988);
  v48 = *(_QWORD *)(v4 - 208);
  PlainButtonStyle.init()(v47);
  *(_QWORD *)(v4 - 128) = v41;
  *(_QWORD *)(v4 - 120) = v43;
  *(_QWORD *)(v4 - 112) = v44;
  *(_QWORD *)(v4 - 104) = v45;
  v49 = swift_getOpaqueTypeConformance2(v4 - 128, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
  v50 = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v51 = *(_QWORD *)(v4 - 272);
  v52 = *(_QWORD *)(v4 - 288);
  v53 = *(_QWORD *)(v4 - 192);
  View.buttonStyle<A>(_:)(v48, v52, v53, v49, v50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 200) + 8))(v48, v53);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 320) + 8))(v46, v52);
  v54 = (uint64_t *)(*(_QWORD *)(v4 - 152) + *(int *)(type metadata accessor for DarkModeOptionsButton(0) + 28));
  v55 = *v54;
  LOBYTE(v53) = *((_BYTE *)v54 + 8);
  v56 = swift_retain(*v54);
  v57 = sub_1006682B0(v56, v53);
  v58 = swift_release(v55);
  LOBYTE(v55) = static Edge.Set.all.getter(v58);
  v59 = *(_QWORD *)(v4 - 256);
  v60 = *(_QWORD *)(v4 - 240);
  v61 = *(_QWORD *)(v4 - 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v61, v51, v60);
  v62 = v61 + *(int *)(*(_QWORD *)(v4 - 296) + 36);
  *(_QWORD *)v62 = v57;
  *(_BYTE *)(v62 + 8) = v55;
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v51, v60);
  v63 = *(_QWORD *)(v4 - 184);
  sub_10066805C(v63);
  v64 = *(_QWORD *)(v4 - 216);
  v65 = v64 + *(int *)(*(_QWORD *)(v4 - 304) + 36);
  sub_10025BC3C(v63, v65);
  *(_WORD *)(v65 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4(v61, v64, &qword_1009D69A0);
  sub_10025BC80(v63);
  sub_100010960(v61, &qword_1009D69A0);
  sub_10066805C(v63);
  sub_1001F5B28(*(_QWORD *)(v4 - 528), *(_QWORD *)(v4 - 160), v12);
  swift_bridgeObjectRelease(*(_QWORD *)(v4 - 168));
  v66 = *(_QWORD *)(v4 - 224);
  v67 = v66 + *(int *)(*(_QWORD *)(v4 - 248) + 36);
  sub_10025BC3C(v63, v67);
  *(_BYTE *)(v67 + *(int *)(sub_10004CFD4(&qword_1009D5140) + 36)) = 0;
  sub_10000B5E4(v64, v66, &qword_1009D69A8);
  sub_10025BC80(v63);
  sub_100010960(v64, &qword_1009D69A8);
  sub_100287D70(v66, *(_QWORD *)(v4 - 176));
  return sub_100010960(*(_QWORD *)(v4 - 144), &qword_1009D69B8);
}

uint64_t sub_100286C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v53 = a1;
  v61 = a2;
  v56 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v56);
  v3 = (uint64_t *)((char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Image.Scale(0);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  __chkstk_darwin(v4);
  v58 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Font.TextStyle(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D59A8);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_10004CFD4(&qword_1009D69E8);
  __chkstk_darwin(v54);
  v17 = (double *)((char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_10004CFD4(&qword_1009D69D8);
  __chkstk_darwin(v57);
  v55 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = enum case for Image.TemplateRenderingMode.template(_:);
  v20 = type metadata accessor for Image.TemplateRenderingMode(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v15, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v20);
  v22 = Image.renderingMode(_:)(v15, v53);
  v23 = sub_100010960((uint64_t)v15, &qword_1009D59A8);
  v24 = static Edge.Set.top.getter(v23);
  v25 = v24;
  v26 = static Edge.Set.bottom.getter(v24);
  v27 = Edge.Set.init(rawValue:)(0);
  v28 = Edge.Set.init(rawValue:)(v27);
  if (Edge.Set.init(rawValue:)(v28 & v25) != v25)
    v27 = Edge.Set.init(rawValue:)(v27 | v25);
  v29 = Edge.Set.init(rawValue:)(v27);
  if (Edge.Set.init(rawValue:)(v29 & v26) != v26)
    LOBYTE(v27) = Edge.Set.init(rawValue:)(v27 | v26);
  v30 = EdgeInsets.init(_all:)(6.0);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Font.TextStyle.callout(_:), v9);
  v37 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v8, 1, 1, v37);
  v38 = static Font.system(_:design:weight:)(v12, v8, 0, 1);
  sub_100010960((uint64_t)v8, &qword_1009CEDD0);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  static Font.Weight.semibold.getter(v39);
  v40 = Font.weight(_:)(v38);
  swift_release(v38);
  KeyPath = swift_getKeyPath(&unk_100716330);
  v42 = v58;
  v43 = v59;
  v44 = v60;
  (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, enum case for Image.Scale.large(_:), v60);
  v45 = swift_getKeyPath(&unk_100716360);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v3 + *(int *)(v56 + 28), v42, v44);
  *v3 = v45;
  sub_10000B5E4((uint64_t)v3, (uint64_t)v17 + *(int *)(v54 + 36), &qword_1009D38F8);
  *(_QWORD *)v17 = v22;
  *((_BYTE *)v17 + 8) = v27;
  v17[2] = v30;
  *((_QWORD *)v17 + 3) = v32;
  *((_QWORD *)v17 + 4) = v34;
  *((_QWORD *)v17 + 5) = v36;
  *((_BYTE *)v17 + 48) = 0;
  *((_QWORD *)v17 + 7) = KeyPath;
  *((_QWORD *)v17 + 8) = v40;
  swift_retain(v22);
  swift_retain(KeyPath);
  swift_retain(v40);
  sub_100010960((uint64_t)v3, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  swift_release(v40);
  swift_release(KeyPath);
  swift_release(v22);
  v47 = static Alignment.center.getter(v46);
  v48 = v55;
  sub_1005F1FB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v55, 0.0, 1, INFINITY, 0, v47, v49);
  sub_100010960((uint64_t)v17, &qword_1009D69E8);
  v50 = sub_1002879F4();
  View.accessibilityHidden(_:)(1, v57, v50);
  return sub_100010960(v48, &qword_1009D69D8);
}

uint64_t sub_100287174(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  char v20;
  uint64_t v21;
  _QWORD v22[2];
  char v23;
  _QWORD v24[2];
  char v25;

  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = type metadata accessor for ThemeAppearanceManager(0);
  v12 = sub_100008DB0(&qword_1009D6A48, (uint64_t (*)(uint64_t))&type metadata accessor for ThemeAppearanceManager, (uint64_t)&protocol conformance descriptor for ThemeAppearanceManager);
  v13 = ObservedObject.projectedValue.getter(v9, v10, v11, v12);
  KeyPath = swift_getKeyPath(&unk_1007162D0);
  ObservedObject.Wrapper.subscript.getter(v24, KeyPath, v13, v12);
  swift_release(KeyPath);
  swift_release(v13);
  v22[0] = v24[0];
  v22[1] = v24[1];
  v23 = v25;
  v19[0] = a2;
  v19[1] = a3;
  v20 = a4 & 1;
  v21 = a5;
  sub_1001F596C(a2, a3, a4 & 1);
  swift_bridgeObjectRetain(a5);
  v15 = sub_10004CFD4(&qword_1009D6A50);
  v16 = sub_100287E04();
  v17 = sub_100287E48();
  return ((uint64_t (*)(_QWORD *, _QWORD *, uint64_t (*)(), _QWORD, void *, void *, uint64_t, void *, unint64_t, unint64_t))Picker.init(selection:label:content:))(v22, v19, sub_1002872CC, 0, &type metadata for Text, &type metadata for ThemeAppearance, v15, &protocol witness table for Text, v16, v17);
}

uint64_t sub_1002872CC()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[4];
  uint64_t v7;

  v7 = static ThemeAppearance.availableCases.getter();
  KeyPath = swift_getKeyPath(&unk_100716300);
  v1 = sub_10004CFD4(&qword_1009D6AB0);
  v2 = sub_10004CFD4(&qword_1009D6AB8);
  v3 = sub_100030B34(&qword_1009D6AC0, &qword_1009D6AB0, (uint64_t)&protocol conformance descriptor for [A]);
  v6[0] = sub_100030B74(&qword_1009D6A68);
  v6[1] = type metadata accessor for TitleAndIconLabelStyle(255);
  v6[2] = sub_100287F18();
  v6[3] = sub_100008DB0(&qword_1009D6AA8, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  return ForEach<>.init(_:id:content:)(&v7, KeyPath, sub_1002873FC, 0, v1, v2, v3, &protocol witness table for String, OpaqueTypeConformance2);
}

uint64_t sub_1002873FC@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _BYTE v22[32];
  _BYTE v23[32];

  v21[1] = a2;
  v3 = type metadata accessor for TitleAndIconLabelStyle(0);
  v21[0] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D6A80);
  __chkstk_darwin(v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D6A68);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  v23[16] = (_BYTE)a1;
  v22[16] = (_BYTE)a1;
  Label.init(title:icon:)(sub_100288060, v23, sub_100288068, v22, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image, v14);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
  v8[*(int *)(v6 + 36)] = (char)a1;
  sub_10000B5E4((uint64_t)v8, (uint64_t)v16, &qword_1009D6A80);
  v16[*(int *)(v13 + 36)] = (char)a1;
  sub_100010960((uint64_t)v8, &qword_1009D6A80);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  TitleAndIconLabelStyle.init()(v17);
  v18 = sub_100287F18();
  v19 = sub_100008DB0(&qword_1009D6AA8, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)(v5, v13, v3, v18, v19);
  (*(void (**)(char *, uint64_t))(v21[0] + 8))(v5, v3);
  return sub_100010960((uint64_t)v16, &qword_1009D6A68);
}

uint64_t sub_100287648@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  sub_100270FB8(a1);
  v11[0] = v3;
  v11[1] = v4;
  v5 = sub_1001F2108();
  result = Text.init<A>(_:)(v11, &type metadata for String, v5, v6);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v10;
  return result;
}

void sub_10028769C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1002876C8()
{
  uint64_t *v0;
  uint64_t result;

  result = ((uint64_t (*)(unint64_t, unint64_t))Image.init(systemName:))(0xD000000000000014, 0x80000001007BACB0);
  *v0 = result;
  return result;
}

uint64_t sub_100287758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;

  *(_QWORD *)a6 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 1;
  v12 = sub_10004CFD4(&qword_1009D6A38);
  return sub_1002877DC(a1, a2, a3, a4 & 1, a5, a6 + *(int *)(v12 + 44));
}

uint64_t sub_1002877DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v12 = sub_10004CFD4(&qword_1009D69B8);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v20 - v16;
  sub_10000B5E4(a1, (uint64_t)&v20 - v16, &qword_1009D69B8);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v14, &qword_1009D69B8);
  sub_10000B5E4((uint64_t)v14, a6, &qword_1009D69B8);
  v18 = a6 + *(int *)(sub_10004CFD4(&qword_1009D6A40) + 48);
  *(_QWORD *)v18 = a2;
  *(_QWORD *)(v18 + 8) = a3;
  a4 &= 1u;
  *(_BYTE *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  sub_1001F596C(a2, a3, a4);
  swift_bridgeObjectRetain(a5);
  sub_1001F596C(a2, a3, a4);
  swift_bridgeObjectRetain(a5);
  sub_100010960((uint64_t)v17, &qword_1009D69B8);
  sub_1001F5B28(a2, a3, a4);
  swift_bridgeObjectRelease(a5);
  return sub_100010960((uint64_t)v14, &qword_1009D69B8);
}

uint64_t sub_100287940()
{
  return sub_100287BD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100287174);
}

uint64_t sub_10028794C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000B5E4(*(_QWORD *)(v1 + 16), a1, &qword_1009D69B8);
}

unint64_t sub_100287970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D69C8;
  if (!qword_1009D69C8)
  {
    v1 = sub_100030B74(&qword_1009D69B8);
    sub_1002879F4();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D69C8);
  }
  return result;
}

unint64_t sub_1002879F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D69D0;
  if (!qword_1009D69D0)
  {
    v1 = sub_100030B74(&qword_1009D69D8);
    sub_100287A60();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D69D0);
  }
  return result;
}

unint64_t sub_100287A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D69E0;
  if (!qword_1009D69E0)
  {
    v1 = sub_100030B74(&qword_1009D69E8);
    sub_100287AE4();
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D69E0);
  }
  return result;
}

unint64_t sub_100287AE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D69F0;
  if (!qword_1009D69F0)
  {
    v1 = sub_100030B74(&qword_1009D69F8);
    sub_100287B68();
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D69F0);
  }
  return result;
}

unint64_t sub_100287B68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6A00;
  if (!qword_1009D6A00)
  {
    v1 = sub_100030B74(&qword_1009D6A08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6A00);
  }
  return result;
}

uint64_t sub_100287BCC()
{
  return sub_100287BD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100287758);
}

uint64_t sub_100287BD8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

unint64_t sub_100287BF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  result = qword_1009D6A28;
  if (!qword_1009D6A28)
  {
    v1 = sub_100030B74(&qword_1009D6988);
    v2 = sub_100030B74(&qword_1009D6978);
    v3 = type metadata accessor for AutomaticHoverEffect(255);
    v4 = sub_100030B74(&qword_1009D6970);
    v6 = type metadata accessor for InlinePickerStyle(255, v5);
    v10 = sub_100030B74(&qword_1009D6968);
    v11 = sub_100030B34(&qword_1009D6A18, &qword_1009D6968, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
    v10 = v4;
    v11 = v6;
    v12 = OpaqueTypeConformance2;
    v13 = &protocol witness table for InlinePickerStyle;
    v8 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    v9 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
    v10 = v2;
    v11 = v3;
    v12 = v8;
    v13 = (void *)v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6A28);
  }
  return result;
}

uint64_t sub_100287D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D69B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287DB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ThemeAppearanceManager.appearance.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100287DE0(unsigned __int8 *a1)
{
  return ThemeAppearanceManager.appearance.setter(*a1);
}

unint64_t sub_100287E04()
{
  unint64_t result;

  result = qword_1009D6A58;
  if (!qword_1009D6A58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ThemeAppearance, &type metadata for ThemeAppearance);
    atomic_store(result, (unint64_t *)&qword_1009D6A58);
  }
  return result;
}

unint64_t sub_100287E48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009D6A60;
  if (!qword_1009D6A60)
  {
    v1 = sub_100030B74(&qword_1009D6A50);
    v2[0] = sub_100030B74(&qword_1009D6A68);
    v2[1] = type metadata accessor for TitleAndIconLabelStyle(255);
    v2[2] = sub_100287F18();
    v2[3] = sub_100008DB0(&qword_1009D6AA8, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6A60);
  }
  return result;
}

unint64_t sub_100287F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6A70;
  if (!qword_1009D6A70)
  {
    v1 = sub_100030B74(&qword_1009D6A68);
    sub_100287F9C();
    sub_100030B34(&qword_1009D6A98, &qword_1009D6AA0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6A70);
  }
  return result;
}

unint64_t sub_100287F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6A78;
  if (!qword_1009D6A78)
  {
    v1 = sub_100030B74(&qword_1009D6A80);
    sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    sub_100030B34(&qword_1009D6A88, &qword_1009D6A90, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6A78);
  }
  return result;
}

uint64_t sub_100288038@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = ThemeAppearance.rawValue.getter(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100288060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100287648(*(_BYTE *)(v1 + 16), a1);
}

void sub_100288068()
{
  uint64_t v0;

  sub_10028769C(*(_BYTE *)(v0 + 16));
}

unint64_t sub_100288084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6AC8;
  if (!qword_1009D6AC8)
  {
    v1 = sub_100030B74(&qword_1009D69B0);
    sub_100288108();
    sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6AC8);
  }
  return result;
}

unint64_t sub_100288108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6AD0;
  if (!qword_1009D6AD0)
  {
    v1 = sub_100030B74(&qword_1009D69A8);
    sub_10028818C();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6AD0);
  }
  return result;
}

unint64_t sub_10028818C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_1009D6AD8;
  if (!qword_1009D6AD8)
  {
    v1 = sub_100030B74(&qword_1009D69A0);
    v2 = sub_100030B74(&qword_1009D6990);
    v3 = type metadata accessor for PlainButtonStyle(255);
    v6 = sub_100030B74(&qword_1009D6988);
    v7 = sub_100030B74(&qword_1009D6A20);
    v8 = sub_100287BF8();
    v9 = sub_100030B34(&qword_1009D6A30, &qword_1009D6A20, (uint64_t)&protocol conformance descriptor for VStack<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
    v5 = sub_100008DB0(&qword_1009D3838, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6AD8);
  }
  return result;
}

char *sub_1002882E0(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v5;
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v10;
      *(_QWORD *)v9 = *v10;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v12, v14);
    v16 = a3[6];
    v17 = &a1[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_1001F2508(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    v17[8] = v20;
    a1[a3[7]] = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1002883F8(id *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  return sub_1001F2564(*(uint64_t *)((char *)a1 + *(int *)(a2 + 24)), *((_BYTE *)a1 + *(int *)(a2 + 24) + 8));
}

_QWORD *sub_100288488(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = v6;
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v10;
    *v9 = *v10;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v12, v14);
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_BYTE *)(v18 + 8);
  sub_1001F2508(*(_QWORD *)v18, v20);
  *(_QWORD *)v17 = v19;
  v17[8] = v20;
  *((_BYTE *)a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100288574(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)(a2 + v9);
    sub_100010960(a1 + v9, (uint64_t *)&unk_1009D8200);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v11;
      *v10 = *v11;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_BYTE *)(v18 + 8);
  sub_1001F2508(*(_QWORD *)v18, v20);
  v21 = *(_QWORD *)v17;
  v22 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = v20;
  sub_1001F2564(v21, v22);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

_OWORD *sub_100288694(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_QWORD *sub_100288770(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v6 = (void *)*a1;
  *a1 = *a2;

  a1[1] = a2[1];
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100010960((uint64_t)a1 + v7, (uint64_t *)&unk_1009D8200);
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  v16 = *(_QWORD *)v13;
  v17 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  sub_1001F2564(v16, v17);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t sub_100288884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100288890);
}

uint64_t sub_100288890(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_10028891C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100288928);
}

char *sub_100288928(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MenuMaterial(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D6B38;
  if (!qword_1009D6B38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MenuMaterial);
  return result;
}

void sub_1002889DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1007163A8;
  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1007163C0;
    v4[3] = &unk_1007163D8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_100288A64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D82B0)
  {
    v2 = type metadata accessor for ColorScheme(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D82B0);
  }
}

uint64_t sub_100288AB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100869A70, 1);
}

uint64_t sub_100288AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;

  v5 = sub_10004CFD4(&qword_1009D6B78);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D6B80);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    KeyPath = swift_getKeyPath(&unk_100716440);
    v13 = swift_getKeyPath(&unk_100716468);
    v14 = v11;
    static Published.subscript.getter(&v33, v14, KeyPath, v13);

    swift_release(KeyPath);
    v15 = swift_release(v13);
    v16 = v33;
    LOBYTE(KeyPath) = static Edge.Set.all.getter(v15);
    v17 = sub_10004CFD4(&qword_1009D6B88);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, a1, v17);
    v18 = &v7[*(int *)(v5 + 36)];
    *(_QWORD *)v18 = v16;
    v18[8] = KeyPath;
    v19 = *(_BYTE *)(v2 + *(int *)(type metadata accessor for MenuMaterial(0) + 28));
    v20 = v14;
    v21 = sub_1003E3B94(v19);

    v23 = static Alignment.center.getter(v22);
    v25 = v24;
    sub_100288D0C((uint64_t)v7, (uint64_t)v10);
    v26 = (uint64_t *)&v10[*(int *)(v8 + 36)];
    *v26 = v21;
    v26[1] = v23;
    v26[2] = v25;
    sub_100010960((uint64_t)v7, &qword_1009D6B78);
    return sub_100288D54((uint64_t)v10, a2);
  }
  else
  {
    v28 = *(_QWORD *)(v2 + 8);
    v29 = type metadata accessor for ChromeStyle(0);
    v30 = sub_100288CBC();
    result = EnvironmentObject.error()(0, v28, v29, v30, v31);
    __break(1u);
  }
  return result;
}

unint64_t sub_100288CBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8330;
  if (!qword_1009D8330)
  {
    v1 = type metadata accessor for ChromeStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ChromeStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1009D8330);
  }
  return result;
}

uint64_t sub_100288D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D6B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100288D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D6B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100288DA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6B90;
  if (!qword_1009D6B90)
  {
    v1 = sub_100030B74(&qword_1009D6B80);
    sub_100288E24();
    sub_100030B34(&qword_1009D6BA8, &qword_1009D6BB0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6B90);
  }
  return result;
}

unint64_t sub_100288E24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6B98;
  if (!qword_1009D6B98)
  {
    v1 = sub_100030B74(&qword_1009D6B78);
    sub_100030B34(&qword_1009D6BA0, &qword_1009D6B88, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6B98);
  }
  return result;
}

void sub_100288EF4()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus);
  if (v1)
  {
    v20[0] = *(_QWORD *)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus);
    KeyPath = swift_getKeyPath(&unk_1007164C0);
    v3 = swift_allocObject(&unk_1008F82B0, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v0);
    v4 = v1;
    v5 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100289AA4, v3, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v3);
    v6 = (_QWORD *)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_progressObservers);
    swift_beginAccess(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_progressObservers, v20, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v9 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v8 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v9 >= v8 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
    v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v5);
    specialized Array._endMutation()(v10);
    swift_endAccess(v20);
    v20[0] = v4;
    v11 = swift_getKeyPath(&unk_1007164F8);
    v12 = swift_allocObject(&unk_1008F82B0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v13 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v11, 0, sub_100289AA4, v12, &protocol witness table for NSObject);
    swift_release(v11);
    swift_release(v12);
    swift_beginAccess(v6, v20, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
    v16 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v15 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v16 >= v15 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
    specialized Array._endMutation()(v17);
    swift_endAccess(v20);

  }
  else
  {
    v18 = (uint64_t *)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_progressObservers);
    swift_beginAccess(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_progressObservers, v20, 1, 0);
    v19 = *v18;
    *v18 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v19);
  }
}

void sub_100289190(double a1)
{
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;

  v2 = OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressButton;
  if (!*(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressButton])
  {
    objc_msgSend(v1, "frame");
    v4 = v3 * 0.5 + -13.5;
    objc_msgSend(v1, "frame");
    v6 = objc_msgSend(objc_allocWithZone((Class)IMRadialProgressButton), "initWithFrame:", v4, v5 * 0.5 + -13.5, 27.0, 27.0);
    v7 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v6;

    v8 = *(void **)&v1[v2];
    if (v8)
    {
      objc_msgSend(v8, "setInscribeProgress:", 1);
      v9 = *(void **)&v1[v2];
      if (!v9)
        goto LABEL_8;
      v10 = (void *)objc_opt_self(UIColor);
      v11 = v9;
      v12 = objc_msgSend(v10, "bc_booksWhite");
      objc_msgSend(v11, "setProgressColor:", v12);

      v8 = *(void **)&v1[v2];
      if (v8)
      {
        objc_msgSend(v8, "setProgressLineCap:", 1);
        v8 = *(void **)&v1[v2];
        if (v8)
        {
          objc_msgSend(v8, "setTrackThickness:", 1.0);
          v13 = *(void **)&v1[v2];
          if (v13)
          {
            v14 = (void *)objc_opt_self(UIColor);
            v15 = v13;
            v16 = objc_msgSend(v14, "bc_booksGroupedBackground");
            objc_msgSend(v15, "setTrackColor:", v16);

            v8 = *(void **)&v1[v2];
            goto LABEL_9;
          }
LABEL_8:
          v8 = 0;
        }
      }
    }
LABEL_9:
    objc_msgSend(v8, "setTrackDiameter:", 27.0);
    v17 = *(void **)&v1[v2];
    if (v17)
    {
      objc_msgSend(v17, "setProgressThickness:", 3.0);
      v18 = *(void **)&v1[v2];
      if (v18)
      {
        objc_msgSend(v18, "setTouchInsets:", -27.0, -27.0, -27.0, -27.0);
        v19 = *(void **)&v1[v2];
        if (v19)
          objc_msgSend(v19, "addTarget:action:forControlEvents:", v1, "stopDownloadButtonPressed", 1);
      }
    }
    objc_msgSend(v1, "bounds");
    v24 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v20, v21, v22, v23);
    v25 = OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView;
    v26 = *(void **)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView];
    *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView] = v24;

    if (*(_QWORD *)&v1[v25])
    {
      objc_msgSend(v1, "addSubview:");
      if (*(_QWORD *)&v1[v2])
      {
        objc_msgSend(v1, "addSubview:");
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_16:
  v27 = *(void **)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus];
  if (v27)
  {
    objc_msgSend(v27, "progressValue");
    *(float *)&a1 = a1;
  }
  else
  {
    LODWORD(a1) = 0;
  }
  objc_msgSend(*(id *)&v1[v2], "setProgress:", a1);
}

void sub_1002894FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  double v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;

  v1 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_asset);
  if (v1)
  {
    v25 = v1;
    if (objc_msgSend(v25, "isDownloading"))
    {
      v2 = objc_msgSend((id)objc_opt_self(BKLibraryAssetStatusController), "sharedController");
      if (v2)
      {
        v3 = v2;
        v4 = objc_msgSend(v25, "permanentOrTemporaryAssetID");
        if (!v4)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v6 = v5;
          v4 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v6);
        }
        v7 = objc_msgSend(v3, "statusForAssetID:", v4);

        v8 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus);
        *(_QWORD *)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus) = v7;
        v9 = v7;

        sub_100288EF4();
        sub_100289190(v10);
        v11 = OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView;
        v12 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView);
        if (v12)
        {
          v13 = (void *)objc_opt_self(UIColor);
          v14 = v12;
          v15 = objc_msgSend(v13, "bc_booksBlack");
          objc_msgSend(v14, "setBackgroundColor:", v15);

          v16 = *(void **)(v0 + v11);
          if (v16)
          {
            v17 = v16;
            objc_msgSend(v17, "setAlpha:", 0.5);

          }
        }

      }
      else
      {
        __break(1u);
      }
      return;
    }

  }
  v18 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus);
  *(_QWORD *)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus) = 0;

  sub_100288EF4();
  v19 = OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView;
  v20 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView);
  if (v20)
  {
    v21 = (void *)objc_opt_self(UIColor);
    v22 = v20;
    v23 = objc_msgSend(v21, "clearColor");
    objc_msgSend(v22, "setBackgroundColor:", v23);

  }
  v24 = *(void **)(v0 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressButton);
  if (v24)
    objc_msgSend(v24, "removeFromSuperview");
  objc_msgSend(*(id *)(v0 + v19), "removeFromSuperview");
}

void sub_100289740(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    a4();

  }
}

id sub_100289794(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_progressObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_assetObserver] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_kProgressDiameter] = 0x403B000000000000;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_delegate], 0);
  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKDimmedCoverDownloadProgressView_asset] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for DimmedCoverDownloadProgressView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100289888(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_dimmedView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_progressObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_assetObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_kProgressDiameter] = 0x403B000000000000;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_delegate], 0);
  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_downloadProgressStatus] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKDimmedCoverDownloadProgressView_asset] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DimmedCoverDownloadProgressView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_10028996C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DimmedCoverDownloadProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DimmedCoverDownloadProgressView()
{
  return objc_opt_self(BKDimmedCoverDownloadProgressView);
}

const char *sub_100289A44()
{
  return "state";
}

id sub_100289A50@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "state");
  *a2 = result;
  return result;
}

uint64_t sub_100289A80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100289AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100289740(a1, a2, v2, (void (*)(void))sub_100289190);
}

const char *sub_100289AC4()
{
  return "progressValue";
}

id sub_100289AD0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "progressValue");
  *a2 = v4;
  return result;
}

void sub_100289B00(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v2 = v1;
  v3 = OBJC_IVAR___BKDimmedCoverDownloadProgressView_asset;
  v4 = *(void **)(v2 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_asset);
  *(_QWORD *)(v2 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_asset) = a1;
  v5 = a1;

  v6 = *(void **)(v2 + v3);
  if (v6)
  {
    KeyPath = swift_getKeyPath(&unk_100716520);
    v8 = swift_allocObject(&unk_1008F82B0, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v2);
    v9 = v6;
    v10 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100289C50, v8, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v8);
    v11 = *(void **)(v2 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_assetObserver);
    *(_QWORD *)(v2 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_assetObserver) = v10;

  }
  else
  {
    v12 = *(void **)(v2 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_assetObserver);
    *(_QWORD *)(v2 + OBJC_IVAR___BKDimmedCoverDownloadProgressView_assetObserver) = 0;

  }
}

id sub_100289C0C@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "state");
  *a2 = (_WORD)result;
  return result;
}

id sub_100289C3C(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, "setState:", *a1);
}

void sub_100289C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100289740(a1, a2, v2, sub_1002894FC);
}

uint64_t sub_100289C70()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1E410);
  sub_100048F64(v0, (uint64_t)qword_100A1E410);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000013, 0x80000001007BA2B0);
}

void sub_100289CEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1007165A8;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[5] = &unk_1007165C0;
      v6[6] = &unk_1007165C0;
      v6[7] = &unk_1007165D8;
      swift_initStructMetadata(a1, 0, 8, v6, a1 + 32);
    }
  }
}

uint64_t *sub_100289DA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  id v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;

  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64) + 7;
  v13 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((((((v12 + (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 24) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 17) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    v17 = *((unsigned __int8 *)a2 + v8);
    if (v17 >= 2)
    {
      if (v8 <= 3)
        v18 = v8;
      else
        v18 = 4;
      __asm { BR              X13 }
    }
    v19 = v8 + 1;
    v20 = ~v11;
    if (v17 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v21 = 1;
    }
    else
    {
      v22 = *a2;
      *a1 = *a2;
      swift_retain(v22);
      v21 = 0;
    }
    *((_BYTE *)a1 + v8) = v21;
    v23 = (_QWORD *)(((unint64_t)a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
    v24 = ((unint64_t)a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = *(void **)v24;
    *v23 = *(_QWORD *)v24;
    v23[1] = *(_QWORD *)(v24 + 8);
    v26 = ((unint64_t)v23 + v11 + 16) & v20;
    v27 = (v24 + v11 + 16) & v20;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v29 = v25;
    v28(v26, v27, v9);
    v30 = (_QWORD *)((v12 + v26) & 0xFFFFFFFFFFFFF8);
    v31 = (_QWORD *)((v12 + v27) & 0xFFFFFFFFFFFFF8);
    *v30 = *v31;
    v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
    *(_BYTE *)(v32 + 9) = *(_BYTE *)(v33 + 9);
    v34 = (uint64_t *)((v33 + 17) & 0xFFFFFFFFFFFFF8);
    v16 = *v34;
    *(_QWORD *)((v32 + 17) & 0xFFFFFFFFFFFFF8) = *v34;
  }
  swift_retain(v16);
  return a1;
}

uint64_t sub_100289FFC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  unint64_t v11;

  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, v4);
  else
    swift_release(*a1);
  v9 = (id *)(((unint64_t)a1 + v6 + 8) & 0xFFFFFFFFFFFFFFF8);

  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v11 = ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v11);
  return swift_release(*(_QWORD *)((((((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)
                                  + 17) & 0xFFFFFFFFFFFFF8));
}

uint64_t *sub_10028A130(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v12 = *a2;
    *a1 = *a2;
    swift_retain(v12);
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  v13 = (_QWORD *)(((unint64_t)a1 + v8 + 8) & 0xFFFFFFFFFFFFFFF8);
  v14 = ((unint64_t)a2 + v8 + 8) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(void **)v14;
  *v13 = *(_QWORD *)v14;
  v13[1] = *(_QWORD *)(v14 + 8);
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v13 + v18 + 16) & ~v18;
  v20 = (v18 + 16 + v14) & ~v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v22 = v15;
  v21(v19, v20, v16);
  v23 = *(_QWORD *)(v17 + 64) + 7;
  v24 = (_QWORD *)((v23 + v19) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v23 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_BYTE *)(v26 + 9) = *(_BYTE *)(v27 + 9);
  v28 = (uint64_t *)((v27 + 17) & 0xFFFFFFFFFFFFF8);
  v29 = *v28;
  *(_QWORD *)((v26 + 17) & 0xFFFFFFFFFFFFF8) = *v28;
  swift_retain(v29);
  return a1;
}

uint64_t *sub_10028A300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 != a2)
  {
    v6 = type metadata accessor for ColorScheme(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release(*a1);
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      *((_BYTE *)a1 + v8) = 0;
      swift_retain(v13);
    }
  }
  v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ColorScheme(0) - 8) + 64);
  if (v14 <= 8)
    v14 = 8;
  v15 = v14 + 8;
  v16 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(void **)v16;
  v19 = *(void **)v17;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v20 = v19;

  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 16 + v16) & ~v22;
  v24 = (v22 + 16 + v17) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v23, v24);
  v25 = *(_QWORD *)(v21 + 64) + 7;
  v26 = v25 + v23;
  v27 = (_QWORD *)((v25 + v24) & 0xFFFFFFFFFFFFFFF8);
  v26 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v26 = *v27;
  v28 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_BYTE *)(v28 + 9) = *(_BYTE *)(v29 + 9);
  v30 = (uint64_t *)((v28 + 17) & 0xFFFFFFFFFFFFFFF8);
  v31 = (uint64_t *)((v29 + 17) & 0xFFFFFFFFFFFFF8);
  v32 = *v31;
  v33 = *v30;
  *v30 = *v31;
  swift_retain(v32);
  swift_release(v33);
  return a1;
}

_QWORD *sub_10028A5B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;

  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = (_OWORD *)(((unint64_t)a1 + v8 + 8) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)(((unint64_t)a2 + v8 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = ((unint64_t)v12 + v15 + 16) & ~v15;
  v17 = ((unint64_t)v13 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v16, v17);
  v18 = *(_QWORD *)(v14 + 64) + 7;
  v19 = v18 + v16;
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v19 = *v20;
  v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_BYTE *)(v21 + 9) = *(_BYTE *)(v22 + 9);
  *(_QWORD *)((v21 + 17) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v22 + 17) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_10028A768(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  if (a1 != a2)
  {
    v6 = type metadata accessor for ColorScheme(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_release(*a1);
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      v13 = 1;
    }
    else
    {
      v13 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v8) = v13;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ColorScheme(0) - 8) + 64);
  if (v14 <= 8)
    v14 = 8;
  v15 = v14 + 8;
  v16 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
  v17 = (_QWORD *)(((unint64_t)a2 + v15) & 0xFFFFFFFFFFFFFFF8);
  v18 = *(void **)v16;
  *(_QWORD *)v16 = *v17;

  *(_QWORD *)(v16 + 8) = v17[1];
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v20 + 16 + v16) & ~v20;
  v22 = ((unint64_t)v17 + v20 + 16) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v21, v22);
  v23 = *(_QWORD *)(v19 + 64) + 7;
  v24 = v23 + v21;
  v25 = (_QWORD *)((v23 + v22) & 0xFFFFFFFFFFFFFFF8);
  v24 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v24 = *v25;
  v26 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_BYTE *)(v26 + 9) = *(_BYTE *)(v27 + 9);
  v28 = (uint64_t *)((v26 + 17) & 0xFFFFFFFFFFFFFFF8);
  v29 = *v28;
  *v28 = *(_QWORD *)((v27 + 17) & 0xFFFFFFFFFFFFF8);
  swift_release(v29);
  return a1;
}

uint64_t sub_10028AA10(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  int v18;

  v6 = type metadata accessor for ColorScheme(0);
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v8 + 80);
  if (v10 < a2)
  {
    if (((((((((*(_QWORD *)(v8 + 64) + (((v7 & 0xFFFFFFFFFFFFFFF8) + v11 + 24) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 17) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v12 = 2;
    else
      v12 = a2 - v10 + 1;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    __asm { BR              X16 }
  }
  v16 = (uint64_t *)((a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  if (v9 > 0x7FFFFFFE)
    return (*(uint64_t (**)(unint64_t))(v8 + 48))(((unint64_t)v16 + v11 + 16) & ~v11);
  v17 = *v16;
  if ((unint64_t)*v16 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  v18 = v17 - 1;
  if (v18 < 0)
    v18 = -1;
  return (v18 + 1);
}

void sub_10028ABA4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = type metadata accessor for ColorScheme(0);
  if (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) <= 8uLL)
    v9 = 8;
  else
    v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFEu)
    v11 = 2147483646;
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v11 >= a3)
  {
    v14 = 0;
    if (a2 <= v11)
      goto LABEL_20;
  }
  else
  {
    if (((((((*(_DWORD *)(v10 + 64)
             + (((v9 & 0xFFFFFFF8) + *(unsigned __int8 *)(v10 + 80) + 24) & ~*(unsigned __int8 *)(v10 + 80))
             + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 17) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v11 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v11)
LABEL_20:
      __asm { BR              X14 }
  }
  if (((((((*(_DWORD *)(v10 + 64)
           + (((v9 & 0xFFFFFFF8) + *(unsigned __int8 *)(v10 + 80) + 24) & ~*(unsigned __int8 *)(v10 + 80))
           + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 17) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v11 + a2;
    bzero(a1, ((((((*(_QWORD *)(v10 + 64)+ (((v9 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 17) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_10028ACE8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10028AD74);
}

void sub_10028ACF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x10028ACF8);
  JUMPOUT(0x10028AD74);
}

void sub_10028AD48()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10028AD74);
}

void sub_10028AD50()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10028AD74);
}

uint64_t sub_10028AD58@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)(v8 + v9) = 0;
  if (!(_DWORD)v7)
    JUMPOUT(0x10028AD74);
  v2 = (v8 + v5 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (a1 <= 0x7FFFFFFE)
  {
    if (v7 <= 0x7FFFFFFE)
      JUMPOUT(0x10028AD70);
    JUMPOUT(0x10028AD64);
  }
  return (*(uint64_t (**)(unint64_t, uint64_t))(a2 + 56))((v2 + v4 + 16) & v6, v7);
}

uint64_t type metadata accessor for MenuItemButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MenuItemButtonView);
}

uint64_t sub_10028AD98(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100869BD8, 1);
}

uint64_t sub_10028ADCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t IsReduceMotionEnabled;
  int v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[16];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;

  v55 = a2;
  v4 = sub_100030B74(&qword_1009D6CA0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _OpacityEffect);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for ZStack(255, v8, WitnessTable);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _FrameLayout);
  v12 = type metadata accessor for ModifiedContent(0, v11, &type metadata for _ScaleEffect);
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  __chkstk_darwin(v12);
  v52 = (char *)&v48 - v13;
  v48 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - v15;
  v17 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  v51 = v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  v21 = *(_QWORD *)(a1 + 24);
  v57 = v5;
  v58 = v21;
  v59 = v2;
  v23 = static Alignment.center.getter(v22);
  v25 = ZStack.init(alignment:content:)(v23, v24, sub_10028BAA8, v56, v8, WitnessTable);
  v26 = *(_QWORD *)(v2 + *(int *)(a1 + 48));
  v27 = static Alignment.center.getter(v25);
  v29 = v28;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
  v49 = v20;
  View.frame(width:height:alignment:)(0, 1, v26, 0, v27, v29, v10, v30);
  IsReduceMotionEnabled = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v16, v10);
  v32 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 52));
  if (v32 == 1)
  {
    IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
    if ((_DWORD)IsReduceMotionEnabled)
      v33 = 1.0;
    else
      v33 = 0.96;
  }
  else
  {
    v33 = 0.99;
  }
  v34 = static UnitPoint.center.getter(IsReduceMotionEnabled);
  v36 = v35;
  v62 = v30;
  v63 = &protocol witness table for _FrameLayout;
  v37 = v50;
  v38 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v50);
  v39 = v52;
  v40 = v49;
  v41 = View.scaleEffect(_:anchor:)(v37, v38, v33, v34, v36);
  if (v32)
    v42 = static Animation.timingCurve(_:_:_:_:duration:)(v41, 0.33, 0.0, 0.67, 1.0, 0.15);
  else
    v42 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 350.0, 25.0, 0.0);
  v43 = v42;
  v60 = v38;
  v61 = &protocol witness table for _ScaleEffect;
  v44 = v54;
  v45 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v54);
  sub_100603564(v43, v44, v45);
  v46 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v39, v44, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v40, v37);
}

uint64_t sub_10028B138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41[4];

  v37 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ModifiedContent(0, v10, &type metadata for _OpacityEffect);
  v35 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v36 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  __chkstk_darwin(v16);
  v33 = (uint64_t)&v32 - v17;
  v34 = sub_10004CFD4(&qword_1009D6CA0);
  __chkstk_darwin(v34);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v32 - v21;
  v24 = type metadata accessor for MenuItemButtonView(0, a2, a3, v23);
  sub_10028B3E0(v24, (uint64_t)v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v24 + 40), a2);
  v25 = 1.0;
  if (*(_BYTE *)(a1 + *(int *)(v24 + 52)))
    v25 = 0.25;
  View.opacity(_:)(a2, a3, v25);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  v41[2] = a3;
  v41[3] = (uint64_t)&protocol witness table for _OpacityEffect;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v27 = v33;
  sub_100344038((uint64_t)v15, v11, v33);
  v28 = v35;
  v29 = *(void (**)(char *, uint64_t))(v35 + 8);
  v29(v15, v11);
  sub_10000B5E4((uint64_t)v22, (uint64_t)v19, &qword_1009D6CA0);
  v41[0] = (uint64_t)v19;
  v30 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v36, v27, v11);
  v41[1] = v30;
  v40[0] = v34;
  v40[1] = v11;
  v38 = sub_10028BAB4();
  v39 = WitnessTable;
  sub_100341C18(v41, 2uLL, (uint64_t)v40);
  v29((char *)v27, v11);
  sub_100010960((uint64_t)v22, &qword_1009D6CA0);
  v29((char *)v30, v11);
  return sub_100010960((uint64_t)v19, &qword_1009D6CA0);
}

uint64_t sub_10028B3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v32[3];

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D6CC8);
  __chkstk_darwin(v6);
  v8 = (_QWORD *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10004CFD4(&qword_1009D6CB8);
  __chkstk_darwin(v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1009CE5B0 != -1)
    swift_once(&qword_1009CE5B0, sub_10047908C);
  v15 = qword_100A1E998;
  v16 = (char *)v14 + *(int *)(v12 + 20);
  v17 = enum case for RoundedCornerStyle.continuous(_:);
  v18 = type metadata accessor for RoundedCornerStyle(0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  *v14 = v15;
  v14[1] = v15;
  *v8 = static Alignment.center.getter(v19);
  v8[1] = v20;
  v21 = sub_10004CFD4(&qword_1009D6CD0);
  v22 = sub_10028B640(v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (_BYTE *)v8 + *(int *)(v21 + 44));
  v23 = *(int *)(a1 + 48);
  v24 = *(_QWORD *)(v3 + *(int *)(a1 + 44));
  v25 = *(_QWORD *)(v3 + v23);
  v26 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v32, v24, 0, v25, 0, v26, v27);
  sub_10000B5E4((uint64_t)v8, (uint64_t)v11, &qword_1009D6CC8);
  v28 = &v11[*(int *)(v9 + 36)];
  v29 = v32[1];
  *(_OWORD *)v28 = v32[0];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v32[2];
  sub_100010960((uint64_t)v8, &qword_1009D6CC8);
  v30 = a2 + *(int *)(sub_10004CFD4(&qword_1009D6CA0) + 36);
  sub_10002CD84((uint64_t)v14, v30, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v30 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_100025B3C((uint64_t)v11, a2, &qword_1009D6CB8);
  return sub_10002C8F0((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
}

uint64_t sub_10028B640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  unsigned int *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  char *v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;

  v66 = a4;
  v7 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ColorScheme(0);
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - v14;
  v16 = type metadata accessor for BlendMode(0);
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  __chkstk_darwin(v16);
  v62 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009D6CD8);
  v65 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v19 = (uint64_t *)((char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v61 = (uint64_t)&v55 - v21;
  v22 = sub_10004CFD4(&qword_1009D6CE0);
  __chkstk_darwin(v22);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v55 - v26;
  v29 = type metadata accessor for MenuItemButtonView(0, a2, a3, v28);
  v30 = *(int *)(v29 + 56);
  v67 = a1;
  v31 = 1;
  if (*(_BYTE *)(a1 + v30) == 1)
  {
    v57 = Color.init(_:bundle:)(0x6946726564696C73, 0xEA00000000006C6CLL, 0);
    KeyPath = swift_getKeyPath(&unk_100716650);
    v58 = v29;
    v32 = v15;
    v33 = (void *)sub_10028BBC4(v29);
    v34 = swift_getKeyPath(&unk_100716680);
    v35 = swift_getKeyPath(&unk_1007166A8);
    v55 = v9;
    v36 = v35;
    v37 = v33;
    static Published.subscript.getter(v32, v37, v34, v36);

    swift_release(v34);
    v38 = swift_release(v36);
    v40 = v59;
    v39 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v59 + 104))(v12, enum case for ColorScheme.dark(_:), v60, v38);
    LOBYTE(v37) = static ColorScheme.== infix(_:_:)(v32, v12);
    v41 = *(void (**)(char *, uint64_t))(v40 + 8);
    v41(v12, v39);
    v41(v32, v39);
    v42 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    v44 = v62;
    v43 = v63;
    if ((v37 & 1) == 0)
      v42 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    v45 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, *v42, v64);
    v46 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v55, v44, v45);
    sub_10002CD84(v46, (uint64_t)v19 + *(int *)(v68 + 36), (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    v47 = KeyPath;
    v48 = v57;
    *v19 = KeyPath;
    v19[1] = v48;
    swift_retain(v47);
    swift_retain(v48);
    sub_10002C8F0(v46, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    swift_release(v48);
    swift_release(v47);
    v49 = v61;
    sub_100025B3C((uint64_t)v19, v61, &qword_1009D6CD8);
    v50 = v49;
    v29 = v58;
    sub_100025B3C(v50, (uint64_t)v27, &qword_1009D6CD8);
    v31 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v27, v31, 1, v68);
  v51 = *(_QWORD *)(v67 + *(int *)(v29 + 60));
  sub_10000B5E4((uint64_t)v27, (uint64_t)v24, &qword_1009D6CE0);
  v52 = v66;
  *v66 = 1;
  v53 = sub_10004CFD4(&qword_1009D6CE8);
  sub_10000B5E4((uint64_t)v24, (uint64_t)&v52[*(int *)(v53 + 48)], &qword_1009D6CE0);
  *(_QWORD *)&v52[*(int *)(v53 + 64)] = v51;
  swift_retain_n(v51, 2);
  sub_100010960((uint64_t)v27, &qword_1009D6CE0);
  swift_release(v51);
  return sub_100010960((uint64_t)v24, &qword_1009D6CE0);
}

uint64_t sub_10028BAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10028B138(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_10028BAB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6CA8;
  if (!qword_1009D6CA8)
  {
    v1 = sub_100030B74(&qword_1009D6CA0);
    sub_10028BB38();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6CA8);
  }
  return result;
}

unint64_t sub_10028BB38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6CB0;
  if (!qword_1009D6CB0)
  {
    v1 = sub_100030B74(&qword_1009D6CB8);
    sub_100030B34(&qword_1009D6CC0, &qword_1009D6CC8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6CB0);
  }
  return result;
}

uint64_t sub_10028BBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  result = *v2;
  if (!*v2)
  {
    v4 = v2[1];
    v5 = type metadata accessor for ChromeStyle(0);
    v6 = sub_100288CBC();
    result = EnvironmentObject.error()(0, v4, v5, v6, v7);
    __break(1u);
  }
  return result;
}

uint64_t sub_10028BC1C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *a1;
  v2 = sub_100030B74(&qword_1009D6CA0);
  v3 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _OpacityEffect);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v3, 0, 0);
  v5 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v5);
  v7 = type metadata accessor for ZStack(255, v5, WitnessTable);
  v8 = type metadata accessor for ModifiedContent(255, v7, &type metadata for _FrameLayout);
  v9 = type metadata accessor for ModifiedContent(255, v8, &type metadata for _ScaleEffect);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for OptionalAnimationModifierDeprecated);
  swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v7);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_10028BD6C();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
}

unint64_t sub_10028BD6C()
{
  unint64_t result;

  result = qword_1009D6CF0;
  if (!qword_1009D6CF0)
  {
    result = swift_getWitnessTable(&unk_100734C94, &type metadata for OptionalAnimationModifierDeprecated);
    atomic_store(result, (unint64_t *)&qword_1009D6CF0);
  }
  return result;
}

id BEChromeRootView.__allocating_init(frame:actionMenuState:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  char *v11;
  objc_super v13;

  v11 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books16BEChromeRootView_actionMenuState] = a1;
  v13.receiver = v11;
  v13.super_class = v5;
  return objc_msgSendSuper2(&v13, "initWithFrame:", a2, a3, a4, a5);
}

id BEChromeRootView.init(frame:actionMenuState:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  objc_super v11;

  *(_QWORD *)&v5[OBJC_IVAR____TtC5Books16BEChromeRootView_actionMenuState] = a1;
  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for BEChromeRootView();
  return objc_msgSendSuper2(&v11, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t type metadata accessor for BEChromeRootView()
{
  return objc_opt_self(_TtC5Books16BEChromeRootView);
}

id MiniPlayerHostingTabBarController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

void BEChromeRootView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x80000001007BAE10, "Books/BEChromeRootView.swift", 28, 2, 20, 0);
  __break(1u);
}

id BEChromeRootView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  char *v3;
  id v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t KeyPath;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v7 = objc_msgSend(v3, "subviews");
  v8 = sub_100238628();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v18 = v9;
    else
      v18 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v9);
    if (v19)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_3:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x10028C1A0);
    }
    v10 = *(id *)(v9 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend(v11, "hitTest:withEvent:", a1, a2, a3);
  v13 = v12;
  if (v12 && v12 == v11)
  {
    v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books16BEChromeRootView_actionMenuState];
    KeyPath = swift_getKeyPath(&unk_1007166D0);
    v21 = v14;
    v16 = sub_10028C630();
    swift_retain(v14);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v21, KeyPath, v16);
    swift_release(KeyPath);
    v17 = *(_QWORD *)(v14 + 328);
    sub_10028C678(v17);
    swift_release(v14);
    if ((v17 >> 62) > 1)
      __asm { BR              X10 }

    sub_10028C694(v17);
  }
  else
  {

  }
  return v13;
}

id LibraryCollectionTitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void BEChromeRootView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BEChromeRootView", 22, "init(frame:)", 12, 0);
  __break(1u);
}

id BEChromeRootView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BEChromeRootView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10028C304@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007166D0);
  v8 = v3;
  v5 = sub_10028C630();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + 328);
  *a2 = v6;
  return sub_10028C678(v6);
}

double sub_10028C37C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007166D0);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  sub_10028C678(v2);
  v5 = sub_10028C630();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_10028C878, v7, (char *)&type metadata for () + 8, v5);
  sub_10028C694(v2);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void (*sub_10028C418(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10028C5BC(v6, a2, a3);
  return sub_100259744;
}

void (*sub_10028C46C(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10028C6B0(v6, a2, a3);
  return sub_100259744;
}

void (*sub_10028C4C0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10028C724(v6, a2, a3);
  return sub_100259744;
}

void (*sub_10028C514(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10028C790(v6, a2, a3);
  return sub_100259744;
}

void (*sub_10028C568(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10028C804(v6, a2, a3);
  return sub_100259744;
}

uint64_t (*sub_10028C5BC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s9DataModelV17DefaultCollectionVwxx;
  }
  __break(1u);
  return result;
}

unint64_t sub_10028C630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3B60;
  if (!qword_1009D3B60)
  {
    v1 = type metadata accessor for REActionMenuState(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for REActionMenuState, v1);
    atomic_store(result, &qword_1009D3B60);
  }
  return result;
}

unint64_t sub_10028C678(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return swift_retain(result);
}

unint64_t sub_10028C694(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return swift_release(result);
}

uint64_t *sub_10028C6B0(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for ShareSheet;
  }
  __break(1u);
  return result;
}

uint64_t destroy for ShareSheet(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t (*sub_10028C724(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return destroy for OverlayViewModel.TOC;
  }
  __break(1u);
  return result;
}

uint64_t *sub_10028C790(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)destroy for OverlayViewModel.BookmarkNotes;
  }
  __break(1u);
  return result;
}

uint64_t destroy for OverlayViewModel.BookmarkNotes(_QWORD *a1)
{
  return swift_release(*a1);
}

void (*sub_10028C804(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return _s9DataModelV17DefaultCollectionVwxx;
  }
  __break(1u);
  return result;
}

void _s9DataModelV17DefaultCollectionVwxx(id *a1)
{

}

unint64_t sub_10028C878()
{
  uint64_t v0;

  return sub_1003029A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t destroy for RERootContainerBuilder(uint64_t a1)
{
  swift_weakDestroy(a1);
  swift_weakDestroy(a1 + 8);
  swift_weakDestroy(a1 + 16);
  return swift_unknownObjectWeakDestroy(a1 + 24);
}

uint64_t initializeWithCopy for RERootContainerBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028C95C(a1, a2, a3, (uint64_t (*)(void))&_swift_weakCopyInit, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t assignWithCopy for RERootContainerBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_weakCopyAssign(a1, a2);
  swift_weakCopyAssign(v4 + 8, a2 + 8);
  swift_weakCopyAssign(a1 + 16, a2 + 16);
  swift_unknownObjectWeakCopyAssign(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t initializeWithTake for RERootContainerBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028C95C(a1, a2, a3, (uint64_t (*)(void))&_swift_weakTakeInit, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
}

uint64_t assignWithTake for RERootContainerBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10028C95C(a1, a2, a3, (uint64_t (*)(void))&_swift_weakTakeAssign, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeAssign);
}

uint64_t sub_10028C95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = a4();
  ((void (*)(uint64_t, uint64_t))a4)(v9 + 8, a2 + 8);
  ((void (*)(uint64_t, uint64_t))a4)(a1 + 16, a2 + 16);
  a5(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RERootContainerBuilder(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 32) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)(a1 + 24) & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RERootContainerBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      *(_QWORD *)(result + 32) = 1;
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RERootContainerBuilder()
{
  return &type metadata for RERootContainerBuilder;
}

uint64_t sub_10028CA68@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  id v30;
  unint64_t v31;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;

  v39 = a2;
  v6 = sub_10004CFD4(&qword_1009D6D40);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RERootContainerView(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10004CFD4(&qword_1009D6D48);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v34 - v16;
  if ((sub_10028CD88() & 1) != 0)
  {
    Strong = swift_weakLoadStrong(v3);
    if (Strong)
    {
      v19 = Strong;
      v20 = swift_weakLoadStrong(v3 + 8);
      if (v20)
      {
        v36 = a1;
        v21 = v20;
        v35 = swift_weakLoadStrong(v3 + 16);
        v22 = swift_unknownObjectWeakLoadStrong(v3 + 24);
        v38 = a3;
        v23 = v22;
        v24 = *(_QWORD *)(v3 + 32);
        swift_retain(v19);
        v37 = v21;
        swift_retain(v21);
        sub_100657B6C(v19, v21, v35, v23, v24, v39 & 1, v36, 0, v11, 0);
        v25 = *(void **)(v21 + 104);
        v26 = type metadata accessor for ChromeStyle(0);
        v27 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
        v28 = static ObservableObject.environmentStore.getter(v26, v27);
        sub_10028CF84((uint64_t)v11, (uint64_t)v15);
        v29 = (uint64_t *)&v15[*(int *)(v12 + 36)];
        *v29 = v28;
        v29[1] = (uint64_t)v25;
        v30 = v25;
        sub_10028CFC8((uint64_t)v11);
        sub_10028D004((uint64_t)v15, (uint64_t)v17);
        sub_10028D04C((uint64_t)v17, (uint64_t)v8);
        swift_storeEnumTagMultiPayload(v8, v6, 0);
        v31 = sub_10028CEB4();
        _ConditionalContent<>.init(storage:)(v8, v12, &type metadata for EmptyView, v31, &protocol witness table for EmptyView);
        swift_release(v19);
        swift_release(v37);
        return sub_10028D094((uint64_t)v17);
      }
      swift_release(v19);
    }
  }
  swift_storeEnumTagMultiPayload(v8, v6, 1);
  v33 = sub_10028CEB4();
  return _ConditionalContent<>.init(storage:)(v8, v12, &type metadata for EmptyView, v33, &protocol witness table for EmptyView);
}

uint64_t sub_10028CD18()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D6D28);
  sub_100048F64(v0, (uint64_t)qword_1009D6D28);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000022, 0x80000001007BAEB0);
}

uint64_t sub_10028CD88()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _BYTE v9[8];
  uint64_t v10;

  Strong = swift_weakLoadStrong(v0);
  swift_release(Strong);
  sub_10028D0D4(v0, (uint64_t)v9);
  if (Strong)
  {
    v2 = swift_weakLoadStrong(&v10);
    sub_10028D108((uint64_t)v9);
    if (v2)
    {
      swift_release(v2);
      return 1;
    }
  }
  else
  {
    sub_10028D108((uint64_t)v9);
  }
  if (qword_1009CDDA0 != -1)
    swift_once(&qword_1009CDDA0, sub_10028CD18);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048F64(v4, (uint64_t)qword_1009D6D28);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Expected actionMenuState, viewModel", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return 0;
}

unint64_t sub_10028CEB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6D50;
  if (!qword_1009D6D50)
  {
    v1 = sub_100030B74(&qword_1009D6D48);
    sub_100008DB0(&qword_1009D6D58, type metadata accessor for RERootContainerView, (uint64_t)&unk_100737088);
    sub_10028CF38();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6D50);
  }
  return result;
}

unint64_t sub_10028CF38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D3818;
  if (!qword_1009D3818)
  {
    v1 = sub_100030B74(&qword_1009D3820);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D3818);
  }
  return result;
}

uint64_t sub_10028CF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RERootContainerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028CFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RERootContainerView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10028D004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D6D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028D04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D6D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028D094(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009D6D48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10028D0D4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for RERootContainerBuilder(a2, a1, (uint64_t)&type metadata for RERootContainerBuilder);
  return a2;
}

uint64_t sub_10028D108(uint64_t a1)
{
  destroy for RERootContainerBuilder(a1);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for MenuAssetDownloadManager(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for MenuAssetDownloadManager(id *a1)
{

}

uint64_t assignWithCopy for MenuAssetDownloadManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for MenuAssetDownloadManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for MenuAssetDownloadManager()
{
  return &type metadata for MenuAssetDownloadManager;
}

uint64_t sub_10028D26C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D6D60);
  sub_100048F64(v0, (uint64_t)qword_1009D6D60);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000018, 0x8000000100716740);
}

void sub_10028D2E8(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v28 = a5;
  v29 = a6;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a1, v10, v13);
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 31) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1008F85E0, v18 + 16, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v19 + v16, v14, v10);
  v20 = (_QWORD *)(v19 + v17);
  *v20 = a2;
  v20[1] = a3;
  v20[2] = a4;
  v21 = (_QWORD *)(v19 + v18);
  v22 = v29;
  *v21 = v28;
  v21[1] = v22;
  aBlock[4] = sub_10028F800;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_1008F85F8;
  v23 = _Block_copy(aBlock);
  v24 = v31;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  swift_bridgeObjectRetain(v22);
  objc_msgSend(v25, "performBlockOnWorkerQueue:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
}

uint64_t sub_10028D474(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(a3, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v5, a1);

  if (v6)
  {
    objc_msgSend(a3, "cancelDownloadingAsset:", v6);
  }
  else
  {
    if (qword_1009CDDA8 != -1)
      swift_once(&qword_1009CDDA8, sub_10028D26C);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009D6D60);
    v6 = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v9, "Unable to cancel download", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
  }

  v11 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  return CheckedContinuation.resume(returning:)(v11, v11);
}

uint64_t sub_10028D5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6[56] = a5;
  v6[57] = a6;
  v6[54] = a3;
  v6[55] = a4;
  v6[52] = a1;
  v6[53] = a2;
  v7 = sub_10004CFD4(&qword_1009D3150);
  v6[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D23D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[59] = swift_task_alloc(v8);
  v6[60] = swift_task_alloc(v8);
  v6[61] = swift_task_alloc(v8);
  v9 = type metadata accessor for URL(0);
  v6[62] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[63] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[64] = swift_task_alloc(v11);
  v6[65] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v6[66] = v12;
  v6[67] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v6[68] = v13;
  v6[69] = v14;
  return swift_task_switch(sub_10028D6D0, v13, v14);
}

uint64_t sub_10028D6D0()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v21;
  uint64_t v22;
  NSURL *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (void *)v0[54];
  if (v1)
  {
    v2 = (void *)v0[55];
    v3 = (_QWORD *)v0[52];
    v4 = v1;
    v5 = sub_10028F078(v3, (uint64_t)v4, v2);

  }
  else
  {
    v5 = 0;
  }
  v0[70] = v5;
  v6 = v0[62];
  v7 = v0[63];
  v8 = v0[61];
  v9 = (_QWORD *)v0[52];
  v10 = v9[3];
  v11 = v9[4];
  sub_10003F198(v9, v10);
  dispatch thunk of ContextAssetInfoProtocol.sampleDownloadURL.getter(v10, v11);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v0[71] = v12;
  if (v12(v8, 1, v6) == 1)
  {
    v13 = (_QWORD *)v0[52];
    sub_10000B518(v0[61]);
    v14 = v9[3];
    v15 = v9[4];
    sub_10003F198(v13, v14);
    v16 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v14, v15);
    v18 = v17;
    v0[74] = v17;
    v19 = (_QWORD *)swift_task_alloc(dword_1009D6D8C);
    v0[75] = v19;
    *v19 = v0;
    v19[1] = sub_10028D9DC;
    return sub_10028E1F8(v0[60], v16, v18, v0[55], v0[56]);
  }
  else
  {
    v21 = (void *)v0[57];
    v22 = v0[54];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[63] + 32))(v0[65], v0[61], v0[62]);
    URL._bridgeToObjectiveC()(v23);
    v25 = v24;
    v0[72] = v24;
    v0[15] = v0 + 51;
    v0[10] = v0;
    v0[11] = sub_10028D8CC;
    v0[49] = swift_continuation_init(v0 + 10, 1);
    v0[45] = _NSConcreteStackBlock;
    v0[46] = 0x40000000;
    v0[47] = sub_10028E164;
    v0[48] = &unk_1008F8500;
    objc_msgSend(v21, "downloadSampleWithURL:contentData:tracker:completion:", v25, v5, v22, v0 + 45);
    return swift_continuation_await(v0 + 10);
  }
}

uint64_t sub_10028D8CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 584) = v2;
  if (v2)
    v3 = sub_10028DDB8;
  else
    v3 = sub_10028D92C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 552));
}

uint64_t sub_10028D92C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 576);
  v2 = *(void **)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 520);
  v4 = *(_QWORD *)(v0 + 496);
  v5 = *(_QWORD *)(v0 + 504);
  swift_release(*(_QWORD *)(v0 + 536));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 408));

  v6 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 488);
  v10 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 472);
  swift_task_dealloc(*(_QWORD *)(v0 + 520));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028D9DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 600);
  *(_QWORD *)(*(_QWORD *)v1 + 608) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[69];
    v5 = v2[68];
    v6 = sub_10028DE7C;
  }
  else
  {
    swift_bridgeObjectRelease(v2[74]);
    v4 = v2[69];
    v5 = v2[68];
    v6 = sub_10028DA50;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10028DA50()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSURL *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 568);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 472);
  sub_10000B59C(*(_QWORD *)(v0 + 480), v3);
  if (v1(v3, 1, v2) == 1)
  {
    v4 = *(void **)(v0 + 560);
    v6 = *(_QWORD *)(v0 + 472);
    v5 = *(_QWORD *)(v0 + 480);
    v7 = *(_QWORD *)(v0 + 464);
    v9 = *(_QWORD *)(v0 + 416);
    v8 = *(_QWORD *)(v0 + 424);
    swift_release(*(_QWORD *)(v0 + 536));
    sub_10000B518(v6);
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    sub_1001EB84C(v9, v0 + 144);
    v11 = sub_10002E418(v8, v0 + 280);
    v12 = static MainActor.shared.getter(v11);
    v13 = swift_allocObject(&unk_1008F84D0, 120, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
    sub_1001EB834((__int128 *)(v0 + 144), (_OWORD *)(v13 + 32));
    sub_100022840((__int128 *)(v0 + 280), v13 + 80);
    v14 = sub_10030C02C(v7, (uint64_t)&unk_1009D6DA8, v13);
    swift_release(v14);

    sub_10000B518(v5);
    v15 = *(_QWORD *)(v0 + 512);
    v17 = *(_QWORD *)(v0 + 480);
    v16 = *(_QWORD *)(v0 + 488);
    v19 = *(_QWORD *)(v0 + 464);
    v18 = *(_QWORD *)(v0 + 472);
    swift_task_dealloc(*(_QWORD *)(v0 + 520));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v21 = v0 + 16;
    v22 = *(_QWORD *)(v0 + 560);
    v23 = *(void **)(v0 + 456);
    v24 = *(_QWORD *)(v0 + 432);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 32))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 496));
    URL._bridgeToObjectiveC()(v25);
    v27 = v26;
    *(_QWORD *)(v0 + 616) = v26;
    *(_QWORD *)(v0 + 56) = v0 + 400;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10028DC9C;
    v28 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 240) = _NSConcreteStackBlock;
    v29 = (_QWORD *)(v0 + 240);
    v29[1] = 0x40000000;
    v29[2] = sub_10028E164;
    v29[3] = &unk_1008F84E8;
    v29[4] = v28;
    objc_msgSend(v23, "downloadSampleWithURL:contentData:tracker:completion:", v27, v22, v24, v29);
    return swift_continuation_await(v21);
  }
}

uint64_t sub_10028DC9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 624) = v2;
  if (v2)
    v3 = sub_10028DFD8;
  else
    v3 = sub_10028DCFC;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 552));
}

uint64_t sub_10028DCFC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 616);
  v2 = *(void **)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 512);
  v5 = *(_QWORD *)(v0 + 496);
  v6 = *(_QWORD *)(v0 + 480);
  v7 = swift_release(*(_QWORD *)(v0 + 536));
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v7);
  sub_10000B518(v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 400));

  v8 = *(_QWORD *)(v0 + 512);
  v10 = *(_QWORD *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 472);
  swift_task_dealloc(*(_QWORD *)(v0 + 520));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028DDB8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 576);
  v2 = *(void **)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 520);
  v5 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 512);
  v7 = *(_QWORD *)(v0 + 488);
  v6 = *(_QWORD *)(v0 + 496);
  v8 = *(_QWORD *)(v0 + 480);
  v11 = *(_QWORD *)(v0 + 472);
  v12 = *(_QWORD *)(v0 + 464);
  v9 = swift_release(*(_QWORD *)(v0 + 536));
  swift_willThrow(v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);

  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028DE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 592);
  swift_release(*(_QWORD *)(v0 + 536));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(void **)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 416);
  v5 = *(_QWORD *)(v0 + 424);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  sub_1001EB84C(v6, v0 + 192);
  v8 = sub_10002E418(v5, v0 + 320);
  v9 = static MainActor.shared.getter(v8);
  v10 = swift_allocObject(&unk_1008F84A8, 120, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  sub_1001EB834((__int128 *)(v0 + 192), (_OWORD *)(v10 + 32));
  sub_100022840((__int128 *)(v0 + 320), v10 + 80);
  v11 = sub_10030C02C(v4, (uint64_t)&unk_1009D6D98, v10);

  swift_release(v11);
  swift_errorRelease(v2);
  v12 = *(_QWORD *)(v0 + 512);
  v14 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 488);
  v16 = *(_QWORD *)(v0 + 464);
  v15 = *(_QWORD *)(v0 + 472);
  swift_task_dealloc(*(_QWORD *)(v0 + 520));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028DFD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);
  v5 = *(_QWORD *)(v0 + 480);
  swift_release(*(_QWORD *)(v0 + 536));
  swift_willThrow(v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000B518(v5);

  v7 = *(_QWORD *)(v0 + 624);
  v8 = *(void **)(v0 + 560);
  v9 = *(_QWORD *)(v0 + 464);
  v11 = *(_QWORD *)(v0 + 416);
  v10 = *(_QWORD *)(v0 + 424);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  sub_1001EB84C(v11, v0 + 192);
  v13 = sub_10002E418(v10, v0 + 320);
  v14 = static MainActor.shared.getter(v13);
  v15 = swift_allocObject(&unk_1008F84A8, 120, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
  sub_1001EB834((__int128 *)(v0 + 192), (_OWORD *)(v15 + 32));
  sub_100022840((__int128 *)(v0 + 320), v15 + 80);
  v16 = sub_10030C02C(v9, (uint64_t)&unk_1009D6D98, v15);

  swift_release(v16);
  swift_errorRelease(v7);
  v17 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 480);
  v18 = *(_QWORD *)(v0 + 488);
  v21 = *(_QWORD *)(v0 + 464);
  v20 = *(_QWORD *)(v0 + 472);
  swift_task_dealloc(*(_QWORD *)(v0 + 520));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028E164(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_10028E1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;

  v5[22] = a3;
  v5[23] = a5;
  v5[20] = a1;
  v5[21] = a2;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D23D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[24] = swift_task_alloc(v6);
  v5[25] = swift_task_alloc(v6);
  return swift_task_switch(sub_10028E268, 0, 0);
}

uint64_t sub_10028E268()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  NSString v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = v0[25];
  v3 = (void *)v0[23];
  v4 = String._bridgeToObjectiveC()();
  v0[26] = v4;
  v0[7] = v2;
  v0[2] = v0;
  v0[3] = sub_10028E318;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_10028ECE4;
  v6[3] = &unk_1008F8518;
  v6[4] = v5;
  objc_msgSend(v3, "sampleDownloadURLForAssetID:completion:", v4, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_10028E318()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 216) = v1;
  if (v1)
    v2 = sub_10028E500;
  else
    v2 = sub_10028E378;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10028E378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 192);
  sub_10006CE68(*(_QWORD *)(v0 + 200), v1);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(void **)(v0 + 208);
  if (v4 == 1)
  {
    sub_10000B518(*(_QWORD *)(v0 + 192));

    if (qword_1009CDDA8 != -1)
      swift_once(&qword_1009CDDA8, sub_10028D26C);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009D6D60);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error downloading sample from ItemDescriptionCache", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v12, *(_QWORD *)(v0 + 192), v2);

    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  }
  v13 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028E500(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = *(void **)(v1 + 208);
  swift_willThrow(a1);

  if (qword_1009CDDA8 != -1)
    swift_once(&qword_1009CDDA8, sub_10028D26C);
  v3 = *(_QWORD *)(v1 + 216);
  v4 = type metadata accessor for Logger(0);
  sub_100048F64(v4, (uint64_t)qword_1009D6D60);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v1 + 216);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v19 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_getErrorValue(v9, v1 + 144, v1 + 120);
    v12 = Error.localizedDescription.getter(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
    v14 = v13;
    *(_QWORD *)(v1 + 152) = sub_100040F58(v12, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 152, v1 + 160, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error downloading sample with error: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v1 + 216));
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  v15 = *(_QWORD *)(v1 + 160);
  v16 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = *(_QWORD *)(v1 + 192);
  swift_task_dealloc(*(_QWORD *)(v1 + 200));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10028E738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter();
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10028F86C, v7, v8);
}

uint64_t sub_10028E7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10028E810, v7, v8);
}

uint64_t sub_10028E810()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  v3 = (void *)objc_opt_self(BSUINoticeViewController);
  v4 = v2[3];
  v5 = v2[4];
  sub_10003F198(v2, v4);
  v6 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v4, v5);
  LOBYTE(v4) = static ContextActionAssetType.== infix(_:_:)(v6, 3);
  v7 = v1[3];
  v8 = v1[4];
  sub_10003F198(v1, v7);
  v9 = ContextMenuPresentationContextProtocol.newOptionsForShowingHUD.getter(v7, v8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "presentNoticeForNoSampleAvailable:options:", v4 & 1, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10028E904(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  char *v28;

  v26 = a6;
  v11 = sub_10004CFD4(&qword_1009D6DB8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, a1, v11, v14);
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = (v16 + 56) & ~v16;
  v18 = (char *)swift_allocObject(&unk_1008F8540, v17 + v13, v16 | 7);
  *((_QWORD *)v18 + 2) = a2;
  *((_QWORD *)v18 + 3) = a3;
  *((_QWORD *)v18 + 4) = a4;
  *((_QWORD *)v18 + 5) = a5;
  v19 = v26;
  *((_QWORD *)v18 + 6) = v26;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], v15, v11);
  aBlock[4] = sub_10028F640;
  v28 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_1008F8558;
  v20 = _Block_copy(aBlock);
  v21 = v28;
  v22 = a2;
  v23 = a3;
  v24 = a4;
  swift_bridgeObjectRetain(v19);
  objc_msgSend(v22, "performBlockOnWorkerQueue:", v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
}

void sub_10028EA78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v10 = sub_10004CFD4(&qword_1009D6DB8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(a2, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v13, a1);

  if (v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v10);
    v15 = *(unsigned __int8 *)(v11 + 80);
    v16 = (v15 + 16) & ~v15;
    v17 = swift_allocObject(&unk_1008F8590, v16 + v12, v15 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    aBlock[4] = sub_10028F6F0;
    v22 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10028EC70;
    aBlock[3] = &unk_1008F85A8;
    v18 = _Block_copy(aBlock);
    v19 = v22;
    v20 = v14;
    objc_msgSend(a2, "resolveLibraryAsset:options:completion:", v20, 0, v18, swift_release(v19).n128_f64[0]);
    _Block_release(v18);

  }
  else
  {
    aBlock[0] = 0;
    CheckedContinuation.resume(returning:)(aBlock, v10);
  }
}

uint64_t sub_10028EC2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  swift_unknownObjectRetain(a1);
  v1 = sub_10004CFD4(&qword_1009D6DB8);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_10028EC70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, void *);
  id v9;

  v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  swift_unknownObjectRetain(a2);
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

  return swift_unknownObjectRelease(a2);
}

uint64_t sub_10028ECE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - v10;
  v12 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v13 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v14 = swift_allocError(v13, &protocol self-conformance witness table for Error, 0, 0);
    *v15 = a3;
    v16 = a3;
    return swift_continuation_throwingResumeWithError(v12, v14);
  }
  else
  {
    if (a2)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
      v18 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
    }
    else
    {
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    }
    sub_10006CE68((uint64_t)v8, (uint64_t)v11);
    sub_10006CE68((uint64_t)v11, *(_QWORD *)(*(_QWORD *)(v12 + 64) + 40));
    return swift_continuation_throwingResume(v12);
  }
}

uint64_t sub_10028EE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)v2;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v2 + 16);
  return swift_task_switch(sub_10028EE64, 0, 0);
}

uint64_t sub_10028EE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_10028EF14;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000014, 0x80000001007BAF60, sub_10028F748, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_10028EF14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10028EF70, 0, 0);
}

uint64_t sub_10028EF70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028EF7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1009D6D94);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_10028E7A4(a1, v4, v5, v1 + 32, v1 + 80);
}

uint64_t sub_10028EFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1009D6DA4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_10028E738(a1, v4, v5, v1 + 32, v1 + 80);
}

void *sub_10028F078(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  Swift::String v14;
  void *object;
  Swift::String_optional v16;
  void *v17;
  Swift::String v18;
  void *v19;
  Swift::String_optional v20;
  uint64_t v21;
  uint64_t v22;
  signed int v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  id v40;
  void *v41;
  unsigned __int8 v42;
  Class v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  __n128 v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t countAndFlagsBits;
  uint64_t v75;
  Class isa;
  uint64_t v77;
  uint64_t v78;

  v5 = type metadata accessor for BooksFeatureFlag(0);
  v75 = *(_QWORD *)(v5 - 8);
  isa = (Class)v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_10003F198(a1, v8);
  dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v8, v9);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(a3, "libraryAssetOnMainQueueWithAssetID:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (!v13)
    return 0;
  v14._countAndFlagsBits = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v8, v9);
  object = v14._object;
  v16 = BATracker.contentPrivateID(for:)(v14);
  v17 = v16.value._object;
  swift_bridgeObjectRelease(object);
  if (!v16.value._object)
  {
LABEL_31:

    return v17;
  }
  countAndFlagsBits = v16.value._countAndFlagsBits;
  v18._countAndFlagsBits = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v8, v9);
  v19 = v18._object;
  v20 = BATracker.contentUserID(for:)(v18);
  swift_bridgeObjectRelease(v19);
  v73 = v20.value._object;
  if (v20.value._object)
  {
    v72 = v20.value._countAndFlagsBits;
    dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v8, v9);
    v22 = v21;
    v13 = v13;
    v23 = objc_msgSend(v13, "contentType");
    type metadata accessor for Utilities(0);
    v71 = dispatch thunk of static Utilities.contentType(from:)(v23);
    swift_bridgeObjectRelease(v22);

    v24 = objc_msgSend(v13, "isOwned");
    v26 = 0;
    if ((v24 & 1) != 0)
    {
      v27 = objc_msgSend(v13, "storeID");
      if (!v27)
        goto LABEL_10;
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

      v77 = v29;
      v78 = v31;
      v32 = sub_1001F15BC();
      LOBYTE(v28) = Collection.isNotEmpty.getter(&type metadata for String, v32);
      swift_bridgeObjectRelease(v31);
      if ((v28 & 1) != 0)
        v26 = 1;
      else
LABEL_10:
        v26 = 2;
    }
    v70 = v26;
    v33 = type metadata accessor for EventReporter(0, v25);
    v34 = (void *)static EventReporter.shared.getter(v33);
    v35 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v8, v9);
    v37 = v36;
    v69 = dispatch thunk of EventReporter.seriesType(for:)(v35, v36);

    v38 = objc_msgSend(v13, "isAudiobook", swift_bridgeObjectRelease(v37).n128_f64[0]);
    v39 = 0;
    if (v38)
    {
      v40 = objc_msgSend(v13, "hasRACSupport");
      if (v40 && (v41 = v40, v42 = objc_msgSend(v40, "BOOLValue"), v41, (v42 & 1) != 0))
        v39 = 1;
      else
        v39 = 2;
    }
    v68 = v39;
    v44 = v75;
    v43 = isa;
    (*(void (**)(char *, _QWORD, Class))(v75 + 104))(v7, enum case for BooksFeatureFlag.unifiedProductPage(_:), isa);
    v45 = sub_100008DB0((unint64_t *)&unk_1009D6230, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
    v46 = sub_10023B680();
    LOBYTE(v45) = RawRepresentable<>.isEnabled.getter(v43, v45, v46);
    (*(void (**)(char *, Class))(v44 + 8))(v7, v43);
    if ((v45 & 1) != 0)
    {
      v47 = a1[3];
      v48 = a1[4];
      sub_10003F198(a1, v47);
      dispatch thunk of ContextAssetInfoProtocol.supportsUnifiedProductPage.getter(v47, v48);
      isa = Bool._bridgeToObjectiveC()().super.super.isa;
      v49 = a1[3];
      v50 = a1[4];
      sub_10003F198(a1, v49);
      v51 = dispatch thunk of ContextAssetInfoProtocol.editionKind.getter(v49, v50);
      v53 = v52;
    }
    else
    {
      v51 = 0;
      v53 = 0;
      isa = 0;
    }
    v54 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v8, v9);
    v56 = v55;
    if (objc_msgSend(v13, "contentType") == 3)
      v57 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithLongLong:", objc_msgSend(v13, "pageCount"));
    else
      v57 = 0;
    v58 = objc_msgSend(v13, "supplementalContentAssets");
    if (v58)
    {
      v59 = sub_100033F5C();
      v60 = sub_100008DB0((unint64_t *)&qword_1009D6DB0, (uint64_t (*)(uint64_t))sub_100033F5C, (uint64_t)&protocol conformance descriptor for NSObject);
      v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v58, v59, v60);

      if ((v61 & 0xC000000000000001) != 0)
      {
        if (v61 < 0)
          v62 = v61;
        else
          v62 = v61 & 0xFFFFFFFFFFFFFF8;
        v58 = (id)__CocoaSet.count.getter(v62);
      }
      else
      {
        v58 = *(id *)(v61 + 16);
      }
      swift_bridgeObjectRelease(v61);
    }
    v63 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v58);
    v64 = objc_allocWithZone((Class)type metadata accessor for BridgedContentData(0));
    v17 = (void *)BridgedContentData.init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:isUnified:contentKind:)(v54, v56, v71, countAndFlagsBits, v16.value._object, v72, v73, v70, v65, 0, v57, v63, v69, v68, isa, v51, v53);
    goto LABEL_31;
  }

  swift_bridgeObjectRelease(v16.value._object);
  return 0;
}

uint64_t sub_10028F5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_10004CFD4(&qword_1009D6DB8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10028F640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D6DB8) - 8) + 80);
  sub_10028EA78(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_10028F68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4(&qword_1009D6DB8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10028F6F0(uint64_t a1)
{
  sub_10004CFD4(&qword_1009D6DB8);
  return sub_10028EC2C(a1);
}

void sub_10028F748(uint64_t a1)
{
  uint64_t v1;

  sub_10028D2E8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10028F758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id *v8;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v8 = (id *)(v0 + v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_10028F800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D6DC0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10028D474(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10028F884()
{
  uint64_t v0;

  sub_1001FE9A0(v0 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_weakDestroy(v0 + 48);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for SampleHeaderInteractor()
{
  return objc_opt_self(_TtC5Books22SampleHeaderInteractor);
}

uint64_t sub_10028F8D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch(sub_10028F8F0, 0, 0);
}

uint64_t sub_10028F8F0()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = objc_msgSend(*(id *)(v0[17] + 16), "isPaidStorefront");
  v0[18] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_10028F9AC;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1004442D4;
  v4[3] = &unk_1008F8660;
  v4[4] = v3;
  objc_msgSend(v2, "valueWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_10028F9AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    v2 = sub_10028FA60;
  else
    v2 = sub_10028FA0C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10028FA0C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 120);

  v2 = objc_msgSend(v1, "BOOLValue");
  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t sub_10028FA60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  double v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;

  v3 = (void *)v1[18];
  v2 = v1[19];
  swift_willThrow(a1);

  v1[10] = v2;
  swift_errorRetain(v2);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  v5 = sub_10028FCB4();
  if (!swift_dynamicCast(v1 + 15, v1 + 10, v4, v5, 0))
    goto LABEL_11;
  v6 = (void *)v1[15];
  v7 = objc_msgSend(v6, "domain");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(AMSErrorDomain);
  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    v14 = v12;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v10).n128_u64[0];
    if ((v15 & 1) == 0)
    {

LABEL_11:
      swift_errorRelease(v1[10]);
      v18 = (uint64_t (*)(uint64_t))v1[1];
      v19 = 0;
      return v18(v19);
    }
  }
  v17 = objc_msgSend(v6, "code", v16);

  if (v17 != (id)204)
    goto LABEL_11;
  swift_errorRelease(v1[19]);
  swift_errorRelease(v1[10]);
  v18 = (uint64_t (*)(uint64_t))v1[1];
  v19 = 1;
  return v18(v19);
}

uint64_t sub_10028FBD4()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_10028FBF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc(dword_1009D6F2C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10028FC58;
  v3[17] = v2;
  return swift_task_switch(sub_10028F8F0, 0, 0);
}

uint64_t sub_10028FC58(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc(v4);
  if (v1)
    v6 = 0;
  else
    v6 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

unint64_t sub_10028FCB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DA3B0;
  if (!qword_1009DA3B0)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DA3B0);
  }
  return result;
}

_QWORD *sub_10028FCF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  __int128 v24;
  _BYTE v25[24];
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t *v32;

  v32 = a2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_29;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    v4 = _swiftEmptyArrayStorage;
    v5 = 4;
    v6 = &qword_1009E8A20;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v10 = v6;
      v11 = MResource.id.getter(v7);
      v13 = v12;
      v14 = *v32;
      if (*(_QWORD *)(*v32 + 16) && (v15 = sub_1002BBA5C(v11, v12), (v16 & 1) != 0))
      {
        sub_10000B5E4(*(_QWORD *)(v14 + 56) + 40 * v15, (uint64_t)v23, v10);
      }
      else
      {
        memset(v23, 0, sizeof(v23));
        v24 = xmmword_100715FD0;
      }
      swift_bridgeObjectRelease(v13);
      if ((_QWORD)v24 == 1)
      {
        sub_100010960((uint64_t)v23, &qword_1009D7040);
        v6 = v10;
      }
      else
      {
        v6 = v10;
        sub_100025B3C((uint64_t)v23, (uint64_t)v25, v10);
        if (v26)
        {
          v17 = sub_10004CFD4(&qword_1009EF310);
          v18 = sub_10004CFD4(&qword_1009D6FF0);
          if ((swift_dynamicCast(&v29, v25, v17, v18, 6) & 1) == 0)
          {
            v31 = 0;
            v30 = 0u;
            v29 = 0u;
          }
          goto LABEL_21;
        }
        sub_100010960((uint64_t)v25, v10);
      }
      v29 = 0u;
      v30 = 0u;
      v31 = 0;
LABEL_21:
      static ContentInfoUtilities.assetInfo(libraryAssetInfo:storeAsset:)(&v27, &v29, v8);
      sub_100010960((uint64_t)&v29, &qword_1009DD660);

      if (v28)
      {
        sub_100022840(&v27, (uint64_t)&v29);
        sub_100022840(&v29, (uint64_t)&v27);
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_1005B0B24(0, v4[2] + 1, 1, v4);
        v20 = v4[2];
        v19 = v4[3];
        if (v20 >= v19 >> 1)
          v4 = sub_1005B0B24((_QWORD *)(v19 > 1), v20 + 1, 1, v4);
        v4[2] = v20 + 1;
        sub_100022840(&v27, (uint64_t)&v4[5 * v20 + 4]);
        v6 = v10;
      }
      else
      {
        sub_100010960((uint64_t)&v27, &qword_1009EC950);
      }
      ++v5;
      if (v9 == v3)
      {
        swift_bridgeObjectRelease(a1);
        return v4;
      }
    }
    __break(1u);
LABEL_29:
    if (a1 < 0)
      v21 = a1;
    else
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10028FFF0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D6F30);
  sub_100048F64(v0, (uint64_t)qword_1009D6F30);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000010, 0x80000001007168C0);
}

id sub_100290068(id a1, uint64_t a2, void *a3, _QWORD *a4, _QWORD *a5)
{
  _BYTE *v5;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  void *v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  objc_super v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41[2];

  v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_supportsReportConcernInJS] = 0;
  v11 = &v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_shareableURLStringOverride];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_coverImageProvider];
  sub_10002E418((uint64_t)a5, (uint64_t)&v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_coverImageProvider]);
  v13 = &v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider];
  sub_10002E418((uint64_t)a4, (uint64_t)&v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider]);
  if (a1)
  {
    sub_10000B5E4(a2, (uint64_t)&v39, &qword_1009E8A20);
    if (v40)
    {
      sub_100022840(&v39, (uint64_t)v41);
      v14 = &v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource];
      v15 = (uint64_t)&v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource + 8];
      *(_QWORD *)&v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource] = a1;
      sub_100022840(v41, v15);
      v14[48] = 2;
      a1 = a1;
    }
    else
    {
      v18 = v5;
      sub_100010960((uint64_t)&v39, &qword_1009E8A20);
      v19 = &v18[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource];
      *(_QWORD *)v19 = a1;
      v19[48] = 1;
      a1 = a1;

    }
    goto LABEL_7;
  }
  sub_10000B5E4(a2, (uint64_t)&v39, &qword_1009E8A20);
  if (v40)
  {
    sub_100022840(&v39, (uint64_t)v41);
    v16 = &v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource];
    sub_100022840(v41, (uint64_t)&v5[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource]);
    *((_QWORD *)v16 + 5) = a3;
    v16[48] = 0;
    v17 = a3;
LABEL_7:
    v38.receiver = v5;
    v38.super_class = (Class)type metadata accessor for ContextAssetInfo();
    v20 = objc_msgSendSuper2(&v38, "init");
    v21 = (void *)objc_opt_self(JSABridge);
    v22 = v20;
    v23 = objc_msgSend(v21, "sharedInstance");
    v24 = swift_allocObject(&unk_1008F88D8, 24, 7);
    *(_QWORD *)(v24 + 16) = v22;
    v25 = v22;
    JSABridge.enqueueBlockPrefersSync(_:f:l:)(sub_10029A6A4, v24, 0xD000000000000061, 0x80000001007BB2C0, 94);

    swift_release(v24);
    _s5Books15CurrentPageViewVwxx_0(a5);
    _s5Books15CurrentPageViewVwxx_0(a4);
    sub_100010960(a2, &qword_1009E8A20);
    return v25;
  }
  v27 = v5;
  sub_100010960((uint64_t)&v39, &qword_1009E8A20);
  if (qword_1009CDDB0 != -1)
    swift_once(&qword_1009CDDB0, sub_10028FFF0);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100048F64(v28, (uint64_t)qword_1009D6F30);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v37 = v27;
    v32 = a3;
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to instantiate because asset and libraryContent are nil", v33, 2u);
    v34 = v33;
    a3 = v32;
    v27 = v37;
    swift_slowDealloc(v34, -1, -1);
  }

  _s5Books15CurrentPageViewVwxx_0(a5);
  _s5Books15CurrentPageViewVwxx_0(a4);
  sub_100010960(a2, &qword_1009E8A20);
  _s5Books15CurrentPageViewVwxx_0(v12);
  _s5Books15CurrentPageViewVwxx_0(v13);
  v35 = v11[1];

  swift_bridgeObjectRelease(v35);
  v36 = type metadata accessor for ContextAssetInfo();
  swift_deallocPartialClassInstance(v27, v36, 168, 7);
  return 0;
}

void sub_1002903F8(void *a1, uint64_t a2)
{
  NSString v4;
  id v5;
  unsigned __int8 v6;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "objectForKeyedSubscript:", v4);

  if (v5)
  {
    v6 = objc_msgSend(v5, "toBool");

    *(_BYTE *)(a2 + OBJC_IVAR____TtC5Books16ContextAssetInfo_supportsReportConcernInJS) = v6;
  }
  else
  {
    __break(1u);
  }
}

id sub_1002904C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextAssetInfo();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextAssetInfo()
{
  return objc_opt_self(_TtC5Books16ContextAssetInfo);
}

void destroy for ContextAssetDataSource(uint64_t a1)
{
  unsigned int v2;
  id v3;

  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2 == 2)
  {

    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
  }
  else
  {
    if (v2 == 1)
    {
      v3 = *(id *)a1;
    }
    else
    {
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
      v3 = *(id *)(a1 + 40);
    }

  }
}

uint64_t initializeWithCopy for ContextAssetDataSource(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  void *v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  __int128 v12;
  id v13;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v6 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = a2 + 8;
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 32) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    v11 = v6;
    v10(a1 + 8, v7, v9);
    *(_BYTE *)(a1 + 48) = 2;
  }
  else
  {
    if (v4 == 1)
    {
      v5 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 48) = 1;
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
      v5 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v5;
      *(_BYTE *)(a1 + 48) = 0;
    }
    v13 = v5;
  }
  return a1;
}

uint64_t assignWithCopy for ContextAssetDataSource(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  id v5;
  unsigned int v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  id v14;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
    }
    else
    {
      if (v4 == 1)
      {
        v5 = *(id *)a1;
      }
      else
      {
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
        v5 = *(id *)(a1 + 40);
      }

    }
    v6 = *(unsigned __int8 *)(a2 + 48);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = a2 + 8;
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
      v12 = v8;
      v11(a1 + 8, v9, v10);
      *(_BYTE *)(a1 + 48) = 2;
    }
    else
    {
      if (v6 == 1)
      {
        v7 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 48) = 1;
      }
      else
      {
        v13 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v13;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1, a2);
        v7 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v7;
        *(_BYTE *)(a1 + 48) = 0;
      }
      v14 = v7;
    }
  }
  return a1;
}

__n128 initializeWithTake for ContextAssetDataSource(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContextAssetDataSource(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  id v5;
  unsigned int v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
    }
    else
    {
      if (v4 == 1)
      {
        v5 = *(id *)a1;
      }
      else
      {
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
        v5 = *(id *)(a1 + 40);
      }

    }
    v6 = *(unsigned __int8 *)(a2 + 48);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 != 2)
    {
      if (v6 == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        LOBYTE(v6) = 1;
LABEL_17:
        *(_BYTE *)(a1 + 48) = v6;
        return a1;
      }
      LOBYTE(v6) = 0;
    }
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_17;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextAssetDataSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ContextAssetDataSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_100290978(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_100290994(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContextAssetDataSource()
{
  return &type metadata for ContextAssetDataSource;
}

uint64_t sub_1002909CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];
  id v11;
  char v12;

  v1 = sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v10);
  if (v12)
  {
    v2 = *(void **)&v10[0];
    if (v12 != 1)
      v1 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)v10 + 1);
    v5 = MResource.id.getter(v1);

  }
  else
  {

    sub_100022840(v10, (uint64_t)v7);
    v3 = v8;
    v4 = v9;
    sub_10003F198(v7, v8);
    v5 = dispatch thunk of LibraryContentInfo.id.getter(v3, v4);
    _s5Books15CurrentPageViewVwxx_0(v7);
  }
  return v5;
}

uint64_t sub_100290A90()
{
  double v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _BYTE v59[40];
  __int128 v60[2];
  __int128 v61[2];
  id v62;
  char v63;

  v57 = type metadata accessor for LibraryPDFInfo(0);
  v49 = *(_QWORD *)(v57 - 8);
  v0 = __chkstk_darwin(v57);
  v51 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for LibraryAudiobookSeriesInfo(0, v0);
  v50 = *(_QWORD *)(v56 - 8);
  v2 = __chkstk_darwin(v56);
  v53 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for LibraryBookSeriesInfo(0, v2);
  v52 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v54 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LibraryBookInfo.BookType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D6FE8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LibraryBookInfo(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LibraryAudiobookInfo(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002995A8((uint64_t)&v58[OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource], (uint64_t)v61);
  if (v63)
  {
    v20 = *(void **)&v61[0];
    if (v63 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v61 + 1);
    v26 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v20, v26))
    {
      v27 = dispatch thunk of MAsset.isBook.getter();

      v28 = (v27 & 1) == 0;
      v29 = 2;
    }
    else
    {
      v30 = type metadata accessor for MSeries();
      if (!swift_dynamicCastClass(v20, v30))
      {

        return 0;
      }
      v31 = dispatch thunk of MSeries.isBookSeries.getter();

      v28 = (v31 & 1) == 0;
      v29 = 4;
    }
    if (v28)
      return v29 + 1;
    else
      return v29;
  }
  else
  {
    v45 = v15;
    v48 = v13;
    v58 = v11;
    v46 = v8;
    v47 = v6;
    v22 = v55;
    v21 = v56;
    v23 = v57;

    sub_100022840(v61, (uint64_t)v60);
    sub_10002E418((uint64_t)v60, (uint64_t)v59);
    v24 = sub_10004CFD4(&qword_1009EF310);
    if (swift_dynamicCast(v19, v59, v24, v16, 6))
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      _s5Books15CurrentPageViewVwxx_0(v60);
      return 3;
    }
    else
    {
      sub_10002E418((uint64_t)v60, (uint64_t)v59);
      v32 = (uint64_t)v58;
      v33 = v12;
      v34 = swift_dynamicCast(v58, v59, v24, v12, 6);
      v35 = v48;
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
      if (v34)
      {
        v36(v32, 0, 1, v12);
        v37 = v45;
        v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 32))(v45, v32, v33);
        v39 = v46;
        LibraryBookInfo.type.getter(v38);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v33);
        _s5Books15CurrentPageViewVwxx_0(v60);
        v40 = v47;
        v41 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v39, v5);
        LODWORD(v37) = enum case for LibraryBookInfo.BookType.epub(_:);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v5);
        if (v41 == (_DWORD)v37)
          return 2;
        else
          return 7;
      }
      else
      {
        v36(v32, 1, 1, v12);
        sub_100010960(v32, &qword_1009D6FE8);
        sub_10002E418((uint64_t)v60, (uint64_t)v59);
        v42 = v54;
        if (swift_dynamicCast(v54, v59, v24, v22, 6))
        {
          (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v22);
          _s5Books15CurrentPageViewVwxx_0(v60);
          return 4;
        }
        else
        {
          sub_10002E418((uint64_t)v60, (uint64_t)v59);
          v43 = v53;
          if (swift_dynamicCast(v53, v59, v24, v21, 6))
          {
            (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v21);
            _s5Books15CurrentPageViewVwxx_0(v60);
            return 5;
          }
          else
          {
            sub_100022840(v60, (uint64_t)v59);
            v44 = v51;
            result = swift_dynamicCast(v51, v59, v24, v23, 6);
            if ((_DWORD)result)
            {
              (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v23);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_100290FE4()
{
  char *v0;

  v0 = (char *)sub_100291018 + 4 * byte_1007168B0[sub_100290A90()];
  __asm { BR              X10 }
}

uint64_t sub_100291020()
{
  return 0x746163696C707061;
}

unint64_t sub_100291048()
{
  return 0xD000000000000010;
}

uint64_t sub_100291068()
{
  return 0x6F6F626F69647561;
}

unint64_t sub_100291088()
{
  return 0xD000000000000012;
}

uint64_t sub_1002910AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16[2];
  id v17;
  char v18;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v16);
  if (v18)
  {
    v1 = *(void **)&v16[0];
    if (v18 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v16 + 1);
    v7 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v1, v7))
    {
      v6 = MAsset.artistName.getter();

      return v6;
    }

    return 0;
  }

  sub_100022840(v16, (uint64_t)v15);
  sub_10002E418((uint64_t)v15, (uint64_t)v11);
  v2 = sub_10004CFD4(&qword_1009EF310);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  if (!swift_dynamicCast(v9, v11, v2, v3, 6))
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    _s5Books15CurrentPageViewVwxx_0(v15);
    sub_100010960((uint64_t)v9, &qword_1009DD660);
    return 0;
  }
  sub_100022840(v9, (uint64_t)v12);
  v4 = v13;
  v5 = v14;
  sub_10003F198(v12, v13);
  v6 = dispatch thunk of LibraryAssetInfo.author.getter(v4, v5);
  _s5Books15CurrentPageViewVwxx_0(v15);
  _s5Books15CurrentPageViewVwxx_0(v12);
  return v6;
}

uint64_t sub_10029121C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  __int128 v15[2];
  uint64_t v16;
  _BYTE v17[40];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  __int128 v22[2];
  id v23;
  char v24;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v22);
  if (v24)
  {
    v1 = *(void **)&v22[0];
    if (v24 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v22 + 1);
    v10 = type metadata accessor for MAsset(0);
    v11 = (void *)swift_dynamicCastClass(v1, v10);
    if (v11)
    {
      objc_msgSend(v11, "averageRating");
      v13 = v12;

      v9 = v13;
      return *(_QWORD *)&v9;
    }

LABEL_13:
    v9 = 0.0;
    return *(_QWORD *)&v9;
  }

  sub_100022840(v22, (uint64_t)v21);
  sub_10002E418((uint64_t)v21, (uint64_t)v17);
  v2 = sub_10004CFD4(&qword_1009EF310);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  if ((swift_dynamicCast(v15, v17, v2, v3, 6) & 1) == 0)
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    _s5Books15CurrentPageViewVwxx_0(v21);
    sub_100010960((uint64_t)v15, &qword_1009DD660);
    goto LABEL_13;
  }
  sub_100022840(v15, (uint64_t)v18);
  v4 = v19;
  v5 = v20;
  sub_10003F198(v18, v19);
  v6 = dispatch thunk of LibraryAssetInfo.rating.getter(v4, v5);
  if ((v7 & 1) != 0)
  {
    _s5Books15CurrentPageViewVwxx_0(v21);
    _s5Books15CurrentPageViewVwxx_0(v18);
    goto LABEL_13;
  }
  v8 = (double)v6;
  _s5Books15CurrentPageViewVwxx_0(v21);
  v9 = v8;
  _s5Books15CurrentPageViewVwxx_0(v18);
  return *(_QWORD *)&v9;
}

uint64_t sub_1002913B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[14] = v0;
  v2 = type metadata accessor for MenuCoverImageSource(0);
  v1[15] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[16] = v3;
  v1[17] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100291414, 0, 0);
}

uint64_t sub_100291414()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  id v23;

  v1 = (_QWORD *)(v0 + 16);
  sub_1002995A8(*(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, v0 + 16);
  if (!*(_BYTE *)(v0 + 64))
  {

LABEL_7:
    _s5Books15CurrentPageViewVwxx_0(v1);
    v17 = (void *)objc_opt_self(BKLibraryManager);
    sub_1002909CC();
    v19 = v18;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v21 = objc_msgSend(v17, "fetchImageForAssetID:size:includeSpine:coverEffectsEnvironment:", v20, 0, 0, CGSizeScaleToScreen(kAEAssetActivityItemProviderDefaultCoverSize[0], kAEAssetActivityItemProviderDefaultCoverSize[1]));

    v22 = objc_msgSend(v21, "CGImage");
    v23 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v22);

    goto LABEL_8;
  }
  if (*(_BYTE *)(v0 + 64) != 1)
  {

    v1 = (_QWORD *)(v0 + 24);
    goto LABEL_7;
  }
  v2 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 144) = v2;
  v3 = type metadata accessor for MAsset(0);
  v4 = swift_dynamicCastClass(v2, v3);
  if (v4)
  {
    v5 = v4;
    v7 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 120);
    sub_10002E418(*(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC5Books16ContextAssetInfo_coverImageProvider, v0 + 72);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 104);
    sub_10003F198((_QWORD *)(v0 + 72), v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, enum case for MenuCoverImageSource.network(_:), v8);
    v11 = kAEAssetActivityItemProviderDefaultCoverSize[0];
    v12 = kAEAssetActivityItemProviderDefaultCoverSize[1];
    v13 = async function pointer to dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)[1];
    v14 = v2;
    v15 = (_QWORD *)swift_task_alloc(v13);
    *(_QWORD *)(v0 + 152) = v15;
    *v15 = v0;
    v15[1] = sub_100291658;
    return dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)(v5, *(_QWORD *)(v0 + 136), 1, v9, v10, v11, v12);
  }

  v23 = 0;
LABEL_8:
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(id))(v0 + 8))(v23);
}

uint64_t sub_100291658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_1002916D4, 0, 0);
}

uint64_t sub_1002916D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 144);

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 72));
  v2 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

id sub_100291724()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  void ***p_aBlock;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  double v19;
  double v20;
  double v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v27;
  void **aBlock;
  _QWORD v29[4];
  id v30;
  char v31;

  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)BCMutableFutureValue), "init");
  sub_1002995A8((uint64_t)v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&aBlock);
  if (!v31)
  {

    p_aBlock = &aBlock;
LABEL_7:
    _s5Books15CurrentPageViewVwxx_0(p_aBlock);
    v15 = (void *)objc_opt_self(BKLibraryManager);
    sub_1002909CC();
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v19 = CGSizeScaleToScreen(kAEAssetActivityItemProviderDefaultCoverSize[0], kAEAssetActivityItemProviderDefaultCoverSize[1]);
    v21 = v20;
    v22 = (_QWORD *)swift_allocObject(&unk_1008F8838, 24, 7);
    v22[2] = v4;
    v29[3] = sub_100299DA8;
    v30 = v22;
    aBlock = _NSConcreteStackBlock;
    v29[0] = 1107296256;
    v29[1] = sub_1001EDBF0;
    v29[2] = &unk_1008F8850;
    v23 = _Block_copy(&aBlock);
    v24 = v30;
    v25 = v4;
    swift_release(v24);
    objc_msgSend(v15, "fetchImageForAssetID:size:includeSpine:includeShadow:coverEffectsEnvironment:completion:", v18, 0, 0, 0, v23, v19, v21);
    _Block_release(v23);

    return v4;
  }
  if (v31 != 1)
  {

    p_aBlock = (void ***)v29;
    goto LABEL_7;
  }
  v5 = aBlock;
  v6 = type metadata accessor for MAsset(0);
  v7 = swift_dynamicCastClass(v5, v6);
  if (v7)
  {
    v8 = v7;
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject(&unk_1008F8810, 56, 7);
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v0;
    v10[5] = v8;
    v10[6] = v4;
    v11 = v4;
    v12 = v0;
    v13 = sub_10030C02C((uint64_t)v3, (uint64_t)&unk_1009D7050, (uint64_t)v10);
    swift_release(v13);
  }
  else
  {

    return 0;
  }
  return v4;
}

uint64_t sub_10029197C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  v7 = type metadata accessor for MenuCoverImageSource(0);
  v6[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[11] = v8;
  v6[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002919E0, 0, 0);
}

uint64_t sub_1002919E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  _QWORD *v8;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  sub_10002E418(v0[7] + OBJC_IVAR____TtC5Books16ContextAssetInfo_coverImageProvider, (uint64_t)(v0 + 2));
  v4 = v0[5];
  v5 = v0[6];
  sub_10003F198(v0 + 2, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for MenuCoverImageSource.coverCache(_:), v3);
  v6 = kAEAssetActivityItemProviderDefaultCoverSize[0];
  v7 = kAEAssetActivityItemProviderDefaultCoverSize[1];
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_100291AC0;
  return dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)(v0[8], v0[12], 1, v4, v5, v6, v7);
}

uint64_t sub_100291AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_task_switch(sub_100291B38, 0, 0);
}

uint64_t sub_100291B38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(void **)(v0 + 72);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v4 = v3;
  objc_msgSend(v4, "set:error:", v1, 0);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100291BAC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1008F8888, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_100299DDC;
  v25 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F88A0;
  v13 = _Block_copy(aBlock);
  v14 = v25;
  v15 = a2;
  v16 = a1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v20 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
}

void sub_100291DC8(void *a1, id a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "CGImage");
  v4 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v3);

  objc_msgSend(a1, "set:error:", v4, 0);
}

uint64_t sub_100291E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjCClassFromMetadata;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD v46[5];
  char v47;

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v45);
  if (v47)
  {
    v44 = v1;
    v15 = v45;
    if (v47 != 1)
      _s5Books15CurrentPageViewVwxx_0(v46);
    v22 = type metadata accessor for MAsset(0);
    v23 = (void *)swift_dynamicCastClass(v15, v22);
    if (v23 && (v24 = objc_msgSend(v23, "editionKind")) != 0)
    {
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);

    }
    else
    {

      v27 = sub_100290A90();
      if ((static ContextActionAssetType.== infix(_:_:)(v27, 3) & 1) != 0)
      {
        v28 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xE90000000000006BLL);
        static Locale.current.getter(v28);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
        v29 = type metadata accessor for BundleFinder();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v29);
        v31 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
        v32 = v44;
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v44);
        v33 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v31, v4, "Context Menu: audiobook edition kind", 36, 2);
      }
      else
      {
        v34 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
        static Locale.current.getter(v34);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
        v35 = type metadata accessor for BundleFinder();
        v36 = swift_getObjCClassFromMetadata(v35);
        v37 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v36);
        v32 = v44;
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v44);
        v33 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v37, v4, "Context Menu: book edition kind", 31, 2);
      }
      v26 = v33;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v32);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  else
  {

    v16 = sub_100290A90();
    if ((static ContextActionAssetType.== infix(_:_:)(v16, 3) & 1) != 0)
    {
      v17 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xE90000000000006BLL);
      static Locale.current.getter(v17);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      v18 = type metadata accessor for BundleFinder();
      v19 = swift_getObjCClassFromMetadata(v18);
      v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v19);
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
      v21 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v4, "Context Menu: audiobook edition kind", 36, 2);
    }
    else
    {
      v38 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
      static Locale.current.getter(v38);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      v39 = type metadata accessor for BundleFinder();
      v40 = swift_getObjCClassFromMetadata(v39);
      v41 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v40);
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
      v21 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v41, v4, "Context Menu: book edition kind", 31, 2);
    }
    v26 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    _s5Books15CurrentPageViewVwxx_0(&v45);
  }
  return v26;
}

uint64_t sub_1002922F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id *v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  id v18;
  id v19[5];
  char v20;
  __int128 v21[2];

  v1 = type metadata accessor for LibraryBookInfo.BookType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D6FE8);
  __chkstk_darwin(v5);
  v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LibraryBookInfo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v18);
  if (v20)
  {
    if (v20 == 1)
    {
      sub_1002995DC((uint64_t)&v18);
      return 0;
    }

    v12 = v19;
  }
  else
  {

    v12 = &v18;
  }
  sub_100022840((__int128 *)v12, (uint64_t)v21);
  sub_100022840(v21, (uint64_t)&v18);
  v13 = sub_10004CFD4(&qword_1009EF310);
  v14 = swift_dynamicCast(v7, &v18, v13, v8, 6);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v14 & 1) != 0)
  {
    v15(v7, 0, 1, v8);
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    LibraryBookInfo.type.getter(v16);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == enum case for LibraryBookInfo.BookType.epub(_:))
    {
      (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
      return *(_QWORD *)v4;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v15(v7, 1, 1, v8);
    sub_100010960((uint64_t)v7, &qword_1009D6FE8);
  }
  return 0;
}

void sub_100292520()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  char isEscapingClosureAtFileLocation;
  _QWORD *v11;
  void **aBlock;
  _QWORD v13[4];
  id v14;
  char v15;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&aBlock);
  if (v15)
  {
    v1 = aBlock;
    if (v15 != 1)
      _s5Books15CurrentPageViewVwxx_0(v13);
    v2 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v1, v2) && (v3 = MAsset.featuredEditions.getter()) != 0)
    {
      v4 = v3;
      v11 = _swiftEmptyArrayStorage;
      v5 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
      v6 = swift_allocObject(&unk_1008F8798, 32, 7);
      *(_QWORD *)(v6 + 16) = v4;
      *(_QWORD *)(v6 + 24) = &v11;
      v7 = (_QWORD *)swift_allocObject(&unk_1008F87C0, 32, 7);
      v7[2] = sub_100299C68;
      v7[3] = v6;
      v13[3] = sub_100064AD4;
      v14 = v7;
      aBlock = _NSConcreteStackBlock;
      v13[0] = 1107296256;
      v13[1] = sub_100064AFC;
      v13[2] = &unk_1008F87D8;
      v8 = _Block_copy(&aBlock);
      v9 = v14;
      swift_retain(v7);
      objc_msgSend(v5, "performBlockInUIContext:", v8, swift_release(v9).n128_f64[0]);

      _Block_release(v8);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 97, 304, 64, 1);
      swift_release(v7);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
      else
        swift_release(v6);
    }
    else
    {

    }
  }
  else
  {

    _s5Books15CurrentPageViewVwxx_0(&aBlock);
  }
}

void sub_10029270C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  id *v20;
  id v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD v75[5];
  _QWORD *v76;
  uint64_t v77;

  v6 = type metadata accessor for ContentInfoBuildOptions(0);
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  __chkstk_darwin(v6);
  v71 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a2 >> 62)
    goto LABEL_43;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v66 = (uint64_t *)a3;
  v67 = a2;
  if (v8)
  {
    v75[0] = _swiftEmptyArrayStorage;
    sub_100045E44(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
    {
      __break(1u);
LABEL_53:
      v64 = sub_10004CFD4(&qword_1009D2A80);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v64);
      __break(1u);
      return;
    }
    v70 = a1;
    v9 = (_QWORD *)v75[0];
    if ((a2 & 0xC000000000000001) != 0)
    {
      v10 = 0;
      do
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v67);
        v76 = (_QWORD *)MResource.id.getter(v11);
        v77 = v12;
        v14 = String.init<A>(_:)(&v76, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v13);
        v16 = v15;
        swift_unknownObjectRelease(v11);
        v75[0] = v9;
        v18 = v9[2];
        v17 = v9[3];
        if (v18 >= v17 >> 1)
        {
          sub_100045E44(v17 > 1, v18 + 1, 1);
          v9 = (_QWORD *)v75[0];
        }
        ++v10;
        v9[2] = v18 + 1;
        v19 = &v9[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
      }
      while (v8 != v10);
    }
    else
    {
      v20 = (id *)(a2 + 32);
      do
      {
        v21 = *v20;
        v76 = (_QWORD *)MResource.id.getter(v21);
        v77 = v22;
        v24 = String.init<A>(_:)(&v76, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v23);
        v26 = v25;

        v75[0] = v9;
        v28 = v9[2];
        v27 = v9[3];
        if (v28 >= v27 >> 1)
        {
          sub_100045E44(v27 > 1, v28 + 1, 1);
          v9 = (_QWORD *)v75[0];
        }
        v9[2] = v28 + 1;
        v29 = &v9[2 * v28];
        v29[4] = v24;
        v29[5] = v26;
        ++v20;
        --v8;
      }
      while (v8);
    }
    a1 = v70;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  v30 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  isa = Array._bridgeToObjectiveC()().super.isa;
  a3 = (uint64_t)objc_msgSend(v30, "libraryAssetsWithAssetIDs:inManagedObjectContext:", isa, a1, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v32 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v32);

  v34 = (_QWORD *)sub_1004ECDA4((uint64_t)_swiftEmptyDictionarySingleton);
  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v60 = v33;
    else
      v60 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v33, 2);
    v61 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(v33);
    v70 = v61;
    if (v61)
      goto LABEL_19;
  }
  else
  {
    v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
    v70 = v35;
    if (v35)
    {
LABEL_19:
      v68 = v33;
      v69 = v33 & 0xC000000000000001;
      a2 = 4;
      do
      {
        if (v69)
          v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2 - 4, v33);
        else
          v36 = *(id *)(v33 + 8 * a2);
        v37 = v36;
        a1 = a2 - 3;
        if (__OFADD__(a2 - 4, 1))
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          if (a2 < 0)
            v59 = a2;
          else
            v59 = a2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a2);
          v8 = _CocoaArrayWrapper.endIndex.getter(v59);
          swift_bridgeObjectRelease(a2);
          goto LABEL_3;
        }
        v38 = objc_msgSend(v36, "assetID");
        if (v38)
        {
          v39 = v38;
          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v42 = v41;

        }
        else
        {
          v40 = 0;
          v42 = 0;
        }
        v76 = _swiftEmptyArrayStorage;
        a3 = sub_100008DB0((unint64_t *)&qword_1009EF2F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentInfoBuildOptions, (uint64_t)&protocol conformance descriptor for ContentInfoBuildOptions);
        v43 = sub_10004CFD4(&qword_1009D7038);
        v44 = sub_100030B34((unint64_t *)&qword_1009EF300, &qword_1009D7038, (uint64_t)&protocol conformance descriptor for [A]);
        v45 = v71;
        v46 = v73;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v76, v43, v44, v73, a3);
        BKLibraryAsset.contentInfo(options:)(v45, &v76);
        (*(void (**)(void *, uint64_t))(v72 + 8))(v45, v46);
        sub_100025B3C((uint64_t)&v76, (uint64_t)v75, &qword_1009E8A20);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
        v74 = v34;
        v49 = sub_1002BBA5C(v40, v42);
        v50 = v34[2];
        v51 = (v48 & 1) == 0;
        v52 = v50 + v51;
        if (__OFADD__(v50, v51))
          goto LABEL_41;
        a3 = v48;
        if (v34[3] >= v52)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v34 = v74;
            if ((v48 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_1002BFC98();
            v34 = v74;
            if ((a3 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_10037AAA0(v52, isUniquelyReferenced_nonNull_native);
          v53 = sub_1002BBA5C(v40, v42);
          if ((a3 & 1) != (v54 & 1))
            goto LABEL_53;
          v49 = v53;
          v34 = v74;
          if ((a3 & 1) != 0)
          {
LABEL_20:
            sub_100299C80((uint64_t)v75, v34[7] + 40 * v49);
            goto LABEL_21;
          }
        }
        v34[(v49 >> 6) + 8] |= 1 << v49;
        v55 = (uint64_t *)(v34[6] + 16 * v49);
        *v55 = v40;
        v55[1] = v42;
        sub_100025B3C((uint64_t)v75, v34[7] + 40 * v49, &qword_1009E8A20);
        v56 = v34[2];
        v57 = __OFADD__(v56, 1);
        v58 = v56 + 1;
        if (v57)
          goto LABEL_42;
        v34[2] = v58;
        swift_bridgeObjectRetain(v42);
LABEL_21:

        swift_bridgeObjectRelease(v42);
        swift_bridgeObjectRelease(0x8000000000000000);
        ++a2;
        v33 = v68;
      }
      while (a1 != v70);
    }
  }
  swift_bridgeObjectRelease_n(v33, 2);
  v76 = v34;
  v62 = sub_10028FCF0(v67, (uint64_t *)&v76);
  v63 = *v66;
  *v66 = (uint64_t)v62;
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v63);
}

uint64_t sub_100292D28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  __int128 v14[2];
  uint64_t v15;
  _BYTE v16[40];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  __int128 v21[2];
  id v22;
  char v23;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v21);
  if (!v23)
  {

    sub_100022840(v21, (uint64_t)v20);
    sub_10002E418((uint64_t)v20, (uint64_t)v16);
    v2 = sub_10004CFD4(&qword_1009EF310);
    v3 = sub_10004CFD4(&qword_1009D6FF0);
    if (!swift_dynamicCast(v14, v16, v2, v3, 6))
    {
      v15 = 0;
      memset(v14, 0, sizeof(v14));
      _s5Books15CurrentPageViewVwxx_0(v20);
      sub_100010960((uint64_t)v14, &qword_1009DD660);
      return 0;
    }
    sub_100022840(v14, (uint64_t)v17);
    v4 = v18;
    v5 = v19;
    sub_10003F198(v17, v18);
    v6 = (_QWORD *)dispatch thunk of LibraryContentInfo.genreNames.getter(v4, *(_QWORD *)(v5 + 8));
    if (v6)
    {
      v7 = v6;
      if (v6[2])
      {
        v8 = v6[4];
        swift_bridgeObjectRetain(v6[5]);
        swift_bridgeObjectRelease(v7);
LABEL_17:
        _s5Books15CurrentPageViewVwxx_0(v20);
        _s5Books15CurrentPageViewVwxx_0(v17);
        return v8;
      }
      swift_bridgeObjectRelease(v6);
    }
    v8 = 0;
    goto LABEL_17;
  }
  v1 = *(void **)&v21[0];
  if (v23 != 1)
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)v21 + 1);
  v9 = type metadata accessor for MAsset(0);
  v10 = (void *)swift_dynamicCastClass(v1, v9);
  if (!v10 || (v11 = objc_msgSend(v10, "genreName")) == 0)
  {

    return 0;
  }
  v12 = v11;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);

  return v8;
}

uint64_t sub_100292EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  void *v21;
  _QWORD v24[5];
  _QWORD v25[5];
  __int128 v26[2];
  id v27;
  char v28;

  v1 = sub_10004CFD4(&qword_1009D6FF8);
  __chkstk_darwin(v1);
  v3 = (char *)&v24[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LibraryAudiobookInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v26);
  if (v28)
  {
    v8 = *(void **)&v26[0];
    if (v28 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v26 + 1);
    v20 = type metadata accessor for MAsset(0);
    v21 = (void *)swift_dynamicCastClass(v8, v20);
    if (v21)
    {
      v19 = objc_msgSend(v21, "hasSupplementalContent");

      return (uint64_t)v19;
    }

    return 2;
  }

  sub_100022840(v26, (uint64_t)v25);
  sub_10002E418((uint64_t)v25, (uint64_t)v24);
  v9 = sub_10004CFD4(&qword_1009EF310);
  v10 = swift_dynamicCast(v3, v24, v9, v4, 6);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  if (!v10)
  {
    v11(v3, 1, 1, v4);
    _s5Books15CurrentPageViewVwxx_0(v25);
    sub_100010960((uint64_t)v3, &qword_1009D6FF8);
    return 0;
  }
  v11(v3, 0, 1, v4);
  v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v13 = LibraryAudiobookInfo.supplementalContents.getter(v12);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _s5Books15CurrentPageViewVwxx_0(v25);
    return 2;
  }
  v14 = v13;
  v24[0] = v13;
  v15 = sub_10004CFD4(&qword_1009D7028);
  v16 = sub_100030B34(&qword_1009D7030, &qword_1009D7028, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = Collection.isNotEmpty.getter(v15, v16);
  v18 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v18);
  _s5Books15CurrentPageViewVwxx_0(v25);
  return v17 & 1;
}

uint64_t sub_100293144()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unsigned __int8 v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12[2];
  uint64_t v13;
  _BYTE v14[40];
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  __int128 v21[2];

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v15);
  if (!v20)
  {

    v6 = (__int128 *)&v15;
    goto LABEL_9;
  }
  if (v20 != 1)
  {

    v6 = (__int128 *)&v16;
LABEL_9:
    sub_100022840(v6, (uint64_t)v21);
    sub_100022840(v21, (uint64_t)v14);
    v7 = sub_10004CFD4(&qword_1009EF310);
    v8 = sub_10004CFD4(&qword_1009D6FF0);
    if (swift_dynamicCast(v12, v14, v7, v8, 6))
    {
      sub_100022840(v12, (uint64_t)&v15);
      v9 = v17;
      v10 = v18;
      sub_10003F198(&v15, v17);
      v5 = dispatch thunk of LibraryAssetInfo.isExplicit.getter(v9, v10);
      _s5Books15CurrentPageViewVwxx_0(&v15);
    }
    else
    {
      v13 = 0;
      memset(v12, 0, sizeof(v12));
      sub_100010960((uint64_t)v12, &qword_1009DD660);
      v5 = 0;
    }
    return v5 & 1;
  }
  v1 = v15;
  v2 = type metadata accessor for MAsset(0);
  v3 = (void *)swift_dynamicCastClass(v1, v2);
  if (v3 || (v4 = type metadata accessor for MSeries(), (v3 = (void *)swift_dynamicCastClass(v1, v4)) != 0))
    v5 = objc_msgSend(v3, "isExplicit");
  else
    v5 = 0;

  return v5 & 1;
}

uint64_t sub_1002932AC()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15[5];
  char v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v14);
  if (v16)
  {
    if (v16 == 1)
    {

      return 2;
    }

    v2 = v15;
  }
  else
  {

    v2 = &v14;
  }
  sub_100022840((__int128 *)v2, (uint64_t)v17);
  v3 = sub_100290A90();
  if ((static ContextActionAssetType.== infix(_:_:)(v3, 4) & 1) != 0
    || (v4 = sub_100290A90(), (static ContextActionAssetType.== infix(_:_:)(v4, 5) & 1) != 0))
  {
    v1 = 0;
  }
  else
  {
    v6 = v18;
    v7 = v19;
    sub_10003F198(v17, v18);
    v8 = dispatch thunk of LibraryContentInfo.collectionMemberships.getter(v6, v7);
    if (v8)
    {
      v9 = (_QWORD *)v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
      v12 = v11;
      v13 = sub_1004EC100(v10, v11, v9);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v12);
      v1 = v13 & 1;
    }
    else
    {
      v1 = 2;
    }
  }
  _s5Books15CurrentPageViewVwxx_0(v17);
  return v1;
}

uint64_t sub_1002933C8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];
  uint64_t v9;
  _BYTE v10[40];
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  __int128 v17[2];

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v11);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_1002995DC((uint64_t)&v11);
      return 0;
    }

    v2 = (__int128 *)&v12;
  }
  else
  {

    v2 = (__int128 *)&v11;
  }
  sub_100022840(v2, (uint64_t)v17);
  sub_100022840(v17, (uint64_t)v10);
  v3 = sub_10004CFD4(&qword_1009EF310);
  v4 = sub_10004CFD4(&qword_1009D6FF0);
  if (swift_dynamicCast(v8, v10, v3, v4, 6))
  {
    sub_100022840(v8, (uint64_t)&v11);
    v5 = v13;
    v6 = v14;
    sub_10003F198(&v11, v13);
    v1 = dispatch thunk of LibraryAssetInfo.isLocal.getter(v5, v6) & 1;
    _s5Books15CurrentPageViewVwxx_0(&v11);
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_100010960((uint64_t)v8, &qword_1009DD660);
    return 2;
  }
  return v1;
}

uint64_t sub_1002934F0()
{
  return sub_1002934FC((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isManaged.getter);
}

uint64_t sub_1002934FC(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10[2];
  uint64_t v11;
  _BYTE v12[40];
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  __int128 v19[2];

  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v13);
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1002995DC((uint64_t)&v13);
      return 2;
    }

    v3 = (__int128 *)&v14;
  }
  else
  {

    v3 = (__int128 *)&v13;
  }
  sub_100022840(v3, (uint64_t)v19);
  sub_100022840(v19, (uint64_t)v12);
  v4 = sub_10004CFD4(&qword_1009EF310);
  v5 = sub_10004CFD4(&qword_1009D6FF0);
  if (!swift_dynamicCast(v10, v12, v4, v5, 6))
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_100010960((uint64_t)v10, &qword_1009DD660);
    return 2;
  }
  sub_100022840(v10, (uint64_t)&v13);
  v6 = v15;
  v7 = v16;
  sub_10003F198(&v13, v15);
  v8 = a1(v6, v7) & 1;
  _s5Books15CurrentPageViewVwxx_0(&v13);
  return v8;
}

uint64_t sub_100293624()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11[2];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  __int128 v22[2];

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v16);
  if (v21)
  {
    if (v21 == 1)
    {
      sub_1002995DC((uint64_t)&v16);
      return 2;
    }

    v1 = (__int128 *)&v17;
  }
  else
  {

    v1 = (__int128 *)&v16;
  }
  sub_100022840(v1, (uint64_t)v22);
  sub_100022840(v22, (uint64_t)v13);
  v2 = sub_10004CFD4(&qword_1009EF310);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  if (!swift_dynamicCast(v11, v13, v2, v3, 6))
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    sub_100010960((uint64_t)v11, &qword_1009DD660);
    return 2;
  }
  sub_100022840(v11, (uint64_t)&v16);
  v4 = v18;
  v5 = v19;
  sub_10003F198(&v16, v18);
  LOBYTE(v4) = dispatch thunk of LibraryAssetInfo.isPurchased.getter(v4, v5);
  sub_10002E418((uint64_t)&v16, (uint64_t)v13);
  if ((v4 & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    v8 = v14;
    v9 = v15;
    sub_10003F198(v13, v14);
    v6 = dispatch thunk of LibraryAssetInfo.isSideloaded.getter(v8, v9);
  }
  _s5Books15CurrentPageViewVwxx_0(v13);
  v7 = v6 & 1;
  _s5Books15CurrentPageViewVwxx_0(&v16);
  return v7;
}

uint64_t sub_100293790(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v10[2];
  uint64_t v11;
  _BYTE v12[40];
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  __int128 v19[2];

  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v13);
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1002995DC((uint64_t)&v13);
LABEL_9:
      v8 = 0;
      return v8 & 1;
    }

    v3 = (__int128 *)&v14;
  }
  else
  {

    v3 = (__int128 *)&v13;
  }
  sub_100022840(v3, (uint64_t)v19);
  sub_100022840(v19, (uint64_t)v12);
  v4 = sub_10004CFD4(&qword_1009EF310);
  v5 = sub_10004CFD4(&qword_1009D6FF0);
  if (!swift_dynamicCast(v10, v12, v4, v5, 6))
  {
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_100010960((uint64_t)v10, &qword_1009DD660);
    goto LABEL_9;
  }
  sub_100022840(v10, (uint64_t)&v13);
  v6 = v15;
  v7 = v16;
  sub_10003F198(&v13, v15);
  v8 = a1(v6, v7);
  _s5Books15CurrentPageViewVwxx_0(&v13);
  return v8 & 1;
}

uint64_t sub_1002938B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v5;
  _QWORD v7[5];
  _BYTE v8[40];
  __int128 v9[2];
  id v10;
  char v11;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v9);
  if (v11)
  {
    v1 = *(void **)&v9[0];
    if (v11 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v9 + 1);
    v5 = type metadata accessor for MSeries(0);
    v4 = swift_dynamicCastClass(v1, v5) != 0;

  }
  else
  {

    sub_100022840(v9, (uint64_t)v8);
    v2 = sub_10004CFD4(&qword_1009EF310);
    v3 = sub_10004CFD4(&qword_1009D7020);
    if ((swift_dynamicCast(v7, v8, v2, v3, 6) & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(v7);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_10029399C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSLocale v11;
  NSString v12;
  id v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21[2];
  uint64_t v22;
  _BYTE v23[40];
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  __int128 v30[2];

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v24);
  if (!v29)
  {

    v15 = (__int128 *)&v24;
LABEL_9:
    sub_100022840(v15, (uint64_t)v30);
    sub_100022840(v30, (uint64_t)v23);
    v16 = sub_10004CFD4(&qword_1009EF310);
    v17 = sub_10004CFD4(&qword_1009D6FF0);
    if (swift_dynamicCast(v21, v23, v16, v17, 6))
    {
      sub_100022840(v21, (uint64_t)&v24);
      v18 = v26;
      v19 = v27;
      sub_10003F198(&v24, v26);
      v14 = dispatch thunk of LibraryAssetInfo.language.getter(v18, v19);
      _s5Books15CurrentPageViewVwxx_0(&v24);
      return v14;
    }
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_100010960((uint64_t)v21, &qword_1009DD660);
    return 0;
  }
  if (v29 != 1)
  {

    v15 = (__int128 *)&v25;
    goto LABEL_9;
  }
  v5 = v24;
  v6 = type metadata accessor for MAsset(0);
  if (!swift_dynamicCastClass(v5, v6))
  {
LABEL_13:

    return 0;
  }
  v7 = v5;
  v8 = MAsset.locale.getter();
  if (!v9)
  {

    goto LABEL_13;
  }
  v10 = v9;
  static Locale.current.getter(v8);
  v11.super.isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v12 = String._bridgeToObjectiveC()();
  v13 = -[objc_class displayNameForKey:value:](v11.super.isa, "displayNameForKey:value:", NSLocaleLanguageCode, v12, swift_bridgeObjectRelease(v10).n128_f64[0]);

  if (!v13)
  {

    return 0;
  }
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

  return v14;
}

uint64_t sub_100293BFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v8;
  _QWORD v9[5];
  char v10;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v8);
  if (!v10)
  {

    _s5Books15CurrentPageViewVwxx_0(&v8);
    return 0;
  }
  v1 = v8;
  if (v10 != 1)
    _s5Books15CurrentPageViewVwxx_0(v9);
  v2 = type metadata accessor for MAsset(0);
  v3 = (void *)swift_dynamicCastClass(v1, v2);
  if (!v3 || (v4 = objc_msgSend(v3, "offer")) == 0)
  {

    return 0;
  }
  v5 = v4;
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  return v6;
}

void sub_100293CE4(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  char v9;

  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v7);
  if (v9)
  {
    v3 = v7;
    if (v9 != 1)
      _s5Books15CurrentPageViewVwxx_0(v8);
    v5 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v3, v5))
    {
      MAsset.offerType.getter();

    }
    else
    {

      v6 = type metadata accessor for MAsset.OfferType(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
    }
  }
  else
  {

    v4 = type metadata accessor for MAsset.OfferType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
    _s5Books15CurrentPageViewVwxx_0(&v7);
  }
}

uint64_t sub_100293DD8()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];
  uint64_t v9;
  _BYTE v10[40];
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  __int128 v17[2];

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v11);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_1002995DC((uint64_t)&v11);
      return 0;
    }

    v1 = (__int128 *)&v12;
  }
  else
  {

    v1 = (__int128 *)&v11;
  }
  sub_100022840(v1, (uint64_t)v17);
  sub_100022840(v17, (uint64_t)v10);
  v2 = sub_10004CFD4(&qword_1009EF310);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  if (!swift_dynamicCast(v8, v10, v2, v3, 6))
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_100010960((uint64_t)v8, &qword_1009DD660);
    return 0;
  }
  sub_100022840(v8, (uint64_t)&v11);
  v4 = v13;
  v5 = v14;
  sub_10003F198(&v11, v13);
  v6 = dispatch thunk of LibraryAssetInfo.filePath.getter(v4, v5);
  _s5Books15CurrentPageViewVwxx_0(&v11);
  return v6;
}

uint64_t sub_100293F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  void (*v36)(char *, char *, uint64_t);
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65[2];
  uint64_t v66;
  _QWORD v67[5];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];
  __int128 v72[2];
  id v73;
  char v74;

  v2 = v1;
  v64 = a1;
  v63 = type metadata accessor for Calendar.Component(0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v57 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v57 - v21;
  sub_1002995A8(v2 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v72);
  if (!v74)
  {

    sub_100022840(v72, (uint64_t)v71);
    sub_10002E418((uint64_t)v71, (uint64_t)v67);
    v24 = sub_10004CFD4(&qword_1009EF310);
    v25 = sub_10004CFD4(&qword_1009D6FF0);
    if ((swift_dynamicCast(v65, v67, v24, v25, 6) & 1) != 0)
    {
      sub_100022840(v65, (uint64_t)v68);
      v26 = v69;
      v27 = v70;
      sub_10003F198(v68, v69);
      dispatch thunk of LibraryAssetInfo.releaseDate.getter(v26, v27);
      v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      v29 = v64;
      if (v28 == 1)
      {
        sub_100010960((uint64_t)v12, &qword_1009D7440);
        _s5Books15CurrentPageViewVwxx_0(v68);
        v30 = 0;
        v31 = 0;
      }
      else
      {
        v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
        v51 = v60;
        static Calendar.current.getter(v50);
        v52 = v61;
        v53 = v63;
        (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v4, enum case for Calendar.Component.year(_:), v63);
        v54 = Calendar.component(_:from:)(v4, v22);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v53);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v51, v62);
        v67[0] = v54;
        v30 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v31 = v55;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
        _s5Books15CurrentPageViewVwxx_0(v68);
      }
    }
    else
    {
      v66 = 0;
      memset(v65, 0, sizeof(v65));
      sub_100010960((uint64_t)v65, &qword_1009DD660);
      v30 = 0;
      v31 = 0;
      v29 = v64;
    }
    ContextActionPublisherInfo.init(name:year:)(0, 0, v30, v31);
    _s5Books15CurrentPageViewVwxx_0(v71);
    goto LABEL_19;
  }
  v23 = *(void **)&v72[0];
  if (v74 != 1)
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)v72 + 1);
  v32 = type metadata accessor for MAsset(0);
  v33 = (void *)swift_dynamicCastClass(v23, v32);
  if (!v33)
  {

    v46 = type metadata accessor for ContextActionPublisherInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v64, 1, 1, v46);
  }
  v34 = objc_msgSend(v33, "releaseDate");
  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    v29 = v64;
    goto LABEL_15;
  }
  v35 = v34;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);

  v36 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v36(v9, v16, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
  v29 = v64;
  if (v37 == 1)
  {
LABEL_15:
    v45 = sub_100010960((uint64_t)v9, &qword_1009D7440);
    v42 = 0;
    v44 = 0;
    goto LABEL_16;
  }
  v38 = ((uint64_t (*)(char *, char *, uint64_t))v36)(v19, v9, v13);
  v39 = v60;
  static Calendar.current.getter(v38);
  v59 = v5;
  v40 = v61;
  v41 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v4, enum case for Calendar.Component.year(_:), v63);
  v58 = Calendar.component(_:from:)(v4, v19);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v41);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v62);
  *(_QWORD *)&v72[0] = v58;
  v42 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v44 = v43;
  v45 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_16:
  v48 = MAsset.publisherName.getter(v45);
  ContextActionPublisherInfo.init(name:year:)(v48, v49, v42, v44);

LABEL_19:
  v56 = type metadata accessor for ContextActionPublisherInfo(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v29, 0, 1, v56);
}

uint64_t sub_1002944DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[40];
  _QWORD v47[5];
  __int128 v48[2];
  void *v49;
  char v50;

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v3);
  v5 = &v46[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v46[-v7 - 8];
  __chkstk_darwin(v9);
  v11 = &v46[-v10 - 8];
  __chkstk_darwin(v12);
  v14 = &v46[-v13 - 8];
  v15 = type metadata accessor for LibraryAudiobookInfo(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v46[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v19 = sub_100290A90();
  v20 = static ContextActionAssetType.== infix(_:_:)(v19, 3);
  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v48);
  if (!v50)
  {
    v22 = v49;
    sub_100022840(v48, (uint64_t)v47);
    sub_10002E418((uint64_t)v47, (uint64_t)v46);
    v23 = sub_10004CFD4(&qword_1009EF310);
    if (swift_dynamicCast(v18, v46, v23, v15, 6))
    {
      (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
      if (v22)
      {
        v24 = objc_msgSend(v22, "audiobookSampleURL");
        if (v24)
        {
          v25 = v24;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

          _s5Books15CurrentPageViewVwxx_0(v47);
          v26 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v14, 0, 1, v26);
        }
        else
        {

          _s5Books15CurrentPageViewVwxx_0(v47);
          v43 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v14, 1, 1, v43);
        }
        v41 = (uint64_t)v14;
        return sub_100025B3C(v41, a1, (uint64_t *)&unk_1009D23D0);
      }
    }
    else if (v22)
    {
      v35 = objc_msgSend(v22, "bookSampleDownloadURL");
      if (v35)
      {
        v36 = v35;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

        _s5Books15CurrentPageViewVwxx_0(v47);
        v37 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v11, 0, 1, v37);
      }
      else
      {

        _s5Books15CurrentPageViewVwxx_0(v47);
        v44 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v11, 1, 1, v44);
      }
      v41 = (uint64_t)v11;
      return sub_100025B3C(v41, a1, (uint64_t *)&unk_1009D23D0);
    }
    _s5Books15CurrentPageViewVwxx_0(v47);
LABEL_20:
    v38 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a1, 1, 1, v38);
  }
  v21 = *(void **)&v48[0];
  if (v50 != 1)
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)v48 + 1);
  v27 = type metadata accessor for MAsset(0);
  v28 = (void *)swift_dynamicCastClass(v21, v27);
  if (!v28)
  {

    goto LABEL_20;
  }
  if ((v20 & 1) != 0)
  {
    v29 = objc_msgSend(v28, "previewURL");
    if (v29)
    {
      v30 = v29;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

      v31 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 0, 1, v31);
    }
    else
    {

      v40 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
    }
    v41 = (uint64_t)v8;
  }
  else
  {
    v32 = objc_msgSend(v28, "bookSampleDownloadURL");
    if (v32)
    {
      v33 = v32;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v32);

      v34 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v5, 0, 1, v34);
    }
    else
    {

      v42 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v5, 1, 1, v42);
    }
    v41 = (uint64_t)v5;
  }
  return sub_100025B3C(v41, a1, (uint64_t *)&unk_1009D23D0);
}

uint64_t sub_10029491C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v13;
  _QWORD v14[5];
  char v15;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v13);
  if (v15)
  {
    v1 = v13;
    if (v15 != 1)
      _s5Books15CurrentPageViewVwxx_0(v14);
    v7 = type metadata accessor for MAsset(0);
    v8 = (void *)swift_dynamicCastClass(v1, v7);
    if (v8)
    {
      v9 = objc_msgSend(v8, "seriesName");
      if (v9)
      {
        v10 = v9;
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

LABEL_11:
        return v6;
      }
    }
    else
    {
      v11 = type metadata accessor for MSeries(0);
      if (swift_dynamicCastClass(v1, v11))
      {
        v6 = MSeries.name.getter();
        goto LABEL_11;
      }
    }

    return 0;
  }

  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider + 32);
  sub_10003F198((_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider + 24));
  v3 = sub_1002909CC();
  v5 = v4;
  v6 = (*(uint64_t (**)(uint64_t))(v2 + 40))(v3);
  swift_bridgeObjectRelease(v5);
  _s5Books15CurrentPageViewVwxx_0(&v13);
  return v6;
}

uint64_t sub_100294A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  id v23;
  char v24;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_shareableURLStringOverride + 8);
  if (v8)
  {
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_shareableURLStringOverride);
  }
  else
  {
    sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v22);
    if (v24)
    {
      v10 = *(void **)&v22[0];
      if (v24 != 1)
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)v22 + 1);
      v14 = type metadata accessor for MAsset(0);
      if (swift_dynamicCastClass(v10, v14))
      {
        v15 = MAsset.url.getter();
      }
      else
      {
        v16 = type metadata accessor for MSeries(0);
        v17 = swift_dynamicCastClass(v10, v16);
        if (!v17)
        {

          v9 = 0;
          goto LABEL_17;
        }
        v15 = MSeries.url.getter(v17);
      }
      v9 = URL.absoluteString.getter(v15);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {

      sub_100022840(v22, (uint64_t)v19);
      v11 = v20;
      v12 = v21;
      sub_10003F198(v19, v20);
      dispatch thunk of LibraryContentInfo.url.getter(v11, v12);
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
      if ((_DWORD)v13 == 1)
      {
        sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D23D0);
        v9 = 0;
      }
      else
      {
        v9 = URL.absoluteString.getter(v13);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      }
      _s5Books15CurrentPageViewVwxx_0(v19);
    }
  }
LABEL_17:
  swift_bridgeObjectRetain(v8);
  return v9;
}

uint64_t (*sub_100294C98(uint64_t *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_100294A6C();
  a1[1] = v3;
  return sub_100294CCC;
}

uint64_t sub_100294CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC5Books16ContextAssetInfo_shareableURLStringOverride;
  v2 = *(_QWORD *)(v1 + 8);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_100294CF0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  const char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint8_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  __int128 v58[2];
  id v59;
  char v60;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LibraryAudiobookSeriesInfo(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LibraryAudiobookInfo(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_100294A6C();
  if (!v15)
  {
    v50 = v10;
    v48 = v9;
    v49 = v6;
    sub_1002995A8((uint64_t)v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v58);
    if (v60)
    {
      v16 = *(void **)&v58[0];
      if (v60 != 1)
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)v58 + 1);
      v26 = type metadata accessor for MAsset(0);
      if (swift_dynamicCastClass(v16, v26))
      {
        v27 = MAsset.url.getter();
LABEL_14:
        v30 = URL.absoluteString.getter(v27);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
        return v30;
      }
      v28 = type metadata accessor for MSeries(0);
      v29 = swift_dynamicCastClass(v16, v28);
      if (v29)
      {
        v27 = MSeries.url.getter(v29);
        goto LABEL_14;
      }

      return 0;
    }

    sub_100022840(v58, (uint64_t)v55);
    if (qword_1009CDDB0 != -1)
      swift_once(&qword_1009CDDB0, sub_10028FFF0);
    v17 = type metadata accessor for Logger(0);
    sub_100048F64(v17, (uint64_t)qword_1009D6F30);
    v18 = v0;
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v53 = v22;
      *(_DWORD *)v21 = 136315138;
      v47 = v21 + 4;
      v23 = sub_1002909CC();
      v25 = v24;
      v51 = sub_100040F58(v23, v24, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v47, v21 + 12);

      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to locate cached share URL for %s. Attempting fallback url.", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

    }
    v31 = v56;
    v32 = v57;
    sub_10003F198(v55, v56);
    v34 = dispatch thunk of LibraryContentInfo.storeID.getter(v31, v32);
    if (!v33)
    {
      _s5Books15CurrentPageViewVwxx_0(v55);
      return v34;
    }
    v35 = v33;
    sub_10002E418((uint64_t)v55, (uint64_t)&v53);
    v36 = sub_10004CFD4(&qword_1009EF310);
    v37 = sub_10004CFD4(&qword_1009D6FF0);
    if (swift_dynamicCast(&v51, &v53, v36, v37, 6))
    {
      _s5Books15CurrentPageViewVwxx_0(&v51);
      sub_10002E418((uint64_t)v55, (uint64_t)&v53);
      v38 = v50;
      if (swift_dynamicCast(v13, &v53, v36, v50, 6))
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v38);
        v53 = 0;
        v54 = 0xE000000000000000;
        _StringGuts.grow(_:)(38);
        swift_bridgeObjectRelease(v54);
        v39 = 0xD000000000000024;
        v40 = "https://books.apple.com/audiobook/id";
      }
      else
      {
        v53 = 0;
        v54 = 0xE000000000000000;
        _StringGuts.grow(_:)(33);
        swift_bridgeObjectRelease(v54);
        v39 = 0xD00000000000001FLL;
        v40 = "https://books.apple.com/book/id";
      }
    }
    else
    {
      sub_10002E418((uint64_t)v55, (uint64_t)&v53);
      v41 = sub_10004CFD4(&qword_1009D7020);
      if (!swift_dynamicCast(&v51, &v53, v36, v41, 6))
      {
        swift_bridgeObjectRelease(v35);
        _s5Books15CurrentPageViewVwxx_0(v55);
        return 0;
      }
      _s5Books15CurrentPageViewVwxx_0(&v51);
      sub_10002E418((uint64_t)v55, (uint64_t)&v53);
      v42 = v48;
      v43 = v36;
      v44 = v49;
      if (swift_dynamicCast(v48, &v53, v43, v49, 6))
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v44);
        v53 = 0;
        v54 = 0xE000000000000000;
        _StringGuts.grow(_:)(43);
        swift_bridgeObjectRelease(v54);
        v39 = 0xD000000000000029;
        v40 = "https://books.apple.com/audiobook-series/";
      }
      else
      {
        v53 = 0;
        v54 = 0xE000000000000000;
        _StringGuts.grow(_:)(38);
        swift_bridgeObjectRelease(v54);
        v39 = 0xD000000000000024;
        v40 = "https://books.apple.com/book-series/";
      }
    }
    v53 = v39;
    v54 = (unint64_t)(v40 - 32) | 0x8000000000000000;
    v45._countAndFlagsBits = v34;
    v45._object = v35;
    String.append(_:)(v45);
    swift_bridgeObjectRelease(v35);
    v30 = v53;
    _s5Books15CurrentPageViewVwxx_0(v55);
    return v30;
  }
  return result;
}

uint64_t sub_100295298()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;
  _QWORD v7[5];
  char v8;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v6);
  if (v8)
  {
    v1 = v6;
    if (v8 != 1)
      _s5Books15CurrentPageViewVwxx_0(v7);
    v3 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v1, v3))
    {
      v4 = v1;
      v2 = dispatch thunk of MResource.socialHighlightID.getter();

    }
    else
    {

      return 0;
    }
  }
  else
  {

    _s5Books15CurrentPageViewVwxx_0(&v6);
    return 0;
  }
  return v2;
}

uint64_t sub_100295364()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  __int128 v16[2];
  id v17;
  char v18;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v16);
  if (v18)
  {
    v1 = *(void **)&v16[0];
    if (v18 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v16 + 1);
    v7 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v1, v7))
    {
      v6 = MAsset.htmlStrippedStandardDescription.getter();

      return v6;
    }

    return 0;
  }

  sub_100022840(v16, (uint64_t)v15);
  sub_10002E418((uint64_t)v15, (uint64_t)v11);
  v2 = sub_10004CFD4(&qword_1009EF310);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  if (!swift_dynamicCast(v9, v11, v2, v3, 6))
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    _s5Books15CurrentPageViewVwxx_0(v15);
    sub_100010960((uint64_t)v9, &qword_1009DD660);
    return 0;
  }
  sub_100022840(v9, (uint64_t)v12);
  v4 = v13;
  v5 = v14;
  sub_10003F198(v12, v13);
  v6 = dispatch thunk of LibraryAssetInfo.description.getter(v4, v5);
  _s5Books15CurrentPageViewVwxx_0(v15);
  _s5Books15CurrentPageViewVwxx_0(v12);
  return v6;
}

uint64_t sub_1002954D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  __int128 v14[2];
  id v15;
  char v16;

  v1 = sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v14);
  if (v16)
  {
    v2 = *(void **)&v14[0];
    if (v16 != 1)
      v1 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)v14 + 1);
    v5 = MResource.id.getter(v1);
    v7 = v8;

  }
  else
  {

    sub_100022840(v14, (uint64_t)v11);
    v3 = v12;
    v4 = v13;
    sub_10003F198(v11, v12);
    v5 = dispatch thunk of LibraryContentInfo.storeID.getter(v3, v4);
    v7 = v6;
    _s5Books15CurrentPageViewVwxx_0(v11);
    if (!v7)
      return 0;
  }
  *(_QWORD *)&v14[0] = v5;
  *((_QWORD *)&v14[0] + 1) = v7;
  v9 = sub_1001F15BC();
  if ((Collection.isNotEmpty.getter(&type metadata for String, v9) & 1) == 0)
  {
    swift_bridgeObjectRelease(v7);
    return 0;
  }
  return v5;
}

uint64_t sub_1002955D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  id v20;
  id v21[5];
  char v22;
  __int128 v23[2];

  v1 = sub_10004CFD4(&qword_1009D6FF8);
  __chkstk_darwin(v1);
  v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LibraryAudiobookInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v20);
  if (!v22)
  {

    v12 = &v20;
    goto LABEL_8;
  }
  if (v22 != 1)
  {

    v12 = v21;
LABEL_8:
    sub_100022840((__int128 *)v12, (uint64_t)v23);
    sub_100022840(v23, (uint64_t)&v20);
    v13 = sub_10004CFD4(&qword_1009EF310);
    v14 = swift_dynamicCast(v3, &v20, v13, v4, 6);
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    if (v14)
    {
      v15(v3, 0, 1, v4);
      v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v17 = LibraryAudiobookInfo.supplementalContents.getter(v16);
      if (v17)
      {
        v11 = *(_QWORD *)(v17 + 16);
        v18 = swift_bridgeObjectRelease(v17);
      }
      else
      {
        v11 = 0;
      }
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v18);
    }
    else
    {
      v15(v3, 1, 1, v4);
      sub_100010960((uint64_t)v3, &qword_1009D6FF8);
      return 0;
    }
    return v11;
  }
  v8 = v20;
  v9 = type metadata accessor for MAsset(0);
  v10 = (void *)swift_dynamicCastClass(v8, v9);
  if (v10)
    objc_msgSend(v10, "hasSupplementalContent");

  return 0;
}

uint64_t sub_1002957D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  __int128 v12[2];
  id v13;
  char v14;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v12);
  if (v14)
  {
    v1 = *(void **)&v12[0];
    if (v14 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v12 + 1);
    v5 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v1, v5))
    {
      v6 = MAsset.name.getter();
    }
    else
    {
      v7 = type metadata accessor for MSeries(0);
      if (!swift_dynamicCastClass(v1, v7))
      {

        return 0;
      }
      v6 = MSeries.name.getter();
    }
    v4 = v6;

  }
  else
  {

    sub_100022840(v12, (uint64_t)v9);
    v2 = v10;
    v3 = v11;
    sub_10003F198(v9, v10);
    v4 = dispatch thunk of LibraryContentInfo.title.getter(v2, v3);
    _s5Books15CurrentPageViewVwxx_0(v9);
  }
  return v4;
}

uint64_t sub_1002958E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  __int128 *v15;
  __int128 v17[2];
  uint64_t v18;
  _BYTE v19[40];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25[2];
  id v26;
  char v27;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v25);
  if (v27)
  {
    v1 = *(void **)&v25[0];
    if (v27 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v25 + 1);
    v8 = type metadata accessor for MAsset(0);
    if (!swift_dynamicCastClass(v1, v8) || (v9 = MAsset.versionHistory.getter()) == 0)
    {

      return 0;
    }
    v10 = v9;
    if (!*(_QWORD *)(v9 + 16))
    {

      swift_bridgeObjectRelease(v10);
      return 0;
    }
    v11 = *(_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRelease(v10);
    strcpy((char *)v20, "versionString");
    HIWORD(v20[1]) = -4864;
    AnyHashable.init<A>(_:)(v20, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v11 + 16) && (v12 = sub_1000561E8((uint64_t)v25), (v13 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v23);
    }
    else
    {
      v23 = 0u;
      v24 = 0u;
    }
    swift_bridgeObjectRelease(v11);

    sub_1000569AC((uint64_t)v25);
    if (*((_QWORD *)&v24 + 1))
    {
      if ((swift_dynamicCast(v20, &v23, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        return v20[0];
      return 0;
    }
    v14 = (uint64_t *)&unk_1009D04E0;
    v15 = &v23;
LABEL_23:
    sub_100010960((uint64_t)v15, v14);
    return 0;
  }

  sub_100022840(v25, (uint64_t)&v23);
  sub_10002E418((uint64_t)&v23, (uint64_t)v19);
  v2 = sub_10004CFD4(&qword_1009EF310);
  v3 = sub_10004CFD4(&qword_1009D6FF0);
  if ((swift_dynamicCast(v17, v19, v2, v3, 6) & 1) == 0)
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    _s5Books15CurrentPageViewVwxx_0(&v23);
    v14 = &qword_1009DD660;
    v15 = v17;
    goto LABEL_23;
  }
  sub_100022840(v17, (uint64_t)v20);
  v4 = v21;
  v5 = v22;
  sub_10003F198(v20, v21);
  v6 = dispatch thunk of LibraryAssetInfo.versionNumber.getter(v4, v5);
  if ((v6 & 0x100000000) != 0)
  {
    _s5Books15CurrentPageViewVwxx_0(&v23);
    _s5Books15CurrentPageViewVwxx_0(v20);
    return 0;
  }
  v7 = Float.description.getter(*(float *)&v6);
  _s5Books15CurrentPageViewVwxx_0(&v23);
  _s5Books15CurrentPageViewVwxx_0(v20);
  return v7;
}

uint64_t sub_100295B60(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 88) = v2;
  *(double *)(v3 + 72) = a1;
  *(double *)(v3 + 80) = a2;
  v4 = type metadata accessor for MenuCoverImageSource(0);
  *(_QWORD *)(v3 + 96) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 104) = v5;
  *(_QWORD *)(v3 + 112) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100295BC4, 0, 0);
}

uint64_t sub_100295BC4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  double v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  id v23;
  id v24;

  v1 = (_QWORD *)(v0 + 16);
  sub_1002995A8(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, v0 + 16);
  if (!*(_BYTE *)(v0 + 64))
  {

LABEL_7:
    v17 = *(double *)(v0 + 72);
    v16 = *(double *)(v0 + 80);
    _s5Books15CurrentPageViewVwxx_0(v1);
    v18 = (void *)objc_opt_self(BKLibraryManager);
    sub_1002909CC();
    v20 = v19;
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v22 = objc_msgSend(v18, "fetchImageForAssetID:size:includeSpine:coverEffectsEnvironment:", v21, 0, 0, CGSizeScaleToScreen(v17, v16));

    v23 = objc_msgSend(v22, "CGImage");
    v24 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v23);

    goto LABEL_8;
  }
  if (*(_BYTE *)(v0 + 64) != 1)
  {

    v1 = (_QWORD *)(v0 + 24);
    goto LABEL_7;
  }
  v2 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = type metadata accessor for MAsset(0);
  v4 = swift_dynamicCastClass(v2, v3);
  if (v4)
  {
    v5 = v4;
    v7 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = (_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC5Books16ContextAssetInfo_coverImageProvider);
    v10 = v9[3];
    v11 = v9[4];
    sub_10003F198(v9, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, enum case for MenuCoverImageSource.network(_:), v8);
    v12 = async function pointer to dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)[1];
    v13 = v2;
    v14 = (_QWORD *)swift_task_alloc(v12);
    *(_QWORD *)(v0 + 128) = v14;
    *v14 = v0;
    v14[1] = sub_100295DE8;
    return dispatch thunk of MenuCoverImageProviding.image(for:from:size:includeSpine:)(v5, *(_QWORD *)(v0 + 112), 0, v10, v11, *(double *)(v0 + 72), *(double *)(v0 + 80));
  }

  v24 = 0;
LABEL_8:
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(id))(v0 + 8))(v24);
}

uint64_t sub_100295DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = a1;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_100295E64, 0, 0);
}

uint64_t sub_100295E64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 120);

  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

id sub_100295EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  char v47;
  _QWORD *v48;
  double v49;
  uint64_t v50;
  void *v51;
  void *v52;
  double v53;
  char v54;
  _QWORD *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  double v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char v75;
  _QWORD *v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  double v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char v90;
  uint64_t v91;
  __n128 v92;
  double v93;
  char v94;
  double v95;
  uint64_t v96;
  char v97;
  double v98;
  _QWORD *v99;
  double v100;
  _QWORD *v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  Class isa;
  uint64_t v110;
  double v111;
  uint64_t v112;
  _QWORD *v113;
  id v114;
  char v115;
  _QWORD *v116;
  _BYTE v117[32];
  _QWORD *v118;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MResourceType(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v14 = COERCE_DOUBLE(sub_1002954D4());
  if (!v15)
    return 0;
  v113 = &type metadata for String;
  v111 = *(double *)&v14;
  v112 = v15;
  sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  v116 = _swiftEmptyDictionarySingleton;
  sub_1002C3C98((uint64_t)v117, 0x444965726F7473, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  v118 = v116;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1002944DC((uint64_t)v13);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2);
  if ((_DWORD)v17 == 1)
  {
    sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009D23D0);
    sub_1002BDA40(0xD000000000000011, 0x80000001007BB120, &v111);
    sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
  }
  else
  {
    *(double *)&v19 = COERCE_DOUBLE(URL.absoluteString.getter(v17));
    v113 = &type metadata for String;
    v111 = *(double *)&v19;
    v112 = v20;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v21 = v118;
    v22 = swift_isUniquelyReferenced_nonNull_native(v118);
    v116 = v21;
    sub_1002C3C98((uint64_t)v117, 0xD000000000000011, 0x80000001007BB120, v22);
    v118 = v116;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  *(double *)&v23 = COERCE_DOUBLE(sub_1002957D0());
  if (v24)
  {
    v113 = &type metadata for String;
    v111 = *(double *)&v23;
    v112 = v24;
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v25 = v118;
    v26 = swift_isUniquelyReferenced_nonNull_native(v118);
    v116 = v25;
    sub_1002C3C98((uint64_t)v117, 0x656C746974, 0xE500000000000000, v26);
    v118 = v116;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_1002BDA40(0x656C746974, 0xE500000000000000, &v111);
    sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
  }
  *(double *)&v27 = COERCE_DOUBLE(sub_1002910AC());
  if (v28)
  {
    v113 = &type metadata for String;
    v111 = *(double *)&v27;
    v112 = v28;
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v29 = v118;
    v30 = swift_isUniquelyReferenced_nonNull_native(v118);
    v116 = v29;
    sub_1002C3C98((uint64_t)v117, 0x726F68747561, 0xE600000000000000, v30);
    v118 = v116;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  else
  {
    sub_1002BDA40(0x726F68747561, 0xE600000000000000, &v111);
    sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
  }
  *(double *)&v31 = COERCE_DOUBLE(sub_10029121C());
  if ((v32 & 1) != 0)
  {
    sub_1002BDA40(0x5265676172657661, 0xED0000676E697461, &v111);
    sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
  }
  else
  {
    v113 = &type metadata for Double;
    v111 = *(double *)&v31;
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v33 = v118;
    v34 = swift_isUniquelyReferenced_nonNull_native(v118);
    v116 = v33;
    sub_1002C3C98((uint64_t)v117, 0x5265676172657661, 0xED0000676E697461, v34);
    v118 = v116;
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v35 = sub_100290A90();
  v36 = static ContextActionAssetType.== infix(_:_:)(v35, 3);
  v37 = (unsigned int *)&enum case for MResourceType.audiobooks(_:);
  if ((v36 & 1) == 0)
    v37 = (unsigned int *)&enum case for MResourceType.books(_:);
  v38 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v37, v7);
  *(double *)&v39 = COERCE_DOUBLE(MResourceType.name.getter(v38));
  v41 = v40;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v113 = &type metadata for String;
  v111 = *(double *)&v39;
  v112 = v41;
  sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
  v42 = v118;
  v43 = swift_isUniquelyReferenced_nonNull_native(v118);
  v116 = v42;
  sub_1002C3C98((uint64_t)v117, 1684957547, 0xE400000000000000, v43);
  v44 = v116;
  swift_bridgeObjectRelease(0x8000000000000000);
  v45 = sub_100290A90();
  v46 = static ContextActionAssetType.== infix(_:_:)(v45, 3);
  v113 = &type metadata for Bool;
  LOBYTE(v111) = v46 & 1;
  sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
  v47 = swift_isUniquelyReferenced_nonNull_native(v44);
  v116 = v44;
  sub_1002C3C98((uint64_t)v117, 0x626F696475417369, 0xEB000000006B6F6FLL, v47);
  v48 = v116;
  v118 = v116;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v111);
  if (!v115)
  {

    _s5Books15CurrentPageViewVwxx_0(&v111);
LABEL_45:
    swift_bridgeObjectRetain(v48);
    sub_100296A28(v103);
    v105 = v104;
    swift_bridgeObjectRelease_n(v48, 2);
    v106 = sub_1004EC9E0(v105);
    swift_bridgeObjectRelease(v105);
    v107 = objc_allocWithZone((Class)BSUIItemDescription);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v107, "initWithDictionary:", isa, swift_bridgeObjectRelease(v106).n128_f64[0]);

    return v18;
  }
  v49 = v111;
  if (v115 != 1)
    _s5Books15CurrentPageViewVwxx_0(&v112);
  v50 = type metadata accessor for MAsset(0);
  v51 = (void *)swift_dynamicCastClass(*(_QWORD *)&v49, v50);
  if (v51)
  {
    v52 = v51;
    v53 = COERCE_DOUBLE(objc_msgSend(v51, "ratingCount"));
    v113 = &type metadata for UInt;
    v111 = v53;
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v54 = swift_isUniquelyReferenced_nonNull_native(v48);
    v116 = v48;
    sub_1002C3C98((uint64_t)v117, 0x6F43676E69746172, 0xEB00000000746E75, v54);
    v55 = v116;
    v118 = v116;
    v56 = swift_bridgeObjectRelease(0x8000000000000000);
    *(double *)&v57 = COERCE_DOUBLE(MAsset.actionText(for:)(1, v56));
    if (v58)
    {
      v113 = &type metadata for String;
      v111 = *(double *)&v57;
      v112 = v58;
      sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
      v59 = swift_isUniquelyReferenced_nonNull_native(v55);
      v116 = v55;
      sub_1002C3C98((uint64_t)v117, 0x74536E6F69746361, 0xEC000000676E6972, v59);
      v118 = v116;
      *(_QWORD *)&v60 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
    }
    else
    {
      sub_1002BDA40(0x74536E6F69746361, 0xEC000000676E6972, &v111);
      sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
    }
    v61 = objc_msgSend(v52, "priceFormatted", v60);
    if (v61)
    {
      v62 = v61;
      *(double *)&v63 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v61));
      v65 = v64;

      v113 = &type metadata for String;
      v111 = *(double *)&v63;
      v112 = v65;
      sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
      v66 = v118;
      v67 = swift_isUniquelyReferenced_nonNull_native(v118);
      v116 = v66;
      sub_1002C3C98((uint64_t)v117, 0x7274536563697270, 0xEB00000000676E69, v67);
      v118 = v116;
      v69 = swift_bridgeObjectRelease(0x8000000000000000);
    }
    else
    {
      sub_1002BDA40(0x7274536563697270, 0xEB00000000676E69, &v111);
      v68 = sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
    }
    v70 = MAsset.url.getter(v68, v69);
    *(double *)&v71 = COERCE_DOUBLE(URL.absoluteString.getter(v70));
    v73 = v72;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v113 = &type metadata for String;
    v111 = *(double *)&v71;
    v112 = v73;
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v74 = v118;
    v75 = swift_isUniquelyReferenced_nonNull_native(v118);
    v116 = v74;
    sub_1002C3C98((uint64_t)v117, 0x55746375646F7270, 0xEA00000000004C52, v75);
    v76 = v116;
    v118 = v116;
    v77 = objc_msgSend(v52, "artworkURL", swift_bridgeObjectRelease(0x8000000000000000).n128_f64[0]);
    if (v77)
    {
      v78 = v77;
      *(double *)&v79 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v77));
      v81 = v80;

      v113 = &type metadata for String;
      v111 = *(double *)&v79;
      v112 = v81;
      sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
      v82 = swift_isUniquelyReferenced_nonNull_native(v76);
      v116 = v76;
      sub_1002C3C98((uint64_t)v117, 0xD000000000000012, 0x80000001007BB140, v82);
      v118 = v116;
      *(_QWORD *)&v83 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
    }
    else
    {
      sub_1002BDA40(0xD000000000000012, 0x80000001007BB140, &v111);
      sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
    }
    v84 = objc_msgSend(v52, "buyParams", v83);
    if (v84)
    {
      v85 = v84;
      *(double *)&v86 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v84));
      v88 = v87;

      v113 = &type metadata for String;
      v111 = *(double *)&v86;
      v112 = v88;
      sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
      v89 = v118;
      v90 = swift_isUniquelyReferenced_nonNull_native(v118);
      v116 = v89;
      sub_1002C3C98((uint64_t)v117, 0x6D61726150797562, 0xED00007372657465, v90);
      v118 = v116;
      v92 = swift_bridgeObjectRelease(0x8000000000000000);
    }
    else
    {
      sub_1002BDA40(0x6D61726150797562, 0xED00007372657465, &v111);
      v91 = sub_100010960((uint64_t)&v111, &qword_1009D6FC0);
    }
    v93 = COERCE_DOUBLE(MAsset.width.getter(v91, v92));
    if ((v94 & 1) != 0)
      v95 = 0.0;
    else
      v95 = v93;
    *(double *)&v96 = COERCE_DOUBLE(MAsset.height.getter());
    if (v95 <= 0.0)
    {
      v100 = 1.5;
      v99 = &type metadata for Double;
    }
    else
    {
      v98 = *(double *)&v96;
      if ((v97 & 1) != 0)
        v98 = 0.0;
      v99 = &type metadata for CGFloat;
      v100 = v98 / v95;
    }
    v113 = v99;
    v111 = v100;
    sub_100025B3C((uint64_t)&v111, (uint64_t)v117, (uint64_t *)&unk_1009D04E0);
    v101 = v118;
    v102 = swift_isUniquelyReferenced_nonNull_native(v118);
    v116 = v101;
    sub_1002C3C98((uint64_t)v117, 0x416B726F77747261, 0xED00007463657073, v102);
    v48 = v116;

    swift_bridgeObjectRelease(0x8000000000000000);
    goto LABEL_45;
  }
  swift_bridgeObjectRelease(v48);

  return 0;
}

void sub_100296A28(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  __int128 *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[3];
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];
  _QWORD *v41;
  uint64_t *v42;

  v2 = _swiftEmptyDictionarySingleton;
  v41 = _swiftEmptyDictionarySingleton;
  v31 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v3) >> 6;
  v42 = &v35;
  swift_bridgeObjectRetain(a1);
  v6 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v6 << 6);
      goto LABEL_25;
    }
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v10 >= v30)
      goto LABEL_40;
    v11 = *(_QWORD *)(v31 + 8 * v10);
    v12 = v6 + 1;
    if (!v11)
    {
      v12 = v6 + 2;
      if (v6 + 2 >= v30)
        goto LABEL_40;
      v11 = *(_QWORD *)(v31 + 8 * v12);
      if (!v11)
      {
        v12 = v6 + 3;
        if (v6 + 3 >= v30)
          goto LABEL_40;
        v11 = *(_QWORD *)(v31 + 8 * v12);
        if (!v11)
        {
          v12 = v6 + 4;
          if (v6 + 4 >= v30)
            goto LABEL_40;
          v11 = *(_QWORD *)(v31 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v6 = v12;
LABEL_25:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v16 = *v14;
    v15 = v14[1];
    sub_10000B5E4(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)v40, (uint64_t *)&unk_1009D04E0);
    *(_QWORD *)&v39 = v16;
    *((_QWORD *)&v39 + 1) = v15;
    v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_10000B5E4((uint64_t)v38, (uint64_t)&v32, (uint64_t *)&unk_1009D04E0);
    if (v33)
    {
      sub_10004CFC4(&v32, v36);
      v17 = v37;
      v34[2] = v37;
      sub_100025B3C((uint64_t)v38, (uint64_t)v42, (uint64_t *)&unk_1009D04E0);
      sub_10004CFC4(v36, v34);
      v18 = v2[2];
      if (v2[3] <= v18)
      {
        v19 = v18 + 1;
        swift_bridgeObjectRetain(v15);
        sub_10037A77C(v19, 1);
        v2 = v41;
      }
      else
      {
        swift_bridgeObjectRetain(v15);
      }
      Hasher.init(_seed:)(&v32, v2[5]);
      String.hash(into:)(&v32, v17, *((_QWORD *)&v17 + 1));
      v20 = Hasher._finalize()();
      v21 = v2 + 8;
      v22 = -1 << *((_BYTE *)v2 + 32);
      v23 = v20 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~v2[(v23 >> 6) + 8]) != 0)
      {
        v25 = __clz(__rbit64((-1 << v23) & ~v2[(v23 >> 6) + 8])) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = v21[v24];
        }
        while (v29 == -1);
        v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      }
      *(_QWORD *)((char *)v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(_OWORD *)(v2[6] + 16 * v25) = v17;
      sub_10004CFC4(v34, (_OWORD *)(v2[7] + 32 * v25));
      ++v2[2];
      v7 = (__int128 *)v42;
    }
    else
    {
      swift_bridgeObjectRetain(v15);
      sub_100010960((uint64_t)&v37, &qword_1009E4000);
      v7 = &v32;
    }
    sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D04E0);
  }
  v13 = v6 + 5;
  if (v6 + 5 >= v30)
  {
LABEL_40:
    sub_100299C3C(a1);
    return;
  }
  v11 = *(_QWORD *)(v31 + 8 * v13);
  if (v11)
  {
    v12 = v6 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      goto LABEL_40;
    v11 = *(_QWORD *)(v31 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_100296DF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v9;
  _QWORD v10[5];
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  sub_100290490(&v9);
  if (v10[2])
  {
    v3 = sub_10004CFD4(&qword_1009EF310);
    v4 = sub_10004CFD4(&qword_1009D6FF0);
    if ((swift_dynamicCast(&v12, &v9, v3, v4, 6) & 1) == 0)
    {
      v14 = 0;
      v12 = 0u;
      v13 = 0u;
    }
  }
  else
  {
    sub_100010960((uint64_t)&v9, &qword_1009E8A20);
    v12 = 0u;
    v13 = 0u;
    v14 = 0;
  }
  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v9);
  if (v11)
  {
    v5 = v9;
    if (v11 != 1)
      _s5Books15CurrentPageViewVwxx_0(v10);
    v7 = type metadata accessor for MAsset(0);
    v6 = (void *)swift_dynamicCastClass(v5, v7);
    if (!v6)

  }
  else
  {

    _s5Books15CurrentPageViewVwxx_0(&v9);
    v6 = 0;
  }
  static ContentInfoUtilities.assetInfo(libraryAssetInfo:storeAsset:)(a1, &v12, v6);

  return sub_100010960((uint64_t)&v12, &qword_1009DD660);
}

uint64_t sub_100296F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  id v80;
  uint64_t v81;
  _OWORD *v82;
  id v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  id v91;
  void *v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t (*v106)(char *, _QWORD, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(void);
  __int128 *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  __int128 *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  void *v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t *v155;
  unint64_t v156;
  uint64_t v157;
  id v158;
  _QWORD v160[2];
  __int128 v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  _QWORD v176[5];
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  void *v181;
  uint64_t v182;
  void *v183;
  char v184;

  v0 = type metadata accessor for MCatalogServiceConfig(0);
  __chkstk_darwin(v0);
  v170 = (char *)v160 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for URL(0);
  v171 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v3 = (char *)v160 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v160 - v6;
  v8 = type metadata accessor for MResourceType(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v12);
  v14 = (char *)v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v160 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)v160 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)v160 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)v160 - v25;
  sub_1002995A8(v172 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v181);
  if (!v184)
  {
    v168 = v23;
    v165 = v26;
    v166 = v11;
    v167 = v9;
    v172 = v8;
    v163 = v20;
    v164 = v14;
    v28 = v183;
    if (!v183)
    {
      _s5Books15CurrentPageViewVwxx_0(&v181);
      return 0;
    }
    v160[1] = v3;
    v162 = v17;
    v160[0] = v7;
    v29 = sub_10004CFD4(&qword_1009D6FA8);
    v30 = swift_allocObject(v29, 824, 7);
    *(_OWORD *)(v30 + 16) = xmmword_1007168A0;
    strcpy((char *)v176, "artistName");
    BYTE3(v176[1]) = 0;
    HIDWORD(v176[1]) = -369098752;
    v31 = v28;
    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
    v32 = objc_msgSend(v31, "author");
    if (v32)
    {
      v33 = v32;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v36 = v35;

      v37 = &type metadata for String;
    }
    else
    {
      v34 = 0;
      v36 = 0;
      v37 = 0;
      *(_QWORD *)(v30 + 88) = 0;
    }
    *(_QWORD *)(v30 + 72) = v34;
    *(_QWORD *)(v30 + 80) = v36;
    *(_QWORD *)(v30 + 96) = v37;
    strcpy((char *)v176, "artwork");
    v176[1] = 0xE700000000000000;
    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
    v40 = String._bridgeToObjectiveC()();
    v41 = objc_msgSend(v31, "objectForKey:", v40);

    if (v41)
    {
      _bridgeAnyObjectToAny(_:)(v41);
      swift_unknownObjectRelease(v41);
    }
    else
    {
      v179 = 0u;
      v180 = 0u;
    }
    sub_100025B3C((uint64_t)&v179, v30 + 144, (uint64_t *)&unk_1009D04E0);
    strcpy((char *)v176, "description");
    HIDWORD(v176[1]) = -352321536;
    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
    v42 = objc_msgSend(v31, "standardDescription");
    if (v42)
    {
      v43 = v42;
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v46 = v45;

      v47 = &type metadata for String;
    }
    else
    {
      v44 = 0;
      v46 = 0;
      v47 = 0;
      *(_QWORD *)(v30 + 232) = 0;
    }
    *(_QWORD *)(v30 + 216) = v44;
    *(_QWORD *)(v30 + 224) = v46;
    *(_QWORD *)(v30 + 240) = v47;
    strcpy((char *)v176, "isIBook");
    v176[1] = 0xE700000000000000;
    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
    v48 = objc_msgSend(v31, "ebookInfo");
    if (v48)
    {
      v49 = v48;
      v50 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v48, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v173 = 0x6B6F6F42697369;
      v174 = 0xE700000000000000;
      AnyHashable.init<A>(_:)(&v173, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v50 + 16) && (v51 = sub_1000561E8((uint64_t)v176), (v52 & 1) != 0))
      {
        sub_10004CD0C(*(_QWORD *)(v50 + 56) + 32 * v51, (uint64_t)&v177);
      }
      else
      {
        v177 = 0u;
        v178 = 0u;
      }
      swift_bridgeObjectRelease(v50);
      sub_1000569AC((uint64_t)v176);
      if (*((_QWORD *)&v178 + 1))
      {
        if ((swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
        {
          v53 = v176[0];
          *(_QWORD *)(v30 + 312) = &type metadata for Bool;
          *(_BYTE *)(v30 + 288) = v53;
          goto LABEL_29;
        }
LABEL_28:
        *(_OWORD *)(v30 + 288) = 0u;
        *(_OWORD *)(v30 + 304) = 0u;
LABEL_29:
        v176[0] = 1701667182;
        v176[1] = 0xE400000000000000;
        AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
        v54 = objc_msgSend(v31, "title");
        if (v54)
        {
          v55 = v54;
          v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v58 = v57;

          v59 = &type metadata for String;
        }
        else
        {
          v56 = 0;
          v58 = 0;
          v59 = 0;
          *(_QWORD *)(v30 + 376) = 0;
        }
        *(_QWORD *)(v30 + 360) = v56;
        *(_QWORD *)(v30 + 368) = v58;
        *(_QWORD *)(v30 + 384) = v59;
        v176[0] = 0x73726566666FLL;
        v176[1] = 0xE600000000000000;
        AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
        v60 = sub_10004CFD4(&qword_1009D6FB0);
        v61 = swift_allocObject(v60, 40, 7);
        v161 = xmmword_10070CCA0;
        *(_OWORD *)(v61 + 16) = xmmword_10070CCA0;
        v62 = objc_msgSend(v31, "offer");
        if (v62)
        {
          v63 = v62;
          v64 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v62, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        }
        else
        {
          v64 = 0;
        }
        *(_QWORD *)(v61 + 32) = v64;
        *(_QWORD *)(v30 + 456) = sub_10004CFD4(&qword_1009D6FB8);
        *(_QWORD *)(v30 + 432) = v61;
        strcpy((char *)v176, "pageCount");
        WORD1(v176[1]) = 0;
        HIDWORD(v176[1]) = -385875968;
        AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
        v65 = objc_msgSend(v31, "ebookInfo");
        if (v65)
        {
          v66 = v65;
          v67 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v65, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          v173 = 0x6E756F4365676170;
          v174 = 0xE900000000000074;
          AnyHashable.init<A>(_:)(&v173, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v67 + 16) && (v68 = sub_1000561E8((uint64_t)v176), (v69 & 1) != 0))
          {
            sub_10004CD0C(*(_QWORD *)(v67 + 56) + 32 * v68, (uint64_t)&v177);
          }
          else
          {
            v177 = 0u;
            v178 = 0u;
          }
          v70 = v166;
          swift_bridgeObjectRelease(v67);
          sub_1000569AC((uint64_t)v176);
          if (*((_QWORD *)&v178 + 1))
          {
            if ((swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
            {
              v71 = v176[0];
              *(_QWORD *)(v30 + 528) = &type metadata for Int;
              *(_QWORD *)(v30 + 504) = v71;
              goto LABEL_46;
            }
LABEL_45:
            *(_OWORD *)(v30 + 504) = 0u;
            *(_OWORD *)(v30 + 520) = 0u;
LABEL_46:
            strcpy((char *)v176, "primaryLocale");
            HIWORD(v176[1]) = -4864;
            AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
            v72 = objc_msgSend(v31, "ebookInfo");
            if (v72)
            {
              v73 = v72;
              v74 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v72, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

              v173 = 0xD000000000000015;
              v174 = 0x80000001007BB100;
              AnyHashable.init<A>(_:)(&v173, &type metadata for String, &protocol witness table for String);
              if (*(_QWORD *)(v74 + 16) && (v75 = sub_1000561E8((uint64_t)v176), (v76 & 1) != 0))
              {
                sub_10004CD0C(*(_QWORD *)(v74 + 56) + 32 * v75, (uint64_t)&v177);
              }
              else
              {
                v177 = 0u;
                v178 = 0u;
              }
              swift_bridgeObjectRelease(v74);
              sub_1000569AC((uint64_t)v176);
              if (*((_QWORD *)&v178 + 1))
              {
                if ((swift_dynamicCast(v176, &v177, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
                {
                  v77 = v176[0];
                  v78 = v176[1];
                  *(_QWORD *)(v30 + 600) = &type metadata for String;
                  *(_QWORD *)(v30 + 576) = v77;
                  *(_QWORD *)(v30 + 584) = v78;
                  goto LABEL_57;
                }
LABEL_56:
                *(_OWORD *)(v30 + 576) = 0u;
                *(_OWORD *)(v30 + 592) = 0u;
LABEL_57:
                strcpy((char *)v176, "releaseDate");
                HIDWORD(v176[1]) = -352321536;
                AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                v79 = String._bridgeToObjectiveC()();
                v80 = objc_msgSend(v31, "objectForKey:", v79);

                if (v80)
                {
                  _bridgeAnyObjectToAny(_:)(v80);
                  swift_unknownObjectRelease(v80);
                }
                else
                {
                  v177 = 0u;
                  v178 = 0u;
                }
                v81 = (uint64_t)v168;
                sub_100025B3C((uint64_t)&v177, v30 + 648, (uint64_t *)&unk_1009D04E0);
                v82 = (_OWORD *)(v30 + 720);
                strcpy((char *)v176, "seriesInfo");
                BYTE3(v176[1]) = 0;
                HIDWORD(v176[1]) = -369098752;
                AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                v83 = objc_msgSend(v31, "ebookInfo");
                if (v83)
                {
                  v84 = v83;
                  v85 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v83, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

                  v173 = 0x6E49736569726573;
                  v174 = 0xEA00000000006F66;
                  AnyHashable.init<A>(_:)(&v173, &type metadata for String, &protocol witness table for String);
                  if (*(_QWORD *)(v85 + 16) && (v86 = sub_1000561E8((uint64_t)v176), (v87 & 1) != 0))
                  {
                    sub_10004CD0C(*(_QWORD *)(v85 + 56) + 32 * v86, v30 + 720);
                  }
                  else
                  {
                    *v82 = 0u;
                    *(_OWORD *)(v30 + 736) = 0u;
                  }
                  v88 = v169;
                  v89 = (_QWORD *)v171;
                  v90 = (uint64_t)v165;
                  swift_bridgeObjectRelease(v85);
                  sub_1000569AC((uint64_t)v176);
                }
                else
                {
                  *v82 = 0u;
                  *(_OWORD *)(v30 + 736) = 0u;
                  v88 = v169;
                  v89 = (_QWORD *)v171;
                  v90 = (uint64_t)v165;
                }
                v176[0] = 7107189;
                v176[1] = 0xE300000000000000;
                AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                v91 = objc_msgSend(v31, "productShortURL");
                if (v91)
                {
                  v92 = v91;
                  static URL._unconditionallyBridgeFromObjectiveC(_:)(v91);

                  v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89[7];
                  v93(v81, 0, 1, v88);
                }
                else
                {
                  v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89[7];
                  v93(v81, 1, 1, v88);
                }
                sub_100025B3C(v81, v90, (uint64_t *)&unk_1009D23D0);
                v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v89[6];
                v95 = v94(v90, 1, v88);
                if ((_DWORD)v95 == 1)
                {
                  sub_100010960(v90, (uint64_t *)&unk_1009D23D0);
                  v96 = (uint64_t *)(v30 + 792);
                  *(_QWORD *)(v30 + 816) = &type metadata for String;
                }
                else
                {
                  v97 = URL.absoluteString.getter(v95);
                  v98 = v88;
                  v99 = v97;
                  v101 = v100;
                  v102 = (void (*)(uint64_t, uint64_t))v89[1];
                  v103 = v98;
                  v102(v90, v98);
                  v96 = (uint64_t *)(v30 + 792);
                  *(_QWORD *)(v30 + 816) = &type metadata for String;
                  if (v101)
                  {
                    *v96 = v99;
                    v88 = v103;
                    v104 = v167;
                    goto LABEL_76;
                  }
                  v88 = v103;
                }
                v104 = v167;
                *v96 = 0;
                v101 = 0xE000000000000000;
LABEL_76:
                *(_QWORD *)(v30 + 800) = v101;
                v173 = sub_1001DA9E4(v30);
                v105 = objc_msgSend(v31, "isAudiobook");
                v106 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v104 + 104);
                if (v105)
                {
                  v107 = v172;
                  v108 = v106(v70, enum case for MResourceType.audiobooks(_:), v172);
                  v109 = MResourceType.name.getter(v108);
                  v111 = v110;
                  (*(void (**)(char *, uint64_t))(v104 + 8))(v70, v107);
                  v112 = objc_msgSend(v31, "audiobookSampleURL");
                  if (v112)
                  {
                    v113 = v112;
                    v114 = v111;
                    static URL._unconditionallyBridgeFromObjectiveC(_:)(v112);

                    v115 = v171;
                    v116 = *(void (**)(void))(v171 + 32);
                    v117 = (__int128 *)v163;
                    v116();
                    v93((uint64_t)v117, 0, 1, v88);
                    if (v94((uint64_t)v117, 1, v88) != 1)
                    {
                      v118 = v160[0];
                      ((void (*)(_QWORD, __int128 *, uint64_t))v116)(v160[0], v117, v88);
                      *(_QWORD *)&v179 = 0x7377656976657270;
                      *((_QWORD *)&v179 + 1) = 0xE800000000000000;
                      AnyHashable.init<A>(_:)(&v179, &type metadata for String, &protocol witness table for String);
                      v119 = sub_10004CFD4(&qword_1009D6FD0);
                      v120 = swift_allocObject(v119, 40, 7);
                      *(_OWORD *)(v120 + 16) = v161;
                      v121 = sub_10004CFD4(&qword_1009ECA50);
                      v122 = v88;
                      v123 = swift_allocObject(v121, 64, 7);
                      *(_OWORD *)(v123 + 16) = v161;
                      *(_QWORD *)(v123 + 32) = 7107189;
                      *(_QWORD *)(v123 + 40) = 0xE300000000000000;
                      *(_QWORD *)(v123 + 48) = URL.absoluteString.getter(v123);
                      *(_QWORD *)(v123 + 56) = v124;
                      *(_QWORD *)(v120 + 32) = sub_1000316DC(v123);
                      *((_QWORD *)&v180 + 1) = sub_10004CFD4(&qword_1009D6FD8);
                      *(_QWORD *)&v179 = v120;
                      sub_100025B3C((uint64_t)&v179, (uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
                      v125 = v173;
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v173);
                      v175 = v125;
                      sub_1002C3DBC((uint64_t)&v177, (uint64_t)v176, isUniquelyReferenced_nonNull_native);
                      v173 = v175;
                      swift_bridgeObjectRelease(0x8000000000000000);
                      sub_1000569AC((uint64_t)v176);
                      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v118, v122);
                      goto LABEL_89;
                    }
                  }
                  else
                  {
                    v114 = v111;
                    v117 = (__int128 *)v163;
                    v93((uint64_t)v163, 1, 1, v88);
                  }
                  v136 = (uint64_t *)&unk_1009D23D0;
                  v137 = v117;
                }
                else
                {
                  v127 = v172;
                  v128 = v106(v70, enum case for MResourceType.books(_:), v172);
                  v109 = MResourceType.name.getter(v128);
                  v129 = v70;
                  v131 = v130;
                  (*(void (**)(char *, uint64_t))(v104 + 8))(v129, v127);
                  *(_QWORD *)&v179 = 0xD000000000000015;
                  *((_QWORD *)&v179 + 1) = 0x80000001007BB0E0;
                  AnyHashable.init<A>(_:)(&v179, &type metadata for String, &protocol witness table for String);
                  v132 = objc_msgSend(v31, "bookSampleDownloadURL");
                  if (v132)
                  {
                    v133 = v132;
                    v114 = v131;
                    v134 = (uint64_t)v164;
                    static URL._unconditionallyBridgeFromObjectiveC(_:)(v132);

                    v135 = 0;
                  }
                  else
                  {
                    v114 = v131;
                    v135 = 1;
                    v134 = (uint64_t)v164;
                  }
                  v93(v134, v135, 1, v88);
                  v138 = (uint64_t)v162;
                  sub_100025B3C(v134, (uint64_t)v162, (uint64_t *)&unk_1009D23D0);
                  v139 = v94(v138, 1, v88);
                  if ((_DWORD)v139 != 1)
                  {
                    v140 = URL.absoluteString.getter(v139);
                    *((_QWORD *)&v180 + 1) = &type metadata for String;
                    *(_QWORD *)&v179 = v140;
                    *((_QWORD *)&v179 + 1) = v141;
                    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v138, v88);
                    sub_100025B3C((uint64_t)&v179, (uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
                    v142 = v173;
                    v143 = swift_isUniquelyReferenced_nonNull_native(v173);
                    v175 = v142;
                    sub_1002C3DBC((uint64_t)&v177, (uint64_t)v176, v143);
                    v173 = v175;
                    swift_bridgeObjectRelease(0x8000000000000000);
                    sub_1000569AC((uint64_t)v176);
LABEL_89:
                    v144 = v170;
                    v145 = sub_10004CFD4(&qword_1009DD620);
                    v146 = swift_allocObject(v145, 320, 7);
                    *(_OWORD *)(v146 + 16) = xmmword_1007147F0;
                    strcpy((char *)v176, "attributes");
                    BYTE3(v176[1]) = 0;
                    HIDWORD(v176[1]) = -369098752;
                    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                    v147 = v173;
                    swift_bridgeObjectRetain(v173);
                    v149 = sub_100299608(v148);
                    swift_bridgeObjectRelease_n(v147, 2);
                    *(_QWORD *)(v146 + 96) = sub_10004CFD4(&qword_1009D6FC8);
                    *(_QWORD *)(v146 + 72) = v149;
                    v176[0] = 1717924456;
                    v176[1] = 0xE400000000000000;
                    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                    *(_QWORD *)(v146 + 168) = &type metadata for String;
                    *(_QWORD *)(v146 + 144) = 0;
                    *(_QWORD *)(v146 + 152) = 0xE000000000000000;
                    v176[0] = 25705;
                    v176[1] = 0xE200000000000000;
                    AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                    v150 = objc_msgSend(v31, "adamId");
                    if (v150)
                    {
                      v151 = v150;
                      v152 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
                      v154 = v153;

                      v155 = (uint64_t *)(v146 + 216);
                      *(_QWORD *)(v146 + 240) = &type metadata for String;
                      if (v154)
                      {
                        *v155 = v152;
LABEL_94:
                        *(_QWORD *)(v146 + 224) = v154;
                        v176[0] = 1701869940;
                        v176[1] = 0xE400000000000000;
                        AnyHashable.init<A>(_:)(v176, &type metadata for String, &protocol witness table for String);
                        *(_QWORD *)(v146 + 312) = &type metadata for String;
                        *(_QWORD *)(v146 + 288) = v109;
                        *(_QWORD *)(v146 + 296) = v114;
                        v156 = sub_1000560A8(v146);
                        static MCatalogServiceConfig.appMainConfig.getter();
                        v158 = objc_allocWithZone((Class)type metadata accessor for MAudiobook(0, v157));
                        v39 = MAudiobook.init(with:config:)(v156, v144);

                        _s5Books15CurrentPageViewVwxx_0(&v181);
                        return v39;
                      }
                    }
                    else
                    {
                      v155 = (uint64_t *)(v146 + 216);
                      *(_QWORD *)(v146 + 240) = &type metadata for String;
                    }
                    *v155 = 0;
                    v154 = 0xE000000000000000;
                    goto LABEL_94;
                  }
                  sub_100010960(v138, (uint64_t *)&unk_1009D23D0);
                  sub_1002BDB2C((uint64_t)v176, &v179);
                  sub_1000569AC((uint64_t)v176);
                  v136 = &qword_1009D6FC0;
                  v137 = &v179;
                }
                sub_100010960((uint64_t)v137, v136);
                goto LABEL_89;
              }
            }
            else
            {
              v177 = 0u;
              v178 = 0u;
            }
            sub_100010960((uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
            goto LABEL_56;
          }
        }
        else
        {
          v177 = 0u;
          v178 = 0u;
          v70 = v166;
        }
        sub_100010960((uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
        goto LABEL_45;
      }
    }
    else
    {
      v177 = 0u;
      v178 = 0u;
    }
    sub_100010960((uint64_t)&v177, (uint64_t *)&unk_1009D04E0);
    goto LABEL_28;
  }
  v27 = v181;
  if (v184 != 1)
    _s5Books15CurrentPageViewVwxx_0(&v182);
  v38 = type metadata accessor for MAsset(0);
  v39 = swift_dynamicCastClass(v27, v38);
  if (!v39)

  return v39;
}

uint64_t sub_10029822C()
{
  return sub_1002909CC();
}

uint64_t sub_10029824C()
{
  return sub_100290A90();
}

void sub_10029826C()
{
  sub_100290FE4();
}

uint64_t sub_10029828C()
{
  return sub_1002910AC();
}

uint64_t sub_1002982AC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009D705C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1001EB614;
  return sub_1002913B4();
}

id sub_1002982F4()
{
  return sub_100291724();
}

uint64_t sub_100298314()
{
  return sub_100291E4C();
}

uint64_t sub_100298334()
{
  return sub_1002922F0();
}

void sub_100298354()
{
  sub_100292520();
}

uint64_t sub_100298374()
{
  return sub_100292D28();
}

uint64_t sub_100298394()
{
  return sub_1002983B4();
}

uint64_t sub_1002983B4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];
  uint64_t v9;
  _BYTE v10[40];
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  __int128 v17[2];

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v11);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_1002995DC((uint64_t)&v11);
      return 2;
    }

    v2 = (__int128 *)&v12;
  }
  else
  {

    v2 = (__int128 *)&v11;
  }
  sub_100022840(v2, (uint64_t)v17);
  sub_100022840(v17, (uint64_t)v10);
  v3 = sub_10004CFD4(&qword_1009EF310);
  v4 = sub_10004CFD4(&qword_1009D6FF0);
  if (swift_dynamicCast(v8, v10, v3, v4, 6))
  {
    sub_100022840(v8, (uint64_t)&v11);
    v5 = v13;
    v6 = v14;
    sub_10003F198(&v11, v13);
    v1 = dispatch thunk of LibraryAssetInfo.hasSpecifiedFinishedDate.getter(v5, v6) & 1;
    _s5Books15CurrentPageViewVwxx_0(&v11);
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_100010960((uint64_t)v8, &qword_1009DD660);
    return 0;
  }
  return v1;
}

uint64_t sub_1002984DC()
{
  return sub_100292EEC();
}

uint64_t sub_1002984FC()
{
  return sub_100293790((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isDownloading.getter) & 1;
}

uint64_t sub_100298528()
{
  return sub_100293144() & 1;
}

uint64_t sub_10029854C()
{
  return sub_1002932AC();
}

uint64_t sub_10029856C()
{
  return sub_1002933C8();
}

uint64_t sub_10029858C()
{
  return sub_1002934FC((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isManaged.getter);
}

uint64_t sub_1002985B4()
{
  return sub_1002934FC((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isFinished.getter);
}

uint64_t sub_1002985DC()
{
  return sub_100293624();
}

uint64_t sub_1002985FC()
{
  return sub_100293790((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isPurchased.getter) & 1;
}

uint64_t sub_100298628()
{
  return sub_1002938B8() & 1;
}

uint64_t sub_10029864C()
{
  return sub_100293790((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isSideloaded.getter) & 1;
}

uint64_t sub_100298678()
{
  return sub_10029399C();
}

uint64_t sub_100298698()
{
  return sub_100293BFC();
}

void sub_1002986B8(uint64_t a1@<X8>)
{
  sub_100293CE4(a1);
}

uint64_t sub_1002986D8()
{
  return sub_100293DD8();
}

uint64_t sub_1002986F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100293F08(a1);
}

uint64_t sub_100298718@<X0>(uint64_t a1@<X8>)
{
  return sub_1002944DC(a1);
}

uint64_t sub_100298738()
{
  return sub_10029491C();
}

uint64_t sub_100298758()
{
  return sub_100294A6C();
}

uint64_t sub_100298778(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*v2 + OBJC_IVAR____TtC5Books16ContextAssetInfo_shareableURLStringOverride);
  v4 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease(v4);
}

void (*sub_100298798(uint64_t **a1))(_QWORD *a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_100294C98(v2);
  return sub_100259864;
}

uint64_t sub_1002987E0()
{
  return sub_100294CF0();
}

uint64_t sub_100298800()
{
  return sub_100295298();
}

uint64_t sub_100298820()
{
  return sub_100295364();
}

uint64_t sub_100298840()
{
  return sub_1002954D4();
}

unint64_t sub_100298860()
{
  return (unint64_t)sub_100298884() & 1;
}

id sub_100298884()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v6;
  _QWORD v7[5];
  char v8;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v6);
  if (!v8)
  {

    _s5Books15CurrentPageViewVwxx_0(&v6);
    return 0;
  }
  v1 = v6;
  if (v8 != 1)
    _s5Books15CurrentPageViewVwxx_0(v7);
  v2 = type metadata accessor for MAsset(0);
  v3 = (void *)swift_dynamicCastClass(v1, v2);
  if (!v3)
  {

    return 0;
  }
  v4 = objc_msgSend(v3, "supportsUnifiedProductPage");

  return v4;
}

uint64_t sub_100298930()
{
  return sub_1002955D0();
}

uint64_t sub_100298954()
{
  return sub_1002957D0();
}

uint64_t sub_100298974()
{
  return sub_1002958E0();
}

uint64_t sub_100298994(double a1, double a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009D701C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10029A6AC;
  return sub_100295B60(a1, a2);
}

id sub_1002989F4()
{
  return sub_100295EA8();
}

uint64_t sub_100298A14@<X0>(_QWORD *a1@<X8>)
{
  return sub_100296DF0(a1);
}

uint64_t sub_100298A34()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if ((objc_msgSend((id)objc_opt_self(BKReachability), "isOffline") & 1) != 0)
    return 0;
  v1 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v2 = objc_msgSend(v1, "storeController");

  LODWORD(v1) = objc_msgSend(v2, "isReportConcernEnabled");
  if (!(_DWORD)v1)
    return 0;
  v3 = sub_1002909CC();
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_supportsReportConcernInJS);
  else
    return 0;
}

uint64_t sub_100298B08()
{
  uint64_t v0;
  id *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  id v7[5];
  char v8;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v6);
  if (v8)
  {
    if (v8 == 1)
    {
      sub_1002995DC((uint64_t)&v6);
      return 2;
    }

    v2 = v7;
  }
  else
  {

    v2 = &v6;
  }
  _s5Books15CurrentPageViewVwxx_0(v2);
  v3 = sub_100290A90();
  if ((static ContextActionAssetType.== infix(_:_:)(v3, 4) & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    v5 = sub_100290A90();
    v4 = static ContextActionAssetType.== infix(_:_:)(v5, 5);
  }
  return v4 & 1;
}

uint64_t sub_100298BA0()
{
  uint64_t v0;
  id *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v11;
  id v12[5];
  char v13;

  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v11);
  if (v13)
  {
    if (v13 == 1)
    {

LABEL_8:
      v9 = 0;
      return v9 & 1;
    }

    v1 = v12;
  }
  else
  {

    v1 = &v11;
  }
  _s5Books15CurrentPageViewVwxx_0(v1);
  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  sub_1002909CC();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetID:", v5);

  swift_bridgeObjectRelease(v4);
  if (!v6)
    goto LABEL_8;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider + 24);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider + 32);
  sub_10003F198((_QWORD *)(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_libraryAssetProvider), v7);
  v9 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v8 + 8))(v6, v7, v8);

  return v9 & 1;
}

uint64_t sub_100298CD0()
{
  return sub_100293790((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryAssetInfo.isInSamples.getter);
}

uint64_t sub_100298CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  int v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  void *v15;
  _BYTE v18[40];
  _QWORD v19[5];
  __int128 v20[2];
  id v21;
  char v22;

  v1 = sub_10004CFD4(&qword_1009D6FF8);
  __chkstk_darwin(v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for LibraryAudiobookInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1002995A8(v0 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)v20);
  if (v22)
  {
    v8 = *(void **)&v20[0];
    if (v22 != 1)
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)v20 + 1);
    v14 = type metadata accessor for MAsset(0);
    v15 = (void *)swift_dynamicCastClass(v8, v14);
    if (v15)
    {
      v13 = objc_msgSend(v15, "isSG");

      return v13 & 1;
    }

LABEL_11:
    v13 = 0;
    return v13 & 1;
  }

  sub_100022840(v20, (uint64_t)v19);
  sub_10002E418((uint64_t)v19, (uint64_t)v18);
  v9 = sub_10004CFD4(&qword_1009EF310);
  v10 = swift_dynamicCast(v3, v18, v9, v4, 6);
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  if (!v10)
  {
    v11(v3, 1, 1, v4);
    _s5Books15CurrentPageViewVwxx_0(v19);
    sub_100010960((uint64_t)v3, &qword_1009D6FF8);
    goto LABEL_11;
  }
  v11(v3, 0, 1, v4);
  v12 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
  v13 = LibraryAudiobookInfo.isSG.getter(v12);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  _s5Books15CurrentPageViewVwxx_0(v19);
  return v13 & 1;
}

uint64_t sub_100298EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  id *v4;
  id v5;
  id v6[5];
  char v7;
  __int128 v8[2];

  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v5);
  if (v7)
  {
    if (v7 == 1)
    {
      result = sub_1002995DC((uint64_t)&v5);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
      return result;
    }

    v4 = v6;
  }
  else
  {

    v4 = &v5;
  }
  sub_100022840((__int128 *)v4, (uint64_t)v8);
  return sub_100022840(v8, a1);
}

void sub_100298F54(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t, __n128);
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  id v80;
  id v81[5];
  char v82;
  _QWORD v83[6];

  v3 = type metadata accessor for LibraryPDFInfo(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  __chkstk_darwin(v3);
  v79 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D7000);
  __chkstk_darwin(v5);
  v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D6FF8);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v69 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v69 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v69 - v20;
  sub_1002995A8(v1 + OBJC_IVAR____TtC5Books16ContextAssetInfo_dataSource, (uint64_t)&v80);
  if (!v82)
  {

    v29 = &v80;
    goto LABEL_6;
  }
  if (v82 != 1)
  {

    v29 = v81;
LABEL_6:
    sub_100022840((__int128 *)v29, (uint64_t)v83);
    sub_10002E418((uint64_t)v83, (uint64_t)&v80);
    v30 = sub_10004CFD4(&qword_1009EF310);
    v31 = type metadata accessor for LibraryAudiobookInfo(0);
    v32 = swift_dynamicCast(v21, &v80, v30, v31, 6);
    v33 = *(char **)(v31 - 8);
    (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v33 + 7))(v21, v32 ^ 1u, 1, v31);
    sub_10000B5E4((uint64_t)v21, (uint64_t)v18, &qword_1009D6FF8);
    v34 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v33 + 6);
    v35 = v34(v18, 1, v31);
    v76 = v33;
    if ((_DWORD)v35 == 1)
    {
      sub_100010960((uint64_t)v18, &qword_1009D6FF8);
    }
    else
    {
      v36 = LibraryAudiobookInfo.supplementalContents.getter(v35);
      (*((void (**)(char *, uint64_t))v33 + 1))(v18, v31);
      if (v36)
      {
        v75 = *(_QWORD *)(v36 + 16);
        swift_bridgeObjectRelease(v36);
        v74 = 0;
        goto LABEL_11;
      }
    }
    v75 = 0;
    v74 = 1;
LABEL_11:
    v37 = (uint64_t)v9;
    v39 = v77;
    v38 = v78;
    sub_10000B5E4((uint64_t)v21, (uint64_t)v15, &qword_1009D6FF8);
    v40 = v34(v15, 1, v31);
    if ((_DWORD)v40 == 1)
    {
      v41 = &qword_1009D6FF8;
    }
    else
    {
      v42 = LibraryAudiobookInfo.supplementalContents.getter(v40);
      (*((void (**)(char *, uint64_t))v76 + 1))(v15, v31);
      if (!v42)
      {
LABEL_20:
        v24 = 0;
        v73 = 0;
        goto LABEL_21;
      }
      if (*(_QWORD *)(v42 + 16))
      {
        v15 = v73;
        (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v73, v42 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v38);
        v43 = 0;
      }
      else
      {
        v43 = 1;
        v15 = v73;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v15, v43, 1, v38);
      v44 = swift_bridgeObjectRelease(v42);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v39 + 48))(v15, 1, v38, v44) != 1)
      {
        v65 = sub_100008DB0(&qword_1009D7008, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPDFInfo, (uint64_t)&protocol conformance descriptor for LibraryPDFInfo);
        v66 = CommonLibraryAssetInfoEmbedding.id.getter(v38, v65);
        v73 = v67;
        v68 = v15;
        v24 = v66;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v68, v38);
LABEL_21:
        v45 = v76;
        sub_10000B5E4((uint64_t)v21, (uint64_t)v12, &qword_1009D6FF8);
        if (v34(v12, 1, v31) == 1)
        {
          sub_100010960((uint64_t)v12, &qword_1009D6FF8);
          v22 = 0;
          v77 = 0;
        }
        else
        {
          v46 = sub_100008DB0(&qword_1009D7010, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryAudiobookInfo, (uint64_t)&protocol conformance descriptor for LibraryAudiobookInfo);
          v47 = CommonLibraryAssetInfoEmbedding.assetLogID.getter(v31, v46);
          v77 = v48;
          v49 = v12;
          v22 = v47;
          (*((void (**)(char *, uint64_t))v45 + 1))(v49, v31);
        }
        sub_10000B5E4((uint64_t)v21, v37, &qword_1009D6FF8);
        v50 = v34((char *)v37, 1, v31);
        if ((_DWORD)v50 == 1)
        {
          _s5Books15CurrentPageViewVwxx_0(v83);
          sub_100010960(v37, &qword_1009D6FF8);
        }
        else
        {
          v51 = LibraryAudiobookInfo.supplementalContents.getter(v50);
          (*((void (**)(uint64_t, uint64_t))v45 + 1))(v37, v31);
          if (v51)
          {
            v76 = v21;
            v52 = v78;
            v53 = *(_QWORD *)(v51 + 16);
            if (v53)
            {
              v54 = v39;
              v70 = v22;
              v71 = v24;
              v72 = a1;
              v55 = v51 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
              v56 = *(_QWORD *)(v39 + 72);
              v57 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v39 + 16);
              v69 = v51;
              v58 = swift_bridgeObjectRetain(v51);
              v59 = v53 - 1;
              v60 = v79;
              do
              {
                v57(v60, v55, v52, v58);
                v61 = sub_100008DB0(&qword_1009D7008, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPDFInfo, (uint64_t)&protocol conformance descriptor for LibraryPDFInfo);
                v62 = CommonLibraryAssetInfoEmbedding.isLocal.getter(v52, v61);
                (*(void (**)(char *, uint64_t))(v54 + 8))(v60, v52);
                v64 = v59-- != 0;
                if ((v62 & 1) == 0)
                  break;
                v55 += v56;
              }
              while (v64);
              v51 = v69;
              swift_bridgeObjectRelease(v69);
              v24 = v71;
              a1 = v72;
              v22 = v70;
            }
            else
            {
              v62 = 1;
            }
            swift_bridgeObjectRelease(v51);
            _s5Books15CurrentPageViewVwxx_0(v83);
            v28 = v62 & 1;
            v21 = v76;
            goto LABEL_40;
          }
          _s5Books15CurrentPageViewVwxx_0(v83);
        }
        v28 = 2;
LABEL_40:
        v26 = v75;
        v27 = v74;
        v25 = v73;
        v23 = v77;
        sub_100010960((uint64_t)v21, &qword_1009D6FF8);
        goto LABEL_41;
      }
      v41 = &qword_1009D7000;
    }
    sub_100010960((uint64_t)v15, v41);
    goto LABEL_20;
  }

  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 1;
  v28 = 2;
LABEL_41:
  *(_QWORD *)a1 = v26;
  *(_BYTE *)(a1 + 8) = v27;
  *(_QWORD *)(a1 + 16) = v24;
  *(_QWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 40) = v23;
  *(_BYTE *)(a1 + 48) = v28;
}

uint64_t sub_100299588@<X0>(uint64_t a1@<X8>)
{
  return sub_100298EC0(a1);
}

uint64_t sub_1002995A8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ContextAssetDataSource(a2, a1);
  return a2;
}

uint64_t sub_1002995DC(uint64_t a1)
{
  destroy for ContextAssetDataSource(a1);
  return a1;
}

uint64_t sub_100299608(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_100299758((uint64_t)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = sub_100299758((uint64_t)v9, v6, v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

uint64_t sub_100299758(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t *v18;
  _BYTE v19[40];
  _QWORD v20[4];
  _BYTE v21[32];
  _BYTE v22[48];
  uint64_t v23;

  v18 = (unint64_t *)result;
  v23 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v9)
      return sub_100299960(v18, a2, v23, a3);
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return sub_100299960(v18, a2, v23, a3);
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return sub_100299960(v18, a2, v23, a3);
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v8 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    sub_1000569E0(*(_QWORD *)(a3 + 48) + 40 * v11, (uint64_t)v22);
    sub_10000B5E4(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)v21, (uint64_t *)&unk_1009D04E0);
    sub_1000569E0((uint64_t)v22, (uint64_t)v19);
    sub_10000B5E4((uint64_t)v21, (uint64_t)v20, (uint64_t *)&unk_1009D04E0);
    v12 = v20[3];
    sub_100010960((uint64_t)v19, &qword_1009D6FE0);
    sub_100010960((uint64_t)v21, (uint64_t *)&unk_1009D04E0);
    result = sub_1000569AC((uint64_t)v22);
    if (v12)
    {
      *(unint64_t *)((char *)v18 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_100299960(v18, a2, v23, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return sub_100299960(v18, a2, v23, a3);
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return sub_100299960(v18, a2, v23, a3);
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Int sub_100299960(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v28;
  _BYTE v30[32];
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _BYTE v34[32];
  _OWORD v35[2];
  uint64_t v36;

  if (!a3)
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_10004CFD4(&qword_1009D04D0);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = result;
  v28 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v28)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v28)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v28)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v28)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v28)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    sub_1000569E0(*(_QWORD *)(v4 + 48) + 40 * v13, (uint64_t)v35);
    sub_10000B5E4(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)v34, (uint64_t *)&unk_1009D04E0);
    v31 = v35[0];
    v32 = v35[1];
    v33 = v36;
    sub_100025B3C((uint64_t)v34, (uint64_t)v30, (uint64_t *)&unk_1009D04E0);
    result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v17 = -1 << *(_BYTE *)(v8 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v11 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v11 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v23 = v19 == v22;
        if (v19 == v22)
          v19 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v11 + 8 * v19);
      }
      while (v24 == -1);
      v20 = __clz(__rbit64(~v24)) + (v19 << 6);
    }
    *(_QWORD *)(v11 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v25 = *(_QWORD *)(v8 + 48) + 40 * v20;
    v26 = v32;
    *(_OWORD *)v25 = v31;
    *(_OWORD *)(v25 + 16) = v26;
    *(_QWORD *)(v25 + 32) = v33;
    result = sub_100025B3C((uint64_t)v30, *(_QWORD *)(v8 + 56) + 32 * v20, (uint64_t *)&unk_1009D04E0);
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100299C3C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100299C44()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100299C68(uint64_t a1)
{
  uint64_t v1;

  sub_10029270C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100299C70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100299C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E8A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100299CC8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100299D04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009D704C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_10029197C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100299D84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100299DA8(void *a1)
{
  uint64_t v1;

  return sub_100291BAC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100299DB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100299DDC()
{
  uint64_t v0;

  sub_100291DC8(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

Swift::Int sub_100299DE4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t *v33;
  uint64_t v34;
  _QWORD v35[9];

  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_10004CFD4(&qword_1009D0828);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  v33 = a1;
  v34 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v34)
        return v9;
      v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v34)
          return v9;
        v16 = v33[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v34)
            return v9;
          v16 = v33[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v34)
              return v9;
            v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v34)
                  return v9;
                v16 = v33[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)(v35, *(_QWORD *)(v9 + 40));
    swift_bridgeObjectRetain(v19);
    v22 = v21;
    String.hash(into:)(v35, v20, v19);
    result = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v9 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v26);
    *v31 = v20;
    v31[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v26) = v22;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_10029A07C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10029A094(a1, a2, a3, a4, &qword_1009D7060);
}

Swift::Int sub_10029A088(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10029A094(a1, a2, a3, a4, (uint64_t *)&unk_1009D7BB0);
}

Swift::Int sub_10029A094(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  __int128 v36;
  _QWORD v37[9];

  if (!a3)
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  v5 = a4;
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v5;
  }
  sub_10004CFD4(a5);
  result = static _DictionaryStorage.allocate(capacity:)(v6);
  v9 = result;
  v34 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v34)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v34)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v34)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v34)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v34)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 16 * v14;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v18);
    v21 = *v19;
    v20 = v19[1];
    v36 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v18);
    Hasher.init(_seed:)(v37, *(_QWORD *)(v9 + 40));
    swift_bridgeObjectRetain(v20);
    v22 = (id)v36;
    swift_retain(*((_QWORD *)&v36 + 1));
    String.hash(into:)(v37, v21, v20);
    result = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v9 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = 16 * v26;
    v32 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v31);
    *v32 = v21;
    v32[1] = v20;
    *(_OWORD *)(*(_QWORD *)(v9 + 56) + v31) = v36;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v6--, 1))
      break;
    if (!v6)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_10029A35C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD v52[9];

  v8 = type metadata accessor for Date(0);
  v49 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v48 = (char *)&v43 - v12;
  if (!a3)
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  v47 = v11;
  sub_10004CFD4((uint64_t *)&unk_1009D7B30);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v14 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v18 = v47;
  v19 = v48;
  v46 = a4;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v50 = v16;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v14;
      v23 = v44[v22];
      v24 = v16 + 1;
      if (!v23)
      {
        v24 = v16 + 2;
        if (v16 + 2 >= v45)
          return v14;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v16 + 3;
          if (v16 + 3 >= v45)
            return v14;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v16 + 4;
            if (v16 + 4 >= v45)
              return v14;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v14;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v50 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = a4[7];
    v27 = (uint64_t *)(a4[6] + 16 * v21);
    v28 = *v27;
    v29 = v27[1];
    v30 = v49;
    v31 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v19, v26 + v31 * v21, v18);
    v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v51, v19, v18);
    Hasher.init(_seed:)(v52, *(_QWORD *)(v14 + 40));
    swift_bridgeObjectRetain(v29);
    String.hash(into:)(v52, v28, v29);
    result = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v18 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v33) >> 6;
      v18 = v47;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v39 = v35 == v38;
        if (v35 == v38)
          v35 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    v41 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v36);
    *v41 = v28;
    v41[1] = v29;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(_QWORD *)(v14 + 56) + v36 * v31, v51, v18);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v46;
    v16 = v50;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_10029A6A4(void *a1)
{
  uint64_t v1;

  sub_1002903F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t *sub_10029A6C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D38A0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for Font.Context(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = *(int *)(a3 + 24);
    v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = v16;
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain(v16);
    swift_bridgeObjectRetain(v19);
  }
  return a1;
}

double sub_10029A7B8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_10004CFD4(&qword_1009D38A0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for Font.Context(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_10029A838(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = sub_10004CFD4(&qword_1009D38A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Font.Context(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = *(int *)(a3 + 24);
  v14 = *(uint64_t *)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = v14;
  v15 = (uint64_t *)((char *)a1 + v13);
  v16 = (uint64_t *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v14);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t *sub_10029A900(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_10029A9F8((uint64_t)a1);
    v6 = sub_10004CFD4(&qword_1009D38A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Font.Context(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = *(uint64_t *)((char *)a2 + v12);
  v14 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = *(int *)(a3 + 24);
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t sub_10029A9F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009D38A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10029AA38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_10004CFD4(&qword_1009D38A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for Font.Context(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  return a1;
}

char *sub_10029AAE8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_10029A9F8((uint64_t)a1);
    v6 = sub_10004CFD4(&qword_1009D38A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for Font.Context(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(_QWORD *)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release(v9);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v14 = *(_QWORD *)v12;
  v13 = *((_QWORD *)v12 + 1);
  v15 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v11 = v14;
  *((_QWORD *)v11 + 1) = v13;
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_10029ABC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029ABD0);
}

uint64_t sub_10029ABD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4(&qword_1009D7068);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10029AC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029AC5C);
}

uint64_t sub_10029AC5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009D7068);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TextFormatSizeLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D70C8;
  if (!qword_1009D70C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TextFormatSizeLabel);
  return result;
}

void sub_10029AD14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10029AD94(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = &unk_100716AB8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_10029AD94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D70D8)
  {
    v2 = type metadata accessor for Font.Context(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D70D8);
  }
}

uint64_t sub_10029ADE8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100869EF8, 1);
}

__n128 sub_10029ADF8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  const __CTFont *v12;
  double Size;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  BOOL v25;
  double v26;
  const __CTFontDescriptor *v27;
  CTFontRef v28;
  const __CTFont *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  BOOL v44;
  double v45;
  const __CTFontDescriptor *v46;
  CTFontRef v47;
  const __CTFont *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  __n128 result;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __n128 v63;
  char v64;
  uint64_t v65;
  __int128 v66;
  char v67;
  uint64_t v68;
  char v69;
  _QWORD v70[3];

  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.Context(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TextFormatSizeLabel(0);
  v11 = *(_QWORD *)(v1 + *(int *)(v10 + 20));
  sub_100668464((uint64_t)v9);
  v12 = (const __CTFont *)Font.platformFont(in:)(v9, v11);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  Size = CTFontGetSize(v12);
  String.LocalizationValue.init(stringLiteral:)(65, 0xE100000000000000);
  v14 = (uint64_t *)(v1 + *(int *)(v10 + 24));
  v15 = *v14;
  v16 = v14[1];
  swift_bridgeObjectRetain(v16);
  v60 = sub_10061B6C8((uint64_t)"Aa_firstLetter", 14, 2u, (uint64_t)v5, v15, v16, (uint64_t)"Theme _Aa_ symbol. FIRST LETTER.  For Chinese for instance we expect Loc to use first: 大, second: 小, with the first scale 1.0 and second having scale 0.5", 157, 0);
  v61 = v17;
  String.LocalizationValue.init(stringLiteral:)(3157553, 0xE300000000000000);
  swift_bridgeObjectRetain(v16);
  v18 = sub_10061B6C8((uint64_t)"Aa_scale_1st_letter", 19, 2u, (uint64_t)v5, v15, v16, (uint64_t)"Theme _Aa_ symbol. Scale to apply to FIRST LETTER. Double between 0.0 - 1.0", 75, 2u);
  v20 = v19;
  v70[0] = 0;
  v62 = v70;
  if ((v19 & 0x1000000000000000) != 0 || !(v19 & 0x2000000000000000 | v18 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)(&v69, sub_10029B598);
LABEL_7:
    swift_bridgeObjectRelease(v20);
    goto LABEL_14;
  }
  __chkstk_darwin(v18);
  if ((v20 & 0x2000000000000000) == 0)
  {
    if ((v21 & 0x1000000000000000) != 0)
    {
      v22 = (v20 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v23 = v21 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v22 = _StringObject.sharedUTF8.getter(v21, v20);
    }
    v69 = sub_100269940(v22, v23, (void (*)(uint64_t *__return_ptr))sub_10029B618) & 1;
    goto LABEL_7;
  }
  v63.n128_u64[0] = v21;
  v63.n128_u64[1] = v20 & 0xFFFFFFFFFFFFFFLL;
  v25 = (v21 > 0x20u || ((0x100003E01uLL >> v21) & 1) == 0)
     && (v24 = (_BYTE *)_swift_stdlib_strtod_clocale(&v63, v70)) != 0
     && *v24 == 0;
  v69 = v25;
  swift_bridgeObjectRelease(v20);
LABEL_14:
  if (v69)
    v26 = *(double *)v70;
  else
    v26 = 1.0;
  v27 = CTFontCopyFontDescriptor(v12);
  v28 = CTFontCreateWithFontDescriptor(v27, Size * v26, 0);

  v29 = v28;
  v30 = Font.init(_:)();
  String.LocalizationValue.init(stringLiteral:)(97, 0xE100000000000000);
  v31 = *v14;
  v32 = v14[1];
  swift_bridgeObjectRetain(v32);
  v59 = sub_10061B6C8((uint64_t)"Aa_secondLetter", 15, 2u, (uint64_t)v5, v31, v32, (uint64_t)"Theme _Aa_ symbol. SECOND LETTER", 32, 2u);
  v34 = v33;
  String.LocalizationValue.init(stringLiteral:)(3157553, 0xE300000000000000);
  swift_bridgeObjectRetain(v32);
  v35 = sub_10061B6C8((uint64_t)"Aa_scale_2nd_letter", 19, 2u, (uint64_t)v5, v31, v32, (uint64_t)"Theme _Aa_ symbol. Scale to apply to SECOND LETTER. Double between 0.0 - 1.0", 76, 2u);
  v37 = v36;
  v70[0] = 0;
  __chkstk_darwin(v35);
  if ((v37 & 0x1000000000000000) != 0 || !(v37 & 0x2000000000000000 | v39 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)(&v69, sub_10029B62C);
LABEL_23:
    swift_bridgeObjectRelease(v37);
    goto LABEL_30;
  }
  __chkstk_darwin(v38);
  if ((v37 & 0x2000000000000000) == 0)
  {
    if ((v40 & 0x1000000000000000) != 0)
    {
      v41 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v42 = v40 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v41 = _StringObject.sharedUTF8.getter(v40, v37);
    }
    v69 = sub_100269940(v41, v42, (void (*)(uint64_t *__return_ptr))sub_10029B5B0) & 1;
    goto LABEL_23;
  }
  v63.n128_u64[0] = v40;
  v63.n128_u64[1] = v37 & 0xFFFFFFFFFFFFFFLL;
  v44 = (v40 > 0x20u || ((0x100003E01uLL >> v40) & 1) == 0)
     && (v43 = (_BYTE *)_swift_stdlib_strtod_clocale(&v63, v70)) != 0
     && *v43 == 0;
  v69 = v44;
  swift_bridgeObjectRelease(v37);
LABEL_30:
  if (v69)
    v45 = *(double *)v70;
  else
    v45 = 1.0;
  v46 = CTFontCopyFontDescriptor(v12);
  v47 = CTFontCreateWithFontDescriptor(v46, Size * v45, 0);

  v48 = v47;
  v49 = Font.init(_:)();
  v50 = static VerticalAlignment.firstTextBaseline.getter();
  v51 = v61;
  sub_10029B3D0(v60, v61, v30, v59, v34, v49, (uint64_t)&v63);
  swift_release(v49);
  swift_bridgeObjectRelease(v34);
  swift_release(v30);
  swift_bridgeObjectRelease(v51);

  v52 = v64;
  v53 = v65;
  v54 = v67;
  v55 = v68;
  result = v63;
  v57 = v66;
  *(_QWORD *)a1 = v50;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 40) = v52;
  *(_QWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 56) = v57;
  *(_BYTE *)(a1 + 72) = v54;
  *(_QWORD *)(a1 + 80) = v55;
  return result;
}

double sub_10029B3D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  double result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = a1;
  v46 = a2;
  v12 = sub_1001F2108();
  v13 = swift_bridgeObjectRetain(a2);
  v14 = Text.init<A>(_:)(&v45, &type metadata for String, v12, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  v21 = Text.font(_:)(a3, v14, v15, v20, v17);
  v42 = v22;
  v43 = v21;
  v44 = v23;
  v25 = v24 & 1;
  sub_1001F5B28(v14, v16, v20);
  swift_bridgeObjectRelease(v18);
  v45 = a4;
  v46 = a5;
  v26 = swift_bridgeObjectRetain(a5);
  v27 = Text.init<A>(_:)(&v45, &type metadata for String, v12, v26);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  v34 = Text.font(_:)(a6, v27, v28, v33, v30);
  v36 = v35;
  v38 = v37;
  LOBYTE(a6) = v39 & 1;
  sub_1001F5B28(v27, v29, v33);
  swift_bridgeObjectRelease(v31);
  LOBYTE(v45) = v25;
  *(_QWORD *)a7 = v43;
  *(_QWORD *)(a7 + 8) = v42;
  *(_BYTE *)(a7 + 16) = v25;
  *(_QWORD *)(a7 + 24) = v44;
  *(_QWORD *)(a7 + 32) = v34;
  *(_QWORD *)(a7 + 40) = v36;
  *(_BYTE *)(a7 + 48) = a6;
  *(_QWORD *)(a7 + 56) = v38;
  sub_1001F596C(v43, v42, v25);
  swift_bridgeObjectRetain(v44);
  sub_1001F596C(v34, v36, a6);
  swift_bridgeObjectRetain(v38);
  sub_1001F5B28(v34, v36, a6);
  swift_bridgeObjectRelease(v38);
  sub_1001F5B28(v43, v42, v45);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v44).n128_u64[0];
  return result;
}

_BYTE *sub_10029B598@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100269870(a1, a2);
}

_QWORD *sub_10029B5B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100269994(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

unint64_t sub_10029B5CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7110;
  if (!qword_1009D7110)
  {
    v1 = sub_100030B74(&qword_1009D7118);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7110);
  }
  return result;
}

_QWORD *sub_10029B618@<X0>(_BYTE *a1@<X8>)
{
  return sub_10029B5B0(a1);
}

_BYTE *sub_10029B62C@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_10029B598(a1, a2);
}

uint64_t InfoBar.MessageQueue.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_10004CFD4(&qword_1009D4580);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  swift_defaultActor_initialize(v5);
  v6 = v5 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage;
  v10 = 0;
  v7 = sub_10004CFD4(&qword_1009D4588);
  Published.init(initialValue:)(&v10, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, v1);
  *(_QWORD *)(v5 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage) = 0;
  return v5;
}

uint64_t property wrapper backing initializer of InfoBar.MessageQueue.currentMessage(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009D4588);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_10029B778@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100716B28);
  v5 = swift_getKeyPath(&unk_100716B50);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_10029B7F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100716B28);
  v5 = swift_getKeyPath(&unk_100716B50);
  v7 = v2;
  swift_retain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t InfoBar.MessageQueue.currentMessage.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100716B28);
  v2 = swift_getKeyPath(&unk_100716B50);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_10029B8DC(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage, v3, 33, 0);
  v1 = sub_10004CFD4(&qword_1009D4580);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_10029B940(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = sub_10004CFD4(&qword_1009D67F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage, v17, 33, 0);
  v14 = sub_10004CFD4(&qword_1009D4580);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t InfoBar.MessageQueue.$currentMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage, v3, 33, 0);
  v1 = sub_10004CFD4(&qword_1009D4580);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t InfoBar.MessageQueue.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_10004CFD4(&qword_1009D4580);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize(v0);
  v5 = v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage;
  v9 = 0;
  v6 = sub_10004CFD4(&qword_1009D4588);
  Published.init(initialValue:)(&v9, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage) = 0;
  return v0;
}

void InfoBar.MessageQueue.addTimedMessage(_:duration:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  _BYTE v36[40];

  v3 = v2;
  if (qword_1009CE410 != -1)
    swift_once(&qword_1009CE410, sub_10040281C);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_100A1E860);
  sub_10029DACC(a1, (uint64_t)v36);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
  sub_10002ACF0(v7, v8);
  sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
  v9 = sub_10002ACF0(v7, v8);
  v10 = Logger.logObject.getter(v9);
  v14 = static os_log_type_t.debug.getter(v10, v11, v12, v13);
  if (os_log_type_enabled(v10, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v33 = v3;
    v16 = swift_slowAlloc(32, -1);
    v35[0] = v16;
    *(_DWORD *)v15 = 136315394;
    v17 = *(_BYTE *)(a1 + 33) & 1;
    sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
    sub_10002ACF0(v7, v8);
    v18 = sub_100403F38((uint64_t)v36, v17);
    v20 = v19;
    sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v7, v8);
    v34 = sub_100040F58(v18, v20, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v20);
    sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v7, v8);
    sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v7, v8);
    *(_WORD *)(v15 + 12) = 2048;
    v34 = *(_QWORD *)&a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v15 + 14, v15 + 22);
    _os_log_impl((void *)&_mh_execute_header, v10, v14, "Timed message added (%s), for %f seconds", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v21 = v16;
    v3 = v33;
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v7, v8);
    sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v7, v8);
  }

  v22 = type metadata accessor for InfoBar.TimedMessage(0);
  v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(double *)(v23 + OBJC_IVAR____TtCO5Books7InfoBar12TimedMessage_duration) = a2;
  sub_10029DB08((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
  sub_10002ACF0(v7, v8);
  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v24 = v23 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  v25 = type metadata accessor for Date(0);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v24, 1, 1, v25);
  v26(v23 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime, 1, 1, v25);
  v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 32) = v27;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(a1 + 48);
  v28 = (_QWORD *)(v3 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages);
  swift_beginAccess(v3 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages, v35, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v23);
  specialized Array._endMutation()(v32);
  swift_endAccess(v35);
  sub_10029C5A8();
}

double InfoBar.MessageQueue.setPersistentMessage(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[40];

  v2 = v1;
  if (qword_1009CE410 != -1)
    swift_once(&qword_1009CE410, sub_10040281C);
  v4 = type metadata accessor for Logger(0);
  sub_100048F64(v4, (uint64_t)qword_100A1E860);
  sub_10029DACC(a1, (uint64_t)v31);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
  sub_10002ACF0(v5, v6);
  sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
  v7 = sub_10002ACF0(v5, v6);
  v8 = Logger.logObject.getter(v7);
  v12 = static os_log_type_t.debug.getter(v8, v9, v10, v11);
  if (os_log_type_enabled(v8, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = v2;
    v14 = swift_slowAlloc(32, -1);
    v30 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = *(_BYTE *)(a1 + 33) & 1;
    sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
    sub_10002ACF0(v5, v6);
    v16 = sub_100403F38((uint64_t)v31, v15);
    v18 = v17;
    sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v5, v6);
    v29 = sub_100040F58(v16, v18, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v18);
    sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v5, v6);
    sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v5, v6);
    _os_log_impl((void *)&_mh_execute_header, v8, v12, "Persistent message added (%s)", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    v19 = v14;
    v2 = v28;
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v5, v6);
    sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v5, v6);
  }

  v20 = type metadata accessor for InfoBar.Message(0);
  v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  sub_10029DB08((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
  sub_10002ACF0(v5, v6);
  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v22 = v21 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  v23 = type metadata accessor for Date(0);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  v24(v21 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime, 1, 1, v23);
  v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v25;
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(a1 + 48);
  v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage) = v21;
  swift_release(v26);
  return sub_10029C5A8();
}

Swift::Void __swiftcall InfoBar.MessageQueue.removePersistentMessage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint8_t *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[40];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage);
  if (v7)
  {
    v8 = qword_1009CE410;
    swift_retain(v7);
    if (v8 != -1)
      swift_once(&qword_1009CE410, sub_10040281C);
    v9 = type metadata accessor for Logger(0);
    sub_100048F64(v9, (uint64_t)qword_100A1E860);
    v10 = swift_retain_n(v7, 2);
    v11 = Logger.logObject.getter(v10);
    v15 = static os_log_type_t.debug.getter(v11, v12, v13, v14);
    v16 = v15;
    if (os_log_type_enabled(v11, v15))
    {
      v38 = v2;
      v17 = swift_slowAlloc(12, -1);
      v35 = v16;
      v18 = (uint8_t *)v17;
      v36 = swift_slowAlloc(32, -1);
      v40 = v36;
      *(_DWORD *)v18 = 136315138;
      v19 = v18 + 12;
      v33 = v18 + 4;
      v34 = v18;
      sub_10029DACC(v7 + 16, (uint64_t)v41);
      v20 = *(_BYTE *)(v7 + 49);
      v21 = *(_QWORD *)(v7 + 56);
      v22 = *(_QWORD *)(v7 + 64);
      sub_10029DB08((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
      sub_10002ACF0(v21, v22);
      v23 = sub_100403F38((uint64_t)v41, v20);
      v37 = v3;
      v25 = v24;
      sub_10029DB08((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
      v26 = v21;
      v2 = v38;
      sub_10002AD00(v26, v22);
      v39 = sub_100040F58(v23, v25, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v33, v19);
      v27 = v25;
      v3 = v37;
      swift_bridgeObjectRelease(v27);
      swift_release_n(v7, 2);
      v28 = v34;
      _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v35, "Persistent message removed (%s)", v34, 0xCu);
      v29 = v36;
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_release_n(v7, 2);
    }

    Date.init()(v30);
    InfoBar.Message.didHide(at:)((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v31 = *(_QWORD *)(v1 + v6);
    *(_QWORD *)(v1 + v6) = 0;
    swift_release(v31);
    sub_10029C5A8();
    swift_release(v7);
  }
}

double sub_10029C5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask);
  if (v6)
  {
    swift_retain(v6);
    AnyCancellable.cancel()();
    swift_release(v6);
    v7 = *(_QWORD *)(v1 + v5);
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)(v1 + v5) = 0;
  swift_release(v7);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = sub_100008DB0(&qword_1009D72E8, type metadata accessor for InfoBar.MessageQueue, (uint64_t)&protocol conformance descriptor for InfoBar.MessageQueue);
  v10 = (_QWORD *)swift_allocObject(&unk_1008F8B08, 40, 7);
  v10[2] = v1;
  v10[3] = v9;
  v10[4] = v1;
  swift_retain_n(v1, 2);
  v11 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009D72F0, (uint64_t)v10);
  v12 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = AnyCancellable.init(_:)(sub_10029E180, v11);
  v14 = *(_QWORD *)(v1 + v5);
  *(_QWORD *)(v1 + v5) = v13;
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_10029C70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc(dword_1009D716C);
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_10029C758;
  return sub_10029C8A8();
}

uint64_t sub_10029C758()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10029C7C4, *(_QWORD *)(v3 + 16), 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10029C7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (qword_1009CE410 != -1)
    swift_once(&qword_1009CE410, sub_10040281C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_100A1E860);
  v3 = Logger.logObject.getter(v2);
  v7 = static os_log_type_t.debug.getter(v3, v4, v5, v6);
  if (os_log_type_enabled(v3, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v7, "Cancelled message resolution", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  swift_errorRelease(*(_QWORD *)(v0 + 32));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029C8A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 48) = v0;
  v2 = (_QWORD *)swift_task_alloc(dword_1009D7174);
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_10029C908;
  v2[6] = v0;
  return swift_task_switch(sub_10029D4E0, v0, 0);
}

uint64_t sub_10029C908()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_10029C974, *(_QWORD *)(v3 + 48), 0);
}

uint64_t sub_10029C974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  uint64_t v24;

  v1 = v0[8];
  static Task<>.checkCancellation()();
  if (v1)
  {
    v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  v4 = (uint64_t *)(v0[6] + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages);
  swift_beginAccess(v4, v0 + 2, 0, 0);
  v5 = *v4;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v24 = v5;
    else
      v24 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (qword_1009CE410 != -1)
    swift_once(&qword_1009CE410, sub_10040281C);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100048F64(v7, (uint64_t)qword_100A1E860);
  v9 = Logger.logObject.getter(v8);
  v13 = static os_log_type_t.debug.getter(v9, v10, v11, v12);
  if (os_log_type_enabled(v9, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v14 = 134217984;
    v0[5] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6, v14 + 4, v14 + 12);
    _os_log_impl((void *)&_mh_execute_header, v9, v13, "Resolving timed messages. (%ld in queue)", v14, 0xCu);
    swift_slowDealloc(v14, -1, -1);
  }

  sub_10029D6F8();
  v0[9] = v15;
  if (!v15)
  {
    v17 = Logger.logObject.getter(0);
    v21 = static os_log_type_t.debug.getter(v17, v18, v19, v20);
    if (os_log_type_enabled(v17, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v21, "Clear messages", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    sub_10029CCEC(0);
    goto LABEL_15;
  }
  v16 = v15;
  sub_10029CCEC(v15);
  static Task<>.checkCancellation()();
  if (v6 < 1)
  {
    swift_release(v16);
LABEL_15:
    v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  v23 = (_QWORD *)swift_task_alloc(dword_1009D716C);
  v0[10] = v23;
  *v23 = v0;
  v23[1] = sub_10029CC20;
  return sub_10029C8A8();
}

uint64_t sub_10029CC20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10029CCB8;
  else
    v4 = sub_10029CC84;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), 0);
}

uint64_t sub_10029CC84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029CCB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10029CCEC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint8_t *v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  char v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  uint8_t *v79;
  uint8_t *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[5];
  _QWORD v90[6];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v85 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v77 - v7;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100716B28);
  v14 = swift_getKeyPath(&unk_100716B50);
  static Published.subscript.getter(v90, v2, KeyPath, v14);
  swift_release(v14);
  swift_release(KeyPath);
  v15 = v90[0];
  if (a1)
  {
    if (v90[0])
    {
      v16 = a1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id;
      v17 = v90[0] + OBJC_IVAR____TtCO5Books7InfoBar7Message_id;
      swift_retain_n(a1, 2);
      LOBYTE(v16) = static UUID.== infix(_:_:)(v16, v17);
      swift_release(v15);
      swift_release_n(a1, 2);
      if ((v16 & 1) != 0)
        return;
    }
  }
  else
  {
    if (!v90[0])
      return;
    swift_release(v90[0]);
  }
  v18 = swift_getKeyPath(&unk_100716B28);
  v19 = swift_getKeyPath(&unk_100716B50);
  static Published.subscript.getter(v90, v2, v18, v19);
  swift_release(v19);
  swift_release(v18);
  v20 = v90[0];
  v21 = &qword_1009CE000;
  v83 = v12;
  v84 = v10;
  if (v90[0])
  {
    v82 = v8;
    if (qword_1009CE410 != -1)
      swift_once(&qword_1009CE410, sub_10040281C);
    v22 = type metadata accessor for Logger(0);
    sub_100048F64(v22, (uint64_t)qword_100A1E860);
    v23 = swift_retain_n(v20, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.info.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v80 = (uint8_t *)swift_slowAlloc(32, -1);
      v89[0] = (uint64_t)v80;
      v79 = v26;
      *(_DWORD *)v26 = 136315138;
      v27 = v26 + 12;
      v78 = v26 + 4;
      sub_10029DACC(v20 + 16, (uint64_t)v90);
      v81 = v9;
      v28 = *(_BYTE *)(v20 + 49);
      v29 = v2;
      v31 = *(_QWORD *)(v20 + 56);
      v30 = *(_QWORD *)(v20 + 64);
      sub_10029DB08((uint64_t)v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
      sub_10002ACF0(v31, v30);
      v32 = sub_100403F38((uint64_t)v90, v28);
      v34 = v33;
      sub_10029DB08((uint64_t)v90, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
      v35 = v31;
      v2 = v29;
      v36 = v30;
      v21 = &qword_1009CE000;
      sub_10002AD00(v35, v36);
      v37 = v32;
      v9 = v81;
      v87 = sub_100040F58(v37, v34, v89);
      v38 = v27;
      v12 = v83;
      v10 = v84;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v78, v38);
      swift_bridgeObjectRelease(v34);
      swift_release_n(v20, 2);
      v39 = v25;
      v40 = v79;
      _os_log_impl((void *)&_mh_execute_header, v24, v39, "Hide message: %s", v79, 0xCu);
      v41 = v80;
      swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      swift_release_n(v20, 2);
    }

    v8 = v82;
    Date.init()(v42);
    InfoBar.Message.didHide(at:)((uint64_t)v12);
    v43 = swift_release(v20);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v43);
  }
  if (a1)
  {
    v44 = v21[130];
    swift_retain(a1);
    if (v44 != -1)
      swift_once(&qword_1009CE410, sub_10040281C);
    v45 = type metadata accessor for Logger(0);
    sub_100048F64(v45, (uint64_t)qword_100A1E860);
    v46 = swift_retain_n(a1, 2);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.info.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v82 = v2;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v81 = swift_slowAlloc(32, -1);
      v87 = v81;
      v80 = v49;
      *(_DWORD *)v49 = 136315138;
      v79 = v49 + 4;
      sub_10029DACC(a1 + 16, (uint64_t)v89);
      v50 = *(_BYTE *)(a1 + 49);
      v51 = v9;
      v52 = v8;
      v53 = *(_QWORD *)(a1 + 56);
      v54 = *(_QWORD *)(a1 + 64);
      sub_10029DB08((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
      sub_10002ACF0(v53, v54);
      v55 = sub_100403F38((uint64_t)v89, v50);
      v57 = v56;
      sub_10029DB08((uint64_t)v89, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
      v58 = v53;
      v9 = v51;
      v59 = v54;
      v8 = v52;
      sub_10002AD00(v58, v59);
      v86 = sub_100040F58(v55, v57, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v79, v49 + 12);
      v60 = v57;
      v2 = v82;
      swift_bridgeObjectRelease(v60);
      swift_release_n(a1, 2);
      v61 = v80;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Show message: %s", v80, 0xCu);
      v62 = v81;
      swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);
    }
    else
    {
      swift_release_n(a1, 2);
    }

    v68 = v83;
    Date.init()(v69);
    v70 = v84;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v8, v68, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v8, 0, 1, v9);
    v71 = v85;
    sub_10002D974((uint64_t)v8, v85);
    v72 = a1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
    swift_beginAccess(a1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime, &v87, 33, 0);
    sub_10006CD88(v71, v72);
    swift_endAccess(&v87);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v9);
    sub_10029DACC(a1 + 16, (uint64_t)&v87);
    LOBYTE(v72) = *(_BYTE *)(a1 + 49);
    v73 = *(_QWORD *)(a1 + 56);
    v74 = *(_QWORD *)(a1 + 64);
    sub_10029DB08((uint64_t)&v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
    sub_10002ACF0(v73, v74);
    sub_10029DCC4((uint64_t)&v87, v72);
    sub_10029DB08((uint64_t)&v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v73, v74);
    swift_release(a1);
  }
  else
  {
    if (v21[130] != -1)
      swift_once(&qword_1009CE410, sub_10040281C);
    v63 = type metadata accessor for Logger(0);
    v64 = sub_100048F64(v63, (uint64_t)qword_100A1E860);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.info.getter(v65);
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Clear messages", v67, 2u);
      swift_slowDealloc(v67, -1, -1);
    }

  }
  v75 = swift_getKeyPath(&unk_100716B28);
  v76 = swift_getKeyPath(&unk_100716B50);
  v86 = a1;
  swift_retain(a1);
  swift_retain(v2);
  static Published.subscript.setter(&v86, v2, v75, v76);
}

uint64_t sub_10029D4C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch(sub_10029D4E0, v0, 0);
}

void sub_10029D4E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  unint64_t v14;
  _QWORD *v15;

  v1 = v0[6];
  KeyPath = swift_getKeyPath(&unk_100716B28);
  v3 = swift_getKeyPath(&unk_100716B50);
  static Published.subscript.getter(v0 + 5, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v0[5];
  v5 = 0.0;
  if (v4)
  {
    v6 = type metadata accessor for InfoBar.TimedMessage(0);
    if (swift_dynamicCastClass(v4, v6))
    {
      v7 = (uint64_t *)(v0[6] + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages);
      swift_beginAccess(v7, v0 + 2, 0, 0);
      v8 = *v7;
      if ((unint64_t)*v7 >> 62)
      {
        if (v8 < 0)
          v10 = *v7;
        else
          v10 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v11 = _CocoaArrayWrapper.endIndex.getter(v10);
        swift_bridgeObjectRelease(v8);
        if (v11)
          goto LABEL_5;
      }
      else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        swift_retain(v4);
        v9 = InfoBar.Message.totalDisplayedTime.getter();
        swift_release_n(v4, 2);
        if (1.0 - v9 < 0.0)
          v5 = 0.0;
        else
          v5 = 1.0 - v9;
        goto LABEL_14;
      }
      InfoBar.TimedMessage.timeRemaining.getter();
      v5 = v12;
    }
    swift_release(v4);
  }
LABEL_14:
  v13 = v5 * 1000.0 * 1000.0 * 1000.0;
  if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v13 <= -1.0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v13 < 1.84467441e19)
  {
    v14 = (unint64_t)v13;
    v15 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
    v0[7] = v15;
    *v15 = v0;
    v15[1] = sub_10029D6B0;
    static Task<>.sleep(nanoseconds:)(v14);
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_10029D6B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_10029D6F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages);
  swift_beginAccess(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages, v14, 0, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v2);
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage));
    return;
  }
  if (v2 < 0)
    v6 = *v1;
  else
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  if (!_CocoaArrayWrapper.endIndex.getter(v6))
    goto LABEL_19;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease(v2);
    if (!v4)
    {
      __break(1u);
      goto LABEL_22;
    }
  }
  swift_beginAccess(v1, v13, 33, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_22:
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v2);
  if (!v9)
    goto LABEL_26;
LABEL_7:
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_9;
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_27:
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v2);
  if (!v5)
    goto LABEL_31;
LABEL_9:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_32:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_34;
  }
  swift_retain(*(_QWORD *)(v2 + 32));
LABEL_12:
  v5 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      sub_1002C6ECC(0, 1);
      swift_endAccess(v13);
      return;
    }
    goto LABEL_38;
  }
LABEL_34:
  if (v5 < 0)
    v11 = v5;
  else
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v12 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v5);
  if (v12)
    goto LABEL_14;
LABEL_38:
  __break(1u);
}

void sub_10029D920()
{
  UIAccessibilityNotifications v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  v0 = UIAccessibilityAnnouncementNotification;
  v1 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v2 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v1, v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  UIAccessibilityPostNotification(v0, v5);

}

uint64_t InfoBar.MessageQueue.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage;
  v2 = sub_10004CFD4(&qword_1009D4580);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage));
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t InfoBar.MessageQueue.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue__currentMessage;
  v2 = sub_10004CFD4(&qword_1009D4580);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_resolveTask));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_timedMessages));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12MessageQueue_persistentMessage));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t InfoBar.MessageQueue.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10029DACC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for InfoBar.Content.ContentType(a2, a1);
  return a2;
}

uint64_t sub_10029DB08(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_10029DB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 < 2u)
    return swift_bridgeObjectRelease(a2);
  if (a5 - 2 <= 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_10029DB98()
{
  return type metadata accessor for InfoBar.MessageQueue(0);
}

uint64_t type metadata accessor for InfoBar.MessageQueue(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D7158;
  if (!qword_1009D7158)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InfoBar.MessageQueue);
  return result;
}

void sub_10029DBDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10029DC6C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100716BC8;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_100716BC8;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_10029DC6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D7178)
  {
    v2 = sub_100030B74(&qword_1009D4588);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D7178);
  }
}

double sub_10029DCC4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for DispatchTime(0);
  __chkstk_darwin(v6);
  result = __chkstk_darwin(v7);
  if ((a2 & 1) != 0)
  {
    sub_10029DACC(a1, (uint64_t)&v9);
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_10029E0BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10029E0E0()
{
  sub_10029D920();
}

uint64_t sub_10029E0E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10029E114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1009D72E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AE34;
  v3[2] = v2;
  v4 = (_QWORD *)swift_task_alloc(dword_1009D716C);
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_10029C758;
  return sub_10029C8A8();
}

void sub_10029E180()
{
  Task.cancel()();
}

NSString sub_10029E1A4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D72F8 = (uint64_t)result;
  return result;
}

NSString sub_10029E1D8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009D7300 = (uint64_t)result;
  return result;
}

_QWORD *sub_10029E20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  _QWORD *v42;

  v40 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - v13;
  v41[0] = a1;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009E9FD0);
  v16 = sub_10029F8CC(&qword_1009D7318, (uint64_t *)&unk_1009E9FD0);
  if ((Collection.isNotEmpty.getter(v15, v16) & 1) != 0)
  {
    v17 = *(_QWORD *)(a1 + 16);
    v18 = _swiftEmptyArrayStorage;
    if (v17)
    {
      v42 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v17);
      sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
      v19 = (uint64_t *)(a1 + 56);
      do
      {
        v21 = *(v19 - 3);
        v20 = *(v19 - 2);
        v22 = *(v19 - 1);
        v23 = *v19;
        v41[3] = &type metadata for String;
        v41[0] = v21;
        v41[1] = v20;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v23);
        v24 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v22, v23, 0, 0, 0, 0, "books_openRecent:", v41, _swiftEmptyArrayStorage, 0, 0, 0, 0);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = v42[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized ContiguousArray._endMutation()(v26);
        v19 += 4;
        --v17;
      }
      while (v17);
      return v42;
    }
  }
  else
  {
    v27 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v28 = swift_allocObject(v27, 40, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1007118F0;
    v39 = sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
    v29 = String.LocalizationValue.init(stringLiteral:)(1701736270, 0xE400000000000000);
    static Locale.current.getter(v29);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v30 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v40);
    v34 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v32, v4, "File -> Open Recent -> None", 27, 2);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v33);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v37 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v34, v36, 0, 0, 0, 0, 0, 0, 0, 1, 0, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0);
    *(_QWORD *)(v28 + 32) = v37;
    v41[0] = v28;
    specialized Array._endMutation()(v37);
    return (_QWORD *)v41[0];
  }
  return v18;
}

Class sub_10029E594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  id v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  UIMenu v49;
  uint64_t v50;
  Swift::String v51;
  Class isa;
  _QWORD *v54;
  Swift::OpaquePointer v55;
  Swift::OpaquePointer v56;
  uint64_t v57;
  char *v58;
  id v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  UIImage_optional v72;
  UIImage_optional v73;

  v64 = a1;
  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  __chkstk_darwin(v8);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - v13;
  v60 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v15 = String.LocalizationValue.init(stringLiteral:)(0x6F6F42206E65704FLL, 0xE90000000000006BLL);
  static Locale.current.getter(v15);
  v68 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v68(v11, v14, v8);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v67 = ObjCClassFromMetadata;
  v66 = (id)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v66, "bundleForClass:", ObjCClassFromMetadata);
  v65 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v69 = v1;
  v65(v4, v7, v1);
  v19 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v18, v4, "File -> Open Book", 17, 2);
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v2 + 8);
  v22(v7, v1);
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24 = v57;
  v23(v14, v57);
  v70 = 0u;
  v71 = 0u;
  v59 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v19, v21, 0, "books_open:", 79, 0xE100000000000000, 0x100000, &v70, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x65736F6C43, 0xE500000000000000);
  static Locale.current.getter(v25);
  v26 = v24;
  v68(v11, v14, v24);
  v27 = objc_msgSend(v66, "bundleForClass:", v67);
  v28 = v69;
  v65(v4, v7, v69);
  v58 = v11;
  v63 = v4;
  v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v27, v4, "File -> Close", 13, 2);
  v31 = v30;
  v32 = v7;
  v62 = v22;
  v22(v7, v28);
  v33 = v14;
  v61 = v23;
  v23(v14, v26);
  v70 = 0u;
  v71 = 0u;
  v60 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, "performClose:", 87, 0xE100000000000000, 0x100000, &v70, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CDDB8 != -1)
    swift_once(&qword_1009CDDB8, sub_10029E1A4);
  v34 = (void *)qword_1009D72F8;
  v35 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v36 = swift_allocObject(v35, 56, 7);
  *(_OWORD *)(v36 + 16) = xmmword_1007118D0;
  v37 = v59;
  *(_QWORD *)(v36 + 32) = v59;
  v38 = v34;
  v59 = v37;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x636552206E65704FLL, 0xEB00000000746E65);
  static Locale.current.getter(v39);
  v40 = v58;
  v68(v58, v14, v26);
  v41 = objc_msgSend(v66, "bundleForClass:", v67);
  v42 = v63;
  v43 = v7;
  v44 = v69;
  v65(v63, v43, v69);
  v45 = String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, v41, v42, "File -> Open Recent", 19, 2);
  v47 = v46;
  v62(v32, v44);
  v61(v33, v26);
  v54 = sub_10029E20C(v64);
  v48._countAndFlagsBits = v45;
  v48._object = v47;
  v72.value.super.isa = 0;
  v72.is_nil = 0;
  v49.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v48, (Swift::String_optional)0, v72, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v54, v55).super.super.isa;
  v50 = v60;
  *(UIMenu *)(v36 + 40) = v49;
  *(_QWORD *)(v36 + 48) = v50;
  *(_QWORD *)&v70 = v36;
  specialized Array._endMutation()(v49.super.super.isa);
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  v73.value.super.isa = 0;
  v73.is_nil = (char)v34;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v51, (Swift::String_optional)0, v73, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v70, v56).super.super.isa;

  return isa;
}

_QWORD *sub_10029EAE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  _QWORD *v42;

  v40 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - v13;
  v41[0] = a1;
  v15 = sub_10004CFD4(&qword_1009D7308);
  v16 = sub_10029F8CC(&qword_1009D7310, &qword_1009D7308);
  if ((Collection.isNotEmpty.getter(v15, v16) & 1) != 0)
  {
    v17 = *(_QWORD *)(a1 + 16);
    v18 = _swiftEmptyArrayStorage;
    if (v17)
    {
      v42 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v17);
      sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
      v19 = (uint64_t *)(a1 + 56);
      do
      {
        v21 = *(v19 - 3);
        v20 = *(v19 - 2);
        v22 = *(v19 - 1);
        v23 = *v19;
        v41[3] = &type metadata for String;
        v41[0] = v21;
        v41[1] = v20;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v23);
        v24 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v22, v23, 0, 0, 0, 0, "books_addSelectionToCollection:", v41, _swiftEmptyArrayStorage, 0, 0, 0, 0);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = v42[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized ContiguousArray._endMutation()(v26);
        v19 += 4;
        --v17;
      }
      while (v17);
      return v42;
    }
  }
  else
  {
    v27 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v28 = swift_allocObject(v27, 40, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1007118F0;
    v39 = sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
    v29 = String.LocalizationValue.init(stringLiteral:)(0x656C6C6F43206F4ELL, 0xED00006E6F697463);
    static Locale.current.getter(v29);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v30 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v40);
    v34 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v32, v4, "File -> Add to Collection -> No Collection", 42, 2);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v33);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v37 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v34, v36, 0, 0, 0, 0, 0, 0, 0, 1, 0, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0);
    *(_QWORD *)(v28 + 32) = v37;
    v41[0] = v28;
    specialized Array._endMutation()(v37);
    return (_QWORD *)v41[0];
  }
  return v18;
}

UIMenu sub_10029EE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  _QWORD *v24;
  Swift::OpaquePointer v25;
  uint64_t v26[2];
  UIImage_optional v27;

  v26[0] = a1;
  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v26 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v26 - v13;
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007BB680);
  static Locale.current.getter(v15);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  v19 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v18, v4, "File -> Add to Collection", 25, 2);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v24 = sub_10029EAE4(v26[0]);
  v22._countAndFlagsBits = v19;
  v22._object = v21;
  v27.value.super.isa = 0;
  v27.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v27, (UIMenuIdentifier_optional)2, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v24, v25);
}

UIMenu sub_10029F098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  UIMenu v34;
  Swift::String v35;
  Swift::OpaquePointer v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  UIImage_optional v47;

  v44 = a1;
  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - v13;
  v42 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v15 = String.LocalizationValue.init(stringLiteral:)(0x6C6C6F432077654ELL, 0xEE006E6F69746365);
  static Locale.current.getter(v15);
  v43 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v43(v11, v14, v8);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v41 = ObjCClassFromMetadata;
  v40 = (id)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v40, "bundleForClass:", ObjCClassFromMetadata);
  v39 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v39(v4, v7, v1);
  v19 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v18, v4, "File -> New Collection", 22, 2);
  v21 = v20;
  v38 = *(void (**)(char *, uint64_t))(v2 + 8);
  v38(v7, v1);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  v45 = 0u;
  v46 = 0u;
  v23 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v19, v21, 0, "books_createCollection:", 78, 0xE100000000000000, 0x100000, &v45, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001007BB630);
  static Locale.current.getter(v24);
  v43(v11, v14, v8);
  v25 = objc_msgSend(v40, "bundleForClass:", v41);
  v39(v4, v7, v1);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v4, "File -> New Collection From Selection", 37, 2);
  v28 = v27;
  v38(v7, v1);
  v22(v14, v8);
  v45 = 0u;
  v46 = 0u;
  v29 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v26, v28, 0, 0, 0, 0, "books_createCollectionFromSelection:", &v45, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CDDC0 != -1)
    swift_once(&qword_1009CDDC0, sub_10029E1D8);
  v30 = (void *)qword_1009D7300;
  v31 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v32 = swift_allocObject(v31, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1007118D0;
  v33 = v30;
  v34.super.super.isa = sub_10029EE80(v44).super.super.isa;
  *(UIMenu *)(v32 + 32) = v34;
  *(_QWORD *)(v32 + 40) = v23;
  *(_QWORD *)(v32 + 48) = v29;
  *(_QWORD *)&v45 = v32;
  specialized Array._endMutation()(v34.super.super.isa);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v47.value.super.isa = 0;
  v47.is_nil = (char)v30;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v47, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v45, v37);
}

void sub_10029F4D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  Class v19;
  UIMenu v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  UIMenu v33;
  Swift::OpaquePointer v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[3];
  UIImage_optional v38;

  v35 = a3;
  v36 = type metadata accessor for Locale(0);
  v5 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v35 - v17;
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuOpenRecent, v16);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuClose);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuNewScene);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuDocument);
  v19 = sub_10029E594(a2);
  objc_msgSend(a1, "insertChildMenu:atStartOfMenuForIdentifier:", v19, UIMenuFile);

  v20.super.super.isa = sub_10029F098(v35).super.super.isa;
  if (qword_1009CDDB8 != -1)
    swift_once(&qword_1009CDDB8, sub_10029E1A4);
  objc_msgSend(a1, "insertSiblingMenu:afterMenuForIdentifier:", v20.super.super.isa, qword_1009D72F8, v35);

  v35 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x80E274726F706D49, 0xA9000000000000A6);
  static Locale.current.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v18, v11);
  v22 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v25 = v36;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v36);
  v26 = String.init(localized:table:bundle:locale:comment:)(v14, 0, 0, v24, v7, "File -> Import…", 17, 0);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  memset(v37, 0, 32);
  v29 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v26, v28, 0, 0, 0, 0, "books_import:", v37, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v30 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v31 = swift_allocObject(v30, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v31 + 32) = v29;
  *(_QWORD *)&v37[0] = v31;
  specialized Array._endMutation()(v31);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v38.value.super.isa = 0;
  v38.is_nil = 0;
  v33.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, *(UIMenuElementSize *)&v37[0], v34).super.super.isa;
  if (qword_1009CDDC0 != -1)
    swift_once(&qword_1009CDDC0, sub_10029E1D8);
  objc_msgSend(a1, "insertSiblingMenu:afterMenuForIdentifier:", v33.super.super.isa, qword_1009D7300);

}

uint64_t sub_10029F8CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100030B74(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10029F90C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState] != a1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v4);
    v10 = v2;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      *(_DWORD *)v13 = 134218240;
      v15 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v13 + 4, v13 + 12);
      *(_WORD *)(v13 + 12) = 2048;
      v15 = *(_QWORD *)&v2[v9];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v13 + 14, v13 + 22);

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "downloadState did change from %ld to %ld", (uint8_t *)v13, 0x16u);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {

      v11 = v10;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

_QWORD *sub_10029FAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor____lazy_storage___playbackRates;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor____lazy_storage___playbackRates);
  if (v2)
  {
    v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor____lazy_storage___playbackRates);
  }
  else
  {
    v3 = sub_10029FB34(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_QWORD *sub_10029FB34(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[24];

  v1 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v11, 0, 0);
  sub_10003F198(v1, v1[3]);
  v2 = sub_1003F6888();
  v3 = v2;
  v4 = v2[2];
  if (v4)
  {
    v5 = (int *)(v2 + 4);
    v6 = _swiftEmptyArrayStorage;
    do
    {
      v7 = *v5;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_1005B05A0(0, v6[2] + 1, 1, v6);
      v9 = v6[2];
      v8 = v6[3];
      if (v9 >= v8 >> 1)
        v6 = sub_1005B05A0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      v6[2] = v9 + 1;
      *((_DWORD *)v6 + v9 + 8) = v7;
      ++v5;
      --v4;
    }
    while (v4);
  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v3);
  return v6;
}

void sub_10029FC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *Strong;
  int v4;
  _BYTE *v5;
  char *v6;
  id v7;
  unsigned __int8 *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  char v12;

  v2 = a2 + 16;
  Strong = (unsigned __int8 *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = Strong[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_multipleRoutesDetected];

  v5 = (_BYTE *)swift_unknownObjectUnownedLoadStrong(v2);
  v6 = (char *)swift_unknownObjectUnownedLoadStrong(v2);
  v7 = *(id *)&v6[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_routeDetector];

  LOBYTE(v6) = objc_msgSend(v7, "multipleRoutesDetected");
  v5[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_multipleRoutesDetected] = (_BYTE)v6;

  v8 = (unsigned __int8 *)swift_unknownObjectUnownedLoadStrong(v2);
  LODWORD(v5) = v8[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_multipleRoutesDetected];

  if (v4 != (_DWORD)v5)
  {
    v9 = (char *)swift_unknownObjectUnownedLoadStrong(v2);
    v10 = swift_unknownObjectWeakLoadStrong(&v9[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate]);

    if (v10)
    {
      v11 = (_BYTE *)swift_unknownObjectUnownedLoadStrong(v2);
      v12 = v11[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_multipleRoutesDetected];

      type metadata accessor for AudiobookNowPlayingPresenter(0);
      sub_1004CC63C(v12);
      swift_unknownObjectRelease(v10);
    }
  }
}

void sub_10029FD74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (char *)Strong;
    if (!*(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork))
    {
      v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v3);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter(v10);
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Cached artwork is nil after becoming active again.  Will generate a generic cover.", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v13 = (uint64_t)&v8[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
      swift_beginAccess(&v8[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v21, 0, 0);
      sub_10002E418(v13, (uint64_t)v20);
      v14 = sub_10003F198(v20, v20[3]);
      v15 = swift_allocObject(&unk_1008F8F00, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16, v8);
      v16 = *v14;
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v17 = swift_allocObject(&unk_1008F9180, 24, 7);
      swift_unknownObjectWeakInit(v17 + 16, v16);
      v18 = swift_allocObject(&unk_1008F91D0, 56, 7);
      *(_QWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = sub_1002A8EF0;
      *(_QWORD *)(v18 + 32) = v15;
      *(int64x2_t *)(v18 + 40) = vdupq_n_s64(0x4098000000000000uLL);
      swift_retain_n(v15, 2);
      swift_retain(v17);
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8EFC, v18);
      swift_release_n(v15, 2);
      swift_release(v17);
      swift_release(v18);
      _s5Books15CurrentPageViewVwxx_0(v20);
    }

  }
}

uint64_t sub_1002A014C()
{
  return type metadata accessor for AudiobookNowPlayingInteractor(0);
}

uint64_t type metadata accessor for AudiobookNowPlayingInteractor(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D7420;
  if (!qword_1009D7420)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookNowPlayingInteractor);
  return result;
}

void sub_1002A0190(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[28];

  v7[0] = &unk_100716C20;
  v7[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v7[2] = &unk_100716C38;
  v7[3] = &unk_100716C50;
  v7[4] = &unk_100716C68;
  v7[5] = &unk_100716C80;
  v7[6] = &unk_100716C80;
  v7[7] = &unk_100716C98;
  v7[8] = &unk_100716C98;
  v7[9] = &unk_100716C80;
  v7[10] = &unk_100716C98;
  v7[11] = &unk_100716C98;
  v7[12] = &unk_100716C98;
  sub_10006CDD0(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v7[15] = &unk_100716C98;
    v7[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v7[17] = &unk_100716CB0;
    v7[18] = (char *)&value witness table for Builtin.Int64 + 64;
    v7[13] = v4;
    v7[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[19] = (char *)&value witness table for Builtin.Int16 + 64;
    v7[20] = &unk_100716C98;
    v7[21] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7[22] = &unk_100716C98;
    v5 = type metadata accessor for Logger(319);
    if (v6 <= 0x3F)
    {
      v7[23] = *(_QWORD *)(v5 - 8) + 64;
      v7[24] = &unk_100716C38;
      v7[25] = &unk_100716CC8;
      v7[26] = &unk_100716C80;
      v7[27] = &unk_100716CE0;
      swift_updateClassMetadata2(a1, 256, 28, v7, a1 + 80);
    }
  }
}

void sub_1002A02DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - v6;
  v8 = &v0[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v35, 0, 0);
  v9 = (uint64_t *)(*sub_10003F198(v8, *((_QWORD *)v8 + 3))
                 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_storeID);
  v10 = v9[1];
  if (v10 && (v11 = *(void **)&v0[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_storeManager]) != 0)
  {
    v12 = *v9;
    v13 = objc_msgSend(v11, "clientApplicationController", swift_bridgeObjectRetain(v9[1]).n128_f64[0]);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, &v0[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v1);
    v14 = swift_bridgeObjectRetain_n(v10, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v32 = v1;
      v17 = swift_slowAlloc(12, -1);
      v31 = v12;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc(32, -1);
      v34 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain(v10);
      v33 = sub_100040F58(v31, v10, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(v10, 3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "cancelDownload storeID: %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v32);
    }
    else
    {

      swift_bridgeObjectRelease_n(v10, 2);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "cancelDownloadingAssetWithStoreId:", v29, swift_bridgeObjectRelease(v10).n128_f64[0]);
    swift_unknownObjectRelease(v13);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v0[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v1);
    v20 = v0;
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.info.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v32 = v1;
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v34 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = (uint64_t *)(*sub_10003F198(v8, *((_QWORD *)v8 + 3))
                      + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_storeID);
      v26 = v25[1];
      if (v26)
      {
        v27 = *v25;
        v28 = v25[1];
      }
      else
      {
        v28 = 0xE300000000000000;
        v27 = 7104878;
      }
      swift_bridgeObjectRetain(v26);
      v33 = sub_100040F58(v27, v28, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v23 + 4, v23 + 12);

      swift_bridgeObjectRelease(v28);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No storeID (%s) or no storeController.  Cannot cancel download.", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v32);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
}

id sub_1002A0718(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v12[24];

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = objc_msgSend((id)objc_opt_self(NSDate), "now");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v6);

  v7 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp, v12, 33, 0);
  sub_10000B558((uint64_t)v5, v8, &qword_1009D7440);
  swift_endAccess(v12);
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v9, v12, 0, 0);
  sub_10003F198(v9, v9[3]);
  return sub_1003F7024(a1);
}

uint64_t sub_1002A084C(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  _QWORD *v17;
  _QWORD v19[5];
  _QWORD *v20;
  _QWORD v21[5];
  char v22[24];

  v7 = v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v22, 0, 0);
  sub_10002E418(v7, (uint64_t)v21);
  v8 = sub_10003F198(v21, v21[3]);
  v9 = swift_allocObject(&unk_1008F8F00, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = (_QWORD *)swift_allocObject(&unk_1008F90B8, 40, 7);
  v10[2] = v9;
  v10[3] = a1;
  v10[4] = a2;
  v11 = *(void **)(*v8 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
  swift_retain(v9);
  sub_10002ACF0(a1, a2);
  objc_msgSend(v11, "durationOfCurrentChapter");
  v13 = v12 + -0.4;
  v14 = v12 * a3;
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v19[4] = sub_1002A8B50;
  v20 = v10;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10004DCB4;
  v19[3] = &unk_1008F90D0;
  v16 = _Block_copy(v19);
  v17 = v20;
  swift_unknownObjectRetain(v11);
  swift_retain(v10);
  swift_release(v17);
  objc_msgSend(v11, "movePositionInCurrentChapter:completion:", v16, v15);
  _Block_release(v16);
  swift_release(v9);
  swift_release(v10);
  swift_unknownObjectRelease(v11);
  return _s5Books15CurrentPageViewVwxx_0(v21);
}

void sub_1002A0A00(char a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t Strong;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v6 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (char *)Strong;
    v11 = objc_msgSend((id)objc_opt_self(NSDate), "now");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v11);

    v12 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
    v13 = (uint64_t)&v10[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp];
    swift_beginAccess(&v10[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp], v14, 33, 0);
    sub_10000B558((uint64_t)v8, v13, &qword_1009D7440);
    swift_endAccess(v14);

  }
  if (a3)
    a3(a1 & 1);
}

uint64_t sub_1002A0B40(uint64_t a1, unsigned __int16 a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  BOOL v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  double v19;
  unsigned int v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  unsigned int v32;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t Strong;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  double v58;
  char v59;
  uint64_t v60;
  uint64_t v61;

  v4 = v3;
  v7 = a2;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v56 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v55 - v12;
  switch(a1)
  {
    case 0:
      v14 = v7 == 3;
      goto LABEL_8;
    case 1:
      v57 = 0;
      v19 = a3;
      goto LABEL_14;
    case 2:
      v14 = (v7 & 0xFFFE) == 2;
LABEL_8:
      if (v14)
        v20 = 1;
      else
        v20 = 3;
      v57 = v20 | 0x100000000;
      v19 = 0.0;
      goto LABEL_14;
    case 3:
      HIDWORD(v57) = 0;
      v19 = a3;
      goto LABEL_13;
    default:
      v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v55 - v12, v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v8);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.error.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v18 = 134217984;
        v60 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v18 + 4, v18 + 12);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unhandled download enum value %ld in interactor", v18, 0xCu);
        swift_slowDealloc(v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
      HIDWORD(v57) = 1;
      v19 = 0.0;
LABEL_13:
      LODWORD(v57) = 3;
LABEL_14:
      v21 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
      swift_beginAccess(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, &v60, 0, 0);
      if ((*(_BYTE *)(*sub_10003F198(v21, v21[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_streaming) & 1) == 0)
      {
        v23 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState;
        goto LABEL_22;
      }
      v22 = objc_msgSend(*(id *)(*sub_10003F198(v21, v21[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state");
      v23 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState;
      v24 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState);
      if (v24 == 2)
      {
        if (a1 != 3)
          goto LABEL_24;
        if (v22 != (id)3)
        {
          if (v22 == (id)2)
          {
            if (v7 != 1)
              goto LABEL_47;
            goto LABEL_45;
          }
          goto LABEL_22;
        }
        if (v7 != 1)
        {
LABEL_47:
          *(_BYTE *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState) = 0;
          goto LABEL_24;
        }
      }
      else
      {
        if ((v24 & 1) != 0 || v7 != 1)
          goto LABEL_24;
        if (v22 != (id)3)
        {
          if (v22 == (id)2)
          {
LABEL_45:
            v25 = 1;
            goto LABEL_23;
          }
LABEL_22:
          v25 = 2;
LABEL_23:
          *(_BYTE *)(v4 + v23) = v25;
          goto LABEL_24;
        }
      }
      *(_BYTE *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState) = 2;
      Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
      if (Strong)
      {
        v51 = (void *)Strong;
        v52 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v4
                                                          + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates) + 16);
        if (v52)
        {
          v53 = (void *)v52;
          v54 = v51;
          objc_msgSend(v53, "audiobookNowPlayingViewController:shouldStream:", v54, 0);

          swift_unknownObjectRelease(v53);
        }
        else
        {

        }
      }
LABEL_24:
      v26 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_assetState;
      v27 = *(unsigned __int16 *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_assetState);
      v28 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState) = a1;
      sub_10029F90C(v28);
      *(_WORD *)(v4 + v26) = v7;
      if (v7 == 2)
      {
        v29 = sub_10003F198(v21, v21[3]);
        sub_10003F198((_QWORD *)(*v29 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(*v29 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider + 24));
        sub_10042FDEC(a3);
      }
      v30 = objc_msgSend(*(id *)(*sub_10003F198(v21, v21[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
      if (v30)
      {
        v31 = v30;
        v32 = objc_msgSend(v30, "isAudiobookPreview");
        swift_unknownObjectRelease(v31);
        if (v7 == 2 && v32 && v27 == 0)
        {
          v34 = v56;
          v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v56, v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v8);
          v36 = Logger.logObject.getter(v35);
          v37 = static os_log_type_t.default.getter(v36);
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v38 = 0;
            _os_log_impl((void *)&_mh_execute_header, v36, v37, "Stopping playback of audiobook preview because user purchased the audiobook", v38, 2u);
            swift_slowDealloc(v38, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v34, v8);
          objc_msgSend(*(id *)(*sub_10003F198(v21, v21[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "stop");
        }
      }
      v39 = v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate;
      v40 = swift_unknownObjectWeakLoadStrong(v39);
      if (v40)
      {
        v41 = v40;
        v42 = *(void **)(v40 + 16);
        KeyPath = swift_getKeyPath(&unk_100716E48);
        v44 = swift_getKeyPath(&unk_100716E70);
        LOBYTE(v58) = v57;
        static Published.subscript.setter(&v58, v42, KeyPath, v44);
        swift_unknownObjectRelease(v41);
      }
      result = swift_unknownObjectWeakLoadStrong(v39);
      if (result)
      {
        v46 = result;
        v47 = *(void **)(result + 16);
        v48 = swift_getKeyPath(&unk_100717088);
        v49 = swift_getKeyPath(&unk_1007170B0);
        v58 = v19;
        v59 = BYTE4(v57);
        static Published.subscript.setter(&v58, v47, v48, v49);
        return swift_unknownObjectRelease(v46);
      }
      return result;
  }
}

double sub_1002A10F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t *v10;
  double result;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t Strong;
  double v29;
  uint64_t v30;
  void *v31;
  uint64_t KeyPath;
  uint64_t v33;
  void *v34;
  id v35;
  NSString v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - v7;
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v42, 0, 0);
  v10 = (uint64_t *)(*sub_10003F198(v9, v9[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_storeID);
  v12 = v10[1];
  if (v12)
  {
    v39 = *v10;
    v13 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor), "isConnected", swift_bridgeObjectRetain(v12).n128_f64[0]);
    v14 = v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger;
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    if (v13)
    {
      v15(v8, v14, v2);
      v16 = swift_bridgeObjectRetain_n(v12, 2);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(12, -1);
        v20 = swift_slowAlloc(32, -1);
        v41 = v20;
        *(_DWORD *)v19 = 136315138;
        v38 = v19 + 4;
        swift_bridgeObjectRetain(v12);
        v40 = sub_100040F58(v39, v12, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v38, v19 + 12);
        swift_bridgeObjectRelease_n(v12, 3);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "startDownload storeID: %s", v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        v21 = swift_bridgeObjectRelease_n(v12, 2);
      }
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v8, v2, v21);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
      if (Strong)
      {
        v30 = Strong;
        v31 = *(void **)(Strong + 16);
        KeyPath = swift_getKeyPath(&unk_100716E48);
        v33 = swift_getKeyPath(&unk_100716E70);
        LOBYTE(v41) = 2;
        static Published.subscript.setter(&v41, v31, KeyPath, v33);
        *(_QWORD *)&v29 = swift_unknownObjectRelease(v30).n128_u64[0];
      }
      v34 = *(void **)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_storeManager);
      if (v34)
      {
        v35 = objc_msgSend(v34, "clientApplicationController", v29);
        swift_unknownObjectRetain(v35);
        v36 = String._bridgeToObjectiveC()();
        objc_msgSend(v35, "startOrResumeDownloadingAssetWithStoreId:", v36, swift_bridgeObjectRelease(v12).n128_f64[0]);

        swift_unknownObjectRelease_n(v35, 2);
      }
      else
      {
        *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
      }
    }
    else
    {
      v15(v5, v14, v2);
      swift_bridgeObjectRetain(v12);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v41 = v26;
        *(_DWORD *)v25 = 136315138;
        v38 = v25 + 4;
        swift_bridgeObjectRetain(v12);
        v40 = sub_100040F58(v39, v12, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v38, v25 + 12);
        swift_bridgeObjectRelease_n(v12, 3);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Not connected to internet. Cannot start download of storeID: %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);

      }
      else
      {

        v27 = swift_bridgeObjectRelease_n(v12, 2);
      }
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v27);
      sub_1002A156C();
    }
  }
  return result;
}

uint64_t sub_1002A156C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v54 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v54 - v12;
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007BBA40);
  static Locale.current.getter(v14);
  v58 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v58(v11, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v57 = (id)objc_opt_self(NSBundle);
  v59 = ObjCClassFromMetadata;
  v17 = objc_msgSend(v57, "bundleForClass:", ObjCClassFromMetadata);
  v60 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v60(v4, v6, v0);
  v62 = v4;
  v55 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v17, v4, "Audiobook Unavailable", 21, 2);
  v63 = v18;
  v64 = v0;
  v61 = *(void (**)(char *, uint64_t))(v1 + 8);
  v61(v6, v0);
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20 = v56;
  v19(v13, v7);
  v21 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor;
  v22 = objc_msgSend(*(id *)(v20 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor), "isAirplaneModeEnabled");
  v23 = *(void **)(v20 + v21);
  if (v22)
  {
    if (objc_msgSend(v23, "hasWAPICapability"))
    {
      v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000004BLL, 0x80000001007BBBD0);
      static Locale.current.getter(v24);
      v58(v11, v13, v7);
      v25 = v7;
      v26 = objc_msgSend(v57, "bundleForClass:", v59);
      v27 = v62;
      v28 = v64;
      v60(v62, v6, v64);
      v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v26, v27, "To play this audiobook, turn off Airplane Mode or turn on WLAN in Settings.", 75, 2);
    }
    else
    {
      v34 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000004CLL, 0x80000001007BBB80);
      static Locale.current.getter(v34);
      v58(v11, v13, v7);
      v25 = v7;
      v35 = objc_msgSend(v57, "bundleForClass:", v59);
      v36 = v62;
      v28 = v64;
      v60(v62, v6, v64);
      v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v35, v36, "To play this audiobook, turn off Airplane Mode or turn on Wi-Fi in Settings.", 76, 2);
    }
  }
  else if (objc_msgSend(v23, "hasCellularCapability")
         && (objc_msgSend(*(id *)(v20 + v21), "hasCellularConnection") & 1) == 0)
  {
    if (objc_msgSend(*(id *)(v20 + v21), "hasWAPICapability"))
    {
      v40 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000001007BBB30);
      static Locale.current.getter(v40);
      v58(v11, v13, v7);
      v25 = v7;
      v41 = objc_msgSend(v57, "bundleForClass:", v59);
      v42 = v62;
      v28 = v64;
      v60(v62, v6, v64);
      v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v41, v42, "To play this audiobook, turn on Cellular Data or WLAN in Settings.", 66, 2);
    }
    else
    {
      v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x80000001007BBAE0);
      static Locale.current.getter(v43);
      v58(v11, v13, v7);
      v25 = v7;
      v44 = objc_msgSend(v57, "bundleForClass:", v59);
      v45 = v62;
      v28 = v64;
      v60(v62, v6, v64);
      v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v44, v45, "To play this audiobook, turn on Cellular Data or Wi-Fi in Settings.", 67, 2);
    }
  }
  else if (objc_msgSend(*(id *)(v20 + v21), "hasWAPICapability"))
  {
    v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x80000001007BBAA0);
    static Locale.current.getter(v31);
    v58(v11, v13, v7);
    v25 = v7;
    v32 = objc_msgSend(v57, "bundleForClass:", v59);
    v33 = v62;
    v28 = v64;
    v60(v62, v6, v64);
    v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v32, v33, "To play this audiobook, turn on WLAN in Settings.", 49, 2);
  }
  else
  {
    v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000032, 0x80000001007BBA60);
    static Locale.current.getter(v37);
    v58(v11, v13, v7);
    v25 = v7;
    v38 = objc_msgSend(v57, "bundleForClass:", v59);
    v39 = v62;
    v28 = v64;
    v60(v62, v6, v64);
    v29 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v38, v39, "To play this audiobook, turn on Wi-Fi in Settings.", 50, 2);
  }
  v46 = v29;
  v47 = v30;
  v61(v6, v28);
  v19(v13, v25);
  Strong = swift_unknownObjectWeakLoadStrong(v20 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (Strong)
  {
    v49 = Strong;
    v50 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v20 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
    if (v50)
    {
      v51 = v50;
      v52 = v63;
      sub_1005A7BB8(v55, v63, v46, v47, v51);
      swift_unknownObjectRelease(v49);
      swift_bridgeObjectRelease(v47);

      v47 = v52;
    }
    else
    {
      swift_unknownObjectRelease(v49);
      swift_bridgeObjectRelease(v47);
      v47 = v63;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v63);
  }
  return swift_bridgeObjectRelease(v47);
}

id sub_1002A1C40()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v3, 0, 0);
  if (objc_msgSend(*(id *)(*sub_10003F198(v1, v1[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state") == (id)2)return objc_msgSend(*(id *)(*sub_10003F198(v1, v1[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "pause");
  else
    return sub_1002A1CE8(1);
}

id sub_1002A1CE8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  id v37;
  NSString v38;
  id v39;
  _QWORD aBlock[5];
  _QWORD *v41;
  _QWORD v42[5];
  char v43[24];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)aBlock - v12;
  v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v43, 0, 0);
  if (objc_msgSend(*(id *)(*sub_10003F198(v14, v14[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state") == (id)2)
  {
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v7);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "play - already playing", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  else if ((a1 & 1) != 0)
  {
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v7);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "play - update bookmark if needed", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v24 = swift_allocObject(&unk_1008F8F00, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16, v2);
    sub_10002E418((uint64_t)v14, (uint64_t)v42);
    v25 = sub_10003F198(v42, v42[3]);
    v26 = swift_allocObject(&unk_1008F8F00, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v2);
    v27 = (_QWORD *)swift_allocObject(&unk_1008F8F28, 40, 7);
    v27[2] = v26;
    v27[3] = sub_1002A84C8;
    v27[4] = v24;
    v28 = *v25;
    v29 = *(void **)(*v25 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
    swift_retain_n(v26, 2);
    swift_retain_n(v24, 3);
    v30 = objc_msgSend(v29, "currentAudiobook");
    if (v30)
    {
      v31 = v30;
      v32 = *(void **)(v28 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_persistenceController);
      aBlock[4] = sub_1002A84D4;
      v41 = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002A7DA4;
      aBlock[3] = &unk_1008F8F40;
      v33 = _Block_copy(aBlock);
      v34 = v41;
      swift_retain(v27);
      swift_release(v34);
      objc_msgSend(v32, "bookmarkTimeForAudiobook:completion:", v31, v33);
      _Block_release(v33);
      swift_release(v24);
      swift_release_n(v26, 2);
      swift_release(v27);
      swift_unknownObjectRelease(v31);
    }
    else
    {
      v35 = objc_msgSend((id)objc_opt_self(NSDate), "now");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v35);

      v36 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 0, 1, v36);
      v37 = objc_allocWithZone((Class)NSError);
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v37, "initWithDomain:code:userInfo:", v38, 0, 0);

      sub_1002A84E0((uint64_t)v6, (uint64_t)v39, v26, (void (*)(uint64_t))sub_1002A84C8, v24, 0.0);
      sub_100010960((uint64_t)v6, &qword_1009D7440);
      swift_release(v24);
      swift_release_n(v26, 2);
      swift_release(v27);
    }
    _s5Books15CurrentPageViewVwxx_0(v42);
    return (id)swift_release_n(v24, 2);
  }
  else
  {
    return objc_msgSend(*(id *)(*sub_10003F198(v14, v14[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "play");
  }
}

uint64_t sub_1002A21F8(uint64_t a1)
{
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  swift_retain(a1);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8B04, a1);
  return swift_release(a1);
}

uint64_t sub_1002A224C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _QWORD v5[5];
  _BYTE v6[24];
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager;
    swift_beginAccess(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v6, 0, 0);
    sub_10002E418(v4, (uint64_t)v5);

    objc_msgSend(*(id *)(*sub_10003F198(v5, v5[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "play");
    return _s5Books15CurrentPageViewVwxx_0(v5);
  }
  return result;
}

id sub_1002A22F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  id result;
  double v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  _QWORD aBlock[5];
  _QWORD *v23;
  _QWORD v24[5];
  char v25[24];

  v1 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v1);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v25, 0, 0);
  result = objc_msgSend(*(id *)(*sub_10003F198(v4, v4[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "pausedDuration");
  if (v6 > 3600.0)
  {
    sub_10002E418((uint64_t)v4, (uint64_t)v24);
    v7 = sub_10003F198(v24, v24[3]);
    v8 = swift_allocObject(&unk_1008F8F00, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16);
    v9 = (_QWORD *)swift_allocObject(&unk_1008F9068, 40, 7);
    v9[2] = v8;
    v9[3] = BKAppDelegate.enableMetricsInspectorOnDebugMode();
    v9[4] = 0;
    v10 = *v7;
    v11 = *(void **)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
    swift_retain_n(v8, 2);
    v12 = objc_msgSend(v11, "currentAudiobook");
    if (v12)
    {
      v13 = v12;
      v14 = *(void **)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_persistenceController);
      aBlock[4] = sub_1002A9278;
      v23 = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002A7DA4;
      aBlock[3] = &unk_1008F9080;
      v15 = _Block_copy(aBlock);
      v16 = v23;
      swift_retain(v9);
      objc_msgSend(v14, "bookmarkTimeForAudiobook:completion:", v13, v15, swift_release(v16).n128_f64[0]);
      _Block_release(v15);
      swift_release_n(v8, 2);
      swift_release(v9);
      swift_unknownObjectRelease(v13);
    }
    else
    {
      v17 = objc_msgSend((id)objc_opt_self(NSDate), "now");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v17);

      v18 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 0, 1, v18);
      v19 = objc_allocWithZone((Class)NSError);
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v19, "initWithDomain:code:userInfo:", v20, 0, 0);

      sub_1002A84E0((uint64_t)v3, (uint64_t)v21, v8, (void (*)(uint64_t))BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0, 0.0);
      sub_100010960((uint64_t)v3, &qword_1009D7440);
      swift_release_n(v8, 2);
      swift_release(v9);
    }
    return (id)_s5Books15CurrentPageViewVwxx_0(v24);
  }
  return result;
}

float sub_1002A25F4(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  float v9;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  float v14;
  float v15;
  float v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 1.0;
  if (a2 != 0.0)
  {
    v11 = *(_QWORD *)(a1 + 16);
    if (v11)
    {
      v9 = *(float *)(a1 + 32);
      v12 = v11 - 1;
      if (v12)
      {
        v13 = (float *)(a1 + 36);
        v14 = *(float *)(a1 + 32);
        do
        {
          v15 = *v13++;
          v16 = v15;
          if (vabds_f32(v15, a2) < vabds_f32(v14, a2))
          {
            v9 = v16;
            v14 = v16;
          }
          --v12;
        }
        while (v12);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v5);
      v17 = swift_bridgeObjectRetain_n(a1, 2);
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.error.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc(22, -1);
        v27 = swift_slowAlloc(32, -1);
        v29 = v27;
        *(_DWORD *)v20 = 134218242;
        v28 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v20 + 4, v20 + 12);
        *(_WORD *)(v20 + 12) = 2080;
        v26 = v20 + 14;
        swift_bridgeObjectRetain(a1);
        v22 = Array.description.getter(v21, &type metadata for Float);
        v24 = v23;
        swift_bridgeObjectRelease(a1);
        v28 = COERCE_DOUBLE(sub_100040F58(v22, v24, &v29));
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v26, v20 + 22);
        swift_bridgeObjectRelease_n(a1, 2);
        swift_bridgeObjectRelease(v24);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to find a closest playback rate for raw rate: %f, playbackRates: %s", (uint8_t *)v20, 0x16u);
        v25 = v27;
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a1, 2);
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return v9;
}

uint64_t sub_1002A2868(void *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  double v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Swift::String v11;
  unint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t inited;
  NSString *v17;
  id v18;
  unint64_t v19;
  Class isa;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27[72];
  uint64_t v28;
  unint64_t v29;

  v2 = sub_10029FAD0();
  v3 = v2;
  v25 = v2[2];
  if (v25)
  {
    v24 = 0;
    v4 = 0;
    v26 = 0xE000000000000000;
    v5 = -1.0;
    do
    {
      v7 = *((_DWORD *)v3 + v4 + 8);
      v8 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v9 = swift_allocObject(v8, 72, 7);
      *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
      *(_QWORD *)(v9 + 56) = &type metadata for Float;
      *(_QWORD *)(v9 + 64) = &protocol witness table for Float;
      *(_DWORD *)(v9 + 32) = v7;
      v28 = String.init(format:_:)(26405, 0xE200000000000000, v9);
      v29 = v10;
      v11._countAndFlagsBits = 38851;
      v11._object = (void *)0xA200000000000000;
      String.append(_:)(v11);
      v13 = v28;
      v12 = v29;
      v14 = String._bridgeToObjectiveC()();
      v15 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
      inited = swift_initStackObject(v15, v27);
      *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 64) = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
      *(_QWORD *)(inited + 40) = a1;
      v17 = NSFontAttributeName;
      v18 = a1;
      v19 = sub_1001DA774(inited);
      type metadata accessor for Key(0);
      sub_100008DB0((unint64_t *)&qword_1009D7490, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10070F218);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v19);
      objc_msgSend(v14, "sizeWithAttributes:", isa);
      v22 = v21;

      if (v5 < v22)
      {
        v6 = v26;
        v5 = v22;
        v24 = v13;
        v26 = v12;
      }
      else
      {
        v6 = v12;
      }
      ++v4;
      swift_bridgeObjectRelease(v6);
    }
    while (v25 != v4);
    swift_bridgeObjectRelease(v3);
    return v24;
  }
  else
  {
    swift_bridgeObjectRelease(v2);
    return 0;
  }
}

uint64_t sub_1002A2A98()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _BYTE v25[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v25, 0, 0);
  v2 = objc_msgSend(*(id *)(*sub_10003F198(v1, v1[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v4 = v2;
  v5 = objc_msgSend(v2, "chapters");
  swift_unknownObjectRelease(v4);
  v6 = sub_10004CFD4(&qword_1009D7448);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return (uint64_t)v3;
  }
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_14;
LABEL_4:
  v24 = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v8);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      }
      else
      {
        v21 = *(void **)(v7 + 8 * v10 + 32);
        swift_unknownObjectRetain(v21);
      }
      v22 = objc_msgSend(v21, "title", v24);
      if (v22)
      {
        v11 = v22;
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v14 = v13;

      }
      else
      {
        v12 = 0;
        v14 = 0xE000000000000000;
      }
      ++v10;
      objc_msgSend(v21, "duration");
      v16 = v15;
      swift_unknownObjectRelease(v21);
      v17 = type metadata accessor for AudiobookNowPlayingViewModel.Chapter();
      v18 = (_QWORD *)swift_allocObject(v17, 40, 7);
      v18[2] = v12;
      v18[3] = v14;
      v18[4] = v16;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v19 = v24[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v18);
      specialized ContiguousArray._endMutation()(v20);
    }
    while (v8 != v10);
    v3 = v24;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002A2CD8()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE v23[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v23, 0, 0);
  v2 = objc_msgSend(*(id *)(*sub_10003F198(v1, v1[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = v2;
  v4 = objc_msgSend(v2, "supplementalContents");
  swift_unknownObjectRelease(v3);
  v5 = sub_100009E04(0, &qword_1009E2CA0, BKAudiobookSupplementalContent_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease(v6);
    return _swiftEmptyArrayStorage;
  }
  if (v6 < 0)
    v21 = v6;
  else
    v21 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_17;
LABEL_4:
  result = (_QWORD *)sub_100366AE0(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v22 = v6 & 0xC000000000000001;
    v10 = v6;
    do
    {
      if (v22)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      else
        v11 = *(id *)(v6 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, "title");
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      v17 = objc_msgSend(v12, "assetIdentifier");
      v19 = _swiftEmptyArrayStorage[2];
      v18 = _swiftEmptyArrayStorage[3];
      if (v19 >= v18 >> 1)
        sub_100366AE0(v18 > 1, v19 + 1, 1);
      ++v9;
      _swiftEmptyArrayStorage[2] = v19 + 1;
      v20 = &_swiftEmptyArrayStorage[3 * v19];
      v20[4] = v14;
      v20[5] = v16;
      v20[6] = v17;
      v6 = v10;
    }
    while (v7 != v9);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A2F14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate;
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

id sub_1002A2F50(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor__activeMode) = a1;
  return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_routeDetector), "setRouteDetectionEnabled:", a1 & 1);
}

uint64_t sub_1002A2F80(uint64_t result)
{
  byte_1009D7320 = result;
  return result;
}

uint64_t sub_1002A2F8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager;
  swift_beginAccess(v3, v7, 33, 0);
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  sub_100063750(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 96))(a1, v4, v5);
  return swift_endAccess(v7);
}

uint64_t sub_1002A300C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager;
  swift_beginAccess(v3, v7, 33, 0);
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  sub_100063750(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 192))(a1, v4, v5);
  return swift_endAccess(v7);
}

uint64_t sub_1002A308C(float a1)
{
  uint64_t *v1;
  uint64_t v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v2 = *v1;
  if (a1 < 0.0)
    a1 = 0.0;
  v3 = fminf(a1, 1.0);
  v4 = v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v8, 33, 0);
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  sub_100063750(v4, v5);
  (*(void (**)(uint64_t, uint64_t, float))(v6 + 248))(v5, v6, v3);
  return swift_endAccess(v8);
}

id sub_1002A3124(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void **v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  void **v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  unsigned __int8 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  id v44;
  void **v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void **v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void **v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  id v66;
  unsigned __int8 v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  NSString v86;
  id v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  id v92;
  char *v93;
  id v94;
  char *v95;
  char *v96;
  id v97;
  NSObject *v98;
  _BOOL4 v99;
  uint64_t v100;
  char *v101;
  id v102;
  id v103;
  id v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  char *v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  id v129;
  _QWORD *v130;
  os_log_t v131;
  uint64_t v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  void **v143;
  void **v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  void *v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  char *v156;
  id v157;
  id v158;
  uint64_t v160;
  id v161;
  _QWORD *v162;
  void **v163;
  os_log_t v164;
  int v165;
  id v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void **aBlock;
  uint64_t v171;
  void (*v172)(uint64_t, void *);
  void *v173;
  void (*v174)(void *);
  _QWORD *v175;
  uint64_t v176;
  _BYTE v177[24];
  char v178[24];
  char v179[24];
  char v180[24];
  char v181[24];
  char v182[8];

  v2 = v1;
  v169 = type metadata accessor for Logger(0);
  v168 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v167 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate]);
  if (Strong)
  {
    v7 = Strong;
    v8 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v182, 0, 0);
    v9 = objc_msgSend(*(id *)(*sub_10003F198(v8, *((_QWORD *)v8 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "title");
      swift_unknownObjectRelease(v10);
      v12 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0xE000000000000000;
    }
    v15 = *(void **)(v7 + 16);
    KeyPath = swift_getKeyPath(&unk_100716E90);
    v17 = swift_getKeyPath(&unk_100716EB8);
    aBlock = v12;
    v171 = v14;
    swift_bridgeObjectRetain(v14);
    static Published.subscript.setter(&aBlock, v15, KeyPath, v17);
    swift_bridgeObjectRelease(v14);
    swift_unknownObjectRelease(v7);
  }
  v18 = swift_unknownObjectWeakLoadStrong(v5);
  if (v18)
  {
    v19 = v18;
    v20 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v181, 0, 0);
    v21 = objc_msgSend(*(id *)(*sub_10003F198(v20, *((_QWORD *)v20 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(v21, "author");
      swift_unknownObjectRelease(v22);
      v24 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0xE000000000000000;
    }
    v27 = *(void **)(v19 + 16);
    v28 = swift_getKeyPath(&unk_100716ED8);
    v29 = swift_getKeyPath(&unk_100716F00);
    aBlock = v24;
    v171 = v26;
    swift_bridgeObjectRetain(v26);
    static Published.subscript.setter(&aBlock, v27, v28, v29);
    swift_bridgeObjectRelease(v26);
    swift_unknownObjectRelease(v19);
  }
  v30 = swift_unknownObjectWeakLoadStrong(v5);
  if (v30)
  {
    v31 = v30;
    v32 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v180, 0, 0);
    v33 = objc_msgSend(*(id *)(*sub_10003F198(v32, *((_QWORD *)v32 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    if (v33)
    {
      v34 = v33;
      v35 = objc_msgSend(v33, "isAudiobookPreview");
      swift_unknownObjectRelease(v34);
    }
    else
    {
      v35 = 0;
    }
    v36 = *(void **)(v31 + 16);
    v37 = swift_getKeyPath(&unk_100716F20);
    v38 = swift_getKeyPath(&unk_100716F48);
    LOBYTE(aBlock) = v35;
    static Published.subscript.setter(&aBlock, v36, v37, v38);
    swift_unknownObjectRelease(v31);
  }
  v39 = swift_unknownObjectWeakLoadStrong(v5);
  if (v39)
  {
    v40 = v39;
    v41 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v179, 0, 0);
    v42 = objc_msgSend(*(id *)(*sub_10003F198(v41, *((_QWORD *)v41 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    v43 = (uint64_t)v42;
    if (v42)
    {
      v44 = objc_msgSend(v42, "assetID");
      swift_unknownObjectRelease(v43);
      v45 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v43 = v46;

    }
    else
    {
      v45 = 0;
    }
    v47 = *(void **)(v40 + 16);
    v48 = swift_getKeyPath(&unk_100716F68);
    v49 = swift_getKeyPath(&unk_100716F90);
    aBlock = v45;
    v171 = v43;
    swift_bridgeObjectRetain(v43);
    static Published.subscript.setter(&aBlock, v47, v48, v49);
    swift_bridgeObjectRelease(v43);
    swift_unknownObjectRelease(v40);
  }
  v50 = swift_unknownObjectWeakLoadStrong(v5);
  if (v50)
  {
    v51 = v50;
    v52 = (void **)sub_1002A2A98();
    v53 = *(void **)(v51 + 16);
    v54 = swift_getKeyPath(&unk_100716FB0);
    v55 = swift_getKeyPath(&unk_100716FD8);
    aBlock = v52;
    swift_bridgeObjectRetain(v52);
    static Published.subscript.setter(&aBlock, v53, v54, v55);
    swift_bridgeObjectRelease(v52);
    swift_unknownObjectRelease(v51);
  }
  v56 = swift_unknownObjectWeakLoadStrong(v5);
  if (v56)
  {
    v57 = v56;
    v58 = (void **)sub_1002A2CD8();
    v59 = *(void **)(v57 + 16);
    v60 = swift_getKeyPath(&unk_100716FF8);
    v61 = swift_getKeyPath(&unk_100717020);
    aBlock = v58;
    swift_bridgeObjectRetain(v58);
    static Published.subscript.setter(&aBlock, v59, v60, v61);
    swift_bridgeObjectRelease(v58);
    swift_unknownObjectRelease(v57);
  }
  v62 = swift_unknownObjectWeakLoadStrong(v5);
  if (v62)
  {
    v63 = v62;
    v64 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v178, 0, 0);
    v65 = objc_msgSend(*(id *)(*sub_10003F198(v64, *((_QWORD *)v64 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    if (v65)
    {
      v66 = v65;
      v67 = objc_msgSend(v65, "isSG");
      swift_unknownObjectRelease(v66);
    }
    else
    {
      v67 = 0;
    }
    v68 = *(void **)(v63 + 16);
    v69 = swift_getKeyPath(&unk_100717040);
    v70 = swift_getKeyPath(&unk_100717068);
    LOBYTE(aBlock) = v67;
    static Published.subscript.setter(&aBlock, v68, v69, v70);
    swift_unknownObjectRelease(v63);
  }
  v71 = *(void **)&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork] = 0;

  if (a1)
  {
    v72 = swift_unknownObjectWeakLoadStrong(v5);
    if (v72)
    {
      v73 = v72;
      v74 = *((_QWORD *)v5 + 1);
      v75 = swift_allocObject(&unk_1008F8F00, 24, 7);
      swift_unknownObjectWeakInit(v75 + 16, v2);
      v76 = (_QWORD *)swift_allocObject(&unk_1008F9130, 40, 7);
      v76[2] = v75;
      v76[3] = v73;
      v76[4] = v74;
      v174 = sub_1002A8EE4;
      v175 = v76;
      aBlock = _NSConcreteStackBlock;
      v171 = 1107296256;
      v172 = sub_10000B65C;
      v173 = &unk_1008F9148;
      v77 = _Block_copy(&aBlock);
      v78 = v175;
      swift_unknownObjectRetain(a1);
      swift_unknownObjectRetain(v73);
      swift_release(v78);
      objc_msgSend(a1, "artworkWithCompletion:", v77);
      _Block_release(v77);
      swift_unknownObjectRelease(a1);
      swift_unknownObjectRelease(v73);
      goto LABEL_36;
    }
  }
  v79 = swift_unknownObjectWeakLoadStrong(v5);
  if (v79)
  {
    v80 = v79;
    sub_1004CBF6C(0);
    swift_unknownObjectRelease(v80);
  }
  if (a1)
  {
LABEL_36:
    v81 = objc_msgSend(a1, "assetID");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v83 = v82;

    v84 = *(void **)&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_storeManager];
    if (v84)
    {
      v85 = objc_msgSend(v84, "clientApplicationController");
      swift_unknownObjectRetain(v85);
      v86 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v83);
      v87 = objc_msgSend(v85, "assetDownloadProgressWithStoreId:", v86);
      swift_unknownObjectRelease(v85);

      if (v87)
      {
        v88 = v168;
        v89 = v167;
        v90 = v169;
        (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v167, &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v169);
        v91 = v2;
        v92 = v87;
        v93 = v91;
        v94 = v92;
        v95 = v93;
        v96 = v89;
        v97 = v94;
        v98 = Logger.logObject.getter(v97);
        v165 = static os_log_type_t.info.getter(v98);
        v99 = os_log_type_enabled(v98, (os_log_type_t)v165);
        v166 = v97;
        if (v99)
        {
          v164 = v98;
          v100 = swift_slowAlloc(32, -1);
          v162 = (_QWORD *)swift_slowAlloc(8, -1);
          v163 = (void **)swift_slowAlloc(64, -1);
          aBlock = v163;
          *(_DWORD *)v100 = 136315650;
          v101 = &v95[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
          swift_beginAccess(&v95[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v177, 0, 0);
          v102 = objc_msgSend(*(id *)(*sub_10003F198(v101, *((_QWORD *)v101 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
          v161 = v87;
          if (v102)
          {
            v103 = v102;
            v104 = objc_msgSend(v102, "title");
            swift_unknownObjectRelease(v103);
            v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
            v107 = v106;

          }
          else
          {
            v105 = 0;
            v107 = 0xE000000000000000;
          }
          v176 = sub_100040F58(v105, v107, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177, v100 + 4, v100 + 12);

          swift_bridgeObjectRelease(v107);
          *(_WORD *)(v100 + 12) = 2080;
          v121 = objc_msgSend(*(id *)(*sub_10003F198(v101, *((_QWORD *)v101 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
          v122 = v121;
          if (v121)
          {
            v123 = objc_msgSend(v121, "assetID");
            swift_unknownObjectRelease(v122);
            v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
            v122 = v125;

          }
          else
          {
            v124 = 0;
          }
          v126 = Optional<A>.description.getter(v124, v122);
          v128 = v127;
          swift_bridgeObjectRelease(v122);
          v176 = sub_100040F58(v126, v128, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177, v100 + 14, v100 + 22);

          swift_bridgeObjectRelease(v128);
          *(_WORD *)(v100 + 22) = 2112;
          v176 = (uint64_t)v166;
          v129 = v166;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177, v100 + 24, v100 + 32);
          v130 = v162;
          *v162 = v161;

          v131 = v164;
          _os_log_impl((void *)&_mh_execute_header, v164, (os_log_type_t)v165, "audiobookDidChange to %s, assetID: %s, with download progress: %@", (uint8_t *)v100, 0x20u);
          v132 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
          swift_arrayDestroy(v130, 1, v132);
          swift_slowDealloc(v130, -1, -1);
          v133 = v163;
          swift_arrayDestroy(v163, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v133, -1, -1);
          swift_slowDealloc(v100, -1, -1);

          (*(void (**)(char *, uint64_t))(v168 + 8))(v167, v169);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v88 + 8))(v96, v90);
        }
        v134 = *(_QWORD *)&v95[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState];
        *(_QWORD *)&v95[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState] = 1;
        sub_10029F90C(v134);
        v135 = swift_unknownObjectWeakLoadStrong(v5);
        if (v135)
        {
          v136 = v135;
          v137 = *(void **)(v135 + 16);
          v138 = swift_getKeyPath(&unk_100716E48);
          v139 = swift_getKeyPath(&unk_100716E70);
          LOBYTE(aBlock) = 0;
          static Published.subscript.setter(&aBlock, v137, v138, v139);
          swift_unknownObjectRelease(v136);
        }
        v140 = swift_unknownObjectWeakLoadStrong(v5);
        if (v140)
        {
          v141 = v140;
          v142 = v166;
          objc_msgSend(v166, "doubleValue");
          v144 = v143;
          v145 = *(void **)(v141 + 16);
          v146 = swift_getKeyPath(&unk_100717088);
          v147 = swift_getKeyPath(&unk_1007170B0);
          aBlock = v144;
          LOBYTE(v171) = 0;
          static Published.subscript.setter(&aBlock, v145, v146, v147);
          swift_unknownObjectRelease(v141);

        }
        else
        {
          v148 = v166;

        }
LABEL_60:
        swift_unknownObjectRelease(v85);
        goto LABEL_61;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v83);
      v85 = 0;
    }
    v108 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v177, 0, 0);
    v109 = *(unsigned __int8 *)(*sub_10003F198(v108, *((_QWORD *)v108 + 3))
                              + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_streaming);
    v110 = swift_unknownObjectWeakLoadStrong(v5);
    if (v110)
    {
      v111 = v110;
      if (v109)
        v112 = 1;
      else
        v112 = 3;
      v113 = *(void **)(v110 + 16);
      v114 = swift_getKeyPath(&unk_100716E48);
      v115 = swift_getKeyPath(&unk_100716E70);
      LOBYTE(aBlock) = v112;
      static Published.subscript.setter(&aBlock, v113, v114, v115);
      swift_unknownObjectRelease(v111);
    }
    v116 = swift_unknownObjectWeakLoadStrong(v5);
    if (v116)
    {
      v117 = v116;
      v118 = *(void **)(v116 + 16);
      v119 = swift_getKeyPath(&unk_100717088);
      v120 = swift_getKeyPath(&unk_1007170B0);
      aBlock = 0;
      LOBYTE(v171) = 0;
      static Published.subscript.setter(&aBlock, v118, v119, v120);
      swift_unknownObjectRelease(v117);
    }
    goto LABEL_60;
  }
LABEL_61:
  v149 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v150 = (void *)static OS_dispatch_queue.main.getter(v149);
  v151 = &_dispatch_main_q;
  v152 = &_dispatch_main_q;
  v153 = v150;
  v154 = &_dispatch_main_q;
  if (v153 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v151 = v153;
  }

  v155 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_wantsPlayAfterOpen;
  if (v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_wantsPlayAfterOpen] != 1)
    return sub_1002A6CFC();
  v156 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], &aBlock, 0, 0);
  v157 = objc_msgSend(*(id *)(*sub_10003F198(v156, *((_QWORD *)v156 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  if (!v157)
    return sub_1002A6CFC();
  swift_unknownObjectRelease(v157);
  v2[v155] = 0;
  v158 = sub_1002A1CE8(1);
  return (id)AriadneTrace_AudiobookBeginPlayback(v158);
}

void sub_1002A4078(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  _BYTE v21[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (a1)
    {
      v6 = objc_allocWithZone((Class)UIImage);
      v7 = a1;
      v8 = objc_msgSend(v6, "initWithCGImage:", v7);
      v9 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork;
      v10 = *(void **)&v5[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork];
      *(_QWORD *)&v5[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork] = v8;

      v11 = *(void **)&v5[v9];
      v12 = v11;
      sub_1004CBF6C(v11);

    }
    else
    {
      sub_1004CBF6C(0);
      v13 = (uint64_t)&v5[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
      swift_beginAccess(&v5[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v20, 0, 0);
      sub_10002E418(v13, (uint64_t)v19);
      v14 = sub_10003F198(v19, v19[3]);
      v15 = swift_allocObject(&unk_1008F8F00, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16, v5);
      v16 = *v14;
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v17 = swift_allocObject(&unk_1008F9180, 24, 7);
      swift_unknownObjectWeakInit(v17 + 16, v16);
      v18 = swift_allocObject(&unk_1008F91A8, 56, 7);
      *(_QWORD *)(v18 + 16) = v17;
      *(_QWORD *)(v18 + 24) = sub_1002A8EF0;
      *(_QWORD *)(v18 + 32) = v15;
      *(int64x2_t *)(v18 + 40) = vdupq_n_s64(0x4098000000000000uLL);
      swift_retain_n(v15, 2);
      swift_retain(v17);
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8EFC, v18);
      swift_release_n(v15, 2);
      swift_release(v17);
      swift_release(v18);
      _s5Books15CurrentPageViewVwxx_0(v19);

    }
  }
}

uint64_t sub_1002A4270(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  CMTimeValue value;
  CMTimeScale timescale;
  uint64_t v20;
  CMTimeEpoch epoch;
  double Seconds;
  uint64_t result;
  uint64_t v24;
  double v25;
  double v26;
  CMTime v27;
  CMTime v28;

  v3 = v2;
  v6 = v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_currentChapter;
  swift_unknownObjectWeakAssign(v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_currentChapter, a1);
  v7 = v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (Strong)
  {
    v9 = Strong;
    type metadata accessor for AudiobookNowPlayingPresenter(0);
    sub_1004CC544(a2);
    swift_unknownObjectRelease(v9);
  }
  v10 = swift_unknownObjectWeakLoadStrong(v7);
  if (v10)
  {
    v11 = v10;
    if (a1
      && ((v12 = objc_msgSend(a1, "customTitle")) != 0
       || (v12 = objc_msgSend(a1, "title")) != 0))
    {
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0xE000000000000000;
    }
    type metadata accessor for AudiobookNowPlayingPresenter(0);
    sub_1004CC5B0(v13, v15);
    swift_bridgeObjectRelease(v15);
    swift_unknownObjectRelease(v11);
  }
  sub_1002A4488();
  v16 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "timeRangeInAudiobook");
    value = v27.value;
    timescale = v27.timescale;
    LODWORD(v20) = v27.flags;
    epoch = v27.epoch;
    swift_unknownObjectRelease(v17);
  }
  else
  {
    v28 = CMTime.init(seconds:preferredTimescale:)(0.0, 1);
    value = v28.value;
    timescale = v28.timescale;
    epoch = v28.epoch;
    v20 = HIDWORD(*(_QWORD *)&v28.timescale);
  }
  v27.value = value;
  v27.timescale = timescale;
  v27.flags = v20;
  v27.epoch = epoch;
  Seconds = CMTimeGetSeconds(&v27);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v24 = result;
    if (a1)
    {
      objc_msgSend(a1, "duration");
      v26 = v25;
    }
    else
    {
      v26 = 1.0;
    }
    sub_1004CC0DC(0.0, Seconds, v26, 0.0);
    return swift_unknownObjectRelease(v24);
  }
  return result;
}

uint64_t sub_1002A4488()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1008F8FF0, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_1002A8A78;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008F9008;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  v15 = swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v18 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1002A4684(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t Strong;
  uint64_t v5;
  id v6;

  v2 = a1;
  if (a1)
    v2 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", a1);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork) = v2;
  v6 = v2;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (Strong)
  {
    v5 = Strong;
    sub_1004CBF6C(v2);
    swift_unknownObjectRelease(v5);
  }

}

void sub_1002A471C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v7 = (_QWORD *)type metadata accessor for Logger(0);
  v8 = *(v7 - 1);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (!Strong)
    return;
  v12 = Strong;
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v33, 0, 0);
  v14 = objc_msgSend(*(id *)(*sub_10003F198(v13, v13[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  if (!v14)
  {
    swift_unknownObjectRelease(v12);
    return;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "chapters");
  v31 = sub_10004CFD4(&qword_1009D7448);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v31);

  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v28 = v17;
    else
      v28 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v19 = swift_bridgeObjectRelease(v17);
  if (v18 <= a1)
  {
    (*(void (**)(char *, uint64_t, _QWORD *, __n128))(v8 + 16))(v10, v3 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v7, v19);
    v25 = swift_unknownObjectRetain_n(v15, 2);
    v17 = Logger.logObject.getter(v25);
    LOBYTE(v3) = static os_log_type_t.error.getter(v17);
    if (!os_log_type_enabled((os_log_t)v17, (os_log_type_t)v3))
    {

      swift_unknownObjectRelease(v12);
      swift_unknownObjectRelease_n(v15, 3);
      goto LABEL_20;
    }
    v18 = swift_slowAlloc(22, -1);
    *(_DWORD *)v18 = 134218240;
    v32 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v18 + 4, v18 + 12);
    *(_WORD *)(v18 + 12) = 2048;
    v26 = objc_msgSend(v15, "chapters");
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v31);

    if (!((unint64_t)a1 >> 62))
    {
      v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRelease(v15);
LABEL_18:
      swift_bridgeObjectRelease(a1);
      v32 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v18 + 14, v18 + 22);
      swift_unknownObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v17, (os_log_type_t)v3, "Observing %ld for chapterIndex when chapter count is %ld", (uint8_t *)v18, 0x16u);
      swift_slowDealloc(v18, -1, -1);
      swift_unknownObjectRelease(v15);
      swift_unknownObjectRelease(v12);

LABEL_20:
      (*(void (**)(char *, _QWORD *))(v8 + 8))(v10, v7);
      return;
    }
LABEL_29:
    if (a1 < 0)
      v29 = a1;
    else
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v27 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_unknownObjectRelease(v15);
    swift_bridgeObjectRelease(a1);
    goto LABEL_18;
  }
  v7 = objc_msgSend(v15, "chapters", v19.n128_f64[0]);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v31);

  if ((v3 & 0xC000000000000001) != 0)
  {
    v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v3);
    goto LABEL_10;
  }
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = *(void **)(v3 + 8 * a1 + 32);
  swift_unknownObjectRetain(v20);
LABEL_10:
  objc_msgSend(v20, "duration", swift_bridgeObjectRelease(v3).n128_f64[0]);
  v22 = v21 - a2;
  objc_msgSend(v20, "duration");
  if (v23 == 0.0)
    v24 = 0.0;
  else
    v24 = a2 / v23;
  sub_1004CC0DC(a2, a3, v22, v24);
  swift_unknownObjectRelease(v12);
  swift_unknownObjectRelease(v15);
  swift_unknownObjectRelease(v20);
}

void sub_1002A4B2C(int a1, int a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(char *, uint64_t);
  uint64_t Strong;
  void *v20;
  uint64_t v21;
  int v22;
  int v23;
  void *v24;
  id v25;
  char *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  int v36;
  int v37;
  void *v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v4 = v3;
  v38 = a3;
  v36 = a1;
  v37 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = &v4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger];
  v13 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
  v14 = v13((char *)&v36 - v10, &v4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v5);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "_triggerClose", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v11, v5);
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler]+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = swift_allocObject(&unk_1008F92C0, 48, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v4;
    v22 = v36 & 1;
    *(_BYTE *)(v21 + 32) = v22;
    v23 = v37 & 1;
    *(_BYTE *)(v21 + 33) = v23;
    v24 = v38;
    *(_QWORD *)(v21 + 40) = v38;
    v25 = v24;
    v26 = v4;
    v27 = v20;
    v28 = objc_msgSend(v27, "bc_contextualPresentedViewController");
    if (v28)
    {
      v29 = v28;
      aBlock[4] = sub_1002A9264;
      v40 = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_1008F92D8;
      v30 = _Block_copy(aBlock);
      v31 = v40;
      swift_retain(v21);
      objc_msgSend(v29, "dismissViewControllerAnimated:completion:", 1, v30, swift_release(v31).n128_f64[0]);
      swift_release(v21);

      _Block_release(v30);
    }
    else
    {
      sub_1002A586C((uint64_t)v27, (uint64_t)v26, v22, v23, v24);
      swift_release(v21);

    }
  }
  else
  {
    v32 = v13(v9, v12, v5);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Can't close without a view controller", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    v18(v9, v5);
  }
}

void sub_1002A4E40(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  id v31;
  id v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  _BYTE v47[40];
  uint64_t v48;
  _QWORD v49[4];
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char v53[32];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v53, 0, 0);
  v9 = *(_QWORD *)(*sub_10003F198(v8, *((_QWORD *)v8 + 3))
                 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_productProfile);
  if (v9)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v4);
    swift_bridgeObjectRetain_n(a1, 2);
    swift_bridgeObjectRetain(v9);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(12, -1);
      v46 = v2;
      v14 = (uint8_t *)v13;
      v45 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v50 = v45;
      *(_DWORD *)v14 = 136315138;
      v44 = v14 + 4;
      v48 = a1;
      swift_bridgeObjectRetain(a1);
      v15 = sub_10004CFD4((uint64_t *)&unk_1009D7470);
      v16 = String.init<A>(describing:)(&v48, v15);
      v18 = v17;
      v48 = sub_100040F58(v16, v17, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v44, v14 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "productProfileDidChange(to:) newProductProfile=%s", v14, 0xCu);
      v19 = v45;
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      v20 = v14;
      v2 = v46;
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      v21 = swift_bridgeObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v21);
    v28 = sub_1004EC9E0(v9);
    swift_bridgeObjectRelease(v9);
    v29 = objc_allocWithZone((Class)AEUserPublishingProductProfile);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v31 = objc_msgSend(v29, "initWithProfileDictionary:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    v32 = objc_msgSend(objc_allocWithZone((Class)BCFutureValue), "initWithValue:", v31);
    type metadata accessor for BuyButtonModuleFactory();
    v33 = v2;
    v34 = v32;
    sub_10063B528(v32, (uint64_t)v2, &v50);
    v35 = (uint64_t)&v33[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_buyButtonPresenter];
    swift_beginAccess(&v33[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_buyButtonPresenter], &v48, 33, 0);
    sub_10000B558((uint64_t)&v50, v35, (uint64_t *)&unk_1009D7450);
    swift_endAccess(&v48);
    Strong = swift_unknownObjectWeakLoadStrong(&v33[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate]);
    if (!Strong)
    {

      return;
    }
    v37 = Strong;
    sub_10000B5E4(v35, (uint64_t)&v48, (uint64_t *)&unk_1009D7450);
    if (v49[2])
    {
      v38 = sub_10004CFD4((uint64_t *)&unk_1009D7460);
      v39 = sub_10004CFD4((uint64_t *)&unk_1009E7690);
      if ((swift_dynamicCast(&v50, &v48, v38, v39, 6) & 1) == 0)
      {
        v52 = 0;
        v50 = 0u;
        v51 = 0u;
      }
    }
    else
    {
      sub_100010960((uint64_t)&v48, (uint64_t *)&unk_1009D7450);
      v50 = 0u;
      v51 = 0u;
      v52 = 0;
    }
    v40 = *(void **)(v37 + 16);
    sub_10000B5E4((uint64_t)&v50, (uint64_t)&v48, (uint64_t *)&unk_1009D4CE0);
    KeyPath = swift_getKeyPath(&unk_1007170D0);
    v42 = swift_getKeyPath(&unk_1007170F8);
    sub_10000B5E4((uint64_t)&v48, (uint64_t)v47, (uint64_t *)&unk_1009D4CE0);
    static Published.subscript.setter(v47, v40, KeyPath, v42);
    sub_100010960((uint64_t)&v48, (uint64_t *)&unk_1009D4CE0);

    swift_unknownObjectRelease(v37);
  }
  else
  {
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
    v22 = (uint64_t)&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_buyButtonPresenter];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_buyButtonPresenter], &v48, 33, 0);
    sub_10000B558((uint64_t)&v50, v22, (uint64_t *)&unk_1009D7450);
    swift_endAccess(&v48);
    v23 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate]);
    if (!v23)
      return;
    v24 = v23;
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
    v25 = *(void **)(v23 + 16);
    sub_10000B5E4((uint64_t)&v50, (uint64_t)&v48, (uint64_t *)&unk_1009D4CE0);
    v26 = swift_getKeyPath(&unk_1007170D0);
    v27 = swift_getKeyPath(&unk_1007170F8);
    sub_10000B5E4((uint64_t)&v48, (uint64_t)v47, (uint64_t *)&unk_1009D4CE0);
    static Published.subscript.setter(v47, v25, v26, v27);
    sub_100010960((uint64_t)&v48, (uint64_t *)&unk_1009D4CE0);
    swift_unknownObjectRelease(v24);
  }
  sub_100010960((uint64_t)&v50, (uint64_t *)&unk_1009D4CE0);
}

void sub_1002A53B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double v10;
  double v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (Strong)
  {
    v6 = Strong;
    type metadata accessor for AudiobookNowPlayingPresenter(0);
    sub_1004CC6D0(a1);
    swift_unknownObjectRelease(v6);
  }
  v7 = swift_unknownObjectWeakLoadStrong(v4);
  if (v7)
  {
    v8 = v7;
    v9 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(v9, v13, 0, 0);
    objc_msgSend(*(id *)(*sub_10003F198(v9, v9[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sleepTimer), "initialDuration");
    v11 = v10;
    v12 = type metadata accessor for AudiobookNowPlayingPresenter(0);
    sub_1004CC73C(v12, (uint64_t)&off_10090B408, v11);
    swift_unknownObjectRelease(v8);
  }
}

double sub_1002A54B8(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  _BYTE v15[24];

  switch(a1)
  {
    case 0uLL:
      v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
      swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v15, 0, 0);
      v4 = objc_msgSend(*(id *)(*sub_10003F198(v3, v3[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
      swift_unknownObjectRelease(v4);
      if (v4)
        goto LABEL_5;
      goto LABEL_3;
    case 2uLL:
      *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError) = 0;
      goto LABEL_14;
    case 3uLL:
      v5 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState;
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState) & 1) != 0)
      {
        Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
        if (Strong)
        {
          v7 = (void *)Strong;
          v8 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
          swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v15, 0, 0);
          if (*(_BYTE *)(*sub_10003F198(v8, v8[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_streaming) == 1
            && (v9 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1
                                                                 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates) + 16)) != 0)
          {
            v10 = (void *)v9;
            v11 = v7;
            objc_msgSend(v10, "audiobookNowPlayingViewController:shouldStream:", v11, 0);

            swift_unknownObjectRelease(v10);
          }
          else
          {

          }
        }
        *(_BYTE *)(v1 + v5) = 2;
      }
      goto LABEL_14;
    case 4uLL:
LABEL_3:
      sub_1002A4B2C(1, 1, 0);
      goto LABEL_5;
    default:
      if (a1 <= 1)
LABEL_5:
        *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState) = 2;
LABEL_14:
      v12 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
      if (v12)
      {
        v14 = v12;
        sub_1004CA178(a1);
        *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
      }
      return result;
  }
}

void sub_1002A56C0(uint64_t a1)
{
  void *Strong;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
  if (Strong)
  {
    v3 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transferLockController;
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transferLockController))
    {

    }
    else
    {
      v11 = Strong;
      v4 = objc_msgSend(objc_allocWithZone((Class)BKTransferLockController), "init");
      v5 = *(void **)(a1 + v3);
      *(_QWORD *)(a1 + v3) = v4;
      v6 = v4;

      v7 = swift_allocObject(&unk_1008F8F00, 24, 7);
      swift_unknownObjectWeakInit(v7 + 16);
      aBlock[4] = sub_1002A8DF0;
      v13 = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_1008F90F8;
      v8 = _Block_copy(aBlock);
      v9 = v13;
      v10 = v11;
      objc_msgSend(v6, "resolveTransferLockWithPresentingViewController:completion:", v10, v8, swift_release(v9).n128_f64[0]);
      _Block_release(v8);

    }
  }
}

void sub_1002A5810(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(void **)&Strong[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transferLockController];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transferLockController] = 0;

  }
}

id sub_1002A586C(uint64_t a1, uint64_t a2, int a3, int a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id result;
  void *v20;
  void *v21;
  uint64_t v22;
  void *Strong;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint8_t *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  char *v61;
  void *v62;
  int v63;
  int v64;
  uint64_t v65;
  char v66[24];
  void *v67;
  void *v68;

  v62 = a5;
  v63 = a3;
  v64 = a4;
  v7 = type metadata accessor for Logger(0);
  v65 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v61 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v60 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v60 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v60 - v16;
  v18 = (void *)objc_opt_self(AETestDriver);
  result = objc_msgSend(v18, "shared");
  if (!result)
  {
    __break(1u);
    goto LABEL_29;
  }
  v20 = result;
  objc_msgSend(result, "postEvent:sender:", kBETestDriverOpenAnimationStart, a1);

  result = objc_msgSend(v18, "shared");
  if (!result)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v21 = result;
  objc_msgSend(result, "postEvent:sender:", kBETestDriverOpenAnimationSetupStart, a1);

  v22 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(a2
                                                               + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates) + 16);
  if (Strong)
  {
    v24 = Strong;
    if (objc_msgSend(Strong, "audiobookNowPlayingViewControllerShouldPauseOnClose:", a1))
    {
      v25 = (_QWORD *)(a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
      swift_beginAccess(a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v66, 0, 0);
      objc_msgSend(*(id *)(*sub_10003F198(v25, v25[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "pause");
    }
    swift_unknownObjectRelease(v24);
  }
  v26 = *(_QWORD *)(a2 + v22);
  v27 = swift_unknownObjectWeakLoadStrong(v26 + 24);
  if (v27)
  {
    v28 = (void *)v27;
    v29 = v65;
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 16))(v17, a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v7);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Closing via .assetViewControllerDelegate", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v7);
    objc_msgSend(v28, "assetViewController:willClose:", a1, v63 & 1);
    objc_msgSend(v28, "assetViewController:requestClose:finishedConsuming:error:withErrorBlock:", a1, 1, v64 & 1, 0, 0);
    return (id)swift_unknownObjectRelease(v28);
  }
  else
  {
    v34 = swift_unknownObjectWeakLoadStrong(v26 + 16);
    if (v34)
    {
      v35 = (void *)v34;
      v36 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_requestingCloseMinified;
      v37 = a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger;
      v38 = v65;
      v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 16);
      if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_requestingCloseMinified) & 1) != 0)
      {
        v40 = v61;
        v41 = v39(v61, v37, v7);
        v42 = Logger.logObject.getter(v41);
        v43 = static os_log_type_t.error.getter(v42);
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Request close already in progress, avoiding reentrant close", v44, 2u);
          swift_slowDealloc(v44, -1, -1);
          swift_unknownObjectRelease(v35);

        }
        else
        {

          swift_unknownObjectRelease(v35);
        }
        return (id)(*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v40, v7);
      }
      else
      {
        v49 = v39(v12, v37, v7);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.default.getter(v50);
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v52 = 0;
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "Closing via .delegate", v52, 2u);
          v53 = v52;
          v38 = v65;
          swift_slowDealloc(v53, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v7);
        *(_BYTE *)(a2 + v36) = 1;
        v54 = v62;
        if (v62)
        {
          v68 = v62;
          type metadata accessor for AudiobookPlayerError(0);
          v56 = v55;
          v57 = sub_100009E04(0, (unint64_t *)&qword_1009DA3B0, NSError_ptr);
          v58 = v54;
          swift_dynamicCast(&v67, &v68, v56, v57, 7);
          v59 = v67;
        }
        else
        {
          v59 = 0;
        }
        objc_msgSend(v35, "audiobookNowPlayingViewControllerRequestCloseMinified:error:", a1, v59);

        result = (id)swift_unknownObjectRelease(v35);
        *(_BYTE *)(a2 + v36) = 0;
      }
    }
    else
    {
      v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 16))(v15, a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v7);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.error.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Can't close, no usable delegate", v48, 2u);
        swift_slowDealloc(v48, -1, -1);
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v15, v7);
    }
  }
  return result;
}

uint64_t sub_1002A5DF8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  double v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  void (*v56)(char *, uint64_t);
  __n128 v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[24];
  _BYTE v76[24];
  double v77;
  uint64_t v78;

  v69 = (_QWORD *)a4;
  v72 = a2;
  v73 = a3;
  v7 = sub_10004CFD4(&qword_1009D7440);
  v8 = __chkstk_darwin(v7);
  v66 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v70 = (char *)&v65 - v10;
  v71 = type metadata accessor for Date(0);
  v74 = *(_QWORD *)(v71 - 8);
  v11 = __chkstk_darwin(v71);
  v65 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v67 = (char *)&v65 - v14;
  __chkstk_darwin(v13);
  v68 = (char *)&v65 - v15;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v65 - v21;
  v23 = &a1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger];
  v24 = *(uint64_t (**)(char *, char *, uint64_t))(v17 + 16);
  v25 = v24((char *)&v65 - v21, &a1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v16);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v28 = 134217984;
    v77 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v28 + 4, v28 + 12);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "_updatePlayheadPosition(completion): setting position in audiobook %f", v28, 0xCu);
    swift_slowDealloc(v28, -1, -1);
  }

  v29 = *(void (**)(char *, uint64_t))(v17 + 8);
  v29(v22, v16);
  v30 = &a1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], &v77, 0, 0);
  objc_msgSend(*(id *)(*sub_10003F198(v30, *((_QWORD *)v30 + 3)) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "pausedDuration");
  if (v31 > 3600.0)
  {
    v32 = v24(v20, v23, v16);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "_updatePlayheadPosition(completion): update session indicator", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    v29(v20, v16);
    swift_beginAccess(v30, v76, 33, 0);
    v36 = *((_QWORD *)v30 + 3);
    v37 = *((_QWORD *)v30 + 4);
    sub_100063750((uint64_t)v30, v36);
    (*(void (**)(uint64_t, uint64_t, double))(v37 + 120))(v36, v37, a5);
    swift_endAccess(v76);
  }
  v38 = (_QWORD *)swift_allocObject(&unk_1008F8FA0, 40, 7);
  v40 = v72;
  v39 = v73;
  v38[2] = a1;
  v38[3] = v40;
  v38[4] = v39;
  v41 = (uint64_t)v70;
  sub_10000B5E4((uint64_t)v69, (uint64_t)v70, &qword_1009D7440);
  v42 = v74;
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  v44 = v71;
  if (v43(v41, 1, v71) != 1)
  {
    v69 = v38;
    v46 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v68, v41, v44);
    v47 = (uint64_t)&a1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp];
    swift_beginAccess(&a1[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp], v76, 0, 0);
    v48 = v39;
    v49 = v66;
    sub_10000B5E4(v47, v66, &qword_1009D7440);
    v50 = v43(v49, 1, v44);
    v51 = v40;
    v52 = v74;
    sub_10002ACF0(v51, v48);
    v70 = a1;
    v53 = a1;
    sub_100010960(v49, &qword_1009D7440);
    v54 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v55 = v67;
    v54(v67, v46, v44);
    if (v50 == 1)
    {
      v56 = *(void (**)(char *, uint64_t))(v52 + 8);
      v56(v55, v44);
      v38 = v69;
    }
    else
    {
      v58 = swift_beginAccess(v47, v75, 32, 0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v43)(v47, 1, v44, v58))
      {
        v59 = *(void (**)(char *, uint64_t))(v74 + 8);
        v59(v67, v44);
        swift_endAccess(v75);
        v40 = v72;
        v39 = v73;
        v38 = v69;
        a1 = v70;
        v59(v68, v44);
        goto LABEL_16;
      }
      v60 = v65;
      v54(v65, (char *)v47, v44);
      swift_endAccess(v75);
      v61 = v67;
      v62 = Date.compare(_:)(v67);
      v56 = *(void (**)(char *, uint64_t))(v74 + 8);
      v56(v60, v44);
      v56(v61, v44);
      v40 = v72;
      v39 = v73;
      v38 = v69;
      a1 = v70;
      if (v62 != -1)
      {
        v56(v68, v44);
        goto LABEL_16;
      }
    }
    sub_10003F198(v30, *((_QWORD *)v30 + 3));
    swift_retain(v38);
    sub_1003F7184(sub_1002A8A40, (uint64_t)v38, a5);
    swift_release_n(v38, 2);
    return ((uint64_t (*)(char *, uint64_t))v56)(v68, v44);
  }
  sub_10002ACF0(v40, v39);
  v45 = a1;
  sub_100010960(v41, &qword_1009D7440);
LABEL_16:
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v63 = (_QWORD *)swift_allocObject(&unk_1008F8FC8, 40, 7);
  v63[2] = a1;
  v63[3] = v40;
  v63[4] = v39;
  sub_10002ACF0(v40, v39);
  v64 = a1;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8A50, v63);
  swift_release(v38);
  return swift_release(v63);
}

uint64_t sub_1002A6428(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  id v8;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v7 = (_QWORD *)swift_allocObject(&unk_1008F9040, 40, 7);
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  v8 = a2;
  sub_10002ACF0(a3, a4);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8A50, v7);
  return swift_release(v7);
}

void sub_1002A64C0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork) = a1;
    v7 = a1;

    v8 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate]);
    if (v8)
    {
      v9 = v8;
      sub_1004CBF6C(a1);

      swift_unknownObjectRelease(v9);
    }
    else
    {

    }
  }
}

id sub_1002A6560(uint64_t a1)
{
  _QWORD *v1;
  double v2;
  Float64 v3;
  uint64_t v4;
  id result;
  void *v6;
  uint64_t v7;
  id v8;
  CMTimeValue v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  CMTimeValue v14;
  CMTimeFlags flags;
  CMTimeScale timescale;
  CMTimeValue v17;
  CMTimeEpoch v18;
  CMTimeFlags v19;
  CMTimeScale v20;
  CMTimeEpoch v21;
  int v22;
  Float64 Seconds;
  double v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  CMTimeEpoch epoch;
  CMTimeValue value;
  uint64_t v53;
  void *v54;
  CMTime time;
  CMTimeRange v56;

  v1 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, &v56, 32, 0);
  objc_msgSend(*(id *)(*sub_10003F198(v1, v1[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "listeningSessionStartTime");
  v3 = v2;
  v4 = *sub_10003F198(v1, v1[3]);
  swift_endAccess(&v56);
  result = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  if (result)
  {
    v6 = result;
    CMTimeMakeWithSeconds(&v56.start, v3, 1000000000);
    v7 = *(_QWORD *)&v56.start.timescale;
    epoch = v56.start.epoch;
    value = v56.start.value;
    v8 = objc_msgSend(v6, "chapters");
    v53 = sub_10004CFD4(&qword_1009D7448);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v53);

    if ((unint64_t)v9 >> 62)
    {
LABEL_34:
      if (v9 < 0)
        v44 = v9;
      else
        v44 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v44);
      result = (id)swift_bridgeObjectRelease_n(v9, 2);
      if (v10 < 0)
      {
        __break(1u);
        return result;
      }
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease(v9);
    }
    if (v10)
    {
      v47 = 0;
      v9 = 0;
      v49 = a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_currentChapter;
      v50 = v6;
      v46 = a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate;
      v48 = v10;
      while (1)
      {
        if (v10 == v9)
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        v11 = objc_msgSend(v6, "chapters");
        v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v53);

        if ((v12 & 0xC000000000000001) != 0)
        {
          v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v12);
        }
        else
        {
          if ((unint64_t)v9 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_33;
          v13 = *(void **)(v12 + 8 * v9 + 32);
          swift_unknownObjectRetain(v13);
        }
        swift_bridgeObjectRelease(v12);
        v54 = v13;
        objc_msgSend(v13, "timeRangeInAudiobook");
        v14 = v56.start.value;
        timescale = v56.start.timescale;
        flags = v56.start.flags;
        v18 = v56.start.epoch;
        v17 = v56.duration.value;
        v20 = v56.duration.timescale;
        v19 = v56.duration.flags;
        v21 = v56.duration.epoch;
        time.value = value;
        *(_QWORD *)&time.timescale = v7;
        time.epoch = epoch;
        v22 = CMTimeRangeContainsTime(&v56, &time);
        if (v22)
        {
          v56.start.value = v14;
          v56.start.timescale = timescale;
          v56.start.flags = flags;
          v56.start.epoch = v18;
          Seconds = CMTimeGetSeconds(&v56.start);
          v56.start.value = v17;
          v56.start.timescale = v20;
          v56.start.flags = v19;
          v56.start.epoch = v21;
          v24 = (v3 - Seconds) / CMTimeGetSeconds(&v56.start);
        }
        else
        {
          v24 = 0.0;
        }
        Strong = swift_unknownObjectWeakLoadStrong(v49);
        v6 = v50;
        if (Strong)
        {
          v26 = Strong;
          swift_unknownObjectRelease(Strong);
          if (v54 == (void *)v26)
          {
            v27 = swift_unknownObjectWeakLoadStrong(v46);
            if (v27)
            {
              v28 = v27;
              v29 = *(void **)(v27 + 16);
              KeyPath = swift_getKeyPath(&unk_100716DB8);
              v31 = swift_getKeyPath(&unk_100716DE0);
              *(double *)&v56.start.value = v24;
              LOBYTE(v56.start.timescale) = v22 == 0;
              static Published.subscript.setter(&v56, v29, KeyPath, v31);
              swift_unknownObjectRelease(v28);
            }
            v47 = 1;
          }
        }
        if (v22)
          break;
        ++v9;
        swift_unknownObjectRelease(v54);
        v10 = v48;
        if (v48 == v9)
          goto LABEL_26;
      }
      v32 = swift_unknownObjectWeakLoadStrong(v46);
      if (v32)
      {
        v33 = v32;
        v34 = *(void **)(v32 + 16);
        v35 = swift_getKeyPath(&unk_100716E00);
        v36 = swift_getKeyPath(&unk_100716E28);
        v56.start.value = v9;
        static Published.subscript.setter(&v56, v34, v35, v36);
        swift_unknownObjectRelease(v54);
        v37 = v33;
      }
      else
      {
        v37 = (uint64_t)v54;
      }
      swift_unknownObjectRelease(v37);
LABEL_26:
      if ((v47 & 1) != 0)
        goto LABEL_29;
    }
    v38 = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v38)
    {
      v39 = v38;
      v40 = *(void **)(v38 + 16);
      v41 = swift_getKeyPath(&unk_100716DB8);
      v42 = swift_getKeyPath(&unk_100716DE0);
      v56.start.value = 0;
      LOBYTE(v56.start.timescale) = 1;
      static Published.subscript.setter(&v56, v40, v41, v42);
      swift_unknownObjectRelease(v6);
      v43 = v39;
    }
    else
    {
LABEL_29:
      v43 = (uint64_t)v6;
    }
    return (id)swift_unknownObjectRelease(v43);
  }
  return result;
}

double sub_1002A69DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  void *v34;
  id v35;
  double result;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = v0;
  __chkstk_darwin(v0);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - v13;
  v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007BBA40);
  static Locale.current.getter(v15);
  v42 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v42(v11, v14, v8);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v40 = ObjCClassFromMetadata;
  v39 = (id)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v39, "bundleForClass:", ObjCClassFromMetadata);
  v38 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v19 = v2;
  v38(v4, v7, v2);
  v37 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v18, v4, "Audiobook Unavailable", 21, 2);
  v41 = v20;
  v21 = *(void (**)(char *, uint64_t))(v1 + 8);
  v21(v7, v2);
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000004ALL, 0x80000001007BBC20);
  static Locale.current.getter(v23);
  v42(v11, v14, v8);
  v24 = objc_msgSend(v39, "bundleForClass:", v40);
  v38(v4, v7, v19);
  v25 = v24;
  v26 = v43;
  v27 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v4, "Audiobook unavailable network interrupted message.", 50, 2);
  v29 = v28;
  v30 = v7;
  v31 = v41;
  v21(v30, v19);
  v22(v14, v8);
  Strong = swift_unknownObjectWeakLoadStrong(v26 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (Strong)
  {
    v33 = Strong;
    v34 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v26 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
    if (v34)
    {
      v35 = v34;
      sub_1005A7BB8(v37, v31, v27, v29, v35);
      swift_unknownObjectRelease(v33);

    }
    else
    {
      swift_unknownObjectRelease(v33);
    }
  }
  swift_bridgeObjectRelease(v29);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
  return result;
}

id sub_1002A6CFC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id result;
  id v12;
  _QWORD *v13;
  id v14;
  double v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void *v23;
  BOOL v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  char *v29;
  uint64_t Strong;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _BYTE v40[20];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, (uint64_t)v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v1);
  v5 = v0;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(14, -1);
    *(_DWORD *)v8 = 67109376;
    v39 = *((unsigned __int8 *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_beginPlaybackInBackground);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v8 + 4, v8 + 8);
    *(_WORD *)(v8 + 8) = 1024;
    v39 = *((unsigned __int8 *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v8 + 10, v8 + 14);

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "_attemptAutoplay beginPlaybackInBackground=%{BOOL}d allowAutoplay=%{BOOL}d", (uint8_t *)v8, 0xEu);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {

    v6 = v5;
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay;
  if (*((_BYTE *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay) != 1
    || *((_BYTE *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_beginPlaybackInBackground) != 1)
  {
    v13 = (Class *)((char *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess((char *)v5 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, &v39, 0, 0);
    result = objc_msgSend(*(id *)(*sub_10003F198(v13, v13[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    if (!result)
      goto LABEL_22;
    v14 = result;
    if ((*((_BYTE *)&v5[1].isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_initialPositionOnOpen) & 1) != 0)
    {
LABEL_10:
      result = (id)swift_unknownObjectRelease(result);
      goto LABEL_22;
    }
    v15 = *(double *)((char *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_initialPositionOnOpen);
    v16 = objc_msgSend(result, "chapters");
    v17 = sub_10004CFD4(&qword_1009D7448);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

    if ((unint64_t)v18 >> 62)
    {
LABEL_29:
      if (v18 < 0)
        v37 = v18;
      else
        v37 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v19 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v18);
      if (v19)
      {
LABEL_13:
        v20 = 4;
        v21 = v15;
        while (1)
        {
          v22 = v20 - 4;
          if ((v18 & 0xC000000000000001) != 0)
          {
            v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, v18);
            v24 = __OFADD__(v22, 1);
            v25 = v20 - 3;
            if (v24)
              goto LABEL_28;
          }
          else
          {
            v23 = *(void **)(v18 + 8 * v20);
            swift_unknownObjectRetain(v23);
            v24 = __OFADD__(v22, 1);
            v25 = v20 - 3;
            if (v24)
            {
LABEL_28:
              __break(1u);
              goto LABEL_29;
            }
          }
          objc_msgSend(v23, "duration");
          if (v21 < v26)
            break;
          objc_msgSend(v23, "duration");
          v28 = v27;
          swift_unknownObjectRelease(v23);
          v21 = v21 - v28;
          ++v20;
          if (v25 == v19)
            goto LABEL_21;
        }
        swift_bridgeObjectRelease(v18);
        Strong = swift_unknownObjectWeakLoadStrong((char *)v5 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
        if (Strong)
        {
          v31 = (void *)Strong;
          objc_msgSend(v23, "duration");
          v33 = v32;
          objc_msgSend(v23, "duration");
          v34 = 0.0;
          if (v35 != 0.0)
          {
            objc_msgSend(v23, "duration");
            v34 = v21 / v36;
          }
          sub_1004CC0DC(v21, v15, v33 - v21, v34);
          swift_unknownObjectRelease(v14);
          swift_unknownObjectRelease(v23);
          result = v31;
        }
        else
        {
          swift_unknownObjectRelease(v14);
          result = v23;
        }
        goto LABEL_10;
      }
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v19)
        goto LABEL_13;
    }
LABEL_21:
    swift_unknownObjectRelease(v14);
    result = (id)swift_bridgeObjectRelease(v18);
    goto LABEL_22;
  }
  v10 = (Class *)((char *)&v5->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess((char *)v5 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, &v39, 0, 0);
  result = objc_msgSend(*(id *)(*sub_10003F198(v10, v10[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state");
  if (result != (id)2)
  {
    v12 = sub_1002A1CE8(1);
    *((_BYTE *)&v5->isa + v9) = 0;
    result = (id)AriadneTrace_AudiobookBeginPlayback(v12);
  }
LABEL_22:
  v29 = (char *)v5 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_initialPositionOnOpen;
  *(_QWORD *)v29 = 0;
  v29[8] = 1;
  return result;
}

void sub_1002A7214(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t storeEnumTagSinglePayload for AudiobookNowPlayingInteractor.TransitionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002A7318 + 4 * byte_100716BF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002A734C + 4 * byte_100716BF0[v4]))();
}

uint64_t sub_1002A734C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A7354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A735CLL);
  return result;
}

uint64_t sub_1002A7368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A7370);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002A7374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A737C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlayingInteractor.TransitionState()
{
  return &type metadata for AudiobookNowPlayingInteractor.TransitionState;
}

unint64_t sub_1002A739C()
{
  unint64_t result;

  result = qword_1009D7438;
  if (!qword_1009D7438)
  {
    result = swift_getWitnessTable(&unk_100716D60, &type metadata for AudiobookNowPlayingInteractor.TransitionState);
    atomic_store(result, (unint64_t *)&qword_1009D7438);
  }
  return result;
}

uint64_t sub_1002A73E0(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(char *, uint8_t *, uint64_t);
  NSObject *v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  id v47;
  int v48;
  uint64_t (*v49)(char *, uint64_t);
  uint64_t result;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  const char *v57;
  id v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  id v64;
  uint64_t v65;
  void (*v66)(char *, uint8_t *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint8_t *v70;
  uint64_t v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75[3];

  v3 = v2;
  v72 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v66 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v66 - v14;
  v16 = __chkstk_darwin(v13);
  v73 = (char *)&v66 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v66 - v18;
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v3[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler]+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
  v21 = &unk_1009D7000;
  v67 = v12;
  v68 = v15;
  v69 = v9;
  if (Strong)
  {
    v22 = (void *)Strong;
    v23 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v3[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates] + 24);
    if (v23)
    {
      v24 = (void *)v23;
      v25 = v22;
      objc_msgSend(v24, "assetViewController:willOpen:", v25, v72 & 1);

      swift_unknownObjectRelease(v24);
    }
    else
    {

    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, &v3[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v5);
    v26 = swift_unknownObjectRetain_n(a1, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    v71 = v5;
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v74 = a1;
      v75[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v70 = v30 + 4;
      swift_unknownObjectRetain(a1);
      v32 = sub_10004CFD4((uint64_t *)&unk_1009D74A0);
      v33 = String.init<A>(describing:)(&v74, v32);
      v35 = v34;
      v74 = sub_100040F58(v33, v34, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v70, v30 + 12);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v35);
      _os_log_impl((void *)&_mh_execute_header, v27, v29, "Unable to handle opening to location (%s), viewController missing from navigationHandler", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      v5 = v71;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v71);
      v36 = v6;
      v21 = (_QWORD *)&unk_1009D7000;
      goto LABEL_9;
    }

    swift_unknownObjectRelease_n(a1, 2);
    v5 = v71;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v71);
  }
  v36 = v6;
LABEL_9:
  v37 = &v3[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], v75, 0, 0);
  v38 = objc_msgSend(*(id *)(*sub_10003F198(v37, *((_QWORD *)v37 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state");
  v39 = (uint8_t *)&v3[v21[124]];
  v40 = v36;
  v41 = *(void (**)(char *, uint8_t *, uint64_t))(v36 + 16);
  v41(v73, v39, v5);
  v42 = v3;
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter(v43);
  v45 = os_log_type_enabled(v43, v44);
  v70 = v39;
  if (v45)
  {
    v66 = v41;
    v71 = v5;
    v46 = swift_slowAlloc(32, -1);
    *(_DWORD *)v46 = 67110144;
    LODWORD(v74) = v38 == (id)2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, (char *)&v74 + 4, v46 + 4, v46 + 8);
    *(_WORD *)(v46 + 8) = 1024;
    LODWORD(v74) = *((unsigned __int8 *)&v42->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, (char *)&v74 + 4, v46 + 10, v46 + 14);
    *(_WORD *)(v46 + 14) = 1024;
    LODWORD(v74) = *((unsigned __int8 *)&v42->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, (char *)&v74 + 4, v46 + 16, v46 + 20);
    *(_WORD *)(v46 + 20) = 1024;
    LODWORD(v74) = v72 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, (char *)&v74 + 4, v46 + 22, v46 + 26);
    *(_WORD *)(v46 + 26) = 1024;
    v47 = objc_msgSend(*(id *)(*sub_10003F198(v37, *((_QWORD *)v37 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");

    if (v47)
    {
      swift_unknownObjectRelease(v47);
      v48 = 1;
    }
    else
    {
      v48 = 0;
    }
    v41 = v66;
    LODWORD(v74) = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, (char *)&v74 + 4, v46 + 28, v46 + 32);

    _os_log_impl((void *)&_mh_execute_header, v43, v44, "handleOpen isPlaying = %{BOOL}d allowAutoplay=%{BOOL}d finishedOpening=%{BOOL}d animated=%{BOOL}d _readyToPlay=%{BOOL}d", (uint8_t *)v46, 0x20u);
    swift_slowDealloc(v46, -1, -1);
    v5 = v71;
  }
  else
  {

    v43 = v42;
  }

  v49 = *(uint64_t (**)(char *, uint64_t))(v40 + 8);
  result = v49(v73, v5);
  if (v38 != (id)2)
  {
    v51 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay;
    if (*((_BYTE *)&v42->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay) == 1)
    {
      if ((*((_BYTE *)&v42->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening) & 1) == 0
        && (v72 & 1) != 0)
      {
        v52 = v69;
        v53 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v41)(v69, v70, v5);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.default.getter(v54);
        if (os_log_type_enabled(v54, v55))
        {
          v56 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v56 = 0;
          v57 = "Not finished opening so setting wantsToPlayAfterOpen";
LABEL_27:
          _os_log_impl((void *)&_mh_execute_header, v54, v55, v57, v56, 2u);
          swift_slowDealloc(v56, -1, -1);
          goto LABEL_28;
        }
        goto LABEL_28;
      }
      v58 = objc_msgSend(*(id *)(*sub_10003F198(v37, *((_QWORD *)v37 + 3))+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
      if (!v58)
      {
        v52 = v67;
        v65 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v41)(v67, v70, v5);
        v54 = Logger.logObject.getter(v65);
        v55 = static os_log_type_t.default.getter(v54);
        if (os_log_type_enabled(v54, v55))
        {
          v56 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v56 = 0;
          v57 = "Not ready to play so setting wantsToPlayAfterOpen";
          goto LABEL_27;
        }
LABEL_28:

        result = v49(v52, v5);
        *((_BYTE *)&v42->isa + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_wantsPlayAfterOpen) = 1;
        return result;
      }
      swift_unknownObjectRelease(v58);
      v59 = v68;
      v60 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v41)(v68, v70, v5);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.default.getter(v61);
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "handleOpen going to autoplay", v63, 2u);
        swift_slowDealloc(v63, -1, -1);
      }

      v49(v59, v5);
      v64 = sub_1002A1CE8(1);
      *((_BYTE *)&v42->isa + v51) = 0;
      return AriadneTrace_AudiobookBeginPlayback(v64);
    }
  }
  return result;
}

uint64_t sub_1002A7B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  void *v14;
  uint64_t Strong;
  void *v16;
  id v17;
  _BYTE v19[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "notified that asset with same assetID deleted", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v19, 0, 0);
  if ((*(_BYTE *)(*sub_10003F198(v10, v10[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_streaming) & 1) != 0)
    return 0;
  v11 = *(_QWORD *)(*sub_10003F198(v10, v10[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_storeID + 8);
  v12 = *(void **)(*sub_10003F198(v10, v10[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
  if (!v11)
  {
    objc_msgSend(v12, "pause");
    return 1;
  }
  if (objc_msgSend(v12, "state") == (id)2)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_wantsPlayAfterOpen) = 1;
    objc_msgSend(*(id *)(*sub_10003F198(v10, v10[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "pause");
  }
  result = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
  if (result)
  {
    v14 = (void *)result;
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1
                                                         + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates) + 16);
    if (Strong)
    {
      v16 = (void *)Strong;
      v17 = v14;
      objc_msgSend(v16, "audiobookNowPlayingViewController:shouldStream:", v17, 1);

      swift_unknownObjectRelease(v16);
    }
    else
    {

    }
    return 0;
  }
  return result;
}

uint64_t sub_1002A7DA4(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, void *, double, double);
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v10 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, void *, double, double))(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v15 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
  }
  else
  {
    v16 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
  }
  swift_retain(v13);
  v17 = a3;
  v14(v12, a3, a4, a5);
  swift_release(v13);

  return sub_100010960((uint64_t)v12, &qword_1009D7440);
}

uint64_t sub_1002A7EBC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100716ED8);
  v5 = swift_getKeyPath(&unk_100716F00);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_1002A7F38(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100716ED8);
  v6 = swift_getKeyPath(&unk_100716F00);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1002A7FB4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100716F20, (uint64_t)&unk_100716F48, a2);
}

uint64_t sub_1002A7FC8(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100716F20, (uint64_t)&unk_100716F48);
}

uint64_t sub_1002A7FDC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100716FB0);
  v5 = swift_getKeyPath(&unk_100716FD8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002A8058(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100716FB0);
  v5 = swift_getKeyPath(&unk_100716FD8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002A80CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100716E00);
  v5 = swift_getKeyPath(&unk_100716E28);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002A8148(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100716E00);
  v5 = swift_getKeyPath(&unk_100716E28);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002A81B4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100717040, (uint64_t)&unk_100717068, a2);
}

uint64_t sub_1002A81C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  result = swift_release(v8);
  *a4 = v10;
  return result;
}

uint64_t sub_1002A8240(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100717040, (uint64_t)&unk_100717068);
}

uint64_t sub_1002A8254(char *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1002A82BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100717088);
  v5 = swift_getKeyPath(&unk_1007170B0);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1002A8340(uint64_t *a1, void **a2)
{
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100717088);
  v6 = swift_getKeyPath(&unk_1007170B0);
  v8 = v2;
  v9 = v3;
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

uint64_t sub_1002A83BC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100716E48);
  v5 = swift_getKeyPath(&unk_100716E70);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002A8438(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100716E48);
  v5 = swift_getKeyPath(&unk_100716E70);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002A84A4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A84C8()
{
  uint64_t v0;

  return sub_1002A21F8(v0);
}

void sub_1002A84D4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  sub_1002A84E0(a1, a2, *(_QWORD *)(v3 + 16), *(void (**)(uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

void sub_1002A84E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *Strong;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  _QWORD v53[3];
  char v54[8];
  uint64_t v55;
  _BYTE v56[24];
  char v57[24];

  v50 = a5;
  v51 = a4;
  v49 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v49 - 8);
  v11 = __chkstk_darwin(v49);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v48 - v14;
  v16 = sub_10004CFD4(&qword_1009D7440);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = a3 + 16;
  swift_beginAccess(v19, v57, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    v21 = Strong;
    if (!a2)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      sub_10000B5E4(a1, (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1009D7440);
      v33 = *(unsigned __int8 *)(v17 + 80);
      v34 = (v33 + 48) & ~v33;
      v35 = swift_allocObject(&unk_1008F8F78, v34 + v18, v33 | 7);
      *(_QWORD *)(v35 + 16) = v21;
      *(double *)(v35 + 24) = a6;
      v37 = v50;
      v36 = (uint64_t)v51;
      *(_QWORD *)(v35 + 32) = v51;
      *(_QWORD *)(v35 + 40) = v37;
      sub_10002D974((uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34);
      v38 = v21;
      sub_10002ACF0(v36, v37);
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8A00, v35);
      swift_release(v35);

      return;
    }

LABEL_5:
    swift_beginAccess(v19, v56, 0, 0);
    v22 = swift_unknownObjectWeakLoadStrong(v19);
    if (v22)
    {
      v23 = (void *)v22;
      v24 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v22 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v49);
      swift_errorRetain(a2);

      swift_errorRetain(a2);
      v25 = swift_errorRetain(a2);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.error.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(12, -1);
        v29 = swift_slowAlloc(32, -1);
        v55 = v29;
        *(_DWORD *)v28 = 136315138;
        v48 = v28 + 4;
        swift_getErrorValue(a2, v54, v53);
        v30 = Error.localizedDescription.getter(v53[1], v53[2]);
        v32 = v31;
        v52 = sub_100040F58(v30, v31, &v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v48, v28 + 12);
        swift_bridgeObjectRelease(v32);
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "_updatePlayheadPosition(completion): error=%s", v28, 0xCu);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }
      else
      {
        swift_errorRelease(a2);
        swift_errorRelease(a2);
      }

      v39 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v24);
      v40 = v51;
      if (!v51)
        goto LABEL_14;
    }
    else
    {
      v39 = swift_errorRetain(a2);
      v40 = v51;
      if (!v51)
        goto LABEL_14;
    }
    v40(v39);
LABEL_14:
    swift_errorRelease(a2);
    return;
  }
  if (a2)
    goto LABEL_5;
  swift_beginAccess(v19, v56, 0, 0);
  v41 = swift_unknownObjectWeakLoadStrong(v19);
  if (v41)
  {
    v42 = (void *)v41;
    v43 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v41 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger, v49);

    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "_updatePlayheadPosition(completion): self is nil", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }

    v41 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v43);
  }
  if (v51)
    v51(v41);
}

uint64_t sub_1002A8950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002A8A00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8) + 80);
  return sub_1002A5DF8(*(char **)(v0 + 16), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1), *(double *)(v0 + 24));
}

uint64_t sub_1002A8A40(uint64_t a1)
{
  uint64_t v1;

  return sub_1002A6428(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002A8A54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002A8A78()
{
  uint64_t v0;

  return sub_1002A6560(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002A8A94()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002A8AC8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t result;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  result = sub_1002A4488();
  if (v1)
    return v1(result);
  return result;
}

uint64_t sub_1002A8B04()
{
  uint64_t v0;

  return sub_1002A224C(v0);
}

uint64_t sub_1002A8B1C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002A8B50(char a1)
{
  uint64_t v1;

  sub_1002A0A00(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24));
}

uint64_t sub_1002A8B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening) = 1;
  result = (uint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor), "isConnected");
  if ((result & 1) == 0)
  {
    v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v5, 0, 0);
    result = (uint64_t)sub_10003F198(v3, v3[3]);
    if (*(_BYTE *)(*(_QWORD *)result + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_streaming) == 1)
    {
      v4 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError;
      if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError) & 1) == 0
        && *(_BYTE *)(v0 + v1) == 1)
      {
        result = sub_1002A156C();
        *(_BYTE *)(v0 + v4) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1002A8C20()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_serviceDelegate);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "preorderedStateChanged");
    swift_unknownObjectRelease(v2);
  }
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (result)
  {
    v4 = result;
    v5 = v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_buyButtonPresenter;
    swift_beginAccess(v5, &v8, 0, 0);
    sub_10000B5E4(v5, (uint64_t)v9, (uint64_t *)&unk_1009D7450);
    if (v10)
    {
      v6 = sub_10004CFD4((uint64_t *)&unk_1009D7460);
      v7 = sub_10004CFD4((uint64_t *)&unk_1009E7690);
      if ((swift_dynamicCast(&v11, v9, v6, v7, 6) & 1) == 0)
      {
        v13 = 0;
        v11 = 0u;
        v12 = 0u;
      }
    }
    else
    {
      sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009D7450);
      v11 = 0u;
      v12 = 0u;
      v13 = 0;
    }
    type metadata accessor for AudiobookNowPlayingPresenter(0);
    sub_1004CC4C4((uint64_t)&v11);
    swift_unknownObjectRelease(v4);
    return sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D4CE0);
  }
  return result;
}

void sub_1002A8D6C()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor), "isConnected");
  v2 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError;
  if (v1)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError) & 1) == 0
      && *(_BYTE *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening) == 1)
    {
      sub_1002A69DC();
LABEL_8:
      *(_BYTE *)(v0 + v2) = 1;
    }
  }
  else if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError) & 1) == 0
         && *(_BYTE *)(v0 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening) == 1)
  {
    sub_1002A156C();
    goto LABEL_8;
  }
}

void sub_1002A8DF0()
{
  uint64_t v0;

  sub_1002A5810(v0);
}

uint64_t sub_1002A8E08@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100716F20, (uint64_t)&unk_100716F48, a2);
}

uint64_t sub_1002A8E2C(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100716F20, (uint64_t)&unk_100716F48);
}

uint64_t sub_1002A8E68@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100717040, (uint64_t)&unk_100717068, a2);
}

uint64_t sub_1002A8E8C(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100717040, (uint64_t)&unk_100717068);
}

uint64_t sub_1002A8EB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002A8EE4(void *a1)
{
  uint64_t v1;

  sub_1002A4078(a1, *(_QWORD *)(v1 + 16));
}

void sub_1002A8EF0(void *a1)
{
  uint64_t v1;

  sub_1002A64C0(a1, v1);
}

uint64_t sub_1002A8F0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002A8F38()
{
  uint64_t v0;

  sub_1003F771C(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

void sub_1002A8F48(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  void **aBlock;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, void *);
  void *v22;
  uint64_t (*v23)();
  uint64_t v24;

  v4 = swift_allocObject(&unk_1008F91F8, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler)+ OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController);
  if (!Strong)
  {
    _Block_copy(a2);
    a2[2](a2, 0);
    swift_release(v4);
    return;
  }
  v18 = (id)Strong;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates);
  v7 = swift_unknownObjectWeakLoadStrong(v6 + 24);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = swift_allocObject(&unk_1008F9270, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_1002028E0;
    *(_QWORD *)(v9 + 24) = v4;
    v23 = sub_100258E34;
    v24 = v9;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_1002A7214;
    v22 = &unk_1008F9288;
    v10 = _Block_copy(&aBlock);
    v11 = v24;
    _Block_copy(a2);
    v12 = v18;
    swift_retain(v4);
    objc_msgSend(v8, "assetViewControllerRequestToBuy:completion:", v12, v10, swift_release(v11).n128_f64[0]);

    _Block_release(v10);
    swift_release(v4);
    swift_unknownObjectRelease(v8);
LABEL_7:

    return;
  }
  v13 = swift_unknownObjectWeakLoadStrong(v6 + 16);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = swift_allocObject(&unk_1008F9220, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_1002028E0;
    *(_QWORD *)(v15 + 24) = v4;
    v23 = sub_10004DE04;
    v24 = v15;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_1002A7214;
    v22 = &unk_1008F9238;
    v16 = _Block_copy(&aBlock);
    v17 = v24;
    _Block_copy(a2);
    v12 = v18;
    swift_retain(v4);
    objc_msgSend(v14, "audiobookNowPlayingViewControllerRequestBuy:completion:", v12, v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);
    swift_release(v4);
    swift_unknownObjectRelease(v14);

    goto LABEL_7;
  }
  _Block_copy(a2);
  a2[2](a2, 0);
  swift_release(v4);

}

uint64_t sub_1002A91E8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A920C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A9230()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_1002A9264()
{
  uint64_t v0;

  return sub_1002A586C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(unsigned __int8 *)(v0 + 33), *(void **)(v0 + 40));
}

uint64_t sub_1002A92BC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D74B0);
  sub_100048F64(v0, (uint64_t)qword_1009D74B0);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000031, 0x80000001007BBDC0);
}

uint64_t sub_1002A932C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _DWORD *v9;

  v1 = v0;
  if (qword_1009CDDC8 != -1)
    swift_once(&qword_1009CDDC8, sub_1002A92BC);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009D74B0);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v8 = static os_log_type_t.debug.getter(v4, v5, v6, v7);
  if (os_log_type_enabled(v4, v8))
  {
    v9 = (_DWORD *)swift_slowAlloc(12, -1);
    swift_slowAlloc(32, -1);
    *v9 = 136446210;
    __asm { BR              X10 }
  }

  return swift_release_n(v0, 2);
}

void sub_1002A955C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t aBlock[5];
  uint64_t v38;

  v2 = v1;
  if (qword_1009CDDC8 != -1)
    swift_once(&qword_1009CDDC8, sub_1002A92BC);
  v4 = type metadata accessor for Logger(0);
  sub_100048F64(v4, (uint64_t)qword_1009D74B0);
  v5 = swift_retain_n(v1, 2);
  v6 = Logger.logObject.getter(v5);
  v10 = static os_log_type_t.debug.getter(v6, v7, v8, v9);
  if (os_log_type_enabled(v6, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    aBlock[0] = swift_slowAlloc(64, -1);
    *(_DWORD *)v11 = 136315394;
    v36 = sub_100040F58(0xD00000000000002DLL, 0x80000001007BBE60, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, aBlock, v11 + 4, v11 + 12);
    *(_WORD *)(v11 + 12) = 2080;
    __asm { BR              X10 }
  }

  swift_release_n(v1, 2);
  v12 = v1[5] >> 61;
  if (v12 >= 3)
  {
    if ((_DWORD)v12 == 3)
    {
      v13 = (void *)v1[2];
      v14 = (void *)v1[3];
      v15 = v13;
      v16 = v14;
      objc_msgSend(v15, "setFractionComplete:", 0.0);
      v17 = Logger.logObject.getter(objc_msgSend(v15, "pauseAnimation"));
      v18 = static os_log_type_t.info.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Change while removing blur. Setting state back to removingBlur with animation paused!.", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }

      v20 = (void *)objc_opt_self(NSTimer);
      v21 = swift_allocObject(&unk_1008F94A0, 24, 7);
      swift_weakInit(v21 + 16, v2);
      aBlock[4] = (uint64_t)sub_1002ABB3C;
      v38 = v21;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001EDBF0;
      aBlock[3] = (uint64_t)&unk_1008F96E8;
      v22 = _Block_copy(aBlock);
      v23 = v38;
      v24 = v15;
      v25 = v16;
      swift_release(v23);
      v26 = objc_msgSend(v20, "scheduledTimerWithTimeInterval:repeats:block:", 0, v22, 3.5);
      _Block_release(v22);
      v27 = swift_allocObject(&unk_1008F9720, 24, 7);
      *(_QWORD *)(v27 + 16) = v26;
      v28 = type metadata accessor for AnyCancellable(0);
      swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
      v29 = AnyCancellable.init(_:)(sub_1002ABB9C, v27);
      v30 = (void *)v2[2];
      v31 = (void *)v2[3];
      v32 = (void *)v2[4];
      v33 = v2[5];
      v2[2] = v13;
      v2[3] = v14;
      v2[4] = v29;
      v2[5] = 0x6000000000000000;
      v34 = v24;
      v35 = v25;
      swift_retain(v29);
      sub_1002AB788(v30, v31, v32, v33);
      sub_1002A932C();
      swift_release(v29);

    }
    else
    {
      sub_1002A9EE8(a1 & 1);
    }
  }
}

void sub_1002A9A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t aBlock;

  v1 = v0;
  if (qword_1009CDDC8 != -1)
    swift_once(&qword_1009CDDC8, sub_1002A92BC);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009D74B0);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v8 = static os_log_type_t.debug.getter(v4, v5, v6, v7);
  if (os_log_type_enabled(v4, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    aBlock = swift_slowAlloc(64, -1);
    *(_DWORD *)v9 = 136315394;
    v10 = sub_100040F58(0xD00000000000001CLL, 0x80000001007BBE40, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &aBlock, v9 + 4, v9 + 12);
    *(_WORD *)(v9 + 12) = 2080;
    __asm { BR              X10 }
  }

  swift_release_n(v1, 2);
  __asm { BR              X10 }
}

void sub_1002A9EE8(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *Strong;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  unint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  void *v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  void *v48;
  void *v49;
  void *v50;
  unint64_t v51;
  id v52;
  _QWORD aBlock[5];
  uint64_t v54;

  v2 = v1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 6);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "view");
    if (!v6)
    {
      __break(1u);
      goto LABEL_21;
    }
    v7 = v6;
    v8 = objc_msgSend(v6, "snapshotViewAfterScreenUpdates:", 0);

    if (v8)
    {
      if ((a1 & 1) != 0)
        v9 = 16;
      else
        v9 = 11;
      v10 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", v9);
      v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v10);

      v12 = objc_msgSend(v5, "view");
      if (v12)
      {
        v13 = v12;
        sub_100411014(v8, 0.0, 0.0, 0.0, 0.0);

        v14 = objc_msgSend(v5, "view");
        if (v14)
        {
          v15 = v14;
          sub_100411014(v11, 0.0, 0.0, 0.0, 0.0);

          v16 = sub_1002AB06C(v11);
          v17 = (void *)objc_opt_self(NSTimer);
          v18 = swift_allocObject(&unk_1008F94A0, 24, 7);
          swift_weakInit(v18 + 16, v2);
          aBlock[4] = sub_1002ABB3C;
          v54 = v18;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1001EDBF0;
          aBlock[3] = &unk_1008F9648;
          v19 = _Block_copy(aBlock);
          v20 = v54;
          v52 = v8;
          v21 = v11;
          v22 = v16;
          swift_release(v20);
          v23 = objc_msgSend(v17, "scheduledTimerWithTimeInterval:repeats:block:", 0, v19, 3.5);
          _Block_release(v19);
          v24 = swift_allocObject(&unk_1008F9680, 24, 7);
          *(_QWORD *)(v24 + 16) = v23;
          v25 = type metadata accessor for AnyCancellable(0);
          swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
          v26 = AnyCancellable.init(_:)(sub_1002ABB9C, v24);
          v27 = (void *)v2[2];
          v28 = (void *)v2[3];
          v30 = (void *)v2[4];
          v29 = v2[5];
          v2[2] = v8;
          v2[3] = v21;
          v2[4] = v22;
          v2[5] = v26;
          v31 = v52;
          v32 = v21;
          v33 = v22;
          swift_retain(v26);
          sub_1002AB788(v27, v28, v30, v29);
          sub_1002A932C();
          swift_release(v26);

          objc_msgSend(v33, "startAnimation");
          swift_unknownObjectRelease(v5);

          return;
        }
        goto LABEL_22;
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    if (qword_1009CDDC8 != -1)
      swift_once(&qword_1009CDDC8, sub_1002A92BC);
    v43 = type metadata accessor for Logger(0);
    v44 = sub_100048F64(v43, (uint64_t)qword_1009D74B0);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to snapshot the view", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }

    v48 = (void *)v2[2];
    v49 = (void *)v2[3];
    v50 = (void *)v2[4];
    v51 = v2[5];
    v2[2] = 0;
    v2[3] = 0;
    v2[4] = 0;
    v2[5] = 0x8000000000000000;
    sub_1002AB788(v48, v49, v50, v51);
    sub_1002A932C();
    swift_unknownObjectRelease(v5);
  }
  else
  {
    if (qword_1009CDDC8 != -1)
      swift_once(&qword_1009CDDC8, sub_1002A92BC);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100048F64(v34, (uint64_t)qword_1009D74B0);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      swift_slowDealloc(v38, -1, -1);
    }

    v39 = (void *)v2[2];
    v40 = (void *)v2[3];
    v41 = (void *)v2[4];
    v42 = v2[5];
    v2[2] = 0;
    v2[3] = 0;
    v2[4] = 0;
    v2[5] = 0x8000000000000000;
    sub_1002AB788(v39, v40, v41, v42);
    sub_1002A932C();
  }
}

void sub_1002AA3D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  void **v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  unint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  void **aBlock;
  uint64_t v55;
  void (*v56)(uint64_t, void *);
  void *v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = v0;
  if (qword_1009CDDC8 != -1)
    swift_once(&qword_1009CDDC8, sub_1002A92BC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009D74B0);
  v4 = Logger.logObject.getter(v3);
  v8 = static os_log_type_t.debug.getter(v4, v5, v6, v7);
  if (os_log_type_enabled(v4, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (void **)swift_slowAlloc(32, -1);
    aBlock = v10;
    *(_DWORD *)v9 = 136315138;
    v60 = sub_100040F58(0xD00000000000001ALL, 0x80000001007BBE20, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v4, v8, "%s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v12 = (void *)v0[2];
  v11 = (void *)v0[3];
  v13 = v0[5] >> 61;
  if ((_DWORD)v13 == 1)
  {
    v32 = v12;
    v33 = v11;
    v34 = (void *)objc_opt_self(NSTimer);
    v35 = swift_allocObject(&unk_1008F94A0, 24, 7);
    swift_weakInit(v35 + 16, v1);
    v58 = sub_1002ABB3C;
    v59 = v35;
    aBlock = _NSConcreteStackBlock;
    v55 = 1107296256;
    v56 = sub_1001EDBF0;
    v57 = &unk_1008F95A8;
    v36 = _Block_copy(&aBlock);
    v37 = v59;
    v38 = v32;
    v39 = v33;
    swift_release(v37);
    v40 = objc_msgSend(v34, "scheduledTimerWithTimeInterval:repeats:block:", 0, v36, 3.5);
    _Block_release(v36);
    v41 = swift_allocObject(&unk_1008F95E0, 24, 7);
    *(_QWORD *)(v41 + 16) = v40;
    v42 = type metadata accessor for AnyCancellable(0);
    swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
    v43 = AnyCancellable.init(_:)(sub_1002ABB9C, v41);
    v44 = (void *)v1[2];
    v45 = (void *)v1[3];
    v46 = (void *)v1[4];
    v47 = v1[5];
    v1[2] = v12;
    v1[3] = v11;
    v1[4] = v43;
    v1[5] = 0x4000000000000000;
    v48 = v38;
    v49 = v39;
    swift_retain(v43);
    sub_1002AB788(v44, v45, v46, v47);
    sub_1002A932C();
    swift_release(v43);

    sub_1002A9A2C();
  }
  else if ((_DWORD)v13)
  {
    v50 = swift_retain_n(v0, 2);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.error.getter(v51);
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc(22, -1);
      aBlock = (void **)swift_slowAlloc(64, -1);
      *(_DWORD *)v53 = 136315394;
      v60 = sub_100040F58(0xD00000000000001ALL, 0x80000001007BBE20, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v53 + 4, v53 + 12);
      *(_WORD *)(v53 + 12) = 2080;
      __asm { BR              X10 }
    }

    swift_release_n(v1, 2);
  }
  else
  {
    v14 = v12;
    v15 = v11;
    v16 = (void *)objc_opt_self(NSTimer);
    v17 = swift_allocObject(&unk_1008F94A0, 24, 7);
    swift_weakInit(v17 + 16, v1);
    v58 = sub_1002ABB3C;
    v59 = v17;
    aBlock = _NSConcreteStackBlock;
    v55 = 1107296256;
    v56 = sub_1001EDBF0;
    v57 = &unk_1008F95F8;
    v18 = _Block_copy(&aBlock);
    v19 = v59;
    v20 = v14;
    v21 = v15;
    swift_release(v19);
    v22 = objc_msgSend(v16, "scheduledTimerWithTimeInterval:repeats:block:", 0, v18, 3.5);
    _Block_release(v18);
    v23 = swift_allocObject(&unk_1008F9630, 24, 7);
    *(_QWORD *)(v23 + 16) = v22;
    v24 = type metadata accessor for AnyCancellable(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = AnyCancellable.init(_:)(sub_1002ABB9C, v23);
    v26 = (void *)v1[2];
    v27 = (void *)v1[3];
    v28 = (void *)v1[4];
    v29 = v1[5];
    v1[2] = v12;
    v1[3] = v11;
    v1[4] = v25;
    v1[5] = 0x4000000000000000;
    v30 = v20;
    v31 = v21;
    swift_retain(v25);
    sub_1002AB788(v26, v27, v28, v29);
    sub_1002A932C();
    swift_release(v25);

  }
}

void sub_1002AAA84(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  id v23;
  id v24;
  _QWORD v25[5];
  uint64_t v26;

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 6);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(a1, "removeFromSuperview");
    swift_unknownObjectRelease(v7);
  }
  v8 = sub_1002AB1F0(a2);
  v9 = (void *)objc_opt_self(NSTimer);
  v10 = swift_allocObject(&unk_1008F94A0, 24, 7);
  swift_weakInit(v10 + 16, v3);
  v25[4] = sub_1002ABB3C;
  v26 = v10;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  v25[2] = sub_1001EDBF0;
  v25[3] = &unk_1008F9558;
  v11 = _Block_copy(v25);
  v12 = v26;
  v13 = v8;
  v14 = a2;
  swift_release(v12);
  v15 = objc_msgSend(v9, "scheduledTimerWithTimeInterval:repeats:block:", 0, v11, 3.5);
  _Block_release(v11);
  v16 = swift_allocObject(&unk_1008F9590, 24, 7);
  *(_QWORD *)(v16 + 16) = v15;
  v17 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = AnyCancellable.init(_:)(sub_1002ABB44, v16);
  v19 = (void *)v3[2];
  v20 = (void *)v3[3];
  v21 = (void *)v3[4];
  v22 = v3[5];
  v3[2] = v13;
  v3[3] = v14;
  v3[4] = v18;
  v3[5] = 0x6000000000000000;
  v23 = v13;
  v24 = v14;
  swift_retain(v18);
  sub_1002AB788(v19, v20, v21, v22);
  sub_1002A932C();
  swift_release(v18);

  objc_msgSend(v23, "startAnimation");
}

void sub_1002AAC78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t Strong;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (_QWORD *)v0;
  if (qword_1009CDDC8 != -1)
    swift_once(&qword_1009CDDC8, sub_1002A92BC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009D74B0);
  v4 = Logger.logObject.getter(v3);
  v8 = static os_log_type_t.debug.getter(v4, v5, v6, v7);
  if (os_log_type_enabled(v4, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v25 = v10;
    *(_DWORD *)v9 = 136315138;
    v24 = sub_100040F58(0xD000000000000015, 0x80000001007BBDA0, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v4, v8, "%s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  if (*(_QWORD *)(v0 + 40) >> 61 == 3)
  {
    v11 = *(void **)(v0 + 24);
    v12 = *(id *)(v0 + 16);
    v13 = v11;

    Strong = swift_unknownObjectWeakLoadStrong(v1 + 6);
    if (Strong)
    {
      v15 = Strong;
      objc_msgSend(v13, "removeFromSuperview");
      swift_unknownObjectRelease(v15);
    }
    v16 = (void *)v1[2];
    v17 = (void *)v1[3];
    v18 = (void *)v1[4];
    v19 = v1[5];
    v1[2] = 0;
    v1[3] = 0;
    v1[4] = 0;
    v1[5] = 0x8000000000000000;
    sub_1002AB788(v16, v17, v18, v19);
    sub_1002A932C();

  }
  else
  {
    v20 = swift_retain_n(v0, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      *(_DWORD *)v23 = 136315394;
      v24 = sub_100040F58(0xD000000000000015, 0x80000001007BBDA0, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v23 + 4, v23 + 12);
      *(_WORD *)(v23 + 12) = 2080;
      __asm { BR              X10 }
    }

    swift_release_n(v1, 2);
  }
}

id sub_1002AB06C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  objc_msgSend(a1, "setAlpha:", 0.0);
  v3 = swift_allocObject(&unk_1008F94F0, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v16 = sub_100238C98;
  v17 = v3;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1000147F0;
  v15 = &unk_1008F9508;
  v5 = _Block_copy(&v12);
  v6 = v17;
  v7 = a1;
  swift_release(v6);
  v8 = objc_msgSend(v4, "initWithDuration:controlPoint1:controlPoint2:animations:", v5, 0.26, 0.5, 0.0, 0.5, 1.0);
  _Block_release(v5);
  v9 = swift_allocObject(&unk_1008F94A0, 24, 7);
  swift_weakInit(v9 + 16, v1);
  v16 = sub_1002ABB1C;
  v17 = v9;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_10004DCB4;
  v15 = &unk_1008F9530;
  v10 = _Block_copy(&v12);
  objc_msgSend(v8, "addCompletion:", v10, swift_release(v17).n128_f64[0]);
  _Block_release(v10);
  return v8;
}

id sub_1002AB1F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  objc_msgSend(a1, "setAlpha:", 1.0);
  v3 = swift_allocObject(&unk_1008F9450, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v16 = sub_100238BE0;
  v17 = v3;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1000147F0;
  v15 = &unk_1008F9468;
  v5 = _Block_copy(&v12);
  v6 = v17;
  v7 = a1;
  swift_release(v6);
  v8 = objc_msgSend(v4, "initWithDuration:controlPoint1:controlPoint2:animations:", v5, 0.26, 0.5, 0.0, 0.5, 1.0);
  _Block_release(v5);
  objc_msgSend(v8, "setInterruptible:", 1);
  v9 = swift_allocObject(&unk_1008F94A0, 24, 7);
  swift_weakInit(v9 + 16, v1);
  v16 = sub_1002ABAFC;
  v17 = v9;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_10004DCB4;
  v15 = &unk_1008F94B8;
  v10 = _Block_copy(&v12);
  objc_msgSend(v8, "addCompletion:", v10, swift_release(v17).n128_f64[0]);
  _Block_release(v10);
  return v8;
}

uint64_t sub_1002AB388(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    a3();
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_1002AB3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    swift_retain(result);
    sub_1006498E4((void (*)(uint64_t))sub_1002ABB54, v4);
    return swift_release_n(v4, 2);
  }
  return result;
}

_QWORD *sub_1002AB448(_QWORD *result)
{
  _QWORD *v1;
  unint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;

  v1 = result;
  v2 = result[5];
  if (v2 >> 61 != 4 || (v2 == 0x8000000000000000 ? (v3 = (result[3] | result[4] | result[2]) == 0) : (v3 = 0), !v3))
  {
    if (qword_1009CDDC8 != -1)
      swift_once(&qword_1009CDDC8, sub_1002A92BC);
    v4 = type metadata accessor for Logger(0);
    sub_100048F64(v4, (uint64_t)qword_1009D74B0);
    v5 = swift_retain_n(v1, 2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (_DWORD *)swift_slowAlloc(12, -1);
      swift_slowAlloc(32, -1);
      *v8 = 136446210;
      __asm { BR              X10 }
    }

    v9 = swift_release_n(v1, 2);
    return (_QWORD *)sub_1002A9A2C(v9);
  }
  return result;
}

uint64_t sub_1002AB6B0()
{
  uint64_t v0;

  sub_1002AB788(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_1001FE9A0(v0 + 48);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for BookReaderThemeChangeSnapshotAnimator()
{
  return objc_opt_self(_TtC5Books37BookReaderThemeChangeSnapshotAnimator);
}

void *sub_1002AB700(void *result, void *a2, void *a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  v6 = a4 >> 61;
  if ((a4 >> 61) - 2 >= 2)
  {
    v7 = a4;
    if ((_DWORD)v6)
    {
      if ((_DWORD)v6 != 1)
        return result;
      v7 = a4 & 0x1FFFFFFFFFFFFFFFLL;
    }
    v8 = result;
    result = a2;
    a2 = a3;
    a3 = (void *)v7;
  }
  v9 = result;
  v10 = a2;
  return (void *)swift_retain(a3);
}

void *destroy for BookReaderThemeChangeSnapshotAnimator.State(uint64_t a1)
{
  return sub_1002AB788(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
}

void *sub_1002AB788(void *result, void *a2, void *a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;

  v6 = a4 >> 61;
  if ((a4 >> 61) - 2 >= 2)
  {
    v7 = a4;
    if ((_DWORD)v6)
    {
      if ((_DWORD)v6 != 1)
        return result;
      v7 = a4 & 0x1FFFFFFFFFFFFFFFLL;
    }

    result = a2;
    a2 = a3;
    a3 = (void *)v7;
  }

  return (void *)swift_release(a3);
}

_QWORD *initializeWithCopy for BookReaderThemeChangeSnapshotAnimator.State(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  unint64_t v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  sub_1002AB700(*(void **)a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t assignWithCopy for BookReaderThemeChangeSnapshotAnimator.State(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  unint64_t v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  sub_1002AB700(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  sub_1002AB788(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for BookReaderThemeChangeSnapshotAnimator.State(uint64_t a1, _OWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  unint64_t v6;
  __int128 v7;

  v3 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_1002AB788(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookReaderThemeChangeSnapshotAnimator.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)(a1 + 24) >> 57) >> 4) | (8
                                                           * ((*(_QWORD *)(a1 + 24) >> 57) & 8 | *(_QWORD *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for BookReaderThemeChangeSnapshotAnimator.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 124;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1002AB9A4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 24) >> 61;
  if (v1 <= 3)
    return v1;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1002AB9C0(uint64_t result)
{
  *(_QWORD *)(result + 24) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_1002AB9D0(_QWORD *result, uint64_t a2)
{
  if (a2 < 4)
  {
    result[3] = result[3] & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  }
  else
  {
    *result = (a2 - 4);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookReaderThemeChangeSnapshotAnimator.State()
{
  return &type metadata for BookReaderThemeChangeSnapshotAnimator.State;
}

uint64_t sub_1002ABA0C()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002ABA48
                                                            + 4 * byte_10071713F[*(_QWORD *)(v0 + 24) >> 61]))(0x676E69796C707061, 0xEC00000072756C42);
}

unint64_t sub_1002ABA48()
{
  return 0xD000000000000018;
}

uint64_t sub_1002ABA64()
{
  return 0x70416E4F72756C62;
}

uint64_t sub_1002ABA88()
{
  return 0x676E69766F6D6572;
}

uint64_t sub_1002ABA9C()
{
  return 0x64656C74746573;
}

uint64_t sub_1002ABAB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002ABAD8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002ABAFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1002AB388(a1, v1, sub_1002AAC78);
}

uint64_t sub_1002ABB1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002AB388(a1, v1, sub_1002AA3D8);
}

uint64_t sub_1002ABB3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1002AB3E0(a1, v1);
}

id sub_1002ABB44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "invalidate");
}

_QWORD *sub_1002ABB54()
{
  _QWORD *v0;

  return sub_1002AB448(v0);
}

id sub_1002ABBF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextActionData();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextActionData()
{
  return objc_opt_self(_TtC5Books17ContextActionData);
}

uint64_t sub_1002ABC78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v40;
  char *v41;
  id v42;
  uint64_t (*v43)(uint64_t *, unint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  id v53;
  char v54;
  char v55;
  __n128 v56;
  uint64_t *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char v68;
  __n128 v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char v89;
  __n128 v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char v96;
  __n128 v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char v104;
  __n128 v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char v112;
  __n128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  char *v128;
  void (*v129)(char *, uint64_t);
  unsigned int v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t *, unint64_t, uint64_t);
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t *v137;
  id v138[2];
  __int128 v139;
  uint64_t v140;
  _OWORD v141[2];

  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v133 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v134 = (char *)&v127 - v6;
  __chkstk_darwin(v7);
  v135 = (char *)&v127 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v127 - v10;
  __chkstk_darwin(v12);
  v136 = (char *)&v127 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v127 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v127 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v127 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v127 - v24;
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v127 - v28;
  dispatch thunk of ContextActionDataModel.originatingLocation.getter(&v139, v27);
  if (!v140)
  {
    sub_10004A7B8((uint64_t)&v139);
    v38 = enum case for ContextActionSource.unknown(_:);
    v39 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v3 + 104);
    v40 = a1;
    return v39(v40, v38, v2);
  }
  v137 = a1;
  sub_10004CFC4(&v139, v141);
  sub_10004CD0C((uint64_t)v141, (uint64_t)&v139);
  v30 = sub_1002AC86C();
  if (!swift_dynamicCast(v138, &v139, (char *)&type metadata for Any + 8, v30, 6))
  {
    sub_10004CD0C((uint64_t)v141, (uint64_t)&v139);
    if (!swift_dynamicCast(v138, &v139, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      _s5Books15CurrentPageViewVwxx_0(v141);
      v38 = enum case for ContextActionSource.unknown(_:);
      v39 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v3 + 104);
      v40 = v137;
      return v39(v40, v38, v2);
    }
    v128 = v11;
    v42 = v138[0];
    v41 = (char *)v138[1];
    v43 = *(uint64_t (**)(uint64_t *, unint64_t, uint64_t))(v3 + 104);
    v130 = enum case for ContextActionSource.productPage(_:);
    v132 = v43;
    v44 = ((uint64_t (*)(char *))v43)(v29);
    v45 = ContextActionSource.key.getter(v44);
    v46 = v2;
    v47 = (id)v45;
    v49 = v48;
    v50 = *(void (**)(_QWORD, _QWORD))(v3 + 8);
    v131 = v46;
    v129 = (void (*)(char *, uint64_t))v50;
    v50(v29, v46);
    if (v47 == v42 && v49 == v41)
    {
      swift_bridgeObjectRelease(v41);
      v51 = v41;
LABEL_14:
      _s5Books15CurrentPageViewVwxx_0(v141);
      swift_bridgeObjectRelease(v51);
      v57 = v137;
      v58 = v130;
      return v132(v57, v58, v131);
    }
    v53 = v42;
    v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v49, v42, v41, 0);
    v51 = v41;
    v55 = v54;
    v56 = swift_bridgeObjectRelease(v49);
    if ((v55 & 1) != 0)
      goto LABEL_14;
    v59 = (char *)enum case for ContextActionSource.wantToReadEntry(_:);
    v60 = v131;
    v61 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v25, enum case for ContextActionSource.wantToReadEntry(_:), v131, v56);
    v62 = ContextActionSource.key.getter(v61);
    v64 = v63;
    v65 = v60;
    v66 = v129;
    v129(v25, v65);
    if ((id)v62 == v53 && v64 == v51)
    {
      swift_bridgeObjectRelease(v51);
      v67 = v51;
LABEL_19:
      _s5Books15CurrentPageViewVwxx_0(v141);
      v70 = v67;
LABEL_20:
      swift_bridgeObjectRelease(v70);
      v57 = v137;
      v58 = (unint64_t)v59;
      return v132(v57, v58, v131);
    }
    v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v64, v53, v51, 0);
    v69 = swift_bridgeObjectRelease(v64);
    v67 = v51;
    if ((v68 & 1) != 0)
      goto LABEL_19;
    v71 = enum case for ContextActionSource.recentlyOpenedEntry(_:);
    v72 = v131;
    v73 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v22, enum case for ContextActionSource.recentlyOpenedEntry(_:), v131, v69);
    v74 = ContextActionSource.key.getter(v73);
    v76 = v75;
    v66(v22, v72);
    if ((id)v74 == v53 && v76 == v67)
      goto LABEL_24;
    v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v76, v53, v67, 0);
    v78 = swift_bridgeObjectRelease(v76);
    if ((v77 & 1) != 0)
      goto LABEL_26;
    v71 = enum case for ContextActionSource.miniPlayer(_:);
    v79 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v19, enum case for ContextActionSource.miniPlayer(_:), v72, v78);
    v80 = ContextActionSource.key.getter(v79);
    v82 = v81;
    v66(v19, v72);
    if ((id)v80 == v53 && v82 == v67)
      goto LABEL_24;
    v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v82, v53, v67, 0);
    v84 = swift_bridgeObjectRelease(v82);
    if ((v83 & 1) != 0)
      goto LABEL_26;
    v71 = enum case for ContextActionSource.toolbarAudioPlayer(_:);
    v85 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v16, enum case for ContextActionSource.toolbarAudioPlayer(_:), v72, v84);
    v86 = ContextActionSource.key.getter(v85);
    v88 = v87;
    v66(v16, v72);
    if ((id)v86 == v53 && v88 == v67)
    {
LABEL_24:
      swift_bridgeObjectRelease(v67);
LABEL_26:
      _s5Books15CurrentPageViewVwxx_0(v141);
      swift_bridgeObjectRelease(v67);
      return v132(v137, v71, v72);
    }
    v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v88, v53, v67, 0);
    v90 = swift_bridgeObjectRelease(v88);
    if ((v89 & 1) != 0)
      goto LABEL_26;
    v59 = (char *)enum case for ContextActionSource.continueEntry(_:);
    v91 = v136;
    v92 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v136, enum case for ContextActionSource.continueEntry(_:), v72, v90);
    v93 = ContextActionSource.key.getter(v92);
    v95 = v94;
    v66(v91, v72);
    if ((id)v93 == v53 && v95 == v67)
    {
      swift_bridgeObjectRelease(v67);
      goto LABEL_19;
    }
    v2 = (uint64_t)v53;
    v96 = _stringCompareWithSmolCheck(_:_:expecting:)(v93, v95, v53, v67, 0);
    v97 = swift_bridgeObjectRelease(v95);
    if ((v96 & 1) != 0)
      goto LABEL_19;
    v59 = (char *)enum case for ContextActionSource.topPicksEntry(_:);
    v98 = v128;
    v99 = v131;
    v100 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v128, enum case for ContextActionSource.topPicksEntry(_:), v131, v97);
    v101 = ContextActionSource.key.getter(v100);
    v103 = v102;
    v129(v98, v99);
    if ((id)v101 == v53 && v103 == v67)
    {
      v22 = v67;
      swift_bridgeObjectRelease(v67);
    }
    else
    {
      v22 = v67;
      v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, v103, v53, v67, 0);
      v105 = swift_bridgeObjectRelease(v103);
      if ((v104 & 1) == 0)
      {
        v59 = (char *)enum case for ContextActionSource.getSampleActionItem(_:);
        v106 = v135;
        v107 = v131;
        v108 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v135, enum case for ContextActionSource.getSampleActionItem(_:), v131, v105);
        v109 = ContextActionSource.key.getter(v108);
        v111 = v110;
        v129(v106, v107);
        if ((id)v109 != v53 || v111 != v22)
        {
          v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v109, v111, v53, v22, 0);
          v113 = swift_bridgeObjectRelease(v111);
          if ((v112 & 1) != 0)
            goto LABEL_45;
          v59 = (char *)enum case for ContextActionSource.sendGiftActionItem(_:);
          v114 = v134;
          v115 = v131;
          v116 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v134, enum case for ContextActionSource.sendGiftActionItem(_:), v131, v113);
          v117 = ContextActionSource.key.getter(v116);
          v119 = v118;
          v129(v114, v115);
          if ((id)v117 != v53 || v119 != v22)
          {
            v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v117, v119, v53, v22, 0);
            v121 = swift_bridgeObjectRelease(v119);
            if ((v120 & 1) == 0)
            {
              v25 = (char *)enum case for ContextActionSource.unifiedProductItem(_:);
              v122 = v133;
              v123 = v131;
              v124 = ((uint64_t (*)(char *, _QWORD, uint64_t, __n128))v132)(v133, enum case for ContextActionSource.unifiedProductItem(_:), v131, v121);
              v31 = (id)ContextActionSource.key.getter(v124);
              v30 = v125;
              v129(v122, v123);
              if (v31 == v53 && (char *)v30 == v22)
              {
                swift_bridgeObjectRelease_n(v22, 2);
                _s5Books15CurrentPageViewVwxx_0(v141);
LABEL_54:
                v57 = v137;
                v58 = (unint64_t)v25;
                return v132(v57, v58, v131);
              }
LABEL_53:
              v126 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v30, v2, v22, 0);
              swift_bridgeObjectRelease(v22);
              swift_bridgeObjectRelease(v30);
              _s5Books15CurrentPageViewVwxx_0(v141);
              if ((v126 & 1) == 0)
              {
                v58 = enum case for ContextActionSource.unknown(_:);
                v57 = v137;
                return v132(v57, v58, v131);
              }
              goto LABEL_54;
            }
            goto LABEL_45;
          }
        }
        swift_bridgeObjectRelease(v22);
      }
    }
LABEL_45:
    _s5Books15CurrentPageViewVwxx_0(v141);
    v70 = v22;
    goto LABEL_20;
  }
  v31 = v138[0];
  v32 = objc_msgSend(v138[0], "collectionID");
  if (!v32)
  {
    __break(1u);
    goto LABEL_53;
  }
  v33 = v32;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v36 = v35;

  v37 = v137;
  *v137 = v34;
  v37[1] = v36;
  v37[5] = v30;
  v37[2] = (uint64_t)v31;
  _s5Books15CurrentPageViewVwxx_0(v141);
  v38 = enum case for ContextActionSource.library(_:);
  v39 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v3 + 104);
  v40 = v37;
  return v39(v40, v38, v2);
}

uint64_t sub_1002AC530()
{
  _QWORD *v0;

  return sub_100365E08(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books17ContextActionData__assetInfos));
}

uint64_t sub_1002AC544()
{
  return objc_msgSend((id)objc_opt_self(BKReachability), "isOffline") ^ 1;
}

id sub_1002AC570()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
  v1 = objc_msgSend(v0, "isBookStoreAllowed");
  swift_unknownObjectRelease(v0);
  return v1;
}

id sub_1002AC5C8()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  v1 = objc_msgSend(v0, "isStoreAccountManagedAppleID");

  return v1;
}

uint64_t sub_1002AC61C()
{
  return dispatch thunk of ContextActionDataModel.shouldReportFigaro.getter() & 1;
}

uint64_t sub_1002AC64C()
{
  return dispatch thunk of ContextActionDataModel.isAnODPRecommendation.getter() & 1;
}

uint64_t sub_1002AC67C()
{
  return dispatch thunk of ContextActionDataModel.supportsSuggestionContextMenu.getter() & 1;
}

uint64_t sub_1002AC6AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002ABC78(a1);
}

uint64_t sub_1002AC6CC()
{
  return dispatch thunk of ContextActionDataModel.sourceBarButtonItem.getter();
}

void *sub_1002AC6F8()
{
  void *result;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  result = (void *)dispatch thunk of ContextActionDataModel.sourcePoint.getter();
  v1 = result;
  if (result)
  {
    objc_msgSend(result, "CGPointValue");
    v3 = v2;

    return (void *)v3;
  }
  return result;
}

void *sub_1002AC768()
{
  void *v0;
  void *v1;
  void *v2;
  char v3;

  v0 = (void *)ContextActionDataModel.initType.getter();
  v2 = v1;
  if ((v3 & 1) != 0)
  {
    sub_1002AC840(v0, v1, 1);
    return 0;
  }
  else
  {

  }
  return v2;
}

uint64_t sub_1002AC7B8()
{
  return dispatch thunk of ContextActionDataModel.transaction.getter();
}

uint64_t sub_1002AC7E4()
{
  return dispatch thunk of ContextActionDataModel.analyticsAttributes.getter();
}

uint64_t sub_1002AC810()
{
  return dispatch thunk of ContextActionDataModel.actionItemNeedsDifferentiation.getter() & 1;
}

void sub_1002AC840(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRelease(a1);
  }
  else
  {

  }
}

unint64_t sub_1002AC86C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7640;
  if (!qword_1009D7640)
  {
    v1 = objc_opt_self(BKCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D7640);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareView()
{
  return &type metadata for ShareView;
}

uint64_t sub_1002AC8CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086A23C, 1);
}

uint64_t sub_1002AC8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v5 = *v2;
  v4 = v2[1];
  v6 = static VerticalAlignment.top.getter(a1);
  ObjectType = swift_getObjectType();
  v8 = swift_unknownObjectRetain(v5);
  v9 = sub_1002ACA58(v8, ObjectType, v4);
  v11 = v10;
  result = swift_unknownObjectRelease(v5);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v11;
  *(_WORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1002AC958(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = v2[1];
  ObjectType = swift_getObjectType(*v2, a2);
  return dispatch thunk of AssetActivityItemProviding.makeActivityViewController()(ObjectType, v3);
}

uint64_t sub_1002AC994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002ACBEC();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002AC9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002ACBEC();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002ACA34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002ACBEC();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1002ACA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectRetain(a1);
  dispatch thunk of AssetActivityItemProviding.updateAsBook()(a2, a3);
  return a1;
}

__int128 *initializeBufferWithCopyOfBuffer for ShareSheet(__int128 *a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t *_s5Books9ShareViewVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  return a1;
}

_QWORD *assignWithTake for ShareSheet(_QWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  return a1;
}

ValueMetadata *type metadata accessor for ShareSheet()
{
  return &type metadata for ShareSheet;
}

unint64_t sub_1002ACB58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7648;
  if (!qword_1009D7648)
  {
    v1 = sub_100030B74(&qword_1009D7650);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7648);
  }
  return result;
}

unint64_t sub_1002ACBA8()
{
  unint64_t result;

  result = qword_1009D7658;
  if (!qword_1009D7658)
  {
    result = swift_getWitnessTable(&unk_10071731C, &type metadata for ShareSheet);
    atomic_store(result, (unint64_t *)&qword_1009D7658);
  }
  return result;
}

unint64_t sub_1002ACBEC()
{
  unint64_t result;

  result = qword_1009D7660;
  if (!qword_1009D7660)
  {
    result = swift_getWitnessTable(&unk_10071736C, &type metadata for ShareSheet);
    atomic_store(result, (unint64_t *)&qword_1009D7660);
  }
  return result;
}

uint64_t sub_1002ACC3C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D7670);
  sub_100048F64(v0, (uint64_t)qword_1009D7670);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000036, 0x80000001007BBEF0);
}

uint64_t BKLibraryBookshelfCollectionViewController.hasSelectedItems.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "indexPathsForSelectedItems");

    if (v3)
    {
      v4 = type metadata accessor for IndexPath(0);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

      v6 = sub_10004CFD4(&qword_1009D7688);
      v7 = sub_10029F8CC((unint64_t *)&unk_1009D7690, &qword_1009D7688);
      LOBYTE(v3) = Collection.isNotEmpty.getter(v6, v7);
      swift_bridgeObjectRelease(v5);
    }
  }
  else
  {
    LOBYTE(v3) = 0;
  }
  return v3 & 1;
}

_QWORD *BKLibraryBookshelfCollectionViewController.preferredFocusEnvironments.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = v1;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v4 + 32) = v2;
  v6 = v4;
  specialized Array._endMutation()(v4);
  return (_QWORD *)v6;
}

unint64_t BKLibraryBookshelfCollectionViewController.keyCommands.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  objc_super v25;
  unint64_t v26;

  v1 = v0;
  v25.super_class = (Class)BKLibraryBookshelfCollectionViewController;
  v2 = objc_msgSendSuper2(&v25, "keyCommands");
  if (v2)
  {
    v3 = v2;
    v4 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
    v5 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v26 = (unint64_t)v5;
  sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v23 = 0u;
  v24 = 0u;
  v6 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "books_open:", 13, 0xE100000000000000, 0, &v23, _swiftEmptyArrayStorage, 0, 0, 4, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v8 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
  specialized Array._endMutation()(v9);
  v10 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v11 = (unint64_t)objc_msgSend(v10, "state");

  if ((v11 | 4) == 4)
  {
    v23 = 0u;
    v24 = 0u;
    v12 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "books_open:", 32, 0xE100000000000000, 0, &v23, _swiftEmptyArrayStorage, 0, 0, 4, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
    specialized Array._endMutation()(v15);
  }
  if (objc_msgSend(v1, "isSupplementalContentPDFPicker"))
  {
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
    v23 = 0u;
    v24 = 0u;
    v18 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, "dismissPDFPicker:", v16, v17, 0, &v23, _swiftEmptyArrayStorage, 0, 0, 4, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);
  }
  return v26;
}

uint64_t sub_1002AD2FC()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = objc_msgSend(v0, "collectionID");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
  if (v2 == v5 && v4 == v6)
    goto LABEL_14;
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) == 0)
  {
    v11 = objc_msgSend(v0, "collectionID");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v4 = v13;

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDSamples);
    if (v12 != v14 || v4 != v15)
    {
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v4, v14, v15, 0);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) != 0)
        goto LABEL_6;
      v19 = objc_msgSend(v0, "collectionID");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v4 = v21;

      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
      v24 = v22;
      if (v20 != v23 || v4 != v22)
      {
        v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v4, v23, v22, 0);
        goto LABEL_15;
      }
    }
LABEL_14:
    v10 = 1;
    v24 = v4;
LABEL_15:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v24);
    return v10 & 1;
  }
LABEL_6:
  v10 = 1;
  return v10 & 1;
}

uint64_t BKLibraryBookshelfCollectionViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 v13;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  sub_10004AA7C(a2, (uint64_t)v16);
  v4 = v17;
  if (v17)
  {
    v5 = sub_10003F198(v16, v17);
    v6 = *(_QWORD *)(v4 - 8);
    v7 = __chkstk_darwin(v5);
    v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v6 + 16))(v9, v7);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    _s5Books15CurrentPageViewVwxx_0(v16);
  }
  else
  {
    v10 = 0;
  }
  v15.receiver = v2;
  v15.super_class = (Class)BKLibraryBookshelfCollectionViewController;
  v11 = objc_msgSendSuper2(&v15, "canPerformAction:withSender:", a1, v10);
  swift_unknownObjectRelease(v10);
  if ((static Selector.== infix(_:_:)("books_open:", a1) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("delete:", a1) & 1) != 0)
    {
      if (v11)
      {
        LOBYTE(v12) = objc_msgSend(v2, "hasAnyDeletableBookSelected");
        return v12 & 1;
      }
      goto LABEL_26;
    }
    if ((static Selector.== infix(_:_:)("books_viewAsGrid:", a1) & 1) != 0
      || (static Selector.== infix(_:_:)("books_viewAsList:", a1) & 1) != 0)
    {
      if (!v11)
        goto LABEL_26;
    }
    else
    {
      if ((static Selector.== infix(_:_:)("books_viewAllInSeries:", a1) & 1) != 0
        || (static Selector.== infix(_:_:)("books_viewOnlyPurchased:", a1) & 1) != 0)
      {
        if (v11)
        {
          LOBYTE(v12) = objc_msgSend(v2, "isSeriesCollection");
          return v12 & 1;
        }
LABEL_26:
        LOBYTE(v12) = 0;
        return v12 & 1;
      }
      if ((static Selector.== infix(_:_:)("books_sortByLastOpened:", a1) & 1) != 0
        || (static Selector.== infix(_:_:)("books_sortByTitle:", a1) & 1) != 0
        || (static Selector.== infix(_:_:)("books_sortByAuthor:", a1) & 1) != 0)
      {
        if (!v11)
          goto LABEL_26;
      }
      else
      {
        v12 = static Selector.== infix(_:_:)("books_sortManually:", a1);
        if ((v12 & v11 & 1) == 0)
        {
          LOBYTE(v12) = v11 & ~(_BYTE)v12;
          return v12 & 1;
        }
      }
      if ((objc_msgSend(v2, "isSeriesCollection") & 1) != 0)
        goto LABEL_26;
    }
    v13 = sub_1002AD2FC();
    goto LABEL_16;
  }
  if (!v11)
    goto LABEL_26;
  v12 = objc_msgSend(v2, "hasSelectedItems");
  if (v12)
  {
    v13 = objc_msgSend(v2, "hasAnySeriesContainerSelected");
LABEL_16:
    LOBYTE(v12) = v13 ^ 1;
  }
  return v12 & 1;
}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.validate(_:)(UICommand a1)
{
  void *v1;
  id v3;
  char **v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  objc_super v9;

  v9.super_class = (Class)BKLibraryBookshelfCollectionViewController;
  objc_msgSendSuper2(&v9, "validateCommand:", a1.super.super.isa);
  v3 = -[objc_class action](a1.super.super.isa, "action");
  if ((static Selector.== infix(_:_:)("books_viewAsGrid:", v3) & 1) != 0)
  {
    v4 = &selRef_viewMode;
    v5 = 1;
  }
  else if ((static Selector.== infix(_:_:)("books_viewAsList:", v3) & 1) != 0)
  {
    v4 = &selRef_viewMode;
    v5 = 2;
  }
  else if ((static Selector.== infix(_:_:)("books_viewAllInSeries:", v3) & 1) != 0)
  {
    v4 = &selRef_sortMode;
    v5 = 10;
  }
  else if ((static Selector.== infix(_:_:)("books_viewOnlyPurchased:", v3) & 1) != 0)
  {
    v4 = &selRef_sortMode;
    v5 = 9;
  }
  else if ((static Selector.== infix(_:_:)("books_sortByLastOpened:", v3) & 1) != 0)
  {
    v4 = &selRef_sortMode;
    v5 = 1;
  }
  else if ((static Selector.== infix(_:_:)("books_sortByTitle:", v3) & 1) != 0)
  {
    v4 = &selRef_sortMode;
    v5 = 2;
  }
  else if ((static Selector.== infix(_:_:)("books_sortByAuthor:", v3) & 1) != 0)
  {
    v4 = &selRef_sortMode;
    v5 = 3;
  }
  else
  {
    if ((static Selector.== infix(_:_:)("books_sortManually:", v3) & 1) == 0)
      return;
    v4 = &selRef_sortMode;
    v5 = 6;
  }
  v6 = objc_msgSend(v1, "dataSourceAdaptor");
  v7 = objc_msgSend(v6, "supplementaryDataSource");

  v8 = objc_msgSend(v7, *v4);
  -[objc_class setState:](a1.super.super.isa, "setState:", v8 == (id)v5);
}

id BKLibraryBookshelfCollectionViewController.selectAll(_:)()
{
  void *v0;

  return objc_msgSend(v0, "selectAll");
}

id BKLibraryBookshelfCollectionViewController.dismissPDFPicker(_:)()
{
  void *v0;

  return objc_msgSend(v0, "dismissPDFPicker");
}

uint64_t sub_1002ADA08(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;
  uint64_t v8;
  id v9;
  __int128 v11;
  __int128 v12;

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
    v9 = a1;
  }
  objc_msgSend(a1, *a4, v11, v12);

  return sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D04E0);
}

id BKLibraryBookshelfCollectionViewController.delete(_:)()
{
  void *v0;

  return objc_msgSend(v0, "removeForSelectedItems");
}

void sub_1002ADAA8(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  id v8;
  uint64_t v9;

  v3 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v1, "editButtonPressed:");
  v4 = objc_msgSend(v1, "navigationItem");
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v6 + 32) = v3;
  v9 = v6;
  specialized Array._endMutation()(v6);
  sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
  v8 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setRightBarButtonItems:animated:", isa, a1 & 1, swift_bridgeObjectRelease(v9).n128_f64[0]);

  sub_1002ADBCC();
}

void sub_1002ADBCC()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unsigned int v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  id v12;

  v1 = sub_1002B101C();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "navigationItem");
    v12 = objc_msgSend(v3, "titleView");

    if (v12)
    {
      v4 = type metadata accessor for LibraryCollectionTitleView();
      v5 = swift_dynamicCastClass(v12, v4);
      if (v5)
      {
        v6 = (void *)v5;
        v7 = objc_msgSend(v2, "isHidden");
        objc_msgSend(v6, "largeTitleHeight");
        if (((v7 ^ (v8 <= 20.0)) & 1) == 0)
        {
          objc_msgSend(v6, "largeTitleHeight");
          objc_msgSend(v2, "setHidden:", v9 > 20.0);
        }
      }
      else
      {
        v11 = v2;
        v2 = v12;
        v12 = v11;
      }

      v10 = v12;
    }
    else
    {
      v10 = v2;
    }

  }
}

void sub_1002ADCF8(char a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  Class isa;

  v2 = v1;
  v4 = sub_1002ADF1C();
  if (v4)
  {
    v5 = v4;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
    specialized Array._endMutation()(v8);

  }
  v9 = sub_1002AE2FC();
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 1.0);
    v12 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v11);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
    specialized Array._endMutation()(v16);
    v17 = v10;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);

  }
  v21 = objc_msgSend(v2, "navigationItem");
  sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "setRightBarButtonItems:animated:", isa, a1 & 1, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

  sub_1002ADBCC();
}

id sub_1002ADF1C()
{
  void *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v35 = type metadata accessor for UIButton.Configuration.Size(0);
  v1 = *(_QWORD *)(v35 - 8);
  v2 = __chkstk_darwin(v35);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration.CornerStyle(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration(0, v7);
  v36 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v31 - v17;
  v19 = sub_1002AF898();
  if (!v19)
    return 0;
  v31 = v19;
  v32 = v10;
  v33 = v0;
  static UIButton.Configuration.gray()();
  v34 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 6, 2, 15.0);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v20);

  if (v21)
  {
    v22 = objc_msgSend(v21, "imageWithConfiguration:", v34);

  }
  else
  {
    v22 = 0;
  }
  UIButton.Configuration.image.setter(v22);
  v24 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v24, "tertiarySystemFillColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v24, "bc_booksKeyColor"));
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
  UIButton.Configuration.cornerStyle.setter(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for UIButton.Configuration.Size.small(_:), v35);
  UIButton.Configuration.buttonSize.setter(v4);

  v25 = v36;
  v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v18, v15, v32);
  sub_100009E04(0, qword_1009D7740, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v12, v18, v26);
  v27 = (void *)UIButton.init(configuration:primaryAction:)(v12, 0);
  v28 = v31;
  objc_msgSend(v27, "setMenu:", v31);
  objc_msgSend(v27, "setShowsMenuAsPrimaryAction:", 1);
  v29 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v27, "addInteraction:", v29);

  objc_msgSend(v27, "setShowsLargeContentViewer:", 1);
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v27);
  objc_msgSend(v23, "setTag:", 0);
  objc_msgSend(v23, "setEnabled:", objc_msgSend(v33, "dragAndDropSessionsActive") == 0);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v26);
  return v23;
}

id sub_1002AE2FC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  id v30;
  id v31;
  id result;
  void (*v33)(char *, _QWORD, uint64_t);
  char v34;
  void (*v35)(char *, uint64_t);
  char v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  NSString v47;
  uint64_t v48;
  void *v49;
  id v50;
  NSString v51;
  id v52;
  id v53;
  char *v54;
  void *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60;
  id v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t ObjCClassFromMetadata;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  NSString v76;
  id v77;
  uint64_t v78;
  id v79;
  char *v80;
  uint64_t v81;
  id v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v89 = *(_QWORD *)(v2 - 8);
  v90 = v2;
  __chkstk_darwin(v2);
  v86 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v88 = (char *)&v78 - v5;
  v87 = type metadata accessor for String.LocalizationValue(0);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v83 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v84 = (char *)&v78 - v8;
  v9 = (_QWORD *)type metadata accessor for UIButton.Configuration.Size(0);
  v81 = *(v9 - 1);
  v82 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIButton.Configuration.CornerStyle(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIButton.Configuration(0, v15);
  v92 = *(_QWORD *)(v18 - 8);
  v93 = v18;
  __chkstk_darwin(v18);
  v80 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v78 - v21;
  __chkstk_darwin(v23);
  v91 = (char *)&v78 - v24;
  v25 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v1;
  v30 = objc_msgSend(v1, "traitCollection", v27);
  v31 = objc_msgSend(v30, "horizontalSizeClass");

  result = 0;
  if (v31 != (id)2)
    return result;
  v33 = *(void (**)(char *, _QWORD, uint64_t))(v26 + 104);
  v33(v29, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v25);
  v34 = isFeatureEnabled(_:)(v29);
  v35 = *(void (**)(char *, uint64_t))(v26 + 8);
  v35(v29, v25);
  if ((v34 & 1) == 0)
  {
    v33(v29, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v25);
    v36 = isFeatureEnabled(_:)(v29);
    v35(v29, v25);
    if ((v36 & 1) == 0)
      return 0;
  }
  v37 = v94;
  v38 = objc_msgSend(v94, "collectionID");
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultAll);
  v44 = v42;
  if (v39 != v43 || v41 != v42)
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v44);
    if ((v45 & 1) != 0)
      goto LABEL_8;
    return 0;
  }
  swift_bridgeObjectRelease_n(v41, 2);
LABEL_8:
  v46 = objc_msgSend(v37, "_readingListBackingButton");

  if (!v46)
  {
    sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
    v47 = String._bridgeToObjectiveC()();
    v48 = swift_allocObject(&unk_1008F9968, 24, 7);
    swift_unknownObjectWeakInit(v48 + 16, v37);
    v49 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, v47, 0, 0, 0, 0, sub_1002B2E48, v48);
    static UIButton.Configuration.gray()();
    v50 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 6, 2, 15.0);
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v51);

    v79 = v49;
    if (v52)
    {
      v53 = objc_msgSend(v52, "imageWithConfiguration:", v50);

    }
    else
    {
      v53 = 0;
    }
    v54 = v80;
    UIButton.Configuration.image.setter(v53);
    v55 = (void *)objc_opt_self(UIColor);
    UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v55, "tertiarySystemFillColor"));
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v55, "bc_booksKeyColor"));
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v13);
    UIButton.Configuration.cornerStyle.setter(v17);
    (*(void (**)(char *, _QWORD, id))(v81 + 104))(v12, enum case for UIButton.Configuration.Size.small(_:), v82);
    UIButton.Configuration.buttonSize.setter(v12);

    v56 = v91;
    v57 = v92;
    v58 = v22;
    v59 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v58, v93);
    sub_100009E04(0, qword_1009D7740, UIButton_ptr);
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v56, v59);
    v60 = v79;
    v82 = v79;
    v61 = (id)UIButton.init(configuration:primaryAction:)(v54, v60);
    v62 = v84;
    v63 = String.LocalizationValue.init(stringLiteral:)(0x697463656C6C6F43, 0xEB00000000736E6FLL);
    v64 = v88;
    static Locale.current.getter(v63);
    v65 = v85;
    v66 = v83;
    v67 = v87;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v83, v62, v87);
    v68 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v68);
    v70 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v72 = v89;
    v71 = v90;
    v73 = v86;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v64, v90);
    String.init(localized:table:bundle:locale:comment:)(v66, 0, 0, v70, v73, "Accessibility string my collections navigation bar button", 57, 2);
    v75 = v74;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v71);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v67);
    v76 = String._bridgeToObjectiveC()();
    objc_msgSend(v61, "setAccessibilityLabel:", v76, swift_bridgeObjectRelease(v75).n128_f64[0]);

    objc_msgSend(v61, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v77 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v61);
    objc_msgSend(v77, "setTag:", 2);
    v37 = v94;
    objc_msgSend(v94, "set_readingListBackingButton:", v77);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
  }
  return objc_msgSend(v37, "_readingListBackingButton");
}

void sub_1002AEAB8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  uint64_t v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  unsigned __int8 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;

  v1 = v0;
  v2 = sub_1002AF0B0();
  if (!v2)
  {
    v48 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v48, "_setLargeTitleAccessoryView:alignToBaseline:", 0, 0);
LABEL_20:

    return;
  }
  v3 = v2;
  v4 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v4, "_setLargeTitleAccessoryView:alignToBaseline:", v3, 0);

  v5 = objc_msgSend(v1, "navigationItem");
  v6 = objc_msgSend(v5, "_largeTitleAccessoryView");

  if (!v6)
  {
    __break(1u);
    goto LABEL_92;
  }
  v7 = objc_msgSend(v6, "interactions");
  v46 = sub_10004CFD4((uint64_t *)&unk_1009D7C10);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v46);

  v47 = v6;
  v49 = v8;
  v9 = (unint64_t)v8 >> 62;
  v45 = v3;
  if ((unint64_t)v8 >> 62)
    goto LABEL_71;
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v8);
  while (v10)
  {
    v11 = sub_100009E04(0, (unint64_t *)&unk_1009D7730, UILargeContentViewerInteraction_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v11);
    v13 = 0;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v8);
      }
      else
      {
        v14 = *(void **)(v8 + 8 * v13 + 32);
        swift_unknownObjectRetain(v14);
      }
      v15 = objc_msgSend(v14, "isKindOfClass:", ObjCClassFromMetadata, v45);
      swift_unknownObjectRelease(v14);
      if ((v15 & 1) != 0)
      {
        swift_bridgeObjectRelease(v8);
        v24 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
        }
        else if (!v9)
        {
          if (v24 == *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_14;
LABEL_24:
          v9 = v13 + 5;
          while (1)
          {
            v25 = v9 - 4;
            if ((v8 & 0xC000000000000001) != 0)
            {
              v26 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v8);
            }
            else
            {
              if ((v25 & 0x8000000000000000) != 0)
                goto LABEL_61;
              if (v25 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v26 = *(void **)(v8 + 8 * v9);
              swift_unknownObjectRetain(v26);
            }
            v27 = objc_msgSend(v26, "isKindOfClass:", ObjCClassFromMetadata);
            swift_unknownObjectRelease(v26);
            if ((v27 & 1) == 0)
            {
              if (v25 != v13)
              {
                if ((v8 & 0xC000000000000001) != 0)
                {
                  v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v8);
                  v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v8);
                }
                else
                {
                  if (v13 < 0)
                    goto LABEL_65;
                  v28 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v13 >= v28)
                    goto LABEL_66;
                  v29 = *(_QWORD *)(v8 + 8 * v13 + 32);
                  swift_unknownObjectRetain(v29);
                  if ((v25 & 0x8000000000000000) != 0)
                    goto LABEL_67;
                  if (v25 >= v28)
                    goto LABEL_68;
                  v30 = *(_QWORD *)(v8 + 8 * v9);
                  swift_unknownObjectRetain(v30);
                }
                if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v8)
                  || v8 < 0
                  || (v8 & 0x4000000000000000) != 0)
                {
                  v8 = sub_100064598(v8);
                  v49 = v8;
                }
                v31 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v13 + 0x20);
                *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v13 + 0x20) = v30;
                v32 = swift_unknownObjectRelease(v31);
                specialized Array._endMutation()(v32);
                v8 = v49;
                if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v49)
                  || v8 < 0
                  || (v8 & 0x4000000000000000) != 0)
                {
                  v8 = sub_100064598(v8);
                  v49 = v8;
                }
                if ((v25 & 0x8000000000000000) != 0)
                  goto LABEL_69;
                v33 = v8 & 0xFFFFFFFFFFFFFF8;
                if (v25 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_70;
                v34 = *(_QWORD *)(v33 + 8 * v9);
                *(_QWORD *)(v33 + 8 * v9) = v29;
                v35 = swift_unknownObjectRelease(v34);
                v8 = (uint64_t)&v49;
                specialized Array._endMutation()(v35);
              }
              if (__OFADD__(v13++, 1))
                goto LABEL_64;
            }
            v37 = v9 - 3;
            if (__OFADD__(v25, 1))
              goto LABEL_63;
            v8 = v49;
            if ((unint64_t)v49 >> 62)
            {
              if (v49 < 0)
                v39 = v49;
              else
                v39 = v49 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v49);
              v38 = _CocoaArrayWrapper.endIndex.getter(v39);
              swift_bridgeObjectRelease(v8);
            }
            else
            {
              v38 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            ++v9;
            if (v37 == v38)
              goto LABEL_14;
          }
        }
        if (v8 < 0)
          v43 = v8;
        else
          v43 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v44 = _CocoaArrayWrapper.endIndex.getter(v43);
        swift_bridgeObjectRelease(v8);
        if (v24 == v44)
          goto LABEL_14;
        goto LABEL_24;
      }
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      ++v13;
      if (v16 == v10)
        goto LABEL_12;
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    if (v8 < 0)
      v40 = v8;
    else
      v40 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v10 = _CocoaArrayWrapper.endIndex.getter(v40);
  }
LABEL_12:
  swift_bridgeObjectRelease(v8);
  if (v9)
    goto LABEL_81;
  v13 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  while (!((unint64_t)v8 >> 62))
  {
    v17 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v13)
      goto LABEL_16;
LABEL_80:
    __break(1u);
LABEL_81:
    if (v8 < 0)
      v42 = v8;
    else
      v42 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v13 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(v8);
  }
  if (v8 < 0)
    v41 = v8;
  else
    v41 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v17 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease(v8);
  if (v17 < v13)
    goto LABEL_80;
LABEL_16:
  sub_1002C71A8(v13, v17);
  v18 = v49;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "setInteractions:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = objc_msgSend(v1, "navigationItem");
  v21 = objc_msgSend(v20, "_largeTitleAccessoryView");

  if (!v21)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v21, "addInteraction:", v22);

  v23 = objc_msgSend(v1, "navigationItem");
  v48 = objc_msgSend(v23, "_largeTitleAccessoryView");

  if (v48)
  {
    objc_msgSend(v48, "setShowsLargeContentViewer:", 1);

    goto LABEL_20;
  }
LABEL_93:
  __break(1u);
}

id sub_1002AF0B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id result;
  void (*v26)(char *, _QWORD, uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjCClassFromMetadata;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  Class isa;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  NSString v63;
  id v64;
  uint64_t v65;
  NSString v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;

  v1 = type metadata accessor for Locale(0);
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v78 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v80 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v78 - v12;
  v14 = type metadata accessor for UIButton.Configuration(0, v11);
  v85 = *(_QWORD *)(v14 - 8);
  v86 = v14;
  __chkstk_darwin(v14);
  v84 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v87 = (char *)&v78 - v17;
  v18 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(v0, "traitCollection", v20);
  v24 = objc_msgSend(v23, "horizontalSizeClass");

  result = 0;
  if (v24 != (id)2)
    return result;
  v26 = *(void (**)(char *, _QWORD, uint64_t))(v19 + 104);
  v26(v22, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v18);
  v27 = isFeatureEnabled(_:)(v22);
  v28 = *(void (**)(char *, uint64_t))(v19 + 8);
  v28(v22, v18);
  if ((v27 & 1) == 0)
  {
    v26(v22, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v18);
    v29 = isFeatureEnabled(_:)(v22);
    v28(v22, v18);
    if ((v29 & 1) == 0)
      return 0;
  }
  v30 = objc_msgSend(v0, "collectionID");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultAll);
  v36 = v34;
  if (v31 != v35 || v33 != v34)
  {
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v36);
    if ((v37 & 1) != 0)
      goto LABEL_8;
    return 0;
  }
  swift_bridgeObjectRelease_n(v33, 2);
LABEL_8:
  v38 = v0;
  v39 = objc_msgSend(v0, "_collectionBackingButton");

  if (!v39)
  {
    static UIButton.Configuration.plain()();
    v40 = String.LocalizationValue.init(stringLiteral:)(0x697463656C6C6F43, 0xEB00000000736E6FLL);
    static Locale.current.getter(v40);
    v79 = v0;
    v42 = v80;
    v41 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v9, v13, v81);
    v43 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v43);
    v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v47 = v82;
    v46 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v3, v6, v83);
    v48 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v45, v3, "Collections control title", 25, 2);
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v46);
    v51 = *(void (**)(char *, uint64_t))(v42 + 8);
    v38 = v79;
    v51(v13, v41);
    v52 = v87;
    UIButton.Configuration.title.setter(v48, v50);
    v53 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v54 = swift_allocObject(v53, 40, 7);
    *(_OWORD *)(v54 + 16) = xmmword_1007118F0;
    v55 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    *(_QWORD *)(v54 + 32) = v55;
    v88 = v54;
    specialized Array._endMutation()(v55);
    v56 = v88;
    sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v56);
    v58 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v59 = objc_msgSend(v58, "configurationWithPaletteColors:", isa);

    v60 = objc_msgSend(v58, "configurationWithScale:", 1);
    v61 = objc_msgSend(v59, "configurationByApplyingConfiguration:", v60);

    v62 = v61;
    v63 = String._bridgeToObjectiveC()();
    v64 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v63, v62);

    UIButton.Configuration.image.setter(v64);
    v65 = UIButton.Configuration.imagePlacement.setter(8);
    UIButton.Configuration.imagePadding.setter(v65, 4.0);
    sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
    v66 = String._bridgeToObjectiveC()();
    v67 = swift_allocObject(&unk_1008F9968, 24, 7);
    swift_unknownObjectWeakInit(v67 + 16, v38);
    v68 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, v66, 0, 0, 0, 0, sub_1002B2E28, v67);
    sub_100009E04(0, qword_1009D7740, UIButton_ptr);
    v70 = v84;
    v69 = v85;
    v71 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v52, v86);
    v72 = v68;
    v73 = (void *)UIButton.init(configuration:primaryAction:)(v70, v68);
    objc_msgSend(v38, "set_collectionBackingButton:", v73);

    v74 = objc_msgSend(v38, "_collectionBackingButton");
    if (v74)
    {
      v75 = v74;
      objc_msgSend(v74, "setTag:", 1);

    }
    v76 = objc_msgSend(v38, "_collectionBackingButton");
    if (v76)
    {
      v77 = v76;
      objc_msgSend(v76, "setEnabled:", objc_msgSend(v38, "isEditing") ^ 1);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v87, v71);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v87, v71);

    }
  }
  return objc_msgSend(v38, "_collectionBackingButton");
}

Swift::Void __swiftcall BKLibraryBookshelfCollectionViewController.updateBarButtonsAnimated(_:)(Swift::Bool a1)
{
  void *v1;

  if (objc_msgSend(v1, "isEditing"))
    sub_1002ADAA8(a1);
  else
    sub_1002ADCF8(a1);
  sub_1002AEAB8();
}

id sub_1002AF898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  NSString v26;
  id v27;
  id v28;
  char **v29;
  uint64_t v30;
  id v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  objc_class *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unsigned int v43;
  id v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  id v71;
  _BOOL8 v72;
  uint64_t v73;
  uint64_t v74;
  UIMenuElementSize v75;
  UIMenuElementSize v76;
  __n128 v77;
  UIMenuElementSize v78;
  Swift::String v79;
  objc_class *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  id v84;
  unsigned int v85;
  char **v86;
  id result;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  double v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _BOOL8 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  objc_class *v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  void *v120;
  __n128 v121;
  UIMenuElementSize v122;
  Swift::String v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  id v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  id v136;
  char *v137;
  uint64_t v138;
  void *v139;
  void (*v140)(char *, uint64_t);
  NSString v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  UIMenuElementSize v154;
  Swift::String v155;
  objc_class *v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __n128 v163;
  uint64_t v164;
  void *v165;
  Class isa;
  id v167;
  uint64_t v168;
  uint64_t v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  __n128 v173;
  Swift::OpaquePointer v174;
  Swift::OpaquePointer v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  objc_class *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  char *v190;
  void (*v191)(char *, uint64_t);
  uint64_t v192;
  void (*v193)(char *, char *, uint64_t);
  void (*v194)(char *, uint64_t);
  void (*v195)(char *, char *, uint64_t);
  id v196;
  uint64_t v197;
  UIMenuElementSize v198;
  uint64_t v199;
  unint64_t v200;
  UIImage_optional v201;
  UIImage_optional v202;
  UIImage_optional v203;
  UIImage_optional v204;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v176 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v176 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v176 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v176 - v12;
  v200 = (unint64_t)_swiftEmptyArrayStorage;
  v181 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v14 = swift_allocObject(v181, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1007118F0;
  v15 = String.LocalizationValue.init(stringLiteral:)(0x7463656C6553, 0xE600000000000000);
  static Locale.current.getter(v15);
  v193 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v193(v10, v13, v7);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v196 = (id)objc_opt_self(NSBundle);
  v192 = ObjCClassFromMetadata;
  v18 = objc_msgSend(v196, "bundleForClass:", ObjCClassFromMetadata);
  v195 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v195(v3, v6, v0);
  v182 = v10;
  v19 = v10;
  v20 = v190;
  v184 = v3;
  v21 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v18, v3, "Library -> (...) -> 'Select' for entering edit mode", 51, 2);
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  v185 = v6;
  v186 = v0;
  v194 = v24;
  v24(v6, v0);
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v183 = v13;
  v189 = v7;
  v191 = v25;
  v25(v13, v7);
  v26 = String._bridgeToObjectiveC()();
  v188 = (id)objc_opt_self(UIImage);
  v27 = objc_msgSend(v188, "systemImageNamed:", v26);

  v28 = objc_msgSend(v20, "layout");
  v29 = &selRef_dismissReadingListPopover;
  LOBYTE(v7) = objc_msgSend(v28, "hasSomeBooks");

  v30 = 0;
  if ((v7 & 1) == 0)
  {
    v31 = objc_msgSend(v20, "layout");
    v32 = objc_msgSend(v31, "editableCollection");

    v30 = v32 ^ 1;
  }
  v33 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v34 = sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
  v35 = swift_allocObject(&unk_1008F9968, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, v20);
  v197 = v34;
  v36 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, v27, 0, 0, 0, 0, v30, 0, sub_1002B2DAC, v35);
  *(_QWORD *)(v14 + 32) = v36;
  v198 = v14;
  specialized Array._endMutation()(v36);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v201.value.super.isa = 0;
  v201.is_nil = 0;
  v187 = v33;
  v38 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v201, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v198, v174).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v40 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v39 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v40 >= v39 >> 1)
    goto LABEL_28;
  while (1)
  {
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
    specialized Array._endMutation()(v41);
    v42 = objc_msgSend(v20, "layout");
    v43 = objc_msgSend(v42, v29[433]);

    v180 = v38;
    if (!v43)
      goto LABEL_45;
    v44 = objc_msgSend(v20, "dataSourceAdaptor");
    v45 = objc_msgSend(v44, "supplementaryDataSource");

    if (objc_msgSend(v45, "canChangeViewMode"))
    {
      v178 = v45;
      v46 = objc_msgSend(v20, "layout");
      v47 = objc_msgSend(v46, "viewMode");

      v179 = swift_allocObject(v181, 48, 7);
      *(_OWORD *)(v179 + 16) = xmmword_1007118C0;
      v48 = v183;
      v49 = String.LocalizationValue.init(stringLiteral:)(1684632135, 0xE400000000000000);
      v50 = v185;
      static Locale.current.getter(v49);
      v51 = v182;
      v52 = v189;
      v193(v182, v48, v189);
      v53 = objc_msgSend(v196, "bundleForClass:", v192);
      v54 = v184;
      v55 = v186;
      v195(v184, v50, v186);
      v56 = String.init(localized:table:bundle:locale:comment:)(v51, 0, 0, v53, v54, "Library -> (...) -> Grid View Mode", 34, 2);
      v177 = v57;
      v194(v50, v55);
      v191(v48, v52);
      v58 = String._bridgeToObjectiveC()();
      v59 = objc_msgSend(v188, "systemImageNamed:", v58);

      v60 = v47;
      v61 = swift_allocObject(&unk_1008F9968, 24, 7);
      swift_unknownObjectWeakInit(v61 + 16, v190);
      v62 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v56, v177, 0, 0, v59, 0, 0, 0, 0, 0, v47 == (id)1, sub_1002B2DE8, v61);
      *(_QWORD *)(v179 + 32) = v62;
      v63 = String.LocalizationValue.init(stringLiteral:)(1953720652, 0xE400000000000000);
      static Locale.current.getter(v63);
      v64 = v189;
      v193(v51, v48, v189);
      v65 = objc_msgSend(v196, "bundleForClass:", v192);
      v195(v54, v50, v55);
      v66 = v51;
      v20 = v190;
      v67 = String.init(localized:table:bundle:locale:comment:)(v66, 0, 0, v65, v54, "Library -> (...) -> List View Mode", 34, 2);
      v69 = v68;
      v194(v50, v55);
      v191(v48, v64);
      v70 = String._bridgeToObjectiveC()();
      v71 = objc_msgSend(v188, "systemImageNamed:", v70);

      v72 = v60 == (id)2;
      v73 = swift_allocObject(&unk_1008F9968, 24, 7);
      swift_unknownObjectWeakInit(v73 + 16, v20);
      v74 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v67, v69, 0, 0, v71, 0, 0, 0, 0, 0, v72, sub_1002B2E08, v73);
      v75 = v179;
      *(_QWORD *)(v179 + 40) = v74;
      v198 = v75;
      specialized Array._endMutation()(v74);
      v76 = v198;
      if ((unint64_t)v198 >> 62)
      {
        if (v198 < UIMenuElementSizeSmall)
          v113 = v198;
        else
          v113 = v198 & 0xFFFFFFFFFFFFFF8;
        v114 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
        v115 = swift_bridgeObjectRetain(v76);
        v78 = _bridgeCocoaArray<A>(_:)(v113, v114, v115);
        swift_bridgeObjectRelease(v76);
      }
      else
      {
        v77 = swift_bridgeObjectRetain(v198);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v77);
        sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
        v78 = v76;
      }
      swift_bridgeObjectRelease(v76);
      v79._countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      v202.value.super.isa = 0;
      v202.is_nil = 0;
      v80 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v79, (Swift::String_optional)0, v202, (UIMenuIdentifier_optional)33, 0xFFFFFFFFFFFFFFFFLL, v78, v175).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v80);
      v82 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v81 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v45 = v178;
      if (v82 >= v81 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1);
      v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v80);
      specialized Array._endMutation()(v83);

    }
    v84 = objc_msgSend(v20, "layout");
    v85 = objc_msgSend(v84, "wantsSortControl");

    if (!v85)
      break;
    v86 = &selRef__mediaLibraryDidChange_;
    result = objc_msgSend(v45, "sortByLabelText");
    if (!result)
      goto LABEL_63;
    v88 = result;
    v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v91 = v90;

    v198 = v89;
    v199 = v91;
    v92 = sub_1001F15BC();
    LOBYTE(v88) = Collection.isNotEmpty.getter(&type metadata for String, v92);
    *(_QWORD *)&v93 = swift_bridgeObjectRelease(v91).n128_u64[0];
    if ((v88 & 1) == 0)
      break;
    v190 = (char *)objc_msgSend(v45, "sortMode", v93);
    result = objc_msgSend(v45, "sortControlConfig");
    if (!result)
      goto LABEL_64;
    v94 = result;
    v95 = sub_100009E04(0, (unint64_t *)&unk_1009D7720, &off_1008E5300);
    v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v94, v95);

    if ((unint64_t)v40 >> 62)
    {
      if (v40 < 0)
        v116 = v40;
      else
        v116 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v40);
      v96 = _CocoaArrayWrapper.endIndex.getter(v116);
      swift_bridgeObjectRelease(v40);
      if (!v96)
      {
LABEL_37:
        *(_QWORD *)&v111 = swift_bridgeObjectRelease(v40).n128_u64[0];
        v110 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_38:
        result = objc_msgSend(v45, v86[414], v111);
        if (result)
        {
          v117 = result;
          v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
          v120 = v119;

          if ((unint64_t)v110 >> 62)
          {
            if (v110 < 0)
              v171 = v110;
            else
              v171 = v110 & 0xFFFFFFFFFFFFFF8;
            v172 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
            v173 = swift_bridgeObjectRetain(v110);
            v122 = _bridgeCocoaArray<A>(_:)(v171, v172, v173);
            swift_bridgeObjectRelease(v110);
          }
          else
          {
            v121 = swift_bridgeObjectRetain(v110);
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v121);
            sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
            v122 = v110;
          }
          swift_bridgeObjectRelease(v110);
          v123._countAndFlagsBits = v118;
          v123._object = v120;
          v203.value.super.isa = 0;
          v203.is_nil = 0;
          v112 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v123, (Swift::String_optional)0, v203, (UIMenuIdentifier_optional)33, 0xFFFFFFFFFFFFFFFFLL, v122, v175).super.super.isa;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
          v125 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v124 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v125 >= v124 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v124 > 1, v125 + 1, 1);
          v126 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v125, v112);
          specialized Array._endMutation()(v126);

          goto LABEL_44;
        }
LABEL_65:
        __break(1u);
        return result;
      }
    }
    else
    {
      v96 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v96)
        goto LABEL_37;
    }
    v178 = v45;
    v29 = (char **)v20;
    v198 = (UIMenuElementSize)_swiftEmptyArrayStorage;
    result = (id)specialized ContiguousArray.reserveCapacity(_:)(v96);
    if (v96 < 0)
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    v97 = 0;
    v38 = (objc_class *)(v40 & 0xC000000000000001);
    while (v96 != v97)
    {
      if (v38)
        v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v97, v40);
      else
        v98 = *(id *)(v40 + 8 * v97 + 32);
      v99 = v98;
      result = objc_msgSend(v98, "title");
      if (!result)
        goto LABEL_62;
      v100 = result;
      ++v97;
      v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v103 = v102;

      v104 = (char *)objc_msgSend(v99, "sortMode");
      v105 = v190 == v104;
      v20 = (char *)swift_allocObject(&unk_1008F9968, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16, v29);
      v106 = swift_allocObject(&unk_1008F9A08, 32, 7);
      *(_QWORD *)(v106 + 16) = v20;
      *(_QWORD *)(v106 + 24) = v99;
      v107 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v101, v103, 0, 0, 0, 0, 0, 0, 0, 0, v105, sub_1002B2DE0, v106);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v107);
      v108 = *(_QWORD *)(v198 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v108);
      v109 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v108, v107);
      specialized ContiguousArray._endMutation()(v109);
      if (v96 == v97)
      {
        v110 = v198;
        *(_QWORD *)&v111 = swift_bridgeObjectRelease(v40).n128_u64[0];
        v45 = v178;
        v86 = &selRef__mediaLibraryDidChange_;
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_28:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
  }
  v112 = (objc_class *)v45;
LABEL_44:

LABEL_45:
  v127 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  LODWORD(v177) = objc_msgSend(v127, "BKFinishedAssetRemovalEnabledKey");

  v128 = v183;
  v129 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000013, 0x80000001007BC090);
  v130 = v185;
  static Locale.current.getter(v129);
  v131 = v182;
  v132 = v189;
  v133 = v193;
  v193(v182, v128, v189);
  v134 = v133;
  v135 = v192;
  v136 = objc_msgSend(v196, "bundleForClass:", v192);
  v137 = v184;
  v138 = v186;
  v195(v184, v130, v186);
  v179 = String.init(localized:table:bundle:locale:comment:)(v131, 0, 0, v136, v137, "Library -> (...) -> Remove Finished", 35, 2);
  v178 = v139;
  v194(v130, v138);
  v140 = v191;
  v191(v128, v132);
  v141 = String._bridgeToObjectiveC()();
  v188 = objc_msgSend(v188, "systemImageNamed:", v141);

  v190 = (char *)swift_allocObject(v181, 48, 7);
  *((_OWORD *)v190 + 1) = xmmword_1007118C0;
  v142 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001007BC0E0);
  static Locale.current.getter(v142);
  v134(v131, v128, v132);
  v143 = objc_msgSend(v196, "bundleForClass:", v135);
  v195(v137, v130, v138);
  v144 = String.init(localized:table:bundle:locale:comment:)(v131, 0, 0, v143, v137, "Library -> (...) -> Remove Finished -> Automatically When Finished", 66, 2);
  v146 = v145;
  v194(v130, v138);
  v140(v128, v132);
  LODWORD(v134) = v177;
  v147 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v144, v146, 0, 0, 0, 0, 0, 0, 0, 0, v177, sub_1002B0D24, 0);
  *((_QWORD *)v190 + 4) = v147;
  v148 = String.LocalizationValue.init(stringLiteral:)(0x796C6C61756E614DLL, 0xE800000000000000);
  static Locale.current.getter(v148);
  v193(v131, v128, v132);
  v149 = objc_msgSend(v196, "bundleForClass:", v192);
  v195(v137, v130, v138);
  v150 = String.init(localized:table:bundle:locale:comment:)(v131, 0, 0, v149, v137, "Library -> (...) -> Remove Finished -> Manually", 47, 2);
  v152 = v151;
  v194(v130, v138);
  v191(v128, v132);
  v153 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v150, v152, 0, 0, 0, 0, 0, 0, 0, 0, v134 ^ 1, sub_1002B0D2C, 0);
  v154 = (UIMenuElementSize)v190;
  *((_QWORD *)v190 + 5) = v153;
  v198 = v154;
  specialized Array._endMutation()(v153);
  v155._countAndFlagsBits = v179;
  v155._object = v178;
  v204.value.super.isa = (Class)v188;
  v204.is_nil = 0;
  v156 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v155, (Swift::String_optional)0, v204, (UIMenuIdentifier_optional)32, 0xFFFFFFFFFFFFFFFFLL, v198, v175).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v156);
  v158 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v157 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v158 >= v157 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v157 > 1, v158 + 1, 1);
  v159 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v158, v156);
  specialized Array._endMutation()(v159);
  v160 = v200;
  v198 = v200;
  v161 = sub_10004CFD4(&qword_1009D7710);
  v162 = sub_10029F8CC(&qword_1009D7718, &qword_1009D7710);
  if ((Collection.isNotEmpty.getter(v161, v162) & 1) != 0)
  {
    if ((unint64_t)v160 >> 62)
    {
      if (v160 < 0)
        v168 = v160;
      else
        v168 = v160 & 0xFFFFFFFFFFFFFF8;
      v169 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
      v170 = swift_bridgeObjectRetain(v160);
      v164 = _bridgeCocoaArray<A>(_:)(v168, v169, v170);
      swift_bridgeObjectRelease(v160);
    }
    else
    {
      v163 = swift_bridgeObjectRetain(v160);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v163);
      sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
      v164 = v160;
    }
    swift_bridgeObjectRelease(v160);
    v165 = (void *)objc_opt_self(UIMenu);
    sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v167 = objc_msgSend(v165, "bk_menuWithChildren:", isa, swift_bridgeObjectRelease(v164).n128_f64[0]);

  }
  else
  {

    swift_bridgeObjectRelease(v160);
    return 0;
  }
  return v167;
}

void sub_1002B0B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "editButtonPressed:", 0);

  }
}

void sub_1002B0BCC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "dataSourceAdaptor");

    v8 = objc_msgSend(v7, "actionHandler");
    objc_msgSend(v8, *a3);

  }
}

void sub_1002B0C6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "dataSourceAdaptor");

    v8 = objc_msgSend(v7, "actionHandler");
    objc_msgSend(v8, "changeSortModeTo:", objc_msgSend(a3, "sortMode"));

  }
}

void sub_1002B0D24(uint64_t a1)
{
  sub_1002B0D34(a1, 1);
}

void sub_1002B0D2C(uint64_t a1)
{
  sub_1002B0D34(a1, 0);
}

void sub_1002B0D34(uint64_t a1, char a2)
{
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  objc_msgSend(v3, "setBKFinishedAssetRemovalEnabledKey:", a2 & 1);

}

void sub_1002B0D90()
{
  void *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  v1 = sub_1002B101C();
  if (v1)
  {
    oslog = v1;
    objc_msgSend(v0, "presentReadingListsPopoverFromItem:");
  }
  else
  {
    if (qword_1009CDDD0 != -1)
      swift_once(&qword_1009CDDD0, sub_1002ACC3C);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100048F64(v2, (uint64_t)qword_1009D7670);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "No Collections Button Found", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }
  }

}

void sub_1002B0E80(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_1002B0ED4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *v8;

  v1 = objc_msgSend(v0, "navigationItem");
  v8 = objc_msgSend(v1, "_largeTitleAccessoryView");

  if (v8)
  {
    v2 = objc_opt_self(UIButton);
    v3 = swift_dynamicCastObjCClass(v8, v2);
    if (v3)
    {
      objc_msgSend(v0, "presentReadingListsPopoverFromItem:", v3);
      goto LABEL_9;
    }

  }
  if (qword_1009CDDD0 != -1)
    swift_once(&qword_1009CDDD0, sub_1002ACC3C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048F64(v4, (uint64_t)qword_1009D7670);
  v8 = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v6, "No Collections Button Found", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
LABEL_9:

}

void *sub_1002B101C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = objc_msgSend(v0, "navigationItem");
  v2 = objc_msgSend(v1, "rightBarButtonItems");

  if (v2)
  {
    v3 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    if ((unint64_t)v4 >> 62)
      goto LABEL_16;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v11))
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4)
           : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        if (objc_msgSend(v7, "tag") == (id)2)
        {
          swift_bridgeObjectRelease_n(v4, 2);
          return v8;
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      if (v4 < 0)
        v11 = v4;
      else
        v11 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
    }
LABEL_11:
    swift_bridgeObjectRelease_n(v4, 2);
  }
  return 0;
}

