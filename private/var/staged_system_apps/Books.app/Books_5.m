uint64_t sub_1003BB478(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t (*a9)(_QWORD))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  __n128 v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  void (*v52)(char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[24];

  v53 = a7;
  v54 = a6;
  v55 = a1;
  v14 = sub_10004CFD4(a8);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Logger(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v49 - v22;
  a3 += 16;
  swift_beginAccess(a3, v58, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong && (v25 = *(_QWORD *)(Strong + 128), swift_release(Strong), v25 == a4))
  {
    v52 = a5;
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v26 = a9;
    Logger.init(_:)((id)qword_100A1ECD8);
    v27 = swift_bridgeObjectRetain_n(a2, 2);
    v28 = Logger.logObject.getter(v27);
    v32 = static os_log_type_t.debug.getter(v28, v29, v30, v31);
    if (os_log_type_enabled(v28, v32))
    {
      v33 = swift_slowAlloc(12, -1);
      v50 = v17;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc(32, -1);
      v51 = a9;
      v36 = v35;
      v57 = v35;
      *(_DWORD *)v34 = 136315138;
      v49 = v34 + 4;
      swift_bridgeObjectRetain(a2);
      v56 = sub_100040F58(v55, a2, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v49, v34 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v28, v32, "displaySnapshot completed - %s", v34, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      v37 = v36;
      v26 = v51;
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v50);
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    }
    sub_10002CD84(v53, (uint64_t)v16, v26);
    v48 = v26(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v16, 0, 1, v48);
    v52(v16);
    return sub_100010960((uint64_t)v16, a8);
  }
  else
  {
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    Logger.init(_:)((id)qword_100A1ECD8);
    v38 = swift_bridgeObjectRetain_n(a2, 2);
    v39 = Logger.logObject.getter(v38);
    v43 = static os_log_type_t.debug.getter(v39, v40, v41, v42);
    if (os_log_type_enabled(v39, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = swift_slowAlloc(32, -1);
      v57 = v45;
      *(_DWORD *)v44 = 136315138;
      swift_bridgeObjectRetain(a2);
      v56 = sub_100040F58(v55, a2, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v39, v43, "Skipping stale %s from displaySnapshot", v44, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    else
    {

      v47 = swift_bridgeObjectRelease_n(a2, 2);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v47);
    }
  }
}

uint64_t sub_1003BB8F4()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 56, v2, 0, 0);
  return swift_retain(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1003BB928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 56, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;
  return swift_release(v3);
}

uint64_t (*sub_1003BB96C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 56, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1003BB9B8()
{
  uint64_t *v0;

  return sub_10035EC00(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003BB9D4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BB9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void **v63;
  uint64_t v64;
  void **aBlock;
  _QWORD v66[4];
  uint64_t v67;

  v53 = a2;
  v54 = a3;
  v51 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v60 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v57 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for DispatchTime(0);
  v52 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v55 = (char *)&v50 - v11;
  v12 = _s14descr1008F7311C5StateO7TurningVMa(0);
  v50 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v3;
  v63 = *(void ***)(v3 + 128);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v19 = Logger.init(_:)((id)qword_100A1ECD8);
  v20 = Logger.logObject.getter(v19);
  v24 = static os_log_type_t.debug.getter(v20, v21, v22, v23);
  if (os_log_type_enabled(v20, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v25 = 134217984;
    aBlock = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v66, v25 + 4, v25 + 12);
    _os_log_impl((void *)&_mh_execute_header, v20, v24, "Waiting for displaySnapshot to finish, current stateIndex %ld", v25, 0xCu);
    swift_slowDealloc(v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v26 = swift_allocObject(&unk_100901E40, 24, 7);
  v27 = v56;
  swift_weakInit(v26 + 16, v56);
  sub_10002CD84(v51, (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr1008F7311C5StateO7TurningVMa);
  v28 = *(unsigned __int8 *)(v50 + 80);
  v29 = (v28 + 48) & ~v28;
  v30 = (_QWORD *)swift_allocObject(&unk_100901E68, v29 + v13, v28 | 7);
  v31 = v63;
  v30[2] = v26;
  v30[3] = v31;
  v32 = v54;
  v30[4] = v53;
  v30[5] = v32;
  sub_10002C960((uint64_t)v14, (uint64_t)v30 + v29, _s14descr1008F7311C5StateO7TurningVMa);
  sub_100059BB4();
  swift_retain(v32);
  v34 = (void *)static OS_dispatch_queue.main.getter(v33);
  static DispatchTime.now()(v34);
  v35 = v55;
  + infix(_:_:)(v9, 0.5);
  v63 = *(void ***)(v52 + 8);
  ((void (*)(char *, uint64_t))v63)(v9, v64);
  v36 = swift_allocObject(&unk_100901E90, 32, 7);
  *(_QWORD *)(v36 + 16) = sub_1003BD7E0;
  *(_QWORD *)(v36 + 24) = v30;
  v66[3] = sub_1003BD818;
  v67 = v36;
  aBlock = _NSConcreteStackBlock;
  v66[0] = 1107296256;
  v66[1] = sub_1000147F0;
  v66[2] = &unk_100901EA8;
  v37 = _Block_copy(&aBlock);
  v38 = v67;
  swift_retain(v30);
  swift_release(v38);
  v39 = v57;
  static DispatchQoS.unspecified.getter(v40);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v41 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v43 = sub_100065324();
  v44 = v60;
  v45 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v42, v43, v62, v41);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v35, v39, v44, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
  ((void (*)(char *, uint64_t))v63)(v35, v64);
  v46 = swift_allocObject(&unk_100901EE0, 32, 7);
  *(_QWORD *)(v46 + 16) = sub_1003BD7E0;
  *(_QWORD *)(v46 + 24) = v30;
  v48 = *(_QWORD *)(v27 + 88);
  v47 = *(_QWORD *)(v27 + 96);
  *(_QWORD *)(v27 + 88) = sub_1003BD84C;
  *(_QWORD *)(v27 + 96) = v46;
  return sub_10002AD00(v48, v47);
}

uint64_t sub_1003BBEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void **v63;
  uint64_t v64;
  void **aBlock;
  _QWORD v66[4];
  uint64_t v67;

  v53 = a2;
  v54 = a3;
  v51 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v60 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v57 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for DispatchTime(0);
  v52 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v55 = (char *)&v50 - v11;
  v12 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  v50 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v3;
  v63 = *(void ***)(v3 + 128);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v19 = Logger.init(_:)((id)qword_100A1ECD8);
  v20 = Logger.logObject.getter(v19);
  v24 = static os_log_type_t.debug.getter(v20, v21, v22, v23);
  if (os_log_type_enabled(v20, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v25 = 134217984;
    aBlock = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v66, v25 + 4, v25 + 12);
    _os_log_impl((void *)&_mh_execute_header, v20, v24, "Waiting for displaySnapshot to finish, current stateIndex %ld", v25, 0xCu);
    swift_slowDealloc(v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v26 = swift_allocObject(&unk_100901E40, 24, 7);
  v27 = v56;
  swift_weakInit(v26 + 16, v56);
  sub_10002CD84(v51, (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr1008F7311C5StateO8DraggingVMa);
  v28 = *(unsigned __int8 *)(v50 + 80);
  v29 = (v28 + 48) & ~v28;
  v30 = (_QWORD *)swift_allocObject(&unk_100901F58, v29 + v13, v28 | 7);
  v31 = v63;
  v30[2] = v26;
  v30[3] = v31;
  v32 = v54;
  v30[4] = v53;
  v30[5] = v32;
  sub_10002C960((uint64_t)v14, (uint64_t)v30 + v29, _s14descr1008F7311C5StateO8DraggingVMa);
  sub_100059BB4();
  swift_retain(v32);
  v34 = (void *)static OS_dispatch_queue.main.getter(v33);
  static DispatchTime.now()(v34);
  v35 = v55;
  + infix(_:_:)(v9, 0.5);
  v63 = *(void ***)(v52 + 8);
  ((void (*)(char *, uint64_t))v63)(v9, v64);
  v36 = swift_allocObject(&unk_100901F80, 32, 7);
  *(_QWORD *)(v36 + 16) = sub_1003BDA1C;
  *(_QWORD *)(v36 + 24) = v30;
  v66[3] = sub_1003BDE00;
  v67 = v36;
  aBlock = _NSConcreteStackBlock;
  v66[0] = 1107296256;
  v66[1] = sub_1000147F0;
  v66[2] = &unk_100901F98;
  v37 = _Block_copy(&aBlock);
  v38 = v67;
  swift_retain(v30);
  swift_release(v38);
  v39 = v57;
  static DispatchQoS.unspecified.getter(v40);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v41 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v43 = sub_100065324();
  v44 = v60;
  v45 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v42, v43, v62, v41);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v35, v39, v44, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
  ((void (*)(char *, uint64_t))v63)(v35, v64);
  v46 = swift_allocObject(&unk_100901FD0, 32, 7);
  *(_QWORD *)(v46 + 16) = sub_1003BDA1C;
  *(_QWORD *)(v46 + 24) = v30;
  v48 = *(_QWORD *)(v27 + 88);
  v47 = *(_QWORD *)(v27 + 96);
  *(_QWORD *)(v27 + 88) = sub_1003BDE04;
  *(_QWORD *)(v27 + 96) = v46;
  return sub_10002AD00(v48, v47);
}

void sub_1003BC398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  double v54;
  double v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  uint8_t *v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  void **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void **aBlock;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  uint64_t (*v100)();
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v84 = a1;
  *(_QWORD *)&v90 = type metadata accessor for Logger(0);
  v83 = *(void ***)(v90 - 8);
  __chkstk_darwin(v90);
  v82 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for DispatchWorkItemFlags(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v87 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for DispatchQoS(0);
  v85 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v93 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v91 = (char *)&v78 - v16;
  v92 = a2;
  v17 = *(void ***)(a2 + 48);
  KeyPath = swift_getKeyPath(&unk_10071FEF8);
  aBlock = v17;
  v19 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  v89 = a3;
  swift_retain(a3);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&aBlock, KeyPath, v19);
  swift_release(KeyPath);
  v20 = PageTurnStyle.rawValue.getter(*((unsigned __int8 *)v17 + 80));
  v22 = v21;
  v24 = PageTurnStyle.rawValue.getter(0);
  v25 = v23;
  if (v20 == v24 && v22 == v23)
  {
    swift_bridgeObjectRelease_n(v22, 2);
LABEL_5:
    v83 = v17;
    sub_10035FCAC(2);
    v27 = v92;
    v28 = *(_QWORD *)(v92 + 128);
    v80 = sub_100059BB4();
    v79 = static OS_dispatch_queue.main.getter(v80);
    static DispatchTime.now()(v79);
    v29 = v91;
    + infix(_:_:)(v14, 0.1);
    v30 = *(void (**)(char *, uint64_t))(v12 + 8);
    v30(v14, v95);
    v31 = swift_allocObject(&unk_100901E40, 24, 7);
    swift_weakInit(v31 + 16, v27);
    v90 = *(_OWORD *)(v27 + 16);
    sub_10002CD84(v84, (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), _s14descr1008F7311C5StateO9ResettingVMa);
    v32 = *(unsigned __int8 *)(v9 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = (v10 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = swift_allocObject(&unk_100901FF8, v34 + 16, v32 | 7);
    *(_QWORD *)(v35 + 16) = v31;
    *(_QWORD *)(v35 + 24) = v28;
    v84 = v28;
    sub_10002C960((uint64_t)v11, v35 + v33, _s14descr1008F7311C5StateO9ResettingVMa);
    *(_OWORD *)(v35 + v34) = v90;
    v100 = sub_1003BDBD0;
    v101 = (_QWORD *)v35;
    aBlock = _NSConcreteStackBlock;
    v97 = 1107296256;
    v98 = sub_1000147F0;
    v99 = &unk_100902010;
    v36 = _Block_copy(&aBlock);
    v37 = v101;
    swift_unknownObjectRetain(v90);
    swift_release(v37);
    v38 = v93;
    static DispatchQoS.unspecified.getter(v39);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v40 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v41 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v42 = sub_100065324();
    v43 = v87;
    v82 = (char *)v41;
    v81 = v42;
    v44 = v88;
    *(_QWORD *)&v90 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v41, v42, v88, v40);
    v45 = (void *)v79;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v29, v38, v43, v36);
    _Block_release(v36);

    v86 = *(_QWORD *)(v86 + 8);
    ((void (*)(char *, uint64_t))v86)(v43, v44);
    v85 = *(_QWORD *)(v85 + 8);
    ((void (*)(char *, uint64_t))v85)(v38, v94);
    v46 = ((uint64_t (*)(char *, uint64_t))v30)(v29, v95);
    v47 = (void *)static OS_dispatch_queue.main.getter(v46);
    static DispatchTime.now()(v47);
    if (qword_1009CE198 != -1)
      swift_once(&qword_1009CE198, sub_100361264);
    v48 = *(double *)&qword_1009DCDE0;
    if (qword_1009CE1A0 != -1)
      swift_once(&qword_1009CE1A0, sub_100361274);
    v49 = *(double *)&qword_1009DCDE8;
    if (qword_1009CE1A8 != -1)
      swift_once(&qword_1009CE1A8, sub_100361288);
    v50 = *(double *)&qword_1009DCDF0;
    sub_10035FF1C();
    v52 = v51;
    v53 = objc_msgSend(objc_allocWithZone((Class)CASpringAnimation), "init");
    objc_msgSend(v53, "setMass:", v48);
    objc_msgSend(v53, "setStiffness:", v49);
    objc_msgSend(v53, "setDamping:", v50);
    objc_msgSend(v53, "setInitialVelocity:", v52);
    objc_msgSend(v53, "settlingDuration");
    v55 = v54;

    v56 = v91;
    + infix(_:_:)(v14, v55);
    v57 = v14;
    v58 = v95;
    v59 = v30;
    v30(v57, v95);
    v60 = swift_allocObject(&unk_100901E40, 24, 7);
    swift_weakInit(v60 + 16, v92);
    v61 = (_QWORD *)swift_allocObject(&unk_100902048, 48, 7);
    v62 = v84;
    v61[2] = v60;
    v61[3] = v62;
    v63 = v89;
    v61[4] = sub_1003BDAF4;
    v61[5] = v63;
    v100 = sub_1003BDC48;
    v101 = v61;
    aBlock = _NSConcreteStackBlock;
    v97 = 1107296256;
    v98 = sub_1000147F0;
    v99 = &unk_100902060;
    v64 = _Block_copy(&aBlock);
    v65 = v101;
    swift_retain(v63);
    swift_release(v65);
    v66 = v93;
    static DispatchQoS.unspecified.getter(v67);
    aBlock = (void **)_swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v82, v81, v44, v90);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v56, v66, v43, v64);
    _Block_release(v64);

    ((void (*)(char *, uint64_t))v86)(v43, v44);
    ((void (*)(char *, uint64_t))v85)(v66, v94);
    v59(v56, v58);
    goto LABEL_17;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v23, 0);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
    goto LABEL_5;
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v68 = (id)qword_100A1ECD8;
  v69 = v82;
  v70 = Logger.init(_:)(v68);
  v71 = Logger.logObject.getter(v70);
  v75 = static os_log_type_t.debug.getter(v71, v72, v73, v74);
  if (os_log_type_enabled(v71, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = (void **)swift_slowAlloc(32, -1);
    aBlock = v77;
    *(_DWORD *)v76 = 136315138;
    v102 = sub_100040F58(0x3A5F287465736572, 0xEB00000000293A5FLL, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v76 + 4, v76 + 12);
    _os_log_impl((void *)&_mh_execute_header, v71, v75, "%s - slide disabled", v76, 0xCu);
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v76, -1, -1);
  }

  ((void (*)(char *, _QWORD))v83[1])(v69, v90);
  v63 = v89;
  sub_1003BAC30(v89);
LABEL_17:
  swift_release(v63);
}

double sub_1003BCCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a1;
  v5 = sub_10004CFD4(&qword_1009D55C8);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - v12;
  v14 = *(_QWORD *)(a2 + 48);
  KeyPath = swift_getKeyPath(&unk_10071FEF8);
  v45 = v14;
  v16 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  swift_retain(a3);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v45, KeyPath, v16);
  swift_release(KeyPath);
  v17 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v14 + 80));
  v19 = v18;
  v20 = PageTurnStyle.rawValue.getter(0);
  if (v17 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n(v19, 2);
  }
  else
  {
    v23 = v21;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) == 0)
    {
      if (qword_1009CE8D0 != -1)
        swift_once(&qword_1009CE8D0, sub_1005A9688);
      v25 = Logger.init(_:)((id)qword_100A1ECD8);
      v26 = Logger.logObject.getter(v25);
      v30 = static os_log_type_t.debug.getter(v26, v27, v28, v29);
      if (os_log_type_enabled(v26, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = swift_slowAlloc(32, -1);
        v45 = v32;
        *(_DWORD *)v31 = 136315138;
        v44 = sub_100040F58(0xD000000000000022, 0x80000001007C57D0, &v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v31 + 4, v31 + 12);
        _os_log_impl((void *)&_mh_execute_header, v26, v30, "%s - slide disabled", v31, 0xCu);
        swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v42);
      sub_10002CD84(v43, (uint64_t)v7, _s14descr1008F7311C5StateO8DraggingVMa);
      v33 = _s14descr1008F7311C5StateO8DraggingVMa(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v7, 0, 1, v33);
      sub_1003B8DD8((uint64_t)v7, a3, &qword_1009D55C8, (uint64_t (*)(_QWORD, double))_s14descr1008F7311C5StateO8DraggingVMa, 5u);
      sub_100010960((uint64_t)v7, &qword_1009D55C8);
      goto LABEL_19;
    }
  }
  if (*(_QWORD *)(v43 + *(int *)(_s14descr1008F7311C5StateO8DraggingVMa(0) + 32)))
  {
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v34 = Logger.init(_:)((id)qword_100A1ECD8);
    v35 = Logger.logObject.getter(v34);
    v39 = static os_log_type_t.debug.getter(v35, v36, v37, v38);
    if (os_log_type_enabled(v35, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v39, "Ignoring DisplayingDragSnapshot change because it's just a translation update", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v42);
  }
  else
  {
    sub_1003BBEC8(v43, (uint64_t)sub_1003BD8E4, a3);
  }
LABEL_19:
  *(_QWORD *)&result = swift_release(a3).n128_u64[0];
  return result;
}

double sub_1003BD108()
{
  uint64_t v0;

  return sub_1003B9178(v0);
}

void sub_1003BD110(uint64_t a1)
{
  uint64_t v1;

  sub_1003B8DD8(a1, v1, &qword_1009DF788, (uint64_t (*)(_QWORD, double))_s14descr1008F7311C5StateO7TurningVMa, 2u);
}

uint64_t sub_1003BD13C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char v21;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009DF788);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10002CD84(a2, (uint64_t)v15, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
    v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v19(v12, v15, v6);
    v20 = *(int *)(v13 + 28);
    v21 = v15[*(int *)(v13 + 24)];
    v19(v9, &v15[v20], v6);
    v22 = a1;
    sub_10002C8F0((uint64_t)v15, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
    v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v23(v18, v12, v6);
    v24 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
    *(_QWORD *)&v18[v24[5]] = v22;
    v18[v24[6]] = v21;
    v23(&v18[v24[7]], v9, v6);
    *(_QWORD *)&v18[v24[8]] = 0;
    *(_QWORD *)&v18[v24[9]] = 0;
    *(_QWORD *)&v18[v24[10]] = 0;
    v25 = _s14descr1008F7311C5StateO7TurningVMa(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 0, 1, v25);
  }
  else
  {
    v26 = _s14descr1008F7311C5StateO7TurningVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 1, 1, v26);
  }
  sub_1003B8DD8((uint64_t)v18, a3, &qword_1009DF788, (uint64_t (*)(_QWORD, double))_s14descr1008F7311C5StateO7TurningVMa, 1u);
  return sub_100010960((uint64_t)v18, &qword_1009DF788);
}

void sub_1003BD374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v16)(_QWORD);
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  id v24;
  id v25;
  double v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;

  v4 = sub_10004CFD4(&qword_1009DF788);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(a1 + *(int *)(v14 + 20));
  sub_10002CD84(a1, (uint64_t)v13, v16);
  v17 = objc_msgSend(v15, "snapshotViewAfterScreenUpdates:", 0, swift_retain(a2).n128_f64[0]);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "superview");
    if (!v19)
      v19 = v18;
    v20 = (void *)objc_opt_self(UITraitCollection);
    v21 = objc_msgSend(v20, "currentTraitCollection");
    objc_msgSend(v21, "displayCornerRadius");
    v23 = v22;

    objc_msgSend(v18, "_setContinuousCornerRadius:", v23);
    v24 = objc_msgSend(v18, "layer");
    objc_msgSend(v24, "setMaskedCorners:", 12);

    v25 = objc_msgSend(v20, "currentTraitCollection");
    objc_msgSend(v25, "displayCornerRadius");
    v27 = v26;

    objc_msgSend(v19, "_setContinuousCornerRadius:", v27);
    v28 = objc_msgSend(v19, "layer");
    objc_msgSend(v28, "setMaskedCorners:", 12);

    swift_retain(a2);
    v29 = v18;
    sub_1003BD13C(v18, (uint64_t)v13, a2);

    swift_release(a2);
  }
  else
  {
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v30 = Logger.init(_:)((id)qword_100A1ECD8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Couldn't get origin snapshot", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v34 = _s14descr1008F7311C5StateO7TurningVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 1, 1, v34);
    sub_1003B8DD8((uint64_t)v6, a2, &qword_1009DF788, (uint64_t (*)(_QWORD, double))_s14descr1008F7311C5StateO7TurningVMa, 1u);
    sub_100010960((uint64_t)v6, &qword_1009DF788);
  }
  sub_10002C8F0((uint64_t)v13, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
  swift_release(a2);
}

uint64_t sub_1003BD718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  int *v9;

  v1 = *(_QWORD *)(_s14descr1008F7311C5StateO7TurningVMa(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  v6 = v0 + v3;
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

  v8(v6 + v9[7], v7);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1003BD7E0(uint64_t a1, unint64_t a2)
{
  return sub_1003BDA30(a1, a2, _s14descr1008F7311C5StateO7TurningVMa, &qword_1009DF788);
}

uint64_t sub_1003BD7F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BD818()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 16))(0x74756F656D6974, 0xE700000000000000);
}

uint64_t sub_1003BD84C()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 16))(0x6974656C706D6F63, 0xEA00000000006E6FLL);
}

uint64_t sub_1003BD888()
{
  uint64_t v0;

  return sub_1003BAED0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(__n128))(v0 + 32));
}

uint64_t sub_1003BD89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D51F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003BD8E4(uint64_t a1)
{
  uint64_t v1;

  sub_1003B8DD8(a1, v1, &qword_1009D55C8, (uint64_t (*)(_QWORD, double))_s14descr1008F7311C5StateO8DraggingVMa, 5u);
}

uint64_t sub_1003BD910()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unsigned int EnumCaseMultiPayload;
  uint64_t v11;

  v1 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v0 + v4, v6);

  v8 = v0 + v4 + v1[7];
  v9 = sub_10004CFD4(&qword_1009D51F8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 2)
  {
    v7(v8, v6);
    v11 = v8 + *(int *)(sub_10004CFD4(&qword_1009D5200) + 48);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    v11 = v8;
LABEL_5:
    v7(v11, v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003BDA1C(uint64_t a1, unint64_t a2)
{
  return sub_1003BDA30(a1, a2, _s14descr1008F7311C5StateO8DraggingVMa, &qword_1009D55C8);
}

uint64_t sub_1003BDA30(uint64_t a1, unint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return sub_1003BB478(a1, a2, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(char *))(v4 + 32), *(_QWORD *)(v4 + 40), v4 + ((v9 + 48) & ~v9), a4, a3);
}

uint64_t sub_1003BDAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 16), a2);
  return dispatch thunk of LocationControlling.moveTo(spread:)(v4, ObjectType, v5);
}

double sub_1003BDAF4()
{
  uint64_t v0;

  return sub_1003BAC30(v0);
}

uint64_t sub_1003BDAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  int *v9;

  v1 = *(_QWORD *)(_s14descr1008F7311C5StateO9ResettingVMa(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v3;
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

  v8(v6 + v9[7], v7);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_1003BDBD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(_s14descr1008F7311C5StateO9ResettingVMa(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1003BB090(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *v3, v3[1]);
}

uint64_t sub_1003BDC1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003BDC48()
{
  uint64_t v0;

  return sub_1003BB300(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(__n128))(v0 + 32));
}

uint64_t sub_1003BDC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  int *v9;

  v1 = *(_QWORD *)(_s14descr1008F7311C5StateO7TurningVMa(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v6 = v0 + v3;
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

  v8(v6 + v9[7], v7);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1003BDD24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s14descr1008F7311C5StateO7TurningVMa(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1009DF794);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_1003B870C(a1, v5, v6, v7, v8);
}

void sub_1003BDDB8()
{
  uint64_t v0;

  sub_1003B8AF0(v0);
}

uint64_t sub_1003BDDEC()
{
  return sub_1003BB9B8();
}

uint64_t type metadata accessor for FootnoteModuleFactory()
{
  return objc_opt_self(_TtC5Books21FootnoteModuleFactory);
}

double destroy for ScrubPageView(uint64_t a1)
{
  double result;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 56)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ScrubPageView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain(v11);
  return a1;
}

uint64_t assignWithCopy for ScrubPageView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  sub_1001EAB00((_QWORD *)(a1 + 8), (_QWORD *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for ScrubPageView(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ScrubPageView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubPageView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrubPageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrubPageView()
{
  return &type metadata for ScrubPageView;
}

char *sub_1003BE0E8(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char **v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(char *, char **, uint64_t);
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 2) = v9;
    v10 = v9;
    v11 = **(void (***)(char *, char **, uint64_t))(v9 - 8);
    v12 = v5;
    v11(a1 + 8, v8, v10);
    v13 = a2[7];
    *((_QWORD *)a1 + 6) = a2[6];
    *((_QWORD *)a1 + 7) = v13;
    v14 = *(int *)(a3 + 28);
    v15 = &a1[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = type metadata accessor for Logger(0);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_retain(v13);
    v18(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_1003BE1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1003BE21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = a1 + 8;
  v8 = a2 + 8;
  v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v6;
  v11(v7, v8, v10);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Logger(0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_retain(v13);
  v18(v15, v16, v17);
  return a1;
}

uint64_t sub_1003BE2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  sub_1001EAB00((_QWORD *)(a1 + 8), (_QWORD *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1003BE370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1003BE3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v7);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1003BE488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BE494);
}

uint64_t sub_1003BE494(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1003BE510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BE51C);
}

char *sub_1003BE51C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Logger(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ScrubPageContentView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DF8B8;
  if (!qword_1009DF8B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ScrubPageContentView);
  return result;
}

uint64_t sub_1003BE5CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "(";
  v4[2] = &unk_10071FFD0;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003BE658(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086F1F0, 1);
}

double sub_1003BE668@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  char *v22;
  double result;
  __int128 v24;
  void *v25;
  _QWORD v26[14];
  _QWORD v27[5];

  v3 = type metadata accessor for ScrubPageContentView(0);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)v1;
  sub_10002E418(v1 + 8, (uint64_t)v27);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v24 = *(_OWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 96);
  v10 = *(_QWORD *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 112);
  sub_1003BF224(v1, (uint64_t)&v25);
  *a1 = v6;
  sub_10002E418((uint64_t)v27, (uint64_t)(a1 + 1));
  v12 = v25;
  sub_10002E418((uint64_t)v26, (uint64_t)(v5 + 1));
  v13 = v26[6];
  *v5 = v12;
  v14 = type metadata accessor for PageSnapshotLoader(0);
  v15 = sub_100008DB0(&qword_1009DF8F8, type metadata accessor for PageSnapshotLoader, (uint64_t)&protocol conformance descriptor for PageSnapshotLoader);
  v16 = v6;
  v17 = v12;
  swift_retain(v13);
  v5[6] = ObservedObject.init(wrappedValue:)(v18, v14, v15);
  v5[7] = v19;
  sub_100009B88();
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000019, 0x80000001007C5850);
  sub_1003BF258((uint64_t)&v25);

  _s5Books15CurrentPageViewVwxx_0(v27);
  v20 = (int *)sub_10004CFD4(qword_1009DF900);
  sub_10002C960((uint64_t)v5, (uint64_t)a1 + v20[10], type metadata accessor for ScrubPageContentView);
  v21 = (_QWORD *)((char *)a1 + v20[11]);
  *v21 = v7;
  v21[1] = v8;
  v22 = (char *)a1 + v20[12];
  result = *(double *)&v24;
  *(_OWORD *)v22 = v24;
  *((_QWORD *)v22 + 2) = v9;
  *((_QWORD *)v22 + 3) = v10;
  *(_QWORD *)((char *)a1 + v20[13]) = v11;
  return result;
}

uint64_t sub_1003BE860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t WitnessTable;
  void *v43;
  uint64_t v44;
  unint64_t v45;

  v2 = v1;
  v4 = (_QWORD *)(v1 + 8);
  v5 = sub_10003F198((_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 32));
  Strong = swift_weakLoadStrong(*v5 + 96);
  if (Strong)
  {
    v7 = Strong;
    v8 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(Strong);
    v10 = v9;
    ObjectType = swift_getObjectType();
    dispatch thunk of BookContentLayoutProviding.contentContainerTopInset.getter(ObjectType, v10);
    swift_release(v7);
    swift_unknownObjectRelease(v8);
  }
  CGRectGetMinY(*(CGRect *)(v2 + *(int *)(a1 + 48)));
  v12 = sub_10003F198(v4, *(_QWORD *)(v2 + 32));
  v13 = swift_weakLoadStrong(*v12 + 96);
  if (v13)
  {
    v14 = v13;
    v15 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v13);
    v17 = v16;
    v18 = swift_getObjectType();
    dispatch thunk of BookContentLayoutProviding.contentSize.getter(v18, v17);
    swift_release(v14);
    swift_unknownObjectRelease(v15);
  }
  v19 = __chkstk_darwin(v13);
  v20 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(a1 + 16);
  v34 = v20;
  v35 = v2;
  v36 = v19;
  v37 = v21;
  v38 = v22;
  v39 = v21;
  v24 = static Alignment.center.getter(v23);
  v26 = v25;
  v27 = type metadata accessor for ModifiedContent(255, v33, &type metadata for WithPageFramedView);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _FrameLayout);
  v29 = type metadata accessor for ModifiedContent(0, v28, &type metadata for PageFramedAndBorderedModifier);
  v44 = v20;
  v45 = sub_1003BFC34();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v43 = &protocol witness table for _FrameLayout;
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v41 = sub_1003BFC78();
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  return ZStack.init(alignment:content:)(v24, v26, sub_1003BFC20, &v32, v29, v30);
}

uint64_t sub_1003BEAA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t WitnessTable;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70[7];

  v67 = a4;
  v56 = a2;
  v15 = type metadata accessor for ModifiedContent(0, a2, &type metadata for WithPageFramedView);
  v63 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v58 = (char *)&v55 - v16;
  v17 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _FrameLayout);
  v65 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v59 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v60 = (uint64_t)&v55 - v20;
  v61 = type metadata accessor for ModifiedContent(0, v17, &type metadata for PageFramedAndBorderedModifier);
  v66 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v62 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v64 = (uint64_t)&v55 - v23;
  v25 = type metadata accessor for ScrubFramedOuterPageView(0, a2, a3, v24);
  v57 = v25;
  v26 = *a1;
  KeyPath = swift_getKeyPath(&unk_100720180);
  v28 = swift_getKeyPath(&unk_1007201A8);
  static Published.subscript.getter(v70, v26, KeyPath, v28);
  swift_release(KeyPath);
  swift_release(v28);
  v29 = v70[0];
  v30 = v58;
  v31 = a3;
  sub_1005ACF04(v70[0], v56, a3, a5, a6, a7, a8);
  swift_release(v29);
  v32 = (uint64_t *)((char *)a1 + *(int *)(v25 + 44));
  v33 = *v32;
  v34 = v32[1];
  v36 = static Alignment.center.getter(v35);
  v38 = v37;
  v39 = sub_1003BFC34();
  v70[4] = v31;
  v70[5] = v39;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v41 = v59;
  View.frame(width:height:alignment:)(v33, 0, v34, 0, v36, v38, v15, WitnessTable);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v30, v15);
  v43 = static Color.red.getter(v42);
  v70[2] = WitnessTable;
  v70[3] = (uint64_t)&protocol witness table for _FrameLayout;
  v44 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v45 = v60;
  sub_1006034CC(v17, v60);
  v46 = swift_release(v43);
  v47 = *(void (**)(char *, uint64_t, __n128))(v65 + 8);
  v47(v41, v17, v46);
  v48 = *(uint64_t *)((char *)a1 + *(int *)(v57 + 52));
  v70[0] = *a1;
  v70[1] = v48;
  v49 = (uint64_t)v62;
  View.modifier<A>(_:)(v70, v17, &type metadata for PageFramedAndBorderedModifier, v44);
  ((void (*)(uint64_t, uint64_t))v47)(v45, v17);
  v50 = sub_1003BFC78();
  v68 = v44;
  v69 = v50;
  v51 = v61;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v61);
  v52 = v64;
  sub_100344038(v49, v51, v64);
  v53 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v53(v49, v51);
  sub_100341C00(v52, v51, v67);
  return ((uint64_t (*)(uint64_t, uint64_t))v53)(v52, v51);
}

uint64_t sub_1003BEE88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t Strong;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  Swift::String v36;
  void *object;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v2 = v1;
  v52 = a1;
  v49 = type metadata accessor for SnapshotImageView(0);
  __chkstk_darwin(v49);
  v4 = (double *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v49 - v6;
  __chkstk_darwin(v7);
  v51 = (uint64_t)&v49 - v8;
  v9 = *(_QWORD *)(v1 + 48);
  v10 = *(_QWORD *)(v2 + 56);
  v11 = type metadata accessor for PageSnapshotLoader(0);
  v12 = sub_100008DB0(&qword_1009DF8F8, type metadata accessor for PageSnapshotLoader, (uint64_t)&protocol conformance descriptor for PageSnapshotLoader);
  v13 = ObservedObject.projectedValue.getter(v9, v10, v11, v12);
  KeyPath = swift_getKeyPath(&unk_100720088);
  ObservedObject.Wrapper.subscript.getter(&v54, KeyPath, v13, v12);
  swift_release(KeyPath);
  swift_release(v13);
  v15 = v54;
  v16 = v55;
  v17 = v56;
  v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 72);
  v19 = *(void **)v2;
  v20 = sub_10003F198((_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 32));
  Strong = swift_weakLoadStrong(*v20 + 96);
  v22 = v19;
  v23 = v22;
  if (Strong)
  {
    v24 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v22);
    v26 = v25;
    ObjectType = swift_getObjectType();
    v28 = dispatch thunk of BookContentLayoutProviding.contentSize.getter(ObjectType, v26);
    v30 = v29;
    swift_release(Strong);
    swift_unknownObjectRelease(v24);
  }
  else
  {
    v28 = 0.0;
    v30 = 0;
  }
  *(_QWORD *)v4 = v15;
  *((_QWORD *)v4 + 1) = v16;
  *((_QWORD *)v4 + 2) = v17;
  *((_QWORD *)v4 + 3) = v18;
  *((_QWORD *)v4 + 4) = v23;
  v4[5] = v28;
  *((_QWORD *)v4 + 6) = v30;
  sub_100009B88();
  v31 = static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001DLL, 0x80000001007C5870);
  v32 = static Color.pink.getter(v31);
  v33 = v50;
  sub_1002417B4((uint64_t)v4, v50);
  swift_release(v32);
  sub_1002417F8((uint64_t)v4);
  v54 = 0;
  v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  v34._countAndFlagsBits = 0xD00000000000001FLL;
  v34._object = (void *)0x80000001007C5890;
  String.append(_:)(v34);
  v35 = *(_QWORD *)(v2 + 56);
  v53 = *(id *)(v35 + 72);
  v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v36._object;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(object);
  v38._countAndFlagsBits = 32;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  v39 = swift_getKeyPath(&unk_100720088);
  v40 = swift_getKeyPath(&unk_1007200B0);
  swift_retain(v35);
  static Published.subscript.getter(&v53, v41, v39, v40);
  swift_release(v35);
  swift_release(v39);
  swift_release(v40);
  v42 = v53;

  if (v42)
    v43 = 0x444544414F4CLL;
  else
    v43 = 0x676E6964616F6CLL;
  if (v42)
    v44 = 0xE600000000000000;
  else
    v44 = 0xE700000000000000;
  v45 = v44;
  String.append(_:)(*(Swift::String *)&v43);
  swift_bridgeObjectRelease(v44);
  v46 = v55;
  v47 = v51;
  sub_10002C960(v33, v51, type metadata accessor for SnapshotImageView);
  swift_bridgeObjectRelease(v46);
  return sub_10002C960(v47, v52, type metadata accessor for SnapshotImageView);
}

uint64_t sub_1003BF214(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086F1C8, 1);
}

uint64_t sub_1003BF224(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ScrubPageView(a2, a1);
  return a2;
}

uint64_t sub_1003BF258(uint64_t a1)
{
  destroy for ScrubPageView(a1);
  return a1;
}

uint64_t sub_1003BF28C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "(";
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1007200F0;
    v4[4] = &unk_100720108;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 0, 6, v4, a1 + 32);
    return 0;
  }
  return result;
}

void **sub_1003BF330(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char *v9;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, unint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7
    || v8 != 0
    || ((((((v7 + ((v6 + 48) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain(v9);
  }
  else
  {
    v12 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v12 + 24) = v14;
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    v15 = **(void (***)(unint64_t, unint64_t, uint64_t))(v14 - 8);
    v16 = v9;
    v15(v12, v13, v14);
    v17 = (v12 + v6 + 40) & ~v6;
    v18 = (v13 + v6 + 40) & ~v6;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, v4);
    v19 = (_OWORD *)((v7 + v17) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_OWORD *)((v7 + v18) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *(_QWORD *)(((unint64_t)v21 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + 39) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_1003BF490(id *a1, uint64_t a2)
{
  unint64_t v3;

  v3 = (unint64_t)a1 + 15;

  v3 &= 0xFFFFFFFFFFFFFFF8;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v3);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v3 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void **sub_1003BF4E0(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, unint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;

  v5 = *a2;
  *a1 = *a2;
  v6 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 24);
  *(_QWORD *)(v6 + 24) = v8;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
  v9 = **(void (***)(unint64_t, unint64_t, uint64_t))(v8 - 8);
  v10 = v5;
  v9(v6, v7, v8);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 40 + v6) & ~v12;
  v14 = (v12 + 40 + v7) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v19 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1003BF5CC(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v6 = (unint64_t)a2 + 15;
  v5 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = (unint64_t)a1 + 15;
  v9 = v5;

  v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  v6 &= 0xFFFFFFFFFFFFFFF8;
  sub_1001EAB00((_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8), (_QWORD *)v6);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 40 + v10) & ~v12;
  v14 = (v12 + 40 + v6) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v16[1] = v17[1];
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  *(_QWORD *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v19 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1003BF6D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  v7 = *(_OWORD *)(v5 + 16);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v5 + 32);
  *(_OWORD *)v4 = v6;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 40 + v4) & ~v9;
  v11 = (v9 + 40 + v5) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_OWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_QWORD *)(((unint64_t)v15 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1003BF794(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5;
  void *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;

  v7 &= 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v7);
  v8 = *(_OWORD *)v5;
  v9 = *(_OWORD *)(v5 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v5 + 32);
  *(_OWORD *)v7 = v8;
  *(_OWORD *)(v7 + 16) = v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 40 + v7) & ~v11;
  v13 = (v11 + 40 + v5) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  *(_QWORD *)(((unint64_t)v17 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1003BF8A0(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 40) & ~v7);
    }
    else
    {
      v12 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((((((*(_QWORD *)(v4 + 64) + ((v7 + 48) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1003BF93C + 4 * byte_10071FF70[v10]))();
  }
}

void sub_1003BF9C4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 48) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 48) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + ((v7 + 48) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1003BFADC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1003BFB4CLL);
}

void sub_1003BFAE4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1003BFAECLL);
  JUMPOUT(0x1003BFB4CLL);
}

void sub_1003BFAFC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1003BFB4CLL);
}

void sub_1003BFB04()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1003BFB4CLL);
}

void sub_1003BFB0C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x1003BFB48);
      JUMPOUT(0x1003BFB44);
    }
    JUMPOUT(0x1003BFB18);
  }
  JUMPOUT(0x1003BFB4CLL);
}

uint64_t type metadata accessor for ScrubFramedOuterPageView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScrubFramedOuterPageView);
}

unint64_t sub_1003BFB74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DF988;
  if (!qword_1009DF988)
  {
    v1 = sub_100030B74(qword_1009DF900);
    result = swift_getWitnessTable(&unk_100720130, v1);
    atomic_store(result, (unint64_t *)&qword_1009DF988);
  }
  return result;
}

uint64_t sub_1003BFBC0()
{
  return sub_100008DB0(&qword_1009DF990, type metadata accessor for SnapshotImageView, (uint64_t)&unk_1007141F8);
}

uint64_t sub_1003BFBEC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10086F218, 1);
}

uint64_t sub_1003BFC20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003BEAA4(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64));
}

unint64_t sub_1003BFC34()
{
  unint64_t result;

  result = qword_1009DF998;
  if (!qword_1009DF998)
  {
    result = swift_getWitnessTable(&unk_100730B94, &type metadata for WithPageFramedView);
    atomic_store(result, (unint64_t *)&qword_1009DF998);
  }
  return result;
}

unint64_t sub_1003BFC78()
{
  unint64_t result;

  result = qword_1009DF9A0;
  if (!qword_1009DF9A0)
  {
    result = swift_getWitnessTable(&unk_10072FAB0, &type metadata for PageFramedAndBorderedModifier);
    atomic_store(result, (unint64_t *)&qword_1009DF9A0);
  }
  return result;
}

uint64_t sub_1003BFCC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for WithPageFramedView);
  v2 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _FrameLayout);
  v3 = type metadata accessor for ModifiedContent(255, v2, &type metadata for PageFramedAndBorderedModifier);
  sub_1003BFC34();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
  sub_1003BFC78();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  v5 = type metadata accessor for ZStack(255, v3, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v5);
}

UIMenu sub_1003BFDAC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  id v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  id v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  Swift::String v80;
  Swift::OpaquePointer v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  NSString *v86;
  NSString *v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  id v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  __int128 v102;
  __int128 v103;
  UIImage_optional v104;

  v94 = type metadata accessor for Locale(0);
  v0 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v2 = (char *)&v83 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v83 - v4;
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v85 = v6;
  __chkstk_darwin(v6);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v83 - v11;
  v97 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v13 = String.LocalizationValue.init(stringLiteral:)(0x6573756150, 0xE500000000000000);
  static Locale.current.getter(v13);
  v95 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v92 = v9;
  v95(v9, v12, v6);
  v14 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
  v100 = ObjCClassFromMetadata;
  v16 = (void *)objc_opt_self(NSBundle);
  v96 = v16;
  v17 = objc_msgSend(v16, "bundleForClass:", ObjCClassFromMetadata);
  v99 = *(void (**)(char *, char *, uint64_t))(v0 + 16);
  v93 = v2;
  v18 = v94;
  v99(v2, v5, v94);
  v19 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v17, v2, "Controls -> Pause", 17, 2);
  v21 = v20;
  v101 = *(void (**)(char *, uint64_t))(v0 + 8);
  v101(v5, v18);
  v98 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22 = v85;
  v98(v12, v85);
  v102 = 0u;
  v103 = 0u;
  v91 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v19, v21, 0, "books_togglePlaying:", 32, 0xE100000000000000, 0, &v102, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v23 = v12;
  v84 = v12;
  v24 = String.LocalizationValue.init(stringLiteral:)(1886352467, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = v92;
  v26 = v23;
  v27 = v95;
  v95(v92, v26, v22);
  v28 = v100;
  v29 = objc_msgSend(v16, "bundleForClass:", v100);
  v30 = v93;
  v31 = v99;
  v99(v93, v5, v18);
  v32 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v29, v30, "Controls -> Stop", 16, 2);
  v34 = v33;
  v101(v5, v18);
  v35 = v84;
  v36 = v98;
  v98(v84, v22);
  v102 = 0u;
  v103 = 0u;
  v90 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v32, v34, 0, "books_stopPlaying:", 46, 0xE100000000000000, 0x100000, &v102, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v37 = String.LocalizationValue.init(stringLiteral:)(0x726F462070696B53, 0xEC00000064726177);
  static Locale.current.getter(v37);
  v38 = v92;
  v27(v92, v35, v22);
  v39 = v96;
  v40 = objc_msgSend(v96, "bundleForClass:", v28);
  v41 = v93;
  v42 = v94;
  v31(v93, v5, v94);
  v43 = String.init(localized:table:bundle:locale:comment:)(v38, 0, 0, v40, v41, "Controls -> Skip Forward", 24, 2);
  v45 = v44;
  v101(v5, v42);
  v36(v35, v22);
  v87 = UIKeyInputRightArrow;
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v102 = 0u;
  v103 = 0u;
  v89 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v43, v45, 0, "books_skipForward:", v46, v47, 0x100000, &v102, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  objc_msgSend(v89, "setAllowsAutomaticMirroring:", 0);
  v48 = String.LocalizationValue.init(stringLiteral:)(0x6361422070696B53, 0xE90000000000006BLL);
  static Locale.current.getter(v48);
  v49 = v95;
  v95(v38, v35, v22);
  v50 = objc_msgSend(v39, "bundleForClass:", v100);
  v52 = v93;
  v51 = v94;
  v99(v93, v5, v94);
  v53 = String.init(localized:table:bundle:locale:comment:)(v38, 0, 0, v50, v52, "Controls -> Skip Back", 21, 2);
  v55 = v54;
  v101(v5, v51);
  v98(v35, v22);
  v86 = UIKeyInputLeftArrow;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v102 = 0u;
  v103 = 0u;
  v88 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v53, v55, 0, "books_skipBackward:", v56, v57, 0x100000, &v102, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  objc_msgSend(v88, "setAllowsAutomaticMirroring:", 0);
  v58 = String.LocalizationValue.init(stringLiteral:)(0x617254207478654ELL, 0xEA00000000006B63);
  static Locale.current.getter(v58);
  v59 = v92;
  v49(v92, v35, v22);
  v60 = objc_msgSend(v96, "bundleForClass:", v100);
  v99(v52, v5, v51);
  v61 = v59;
  v62 = String.init(localized:table:bundle:locale:comment:)(v59, 0, 0, v60, v52, "Controls -> Next Track menu item title", 38, 2);
  v64 = v63;
  v101(v5, v51);
  v98(v35, v22);
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
  v102 = 0u;
  v103 = 0u;
  v67 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v62, v64, 0, "books_trackForward:", v65, v66, 1179648, &v102, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  objc_msgSend(v67, "setAllowsAutomaticMirroring:", 0);
  v68 = String.LocalizationValue.init(stringLiteral:)(0x73756F6976657250, 0xEE006B6361725420);
  static Locale.current.getter(v68);
  v95(v61, v35, v22);
  v69 = objc_msgSend(v96, "bundleForClass:", v100);
  v99(v52, v5, v51);
  v70 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v69, v52, "Controls -> Previous Track menu item title", 42, 2);
  v72 = v71;
  v101(v5, v51);
  v98(v35, v22);
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
  v102 = 0u;
  v103 = 0u;
  v75 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v70, v72, 0, "books_trackBackward:", v73, v74, 1179648, &v102, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  objc_msgSend(v75, "setAllowsAutomaticMirroring:", 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v76 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v77 = swift_allocObject(v76, 80, 7);
  *(_OWORD *)(v77 + 16) = xmmword_10071C6F0;
  v78 = v90;
  *(_QWORD *)(v77 + 32) = v91;
  *(_QWORD *)(v77 + 40) = v78;
  v79 = v88;
  *(_QWORD *)(v77 + 48) = v89;
  *(_QWORD *)(v77 + 56) = v79;
  *(_QWORD *)(v77 + 64) = v67;
  *(_QWORD *)(v77 + 72) = v75;
  *(_QWORD *)&v102 = v77;
  specialized Array._endMutation()(v77);
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  v104.value.super.isa = 0;
  v104.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v80, (Swift::String_optional)0, v104, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v102, v82);
}

UIMenu sub_1003C06C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  Swift::OpaquePointer v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, char *, uint64_t);
  id v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  UIImage_optional v48;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  v45 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v14 = String.LocalizationValue.init(stringLiteral:)(0x6573616572636E49, 0xEF656D756C6F5620);
  static Locale.current.getter(v14);
  v44 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v44(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v43 = ObjCClassFromMetadata;
  v42 = (id)objc_opt_self(NSBundle);
  v17 = objc_msgSend(v42, "bundleForClass:", ObjCClassFromMetadata);
  v41 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v39 = v0;
  v41(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Controls -> Increase Volume menu item title", 43, 2);
  v20 = v19;
  v40 = *(void (**)(char *, uint64_t))(v1 + 8);
  v40(v6, v0);
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v13, v7);
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
  v46 = 0u;
  v47 = 0u;
  v24 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v18, v20, 0, "books_increaseVolume:", v22, v23, 0x100000, &v46, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x6573616572636544, 0xEF656D756C6F5620);
  static Locale.current.getter(v25);
  v44(v10, v13, v7);
  v26 = objc_msgSend(v42, "bundleForClass:", v43);
  v27 = v39;
  v41(v3, v6, v39);
  v28 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v26, v3, "Controls -> Decrease Volume menu item title", 43, 2);
  v30 = v29;
  v40(v6, v27);
  v21(v13, v7);
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
  v46 = 0u;
  v47 = 0u;
  v33 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v28, v30, 0, "books_decreaseVolume:", v31, v32, 0x100000, &v46, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v34 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v35 = swift_allocObject(v34, 48, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1007118C0;
  *(_QWORD *)(v35 + 32) = v24;
  *(_QWORD *)(v35 + 40) = v33;
  *(_QWORD *)&v46 = v35;
  specialized Array._endMutation()(v35);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v48.value.super.isa = 0;
  v48.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v36, (Swift::String_optional)0, v48, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v46, v38);
}

UIMenu sub_1003C0ADC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  void *v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  id v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  Swift::String v90;
  Swift::OpaquePointer v92;
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  uint64_t v105;
  id v106;
  void (*v107)(char *, uint64_t);
  __int128 v108;
  __int128 v109;
  UIImage_optional v110;

  v105 = type metadata accessor for Locale(0);
  v0 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v2 = (char *)&v93 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v93 - v4;
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  __chkstk_darwin(v6);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v93 - v11;
  v96 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v13 = String.LocalizationValue.init(stringLiteral:)(0x6B63616279616C50, 0xEE00646565705320);
  static Locale.current.getter(v13);
  v103 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v103(v9, v12, v6);
  v14 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
  v99 = ObjCClassFromMetadata;
  v16 = (void *)objc_opt_self(NSBundle);
  v106 = v16;
  v17 = objc_msgSend(v16, "bundleForClass:", ObjCClassFromMetadata);
  v18 = *(void (**)(char *, char *, uint64_t))(v0 + 16);
  v104 = v2;
  v19 = v105;
  v18(v2, v5, v105);
  v20 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v17, v2, "Controls -> Playback Speed", 26, 2);
  v94 = v21;
  v95 = v20;
  v102 = *(void (**)(char *, uint64_t))(v0 + 8);
  v102(v5, v19);
  v107 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22 = v97;
  v107(v12, v97);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v101 = swift_allocObject(v23, 80, 7);
  *(_OWORD *)(v101 + 16) = xmmword_10071C6F0;
  v98 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x7835372E30, 0xE500000000000000);
  static Locale.current.getter(v24);
  v25 = v9;
  v103(v9, v12, v22);
  v26 = v99;
  v27 = objc_msgSend(v16, "bundleForClass:", v99);
  v29 = v104;
  v28 = v105;
  v100 = v18;
  v18(v104, v5, v105);
  v30 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v27, v29, "Controls -> Playback Speed -> 0.75x", 35, 2);
  v32 = v31;
  v102(v5, v28);
  v107(v12, v22);
  v108 = 0u;
  v109 = 0u;
  v33 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v30, v32, 0, 0, 0, 0, "books_setPlaybackSpeed75Percent:", &v108, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v101 + 32) = v33;
  v34 = String.LocalizationValue.init(stringLiteral:)(30769, 0xE200000000000000);
  v35 = v5;
  static Locale.current.getter(v34);
  v36 = v22;
  v37 = v103;
  v103(v25, v12, v22);
  v38 = objc_msgSend(v106, "bundleForClass:", v26);
  v39 = v104;
  v40 = v105;
  v100(v104, v35, v105);
  v41 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v38, v39, "Controls -> Playback Speed -> 1x", 32, 2);
  v43 = v42;
  v44 = v102;
  v102(v35, v40);
  v107(v12, v36);
  v108 = 0u;
  v109 = 0u;
  v45 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v41, v43, 0, 0, 0, 0, "books_setPlaybackSpeed100Percent:", &v108, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v101 + 40) = v45;
  v46 = String.LocalizationValue.init(stringLiteral:)(0x7835322E31, 0xE500000000000000);
  v47 = v35;
  static Locale.current.getter(v46);
  v37(v25, v12, v36);
  v48 = v99;
  v49 = objc_msgSend(v106, "bundleForClass:", v99);
  v50 = v104;
  v51 = v47;
  v100(v104, v47, v40);
  v52 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v49, v50, "Controls -> Playback Speed -> 1.25x", 35, 2);
  v54 = v53;
  v44(v51, v40);
  v55 = v97;
  v107(v12, v97);
  v108 = 0u;
  v109 = 0u;
  v56 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v52, v54, 0, 0, 0, 0, "books_setPlaybackSpeed125Percent:", &v108, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v57 = v101;
  *(_QWORD *)(v101 + 48) = v56;
  v58 = String.LocalizationValue.init(stringLiteral:)(2016751153, 0xE400000000000000);
  static Locale.current.getter(v58);
  v59 = v25;
  v93 = v25;
  v60 = v25;
  v61 = v103;
  v103(v60, v12, v55);
  v62 = objc_msgSend(v106, "bundleForClass:", v48);
  v63 = v104;
  v64 = v105;
  v65 = v100;
  v100(v104, v51, v105);
  v66 = String.init(localized:table:bundle:locale:comment:)(v59, 0, 0, v62, v63, "Controls -> Playback Speed -> 1.5x", 34, 2);
  v68 = v67;
  v69 = v64;
  v70 = v102;
  v102(v51, v69);
  v107(v12, v55);
  v108 = 0u;
  v109 = 0u;
  *(_QWORD *)(v57 + 56) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v66, v68, 0, 0, 0, 0, "books_setPlaybackSpeed150Percent:", &v108, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v71 = String.LocalizationValue.init(stringLiteral:)(0x7835372E31, 0xE500000000000000);
  static Locale.current.getter(v71);
  v72 = v93;
  v61(v93, v12, v55);
  v73 = objc_msgSend(v106, "bundleForClass:", v99);
  v75 = v104;
  v74 = v105;
  v65(v104, v51, v105);
  v76 = v72;
  v77 = String.init(localized:table:bundle:locale:comment:)(v72, 0, 0, v73, v75, "Controls -> Playback Speed -> 1.75x", 35, 2);
  v79 = v78;
  v70(v51, v74);
  v80 = v97;
  v81 = v107;
  v107(v12, v97);
  v108 = 0u;
  v109 = 0u;
  v82 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v77, v79, 0, 0, 0, 0, "books_setPlaybackSpeed175Percent:", &v108, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v83 = v101;
  *(_QWORD *)(v101 + 64) = v82;
  v84 = String.LocalizationValue.init(stringLiteral:)(30770, 0xE200000000000000);
  static Locale.current.getter(v84);
  v103(v76, v12, v80);
  v85 = objc_msgSend(v106, "bundleForClass:", v99);
  v100(v75, v51, v74);
  v86 = String.init(localized:table:bundle:locale:comment:)(v76, 0, 0, v85, v75, "Controls -> Playback Speed -> 2x", 32, 2);
  v88 = v87;
  v102(v51, v74);
  v81(v12, v80);
  v108 = 0u;
  v109 = 0u;
  v89 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v86, v88, 0, 0, 0, 0, "books_setPlaybackSpeed200Percent:", &v108, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v83 + 72) = v89;
  *(_QWORD *)&v108 = v83;
  specialized Array._endMutation()(v89);
  v90._object = v94;
  v90._countAndFlagsBits = v95;
  v110.value.super.isa = 0;
  v110.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v90, (Swift::String_optional)0, v110, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v108, v92);
}

UIMenu sub_1003C13D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  UIMenu v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  id v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  Swift::String v116;
  UIMenu v117;
  uint64_t v118;
  Swift::String v119;
  Swift::OpaquePointer v121;
  Swift::OpaquePointer v122;
  Swift::OpaquePointer v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  id v135;
  void (*v136)(char *, uint64_t);
  void (*v137)(char *, uint64_t);
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  UIImage_optional v143;
  UIImage_optional v144;
  UIImage_optional v145;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = v0;
  __chkstk_darwin(v0);
  v4 = (char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v124 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v124 - v13;
  v129 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v15 = String.LocalizationValue.init(stringLiteral:)(0x6954207065656C53, 0xEB0000000072656DLL);
  static Locale.current.getter(v15);
  v134 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v16 = v14;
  v134(v11, v14, v8);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v139 = ObjCClassFromMetadata;
  v135 = (id)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v135, "bundleForClass:", ObjCClassFromMetadata);
  v138 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v138(v4, v7, v2);
  v126 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v4, "Controls -> Sleep Timer", 23, 2);
  v125 = v20;
  v136 = *(void (**)(char *, uint64_t))(v1 + 8);
  v136(v7, v2);
  v137 = *(void (**)(char *, uint64_t))(v9 + 8);
  v127 = v16;
  v137(v16, v8);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v124 = v21;
  v128 = swift_allocObject(v21, 48, 7);
  v140 = xmmword_1007118C0;
  *(_OWORD *)(v128 + 16) = xmmword_1007118C0;
  v131 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v131 + 16) = v140;
  *(_QWORD *)&v140 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v22 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
  v23 = v7;
  static Locale.current.getter(v22);
  v132 = v11;
  v24 = v134;
  v134(v11, v16, v8);
  v25 = v135;
  v26 = objc_msgSend(v135, "bundleForClass:", v139);
  v130 = v4;
  v27 = v138;
  v138(v4, v23, v2);
  v28 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v26, v4, "Controls -> Sleep Timer -> Off", 30, 2);
  v30 = v29;
  v31 = v23;
  v136(v23, v2);
  v32 = v127;
  v33 = v137;
  v137(v127, v8);
  v141 = 0u;
  v142 = 0u;
  v34 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v28, v30, 0, 0, 0, 0, "books_unsetSleepTimer:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v131 + 32) = v34;
  v35 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007C5A00);
  v36 = v31;
  static Locale.current.getter(v35);
  v37 = v132;
  v24(v132, v32, v8);
  v38 = objc_msgSend(v25, "bundleForClass:", v139);
  v39 = v130;
  v133 = v2;
  v27(v130, v36, v2);
  v40 = String.init(localized:table:bundle:locale:comment:)(v37, 0, 0, v38, v39, "Controls -> Sleep Timer -> When current chapter ends", 52, 2);
  v42 = v41;
  v43 = v136;
  v136(v36, v2);
  v44 = v127;
  v33(v127, v8);
  v141 = 0u;
  v142 = 0u;
  v45 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v40, v42, 0, 0, 0, 0, "books_setSleepTimerWhenCurrentChapterEnds:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v46 = v131;
  *(_QWORD *)(v131 + 40) = v45;
  *(_QWORD *)&v141 = v46;
  specialized Array._endMutation()(v45);
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  v143.value.super.isa = 0;
  v143.is_nil = 0;
  v48.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v47, (Swift::String_optional)0, v143, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v141, v121).super.super.isa;
  *(UIMenu *)(v128 + 32) = v48;
  v131 = swift_allocObject(v124, 80, 7);
  *(_OWORD *)(v131 + 16) = xmmword_10071C6F0;
  v49 = String.LocalizationValue.init(stringLiteral:)(0x6574756E696D2035, 0xE900000000000073);
  static Locale.current.getter(v49);
  v50 = v8;
  v51 = v134;
  v134(v37, v44, v8);
  v52 = v135;
  v53 = objc_msgSend(v135, "bundleForClass:", v139);
  v54 = v130;
  v55 = v133;
  v138(v130, v36, v133);
  v56 = String.init(localized:table:bundle:locale:comment:)(v37, 0, 0, v53, v54, "Controls -> Sleep Timer -> 5 minutes", 36, 2);
  v58 = v57;
  v43(v36, v55);
  v137(v44, v50);
  v141 = 0u;
  v142 = 0u;
  v59 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v56, v58, 0, 0, 0, 0, "books_setSleepTimer5Minutes:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v60 = v131;
  *(_QWORD *)(v131 + 32) = v59;
  v61 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203031, 0xEA00000000007365);
  static Locale.current.getter(v61);
  v62 = v132;
  v51(v132, v44, v50);
  v63 = v139;
  v64 = objc_msgSend(v52, "bundleForClass:", v139);
  v65 = v130;
  v138(v130, v36, v55);
  v66 = String.init(localized:table:bundle:locale:comment:)(v62, 0, 0, v64, v65, "Controls -> Sleep Timer -> 10 minutes", 37, 2);
  v68 = v67;
  v43(v36, v55);
  v69 = v137;
  v137(v44, v50);
  v141 = 0u;
  v142 = 0u;
  *(_QWORD *)(v60 + 40) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v66, v68, 0, 0, 0, 0, "books_setSleepTimer10Minutes:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v70 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203531, 0xEA00000000007365);
  static Locale.current.getter(v70);
  v71 = v132;
  v72 = v50;
  v73 = v134;
  v134(v132, v44, v50);
  v74 = objc_msgSend(v135, "bundleForClass:", v63);
  v75 = v133;
  v76 = v138;
  v138(v65, v36, v133);
  v77 = String.init(localized:table:bundle:locale:comment:)(v71, 0, 0, v74, v65, "Controls -> Sleep Timer -> 15 minutes", 37, 2);
  v79 = v78;
  v136(v36, v75);
  v69(v44, v72);
  v141 = 0u;
  v142 = 0u;
  v80 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v77, v79, 0, 0, 0, 0, "books_setSleepTimer15Minutes:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v131 + 48) = v80;
  v81 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203033, 0xEA00000000007365);
  static Locale.current.getter(v81);
  v82 = v132;
  v73(v132, v44, v72);
  v83 = v135;
  v84 = objc_msgSend(v135, "bundleForClass:", v139);
  v85 = v133;
  v76(v65, v36, v133);
  v86 = v82;
  v87 = v65;
  v88 = String.init(localized:table:bundle:locale:comment:)(v86, 0, 0, v84, v65, "Controls -> Sleep Timer -> 30 minutes", 37, 2);
  v90 = v89;
  v91 = v85;
  v92 = v136;
  v136(v36, v91);
  v93 = v72;
  v137(v44, v72);
  v141 = 0u;
  v142 = 0u;
  v94 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v88, v90, 0, 0, 0, 0, "books_setSleepTimer30Minutes:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v131 + 56) = v94;
  v95 = String.LocalizationValue.init(stringLiteral:)(0x74756E696D203534, 0xEA00000000007365);
  static Locale.current.getter(v95);
  v96 = v132;
  v97 = v93;
  v134(v132, v44, v93);
  v98 = v83;
  v99 = v139;
  v100 = objc_msgSend(v98, "bundleForClass:", v139);
  v101 = v133;
  v138(v87, v36, v133);
  v102 = String.init(localized:table:bundle:locale:comment:)(v96, 0, 0, v100, v87, "Controls -> Sleep Timer -> 45 minutes", 37, 2);
  v104 = v103;
  v92(v36, v101);
  v105 = v97;
  v106 = v137;
  v137(v44, v97);
  v141 = 0u;
  v142 = 0u;
  v107 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v102, v104, 0, 0, 0, 0, "books_setSleepTimer45Minutes:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v108 = v131;
  *(_QWORD *)(v131 + 64) = v107;
  v109 = String.LocalizationValue.init(stringLiteral:)(0x72756F682031, 0xE600000000000000);
  static Locale.current.getter(v109);
  v134(v96, v44, v105);
  v110 = objc_msgSend(v135, "bundleForClass:", v99);
  v111 = v133;
  v138(v87, v36, v133);
  v112 = String.init(localized:table:bundle:locale:comment:)(v96, 0, 0, v110, v87, "Controls -> Sleep Timer -> 1 hour", 33, 2);
  v114 = v113;
  v136(v36, v111);
  v106(v44, v105);
  v141 = 0u;
  v142 = 0u;
  v115 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v112, v114, 0, 0, 0, 0, "books_setSleepTimer1Hour:", &v141, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v108 + 72) = v115;
  *(_QWORD *)&v141 = v108;
  specialized Array._endMutation()(v115);
  v116._countAndFlagsBits = 0;
  v116._object = (void *)0xE000000000000000;
  v144.value.super.isa = 0;
  v144.is_nil = 0;
  v117.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v116, (Swift::String_optional)0, v144, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v141, v122).super.super.isa;
  v118 = v128;
  *(UIMenu *)(v128 + 40) = v117;
  *(_QWORD *)&v141 = v118;
  specialized Array._endMutation()(v117.super.super.isa);
  v119._countAndFlagsBits = v126;
  v119._object = v125;
  v145.value.super.isa = 0;
  v145.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v119, (Swift::String_optional)0, v145, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v141, v123);
}

UIMenu sub_1003C205C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::String v64;
  Swift::OpaquePointer v66;
  _QWORD v67[2];
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  id v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  __int128 v79;
  __int128 v80;
  UIImage_optional v81;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v67 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v67 - v12;
  v67[1] = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v73 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v73 + 16) = xmmword_1007143B0;
  v75 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v15 = String.LocalizationValue.init(stringLiteral:)(0x616843207478654ELL, 0xEC00000072657470);
  static Locale.current.getter(v15);
  v72 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v68 = v10;
  v72(v10, v13, v7);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v71 = ObjCClassFromMetadata;
  v76 = (id)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v76, "bundleForClass:", ObjCClassFromMetadata);
  v74 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v69 = v0;
  v70 = v3;
  v74(v3, v6, v0);
  v19 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v18, v3, "Controls -> Next Chapter", 24, 2);
  v21 = v20;
  v77 = *(void (**)(char *, uint64_t))(v1 + 8);
  v77(v6, v0);
  v78 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22 = v7;
  v78(v13, v7);
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v79 = 0u;
  v80 = 0u;
  v25 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v19, v21, 0, "books_chapterRight:", v23, v24, 0x80000, &v79, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  objc_msgSend(v25, "setAllowsAutomaticMirroring:", 0);
  v26 = v73;
  *(_QWORD *)(v73 + 32) = v25;
  v27 = v13;
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007C5910);
  static Locale.current.getter(v28);
  v29 = v68;
  v30 = v13;
  v31 = v22;
  v32 = v72;
  v72(v68, v30, v22);
  v33 = v71;
  v34 = objc_msgSend(v76, "bundleForClass:", v71);
  v35 = v69;
  v36 = v70;
  v74(v70, v6, v69);
  v37 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v34, v36, "Controls -> Previous Chapter", 28, 2);
  v39 = v38;
  v77(v6, v35);
  v78(v27, v31);
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v79 = 0u;
  v80 = 0u;
  v42 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v37, v39, 0, "books_chapterLeft:", v40, v41, 0x80000, &v79, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  objc_msgSend(v42, "setAllowsAutomaticMirroring:", 0);
  *(_QWORD *)(v26 + 40) = v42;
  v43 = String.LocalizationValue.init(stringLiteral:)(0x4320666F20646E45, 0xEE00726574706168);
  static Locale.current.getter(v43);
  v44 = v68;
  v32(v68, v27, v31);
  v45 = objc_msgSend(v76, "bundleForClass:", v33);
  v46 = v69;
  v47 = v70;
  v74(v70, v6, v69);
  v48 = v44;
  v49 = String.init(localized:table:bundle:locale:comment:)(v44, 0, 0, v45, v47, "'(Go to) End of Chapter' action", 31, 2);
  v51 = v50;
  v77(v6, v46);
  v78(v27, v31);
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
  v79 = 0u;
  v80 = 0u;
  v54 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v49, v51, 0, "books_chapterEnd:", v52, v53, 0x80000, &v79, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v55 = v73;
  *(_QWORD *)(v73 + 48) = v54;
  v56 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007C5970);
  static Locale.current.getter(v56);
  v72(v48, v27, v31);
  v57 = objc_msgSend(v76, "bundleForClass:", v71);
  v74(v47, v6, v46);
  v58 = String.init(localized:table:bundle:locale:comment:)(v48, 0, 0, v57, v47, "'(Go to) Beginning of Chapter' action", 37, 2);
  v60 = v59;
  v77(v6, v46);
  v78(v27, v31);
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
  v79 = 0u;
  v80 = 0u;
  v63 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v58, v60, 0, "books_chapterStart:", v61, v62, 0x80000, &v79, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v55 + 56) = v63;
  *(_QWORD *)&v79 = v55;
  specialized Array._endMutation()(v63);
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v81.value.super.isa = 0;
  v81.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v64, (Swift::String_optional)0, v81, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v79, v66);
}

void sub_1003C2724(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  UIMenu v25;
  Swift::String v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  UIMenu v35;
  UIMenuElementSize v36;
  id v37;
  Swift::String v38;
  Class isa;
  Swift::OpaquePointer v40;
  Swift::OpaquePointer v41;
  Swift::OpaquePointer v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  id v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  _OWORD v55[3];
  UIImage_optional v56;
  UIImage_optional v57;
  UIImage_optional v58;

  v52 = a2;
  v53 = a1;
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v43 - v14;
  v54 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v16 = String.LocalizationValue.init(stringLiteral:)(0x736C6F72746E6F43, 0xE800000000000000);
  static Locale.current.getter(v16);
  v49 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v49(v12, v15, v9);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v48 = ObjCClassFromMetadata;
  v47 = (id)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v47, "bundleForClass:", ObjCClassFromMetadata);
  v46 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v46(v5, v8, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "macOS Menu: Controls", 20, 2);
  v50 = v21;
  v51 = v20;
  v45 = *(void (**)(char *, uint64_t))(v3 + 8);
  v45(v8, v2);
  v44 = *(void (**)(char *, uint64_t))(v10 + 8);
  v44(v15, v9);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v23 = swift_allocObject(v22, 72, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1007118E0;
  *(UIMenu *)(v23 + 32) = sub_1003BFDAC();
  *(UIMenu *)(v23 + 40) = sub_1003C06C0();
  v24 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1007118C0;
  *(UIMenu *)(v24 + 32) = sub_1003C0ADC();
  v25.super.super.isa = sub_1003C13D4().super.super.isa;
  *(UIMenu *)(v24 + 40) = v25;
  *(_QWORD *)&v55[0] = v24;
  specialized Array._endMutation()(v25.super.super.isa);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v56.value.super.isa = 0;
  v56.is_nil = 0;
  *(UIMenu *)(v23 + 48) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v56, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, *(UIMenuElementSize *)&v55[0], v40);
  *(UIMenu *)(v23 + 56) = sub_1003C205C();
  sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v27 = String.LocalizationValue.init(stringLiteral:)(1801675074, 0xE400000000000000);
  static Locale.current.getter(v27);
  v49(v12, v15, v9);
  v28 = objc_msgSend(v47, "bundleForClass:", v48);
  v46(v5, v8, v2);
  v29 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v28, v5, "Controls -> Back", 16, 2);
  v31 = v30;
  v45(v8, v2);
  v44(v15, v9);
  memset(v55, 0, 32);
  v32 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, "books_back:", 91, 0xE100000000000000, 0x100000, v55, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v33 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v33 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v33 + 32) = v32;
  *(_QWORD *)&v55[0] = v33;
  specialized Array._endMutation()(v33);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v57.value.super.isa = 0;
  v57.is_nil = 0;
  v35.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v57, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, *(UIMenuElementSize *)&v55[0], v41).super.super.isa;
  *(UIMenu *)(v23 + 64) = v35;
  *(_QWORD *)&v55[0] = v23;
  specialized Array._endMutation()(v35.super.super.isa);
  v36 = *(_QWORD *)&v55[0];
  LOBYTE(v24) = (_BYTE)v52;
  v37 = v52;
  v38._object = v50;
  v38._countAndFlagsBits = v51;
  v58.value.super.isa = 0;
  v58.is_nil = v24;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, (Swift::String_optional)0, v58, 0, 0xFFFFFFFFFFFFFFFFLL, v36, v42).super.super.isa;
  objc_msgSend(v53, "insertSiblingMenu:afterMenuForIdentifier:", isa, UIMenuView);

}

id sub_1003C2D2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlwaysPassthroughView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AlwaysPassthroughView()
{
  return objc_opt_self(_TtC5Books21AlwaysPassthroughView);
}

ValueMetadata *type metadata accessor for ChromeBackdropBlurView()
{
  return &type metadata for ChromeBackdropBlurView;
}

uint64_t sub_1003C2D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003C31CC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003C2DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003C31CC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003C2E34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003C31CC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_1003C2E5C()
{
  unint64_t result;

  result = qword_1009DF9D0;
  if (!qword_1009DF9D0)
  {
    result = swift_getWitnessTable(&unk_100720208, &type metadata for ChromeBackdropBlurView);
    atomic_store(result, (unint64_t *)&qword_1009DF9D0);
  }
  return result;
}

id sub_1003C2EA0()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  NSString v10;
  Class v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  Class v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  id v25;
  Class v26;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BackdropView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = objc_msgSend(v0, "layer");
  v2 = objc_opt_self(CABackdropLayer);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v5 = v4;
  v6 = objc_allocWithZone((Class)CAFilter);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithType:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setValue:forKey:", isa, v10);

  v11 = Double._bridgeToObjectiveC()().super.super.isa;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setValue:forKey:", v11, v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v14 = v13;
  v15 = objc_allocWithZone((Class)CAFilter);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithType:", v16, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v18 = Double._bridgeToObjectiveC()().super.super.isa;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setValue:forKey:", v18, v19);

  v20 = sub_10004CFD4(&qword_1009D4B80);
  v21 = swift_allocObject(v20, 96, 7);
  *(_OWORD *)(v21 + 16) = xmmword_10070FC00;
  v22 = sub_1003C3190();
  *(_QWORD *)(v21 + 32) = v8;
  *(_QWORD *)(v21 + 88) = v22;
  *(_QWORD *)(v21 + 56) = v22;
  *(_QWORD *)(v21 + 64) = v17;
  v23 = v1;
  v24 = v8;
  v25 = v17;
  v26 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setFilters:", v26, swift_bridgeObjectRelease(v21).n128_f64[0]);

  objc_msgSend(v3, "setScale:", 0.25);
  return v0;
}

unint64_t sub_1003C3190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DF9D8;
  if (!qword_1009DF9D8)
  {
    v1 = objc_opt_self(CAFilter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DF9D8);
  }
  return result;
}

unint64_t sub_1003C31CC()
{
  unint64_t result;

  result = qword_1009DF9E0;
  if (!qword_1009DF9E0)
  {
    result = swift_getWitnessTable(&unk_100720258, &type metadata for ChromeBackdropBlurView);
    atomic_store(result, (unint64_t *)&qword_1009DF9E0);
  }
  return result;
}

id CloseBookAnimator.coverImage.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent);
  if (*(_BYTE *)(v0 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 16))
    return 0;
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void CloseBookAnimator.coverImage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  if (a1)
  {
    v2 = v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent;
    v4 = *(void **)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent);
    v3 = *(_QWORD *)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 8);
    *(_QWORD *)v2 = a1;
    *(_QWORD *)(v2 + 8) = 0;
    v5 = *(_BYTE *)(v2 + 16);
    *(_BYTE *)(v2 + 16) = 0;
    sub_1003C3308(v4, v3, v5);
  }
}

void sub_1003C3308(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_release(a2);
  }
  else if (!a3)
  {

  }
}

void (*CloseBookAnimator.coverImage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v3 = OBJC_IVAR___BKCloseBookAnimator_crossFadeContent;
  a1[1] = v1;
  a1[2] = v3;
  v4 = v1 + v3;
  if (*(_BYTE *)(v4 + 16))
  {
    v5 = 0;
  }
  else
  {
    v5 = *(id *)v4;
    v6 = *(id *)v4;
  }
  *a1 = v5;
  return sub_1003C337C;
}

void sub_1003C337C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;

  v2 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16);
      v4 = *(void **)v3;
      v5 = *(_QWORD *)(v3 + 8);
      *(_QWORD *)v3 = v2;
      *(_QWORD *)(v3 + 8) = 0;
      v6 = *(_BYTE *)(v3 + 16);
      *(_BYTE *)(v3 + 16) = 0;
      v11 = v2;
      sub_1003C3308(v4, v5, v6);

    }
    else
    {

    }
  }
  else if (v2)
  {
    v7 = *(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16);
    v8 = *(void **)v7;
    v9 = *(_QWORD *)(v7 + 8);
    *(_QWORD *)v7 = v2;
    *(_QWORD *)(v7 + 8) = 0;
    v10 = *(_BYTE *)(v7 + 16);
    *(_BYTE *)(v7 + 16) = 0;
    sub_1003C3308(v8, v9, v10);
  }
}

uint64_t CloseBookAnimator.spreadSnapshot.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent);
  if (*(_BYTE *)(v0 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 16) != 1)
    return 0;
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

double sub_1003C3520(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(uint64_t (*)(), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(uint64_t (*)(), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_100902590, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v3(sub_10036FE0C, v5, v6);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_1003C360C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void (*v6)(uint64_t, void *, __n128);
  __n128 v7;
  double result;
  _QWORD v9[5];
  uint64_t v10;

  v9[4] = a1;
  v10 = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1001EDBF0;
  v9[3] = &unk_100902530;
  v5 = _Block_copy(v9);
  v6 = *(void (**)(uint64_t, void *, __n128))(a3 + 16);
  v7 = swift_retain(a2);
  v6(a3, v5, v7);
  _Block_release(v5);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void CloseBookAnimator.spreadSnapshot.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;

  if (a1)
  {
    v3 = v2 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent;
    v4 = *(void **)(v2 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent);
    v5 = *(_QWORD *)(v2 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 8);
    *(_QWORD *)v3 = a1;
    *(_QWORD *)(v3 + 8) = a2;
    v6 = *(_BYTE *)(v3 + 16);
    *(_BYTE *)(v3 + 16) = 1;
    sub_1003C3308(v4, v5, v6);
  }
}

void (*CloseBookAnimator.spreadSnapshot.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = OBJC_IVAR___BKCloseBookAnimator_crossFadeContent;
  a1[2] = v1;
  a1[3] = v3;
  v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 16) == 1)
  {
    v5 = *v4;
    swift_retain(v4[1]);
  }
  else
  {
    v5 = 0;
    v6 = 0;
  }
  *a1 = v5;
  a1[1] = v6;
  return sub_1003C3730;
}

void sub_1003C3730(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = a1[1];
    if (v2)
    {
      v4 = a1[2] + a1[3];
      v5 = *(void **)v4;
      v6 = *(_QWORD *)(v4 + 8);
      *(_QWORD *)v4 = v2;
      *(_QWORD *)(v4 + 8) = v3;
      v7 = *(_BYTE *)(v4 + 16);
      *(_BYTE *)(v4 + 16) = 1;
      swift_retain(v3);
      sub_1003C3308(v5, v6, v7);
    }
    sub_10002AD00(v2, v3);
  }
  else if (v2)
  {
    v8 = a1[1];
    v9 = a1[2] + a1[3];
    v10 = *(void **)v9;
    v11 = *(_QWORD *)(v9 + 8);
    *(_QWORD *)v9 = v2;
    *(_QWORD *)(v9 + 8) = v8;
    v12 = *(_BYTE *)(v9 + 16);
    *(_BYTE *)(v9 + 16) = 1;
    sub_1003C3308(v10, v11, v12);
  }
}

uint64_t CloseBookAnimator.animationComplete.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKCloseBookAnimator_animationComplete);
  swift_beginAccess(v0 + OBJC_IVAR___BKCloseBookAnimator_animationComplete, v4, 0, 0);
  v2 = *v1;
  sub_10002ACF0(*v1, v1[1]);
  return v2;
}

uint64_t CloseBookAnimator.animationComplete.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR___BKCloseBookAnimator_animationComplete);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10002AD00(v6, v7);
}

uint64_t (*CloseBookAnimator.animationComplete.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKCloseBookAnimator_animationComplete, a1, 33, 0);
  return j__swift_endAccess;
}

id CloseBookAnimator.__allocating_init(contentHelper:coverSource:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___BKCloseBookAnimator_crossFadeContent];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 2;
  v7 = &v5[OBJC_IVAR___BKCloseBookAnimator_animationComplete];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKCloseBookAnimator_contentHelper] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___BKCloseBookAnimator_coverSource] = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, "init");
}

id CloseBookAnimator.init(contentHelper:coverSource:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v4;
  objc_super v6;

  v3 = &v2[OBJC_IVAR___BKCloseBookAnimator_crossFadeContent];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 2;
  v4 = &v2[OBJC_IVAR___BKCloseBookAnimator_animationComplete];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BKCloseBookAnimator_contentHelper] = a1;
  *(_QWORD *)&v2[OBJC_IVAR___BKCloseBookAnimator_coverSource] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CloseBookAnimator();
  return objc_msgSendSuper2(&v6, "init");
}

uint64_t type metadata accessor for CloseBookAnimator()
{
  return objc_opt_self(BKCloseBookAnimator);
}

double CloseBookAnimator.transitionDuration(using:)()
{
  return 0.25;
}

void CloseBookAnimator.animateTransition(using:)(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  void *v61;
  double v62;
  double MidX;
  double v64;
  double MidY;
  double v66;
  double v67;
  double v68;
  double v69;
  id v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  double v79;
  uint64_t v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  id v87[2];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  v4 = v3;
  if (!v3)
  {
    v89 = 0u;
    v90 = 0u;
LABEL_21:
    sub_10004A7B8((uint64_t)&v89);
    goto LABEL_22;
  }
  v5 = objc_msgSend(v3, "im_firstVisibleChildConformingToProtocol:", &OBJC_PROTOCOL___BKBookOpenTransitioning);
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    *(_OWORD *)v87 = 0u;
    v88 = 0u;
  }
  sub_100025B3C((uint64_t)v87, (uint64_t)&v89, (uint64_t *)&unk_1009D04E0);
  if (!*((_QWORD *)&v90 + 1))
    goto LABEL_21;
  v7 = sub_10004CFD4(&qword_1009DFA18);
  if ((swift_dynamicCast(v87, &v89, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
LABEL_22:
    objc_msgSend(a1, "completeTransition:", objc_msgSend(a1, "transitionWasCancelled") ^ 1);
LABEL_23:

    return;
  }
  v8 = v87[0];
  v9 = objc_msgSend(v87[0], "transitionContentView");
  if (!v9)
  {

    goto LABEL_22;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "snapshotViewAfterScreenUpdates:", 0);
  if (!v11)
  {

    goto LABEL_22;
  }
  v86 = v10;
  v12 = v11;
  v13 = (void *)objc_opt_self(AETestDriver);
  v14 = objc_msgSend(v13, "shared");
  if (!v14)
  {
    __break(1u);
    goto LABEL_36;
  }
  v15 = v14;
  objc_msgSend(v14, "postEvent:sender:", kBETestDriverOpenAnimationStart, v1);

  v81 = v13;
  v16 = objc_msgSend(v13, "shared");
  if (!v16)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v17 = v16;
  objc_msgSend(v16, "postEvent:sender:", kBETestDriverOpenAnimationSetupStart, v1);

  v18 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  v19 = objc_msgSend(v18, "snapshotViewAfterScreenUpdates:", 0);
  v20 = *(void **)(v1 + OBJC_IVAR___BKCloseBookAnimator_coverSource);
  v21 = v12;
  if (v20)
    objc_msgSend(v20, "coverAnimationSourcePrepare");
  objc_msgSend(v86, "frame");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  objc_msgSend(v86, "_continuousCornerRadius");
  v31 = v30;
  v32 = objc_msgSend(a1, "containerView");
  v33 = v32;
  if (v18)
    objc_msgSend(v32, "addSubview:", v18);
  v84 = v8;
  v85 = v18;
  if (v19)
  {
    v34 = v19;
    objc_msgSend(v34, "frame");
    objc_msgSend(v34, "setFrame:");
    objc_msgSend(v34, "frame");
    objc_msgSend(v34, "setFrame:");
    objc_msgSend(v33, "center");
    objc_msgSend(v34, "setCenter:");
    objc_msgSend(v33, "addSubview:", v34);

  }
  v82 = v19;
  v35 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v36 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v35);

  v37 = v36;
  objc_msgSend(v33, "bounds");
  objc_msgSend(v37, "setFrame:");

  objc_msgSend(v33, "addSubview:", v37);
  objc_msgSend(v12, "setFrame:", v23, v25, v27, v29);
  objc_msgSend(v12, "_setContinuousCornerRadius:", v31);
  objc_msgSend(v12, "setClipsToBounds:", 1);
  objc_msgSend(v33, "addSubview:", v12);
  v38 = *(void **)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent);
  if (*(_BYTE *)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 16))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 16) == 1)
    {
      v39 = *(_QWORD *)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 8);
      v40 = swift_allocObject(&unk_1009023E8, 24, 7);
      swift_unknownObjectWeakInit(v40 + 16);
      v41 = (double *)swift_allocObject(&unk_100902410, 112, 7);
      *((_QWORD *)v41 + 2) = v40;
      v41[3] = v23;
      v41[4] = v25;
      v41[5] = v27;
      v41[6] = v29;
      v41[7] = v31;
      *((_QWORD *)v41 + 8) = v33;
      *((_QWORD *)v41 + 9) = a1;
      *((_QWORD *)v41 + 10) = v85;
      *((_QWORD *)v41 + 11) = v82;
      *((_QWORD *)v41 + 12) = v37;
      *((_QWORD *)v41 + 13) = v21;
      v83 = v82;
      v42 = v37;
      sub_1003C5440(v38, v39, 1);
      swift_retain(v40);
      v43 = v33;
      swift_unknownObjectRetain(a1);
      v44 = v85;
      v45 = v21;
      ((void (*)(void (*)(void *), double *))v38)(sub_1003C5420, v41);
      swift_release(v40);
      swift_release(v41);

      sub_1003C3308(v38, v39, 1);
      return;
    }
    v59 = objc_msgSend(v81, "shared");
    if (v59)
    {
      v60 = v59;
      objc_msgSend(v59, "postEvent:sender:", kBETestDriverOpenAnimationSetupEnd, v1);

      v61 = *(void **)(v1 + OBJC_IVAR___BKCloseBookAnimator_contentHelper);
      if (v61)
      {
        objc_msgSend(v61, "openAnimationSourceRect");
        MidX = v62;
        MidY = v64;
        v67 = v66;
        v69 = v68;
      }
      else
      {
        v67 = 0.0;
        v69 = 0.0;
        MidX = 0.0;
        MidY = 0.0;
      }
      v95.origin.x = 0.0;
      v95.origin.y = 0.0;
      v95.size.width = 0.0;
      v95.size.height = 0.0;
      v92.origin.x = MidX;
      v92.origin.y = MidY;
      v92.size.width = v67;
      v92.size.height = v69;
      if (CGRectEqualToRect(v92, v95))
      {
        v70 = objc_msgSend(a1, "containerView");
        objc_msgSend(v70, "bounds");
        v72 = v71;
        v74 = v73;
        v76 = v75;
        v78 = v77;

        v93.origin.x = v72;
        v93.origin.y = v74;
        v93.size.width = v76;
        v93.size.height = v78;
        MidX = CGRectGetMidX(v93);
        v94.origin.x = v72;
        v94.origin.y = v74;
        v94.size.width = v76;
        v94.size.height = v78;
        MidY = CGRectGetMidY(v94);
        v67 = 0.0;
        v69 = 0.0;
      }
      v89 = 0u;
      v90 = 0u;
      v91 = 1;
      sub_1003C477C((uint64_t)a1, v33, v19, v37, v21, 0, (uint64_t)&v89, 0, MidX, MidY, v67, v69);

      goto LABEL_23;
    }
    goto LABEL_38;
  }
  v80 = *(_QWORD *)(v1 + OBJC_IVAR___BKCloseBookAnimator_crossFadeContent + 8);
  v46 = v38;
  objc_msgSend(v46, "size");
  v79 = sub_1003C5018(a1, v85, v47, v48, 0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v46);
  objc_msgSend(v55, "setContentMode:", 1);
  objc_msgSend(v55, "setFrame:", v23, v25, v27, v29);
  objc_msgSend(v55, "setAlpha:", 0.0);
  objc_msgSend(v55, "_setContinuousCornerRadius:", v31);
  objc_msgSend(v55, "setClipsToBounds:", 1);
  objc_msgSend(v33, "addSubview:", v55);
  v56 = objc_msgSend(v81, "shared");
  if (v56)
  {
    v57 = v56;
    objc_msgSend(v56, "postEvent:sender:", kBETestDriverOpenAnimationSetupEnd, v1);

    v89 = 0u;
    v90 = 0u;
    v91 = 1;
    v58 = v55;
    sub_1003C477C((uint64_t)a1, v33, v82, v37, v21, 0, (uint64_t)&v89, v55, v79, v50, v52, v54);

    sub_1003C3308(v38, v80, 0);
    return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1003C44E8(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, double a9, double a10, double a11, double a12, double a13)
{
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  _QWORD v48[4];
  char v49;

  v25 = a2 + 16;
  swift_beginAccess(a2 + 16, &v47, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v25);
  if (Strong)
  {
    v27 = (void *)Strong;
    v28 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", a1);
    objc_msgSend(v28, "setContentMode:", 1);
    objc_msgSend(v28, "setFrame:", a9, a10, a11, a12);
    objc_msgSend(v28, "setAlpha:", 0.0);
    objc_msgSend(v28, "_setContinuousCornerRadius:", a13);
    objc_msgSend(v28, "setClipsToBounds:", 1);
    objc_msgSend(a3, "addSubview:", v28);
    v29 = sub_1003C5018(a4, a5, 0, 0, 1);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    objc_msgSend(a1, "bk_frameForImageFittedInFrame:");
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v44 = objc_msgSend((id)objc_opt_self(AETestDriver), "shared");
    if (v44)
    {
      v45 = v44;
      objc_msgSend(v44, "postEvent:sender:", kBETestDriverOpenAnimationSetupEnd, v27);

      v48[0] = v37;
      v48[1] = v39;
      v48[2] = v41;
      v48[3] = v43;
      v49 = 0;
      v46 = v28;
      sub_1003C477C((uint64_t)a4, a3, a6, a7, a8, v28, (uint64_t)v48, 0, v29, v31, v33, v35);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003C477C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12)
{
  uint64_t v12;
  uint64_t v13;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  void **aBlock;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;

  v13 = v12;
  v23 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 325.0, 30.0, 0.0, 0.0);
  v24 = (void *)objc_opt_self(AETestDriver);
  v25 = objc_msgSend(v24, "shared");
  if (!v25)
  {
    __break(1u);
    goto LABEL_6;
  }
  v26 = v25;
  objc_msgSend(v25, "postEvent:sender:", kBETestDriverOpenAnimationRevealStart, v13);

  v27 = objc_msgSend(v24, "shared");
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v28 = v27;
  objc_msgSend(v27, "postEvent:sender:", kBETestDriverOpenAnimationRevealEnd, v13);

  v29 = objc_msgSend(v24, "shared");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "postEvent:sender:", kBETestDriverOpenAnimationZoomStart, v13);

    v52 = (id)objc_opt_self(UIView);
    objc_msgSend(v23, "settlingDuration");
    v32 = v31;
    objc_msgSend(v23, "mass");
    v34 = v33;
    objc_msgSend(v23, "stiffness");
    v36 = v35;
    objc_msgSend(v23, "damping");
    v38 = v37;
    v39 = swift_allocObject(&unk_1009025B8, 136, 7);
    *(_QWORD *)(v39 + 16) = a3;
    *(_QWORD *)(v39 + 24) = a2;
    *(_QWORD *)(v39 + 32) = a4;
    *(_QWORD *)(v39 + 40) = a5;
    *(double *)(v39 + 48) = a9;
    *(double *)(v39 + 56) = a10;
    *(double *)(v39 + 64) = a11;
    *(double *)(v39 + 72) = a12;
    *(_QWORD *)(v39 + 80) = a6;
    sub_100025B3C(a7, v39 + 88, &qword_1009D4AD0);
    *(_QWORD *)(v39 + 128) = a8;
    v60 = sub_1003C5784;
    v61 = v39;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_1000147F0;
    v59 = &unk_1009025D0;
    v40 = _Block_copy(&aBlock);
    v41 = v61;
    v42 = a8;
    v43 = a3;
    v44 = a2;
    v45 = a4;
    v46 = a5;
    v47 = a6;
    swift_release(v41);
    v48 = swift_allocObject(&unk_1009023E8, 24, 7);
    swift_unknownObjectWeakInit(v48 + 16);
    v49 = swift_allocObject(&unk_100902608, 32, 7);
    *(_QWORD *)(v49 + 16) = v48;
    *(_QWORD *)(v49 + 24) = a1;
    v60 = sub_1003C57D0;
    v61 = v49;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_10004DCB4;
    v59 = &unk_100902620;
    v50 = _Block_copy(&aBlock);
    v51 = v61;
    swift_unknownObjectRetain(a1);
    swift_release(v51);
    objc_msgSend(v52, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v40, v50, v32, 0.0, v34, v36, v38, 0.0);
    _Block_release(v50);
    _Block_release(v40);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1003C4B08(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, double a8, double a9, double a10, double a11)
{
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id result;
  _QWORD v31[5];
  _BYTE v32[32];
  char v33;

  sub_100025B3C(a6, (uint64_t)v31, &qword_1009D4AD0);
  v22 = *(double *)v31;
  v23 = *(double *)&v31[1];
  v25 = *(double *)&v31[2];
  v24 = *(double *)&v31[3];
  if (a1)
  {
    objc_msgSend(a2, "bounds");
    objc_msgSend(a1, "setFrame:");
    objc_msgSend(a2, "center");
    objc_msgSend(a1, "setCenter:");
  }
  objc_msgSend(a3, "setEffect:", 0);
  objc_msgSend(a4, "setFrame:", a8, a9, a10, a11);
  objc_msgSend(a4, "_setContinuousCornerRadius:", 0.0);
  if (a5)
  {
    sub_100025B3C(a6, (uint64_t)v32, &qword_1009D4AD0);
    if (v33)
      v26 = a8;
    else
      v26 = v22;
    if (v33)
      v27 = a9;
    else
      v27 = v23;
    if (v33)
      v28 = a10;
    else
      v28 = v25;
    if (v33)
      v29 = a11;
    else
      v29 = v24;
    objc_msgSend(a5, "setFrame:", v26, v27, v28, v29);
    objc_msgSend(a5, "setAlpha:", 1.0);
    objc_msgSend(a5, "_setContinuousCornerRadius:", 0.0);
  }
  result = objc_msgSend(a7, "setFrame:", a8, a9, a10, a11);
  if (a7)
  {
    objc_msgSend(a7, "setAlpha:", 1.0);
    return objc_msgSend(a7, "_setContinuousCornerRadius:", 0.0);
  }
  return result;
}

void sub_1003C4CD0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  double v9;
  _QWORD v10[5];
  uint64_t v11;

  v5 = objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_100902658, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1003C57D8;
  *(_QWORD *)(v6 + 24) = a2;
  v10[4] = sub_100238D90;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100605AE4;
  v10[3] = &unk_100902670;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_retain(a2);
  swift_retain(v6);
  objc_msgSend((id)v5, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v6, "", 71, 212, 48, 1);
  *(_QWORD *)&v9 = swift_release(v6).n128_u64[0];
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a3, "completeTransition:", objc_msgSend(a3, "transitionWasCancelled", v9) ^ 1);
    swift_release(a2);
  }
}

void sub_1003C4E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR___BKCloseBookAnimator_coverSource);
    swift_unknownObjectRetain(v4);

    if (v4)
    {
      objc_msgSend(v4, "coverAnimationSourceFinalize");
      swift_unknownObjectRelease(v4);
    }
  }
  swift_beginAccess(v1, v24, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v5 + OBJC_IVAR___BKCloseBookAnimator_animationComplete;
    swift_beginAccess(v5 + OBJC_IVAR___BKCloseBookAnimator_animationComplete, v23, 0, 0);
    v8 = *(void (**)(void))v7;
    v9 = *(_QWORD *)(v7 + 8);
    sub_10002ACF0((uint64_t)v8, v9);

    if (v8)
    {
      v8();
      sub_10002AD00((uint64_t)v8, v9);
    }
  }
  v10 = (void *)objc_opt_self(AETestDriver);
  v11 = objc_msgSend(v10, "shared");
  if (v11)
  {
    v12 = v11;
    v13 = (void *)kBETestDriverOpenAnimationZoomEnd;
    swift_beginAccess(v1, v22, 0, 0);
    v14 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    v15 = v13;
    objc_msgSend(v12, "postEvent:sender:", v15, v14);

    v16 = objc_msgSend(v10, "shared");
    if (v16)
    {
      v17 = v16;
      v18 = (void *)kBETestDriverOpenAnimationEnd;
      swift_beginAccess(v1, v21, 0, 0);
      v19 = (void *)swift_unknownObjectWeakLoadStrong(v1);
      v20 = v18;
      objc_msgSend(v17, "postEvent:sender:", v20, v19);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_1003C5018(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  void *v7;
  double v8;
  double MidX;
  double v10;
  double v11;
  double v12;
  CGFloat width;
  double v14;
  CGFloat height;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  void *v26;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  id v41;
  id v42;
  id v43;
  char v44;
  double v45;
  double v46;
  double v47;
  double v48;
  CGFloat x;
  double v50;
  CGFloat y;
  double MaxY;
  double v53;
  double MinY;
  double v55;
  double v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v7 = *(void **)(v5 + OBJC_IVAR___BKCloseBookAnimator_contentHelper);
  if (v7)
  {
    objc_msgSend(v7, "openAnimationSourceRect");
    MidX = v8;
    v11 = v10;
    width = v12;
    height = v14;
  }
  else
  {
    v26 = *(void **)(v5 + OBJC_IVAR___BKCloseBookAnimator_coverSource);
    width = 0.0;
    if (v26)
    {
      height = 0.0;
      MidX = 0.0;
      v11 = 0.0;
      if (a2)
      {
        swift_unknownObjectRetain(*(_QWORD *)(v5 + OBJC_IVAR___BKCloseBookAnimator_coverSource));
        v31 = a2;
        objc_msgSend(v26, "coverAnimationSourceInvalidateFrame");
        objc_msgSend(v26, "coverAnimationSourceFrame");
        v33 = v32;
        v35 = v34;
        v37 = v36;
        v39 = v38;
        v40 = objc_msgSend(v26, "coverAnimationSourceReferenceView");
        v67.origin.x = 0.0;
        v67.origin.y = 0.0;
        v67.size.width = 0.0;
        v67.size.height = 0.0;
        v60.origin.x = v33;
        v60.origin.y = v35;
        v60.size.width = v37;
        v60.size.height = v39;
        v41 = (id)CGRectEqualToRect(v60, v67);
        if ((v41 & 1) == 0)
        {
          if (!v40
            || (sub_100238628(),
                v42 = v31,
                v43 = v40,
                v44 = static NSObject.== infix(_:_:)(v43, v42),
                v43,
                v42,
                (v44 & 1) == 0))
          {
            v41 = objc_msgSend(v31, "convertRect:fromView:", v40, v33, v35, v37, v39);
            v33 = v45;
            v35 = v46;
            v37 = v47;
            v39 = v48;
          }
        }
        width = v37;
        height = v39;
        v11 = v35;
        MidX = v33;
        if ((a5 & 1) == 0)
        {
          v61.origin.x = CGRectFitRectInRect(v41, 0.0, 0.0, *(double *)&a3, *(double *)&a4, v33, v35, v37, v39);
          x = v61.origin.x;
          v56 = v39;
          v50 = v37;
          y = v61.origin.y;
          width = v61.size.width;
          height = v61.size.height;
          MidX = v33 + CGRectGetMinX(v61);
          v62.origin.x = x;
          v62.origin.y = y;
          v37 = v50;
          v39 = v56;
          v62.size.width = width;
          v62.size.height = height;
          v11 = v35 + CGRectGetMinY(v62);
        }
        if (objc_msgSend(v26, "coverAnimationSourceAlignment") == (id)2)
        {
          v63.origin.x = v33;
          v63.origin.y = v35;
          v63.size.width = v37;
          v63.size.height = v39;
          MaxY = CGRectGetMaxY(v63);
          v64.origin.x = MidX;
          v64.origin.y = v11;
          v64.size.width = width;
          v64.size.height = height;
          v53 = MaxY - CGRectGetHeight(v64);
          v65.origin.x = MidX;
          v65.origin.y = v11;
          v65.size.width = width;
          v65.size.height = height;
          MinY = CGRectGetMinY(v65);
          swift_unknownObjectRelease(v26);

          v55 = sub_1003C57F0(v53 - MinY);
          if (v55 > 0.0)
            v11 = v11 + v55;
        }
        else
        {
          swift_unknownObjectRelease(v26);

        }
      }
    }
    else
    {
      height = 0.0;
      MidX = 0.0;
      v11 = 0.0;
    }
  }
  v66.origin.x = 0.0;
  v66.origin.y = 0.0;
  v66.size.width = 0.0;
  v66.size.height = 0.0;
  v57.origin.x = MidX;
  v57.origin.y = v11;
  v57.size.width = width;
  v57.size.height = height;
  if (CGRectEqualToRect(v57, v66))
  {
    v16 = objc_msgSend(a1, "containerView");
    objc_msgSend(v16, "bounds");
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    v58.origin.x = v18;
    v58.origin.y = v20;
    v58.size.width = v22;
    v58.size.height = v24;
    MidX = CGRectGetMidX(v58);
    v59.origin.x = v18;
    v59.origin.y = v20;
    v59.size.width = v22;
    v59.size.height = v24;
    CGRectGetMidY(v59);
  }
  return MidX;
}

uint64_t sub_1003C53A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C53CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 112, 7);
}

void sub_1003C5420(void *a1)
{
  uint64_t v1;

  sub_1003C44E8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 64), *(void **)(v1 + 72), *(void **)(v1 + 80), *(void **)(v1 + 88), *(void **)(v1 + 96), *(void **)(v1 + 104), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56));
}

id sub_1003C5440(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return (id)swift_retain(a2);
  if (!a3)
    return result;
  return result;
}

void CloseBookAnimator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.CloseBookAnimator", 23, "init()", 6, 0);
  __break(1u);
}

id CloseBookAnimator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloseBookAnimator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void destroy for CloseBookAnimator.CrossFadeContent(uint64_t a1)
{
  sub_1003C3308(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Books17CloseBookAnimatorC16CrossFadeContentOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1003C5440(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CloseBookAnimator.CrossFadeContent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1003C5440(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1003C3308(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CloseBookAnimator.CrossFadeContent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1003C3308(v4, v5, v6);
  return a1;
}

uint64_t _s17InteractingActionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s17InteractingActionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1003C56CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1003C56E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CloseBookAnimator.CrossFadeContent()
{
  return &type metadata for CloseBookAnimator.CrossFadeContent;
}

uint64_t sub_1003C570C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003C5730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003C360C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1003C5738()
{
  id *v0;

  return swift_deallocObject(v0, 136, 7);
}

id sub_1003C5784()
{
  uint64_t v0;

  return sub_1003C4B08(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 80), v0 + 88, *(void **)(v0 + 128), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72));
}

uint64_t sub_1003C57A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003C57D0(uint64_t a1)
{
  uint64_t v1;

  sub_1003C4CD0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1003C57D8()
{
  uint64_t v0;

  sub_1003C4E18(v0);
}

uint64_t sub_1003C57E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1003C57F0(double a1)
{
  return round(a1);
}

void sub_1003C5828(char a1, double a2)
{
  char *v2;
  double v4;
  uint64_t v6;
  void *ObjCClassFromMetadata;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD aBlock[5];
  uint64_t v14;

  if (a2 == 0.0)
  {
    if ((a1 & 1) != 0)
      v4 = 0.0;
    else
      v4 = 1.0;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_separator], "setAlpha:", v4);
    v12 = sub_1003C5C6C();
    objc_msgSend(v12, "setAlpha:", v4);

  }
  else
  {
    v6 = type metadata accessor for AudiobookTOCHeaderView();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v6);
    v8 = swift_allocObject(&unk_1009026A8, 25, 7);
    *(_QWORD *)(v8 + 16) = v2;
    *(_BYTE *)(v8 + 24) = a1 & 1;
    aBlock[4] = sub_1003C9550;
    v14 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1009026C0;
    v9 = _Block_copy(aBlock);
    v10 = v14;
    v11 = v2;
    swift_release(v10);
    objc_msgSend(ObjCClassFromMetadata, "animateWithDuration:animations:", v9, a2);
    _Block_release(v9);
  }
}

void sub_1003C5964()
{
  qword_1009DFA48 = 0x4039000000000000;
}

double sub_1003C5974()
{
  id v0;
  double v1;
  double v2;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  result = 1.0 / v2;
  *(double *)&qword_1009DFA50 = 1.0 / v2;
  return result;
}

id sub_1003C59DC(uint64_t a1)
{
  return sub_1003C5BF4(a1, (SEL *)&selRef_systemGray6Color, &qword_1009DFA58);
}

void sub_1003C59F0()
{
  qword_1009DFA60 = 0x4028000000000000;
  *(_QWORD *)algn_1009DFA68 = 0;
  qword_1009DFA70 = 0;
  qword_1009DFA78 = 0x4028000000000000;
}

__n128 sub_1003C5A08()
{
  __n128 result;

  __asm { FMOV            V0.2D, #30.0 }
  xmmword_1009DFA80 = (__int128)result;
  return result;
}

id sub_1003C5A1C(uint64_t a1)
{
  return sub_1003C5A44(a1, (double *)&UIFontWeightSemibold, &qword_1009DFA90);
}

id sub_1003C5A30(uint64_t a1)
{
  return sub_1003C5A44(a1, (double *)&UIFontWeightRegular, &qword_1009DFA98);
}

id sub_1003C5A44(uint64_t a1, double *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, *a2);
  *a3 = result;
  return result;
}

void sub_1003C5A90()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(TUIFontSpec), "defaultFontSpec");
  v1 = v0;
  if (v0)
  {
    v2 = objc_msgSend(v0, "fontSpecWithTextStyle:", UIFontTextStyleFootnote);

    if (v2)
    {
      v1 = objc_msgSend(v2, "font");

    }
    else
    {
      v1 = 0;
    }
  }
  qword_1009DFAA0 = (uint64_t)v1;
}

id sub_1003C5B30()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleBody, UIContentSizeCategoryAccessibilityLarge);
  if (result)
    qword_1009DFAA8 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

void sub_1003C5B88()
{
  qword_1009DFAB0 = 0x4034000000000000;
}

void sub_1003C5B98()
{
  qword_1009DFAB8 = 0x402A000000000000;
}

void sub_1003C5BA8()
{
  qword_1009DFAC0 = 0x4000000000000000;
}

void sub_1003C5BB8()
{
  qword_1009DFAC8 = 0x403C000000000000;
}

int64x2_t sub_1003C5BC8()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404E000000000000uLL);
  xmmword_1009DFAD0 = (__int128)result;
  return result;
}

id sub_1003C5BE0(uint64_t a1)
{
  return sub_1003C5BF4(a1, (SEL *)&selRef_blackColor, &qword_1009DFAE0);
}

id sub_1003C5BF4(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

void sub_1003C5C34()
{
  qword_1009DFAE8 = 0x4014000000000000;
}

double sub_1003C5C44()
{
  double result;

  result = 0.0;
  xmmword_1009DFAF0 = xmmword_100720360;
  return result;
}

void sub_1003C5C5C()
{
  qword_1009DFB00 = 0x4000000000000000;
}

id sub_1003C5C6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView____lazy_storage___effectView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView____lazy_storage___effectView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView____lazy_storage___effectView);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
    v3 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v4);
    objc_msgSend(v3, "setAutoresizingMask:", 18);

    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1003C5D1C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v1 = sub_10004CFD4(&qword_1009D4B80);
  v2 = swift_allocObject(v1, 128, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100712B60;
  if (qword_1009CE2B0 != -1)
    swift_once(&qword_1009CE2B0, sub_1003C59DC);
  v3 = objc_msgSend((id)qword_1009DFA58, "CGColor");
  type metadata accessor for CGColor(0);
  v5 = v4;
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 32) = v3;
  v6 = objc_msgSend((id)qword_1009DFA58, "CGColor");
  *(_QWORD *)(v2 + 88) = v5;
  *(_QWORD *)(v2 + 64) = v6;
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v8 = objc_msgSend(v7, "CGColor");

  *(_QWORD *)(v2 + 120) = v5;
  *(_QWORD *)(v2 + 96) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "setColors:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

  objc_msgSend(v0, "setStartPoint:", 0.0, 0.0);
  objc_msgSend(v0, "setEndPoint:", 1.0, 0.0);
  return v0;
}

id sub_1003C5EB0()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v1 = objc_msgSend(v0, "layer");
  if (qword_1009CE328 != -1)
    swift_once(&qword_1009CE328, sub_1003C5C5C);
  objc_msgSend(v1, "setCornerRadius:", *(double *)&qword_1009DFB00);

  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setMasksToBounds:", 1);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setMinificationFilter:", kCAFilterTrilinear);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAccessibilityIgnoresInvertColors:", 1);
  return v0;
}

id sub_1003C5FD4()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  double v11;
  double v12;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v1);

  v2 = objc_msgSend(v0, "layer");
  if (qword_1009CE310 != -1)
    swift_once(&qword_1009CE310, sub_1003C5BE0);
  v3 = objc_msgSend((id)qword_1009DFAE0, "CGColor");
  objc_msgSend(v2, "setShadowColor:", v3);

  v4 = objc_msgSend(v0, "layer");
  LODWORD(v5) = 0.5;
  objc_msgSend(v4, "setShadowOpacity:", v5);

  v6 = objc_msgSend(v0, "layer");
  if (qword_1009CE318 != -1)
    swift_once(&qword_1009CE318, sub_1003C5C34);
  objc_msgSend(v6, "setShadowRadius:", *(double *)&qword_1009DFAE8);

  v7 = objc_msgSend(v0, "layer");
  if (qword_1009CE320 != -1)
    swift_once(&qword_1009CE320, sub_1003C5C44);
  objc_msgSend(v7, "setShadowOffset:", xmmword_1009DFAF0);

  v8 = objc_msgSend(v0, "layer");
  objc_msgSend(v8, "setShouldRasterize:", 1);

  v9 = objc_msgSend(v0, "layer");
  v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v10, "scale");
  v12 = v11;

  objc_msgSend(v9, "setRasterizationScale:", v12);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v0;
}

id sub_1003C6268()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  NSString v29;
  _QWORD v31[2];

  v31[0] = type metadata accessor for Locale(0);
  v0 = *(_QWORD *)(v31[0] - 8);
  __chkstk_darwin(v31[0]);
  v2 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)v31 - v4;
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v31 - v11;
  v13 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 7);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "lightGrayColor");
  objc_msgSend(v13, "setTintColor:", v14);

  v15 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v13, "addInteraction:", v15);

  objc_msgSend(v13, "setShowsLargeContentViewer:", 1);
  v16 = v13;
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

  objc_msgSend(v16, "setLargeContentImage:", v18);
  v19 = v16;
  v20 = String.LocalizationValue.init(stringLiteral:)(0x65736F6C43, 0xE500000000000000);
  static Locale.current.getter(v20);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v21 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v24 = v31[0];
  (*(void (**)(char *, char *, _QWORD))(v0 + 16))(v2, v5, v31[0]);
  String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v23, v2, "Accessibility string for a close button", 39, 2);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v0 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setLargeContentTitle:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v28 = v19;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setAccessibilityIdentifier:", v29);

  return v28;
}

void *sub_1003C65CC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v21;

  v1 = type metadata accessor for UIButton.Configuration.CornerStyle(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v21 - v12;
  static UIButton.Configuration.gray()(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for UIButton.Configuration.CornerStyle.large(_:), v1);
  UIButton.Configuration.cornerStyle.setter(v5);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

  if (v15)
  {
    if (qword_1009CE2E0 != -1)
      swift_once(&qword_1009CE2E0, sub_1003C5B30);
    v16 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", qword_1009DFAA8);
    v17 = v16;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v16);
    v18 = v15;
    UIButton.Configuration.image.setter(v15);

  }
  type metadata accessor for SupplementalContentButton();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  v19 = (void *)UIButton.init(configuration:primaryAction:)(v9, 0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "setHidden:", 1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  return v19;
}

char *sub_1003C67F4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  char *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  Class isa;
  char *v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  Class v146;
  uint64_t v147;
  Class v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[4];
  _QWORD v162[4];
  objc_super v163;

  v9 = &v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImage] = 0;
  v10 = &v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining];
  *v12 = 0;
  v12[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentCount] = 0;
  v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_compactMode] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView____lazy_storage___effectView] = 0;
  v13 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel;
  v14 = objc_allocWithZone((Class)UILabel);
  v15 = v4;
  v16 = objc_msgSend(v14, "init");
  if (qword_1009CE2C8 != -1)
    swift_once(&qword_1009CE2C8, sub_1003C5A1C);
  objc_msgSend(v16, "setFont:", qword_1009DFA90);
  objc_msgSend(v16, "setLineBreakMode:", 2);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v4[v13] = v16;
  v17 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleGradientLayer;
  *(_QWORD *)&v15[v17] = sub_1003C5D1C();
  v18 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel;
  v19 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  if (qword_1009CE2D0 != -1)
    swift_once(&qword_1009CE2D0, sub_1003C5A30);
  objc_msgSend(v19, "setFont:", qword_1009DFA98);
  v20 = (void *)objc_opt_self(UIColor);
  v21 = objc_msgSend(v20, "bc_booksSecondaryLabelColor");
  objc_msgSend(v19, "setTextColor:", v21);

  objc_msgSend(v19, "setLineBreakMode:", 2);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v15[v18] = v19;
  v22 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorGradientLayer;
  *(_QWORD *)&v15[v22] = sub_1003C5D1C();
  v23 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel;
  v24 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  if (qword_1009CE2D8 != -1)
    swift_once(&qword_1009CE2D8, sub_1003C5A90);
  objc_msgSend(v24, "setFont:", qword_1009DFAA0);
  v25 = objc_msgSend(v20, "bc_booksSecondaryLabelColor");
  objc_msgSend(v24, "setTextColor:", v25);

  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v15[v23] = v24;
  v26 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImageView;
  *(_QWORD *)&v15[v26] = sub_1003C5EB0();
  v27 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverView;
  *(_QWORD *)&v15[v27] = sub_1003C5FD4();
  v28 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_separator;
  v29 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v30 = objc_msgSend(v20, "separatorColor");
  objc_msgSend(v29, "setBackgroundColor:", v30);

  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v15[v28] = v29;
  v31 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_dismissButton;
  *(_QWORD *)&v15[v31] = sub_1003C6268();
  v32 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton;
  *(_QWORD *)&v15[v32] = sub_1003C65CC(v33);
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentVisibleConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_cachedGroupedLabelsAXElement] = 0;

  v163.receiver = v15;
  v163.super_class = (Class)type metadata accessor for AudiobookTOCHeaderView();
  v34 = (char *)objc_msgSendSuper2(&v163, "initWithFrame:", a1, a2, a3, a4);
  v35 = objc_msgSend(v20, "clearColor");
  objc_msgSend(v34, "setBackgroundColor:", v35);

  v160 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel;
  v36 = objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel], "layer");
  objc_msgSend(v36, "setMask:", *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleGradientLayer]);

  v158 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel;
  v37 = objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel], "layer");
  objc_msgSend(v37, "setMask:", *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorGradientLayer]);

  v159 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_dismissButton;
  objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_dismissButton], "addTarget:action:forControlEvents:", v34, "didDismiss", 64);
  v156 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton;
  objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton], "addTarget:action:forControlEvents:", v34, "didSelectSupplementalContent", 64);
  v38 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverView;
  v39 = *(void **)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverView];
  v40 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImageView;
  v41 = *(void **)&v34[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImageView];
  objc_msgSend(v39, "addSubview:", v41);
  v42 = (void *)objc_opt_self(NSLayoutConstraint);
  v155 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v43 = swift_allocObject(v155, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1007118C0;
  v44 = objc_msgSend(v41, "widthAnchor");
  v45 = objc_msgSend(v39, "widthAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:multiplier:", v45, 1.0);

  *(_QWORD *)(v43 + 32) = v46;
  v47 = objc_msgSend(*(id *)&v34[v40], "heightAnchor");
  v48 = objc_msgSend(*(id *)&v34[v38], "heightAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:multiplier:", v48, 1.0);

  *(_QWORD *)(v43 + 40) = v49;
  v162[0] = v43;
  specialized Array._endMutation()(v50);
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v52 = v34;
  v53 = sub_1003C5C6C();
  objc_msgSend(v52, "addSubview:", v53);

  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v34[v160]);
  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v34[v158]);
  v54 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel;
  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v52[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel]);
  v157 = v38;
  v55 = *(void **)&v34[v38];
  objc_msgSend(v52, "addSubview:", v55);
  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v34[v159]);
  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v34[v156]);
  v154 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_separator;
  objc_msgSend(v52, "addSubview:", *(_QWORD *)&v52[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_separator]);
  v56 = swift_allocObject(v155, 48, 7);
  *(_OWORD *)(v56 + 16) = xmmword_1007118C0;
  v57 = objc_msgSend(v55, "centerYAnchor");
  v58 = objc_msgSend(v52, "centerYAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v56 + 32) = v59;
  v60 = objc_msgSend(*(id *)&v52[v54], "bottomAnchor");
  v61 = objc_msgSend(v52, "bottomAnchor");
  if (qword_1009CE2A0 != -1)
    swift_once(&qword_1009CE2A0, sub_1003C5964);
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v61, -*(double *)&qword_1009DFA48);

  *(_QWORD *)(v56 + 40) = v62;
  v162[0] = v56;
  specialized Array._endMutation()(v63);
  v64 = *(_QWORD *)&v52[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints];
  v153 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints;
  *(_QWORD *)&v52[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints] = v56;
  swift_bridgeObjectRelease(v64);
  v65 = swift_allocObject(v155, 72, 7);
  *(_OWORD *)(v65 + 16) = xmmword_1007118E0;
  v66 = *(void **)&v34[v38];
  v162[3] = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  v162[0] = v66;
  v67 = *(void **)&v34[v156];
  v161[3] = type metadata accessor for SupplementalContentButton();
  v161[0] = v67;
  v68 = v66;
  v69 = v67;
  *(_QWORD *)(v65 + 32) = sub_1003C7C98(v162, 10, 0, v161, 3, 0.5, 0.0);
  v70 = objc_msgSend(*(id *)&v52[v54], "bottomAnchor");
  v71 = objc_msgSend(v69, "topAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v71, -*(double *)&qword_1009DFA48);

  *(_QWORD *)(v65 + 40) = v72;
  v73 = objc_msgSend(*(id *)&v34[v156], "leadingAnchor");
  v74 = objc_msgSend(v52, "safeAreaLayoutGuide");
  v75 = objc_msgSend(v74, "leadingAnchor");

  v76 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v75, *(double *)&qword_1009DFA48);
  *(_QWORD *)(v65 + 48) = v76;
  v77 = objc_msgSend(*(id *)&v34[v156], "trailingAnchor");
  v78 = objc_msgSend(v52, "safeAreaLayoutGuide");
  v79 = objc_msgSend(v78, "trailingAnchor");

  v80 = objc_msgSend(v77, "constraintEqualToAnchor:constant:", v79, -*(double *)&qword_1009DFA48);
  *(_QWORD *)(v65 + 56) = v80;
  v81 = objc_msgSend(*(id *)&v34[v156], "bottomAnchor");
  v82 = objc_msgSend(v52, "bottomAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v82, -*(double *)&qword_1009DFA48);

  *(_QWORD *)(v65 + 64) = v83;
  v162[0] = v65;
  specialized Array._endMutation()(v84);
  v85 = *(_QWORD *)&v52[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentVisibleConstraints];
  *(_QWORD *)&v52[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentVisibleConstraints] = v162[0];
  swift_bridgeObjectRelease(v85);
  v86 = swift_allocObject(v155, 192, 7);
  *(_OWORD *)(v86 + 16) = xmmword_10071B8A0;
  v87 = objc_msgSend(*(id *)&v34[v38], "leadingAnchor");
  v88 = objc_msgSend(v52, "safeAreaLayoutGuide");
  v89 = objc_msgSend(v88, "leadingAnchor");

  v90 = objc_msgSend(v87, "constraintEqualToAnchor:constant:", v89, *(double *)&qword_1009DFA48);
  *(_QWORD *)(v86 + 32) = v90;
  v91 = objc_msgSend(*(id *)&v34[v157], "widthAnchor");
  if (qword_1009CE308 != -1)
    swift_once(&qword_1009CE308, sub_1003C5BC8);
  v92 = objc_msgSend(v91, "constraintEqualToConstant:", *(double *)&xmmword_1009DFAD0);

  *(_QWORD *)(v86 + 40) = v92;
  v93 = objc_msgSend(*(id *)&v34[v157], "heightAnchor");
  v94 = objc_retainAutoreleasedReturnValue(objc_msgSend(v93, "constraintEqualToConstant:", *((double *)&xmmword_1009DFAD0
                                                                                           + 1)));

  *(_QWORD *)(v86 + 48) = v94;
  v95 = objc_msgSend(*(id *)&v34[v160], "topAnchor");
  v96 = objc_msgSend(v52, "topAnchor");
  v97 = objc_msgSend(v95, "constraintEqualToAnchor:constant:", v96, *(double *)&qword_1009DFA48);

  *(_QWORD *)(v86 + 56) = v97;
  v98 = objc_msgSend(*(id *)&v34[v160], "leadingAnchor");
  v99 = objc_msgSend(*(id *)&v34[v157], "trailingAnchor");
  if (qword_1009CE2F0 != -1)
    swift_once(&qword_1009CE2F0, sub_1003C5B98);
  v100 = objc_msgSend(v98, "constraintEqualToAnchor:constant:", v99, *(double *)&qword_1009DFAB8);

  *(_QWORD *)(v86 + 64) = v100;
  v101 = objc_msgSend(*(id *)&v34[v160], "trailingAnchor");
  v102 = objc_msgSend(*(id *)&v34[v159], "leadingAnchor");
  if (qword_1009CE2E8 != -1)
    swift_once(&qword_1009CE2E8, sub_1003C5B88);
  v103 = objc_msgSend(v101, "constraintEqualToAnchor:constant:", v102, -*(double *)&qword_1009DFAB0);

  *(_QWORD *)(v86 + 72) = v103;
  v104 = objc_msgSend(*(id *)&v34[v158], "topAnchor");
  v105 = objc_msgSend(*(id *)&v34[v160], "bottomAnchor");
  if (qword_1009CE2F8 != -1)
    swift_once(&qword_1009CE2F8, sub_1003C5BA8);
  v106 = objc_msgSend(v104, "constraintGreaterThanOrEqualToAnchor:constant:", v105, *(double *)&qword_1009DFAC0);

  *(_QWORD *)(v86 + 80) = v106;
  v107 = objc_msgSend(*(id *)&v34[v158], "leadingAnchor");
  v108 = objc_msgSend(*(id *)&v34[v160], "leadingAnchor");
  v109 = objc_msgSend(v107, "constraintEqualToAnchor:", v108);

  *(_QWORD *)(v86 + 88) = v109;
  v110 = objc_msgSend(*(id *)&v34[v158], "trailingAnchor");
  v111 = objc_msgSend(*(id *)&v34[v160], "trailingAnchor");
  v112 = objc_msgSend(v110, "constraintEqualToAnchor:", v111);

  *(_QWORD *)(v86 + 96) = v112;
  v113 = objc_msgSend(*(id *)&v52[v54], "topAnchor");
  v114 = objc_msgSend(*(id *)&v34[v158], "bottomAnchor");
  v115 = objc_msgSend(v113, "constraintGreaterThanOrEqualToAnchor:constant:", v114, *(double *)&qword_1009DFAC0);

  *(_QWORD *)(v86 + 104) = v115;
  v116 = objc_msgSend(*(id *)&v52[v54], "leadingAnchor");
  v117 = objc_msgSend(*(id *)&v34[v160], "leadingAnchor");
  v118 = objc_msgSend(v116, "constraintEqualToAnchor:", v117);

  *(_QWORD *)(v86 + 112) = v118;
  v119 = objc_msgSend(*(id *)&v52[v54], "trailingAnchor");
  v120 = objc_msgSend(*(id *)&v34[v160], "trailingAnchor");
  v121 = objc_msgSend(v119, "constraintEqualToAnchor:", v120);

  *(_QWORD *)(v86 + 120) = v121;
  v122 = objc_msgSend(*(id *)&v34[v159], "topAnchor");
  v123 = objc_msgSend(v52, "topAnchor");
  if (qword_1009CE2B8 != -1)
    swift_once(&qword_1009CE2B8, sub_1003C59F0);
  v124 = objc_msgSend(v122, "constraintEqualToAnchor:constant:", v123, *(double *)&qword_1009DFA60);

  *(_QWORD *)(v86 + 128) = v124;
  v125 = objc_msgSend(*(id *)&v34[v159], "trailingAnchor");
  v126 = objc_msgSend(v52, "safeAreaLayoutGuide");
  v127 = objc_msgSend(v126, "trailingAnchor");

  v128 = objc_msgSend(v125, "constraintEqualToAnchor:constant:", v127, -*(double *)&qword_1009DFA78);
  *(_QWORD *)(v86 + 136) = v128;
  v129 = objc_msgSend(*(id *)&v34[v159], "widthAnchor");
  if (qword_1009CE2C0 != -1)
    swift_once(&qword_1009CE2C0, sub_1003C5A08);
  v130 = objc_msgSend(v129, "constraintEqualToConstant:", *(double *)&xmmword_1009DFA80);

  *(_QWORD *)(v86 + 144) = v130;
  v131 = objc_msgSend(*(id *)&v34[v159], "heightAnchor");
  v132 = objc_retainAutoreleasedReturnValue(objc_msgSend(v131, "constraintEqualToConstant:", *((double *)&xmmword_1009DFA80
                                                                                             + 1)));

  *(_QWORD *)(v86 + 152) = v132;
  v133 = objc_msgSend(*(id *)&v52[v154], "heightAnchor");
  if (qword_1009CE2A8 != -1)
    swift_once(&qword_1009CE2A8, sub_1003C5974);
  v134 = objc_msgSend(v133, "constraintEqualToConstant:", *(double *)&qword_1009DFA50);

  *(_QWORD *)(v86 + 160) = v134;
  v135 = objc_msgSend(*(id *)&v52[v154], "leadingAnchor");
  v136 = objc_msgSend(v52, "leadingAnchor");
  v137 = objc_msgSend(v135, "constraintEqualToAnchor:", v136);

  *(_QWORD *)(v86 + 168) = v137;
  v138 = objc_msgSend(*(id *)&v52[v154], "bottomAnchor");
  v139 = objc_msgSend(v52, "bottomAnchor");
  v140 = objc_msgSend(v138, "constraintEqualToAnchor:", v139);

  *(_QWORD *)(v86 + 176) = v140;
  v141 = objc_msgSend(*(id *)&v52[v154], "trailingAnchor");
  v142 = objc_msgSend(v52, "trailingAnchor");
  v143 = objc_msgSend(v141, "constraintEqualToAnchor:", v142);

  *(_QWORD *)(v86 + 184) = v143;
  v162[0] = v86;
  specialized Array._endMutation()(v144);
  v145 = v162[0];
  v146 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v42, "activateConstraints:", v146, swift_bridgeObjectRelease(v145).n128_f64[0]);

  v147 = *(_QWORD *)&v52[v153];
  swift_bridgeObjectRetain(v147);
  v148 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v42, "activateConstraints:", v148, swift_bridgeObjectRelease(v147).n128_f64[0]);

  sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
  v149 = v52;
  v150 = static UITraitCollection.bc_allAPITraits.getter();
  v151 = UIView.registerForTraitChanges(_:action:)(v150, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_unknownObjectRelease(v151);
  swift_bridgeObjectRelease(v150);

  return v149;
}

id sub_1003C7C98(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;

  v8 = v7;
  v16 = a1[3];
  v17 = sub_10003F198(a1, v16);
  v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
  v19 = a4[3];
  if (v19)
  {
    v20 = sub_10003F198(a4, a4[3]);
    v30 = a5;
    v31 = a2;
    v21 = a3;
    v22 = *(_QWORD *)(v19 - 8);
    v23 = __chkstk_darwin(v20);
    v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v22 + 16))(v25, v23);
    v26 = _bridgeAnythingToObjectiveC<A>(_:)(v25, v19);
    v27 = *(void (**)(char *, uint64_t))(v22 + 8);
    a3 = v21;
    v27(v25, v19);
    a5 = v30;
    a2 = v31;
    _s5Books15CurrentPageViewVwxx_0(a4);
  }
  else
  {
    v26 = 0;
  }
  v28 = objc_msgSend((id)swift_getObjCClassFromMetadata(v8), "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v18, a2, a3, v26, a5, a6, a7);
  swift_unknownObjectRelease(v18);
  swift_unknownObjectRelease(v26);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return v28;
}

void sub_1003C7E50()
{
  char *v0;
  char *v1;
  void *v2;
  double v3;
  double v4;
  float v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  NSNumber v11;
  uint64_t v12;
  Class isa;
  void *v14;
  double v15;
  double v16;
  float v17;
  void *v18;
  uint64_t v19;
  id v20;
  double v21;
  NSNumber v22;
  Class v23;
  objc_super v24;

  v1 = v0;
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for AudiobookTOCHeaderView();
  objc_msgSendSuper2(&v24, "layoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel];
  objc_msgSend(v2, "bounds");
  if (v3 <= 0.0)
  {
    v5 = 0.9;
  }
  else
  {
    v4 = v3;
    if (qword_1009CE300 != -1)
      swift_once(&qword_1009CE300, sub_1003C5BB8);
    v5 = (v4 - *(double *)&qword_1009DFAC8) / v4;
  }
  v6 = *(void **)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleGradientLayer];
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v8 = swift_allocObject(v7, 56, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1007118D0;
  sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  *(NSNumber *)(v8 + 32) = NSNumber.init(integerLiteral:)(0);
  v9 = objc_allocWithZone((Class)NSNumber);
  *(float *)&v10 = v5;
  *(_QWORD *)(v8 + 40) = objc_msgSend(v9, "initWithFloat:", v10);
  v11.super.super.isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  *(NSNumber *)(v8 + 48) = v11;
  specialized Array._endMutation()(v11.super.super.isa);
  v12 = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setLocations:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  objc_msgSend(v2, "bounds");
  objc_msgSend(v6, "setFrame:");
  v14 = *(void **)&v1[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel];
  objc_msgSend(v14, "bounds");
  if (v15 <= 0.0)
  {
    v17 = 0.9;
  }
  else
  {
    v16 = v15;
    if (qword_1009CE300 != -1)
      swift_once(&qword_1009CE300, sub_1003C5BB8);
    v17 = (v16 - *(double *)&qword_1009DFAC8) / v16;
  }
  v18 = *(void **)&v1[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorGradientLayer];
  v19 = swift_allocObject(v7, 56, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1007118D0;
  *(NSNumber *)(v19 + 32) = NSNumber.init(integerLiteral:)(0);
  v20 = objc_allocWithZone((Class)NSNumber);
  *(float *)&v21 = v17;
  *(_QWORD *)(v19 + 40) = objc_msgSend(v20, "initWithFloat:", v21);
  v22.super.super.isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  *(NSNumber *)(v19 + 48) = v22;
  specialized Array._endMutation()(v22.super.super.isa);
  v23 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "setLocations:", v23, swift_bridgeObjectRelease(v19).n128_f64[0]);

  objc_msgSend(v14, "bounds");
  objc_msgSend(v18, "setFrame:");
  sub_1003C8B54();
}

id sub_1003C827C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel);
  objc_msgSend(v1, "setMarqueeEnabled:", 0);
  objc_msgSend(v1, "setMarqueeEnabled:", 1);
  objc_msgSend(v1, "setMarqueeRunning:", 1);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel);
  objc_msgSend(v2, "setMarqueeEnabled:", 0);
  objc_msgSend(v2, "setMarqueeEnabled:", 1);
  objc_msgSend(v2, "setMarqueeRunning:", 1);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel);
  objc_msgSend(v3, "setMarqueeEnabled:", 0);
  objc_msgSend(v3, "setMarqueeEnabled:", 1);
  return objc_msgSend(v3, "setMarqueeRunning:", 1);
}

uint64_t sub_1003C83BC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_delegate);
  if (result)
  {
    v2 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_delegate);
    if (Strong)
    {
      v4 = Strong;
      objc_msgSend(*(id *)(Strong + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "viewSupplementalContentWithViewController:", Strong);
      swift_unknownObjectRelease(v2);
      v2 = v4;
    }
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_1003C8478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSArray v21;
  Class v22;
  uint64_t v23;
  Class v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  NSString *v43;
  void *v44;
  id v45;
  unint64_t v46;
  id v47;
  NSString v48;
  Class v49;
  id v50;
  void *v51;
  uint64_t v52;
  Class isa;
  uint64_t v54;
  Class v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  __int128 v60;
  uint64_t v61;
  char v62[80];

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - v6;
  *(_QWORD *)&v60 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v56 - v13;
  v61 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentCount;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentCount);
  v16 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton);
  v17 = objc_msgSend(v16, "isHidden", v12);
  if (v15 < 1)
  {
    if ((v17 & 1) == 0)
    {
      objc_msgSend(v16, "setHidden:", 1);
      v51 = (void *)objc_opt_self(NSLayoutConstraint);
      v52 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentVisibleConstraints);
      sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain(v52);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v52).n128_f64[0]);

      v54 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints);
      swift_bridgeObjectRetain(v54);
      v55 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "activateConstraints:", v55, swift_bridgeObjectRelease(v54).n128_f64[0]);

    }
  }
  else if (v17)
  {
    objc_msgSend(v16, "setHidden:", 0);
    v58 = v2;
    v18 = objc_opt_self(NSLayoutConstraint);
    v57 = v1;
    v19 = (void *)v18;
    v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints);
    sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v20);
    v21.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v59 = v16;
    v22 = v21.super.isa;
    objc_msgSend(v19, "deactivateConstraints:", v21.super.isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    v23 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentVisibleConstraints);
    swift_bridgeObjectRetain(v23);
    v24 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "activateConstraints:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

    v25 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007C61D0);
    static Locale.current.getter(v25);
    v26 = v60;
    (*(void (**)(char *, char *, _QWORD))(v8 + 16))(v10, v14, v60);
    v27 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v27);
    v29 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v31 = v57;
    v30 = v58;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v4, v7, v57);
    v32 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v29, v4, "Supplemental content item in audiobook TOC", 42, 2);
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v31);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v26);
    v35 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v36 = swift_allocObject(v35, 72, 7);
    v60 = xmmword_10070CCA0;
    v37 = *(_QWORD *)(v0 + v61);
    *(_OWORD *)(v36 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v36 + 56) = &type metadata for Int;
    *(_QWORD *)(v36 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v36 + 32) = v37;
    String.init(format:_:)(v32, v34, v36);
    v39 = v38;
    swift_bridgeObjectRelease(v34);
    v40 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
    inited = swift_initStackObject(v40, v62);
    *(_OWORD *)(inited + 16) = v60;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v42 = qword_1009CE2E0;
    v43 = NSFontAttributeName;
    if (v42 != -1)
      swift_once(&qword_1009CE2E0, sub_1003C5B30);
    v44 = (void *)qword_1009DFAA8;
    *(_QWORD *)(inited + 64) = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v44;
    v45 = v44;
    v46 = sub_1001DA774(inited);
    v47 = objc_allocWithZone((Class)NSAttributedString);
    v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    type metadata accessor for Key(0);
    sub_100352538();
    v49 = Dictionary._bridgeToObjectiveC()().super.isa;
    v50 = objc_msgSend(v47, "initWithString:attributes:", v48, v49, swift_bridgeObjectRelease(v46).n128_f64[0]);

    objc_msgSend(v59, "setAttributedTitle:forState:", v50, 0);
  }
  sub_1003C8B54();
}

void sub_1003C8A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1007118C0;
  sub_1003C8B54();
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_cachedGroupedLabelsAXElement);
  if (v5)
  {
    v6 = *(void **)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_dismissButton);
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v6;
    v17 = v3;
    specialized Array._endMutation()(v4);
    v7 = v3;
    if (*(uint64_t *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentCount) < 1)
    {
      v15 = v5;
      v16 = v6;
    }
    else
    {
      v8 = *(void **)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton);
      v9 = v5;
      v10 = v6;
      v11 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v12 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= v12 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
      v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
      specialized Array._endMutation()(v14);
      v7 = v17;
    }
    sub_100365FC8(v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003C8B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  unint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_cachedGroupedLabelsAXElement;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_cachedGroupedLabelsAXElement))
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)UIAccessibilityElement), "initWithAccessibilityContainer:", v0);
    v4 = *(void **)(v0 + v2);
    *(_QWORD *)(v0 + v2) = v3;

    v5 = *(void **)(v0 + v2);
    if (v5)
      objc_msgSend(v5, "setAccessibilityTraits:", UIAccessibilityTraitHeader);
  }
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title + 8);
  if (v7)
  {
    v8 = *v6;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title + 8));
    v9 = sub_100043ED0(0, 1, 1, _swiftEmptyArrayStorage);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_100043ED0((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    v12 = &v9[2 * v11];
    v12[4] = v8;
    v12[5] = v7;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author + 8);
  if (v13)
  {
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author + 8));
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_100043ED0(0, v9[2] + 1, 1, v9);
    v16 = v9[2];
    v15 = v9[3];
    if (v16 >= v15 >> 1)
      v9 = sub_100043ED0((_QWORD *)(v15 > 1), v16 + 1, 1, v9);
    v9[2] = v16 + 1;
    v17 = &v9[2 * v16];
    v17[4] = v14;
    v17[5] = v13;
  }
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining + 8);
  if (v18)
  {
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining + 8));
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_100043ED0(0, v9[2] + 1, 1, v9);
    v21 = v9[2];
    v20 = v9[3];
    if (v21 >= v20 >> 1)
      v9 = sub_100043ED0((_QWORD *)(v20 > 1), v21 + 1, 1, v9);
    v9[2] = v21 + 1;
    v22 = &v9[2 * v21];
    v22[4] = v19;
    v22[5] = v18;
  }
  v23 = *(void **)(v1 + v2);
  if (v23)
  {
    if (v9[2])
    {
      v24 = v23;
      v25 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
      v26 = sub_100044F44();
      BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v25, v26);
      v28 = v27;
      swift_bridgeObjectRelease(v9);
      v29 = String._bridgeToObjectiveC()();
      v30 = swift_bridgeObjectRelease(v28).n128_u64[0];
    }
    else
    {
      v32 = v23;
      v30 = swift_bridgeObjectRelease(v9).n128_u64[0];
      v29 = 0;
    }
    objc_msgSend(v23, "setAccessibilityLabel:", v29, *(double *)&v30);

    v31 = *(void **)(v1 + v2);
    if (v31)
      goto LABEL_28;
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    v31 = *(void **)(v1 + v2);
    if (v31)
    {
LABEL_28:
      v33 = *(void **)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel);
      v34 = v31;
      objc_msgSend(v33, "accessibilityFrame");
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v42 = v41;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel), "accessibilityFrame");
      v69.origin.x = v43;
      v69.origin.y = v44;
      v69.size.width = v45;
      v69.size.height = v46;
      v63.origin.x = v36;
      v63.origin.y = v38;
      v63.size.width = v40;
      v63.size.height = v42;
      v64 = CGRectUnion(v63, v69);
      x = v64.origin.x;
      y = v64.origin.y;
      width = v64.size.width;
      height = v64.size.height;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel), "accessibilityFrame");
      v70.origin.x = v51;
      v70.origin.y = v52;
      v70.size.width = v53;
      v70.size.height = v54;
      v65.origin.x = x;
      v65.origin.y = y;
      v65.size.width = width;
      v65.size.height = height;
      v66 = CGRectUnion(v65, v70);
      v55 = v66.origin.x;
      v56 = v66.origin.y;
      v57 = v66.size.width;
      v58 = v66.size.height;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImageView), "accessibilityFrame");
      v71.origin.x = v59;
      v71.origin.y = v60;
      v71.size.width = v61;
      v71.size.height = v62;
      v67.origin.x = v55;
      v67.origin.y = v56;
      v67.size.width = v57;
      v67.size.height = v58;
      v68 = CGRectUnion(v67, v71);
      objc_msgSend(v34, "setAccessibilityFrame:", v68.origin.x, v68.origin.y, v68.size.width, v68.size.height);

    }
  }
}

id sub_1003C8F54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookTOCHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudiobookTOCHeaderView()
{
  return objc_opt_self(_TtC5Books22AudiobookTOCHeaderView);
}

void sub_1003C90F8(uint64_t a1, char a2)
{
  void *v2;
  double v3;
  id v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_separator);
  if ((a2 & 1) != 0)
    v3 = 0.0;
  else
    v3 = 1.0;
  objc_msgSend(v2, "setAlpha:", v3);
  v4 = sub_1003C5C6C();
  objc_msgSend(v4, "setAlpha:", v3);

}

void sub_1003C9168()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  double v23;

  v1 = &v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImage] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentCount] = 0;
  v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_compactMode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView____lazy_storage___effectView] = 0;
  v5 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel;
  v6 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  if (qword_1009CE2C8 != -1)
    swift_once(&qword_1009CE2C8, sub_1003C5A1C);
  objc_msgSend(v6, "setFont:", qword_1009DFA90);
  objc_msgSend(v6, "setLineBreakMode:", 2);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v5] = v6;
  v7 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleGradientLayer;
  *(_QWORD *)&v0[v7] = sub_1003C5D1C();
  v8 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel;
  v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  if (qword_1009CE2D0 != -1)
    swift_once(&qword_1009CE2D0, sub_1003C5A30);
  objc_msgSend(v9, "setFont:", qword_1009DFA98);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "bc_booksSecondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v11);

  objc_msgSend(v9, "setLineBreakMode:", 2);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v8] = v9;
  v12 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorGradientLayer;
  *(_QWORD *)&v0[v12] = sub_1003C5D1C();
  v13 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel;
  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  if (qword_1009CE2D8 != -1)
    swift_once(&qword_1009CE2D8, sub_1003C5A90);
  objc_msgSend(v14, "setFont:", qword_1009DFAA0);
  v15 = objc_msgSend(v10, "bc_booksSecondaryLabelColor");
  objc_msgSend(v14, "setTextColor:", v15);

  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v13] = v14;
  v16 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImageView;
  *(_QWORD *)&v0[v16] = sub_1003C5EB0();
  v17 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverView;
  *(_QWORD *)&v0[v17] = sub_1003C5FD4();
  v18 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_separator;
  v19 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v20 = objc_msgSend(v10, "separatorColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v18] = v19;
  v21 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_dismissButton;
  *(_QWORD *)&v0[v21] = sub_1003C6268();
  v22 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton;
  *(_QWORD *)&v0[v22] = sub_1003C65CC(v23);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementaryContentVisibleConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_cachedGroupedLabelsAXElement] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookTOCHeaderView.swift", 34, 2, 299, 0);
  __break(1u);
}

uint64_t sub_1003C952C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1003C9550()
{
  uint64_t v0;

  sub_1003C90F8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1003C955C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C9568);
}

uint64_t sub_1003C9568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1003C95E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C95F0);
}

uint64_t sub_1003C95F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_1003C9664@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  id v16;
  ValueMetadata *v17;
  _UNKNOWN **v18;
  __int128 v19[2];
  __int128 v20[2];
  __int128 v21[2];

  sub_10002E418((uint64_t)a1, (uint64_t)v21);
  sub_10002E418((uint64_t)a2, (uint64_t)v20);
  sub_10002E418((uint64_t)a4, (uint64_t)v19);
  v10 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = &type metadata for MenuAssetDownloadManager;
    v18 = &off_1008F8478;
    *(_QWORD *)&v15 = v10;
    *((_QWORD *)&v15 + 1) = result;
    v16 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v12 = a5 + *(int *)(type metadata accessor for DownloadActionItem(0) + 36);
    v13 = enum case for ContextActionType.download(_:);
    v14 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
    sub_100022840(v21, a5);
    sub_100022840(v20, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v19, a5 + 88);
    return (id)sub_100022840(&v15, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C97E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  sub_10023ADE8(&v11);
  if (!v12)
  {
    sub_1001EB7F4((uint64_t)&v11);
    goto LABEL_8;
  }
  sub_1001EB834(&v11, &v13);
  v1 = v14;
  v2 = v15;
  sub_10003F198(&v13, v14);
  v3 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v1, v2);
  if ((static ContextActionAssetType.== infix(_:_:)(v3, 4) & 1) != 0
    || (v4 = v14,
        v5 = v15,
        sub_10003F198(&v13, v14),
        v6 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v4, v5),
        (static ContextActionAssetType.== infix(_:_:)(v6, 5) & 1) != 0)
    || (v7 = v0[3],
        v8 = v0[4],
        sub_10003F198(v0, v7),
        (dispatch thunk of ContextActionDataProtocol.isOnline.getter(v7, v8) & 1) == 0))
  {
    _s5Books15CurrentPageViewVwxx_0(&v13);
LABEL_8:
    v9 = 0;
    return v9 & 1;
  }
  sub_10003F198(&v13, v14);
  v9 = sub_100298BA0();
  _s5Books15CurrentPageViewVwxx_0(&v13);
  return v9 & 1;
}

uint64_t sub_1003C98E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[29] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[30] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[31] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[32] = swift_task_alloc(v4);
  v1[33] = swift_task_alloc(v4);
  v1[34] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v1[35] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[36] = v6;
  v1[37] = v7;
  return swift_task_switch(sub_1003C9998, v6, v7);
}

uint64_t sub_1003C9998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_10023ADE8((_OWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 232);
    sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v2);
    v4 = dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(v2, v3);
    v5 = sub_10003F198((_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 152));
    v6 = v5;
    if ((v4 & 1) != 0)
    {
      v25 = *(_QWORD *)(v0 + 40);
      v26 = *(_QWORD *)(v0 + 48);
      sub_10003F198((_QWORD *)(v0 + 16), v25);
      *(_QWORD *)(v0 + 320) = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v25, v26);
      *(_QWORD *)(v0 + 328) = v27;
      *(_QWORD *)(v0 + 336) = *v6;
      *(_QWORD *)(v0 + 344) = v6[1];
      *(_QWORD *)(v0 + 352) = v6[2];
      return swift_task_switch(sub_1003C9E90, 0, 0);
    }
    else
    {
      v7 = *(_QWORD *)(v0 + 232);
      v8 = v7 + 40;
      v9 = *(_QWORD *)(v7 + 80);
      v10 = *v5;
      v11 = v5[1];
      v12 = v5[2];
      v13 = (_QWORD *)swift_task_alloc(dword_1009D6D84);
      *(_QWORD *)(v0 + 304) = v13;
      *v13 = v0;
      v13[1] = sub_1003C9BB8;
      return sub_10028D5B8(v0 + 16, v8, v9, v10, v11, v12);
    }
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 280));
    v15 = sub_1001EB7F4(v0 + 64);
    v16 = static Logger.contextActionItem.getter(v15);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Action doesn't have sufficient information to handle action.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    v21 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 256);
    v22 = *(_QWORD *)(v0 + 240);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    v23 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 256);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1003C9BB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 304);
  *(_QWORD *)(*v1 + 312) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1003C9C70;
  else
    v4 = sub_1003C9C18;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 296));
}

uint64_t sub_1003C9C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 280));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C9C70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 280));
  static Logger.contextActionItem.getter(v2);
  v3 = sub_1001EB84C(v0 + 16, v0 + 112);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v21 = *(_QWORD *)(v0 + 312);
    v22 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 272);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v25 = v20;
    *(_DWORD *)v6 = 136315138;
    v8 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 144);
    sub_10003F198((_QWORD *)(v0 + 112), v8);
    v9 = v8;
    v1 = (_QWORD *)(v0 + 16);
    v10 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v9, v7);
    if (v11)
    {
      v12 = v11;
    }
    else
    {
      v10 = 0;
      v12 = 0xE000000000000000;
    }
    *(_QWORD *)(v0 + 216) = sub_100040F58(v10, v12, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v12);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to download the sample with storeID %s", v6, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v6, -1, -1);
    swift_errorRelease(v21);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 248);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
    swift_errorRelease(v13);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  _s5Books15CurrentPageViewVwxx_0(v1);
  v17 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C9E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v4 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 360) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 336);
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 368) = v5;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009DFD00);
  *v5 = v0;
  v5[1] = sub_1003C9F58;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 208, 0, 0, 0xD00000000000001ALL, 0x80000001007C62D0, sub_1003CA254, v4, v6);
}

uint64_t sub_1003C9F58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 360);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1003C9FB4, 0, 0);
}

uint64_t sub_1003C9FB4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[41]);
  v0[47] = v0[26];
  return swift_task_switch(sub_1003C9FF4, v0[36], v0[37]);
}

uint64_t sub_1003C9FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 280));
  if (v1)
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 376));
  }
  else
  {
    static Logger.contextActionItem.getter(v2);
    v3 = sub_1001EB84C(v0 + 16, v0 + 160);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.error.getter(v4);
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 248);
    if (v6)
    {
      v22 = *(_QWORD *)(v0 + 264);
      v21 = *(_QWORD *)(v0 + 240);
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v23 = v19;
      *(_DWORD *)v10 = 136315138;
      v20 = v9;
      v11 = *(_QWORD *)(v0 + 184);
      v12 = *(_QWORD *)(v0 + 192);
      sub_10003F198((_QWORD *)(v0 + 160), v11);
      v13 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v11, v12);
      if (v14)
      {
        v15 = v14;
      }
      else
      {
        v13 = 0;
        v15 = 0xE000000000000000;
      }
      *(_QWORD *)(v0 + 224) = sub_100040F58(v13, v15, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(v15);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 160));
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to download libraryAsset with storeID %s", v10, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
    }
    else
    {
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 160));

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v16 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CA20C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009DFC94);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1003C98E8();
}

void sub_1003CA254(uint64_t a1)
{
  uint64_t v1;

  sub_10028E904(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1003CA264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;

  v41 = a3;
  v42 = a4;
  v39 = a1;
  v40 = a2;
  v6 = type metadata accessor for Locale(0);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  v35 = v12;
  v36 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  *a5 = swift_getKeyPath(&unk_1007204F8);
  v19 = sub_10004CFD4(&qword_1009D5038);
  swift_storeEnumTagMultiPayload(a5, v19, 0);
  v20 = (int *)type metadata accessor for ScrollToggle(0);
  v21 = (char *)a5 + v20[5];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_100720520);
  v21[8] = 0;
  v22 = (_QWORD *)((char *)a5 + v20[8]);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x74756F79614CLL, 0xE600000000000000);
  static Locale.current.getter(v23);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v24 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v24);
  v26 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v27 = v37;
  v28 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v8, v11, v38);
  v29 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v26, v8, "Accessibility label for a button that toggles between paging and scrolling layouts", 82, 2);
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v18, v35);
  *v22 = v29;
  v22[1] = v31;
  v33 = (char *)a5 + v20[6];
  v34 = v40;
  *(_QWORD *)v33 = v39;
  *((_QWORD *)v33 + 1) = v34;
  v33[16] = v41;
  *((_BYTE *)a5 + v20[7]) = v42;
  return result;
}

uint64_t sub_1003CA4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD v30[3];
  char v31;
  uint64_t v32;

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v30 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v30 - v13;
  v15 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ScrollToggle(0) + 24));
  v16 = *v15;
  v17 = v15[1];
  LOBYTE(v15) = *((_BYTE *)v15 + 16);
  v30[1] = v16;
  v30[2] = v17;
  v31 = (char)v15;
  v18 = sub_10004CFD4(&qword_1009EE730);
  Binding.wrappedValue.getter(&v32, v18);
  if (v32 == 1)
  {
    v19 = String.LocalizationValue.init(stringLiteral:)(0x6E696C6C6F726353, 0xE900000000000067);
    static Locale.current.getter(v19);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v20 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    v23 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v22, v4, "Themes & Settings scrolling button text", 39, 2);
  }
  else
  {
    v24 = String.LocalizationValue.init(stringLiteral:)(0x676E69676150, 0xE600000000000000);
    static Locale.current.getter(v24);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v25 = type metadata accessor for BundleFinder();
    v26 = swift_getObjCClassFromMetadata(v25);
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v26);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    v23 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v27, v4, "Themes & Settings paging button text", 36, 2);
  }
  v28 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v28;
}

uint64_t sub_1003CA768@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125[16];
  uint64_t v126;
  char v127[8];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 v134;

  v2 = v1;
  v124 = a1;
  v3 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v3);
  v123 = (uint64_t)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Image.Scale(0);
  v117 = *(_QWORD *)(v5 - 8);
  v118 = v5;
  __chkstk_darwin(v5);
  v115 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v7);
  v107 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Font.TextStyle(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v100 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for ButtonToggleStyle(0);
  v99 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_10004CFD4(&qword_1009DFDC0);
  v97 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_10004CFD4(&qword_1009DFDC8);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10004CFD4(&qword_1009DFDD0);
  __chkstk_darwin(v102);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10004CFD4(&qword_1009DFDD8);
  __chkstk_darwin(v104);
  v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_10004CFD4(&qword_1009DFDE0);
  __chkstk_darwin(v111);
  v108 = (uint64_t)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_10004CFD4(&qword_1009DFDE8);
  __chkstk_darwin(v110);
  v109 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_10004CFD4(&qword_1009DFDF0);
  __chkstk_darwin(v113);
  v112 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_10004CFD4(&qword_1009DFDF8);
  __chkstk_darwin(v119);
  v114 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v116 = (char *)&v95 - v25;
  v26 = sub_10004CFD4(&qword_1009DFE00);
  v121 = *(_QWORD *)(v26 - 8);
  v122 = v26;
  __chkstk_darwin(v26);
  v120 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ScrollToggle(0);
  v28 = (uint64_t *)(v1 + *(int *)(v95 + 24));
  v29 = *v28;
  v30 = v28[1];
  LOBYTE(v28) = *((_BYTE *)v28 + 16);
  v129 = v29;
  v130 = v30;
  v131 = (char)v28;
  v31 = sub_10004CFD4(&qword_1009EE730);
  Binding.projectedValue.getter(v31);
  v32 = v132;
  v33 = v133;
  v34 = v134;
  v128 = v2;
  v35 = sub_10004CFD4(&qword_1009DFE08);
  v36 = sub_1003CBED0();
  v37 = Toggle.init(isOn:label:)(v32, v33, v34, sub_1003CBEC8, v127, v35, v36);
  ButtonToggleStyle.init()(v37);
  v38 = sub_100030B34(&qword_1009DFE18, &qword_1009DFDC0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
  v39 = sub_100008DB0(&qword_1009DFE20, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
  v40 = v96;
  v41 = v98;
  View.toggleStyle<A>(_:)(v11, v96, v98, v38, v39);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v11, v41);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v13, v40);
  v42 = v101;
  v43 = v100;
  v44 = v103;
  (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v100, enum case for Font.TextStyle.callout(_:), v103);
  v45 = type metadata accessor for Font.Design(0);
  v46 = v107;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v107, 1, 1, v45);
  v47 = (uint64_t)v46;
  v48 = static Font.system(_:design:weight:)(v43, v46, 0, 1);
  sub_100010960(v47, &qword_1009CEDD0);
  v49 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  static Font.Weight.semibold.getter(v49);
  v50 = Font.weight(_:)(v48);
  swift_release(v48);
  KeyPath = swift_getKeyPath(&unk_100720610);
  v52 = v105;
  v53 = v106;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v17, v15, v106);
  v54 = (uint64_t *)&v17[*(int *)(v102 + 36)];
  *v54 = KeyPath;
  v54[1] = v50;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v53);
  v56 = v117;
  v55 = v118;
  v57 = v115;
  (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v115, enum case for Image.Scale.large(_:), v118);
  v58 = swift_getKeyPath(&unk_100720640);
  v59 = (uint64_t *)&v19[*(int *)(v104 + 36)];
  v60 = sub_10004CFD4(&qword_1009D38F8);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)v59 + *(int *)(v60 + 28), v57, v55);
  *v59 = v58;
  sub_10000B5E4((uint64_t)v17, (uint64_t)v19, &qword_1009DFDD0);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
  sub_100010960((uint64_t)v17, &qword_1009DFDD0);
  v61 = v95;
  v62 = (uint64_t *)(v2 + *(int *)(v95 + 20));
  v63 = *v62;
  LOBYTE(v59) = *((_BYTE *)v62 + 8);
  swift_retain(*v62);
  v65 = sub_1006682B0(v64, (char)v59);
  v66 = swift_release(v63);
  LOBYTE(v63) = static Edge.Set.all.getter(v66);
  v67 = v108;
  sub_10000B5E4((uint64_t)v19, v108, &qword_1009DFDD8);
  v68 = v67 + *(int *)(v111 + 36);
  *(_QWORD *)v68 = v65;
  *(_BYTE *)(v68 + 8) = v63;
  sub_100010960((uint64_t)v19, &qword_1009DFDD8);
  v69 = v123;
  sub_10066805C(v123);
  v70 = (uint64_t)v109;
  v71 = (uint64_t)&v109[*(int *)(v110 + 36)];
  sub_10025BC3C(v69, v71);
  *(_WORD *)(v71 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4(v67, v70, &qword_1009DFDE0);
  sub_10025BC80(v69);
  sub_100010960(v67, &qword_1009DFDE0);
  sub_10066805C(v69);
  v72 = v113;
  v73 = (uint64_t)v112;
  v74 = (uint64_t)&v112[*(int *)(v113 + 36)];
  sub_10025BC3C(v69, v74);
  *(_BYTE *)(v74 + *(int *)(sub_10004CFD4(&qword_1009D5140) + 36)) = 0;
  sub_10000B5E4(v70, v73, &qword_1009DFDE8);
  sub_10025BC80(v69);
  sub_100010960(v70, &qword_1009DFDE8);
  v75 = (uint64_t *)(v2 + *(int *)(v61 + 32));
  v77 = *v75;
  v76 = v75[1];
  v132 = v77;
  v133 = v76;
  v78 = sub_1003CBF44();
  v79 = sub_1001F2108();
  v80 = (uint64_t)v114;
  View.accessibilityLabel<A>(_:)(&v132, v72, &type metadata for String, v78, v79);
  sub_100010960(v73, &qword_1009DFDF0);
  v81 = sub_1003CA4B8();
  v83 = v82;
  v132 = v81;
  v133 = v82;
  v84 = (uint64_t)v116;
  v85 = v119;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v132, v119, &type metadata for String, v79);
  swift_bridgeObjectRelease(v83);
  sub_100010960(v80, &qword_1009DFDF8);
  v126 = v2;
  v86 = sub_10004CFD4(&qword_1009DFE50);
  v87 = sub_1003CC264();
  sub_100030B34(&qword_1009DFE60, &qword_1009DFE50, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v88 = v120;
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_1003CC25C, v125, v85, v86, v87);
  sub_100010960(v84, &qword_1009DFDF8);
  v89 = swift_getKeyPath(&unk_100720670);
  v91 = v121;
  v90 = v122;
  v92 = v124;
  (*(void (**)(uint64_t, char *, uint64_t))(v121 + 16))(v124, v88, v122);
  v93 = v92 + *(int *)(sub_10004CFD4(&qword_1009DFE68) + 36);
  *(_QWORD *)v93 = v89;
  *(_BYTE *)(v93 + 8) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v88, v90);
}

__n128 sub_1003CB144@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  __n128 result;
  _QWORD v30[2];
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  __n128 v42;

  v4 = type metadata accessor for ImageResource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30[-1] - v9;
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for ScrollToggle(0) + 28)) == 1)
  {
    if (qword_1009CEBC8 != -1)
      swift_once(&qword_1009CEBC8, sub_10069C5FC);
    v11 = qword_100A1F180;
  }
  else
  {
    if (qword_1009CEBE0 != -1)
      swift_once(&qword_1009CEBE0, sub_10069C66C);
    v11 = qword_100A1F1C8;
  }
  v12 = sub_100048F64(v4, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  v13 = Image.init(_:)(v10);
  v14 = static Alignment.center.getter(v13);
  sub_1005F28A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, INFINITY, 0, v14, v15, v13);
  swift_release(v13);
  v16 = v30[1];
  v17 = v31;
  v18 = v32;
  v19 = v33;
  v20 = v34;
  v21 = v35;
  v22 = v36;
  v23 = v37;
  v24 = v38;
  v25 = v39;
  v26 = v40;
  v27 = v41;
  result = v42;
  *(_QWORD *)a2 = v30[0];
  *(_QWORD *)(a2 + 8) = v16;
  *(_BYTE *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v18;
  *(_BYTE *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v20;
  *(_BYTE *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 56) = v22;
  *(_BYTE *)(a2 + 64) = v23;
  *(_QWORD *)(a2 + 72) = v24;
  *(_BYTE *)(a2 + 80) = v25;
  *(_QWORD *)(a2 + 88) = v26;
  *(_BYTE *)(a2 + 96) = v27;
  *(__n128 *)(a2 + 104) = result;
  return result;
}

__n128 sub_1003CB34C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  __n128 result;
  unint64_t v9;
  __n128 v10;
  unsigned __int8 v11;
  unint64_t v12;

  v4 = static HorizontalAlignment.center.getter(a1);
  sub_1003CB3BC(a1, (uint64_t)&v9);
  v5 = v9;
  v6 = v11;
  v7 = v12;
  result = v10;
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0;
  a2[1].n128_u8[0] = 1;
  a2[1].n128_u64[1] = v5;
  a2[2] = result;
  a2[3].n128_u8[0] = v6;
  a2[3].n128_u64[1] = v7;
  return result;
}

double sub_1003CB3BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  double result;
  _QWORD v27[2];

  v4 = type metadata accessor for ImageResource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v27 - v9;
  v11 = type metadata accessor for ScrollToggle(0);
  if (*(_BYTE *)(a1 + *(int *)(v11 + 28)) == 1)
  {
    if (qword_1009CEBC8 != -1)
      swift_once(&qword_1009CEBC8, sub_10069C5FC);
    v12 = qword_100A1F180;
  }
  else
  {
    if (qword_1009CEBE0 != -1)
      swift_once(&qword_1009CEBE0, sub_10069C66C);
    v12 = qword_100A1F1C8;
  }
  v13 = sub_100048F64(v4, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  v14 = Image.init(_:)(v10);
  v15 = (_QWORD *)(a1 + *(int *)(v11 + 32));
  v16 = v15[1];
  v27[0] = *v15;
  v27[1] = v16;
  v17 = sub_1001F2108();
  v18 = swift_bridgeObjectRetain(v16);
  v19 = Text.init<A>(_:)(v27, &type metadata for String, v17, v18);
  v21 = v20;
  v23 = v22;
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v19;
  v25 = v24 & 1;
  *(_QWORD *)(a2 + 16) = v20;
  *(_BYTE *)(a2 + 24) = v24 & 1;
  *(_QWORD *)(a2 + 32) = v22;
  swift_retain(v14);
  sub_1001F596C(v19, v21, v25);
  swift_bridgeObjectRetain(v23);
  sub_1001F5B28(v19, v21, v25);
  swift_release(v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ScrollToggle(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DFD78;
  if (!qword_1009DFD78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ScrollToggle);
  return result;
}

_QWORD *sub_1003CB5F0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = a1;
      v13 = v7;
      v14 = 1;
    }
    else
    {
      v16 = *a2;
      *a1 = *a2;
      swift_retain(v16);
      v12 = a1;
      v13 = v7;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
    v17 = a3[5];
    v18 = a3[6];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    v21 = *(_QWORD *)v20;
    LOBYTE(v20) = v20[8];
    *(_QWORD *)v19 = v21;
    v19[8] = (char)v20;
    v22 = (char *)a1 + v18;
    v23 = (char *)a2 + v18;
    v24 = *(_QWORD *)v23;
    v25 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v25;
    v22[16] = v23[16];
    v26 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    swift_retain(v21);
    swift_retain(v24);
    swift_retain(v25);
    swift_bridgeObjectRetain(v29);
  }
  return a1;
}

double sub_1003CB74C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  double result;

  v4 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = (char *)a1 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v6 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5]));
  v7 = (_QWORD *)((char *)a1 + a2[6]);
  swift_release(*v7);
  swift_release(v7[1]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8)).n128_u64[0];
  return result;
}

_OWORD *sub_1003CB7FC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a1;
    v12 = v6;
    v13 = 1;
  }
  else
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain(v14);
    v11 = a1;
    v12 = v6;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v15 = a3[5];
  v16 = a3[6];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = v18[8];
  *(_QWORD *)v17 = v19;
  v17[8] = (char)v18;
  v20 = (char *)a1 + v16;
  v21 = (char *)a2 + v16;
  v22 = *(_QWORD *)v21;
  v23 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v23;
  v20[16] = v21[16];
  v24 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_retain(v19);
  swift_retain(v22);
  swift_retain(v23);
  swift_bridgeObjectRetain(v27);
  return a1;
}

_OWORD *sub_1003CB92C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D5038);
    v6 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v14 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain(v14);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  v15 = a3[5];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = v17[8];
  v19 = *(_QWORD *)v16;
  *(_QWORD *)v16 = v18;
  v16[8] = (char)v17;
  swift_retain(v18);
  swift_release(v19);
  v20 = a3[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a1 + v20);
  v24 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v24;
  swift_retain(v24);
  swift_release(v23);
  v25 = *((_QWORD *)v22 + 1);
  v26 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = v25;
  swift_retain(v25);
  swift_release(v26);
  v21[16] = v22[16];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v27 = a3[8];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v31 = v28[1];
  v28[1] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  return a1;
}

_OWORD *sub_1003CBAB0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  v17 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  return a1;
}

_OWORD *sub_1003CBBB8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D5038);
    v6 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  swift_release(v15);
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a1 + v16);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  swift_release(v19);
  v20 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release(v20);
  v17[16] = v18[16];
  v21 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  v26 = v22[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_1003CBD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CBD18);
}

uint64_t sub_1003CBD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4(&qword_1009D5030);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003CBD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CBDA8);
}

uint64_t sub_1003CBDA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009D5030);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_1003CBE28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10025BB8C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100720578;
    v4[3] = &unk_100720590;
    v4[4] = &unk_1007205A8;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1003CBEB8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086F5F4, 1);
}

double sub_1003CBEC8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1003CB144(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_1003CBED0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DFE10;
  if (!qword_1009DFE10)
  {
    v1 = sub_100030B74(&qword_1009DFE08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE10);
  }
  return result;
}

unint64_t sub_1003CBF44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DFE28;
  if (!qword_1009DFE28)
  {
    v1 = sub_100030B74(&qword_1009DFDF0);
    sub_1003CBFC8();
    sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE28);
  }
  return result;
}

unint64_t sub_1003CBFC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DFE30;
  if (!qword_1009DFE30)
  {
    v1 = sub_100030B74(&qword_1009DFDE8);
    sub_1003CC04C();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE30);
  }
  return result;
}

unint64_t sub_1003CC04C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DFE38;
  if (!qword_1009DFE38)
  {
    v1 = sub_100030B74(&qword_1009DFDE0);
    sub_1003CC0D0();
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE38);
  }
  return result;
}

unint64_t sub_1003CC0D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DFE40;
  if (!qword_1009DFE40)
  {
    v1 = sub_100030B74(&qword_1009DFDD8);
    sub_1003CC154();
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE40);
  }
  return result;
}

unint64_t sub_1003CC154()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009DFE48;
  if (!qword_1009DFE48)
  {
    v1 = sub_100030B74(&qword_1009DFDD0);
    v2[0] = sub_100030B74(&qword_1009DFDC0);
    v2[1] = type metadata accessor for ButtonToggleStyle(255);
    v2[2] = sub_100030B34(&qword_1009DFE18, &qword_1009DFDC0, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    v2[3] = sub_100008DB0(&qword_1009DFE20, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonToggleStyle, (uint64_t)&protocol conformance descriptor for ButtonToggleStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.toggleStyle<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE48);
  }
  return result;
}

double sub_1003CC25C@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1003CB34C(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_1003CC264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DFE58;
  if (!qword_1009DFE58)
  {
    v1 = sub_100030B74(&qword_1009DFDF8);
    sub_1003CBF44();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE58);
  }
  return result;
}

unint64_t sub_1003CC2F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009DFE70;
  if (!qword_1009DFE70)
  {
    v1 = sub_100030B74(&qword_1009DFE68);
    v2[0] = sub_100030B74(&qword_1009DFDF8);
    v2[1] = sub_100030B74(&qword_1009DFE50);
    v2[2] = sub_1003CC264();
    v2[3] = sub_100030B34(&qword_1009DFE60, &qword_1009DFE50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DFE70);
  }
  return result;
}

uint64_t sub_1003CC3E4()
{
  uint64_t v0;

  sub_1001FE9A0(v0 + 16);

  swift_unknownObjectWeakDestroy(v0 + 48);
  swift_unownedRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for TOCModule()
{
  return objc_opt_self(_TtC5Books9TOCModule);
}

uint64_t sub_1003CC440()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  swift_weakDestroy(v0 + 24);

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TOCModuleFactory()
{
  return objc_opt_self(_TtC5Books16TOCModuleFactory);
}

uint64_t initializeWithCopy for BookmarkNotesPresenter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for BookmarkNotesPresenter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for BookmarkNotesPresenter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for BookmarkNotesPresenter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for BookmarkNotesPresenter(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookmarkNotesPresenter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TOCPresenter()
{
  return &type metadata for TOCPresenter;
}

uint64_t sub_1003CC5D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E7E0);
  sub_100048F64(v16, (uint64_t)qword_100A1E7E0);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x61684320657A6953, 0xEB0000000065676ELL);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'typeDisplayRepresentation' for AppEnum that represents a request to either increase or decrease a setting's value by one step within its allowable range", 153, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_1003CC7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t result;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v57 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v56 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v48 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  __chkstk_darwin(v13);
  v55 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009E0060);
  v17 = sub_10004CFD4(&qword_1009D0940);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  v20 = *(_QWORD *)(v18 + 72);
  v52 = v17;
  v53 = v20;
  v21 = *(unsigned __int8 *)(v18 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v16, v22 + 2 * v20, v21 | 7);
  v54 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_10070FC00;
  v50 = v23 + v22 + *(int *)(v19 + 48);
  v51 = v23 + v22;
  *(_BYTE *)(v23 + v22) = 0;
  v24 = String.LocalizationValue.init(stringLiteral:)(0x6573616572636E49, 0xE800000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 104);
  v26(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Parameter for an intent to increase a value.", 66, 2);
  v48 = *(_QWORD *)(v14 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v56, 1, 1, v13);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(1937075312, 0xE400000000000000, 0, 0);
  v27 = sub_10004CFD4(&qword_1009D2640);
  v28 = *(_QWORD *)(v14 + 72);
  v29 = *(unsigned __int8 *)(v14 + 80);
  v42[0] = 2 * v28;
  v42[1] = v28;
  v46 = ((v29 + 32) & ~v29) + 3 * v28;
  v47 = v27;
  v44 = (v29 + 32) & ~v29;
  v45 = v29 | 7;
  v30 = swift_allocObject(v27, v46, v29 | 7);
  v43 = xmmword_100712B60;
  *(_OWORD *)(v30 + 16) = xmmword_100712B60;
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6573696152, 0xE500000000000000);
  static Locale.current.getter(v31);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Synonym for 'Increase'", 44, 2);
  v32 = String.LocalizationValue.init(stringLiteral:)(0x656772616C6E45, 0xE700000000000000);
  static Locale.current.getter(v32);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Synonym for 'Increase'", 44, 2);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x726567676942, 0xE600000000000000);
  static Locale.current.getter(v33);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Synonym for 'Increase'", 44, 2);
  v34 = v56;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v55, v56, v57, v30);
  v35 = (_BYTE *)(v51 + v53);
  v53 += v51 + *(int *)(v52 + 48);
  *v35 = 1;
  v36 = String.LocalizationValue.init(stringLiteral:)(0x6573616572636544, 0xE800000000000000);
  static Locale.current.getter(v36);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Parameter for an intent to decrease a value.", 66, 2);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v34, 1, 1, v49);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x73756E696DLL, 0xE500000000000000, 0, 0);
  v37 = swift_allocObject(v47, v46, v45);
  *(_OWORD *)(v37 + 16) = v43;
  v38 = String.LocalizationValue.init(stringLiteral:)(0x7265776F4CLL, 0xE500000000000000);
  static Locale.current.getter(v38);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Synonym for 'Decrease'", 44, 2);
  v39 = String.LocalizationValue.init(stringLiteral:)(0x72656C6C616D53, 0xE700000000000000);
  static Locale.current.getter(v39);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Synonym for 'Decrease'", 44, 2);
  v40 = String.LocalizationValue.init(stringLiteral:)(0x6B6E69726853, 0xE600000000000000);
  static Locale.current.getter(v40);
  v26(v6, v25, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Font Size: Synonym for 'Decrease'", 44, 2);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v55, v56, v57, v37);
  result = sub_1001DABA0(v54);
  qword_100A1E7F8 = result;
  return result;
}

uint64_t sub_1003CCE60(char *a1, char *a2)
{
  return sub_100670FCC(*a1, *a2);
}

unint64_t sub_1003CCE70()
{
  unint64_t result;

  result = qword_1009DFFF8;
  if (!qword_1009DFFF8)
  {
    result = swift_getWitnessTable(&unk_1007207AC, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009DFFF8);
  }
  return result;
}

Swift::Int sub_1003CCEB4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 0x6573616572636564;
  else
    v2 = 0x6573616572636E69;
  String.hash(into:)(v4, v2, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1003CCF1C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x6573616572636564;
  else
    v2 = 0x6573616572636E69;
  String.hash(into:)(a1, v2, 0xE800000000000000);
  return swift_bridgeObjectRelease(0xE800000000000000);
}

Swift::Int sub_1003CCF58(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 0x6573616572636564;
  else
    v3 = 0x6573616572636E69;
  String.hash(into:)(v5, v3, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1003CCFBC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0AD0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003CD018(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x6573616572636564;
  else
    v2 = 0x6573616572636E69;
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

unint64_t sub_1003CD048()
{
  unint64_t result;

  result = qword_1009E0000;
  if (!qword_1009E0000)
  {
    result = swift_getWitnessTable(&unk_10072088C, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0000);
  }
  return result;
}

unint64_t sub_1003CD090()
{
  unint64_t result;

  result = qword_1009E0008;
  if (!qword_1009E0008)
  {
    result = swift_getWitnessTable(&unk_1007208C4, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0008);
  }
  return result;
}

unint64_t sub_1003CD0D8()
{
  unint64_t result;

  result = qword_1009E0010;
  if (!qword_1009E0010)
  {
    result = swift_getWitnessTable(&unk_100720814, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0010);
  }
  return result;
}

unint64_t sub_1003CD120()
{
  unint64_t result;

  result = qword_1009E0018;
  if (!qword_1009E0018)
  {
    result = swift_getWitnessTable(&unk_1007208F4, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0018);
  }
  return result;
}

unint64_t sub_1003CD168()
{
  unint64_t result;

  result = qword_1009E0020;
  if (!qword_1009E0020)
  {
    result = swift_getWitnessTable(&unk_10072091C, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0020);
  }
  return result;
}

unint64_t sub_1003CD1B0()
{
  unint64_t result;

  result = qword_1009E0028;
  if (!qword_1009E0028)
  {
    result = swift_getWitnessTable(&unk_100720944, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0028);
  }
  return result;
}

unint64_t sub_1003CD1F8()
{
  unint64_t result;

  result = qword_1009E0030;
  if (!qword_1009E0030)
  {
    result = swift_getWitnessTable(&unk_10072099C, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0030);
  }
  return result;
}

uint64_t sub_1003CD23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE330 != -1)
    swift_once(&qword_1009CE330, sub_1003CC5D4);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1E7E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1003CD2AC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1003A8B38();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_1003CD2EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003A8B38();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1003CD328()
{
  unint64_t result;

  result = qword_1009E0038;
  if (!qword_1009E0038)
  {
    result = swift_getWitnessTable(&unk_1007209DC, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0038);
  }
  return result;
}

unint64_t sub_1003CD370()
{
  unint64_t result;

  result = qword_1009E0040;
  if (!qword_1009E0040)
  {
    result = swift_getWitnessTable(&unk_100720A04, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0040);
  }
  return result;
}

unint64_t sub_1003CD3B8()
{
  unint64_t result;

  result = qword_1009E0048;
  if (!qword_1009E0048)
  {
    result = swift_getWitnessTable(&unk_1007207D4, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009E0048);
  }
  return result;
}

double sub_1003CD3FC()
{
  double result;

  if (qword_1009CE338 != -1)
    swift_once(&qword_1009CE338, sub_1003CC7EC);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E7F8).n128_u64[0];
  return result;
}

uint64_t sub_1003CD43C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003CD1F8();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1003CD478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E0050;
  if (!qword_1009E0050)
  {
    v1 = sub_100030B74(&qword_1009E0058);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009E0050);
  }
  return result;
}

void sub_1003CD4C4(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFC68;
}

uint64_t storeEnumTagSinglePayload for BooksValueSizeChange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003CD520 + 4 * byte_1007207A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003CD554 + 4 * byte_1007207A0[v4]))();
}

uint64_t sub_1003CD554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CD55C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003CD564);
  return result;
}

uint64_t sub_1003CD570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003CD578);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003CD57C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CD584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BooksValueSizeChange()
{
  return &type metadata for BooksValueSizeChange;
}

uint64_t sub_1003CD5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CD5AC);
}

uint64_t sub_1003CD5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1003CD628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CD634);
}

uint64_t sub_1003CD634(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1003CD6A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35[2];

  v1 = type metadata accessor for MAsset.OfferType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E0130);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E0138);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - v15;
  v17 = v0 + 5;
  v19 = v0[8];
  v18 = v0[9];
  sub_10003F198(v17, v19);
  ContextActionDataProtocol.selectionMode.getter(&v31, v19, v18);
  if ((v34 & 1) == 0)
  {
    v30 = v4;
    sub_100022840(&v31, (uint64_t)v35);
    sub_100022840(v35, (uint64_t)&v31);
    v21 = v32;
    v22 = v33;
    sub_10003F198(&v31, v32);
    dispatch thunk of ContextAssetInfoProtocol.offerType.getter(v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v13, enum case for MAsset.OfferType.buy(_:), v1);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v1);
    v23 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_1003CF440((uint64_t)v16, (uint64_t)v7);
    sub_1003CF440((uint64_t)v13, v23);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v24((uint64_t)v7, 1, v1) == 1)
    {
      sub_100010960((uint64_t)v13, &qword_1009E0138);
      sub_100010960((uint64_t)v16, &qword_1009E0138);
      if (v24(v23, 1, v1) == 1)
      {
        sub_100010960((uint64_t)v7, &qword_1009E0138);
LABEL_10:
        v20 = 0;
LABEL_12:
        _s5Books15CurrentPageViewVwxx_0(&v31);
        return v20;
      }
    }
    else
    {
      sub_1003CF440((uint64_t)v7, (uint64_t)v10);
      if (v24(v23, 1, v1) != 1)
      {
        v25 = v30;
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v30, v23, v1);
        v26 = sub_1003CF488();
        v27 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v25, v1, v26);
        v28 = *(void (**)(char *, uint64_t))(v2 + 8);
        v28(v25, v1);
        sub_100010960((uint64_t)v13, &qword_1009E0138);
        sub_100010960((uint64_t)v16, &qword_1009E0138);
        v28(v10, v1);
        sub_100010960((uint64_t)v7, &qword_1009E0138);
        if ((v27 & 1) != 0)
          goto LABEL_10;
LABEL_11:
        v20 = 1;
        goto LABEL_12;
      }
      sub_100010960((uint64_t)v13, &qword_1009E0138);
      sub_100010960((uint64_t)v16, &qword_1009E0138);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
    }
    sub_100010960((uint64_t)v7, &qword_1009E0130);
    goto LABEL_11;
  }
  sub_1001EB7C0((uint64_t)&v31);
  return 0;
}

uint64_t sub_1003CDA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  id v35;
  unsigned int v36;
  id v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  unint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[2];
  char v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;

  v1 = v0;
  v2 = type metadata accessor for MAsset.OfferType(0);
  v59 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v55 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009E0130);
  __chkstk_darwin(v4);
  v60 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009E0138);
  __chkstk_darwin(v6);
  v56 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v57 = (char *)&v54 - v9;
  __chkstk_darwin(v10);
  v58 = (char *)&v54 - v11;
  v12 = type metadata accessor for ContextActionSource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - v17;
  v19 = (_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 64);
  v21 = *(_QWORD *)(v1 + 72);
  sub_10003F198(v19, v20);
  ContextActionDataProtocol.selectionMode.getter(v61, v20, v21);
  if (v62 != 1)
  {
    v54 = v2;
    sub_100022840(v61, (uint64_t)v63);
    v22 = v64;
    v23 = v65;
    sub_10003F198(v63, v64);
    v24 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v22, v23);
    if (!v25)
      goto LABEL_17;
    v26 = v25;
    *(_QWORD *)&v61[0] = v24;
    *((_QWORD *)&v61[0] + 1) = v25;
    v27 = sub_1001F15BC();
    v28 = Collection.isNotEmpty.getter(&type metadata for String, v27);
    swift_bridgeObjectRelease(v26);
    if ((v28 & 1) == 0)
      goto LABEL_17;
    v29 = *(_QWORD *)(v1 + 64);
    v30 = *(_QWORD *)(v1 + 72);
    sub_10003F198(v19, v29);
    dispatch thunk of ContextActionDataProtocol.source.getter(v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for ContextActionSource.productPage(_:), v12);
    v31 = static ContextActionSource.== infix(_:_:)(v18, v15);
    v32 = *(void (**)(char *, uint64_t))(v13 + 8);
    v32(v15, v12);
    v32(v18, v12);
    if ((v31 & 1) == 0)
      goto LABEL_17;
    v33 = v64;
    v34 = v65;
    sub_10003F198(v63, v64);
    if ((dispatch thunk of ContextAssetInfoProtocol.supportsUnifiedProductPage.getter(v33, v34) & 1) != 0)
      goto LABEL_17;
    v35 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
    v36 = objc_msgSend(v35, "isBookStoreAllowed");
    swift_unknownObjectRelease(v35);
    if (!v36)
      goto LABEL_17;
    v37 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
    v38 = objc_msgSend(v37, "isStoreAccountManagedAppleID");

    if ((v38 & 1) != 0)
      goto LABEL_17;
    v39 = v64;
    v40 = v65;
    sub_10003F198(v63, v64);
    v41 = (uint64_t)v58;
    dispatch thunk of ContextAssetInfoProtocol.offerType.getter(v39, v40);
    v42 = v59;
    v43 = (uint64_t)v57;
    v44 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v57, enum case for MAsset.OfferType.buy(_:), v54);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v44);
    v45 = v60;
    v46 = v60 + *(int *)(v4 + 48);
    sub_1003CF440(v41, v60);
    sub_1003CF440(v43, v46);
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
    if (v47(v45, 1, v44) == 1)
    {
      sub_100010960(v43, &qword_1009E0138);
      sub_100010960(v41, &qword_1009E0138);
      if (v47(v46, 1, v44) == 1)
      {
        sub_100010960(v45, &qword_1009E0138);
LABEL_16:
        _s5Books15CurrentPageViewVwxx_0(v63);
        return 1;
      }
    }
    else
    {
      v48 = v56;
      sub_1003CF440(v45, v56);
      if (v47(v46, 1, v44) != 1)
      {
        v49 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v55, v46, v44);
        v50 = sub_1003CF488();
        v51 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v49, v44, v50);
        v52 = *(void (**)(char *, uint64_t))(v42 + 8);
        v52(v49, v44);
        sub_100010960(v43, &qword_1009E0138);
        sub_100010960(v41, &qword_1009E0138);
        v52((char *)v48, v44);
        sub_100010960(v45, &qword_1009E0138);
        if ((v51 & 1) != 0)
          goto LABEL_16;
LABEL_17:
        _s5Books15CurrentPageViewVwxx_0(v63);
        return 0;
      }
      sub_100010960(v43, &qword_1009E0138);
      sub_100010960(v41, &qword_1009E0138);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v48, v44);
    }
    sub_100010960(v45, &qword_1009E0130);
    goto LABEL_17;
  }
  sub_1001EB7C0((uint64_t)v61);
  return 0;
}

uint64_t sub_1003CDF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47[2];
  char v48;
  __int128 v49[2];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v0 = type metadata accessor for ContextActionSource(0);
  v45 = *(_QWORD *)(v0 - 8);
  v46 = v0;
  __chkstk_darwin(v0);
  v44 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - v3;
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0x66694720646E6553, 0xE900000000000074);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v23 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v22, v8, "Context Menu: Gift action menu item title", 41, 2);
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27 = v43;
  v26(v11, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v28 = v27 + 5;
  v29 = v27[8];
  v30 = v27[9];
  sub_10003F198(v27 + 5, v29);
  dispatch thunk of ContextActionDataProtocol.source.getter(v29, v30);
  v32 = v44;
  v31 = v45;
  v33 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, enum case for ContextActionSource.sendGiftActionItem(_:), v46);
  LOBYTE(v29) = static ContextActionSource.== infix(_:_:)(v4, v32);
  v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v32, v33);
  v34(v4, v33);
  if ((v29 & 1) != 0)
  {
    v35 = v27[8];
    v36 = v27[9];
    sub_10003F198(v27 + 5, v35);
    ContextActionDataProtocol.selectionMode.getter(v47, v35, v36);
    if (v48 == 1)
    {
      sub_1001EB7C0((uint64_t)v47);
    }
    else
    {
      sub_100022840(v47, (uint64_t)v49);
      swift_bridgeObjectRelease(v25);
      sub_100022840(v49, (uint64_t)v50);
      v37 = v27[8];
      v38 = v27[9];
      sub_10003F198(v28, v37);
      if ((dispatch thunk of ContextActionDataProtocol.actionItemNeedsDifferentiation.getter(v37, v38) & 1) != 0)
      {
        v39 = static ContextActionStringBuilder.editionKindTitle(for:)(v50);
      }
      else
      {
        v40 = v51;
        v41 = v52;
        sub_10003F198(v50, v51);
        v39 = dispatch thunk of ContextAssetInfoProtocol.editionKind.getter(v40, v41);
      }
      v23 = v39;
      _s5Books15CurrentPageViewVwxx_0(v50);
    }
  }
  return v23;
}

uint64_t sub_1003CE2BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27[2];
  char v28;
  __int128 v29[2];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - v7;
  v9 = v0 + 5;
  v10 = v0[8];
  v11 = v0[9];
  sub_10003F198(v0 + 5, v10);
  v12 = 0;
  if ((dispatch thunk of ContextActionDataProtocol.actionItemNeedsDifferentiation.getter(v10, v11) & 1) != 0)
  {
    v13 = v1[8];
    v14 = v1[9];
    sub_10003F198(v9, v13);
    dispatch thunk of ContextActionDataProtocol.source.getter(v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ContextActionSource.sendGiftActionItem(_:), v2);
    v15 = static ContextActionSource.== infix(_:_:)(v8, v5);
    v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v5, v2);
    v16(v8, v2);
    if ((v15 & 1) == 0)
      return 0;
    v18 = v1[8];
    v17 = v1[9];
    sub_10003F198(v9, v18);
    ContextActionDataProtocol.selectionMode.getter(v27, v18, v17);
    if (v28 == 1)
    {
      sub_1001EB7C0((uint64_t)v27);
      return 0;
    }
    sub_100022840(v27, (uint64_t)v29);
    sub_100022840(v29, (uint64_t)v30);
    v19 = v31;
    v20 = v32;
    sub_10003F198(v30, v31);
    v21 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v19, v20);
    if ((static ContextActionAssetType.== infix(_:_:)(v21, 3) & 1) != 0)
    {
      v22 = static ContextActionStringBuilder.narratedByString(for:)(v30);
    }
    else
    {
      v23 = v31;
      v24 = v32;
      sub_10003F198(v30, v31);
      v25 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v23, v24);
      if ((static ContextActionAssetType.== infix(_:_:)(v25, 2) & 1) == 0)
      {
        _s5Books15CurrentPageViewVwxx_0(v30);
        return 0;
      }
      v22 = static ContextActionStringBuilder.publishedByString(for:)(v30);
    }
    v12 = v22;
    _s5Books15CurrentPageViewVwxx_0(v30);
  }
  return v12;
}

uint64_t sub_1003CE4E0(double a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[23] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue.StringInterpolation(0, a1) - 8)
                  + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v3);
  v2[25] = swift_task_alloc(v3);
  v4 = type metadata accessor for Locale(0);
  v2[26] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[27] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[28] = swift_task_alloc(v6);
  v2[29] = swift_task_alloc(v6);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v2[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[31] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[32] = swift_task_alloc(v9);
  v2[33] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v2[34] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[35] = v11;
  v2[36] = v12;
  return swift_task_switch(sub_1003CE5EC, v11, v12);
}

uint64_t sub_1003CE5EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t, uint64_t);
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  Swift::String v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  NSString v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSString v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  __int128 *v105;
  _QWORD *aBlock;
  id v107;
  id v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t);
  void (*v112)(uint64_t, uint64_t, uint64_t);
  void *v113;
  uint64_t ObjCClassFromMetadata;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  _QWORD *v117;

  v1 = (_QWORD *)v0[23];
  v3 = v1[8];
  v2 = v1[9];
  sub_10003F198(v1 + 5, v3);
  v4 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v3, v2);
  v5 = v4;
  if (!*(_QWORD *)(v4 + 16))
  {
    v0[17] = 0;
    *(_OWORD *)(v0 + 13) = 0u;
    *(_OWORD *)(v0 + 15) = 0u;
    swift_bridgeObjectRelease(v4);
    goto LABEL_13;
  }
  sub_10002E418(v4 + 32, (uint64_t)(v0 + 13));
  swift_bridgeObjectRelease(v5);
  if (!v0[16])
  {
LABEL_13:
    swift_release(v0[34]);
    sub_100010960((uint64_t)(v0 + 13), qword_1009D4378);
LABEL_15:
    v86 = v0[32];
    v87 = v0[28];
    v88 = v0[29];
    v90 = v0[24];
    v89 = v0[25];
    swift_task_dealloc(v0[33]);
    swift_task_dealloc(v86);
    swift_task_dealloc(v88);
    swift_task_dealloc(v87);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    return ((uint64_t (*)(void))v0[1])();
  }
  sub_100022840((__int128 *)(v0 + 13), (uint64_t)(v0 + 8));
  v7 = v0[11];
  v6 = v0[12];
  sub_10003F198(v0 + 8, v7);
  v8 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v7, v6);
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease(v8);
  if (v9)
  {
    v10 = v0[33];
    v12 = (_QWORD *)v0[31];
    v11 = v0[32];
    v13 = v0[29];
    v14 = v0[30];
    v15 = v0[27];
    v104 = v0[28];
    aBlock = v12;
    v117 = v0;
    v103 = v0 + 8;
    v16 = v0[26];
    v17 = v0[25];
    swift_release(v0[34]);
    v18 = String.LocalizationValue.init(stringLiteral:)(0x66694720646E6553, 0xE900000000000074);
    static Locale.current.getter(v18);
    v115 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
    v115(v11, v10, v14);
    v19 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v19);
    v113 = (void *)objc_opt_self(NSBundle);
    v20 = objc_msgSend(v113, "bundleForClass:", ObjCClassFromMetadata);
    v110 = v16;
    v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    v112(v104, v13, v16);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v104, "Send Gift Alert title", 21, 2);
    v107 = v21;
    v22 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v22(v13, v16);
    v23 = (void (*)(uint64_t, uint64_t))aBlock[1];
    v23(v10, v14);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(52, 1);
    v24._countAndFlagsBits = 0x100000000000001BLL;
    v24._object = (void *)0x80000001007C6630;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
    v25 = v0[11];
    v26 = v117[12];
    sub_10003F198(v103, v117[11]);
    v27 = dispatch thunk of ContextAssetInfoProtocol.title.getter(v25, v26);
    if (v28)
    {
      v29 = v28;
    }
    else
    {
      v27 = 0;
      v29 = 0xE000000000000000;
    }
    v30 = v29;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v27);
    swift_bridgeObjectRelease(v29);
    v31._object = (void *)0x80000001007C6650;
    v31._countAndFlagsBits = 0x1000000000000019;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v31);
    v32 = String.LocalizationValue.init(stringInterpolation:)(v17);
    static Locale.current.getter(v32);
    v115(v11, v10, v14);
    v33 = objc_msgSend(v113, "bundleForClass:", ObjCClassFromMetadata);
    v34 = v110;
    v112(v104, v13, v110);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v33, v104, "Message about gift options on Send Gift Alert", 45, 2);
    v36 = v35;
    v37 = v117;
    v111 = v22;
    v22(v13, v34);
    v109 = v23;
    v23(v10, v14);
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v107);
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v36);
    v108 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v38, v39, 1);

    v41 = v117[11];
    v40 = v117[12];
    sub_10003F198(v103, v41);
    v102 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v41, v40);
    v42 = *(_QWORD *)(v102 + 16);
    if (v42)
    {
      v105 = (__int128 *)(v117 + 18);
      v43 = (_QWORD *)(v102 + 32);
      do
      {
        v44 = v43[3];
        v45 = v43[4];
        sub_10003F198(v43, v44);
        v46 = AssetInfo.editionKind.getter(v44, v45);
        if (v47)
        {
          v48 = v46;
          v49 = v47;
          v50 = v37[33];
          v51 = v117[32];
          v52 = v117[30];
          v53 = v117[29];
          v54 = v117[28];
          v116 = v117[26];
          v55 = v117[24];
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1);
          v56._countAndFlagsBits = 0x2074666947;
          v56._object = (void *)0xE500000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v56);
          v57._countAndFlagsBits = v48;
          v57._object = v49;
          String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v57);
          swift_bridgeObjectRelease(v49);
          v58._countAndFlagsBits = 0;
          v58._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v58);
          v59 = String.LocalizationValue.init(stringInterpolation:)(v55);
          static Locale.current.getter(v59);
          v115(v51, v50, v52);
          v60 = objc_msgSend(v113, "bundleForClass:", ObjCClassFromMetadata);
          v112(v54, v53, v116);
          v61 = v51;
          v37 = v117;
          String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v60, v54, "Send Gift asset EditionKind", 27, 2);
          v63 = v62;
          v111(v53, v116);
          v109(v50, v52);
          sub_10002E418((uint64_t)v43, (uint64_t)v105);
          v64 = swift_allocObject(&unk_100902A88, 56, 7);
          sub_100022840(v105, v64 + 16);
          v65 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v63);
          v117[6] = sub_1003CF3A0;
          v117[7] = v64;
          v117[2] = _NSConcreteStackBlock;
          v117[3] = 1107296256;
          v117[4] = sub_1001EDBF0;
          v117[5] = &unk_100902AA0;
          v66 = _Block_copy(v117 + 2);
          swift_release(v117[7]);
          v67 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v65, 0, v66);
          _Block_release(v66);

          v68 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
          objc_msgSend(v67, "_setTitleTextColor:", v68);

          objc_msgSend(v108, "addAction:", v67);
        }
        v43 += 5;
        --v42;
      }
      while (v42);
    }
    v70 = v37[32];
    v69 = v37[33];
    v72 = v37[29];
    v71 = v37[30];
    v73 = v37[28];
    v74 = v37[26];
    v75 = (_QWORD *)v37[23];
    swift_bridgeObjectRelease(v102);
    v76 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    static Locale.current.getter(v76);
    v115(v70, v69, v71);
    v77 = objc_msgSend(v113, "bundleForClass:", ObjCClassFromMetadata);
    v112(v73, v72, v74);
    v78 = v70;
    v0 = v117;
    String.init(localized:table:bundle:locale:comment:)(v78, 0, 0, v77, v73, "Cancel title for gift Alert", 27, 2);
    v80 = v79;
    v111(v72, v74);
    v109(v69, v71);
    v81 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v80);
    v82 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v81, 1, 0);

    v83 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
    objc_msgSend(v82, "_setTitleTextColor:", v83);

    objc_msgSend(v108, "addAction:", v82);
    v85 = v75[3];
    v84 = v75[4];
    sub_10003F198(v75, v85);
    dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v108, 1, v85, v84);

    _s5Books15CurrentPageViewVwxx_0(v103);
    goto LABEL_15;
  }
  v92 = type metadata accessor for AccountController(0);
  v0[37] = static AccountController.shared.getter(v92, v93, v94, v95);
  v97 = v0[11];
  v96 = v0[12];
  sub_10003F198(v0 + 8, v97);
  v98 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v97, v96);
  v100 = v99;
  v0[38] = v99;
  v101 = (_QWORD *)swift_task_alloc(async function pointer to AccountController.presentGiftViewController(for:with:)[1]);
  v0[39] = v101;
  *v101 = v0;
  v101[1] = sub_1003CEF38;
  return AccountController.presentGiftViewController(for:with:)(v98, v100, 0);
}

uint64_t sub_1003CEF38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 304);
  v3 = *(void **)(*v0 + 296);
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  swift_bridgeObjectRelease(v2);

  return swift_task_switch(sub_1003CEF9C, *(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 288));
}

uint64_t sub_1003CEF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 272));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1003CF020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  __int128 v13[2];

  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_10002E418(a2, (uint64_t)v13);
  v7 = type metadata accessor for MainActor(0);
  v8 = static MainActor.shared.getter(v7);
  v9 = swift_allocObject(&unk_100902AD8, 72, 7);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = &protocol witness table for MainActor;
  sub_100022840(v13, v9 + 32);
  v10 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009E0128, v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1003CF110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_1003CF17C, v6, v7);
}

uint64_t sub_1003CF17C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = (_QWORD *)v0[2];
  v2 = type metadata accessor for AccountController(0);
  v0[6] = static AccountController.shared.getter(v2, v3, v4, v5);
  v6 = v1[3];
  v7 = v1[4];
  sub_10003F198(v1, v6);
  v8 = ContentInfo.id.getter(v6, *(_QWORD *)(v7 + 8));
  v10 = v9;
  v0[7] = v9;
  v11 = (_QWORD *)swift_task_alloc(async function pointer to AccountController.presentGiftViewController(for:with:)[1]);
  v0[8] = v11;
  *v11 = v0;
  v11[1] = sub_1003CF228;
  return AccountController.presentGiftViewController(for:with:)(v8, v10, 0);
}

uint64_t sub_1003CF228()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 56);
  v3 = *(void **)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_bridgeObjectRelease(v2);

  return swift_task_switch(sub_100283F08, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1003CF29C()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E011C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1003CE4E0(v2);
}

uint64_t sub_1003CF2E0@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.gift(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6 + 40);
  sub_100022840(a2, a6);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_1003CF37C()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

double sub_1003CF3A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1003CF020(a1, v1 + 16);
}

uint64_t sub_1003CF3A8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003CF3D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1009E0124);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1001FC2C4;
  return sub_1003CF110(a1, v4, v5, v1 + 32);
}

uint64_t sub_1003CF440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003CF488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E0140;
  if (!qword_1009E0140)
  {
    v1 = type metadata accessor for MAsset.OfferType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MAsset.OfferType, v1);
    atomic_store(result, (unint64_t *)&qword_1009E0140);
  }
  return result;
}

id sub_1003CF54C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewControllerCoverSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id AudiobookNowPlayingTouchViewController.coverAnimationHostSource(forItem:)()
{
  void *v0;
  id result;
  id v2;
  objc_class *v3;
  char *v4;
  objc_super v5;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = (objc_class *)type metadata accessor for AudiobookNowPlayingTouchViewControllerCoverSource();
    v4 = (char *)objc_allocWithZone(v3);
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Books49AudiobookNowPlayingTouchViewControllerCoverSource_view] = v2;
    v5.receiver = v4;
    v5.super_class = v3;
    return objc_msgSendSuper2(&v5, "init");
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for AudiobookNowPlayingTouchViewControllerCoverSource()
{
  return objc_opt_self(_TtC5Books49AudiobookNowPlayingTouchViewControllerCoverSource);
}

BOOL sub_1003CF75C(uint64_t a1)
{
  unint64_t v1;
  id v2;
  unsigned int v3;
  id v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_10004AA7C(a1, (uint64_t)v6);
  if (v7)
  {
    v1 = sub_100033F5C();
    if ((swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, v1, 6) & 1) != 0)
    {
      v2 = v5;
      v3 = objc_msgSend(v5, "contentType");

      return v3 == 3;
    }
  }
  else
  {
    sub_10004A7B8((uint64_t)v6);
  }
  return 1;
}

uint64_t sub_1003CF91C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v1;
  return swift_task_switch(sub_1003CF934, 0, 0);
}

uint64_t sub_1003CF934()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  _QWORD *v4;

  swift_getObjectType();
  v1 = sub_1003A7B50();
  v2 = objc_allocWithZone((Class)type metadata accessor for AMDGenreRecommendationService.Event());
  v3 = sub_1003D0600(v1);
  *(_QWORD *)(v0 + 104) = v3;

  v4 = (_QWORD *)swift_task_alloc(dword_1009DAF84);
  *(_QWORD *)(v0 + 112) = v4;
  *v4 = v0;
  v4[1] = sub_1003CFA04;
  return sub_10032C748(v0 + 16, (uint64_t)v3);
}

uint64_t sub_1003CFA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003CFBB0;
  else
    v3 = sub_1003CFA68;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003CFA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_10004CD0C(v0 + 16, v0 + 48);
  v1 = sub_10004CFD4(&qword_1009E02D0);
  if (swift_dynamicCast(v0 + 80, v0 + 48, (char *)&type metadata for Any + 8, v1, 6))
  {
    v2 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v5 = swift_task_alloc(32);
    *(_QWORD *)(v5 + 16) = v3;
    sub_1003D0270(v4, (void (*)(uint64_t, uint64_t, double))sub_1003D078C, v5);
    v7 = v6;

    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    swift_bridgeObjectRelease(v4);
    swift_task_dealloc(v5);
    if (!v2)
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  else
  {
    v9 = *(void **)(v0 + 104);
    v10 = sub_1003D0748();
    v11 = swift_allocError(&type metadata for AMDGenreRecommendationService.Errors, v10, 0, 0);
    *v12 = 0;
    v12[1] = 0;
    swift_willThrow(v11);

    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003CFBB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003CFBE4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  char v24;
  unint64_t v25;
  unsigned __int8 v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  unsigned __int8 v53;
  unint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned int v57;
  int v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD v66[3];

  v65 = a3;
  v6 = sub_10004CFD4(&qword_1009E6990);
  __chkstk_darwin(v6);
  v64 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Genre(0);
  __chkstk_darwin(v8);
  v63 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009E02F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Book.MediaType(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v62 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - v17;
  v19 = HIBYTE(a2) & 0xF;
  v20 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v21 = HIBYTE(a2) & 0xF;
  else
    v21 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v21)
    goto LABEL_62;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v25 = sub_1003277FC(a1, a2, 10);
    LODWORD(v61) = v58;
    swift_bridgeObjectRelease(a2);
    if ((v61 & 1) == 0)
      goto LABEL_39;
    goto LABEL_62;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v22 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v22 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(a1, a2);
    v23 = sub_1003276EC(v22, v20, 10);
    if ((v24 & 1) == 0)
    {
      v25 = (unint64_t)v23;
LABEL_39:
      v61 = v3;
      Configuration.mediaType(for:)(v25);
      v32 = v13;
      v33 = v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v32) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v32);
        v37 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v38 = v62;
        v37(v62, v18, v32);
        v39 = sub_10004CFD4(&qword_1009D30C8);
        v40 = type metadata accessor for RecommendationSource(0);
        v41 = *(_QWORD *)(v40 - 8);
        v42 = *(unsigned __int8 *)(v41 + 80);
        v43 = (v42 + 32) & ~v42;
        v44 = swift_allocObject(v39, v43 + *(_QWORD *)(v41 + 72), v42 | 7);
        *(_OWORD *)(v44 + 16) = xmmword_10070CCA0;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v44 + v43, enum case for RecommendationSource.siri(_:), v40);
        v45 = type metadata accessor for Genre.Rationale(0);
        v46 = v64;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v64, 1, 1, v45);
        v47 = v63;
        Genre.init(storeID:mediaType:sources:rationale:)(v25, v38, v44, v46);
        v48 = v65;
        ScoredGenre.init(genre:score:)(v47);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v32);
        v49 = type metadata accessor for ScoredGenre(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
        return;
      }
      sub_100010960((uint64_t)v12, &qword_1009E02F0);
      v34 = sub_1003D0748();
      v35 = swift_allocError(&type metadata for AMDGenreRecommendationService.Errors, v34, 0, 0);
      *v36 = xmmword_100720B80;
      goto LABEL_63;
    }
LABEL_62:
    v59 = sub_1003D0748();
    swift_allocError(&type metadata for AMDGenreRecommendationService.Errors, v59, 0, 0);
    *v60 = a1;
    v60[1] = a2;
    swift_bridgeObjectRetain(a2);
LABEL_63:
    swift_willThrow(v35);
    return;
  }
  v66[0] = a1;
  v66[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v19)
      goto LABEL_67;
    if (v19 == 1)
      goto LABEL_65;
    if ((BYTE1(a1) - 48) > 9u)
      goto LABEL_34;
    v25 = (BYTE1(a1) - 48);
    if (v19 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u)
        goto LABEL_34;
      v25 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      v29 = v19 - 3;
      if (v19 != 3)
      {
        v30 = (unsigned __int8 *)v66 + 3;
        while (1)
        {
          v31 = *v30 - 48;
          if (v31 > 9)
            goto LABEL_34;
          if (!is_mul_ok(v25, 0xAuLL))
            goto LABEL_34;
          v27 = __CFADD__(10 * v25, v31);
          v25 = 10 * v25 + v31;
          if (v27)
            goto LABEL_34;
          LOBYTE(v19) = 0;
          ++v30;
          if (!--v29)
            goto LABEL_38;
        }
      }
    }
LABEL_37:
    LOBYTE(v19) = 0;
    goto LABEL_38;
  }
  if (a1 != 45)
  {
    if (!v19 || (a1 - 48) > 9u)
      goto LABEL_34;
    v25 = (a1 - 48);
    if (v19 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u)
        goto LABEL_34;
      v25 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      v50 = v19 - 2;
      if (v19 != 2)
      {
        v51 = (unsigned __int8 *)v66 + 2;
        while (1)
        {
          v52 = *v51 - 48;
          if (v52 > 9)
            goto LABEL_34;
          if (!is_mul_ok(v25, 0xAuLL))
            goto LABEL_34;
          v27 = __CFADD__(10 * v25, v52);
          v25 = 10 * v25 + v52;
          if (v27)
            goto LABEL_34;
          LOBYTE(v19) = 0;
          ++v51;
          if (!--v50)
            goto LABEL_38;
        }
      }
    }
    goto LABEL_37;
  }
  if (v19)
  {
    if (v19 != 1)
    {
      v26 = BYTE1(a1) - 48;
      if ((BYTE1(a1) - 48) <= 9u)
      {
        v25 = 0;
        v27 = v26 == 0;
        v28 = -(uint64_t)v26;
        if (!v27)
          goto LABEL_35;
        if (v19 == 2)
        {
          LOBYTE(v19) = 0;
          v25 = v28;
          goto LABEL_38;
        }
        v53 = BYTE2(a1) - 48;
        if ((BYTE2(a1) - 48) <= 9u && is_mul_ok(v28, 0xAuLL))
        {
          v54 = 10 * v28;
          v25 = v54 - v53;
          if (v54 >= v53)
          {
            v55 = v19 - 3;
            if (v19 != 3)
            {
              v56 = (unsigned __int8 *)v66 + 3;
              while (1)
              {
                v57 = *v56 - 48;
                if (v57 > 9)
                  goto LABEL_34;
                if (!is_mul_ok(v25, 0xAuLL))
                  goto LABEL_34;
                v27 = 10 * v25 >= v57;
                v25 = 10 * v25 - v57;
                if (!v27)
                  goto LABEL_34;
                LOBYTE(v19) = 0;
                ++v56;
                if (!--v55)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
      }
LABEL_34:
      v25 = 0;
LABEL_35:
      LOBYTE(v19) = 1;
      goto LABEL_38;
    }
LABEL_65:
    v25 = 0;
LABEL_38:
    if ((v19 & 1) == 0)
      goto LABEL_39;
    goto LABEL_62;
  }
  __break(1u);
LABEL_67:
  __break(1u);
}

uint64_t type metadata accessor for AMDGenreRecommendationService.Event()
{
  return objc_opt_self(_TtCC5Books29AMDGenreRecommendationServiceP33_62C9D66230C56EEE80751242C5DC77115Event);
}

uint64_t sub_1003D020C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1009E02CC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100326424;
  v5[11] = a1;
  v5[12] = v4;
  return swift_task_switch(sub_1003CF934, 0, 0);
}

void sub_1003D0270(uint64_t a1, void (*a2)(uint64_t, uint64_t, double), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  __n128 v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, double);

  v4 = v3;
  v41 = a3;
  v42 = a2;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E02E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ScoredGenre(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v37 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v36 = (char *)&v35 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v40 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  v38 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v40)
      goto LABEL_32;
    v22 = *(_QWORD *)(v39 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    v24 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v20);
    v25 = *v24;
    v26 = v24[1];
    v27 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v20);
    swift_bridgeObjectRetain(v26);
    v42(v25, v26, v27);
    if (v4)
    {
      swift_bridgeObjectRelease(v38);
      swift_release(a1);
      swift_bridgeObjectRelease(v26);
      return;
    }
    v28 = swift_bridgeObjectRelease(v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v28) == 1)
    {
      sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009E02E0);
    }
    else
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v30 = v36;
      v29(v36, v8, v9);
      v35 = v29;
      v29(v37, v30, v9);
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
        v38 = (char *)sub_1005B1734(0, *((_QWORD *)v38 + 2) + 1, 1, (unint64_t)v38);
      v32 = *((_QWORD *)v38 + 2);
      v31 = *((_QWORD *)v38 + 3);
      if (v32 >= v31 >> 1)
        v38 = (char *)sub_1005B1734(v31 > 1, v32 + 1, 1, (unint64_t)v38);
      v33 = v37;
      v34 = v38;
      *((_QWORD *)v38 + 2) = v32 + 1;
      v35(&v34[((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v32], v33, v9);
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v40)
    goto LABEL_32;
  v22 = *(_QWORD *)(v39 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v40)
    goto LABEL_32;
  v22 = *(_QWORD *)(v39 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v40)
    goto LABEL_32;
  v22 = *(_QWORD *)(v39 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v40)
  {
LABEL_32:
    swift_release(a1);
    return;
  }
  v22 = *(_QWORD *)(v39 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v40)
      goto LABEL_32;
    v22 = *(_QWORD *)(v39 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
}

id sub_1003D0600(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  char *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  objc_super v17;
  char v18[128];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtCC5Books29AMDGenreRecommendationServiceP33_62C9D66230C56EEE80751242C5DC77115Event_data;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Books29AMDGenreRecommendationServiceP33_62C9D66230C56EEE80751242C5DC77115Event_data] = 0;
  v5 = OBJC_IVAR____TtCC5Books29AMDGenreRecommendationServiceP33_62C9D66230C56EEE80751242C5DC77115Event_engagementData;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Books29AMDGenreRecommendationServiceP33_62C9D66230C56EEE80751242C5DC77115Event_engagementData] = 0;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v6, v18);
  *(_OWORD *)(inited + 16) = xmmword_10070FC00;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 56) = 0x80000001007C6850;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 1684632420;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  *(_QWORD *)(inited + 120) = sub_100218274();
  *(_QWORD *)(inited + 96) = a1;
  v8 = v1;
  v9 = a1;
  v10 = sub_10003FB0C(inited);
  v11 = sub_1004EC9E0(v10);
  v12 = *(_QWORD *)&v1[v4];
  *(_QWORD *)&v1[v4] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = sub_1004EC9E0(v10);
  swift_bridgeObjectRelease(v10);
  v14 = *(_QWORD *)&v1[v5];
  *(_QWORD *)&v1[v5] = v13;

  *(_QWORD *)&v15 = swift_bridgeObjectRelease(v14).n128_u64[0];
  v17.receiver = v8;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, "init", v15);
}

unint64_t sub_1003D0748()
{
  unint64_t result;

  result = qword_1009E02D8;
  if (!qword_1009E02D8)
  {
    result = swift_getWitnessTable(&unk_100720C00, &type metadata for AMDGenreRecommendationService.Errors);
    atomic_store(result, (unint64_t *)&qword_1009E02D8);
  }
  return result;
}

void sub_1003D078C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1003CFBE4(a1, a2, a3);
}

unint64_t destroy for AMDGenreRecommendationService.Errors(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s5Books29AMDGenreRecommendationServiceC6ErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for AMDGenreRecommendationService.Errors(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for AMDGenreRecommendationService.Errors(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AMDGenreRecommendationService.Errors(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AMDGenreRecommendationService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1003D09B8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1003D09D0(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AMDGenreRecommendationService.Errors()
{
  return &type metadata for AMDGenreRecommendationService.Errors;
}

uint64_t property wrapper backing initializer of BookOrientationTracker.previousInterfaceOrientation(uint64_t a1)
{
  return sub_1003D0B20(a1, (uint64_t (*)(_QWORD))type metadata accessor for UIInterfaceOrientation);
}

uint64_t sub_1003D0A0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100720C40, (uint64_t)&unk_100720C68, a2);
}

uint64_t sub_1003D0A20(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0C00(a1, a2, a3, a4, (uint64_t)&unk_100720C40, (uint64_t)&unk_100720C68);
}

uint64_t BookOrientationTracker.previousInterfaceOrientation.getter()
{
  return sub_1001EEA54((uint64_t)&unk_100720C40, (uint64_t)&unk_100720C68);
}

uint64_t BookOrientationTracker.$previousInterfaceOrientation.getter()
{
  return sub_1003D0E20(&OBJC_IVAR____TtC5Books22BookOrientationTracker__previousInterfaceOrientation, &qword_1009DB8D0);
}

uint64_t sub_1003D0A64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100720C88, (uint64_t)&unk_100720CB0, a2);
}

uint64_t sub_1003D0A78(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0C00(a1, a2, a3, a4, (uint64_t)&unk_100720C88, (uint64_t)&unk_100720CB0);
}

uint64_t BookOrientationTracker.currentInterfaceOrientation.getter()
{
  return sub_1001EEA54((uint64_t)&unk_100720C88, (uint64_t)&unk_100720CB0);
}

uint64_t BookOrientationTracker.$currentInterfaceOrientation.getter()
{
  return sub_1003D0E20(&OBJC_IVAR____TtC5Books22BookOrientationTracker__currentInterfaceOrientation, &qword_1009DB8D0);
}

uint64_t property wrapper backing initializer of BookOrientationTracker.previousDeviceOrientation(uint64_t a1)
{
  return sub_1003D0B20(a1, (uint64_t (*)(_QWORD))type metadata accessor for UIDeviceOrientation);
}

uint64_t sub_1003D0AC8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100720CD0, (uint64_t)&unk_100720CF8, a2);
}

uint64_t sub_1003D0ADC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0C00(a1, a2, a3, a4, (uint64_t)&unk_100720CD0, (uint64_t)&unk_100720CF8);
}

uint64_t BookOrientationTracker.currentDeviceOrientation.getter()
{
  return sub_1001EEA54((uint64_t)&unk_100720CD0, (uint64_t)&unk_100720CF8);
}

uint64_t BookOrientationTracker.$currentDeviceOrientation.getter()
{
  return sub_1003D0E20(&OBJC_IVAR____TtC5Books22BookOrientationTracker__currentDeviceOrientation, &qword_1009E0310);
}

uint64_t sub_1003D0B20(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1;
  v2 = a2(0);
  return Published.init(initialValue:)(&v4, v2);
}

uint64_t sub_1003D0B60@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100720D18, (uint64_t)&unk_100720D40, a2);
}

uint64_t sub_1003D0B74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  result = swift_release(v8);
  *a4 = v10;
  return result;
}

uint64_t sub_1003D0BEC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0C00(a1, a2, a3, a4, (uint64_t)&unk_100720D18, (uint64_t)&unk_100720D40);
}

uint64_t sub_1003D0C00(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t BookOrientationTracker.previousDeviceOrientation.getter()
{
  return sub_1001EEA54((uint64_t)&unk_100720D18, (uint64_t)&unk_100720D40);
}

uint64_t sub_1003D0C88(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(*a1 + *a4, v8, 33, 0);
  v6 = sub_10004CFD4(a5);
  Published.projectedValue.getter(v6);
  return swift_endAccess(v8);
}

uint64_t sub_1003D0CF4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, uint64_t *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v11 = sub_10004CFD4(a5);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = __chkstk_darwin(v15);
  v18 = &v24[-v17 - 8];
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v12 + 16);
  v19(&v24[-v17 - 8], a1, v11, v16);
  v20 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v19)(v14, v18, v11);
  swift_beginAccess(v20 + *a6, v24, 33, 0);
  v21 = sub_10004CFD4(a7);
  Published.projectedValue.setter(v14, v21);
  swift_endAccess(v24);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
}

uint64_t BookOrientationTracker.$previousDeviceOrientation.getter()
{
  return sub_1003D0E20(&OBJC_IVAR____TtC5Books22BookOrientationTracker__previousDeviceOrientation, &qword_1009E0310);
}

uint64_t sub_1003D0E20(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = sub_10004CFD4(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t sub_1003D0E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v3 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  v45 = v3;
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009E0310);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009DB8D0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1 + OBJC_IVAR____TtC5Books22BookOrientationTracker__previousInterfaceOrientation;
  v46[0] = 0;
  type metadata accessor for UIInterfaceOrientation(0);
  v16 = v15;
  Published.init(initialValue:)(v46, v15);
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v17(v14, v13, v10);
  v18 = v1 + OBJC_IVAR____TtC5Books22BookOrientationTracker__currentInterfaceOrientation;
  v46[0] = 0;
  Published.init(initialValue:)(v46, v16);
  v17(v18, v13, v10);
  v19 = v1 + OBJC_IVAR____TtC5Books22BookOrientationTracker__currentDeviceOrientation;
  v46[0] = 0;
  type metadata accessor for UIDeviceOrientation(0);
  v21 = v20;
  Published.init(initialValue:)(v46, v20);
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v22(v19, v9, v6);
  v23 = v1 + OBJC_IVAR____TtC5Books22BookOrientationTracker__previousDeviceOrientation;
  v46[0] = 0;
  Published.init(initialValue:)(v46, v21);
  v22(v23, v9, v6);
  v24 = v1 + OBJC_IVAR____TtC5Books22BookOrientationTracker_cancellables;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22BookOrientationTracker_cancellables) = &_swiftEmptySetSingleton;
  v25 = objc_msgSend((id)objc_opt_self(UIWindow), "_applicationKeyWindow");
  v26 = v25;
  if (v25)
  {
    v27 = objc_msgSend(v25, "windowScene");

    if (v27)
    {
      v26 = objc_msgSend(v27, "interfaceOrientation");

    }
    else
    {
      v26 = 0;
    }
  }
  v28 = v44;
  KeyPath = swift_getKeyPath(&unk_100720C88);
  v30 = swift_getKeyPath(&unk_100720CB0);
  v46[0] = v26;
  swift_retain(v1);
  static Published.subscript.setter(v46, v1, KeyPath, v30);
  v31 = swift_getKeyPath(&unk_100720C88);
  v32 = swift_getKeyPath(&unk_100720CB0);
  static Published.subscript.getter(v46, v1, v31);
  swift_release(v31);
  swift_release(v32);
  v33 = v46[0];
  v34 = swift_getKeyPath(&unk_100720C40);
  v35 = swift_getKeyPath(&unk_100720C68);
  v46[0] = v33;
  swift_retain(v1);
  static Published.subscript.setter(v46, v1, v34, v35);
  v36 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  objc_msgSend(v36, "beginGeneratingDeviceOrientationNotifications");

  v37 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIDeviceOrientationDidChangeNotification, 0);

  v38 = swift_allocObject(&unk_100902D50, 24, 7);
  swift_weakInit(v38 + 16, v1);
  v39 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v40 = Publisher<>.sink(receiveValue:)(sub_1003D2CC8, v38, v28, v39);
  v41 = swift_release(v38);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v5, v28, v41);
  swift_beginAccess(v24, v46, 33, 0);
  AnyCancellable.store(in:)(v24);
  swift_endAccess(v46);
  swift_release(v40);
  sub_1003D15C4();
  return v1;
}

double sub_1003D12D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_1003D1410();
    sub_1003D15C4();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall BookOrientationTracker.resetInterfaceOrientation()()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100720C88);
  v2 = swift_getKeyPath(&unk_100720CB0);
  static Published.subscript.getter(&v6, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v2);
  if ((unint64_t)(v6 - 1) >= 4)
    v3 = 0;
  else
    v3 = v6;
  v4 = swift_getKeyPath(&unk_100720CD0);
  v5 = swift_getKeyPath(&unk_100720CF8);
  static Published.subscript.getter(&v6, v0, v4);
  swift_release(v4);
  swift_release(v5);
  if (v3 != v6)
  {
    objc_msgSend((id)objc_opt_self(UIViewController), "attemptRotationToDeviceOrientation");
    sub_1003D1410();
  }
}

void sub_1003D1410()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v1 = objc_msgSend((id)objc_opt_self(UIWindow), "_applicationKeyWindow");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "windowScene");

    if (v3)
    {
      v4 = objc_msgSend(v3, "interfaceOrientation");

      if (v4)
      {
        KeyPath = swift_getKeyPath(&unk_100720C88);
        v6 = swift_getKeyPath(&unk_100720CB0);
        static Published.subscript.getter(&v14, v0, KeyPath, v6);
        swift_release(KeyPath);
        swift_release(v6);
        if (v4 != v14)
        {
          v7 = swift_getKeyPath(&unk_100720C88);
          v8 = swift_getKeyPath(&unk_100720CB0);
          static Published.subscript.getter(&v14, v0, v7, v8);
          swift_release(v7);
          swift_release(v8);
          v9 = v14;
          v10 = swift_getKeyPath(&unk_100720C40);
          v11 = swift_getKeyPath(&unk_100720C68);
          v14 = v9;
          swift_retain(v0);
          static Published.subscript.setter(&v14, v0, v10, v11);
          v12 = swift_getKeyPath(&unk_100720C88);
          v13 = swift_getKeyPath(&unk_100720CB0);
          v14 = v4;
          swift_retain(v0);
          static Published.subscript.setter(&v14, v0, v12, v13);
        }
      }
    }
  }
}

uint64_t sub_1003D15C4()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v2 = (unint64_t)objc_msgSend(v1, "orientation");

  KeyPath = swift_getKeyPath(&unk_100720CD0);
  v4 = swift_getKeyPath(&unk_100720CF8);
  static Published.subscript.getter(&v14, v0, KeyPath, v4);
  swift_release(KeyPath);
  result = swift_release(v4);
  if (v2 != v14 && (v2 > 6 || ((1 << v2) & 0x61) == 0))
  {
    v7 = swift_getKeyPath(&unk_100720CD0);
    v8 = swift_getKeyPath(&unk_100720CF8);
    static Published.subscript.getter(&v14, v0, v7, v8);
    swift_release(v7);
    swift_release(v8);
    v9 = v14;
    v10 = swift_getKeyPath(&unk_100720D18);
    v11 = swift_getKeyPath(&unk_100720D40);
    v14 = v9;
    swift_retain(v0);
    static Published.subscript.setter(&v14, v0, v10, v11);
    v12 = swift_getKeyPath(&unk_100720CD0);
    v13 = swift_getKeyPath(&unk_100720CF8);
    v14 = v2;
    swift_retain(v0);
    return static Published.subscript.setter(&v14, v0, v12, v13);
  }
  return result;
}

uint64_t BookOrientationTracker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__previousInterfaceOrientation;
  v2 = sub_10004CFD4(&qword_1009DB8D0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__currentInterfaceOrientation, v2);
  v4 = v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__currentDeviceOrientation;
  v5 = sub_10004CFD4(&qword_1009E0310);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__previousDeviceOrientation, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker_cancellables));
  return v0;
}

uint64_t BookOrientationTracker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__previousInterfaceOrientation;
  v2 = sub_10004CFD4(&qword_1009DB8D0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__currentInterfaceOrientation, v2);
  v4 = v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__currentDeviceOrientation;
  v5 = sub_10004CFD4(&qword_1009E0310);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker__previousDeviceOrientation, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22BookOrientationTracker_cancellables));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t BookReaderStateManager.isOrientationLocked.getter()
{
  uint64_t v1;

  CurrentValueSubject.value.getter(&v1);
  return v1;
}

uint64_t BookReaderStateManager.lockedOrientation.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(_QWORD *)(v0 + 40);
}

BOOL BookReaderStateManager.statusBarHidden.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *(_QWORD *)(v0 + 24);
  KeyPath = swift_getKeyPath(&unk_100720D60);
  v6 = swift_getKeyPath(&unk_100720D88);
  static Published.subscript.getter(v3, v4, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  LOBYTE(v4) = *(_BYTE *)v3;
  sub_1003D28CC((uint64_t)v3);
  return (v4 & 1) == 0;
}

uint64_t BookReaderStateManager.statusBarStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  unsigned __int8 v9;
  char v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t ObjectType;
  __n128 v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for BookThemeEntity(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v7 = objc_msgSend(v6, "userInterfaceIdiom");

  if ((!v7
     || (v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication"),
         v9 = UIApplication.isSplitOrSlideOver.getter(),
         v8,
         (v9 & 1) != 0))
    && (*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    Strong = swift_unknownObjectUnownedLoadStrong(v1 + 96);
    v12 = *(_QWORD *)(v1 + 104);
    ObjectType = swift_getObjectType();
    dispatch thunk of ReadingSettingsProviding.currentTheme.getter(ObjectType, v12);
    v14 = swift_unknownObjectRelease(Strong);
    LOBYTE(Strong) = BookThemeEntity.hasDarkBackground.getter(v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v10 = Strong ^ 1;
  }
  return v10 & 1;
}

id UIApplication.isSplitOrSlideOver.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  double Width;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGRect v16;
  CGRect v17;

  result = objc_msgSend(v0, "delegate");
  if (result)
  {
    v2 = result;
    if ((objc_msgSend(result, "respondsToSelector:", "window") & 1) != 0)
    {
      v3 = objc_msgSend(v2, "window");
      swift_unknownObjectRelease(v2);
      if (v3)
      {
        v4 = v3;
        objc_msgSend(v4, "frame");
        Width = CGRectGetWidth(v16);
        v6 = objc_msgSend(v4, "screen");
        objc_msgSend(v6, "bounds");
        v8 = v7;
        v10 = v9;
        v12 = v11;
        v14 = v13;

        v17.origin.x = v8;
        v17.origin.y = v10;
        v17.size.width = v12;
        v17.size.height = v14;
        v15 = CGRectGetWidth(v17);

        return (id)(vabdd_f64(Width, v15) >= 0.00999999978);
      }
    }
    else
    {
      swift_unknownObjectRelease(v2);
    }
    return 0;
  }
  return result;
}

uint64_t BookReaderStateManager.statusBarStateChangeHandler.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 56, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 56);
}

uint64_t BookReaderStateManager.statusBarStateChangeHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 56, v6, 1, 0);
  *(_QWORD *)(v2 + 64) = a2;
  swift_unknownObjectWeakAssign(v2 + 56, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*BookReaderStateManager.statusBarStateChangeHandler.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 56, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1003D1DD8;
}

void sub_1003D1DDC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  unsigned __int8 v4;
  NSString v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "BOOLForKey:", v3);

  v7[0] = v4;
  CurrentValueSubject.value.setter(v7);
  v5 = String._bridgeToObjectiveC()();
  v6 = (uint64_t)objc_msgSend(v2, "integerForKey:", v5);

  if (v6 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v6 <= 0x7FFFFFFF)
  {
    swift_beginAccess(v1 + 40, v7, 1, 0);
    *(_QWORD *)(v1 + 40) = v6;
    return;
  }
  __break(1u);
}

uint64_t sub_1003D1EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = result + 56;
    swift_beginAccess(result + 56, &v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    v6 = *(_QWORD *)(v3 + 64);
    result = swift_release(v3);
    if (Strong)
    {
      ObjectType = swift_getObjectType(Strong, v7);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
      return swift_unknownObjectRelease(Strong);
    }
  }
  return result;
}

double sub_1003D1F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = type metadata accessor for State(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(Strong + 24);
    v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v11 = objc_msgSend(v10, "readerShowStatusBar");

    v12 = v9 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v9 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v13, 0, 0);
    sub_10002CD84(v12, (uint64_t)v5, type metadata accessor for State);
    v5[1] = v11;
    sub_1003DC7BC((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

_QWORD *BookReaderStateManager.deinit()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v0 + 11, v5, 1, 0);
  v1 = v0[11];
  swift_bridgeObjectRetain(v1);
  sub_1002FBE64(v2);
  swift_bridgeObjectRelease(v1);
  v3 = v0[11];
  v0[11] = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v3);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  sub_1001FE9A0((uint64_t)(v0 + 7));
  sub_1001FE9A0((uint64_t)(v0 + 9));
  swift_bridgeObjectRelease(v0[11]);
  sub_1003D2908((uint64_t)(v0 + 12));
  sub_1003D2908((uint64_t)(v0 + 14));
  return v0;
}

uint64_t BookReaderStateManager.__deallocating_deinit()
{
  uint64_t v0;

  BookReaderStateManager.deinit();
  return swift_deallocClassInstance(v0, 128, 7);
}

Swift::Void __swiftcall BookReaderStateManager.willOpenModalPresentation()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _BYTE v6[24];

  *(_BYTE *)(v0 + 16) = 1;
  swift_beginAccess(v0 + 56, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 64);
    ObjectType = swift_getObjectType(Strong, v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
  }
}

Swift::Void __swiftcall BookReaderStateManager.didCloseModalPresentation()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _BYTE v6[24];

  *(_BYTE *)(v0 + 16) = 0;
  swift_beginAccess(v0 + 56, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 64);
    ObjectType = swift_getObjectType(Strong, v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
  }
}

Swift::Void __swiftcall BookReaderStateManager.closeMenu()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 72);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 80);
    ObjectType = swift_getObjectType(Strong, v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
  }
}

uint64_t sub_1003D22C8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for BookReaderStateManager();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t BookReaderStateManager.isOrientationLockedPublisher.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v1 = sub_1003D292C();
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t BookReaderStateManager.orientationTracker.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 48));
}

Swift::Void __swiftcall BookReaderStateManager.toggleOrientationLock()()
{
  __n128 v0;
  uint64_t v1;

  CurrentValueSubject.value.getter(&v1);
  if (v1 == 1)
    sub_1003D23A0(v0);
  else
    sub_1003D251C(v0);
}

void sub_1003D23A0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  NSString v12;
  _QWORD v13[4];

  v2 = v1;
  v3 = static Animation.default.getter(a1);
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    withAnimation<A>(_:_:)(v3, sub_1003D2CD0, v1, (char *)&type metadata for () + 8);
    goto LABEL_5;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (!Strong)
  {
LABEL_5:
    swift_release(v3);
    goto LABEL_6;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(v2 + 80);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
  swift_release(v3);
  swift_unknownObjectRelease(v5);
LABEL_6:
  BYTE1(v13[0]) = 0;
  CurrentValueSubject.value.setter((char *)v13 + 1);
  swift_beginAccess(v2 + 40, (char *)v13 + 1, 1, 0);
  *(_QWORD *)(v2 + 40) = 0;
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  CurrentValueSubject.value.getter(v13);
  v9 = LOBYTE(v13[0]);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setBool:forKey:", v9, v10);

  v11 = *(_QWORD *)(v2 + 40);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setInteger:forKey:", v11, v12);

}

void sub_1003D251C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  NSString v12;
  _QWORD v13[4];

  v2 = v1;
  v3 = static Animation.default.getter(a1);
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    withAnimation<A>(_:_:)(v3, sub_1003D2CD0, v1, (char *)&type metadata for () + 8);
    goto LABEL_5;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (!Strong)
  {
LABEL_5:
    swift_release(v3);
    goto LABEL_6;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(v2 + 80);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
  swift_release(v3);
  swift_unknownObjectRelease(v5);
LABEL_6:
  swift_beginAccess(v2 + 40, (char *)v13 + 1, 1, 0);
  *(_QWORD *)(v2 + 40) = 1;
  LOBYTE(v13[0]) = 1;
  CurrentValueSubject.value.setter(v13);
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  CurrentValueSubject.value.getter(v13);
  v9 = LOBYTE(v13[0]);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setBool:forKey:", v9, v10);

  v11 = *(_QWORD *)(v2 + 40);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setInteger:forKey:", v11, v12);

}

uint64_t sub_1003D269C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a1 + 72);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(a1 + 80);
    ObjectType = swift_getObjectType(result, v3);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_1003D26F8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 64) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 56, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_1003D2768@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100720D60);
  v5 = swift_getKeyPath(&unk_100720D88);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1003D27D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10002CD84(a1, (uint64_t)&v14 - v8, type metadata accessor for BookReaderChromeState);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100720D60);
  v12 = swift_getKeyPath(&unk_100720D88);
  sub_10002CD84((uint64_t)v9, (uint64_t)v6, type metadata accessor for BookReaderChromeState);
  swift_retain(v10);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_1003D28CC((uint64_t)v9);
}

uint64_t sub_1003D28CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BookReaderChromeState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003D2908(uint64_t a1)
{
  swift_unknownObjectUnownedDestroy(a1);
  return a1;
}

unint64_t sub_1003D292C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D94A0;
  if (!qword_1009D94A0)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009CEC60);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D94A0);
  }
  return result;
}

uint64_t sub_1003D2978(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003D0C88(a1, a2, a3, &OBJC_IVAR____TtC5Books22BookOrientationTracker__previousInterfaceOrientation, &qword_1009DB8D0);
}

uint64_t sub_1003D299C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0CF4(a1, a2, a3, a4, &qword_1009E06B0, &OBJC_IVAR____TtC5Books22BookOrientationTracker__previousInterfaceOrientation, &qword_1009DB8D0);
}

uint64_t sub_1003D29C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003D0C88(a1, a2, a3, &OBJC_IVAR____TtC5Books22BookOrientationTracker__currentInterfaceOrientation, &qword_1009DB8D0);
}

uint64_t sub_1003D29EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0CF4(a1, a2, a3, a4, &qword_1009E06B0, &OBJC_IVAR____TtC5Books22BookOrientationTracker__currentInterfaceOrientation, &qword_1009DB8D0);
}

uint64_t sub_1003D2A18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003D0C88(a1, a2, a3, &OBJC_IVAR____TtC5Books22BookOrientationTracker__currentDeviceOrientation, &qword_1009E0310);
}

uint64_t sub_1003D2A3C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0CF4(a1, a2, a3, a4, &qword_1009E06A8, &OBJC_IVAR____TtC5Books22BookOrientationTracker__currentDeviceOrientation, &qword_1009E0310);
}

uint64_t sub_1003D2A68(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003D0C88(a1, a2, a3, &OBJC_IVAR____TtC5Books22BookOrientationTracker__previousDeviceOrientation, &qword_1009E0310);
}

uint64_t sub_1003D2A8C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D0CF4(a1, a2, a3, a4, &qword_1009E06A8, &OBJC_IVAR____TtC5Books22BookOrientationTracker__previousDeviceOrientation, &qword_1009E0310);
}

uint64_t sub_1003D2AB8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 40, v5, 0, 0);
  *a2 = *(_QWORD *)(v3 + 40);
  return result;
}

uint64_t sub_1003D2AFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess(*a2 + 40, v5, 1, 0);
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1003D2B3C()
{
  return type metadata accessor for BookOrientationTracker(0);
}

uint64_t type metadata accessor for BookOrientationTracker(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E0350;
  if (!qword_1009E0350)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookOrientationTracker);
  return result;
}

void sub_1003D2B80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  char *v9;

  sub_1003D2C38(319, (unint64_t *)&qword_1009DB930, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    sub_1003D2C38(319, (unint64_t *)&unk_1009E0360, (uint64_t (*)(uint64_t))type metadata accessor for UIDeviceOrientation);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

void sub_1003D2C38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for BookReaderStateManager()
{
  return objc_opt_self(_TtC5Books22BookReaderStateManager);
}

uint64_t sub_1003D2CA4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003D2CC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D12D0(a1, v1);
}

uint64_t sub_1003D2CD0()
{
  uint64_t v0;

  return sub_1003D269C(v0);
}

uint64_t *sub_1003D2CE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for LayoutDirection(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_1003D2D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for LayoutDirection(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_1003D2DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1003D2E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1003D2ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1003D2F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for LayoutDirection(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1003D2FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D2FB8);
}

uint64_t sub_1003D2FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutDirection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1003D2FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D3000);
}

uint64_t sub_1003D3000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutDirection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CenteringHStackLayout(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E0728;
  if (!qword_1009E0728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CenteringHStackLayout);
  return result;
}

uint64_t sub_1003D307C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for LayoutDirection(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_1003D30E8()
{
  unint64_t result;

  result = qword_1009E0760;
  if (!qword_1009E0760)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyAnimatableData, &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_1009E0760);
  }
  return result;
}

uint64_t sub_1003D312C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E06B8);
  sub_100048F64(v0, (uint64_t)qword_1009E06B8);
  sub_100009B88();
  return static OS_os_log.be_logger(for:)(0xD000000000000015, 0x8000000100720E90);
}

void sub_1003D319C(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, uint64_t a7, uint64_t a8, double *a9)
{
  double *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  char *v62;
  double v63;
  uint64_t isUniquelyReferenced_nonNull_native;
  double v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  double *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  double v82;
  double v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  char v89;
  double v90;
  double v91;
  double v92;
  unint64_t v93;
  char v94;
  double v95;
  double v96;
  double v97;
  unint64_t v98;
  char v99;
  CGFloat MidY;
  CGFloat v101;
  CGFloat v102;
  CGFloat v103;
  uint64_t v104;
  double v105;
  double v106;
  double v107;
  CGFloat Height;
  double v109;
  double v110;
  uint64_t v111;
  double v112;
  double v113;
  double v114;
  CGFloat v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  CGFloat v122;
  double v123;
  CGFloat v124;
  uint64_t v125;
  double v126;
  double v127;
  double v128;
  double v129;
  CGFloat v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  CGFloat v136;
  double v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  char v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  char v144;
  CGFloat v145;
  double v146;
  CGFloat v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  CGFloat v152;
  CGFloat v153;
  CGFloat v154;
  CGFloat v155;
  double v156;
  CGFloat v157;
  double v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t);
  Swift::String v161;
  Swift::String v162;
  void *object;
  Swift::String v164;
  uint64_t v165;
  double MinX;
  char *v167;
  uint64_t v168;
  double v169;
  double MaxX;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  double v176;
  double v177;
  CGFloat v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  double v182;
  unint64_t v183;
  _QWORD v184[2];
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;

  MaxX = *(double *)&a1;
  *(double *)&v15 = COERCE_DOUBLE(type metadata accessor for LayoutSubviews(0));
  v16 = *(v15 - 1);
  __chkstk_darwin(v15);
  v18 = (unint64_t)&v165 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for LayoutDirection(0);
  v168 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v171 = (char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = COERCE_DOUBLE(sub_10004CFD4(&qword_1009DD750));
  v169 = *(double *)(*(_QWORD *)&v178 - 8);
  __chkstk_darwin(*(_QWORD *)&v178);
  v21 = (double *)((char *)&v165 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v24 = (double *)((char *)&v165 - v23);
  v25 = type metadata accessor for LayoutSubview(0);
  v179 = *(_QWORD *)(v25 - 8);
  v180 = v25;
  __chkstk_darwin(v25);
  v27 = (char *)&v165 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v165 - v29;
  __chkstk_darwin(v31);
  v175 = (char *)&v165 - v32;
  v33 = sub_100008DB0(&qword_1009E0770, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(&v182, v15, v33);
  dispatch thunk of Collection.endIndex.getter(v184, v15, v33);
  if (dispatch thunk of Collection.distance(from:to:)(&v182, v184, v15, v33) != 3)
  {
LABEL_59:
    (*(void (**)(unint64_t, double *, double *))(*(_QWORD *)&v16 + 16))(v18, a9, v15);
    v182 = 0.0;
    v183 = 0xE000000000000000;
    _StringGuts.grow(_:)(92);
    v161._countAndFlagsBits = 0xD000000000000033;
    v161._object = (void *)0x80000001007C6AF0;
    String.append(_:)(v161);
    dispatch thunk of Collection.startIndex.getter(v184, v15, v33);
    dispatch thunk of Collection.endIndex.getter(&v181, v15, v33);
    v184[0] = dispatch thunk of Collection.distance(from:to:)(v184, &v181, v15, v33);
    v162._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v162._object;
    String.append(_:)(v162);
    swift_bridgeObjectRelease(object);
    v164._object = (void *)0x80000001007C6B30;
    v164._countAndFlagsBits = 0xD000000000000027;
    String.append(_:)(v164);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, *(_QWORD *)&v182, v183, "Books/CenteringHStackLayout.swift", 33, 2, 29, 0);
    __break(1u);
    swift_release(*(_QWORD *)&v182);
    __break(1u);
    return;
  }
  if ((a2 & 1) != 0)
  {
    if (qword_1009CE340 != -1)
      goto LABEL_50;
    goto LABEL_20;
  }
  LayoutSubviews.subscript.getter(0);
  LayoutSubviews.subscript.getter(1);
  LayoutSubviews.subscript.getter(2);
  v34 = sub_10004CFD4(&qword_1009E0778);
  v35 = sub_10004CFD4(&qword_1009D0D30);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 72);
  v38 = *(unsigned __int8 *)(v36 + 80);
  v39 = (v38 + 32) & ~v38;
  *(_QWORD *)&v177 = 2 * v37;
  v40 = swift_allocObject(v34, v39 + 3 * v37, v38 | 7);
  *(_OWORD *)(v40 + 16) = xmmword_100712B60;
  v41 = v40 + v39;
  v42 = v40 + v39 + *(int *)(v35 + 48);
  *(double *)v41 = static UnitPoint.leading.getter(v40);
  *(_QWORD *)(v41 + 8) = v43;
  v44 = v27;
  v174 = v30;
  v45 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v179 + 16);
  v46 = v180;
  v47 = v45(v42, v175, v180);
  v18 = v41 + v37;
  v48 = v18 + *(int *)(v35 + 48);
  *(double *)v18 = static UnitPoint.trailing.getter(v47);
  *(_QWORD *)(v18 + 8) = v49;
  v167 = v44;
  v50 = v45(v48, v44, v46);
  v51 = v41 + *(_QWORD *)&v177;
  v52 = v41 + *(_QWORD *)&v177 + *(int *)(v35 + 48);
  *(double *)v51 = static UnitPoint.center.getter(v50);
  *(_QWORD *)(v51 + 8) = v53;
  v45(v52, v174, v46);
  v54 = sub_1001DABBC(v40);
  swift_bridgeObjectRetain(v54);
  *(double *)&a9 = COERCE_DOUBLE(sub_100427720(v55));
  swift_bridgeObjectRelease(v54);
  v182 = *(double *)&a9;
  sub_1003D400C(&v182);
  swift_bridgeObjectRelease(v54);
  v16 = v182;
  *(double *)&v15 = COERCE_DOUBLE(sub_1001DAD64((uint64_t)_swiftEmptyArrayStorage));
  LOBYTE(v184[0]) = 0;
  v56 = *(_QWORD *)(*(_QWORD *)&v16 + 16);
  if (!v56)
  {
    v75 = v16;
LABEL_24:
    swift_release(*(_QWORD *)&v75);
    v82 = static UnitPoint.leading.getter(v81);
    v84 = v167;
    v33 = v173;
    v85 = v174;
    v86 = v172;
    v87 = v171;
    if (*((_QWORD *)v15 + 2))
    {
      a9 = v15;
      v88 = sub_1002BBCF8(v82, v83);
      if ((v89 & 1) != 0)
      {
        v90 = *(double *)(*((_QWORD *)v15 + 7) + 8 * v88);
        v91 = static UnitPoint.trailing.getter(v88);
        if (*((_QWORD *)v15 + 2))
        {
          a9 = v15;
          v93 = sub_1002BBCF8(v91, v92);
          if ((v94 & 1) != 0)
          {
            v95 = *(double *)(*((_QWORD *)v15 + 7) + 8 * v93);
            v96 = static UnitPoint.center.getter(v93);
            if (*((_QWORD *)v15 + 2))
            {
              a9 = v15;
              v98 = sub_1002BBCF8(v96, v97);
              if ((v99 & 1) != 0)
              {
                v176 = *(double *)(*((_QWORD *)v15 + 7) + 8 * v98);
                v177 = MaxX;
                v185.origin.x = a3;
                v185.origin.y = a4;
                v185.size.width = a5;
                v185.size.height = a6;
                MinX = CGRectGetMinX(v185);
                v186.origin.x = a3;
                v186.origin.y = a4;
                v186.size.width = a5;
                v186.size.height = a6;
                MidY = CGRectGetMidY(v186);
                v178 = v95;
                v101 = MidY;
                v187.origin.x = a3;
                v187.origin.y = a4;
                v187.size.width = a5;
                v187.size.height = a6;
                MaxX = CGRectGetMaxX(v187);
                v188.origin.x = a3;
                v188.origin.y = a4;
                v188.size.width = a5;
                v188.size.height = a6;
                v102 = a6;
                v103 = a5;
                v169 = CGRectGetMidY(v188);
                v105 = static UnitPoint.leading.getter(v104);
                v107 = v106;
                v189.origin.x = a3;
                v189.origin.y = a4;
                v189.size.width = v103;
                v189.size.height = v102;
                Height = CGRectGetHeight(v189);
                LOBYTE(v182) = 0;
                LOBYTE(v181) = 0;
                v109 = v101;
                v110 = v178;
                v111 = LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v90, 0, *(_QWORD *)&Height, 0, MinX, v109, v105, v107);
                v112 = static UnitPoint.trailing.getter(v111);
                v114 = v113;
                v190.origin.x = a3;
                v190.origin.y = a4;
                v190.size.width = v103;
                v190.size.height = v102;
                v115 = CGRectGetHeight(v190);
                LOBYTE(v182) = 0;
                LOBYTE(v181) = 0;
                v116 = v112;
                v117 = v90;
                LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v110, 0, *(_QWORD *)&v115, 0, MaxX, v169, v116, v114);
                v118 = v176;
                if (v90 + v110 + v176 >= v177)
                {
                  v135 = v90;
                  v136 = a3;
                  v137 = v177 - (v90 + v110);
                  v138 = enum case for LayoutDirection.leftToRight(_:);
                  v139 = v168;
                  v140 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 104);
                  v140(v87, enum case for LayoutDirection.leftToRight(_:), v86);
                  v141 = static LayoutDirection.== infix(_:_:)(v33, v87);
                  v142 = *(void (**)(char *, uint64_t))(v139 + 8);
                  v142(v87, v86);
                  if ((v141 & 1) == 0)
                  {
                    v148 = enum case for LayoutDirection.rightToLeft(_:);
                    v140(v87, enum case for LayoutDirection.rightToLeft(_:), v86);
                    v149 = static LayoutDirection.== infix(_:_:)(v33, v87);
                    v142(v87, v86);
                    if ((v149 & 1) == 0)
                    {
LABEL_45:
                      v159 = v180;
                      v160 = *(void (**)(char *, uint64_t))(v179 + 8);
                      v160(v84, v180);
                      v160(v85, v159);
                      v160(v175, v159);
                      swift_bridgeObjectRelease(v15);
                      return;
                    }
                    v150 = v33 + *(int *)(type metadata accessor for CenteringHStackLayout(0) + 20);
                    v140(v87, v148, v86);
                    v151 = static LayoutDirection.== infix(_:_:)(v150, v87);
                    v142(v87, v86);
                    v152 = a3;
                    v153 = a4;
                    v154 = v103;
                    v155 = v102;
                    if ((v151 & 1) != 0)
                    {
                      v156 = v135 + CGRectGetMinX(*(CGRect *)&v152);
                      v199.origin.x = a3;
                      v199.origin.y = a4;
                      v199.size.width = v103;
                      v199.size.height = v102;
                      v157 = CGRectGetMidY(v199);
                      v200.origin.x = a3;
                      v200.origin.y = a4;
                      v200.size.width = v103;
                      v200.size.height = v102;
                      v130 = CGRectGetHeight(v200);
                      LOBYTE(v182) = 0;
                      LOBYTE(v181) = 0;
                      v133 = 0.0;
                    }
                    else
                    {
                      v156 = CGRectGetMaxX(*(CGRect *)&v152) - v135;
                      v203.origin.x = a3;
                      v203.origin.y = a4;
                      v203.size.width = v103;
                      v203.size.height = v102;
                      v157 = CGRectGetMidY(v203);
                      v204.origin.x = a3;
                      v204.origin.y = a4;
                      v204.size.width = v103;
                      v204.size.height = v102;
                      v130 = CGRectGetHeight(v204);
                      LOBYTE(v182) = 0;
                      LOBYTE(v181) = 0;
                      v133 = 1.0;
                    }
                    v134 = 0.5;
                    v131 = v156;
                    v132 = v157;
                    v158 = v137;
LABEL_44:
                    LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v158, 0, *(_QWORD *)&v130, 0, v131, v132, v133, v134);
                    goto LABEL_45;
                  }
                  v143 = v33 + *(int *)(type metadata accessor for CenteringHStackLayout(0) + 20);
                  v140(v87, v138, v86);
                  v144 = static LayoutDirection.== infix(_:_:)(v143, v87);
                  v142(v87, v86);
                  v196.origin.x = a3;
                  v196.origin.y = a4;
                  v196.size.width = v103;
                  v145 = v102;
                  v196.size.height = v102;
                  v146 = v135 + CGRectGetMinX(v196);
                  if ((v144 & 1) != 0)
                  {
                    v197.origin.x = v136;
                    v197.origin.y = a4;
                    v197.size.width = v103;
                    v197.size.height = v145;
                    v147 = CGRectGetMidY(v197);
                    v129 = v137;
                    v198.origin.x = v136;
                    v198.origin.y = a4;
                    v198.size.width = v103;
                    v198.size.height = v145;
                    v130 = CGRectGetHeight(v198);
                    LOBYTE(v182) = 0;
                    LOBYTE(v181) = 0;
                    v133 = 0.0;
                  }
                  else
                  {
                    v146 = v137 + v146;
                    v201.origin.x = v136;
                    v201.origin.y = a4;
                    v201.size.width = v103;
                    v201.size.height = v145;
                    v147 = CGRectGetMidY(v201);
                    v129 = v137;
                    v202.origin.x = v136;
                    v202.origin.y = a4;
                    v202.size.width = v103;
                    v202.size.height = v145;
                    v130 = CGRectGetHeight(v202);
                    LOBYTE(v182) = 0;
                    LOBYTE(v181) = 0;
                    v133 = 1.0;
                  }
                  v134 = 0.5;
                  v131 = v146;
                  v132 = v147;
                }
                else
                {
                  v191.origin.x = a3;
                  v191.origin.y = a4;
                  v191.size.width = v103;
                  v191.size.height = v102;
                  v119 = CGRectGetMidX(v191) + v118 * -0.5;
                  v192.origin.x = a3;
                  v192.origin.y = a4;
                  v192.size.width = v103;
                  v192.size.height = v102;
                  v120 = v117 + CGRectGetMinX(v192);
                  v177 = a3;
                  v193.origin.x = a3;
                  v193.origin.y = a4;
                  v193.size.width = v103;
                  v193.size.height = v102;
                  v121 = CGRectGetMaxX(v193);
                  v122 = v102;
                  if (v119 >= v120)
                  {
                    v123 = v121 - v110;
                    v120 = v119;
                    if (v123 < v118 + v119)
                      v120 = v123 - v118;
                  }
                  v124 = v177;
                  v194.origin.x = v177;
                  v194.origin.y = a4;
                  v194.size.width = v103;
                  v194.size.height = v102;
                  v178 = CGRectGetMidY(v194);
                  v126 = static UnitPoint.leading.getter(v125);
                  v128 = v127;
                  v129 = v118;
                  v195.origin.x = v124;
                  v195.origin.y = a4;
                  v195.size.width = v103;
                  v195.size.height = v122;
                  v130 = CGRectGetHeight(v195);
                  LOBYTE(v182) = 0;
                  LOBYTE(v181) = 0;
                  v131 = v120;
                  v132 = v178;
                  v133 = v126;
                  v134 = v128;
                }
                v158 = v129;
                goto LABEL_44;
              }
              goto LABEL_56;
            }
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UnitPoint);
            __break(1u);
            goto LABEL_59;
          }
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_53;
  }
  v177 = a6;
  *(_QWORD *)&v176 = (char *)v24 + *(int *)(*(_QWORD *)&v178 + 48);
  v57 = (*(unsigned __int8 *)(*(_QWORD *)&v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)&v169 + 80);
  MinX = v16;
  v58 = *(_QWORD *)&v16 + v57;
  v33 = *(_QWORD *)(*(_QWORD *)&v169 + 72);
  v59 = a5;
  while (1)
  {
    sub_1003D4090(v58, (uint64_t)v24);
    v60 = *v24;
    v61 = v24[1];
    v62 = (char *)v21 + *(int *)(*(_QWORD *)&v178 + 48);
    *v21 = *v24;
    v21[1] = v61;
    (*(void (**)(char *, double, uint64_t))(v179 + 32))(v62, COERCE_DOUBLE(*(_QWORD *)&v176), v180);
    LOBYTE(v182) = v184[0];
    LOBYTE(v181) = 0;
    v63 = LayoutSubview.sizeThatFits(_:)(*(_QWORD *)&v59);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
    v182 = *(double *)&v15;
    a9 = v15;
    v18 = sub_1002BBCF8(v60, v61);
    v66 = *((_QWORD *)v15 + 2);
    v67 = (LOBYTE(v65) & 1) == 0;
    v68 = v66 + v67;
    if (__OFADD__(v66, v67))
      break;
    v16 = v65;
    if (*((_QWORD *)v15 + 3) >= v68)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        *(double *)&v15 = v182;
        if ((LOBYTE(v65) & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        *(double *)&a9 = COERCE_DOUBLE(&v182);
        sub_1002C0C00();
        *(double *)&v15 = v182;
        if ((LOBYTE(v16) & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_10037BE6C(v68, isUniquelyReferenced_nonNull_native);
      *(double *)&a9 = v182;
      v69 = sub_1002BBCF8(v60, v61);
      if ((LOBYTE(v16) & 1) != (v70 & 1))
        goto LABEL_58;
      v18 = v69;
      *(double *)&v15 = v182;
      if ((LOBYTE(v16) & 1) != 0)
      {
LABEL_12:
        *(double *)(*((_QWORD *)v15 + 7) + 8 * v18) = v63;
        goto LABEL_16;
      }
    }
    *(_QWORD *)&v15[(v18 >> 6) + 8] |= 1 << v18;
    v71 = (double *)(*((_QWORD *)v15 + 6) + 16 * v18);
    *v71 = v60;
    v71[1] = v61;
    *(double *)(*((_QWORD *)v15 + 7) + 8 * v18) = v63;
    v72 = *((_QWORD *)v15 + 2);
    v73 = __OFADD__(v72, 1);
    v74 = v72 + 1;
    if (v73)
      goto LABEL_49;
    *((_QWORD *)v15 + 2) = v74;
LABEL_16:
    swift_bridgeObjectRelease(0x8000000000000000);
    if ((v184[0] & 1) != 0)
      goto LABEL_57;
    sub_1003D40D8((uint64_t)v21);
    v59 = v59 - v63;
    v58 += v33;
    if (!--v56)
    {
      v75 = MinX;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  swift_once(&qword_1009CE340, sub_1003D312C);
LABEL_20:
  v76 = type metadata accessor for Logger(0);
  v77 = sub_100048F64(v76, (uint64_t)qword_1009E06B8);
  v78 = Logger.logObject.getter(v77);
  v79 = static os_log_type_t.error.getter(v78);
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v80 = 0;
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "Cannot center anything with no proposed size", v80, 2u);
    swift_slowDealloc(v80, -1, -1);
  }

}

uint64_t sub_1003D3E88()
{
  LayoutProperties.init()();
  return LayoutProperties.stackOrientation.setter(0);
}

double sub_1003D3EBC(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

void sub_1003D3EDC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  sub_1003D319C(a1, a2 & 1, a6, a7, a8, a9, a3, a4, a5);
}

uint64_t sub_1003D3EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1003D3F44(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1003D3F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1003D3F44(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1003D3F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_1003D3F80(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_100259864;
}

uint64_t sub_1003D3FE0()
{
  return sub_100008DB0(&qword_1009E0768, type metadata accessor for CenteringHStackLayout, (uint64_t)&unk_100720EC8);
}

void sub_1003D400C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_10004CFD4(&qword_1009DD750) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100699620(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003D4118(v5);
  *a1 = v3;
}

uint64_t sub_1003D4090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D40D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009DD750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003D4118(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  unint64_t v24;
  char *v25;
  char *v26;
  Swift::Int v27;
  Swift::Int v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  _OWORD *v40;
  char *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  Swift::Int v45;
  Swift::Int v46;
  Swift::Int v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  double v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  _OWORD *v59;
  char *v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  Swift::Int v64;
  uint64_t v65;
  Swift::Int v66;
  Swift::Int v67;
  uint64_t v68;
  Swift::Int v69;
  Swift::Int v70;
  unint64_t v71;
  uint64_t v72;
  Swift::Int v73;
  Swift::Int v74;
  uint64_t v75;
  Swift::Int v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  double v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  _QWORD *v163;
  Swift::Int v164;
  char *v165;
  uint64_t v166;
  Swift::Int v167;
  uint64_t v168;
  Swift::Int v169;
  _QWORD *v170;
  unint64_t v171;
  uint64_t v172;
  Swift::Int v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t);
  _OWORD *v176;
  _OWORD *v177;
  _OWORD *v178;
  _OWORD *v179;
  char *v180;
  uint64_t v181;
  Swift::Int v182;
  Swift::Int v183;
  char *v184;
  uint64_t v185;

  v2 = v1;
  v185 = sub_10004CFD4(&qword_1009DD750);
  v4 = *(_QWORD *)(v185 - 8);
  __chkstk_darwin(v185);
  v168 = (uint64_t)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v181 = (uint64_t)&v162 - v7;
  __chkstk_darwin(v8);
  v178 = (_OWORD *)((char *)&v162 - v9);
  __chkstk_darwin(v10);
  v177 = (_OWORD *)((char *)&v162 - v11);
  __chkstk_darwin(v12);
  v176 = (_OWORD *)((char *)&v162 - v13);
  __chkstk_darwin(v14);
  v179 = (_OWORD *)((char *)&v162 - v15);
  v16 = a1[1];
  v17 = _minimumMergeRunLength(_:)(v16);
  if (v17 >= v16)
  {
    if (v16 < 0)
      goto LABEL_139;
    if (v16)
      sub_1003D4CC4(0, v16, 1, a1);
    return;
  }
  if (v16 >= 0)
    v18 = v16;
  else
    v18 = v16 + 1;
  if (v16 < -1)
    goto LABEL_147;
  v164 = v17;
  if (v16 < 2)
  {
    v22 = (char *)_swiftEmptyArrayStorage;
    v171 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v163 = _swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      v24 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v24 >= 2)
      {
        v154 = v4;
        v155 = *a1;
        do
        {
          v156 = v24 - 2;
          if (v24 < 2)
            goto LABEL_134;
          if (!v155)
            goto LABEL_146;
          v157 = *(_QWORD *)&v22[16 * v156 + 32];
          v158 = *(_QWORD *)&v22[16 * v24 + 24];
          sub_1003D4FB0(v155 + *(_QWORD *)(v154 + 72) * v157, v155 + *(_QWORD *)(v154 + 72) * *(_QWORD *)&v22[16 * v24 + 16], v155 + *(_QWORD *)(v154 + 72) * v158, v171);
          if (v2)
            break;
          if (v158 < v157)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
            v22 = sub_1006995F8((uint64_t)v22);
          if (v156 >= *((_QWORD *)v22 + 2))
            goto LABEL_136;
          v159 = &v22[16 * v156 + 32];
          *(_QWORD *)v159 = v157;
          *((_QWORD *)v159 + 1) = v158;
          v160 = *((_QWORD *)v22 + 2);
          if (v24 > v160)
            goto LABEL_137;
          memmove(&v22[16 * v24 + 16], &v22[16 * v24 + 32], 16 * (v160 - v24));
          *((_QWORD *)v22 + 2) = v160 - 1;
          v24 = v160 - 1;
        }
        while (v160 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease(v22);
      v161 = v163;
      v163[2] = 0;
      swift_bridgeObjectRelease(v161);
      return;
    }
  }
  else
  {
    v19 = v18 >> 1;
    v20 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18 >> 1, v185);
    *(_QWORD *)(v20 + 16) = v19;
    v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v163 = (_QWORD *)v20;
    v171 = v20 + v21;
  }
  v23 = 0;
  v22 = (char *)_swiftEmptyArrayStorage;
  v172 = v4;
  v170 = a1;
  while (1)
  {
    v25 = v23;
    v26 = v23 + 1;
    v169 = (Swift::Int)v23;
    if ((uint64_t)(v23 + 1) >= v16)
    {
      v45 = (Swift::Int)(v23 + 1);
    }
    else
    {
      v167 = *a1;
      v27 = v167;
      v28 = *(_QWORD *)(v4 + 72);
      v29 = v179;
      sub_1003D4090(v167 + v28 * (_QWORD)v26, (uint64_t)v179);
      v182 = v16;
      v30 = v176;
      sub_1003D4090(v27 + v28 * (_QWORD)v25, (uint64_t)v176);
      v31 = *(int *)(v185 + 48);
      v32 = (char *)v177 + v31;
      v184 = (char *)v29 + v31;
      *v177 = *v29;
      v33 = type metadata accessor for LayoutSubview(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(char **)(v34 + 16);
      v36 = ((uint64_t (*)(char *, char *, uint64_t))v35)(v32, v184, v33);
      v37 = LayoutSubview.priority.getter(v36);
      v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v38(v32, v33);
      v39 = *(int *)(v185 + 48);
      v40 = v178;
      v41 = (char *)v178 + v39;
      *v178 = *v30;
      v180 = v35;
      v42 = ((uint64_t (*)(char *, char *, uint64_t))v35)((char *)v40 + v39, (char *)v30 + v39, v33);
      v43 = LayoutSubview.priority.getter(v42);
      v175 = v38;
      v38(v41, v33);
      v44 = (uint64_t)v30;
      v16 = v182;
      sub_1003D40D8(v44);
      sub_1003D40D8((uint64_t)v179);
      v45 = v169 + 2;
      v183 = v28;
      if (v169 + 2 >= v16)
      {
        v4 = v172;
      }
      else
      {
        v165 = v22;
        v166 = v2;
        v46 = v167;
        v173 = v28 * v45;
        v174 = v28 * (_QWORD)v26;
        while (1)
        {
          v47 = v45;
          LODWORD(v184) = v43 < v37;
          v48 = v179;
          sub_1003D4090(v46 + v173, (uint64_t)v179);
          v49 = v176;
          sub_1003D4090(v46 + v174, (uint64_t)v176);
          v50 = v185;
          v51 = *(int *)(v185 + 48);
          v52 = v177;
          v53 = (char *)v177 + v51;
          *v177 = *v48;
          v54 = v180;
          v55 = ((uint64_t (*)(char *, char *, uint64_t))v180)((char *)v52 + v51, (char *)v48 + v51, v33);
          v56 = LayoutSubview.priority.getter(v55);
          v57 = v175;
          v175(v53, v33);
          v58 = *(int *)(v50 + 48);
          v59 = v178;
          v60 = (char *)v178 + v58;
          *v178 = *v49;
          v61 = ((uint64_t (*)(char *, char *, uint64_t))v54)((char *)v59 + v58, (char *)v49 + v58, v33);
          v62 = LayoutSubview.priority.getter(v61);
          v57(v60, v33);
          sub_1003D40D8((uint64_t)v49);
          sub_1003D40D8((uint64_t)v48);
          if ((_DWORD)v184 == v62 >= v56)
            break;
          v45 = v47 + 1;
          v16 = v182;
          v46 += v183;
          if (v182 == v47 + 1)
          {
            v45 = v182;
            v2 = v166;
            v4 = v172;
            v22 = v165;
            goto LABEL_24;
          }
        }
        v2 = v166;
        v22 = v165;
        v45 = v47;
        v4 = v172;
        v16 = v182;
      }
LABEL_24:
      v25 = (char *)v169;
      a1 = v170;
      if (v43 < v37)
      {
        if (v45 < v169)
          goto LABEL_140;
        if (v169 < v45)
        {
          v165 = v22;
          v166 = v2;
          v63 = 0;
          v64 = v183;
          v65 = v183 * (v45 - 1);
          v66 = v45 * v183;
          v67 = v169;
          v68 = v169 * v183;
          do
          {
            if (v67 != v45 + v63 - 1)
            {
              v69 = v167;
              if (!v167)
                goto LABEL_145;
              v70 = v45;
              v71 = v167 + v68;
              v72 = v167 + v65;
              sub_1003D55B8(v167 + v68, v168);
              if (v68 < v65 || v71 >= v69 + v66)
              {
                swift_arrayInitWithTakeFrontToBack(v69 + v68, v69 + v65, 1, v185);
                v64 = v183;
              }
              else
              {
                v64 = v183;
                if (v68 != v65)
                  swift_arrayInitWithTakeBackToFront(v71, v72);
              }
              sub_1003D55B8(v168, v72);
              v45 = v70;
              v25 = (char *)v169;
            }
            ++v67;
            --v63;
            v65 -= v64;
            v66 -= v64;
            v68 += v64;
          }
          while (v67 < v45 + v63);
          v2 = v166;
          v4 = v172;
          a1 = v170;
          v22 = v165;
          v16 = v182;
        }
      }
    }
    if (v45 < v16)
    {
      if (__OFSUB__(v45, v25))
        goto LABEL_138;
      if (v45 - (uint64_t)v25 < v164)
        break;
    }
LABEL_56:
    if (v45 < (uint64_t)v25)
      goto LABEL_133;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
    v180 = (char *)v45;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v22 = sub_1006990C0(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
    v103 = *((_QWORD *)v22 + 2);
    v102 = *((_QWORD *)v22 + 3);
    v24 = v103 + 1;
    if (v103 >= v102 >> 1)
      v22 = sub_1006990C0((char *)(v102 > 1), v103 + 1, 1, v22);
    *((_QWORD *)v22 + 2) = v24;
    v104 = v22 + 32;
    v105 = &v22[16 * v103 + 32];
    v106 = v180;
    *(_QWORD *)v105 = v25;
    *((_QWORD *)v105 + 1) = v106;
    if (v103)
    {
      while (1)
      {
        v107 = v24 - 1;
        if (v24 >= 4)
        {
          v112 = &v104[16 * v24];
          v113 = *((_QWORD *)v112 - 8);
          v114 = *((_QWORD *)v112 - 7);
          v118 = __OFSUB__(v114, v113);
          v115 = v114 - v113;
          if (v118)
            goto LABEL_122;
          v117 = *((_QWORD *)v112 - 6);
          v116 = *((_QWORD *)v112 - 5);
          v118 = __OFSUB__(v116, v117);
          v110 = v116 - v117;
          v111 = v118;
          if (v118)
            goto LABEL_123;
          v119 = v24 - 2;
          v120 = &v104[16 * v24 - 32];
          v122 = *(_QWORD *)v120;
          v121 = *((_QWORD *)v120 + 1);
          v118 = __OFSUB__(v121, v122);
          v123 = v121 - v122;
          if (v118)
            goto LABEL_125;
          v118 = __OFADD__(v110, v123);
          v124 = v110 + v123;
          if (v118)
            goto LABEL_128;
          if (v124 >= v115)
          {
            v142 = &v104[16 * v107];
            v144 = *(_QWORD *)v142;
            v143 = *((_QWORD *)v142 + 1);
            v118 = __OFSUB__(v143, v144);
            v145 = v143 - v144;
            if (v118)
              goto LABEL_132;
            v135 = v110 < v145;
            goto LABEL_93;
          }
        }
        else
        {
          if (v24 != 3)
          {
            v136 = *((_QWORD *)v22 + 4);
            v137 = *((_QWORD *)v22 + 5);
            v118 = __OFSUB__(v137, v136);
            v129 = v137 - v136;
            v130 = v118;
            goto LABEL_87;
          }
          v109 = *((_QWORD *)v22 + 4);
          v108 = *((_QWORD *)v22 + 5);
          v118 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          v111 = v118;
        }
        if ((v111 & 1) != 0)
          goto LABEL_124;
        v119 = v24 - 2;
        v125 = &v104[16 * v24 - 32];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v128 = __OFSUB__(v126, v127);
        v129 = v126 - v127;
        v130 = v128;
        if (v128)
          goto LABEL_127;
        v131 = &v104[16 * v107];
        v133 = *(_QWORD *)v131;
        v132 = *((_QWORD *)v131 + 1);
        v118 = __OFSUB__(v132, v133);
        v134 = v132 - v133;
        if (v118)
          goto LABEL_130;
        if (__OFADD__(v129, v134))
          goto LABEL_131;
        if (v129 + v134 >= v110)
        {
          v135 = v110 < v134;
LABEL_93:
          if (v135)
            v107 = v119;
          goto LABEL_95;
        }
LABEL_87:
        if ((v130 & 1) != 0)
          goto LABEL_126;
        v138 = &v104[16 * v107];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        v118 = __OFSUB__(v139, v140);
        v141 = v139 - v140;
        if (v118)
          goto LABEL_129;
        if (v141 < v129)
          goto LABEL_14;
LABEL_95:
        v146 = v107 - 1;
        if (v107 - 1 >= v24)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        v147 = *a1;
        if (!*a1)
          goto LABEL_144;
        v148 = v22;
        v149 = &v104[16 * v146];
        v150 = *(_QWORD *)v149;
        v151 = &v104[16 * v107];
        v152 = *((_QWORD *)v151 + 1);
        sub_1003D4FB0(v147 + *(_QWORD *)(v172 + 72) * *(_QWORD *)v149, v147 + *(_QWORD *)(v172 + 72) * *(_QWORD *)v151, v147 + *(_QWORD *)(v172 + 72) * v152, v171);
        if (v2)
        {
          v22 = v148;
          goto LABEL_116;
        }
        if (v152 < v150)
          goto LABEL_119;
        if (v107 > *((_QWORD *)v148 + 2))
          goto LABEL_120;
        *(_QWORD *)v149 = v150;
        *(_QWORD *)&v104[16 * v146 + 8] = v152;
        v153 = *((_QWORD *)v148 + 2);
        if (v107 >= v153)
          goto LABEL_121;
        v22 = v148;
        v24 = v153 - 1;
        memmove(&v104[16 * v107], v151 + 16, 16 * (v153 - 1 - v107));
        *((_QWORD *)v148 + 2) = v153 - 1;
        a1 = v170;
        if (v153 <= 2)
          goto LABEL_14;
      }
    }
    v24 = 1;
LABEL_14:
    v16 = a1[1];
    v23 = v180;
    v4 = v172;
    if ((uint64_t)v180 >= v16)
      goto LABEL_105;
  }
  if (__OFADD__(v25, v164))
    goto LABEL_141;
  if ((uint64_t)&v25[v164] >= v16)
    v73 = v16;
  else
    v73 = (Swift::Int)&v25[v164];
  if (v73 >= (uint64_t)v25)
  {
    if (v45 != v73)
    {
      v165 = v22;
      v166 = v2;
      v74 = *(_QWORD *)(v4 + 72);
      v75 = v74 * (v45 - 1);
      v173 = v74;
      v76 = v45 * v74;
      v167 = v73;
      do
      {
        v78 = 0;
        v180 = (char *)v45;
        v174 = v76;
        v175 = (void (*)(char *, uint64_t))v75;
        while (1)
        {
          v79 = *a1;
          v183 = v76 + v78;
          v184 = v25;
          v80 = v76 + v78 + v79;
          v81 = v179;
          sub_1003D4090(v80, (uint64_t)v179);
          v182 = v75 + v78;
          v82 = v75 + v78 + v79;
          v83 = (char *)v176;
          sub_1003D4090(v82, (uint64_t)v176);
          v84 = *(int *)(v185 + 48);
          v85 = (char *)v177 + v84;
          v86 = (char *)v81 + v84;
          *v177 = *v81;
          v87 = type metadata accessor for LayoutSubview(0);
          v88 = *(_QWORD *)(v87 - 8);
          v89 = *(uint64_t (**)(char *, char *, uint64_t))(v88 + 16);
          v90 = v89(v85, v86, v87);
          v91 = LayoutSubview.priority.getter(v90);
          v92 = *(void (**)(char *, uint64_t))(v88 + 8);
          v92(v85, v87);
          v93 = *(int *)(v185 + 48);
          v94 = (char *)v178;
          v95 = (char *)v178 + v93;
          *v178 = *(_OWORD *)v83;
          v96 = v89(&v94[v93], &v83[v93], v87);
          v97 = LayoutSubview.priority.getter(v96);
          v92(v95, v87);
          sub_1003D40D8((uint64_t)v83);
          sub_1003D40D8((uint64_t)v81);
          if (v97 >= v91)
            break;
          v98 = *a1;
          if (!*a1)
            goto LABEL_143;
          v76 = v174;
          v75 = (uint64_t)v175;
          v99 = v98 + v174 + v78;
          v100 = (uint64_t)v175 + v98 + v78;
          sub_1003D55B8(v99, v181);
          swift_arrayInitWithTakeFrontToBack(v99, v100, 1, v185);
          sub_1003D55B8(v181, v100);
          v78 -= v173;
          v25 = v184 + 1;
          v77 = v180;
          if (v180 == v184 + 1)
            goto LABEL_49;
        }
        v77 = v180;
        v76 = v174;
        v75 = (uint64_t)v175;
LABEL_49:
        v45 = (Swift::Int)(v77 + 1);
        v75 += v173;
        v76 += v173;
        v25 = (char *)v169;
      }
      while (v45 != v167);
      v45 = v167;
      v2 = v166;
      v22 = v165;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1003D4CC4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  double v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _OWORD *v49;
  char *v50;
  _OWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v47 = a1;
  v57 = sub_10004CFD4(&qword_1009DD750);
  __chkstk_darwin(v57);
  v58 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v52 = (char *)&v45 - v9;
  __chkstk_darwin(v10);
  v51 = (_OWORD *)((char *)&v45 - v11);
  __chkstk_darwin(v12);
  v50 = (char *)&v45 - v13;
  __chkstk_darwin(v14);
  v49 = (_OWORD *)((char *)&v45 - v16);
  v56 = a3;
  v46 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v18 = v57;
    v19 = v17 * (v56 - 1);
    v53 = v17;
    v20 = v17 * v56;
    v48 = a4;
    v21 = v50;
LABEL_5:
    v22 = 0;
    v61 = v47;
    v54 = v20;
    v55 = v19;
    while (1)
    {
      v23 = *a4;
      v60 = v20 + v22;
      v24 = v20 + v22 + v23;
      v25 = v49;
      sub_1003D4090(v24, (uint64_t)v49);
      v59 = v19 + v22;
      sub_1003D4090(v19 + v22 + v23, (uint64_t)v21);
      v26 = *(int *)(v18 + 48);
      v27 = (char *)v51 + v26;
      v28 = (char *)v25 + v26;
      *v51 = *v25;
      v29 = type metadata accessor for LayoutSubview(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(char *, char *, uint64_t))(v30 + 16);
      v32 = v31(v27, v28, v29);
      v33 = LayoutSubview.priority.getter(v32);
      v34 = *(void (**)(char *, uint64_t))(v30 + 8);
      v34(v27, v29);
      v35 = *(int *)(v18 + 48);
      v36 = v52;
      v37 = &v52[v35];
      *(_OWORD *)v52 = *(_OWORD *)v21;
      v38 = v31(&v36[v35], &v21[v35], v29);
      a4 = v48;
      v39 = LayoutSubview.priority.getter(v38);
      v40 = v29;
      v19 = v55;
      v34(v37, v40);
      sub_1003D40D8((uint64_t)v21);
      v41 = (uint64_t)v25;
      v20 = v54;
      sub_1003D40D8(v41);
      if (v39 >= v33)
      {
LABEL_4:
        v19 += v53;
        v20 += v53;
        if (++v56 == v46)
          return;
        goto LABEL_5;
      }
      v42 = *a4;
      if (!*a4)
        break;
      v43 = v42 + v20 + v22;
      v44 = v42 + v19 + v22;
      sub_1003D55B8(v43, v58);
      swift_arrayInitWithTakeFrontToBack(v43, v44, 1, v57);
      sub_1003D55B8(v58, v44);
      v22 -= v53;
      if (v56 == ++v61)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1003D4FB0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  double v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  double v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  double v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  double v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t result;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  _OWORD *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;

  v84 = sub_10004CFD4(&qword_1009DD750);
  __chkstk_darwin(v84);
  v83 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v82 = (_OWORD *)((char *)&v73 - v10);
  __chkstk_darwin(v11);
  v81 = (char *)&v73 - v12;
  __chkstk_darwin(v13);
  v80 = (char *)&v73 - v14;
  v16 = *(_QWORD *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1)
    goto LABEL_62;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1)
    goto LABEL_63;
  v18 = (uint64_t)(a2 - a1) / v16;
  v87 = a1;
  v86 = a4;
  v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v19, v84);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v46 = a4 + v21;
      v85 = a4 + v21;
      v87 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        v48 = -v16;
        v74 = a4;
        v75 = -v16;
        v76 = a1;
        v49 = v80;
        v50 = v84;
        do
        {
          v78 = a2;
          v79 = a3 + v48;
          sub_1003D4090(v46 + v48, (uint64_t)v49);
          v77 = a2 + v48;
          v51 = v81;
          sub_1003D4090(a2 + v48, (uint64_t)v81);
          v52 = *(int *)(v50 + 48);
          v53 = (char *)v82 + v52;
          v54 = (char *)v49 + v52;
          *v82 = *v49;
          v55 = type metadata accessor for LayoutSubview(0);
          v56 = *(_QWORD *)(v55 - 8);
          v57 = *(uint64_t (**)(char *, char *, uint64_t))(v56 + 16);
          v58 = v57(v53, v54, v55);
          v59 = LayoutSubview.priority.getter(v58);
          v60 = *(void (**)(char *, uint64_t))(v56 + 8);
          v60(v53, v55);
          v61 = *(int *)(v50 + 48);
          v62 = v83;
          v63 = &v83[v61];
          *(_OWORD *)v83 = *(_OWORD *)v51;
          v64 = v57(&v62[v61], &v51[v61], v55);
          v65 = LayoutSubview.priority.getter(v64);
          v60(v63, v55);
          sub_1003D40D8((uint64_t)v51);
          sub_1003D40D8((uint64_t)v49);
          if (v65 >= v59)
          {
            v69 = v78;
            v66 = v79;
            v70 = v85;
            v71 = v85 + v75;
            v85 += v75;
            v48 = v75;
            if (a3 < v70 || v79 >= v70)
            {
              swift_arrayInitWithTakeFrontToBack(v79, v71, 1, v84);
              v67 = v74;
              v68 = v76;
            }
            else
            {
              v68 = v76;
              if (a3 != v70)
                swift_arrayInitWithTakeBackToFront(v79, v71);
              v67 = v74;
            }
          }
          else
          {
            v48 = v75;
            v66 = v79;
            if (a3 < v78 || v79 >= v78)
            {
              v69 = v77;
              swift_arrayInitWithTakeFrontToBack(v79, v77, 1, v84);
              v67 = v74;
              v68 = v76;
            }
            else
            {
              v67 = v74;
              v68 = v76;
              v69 = v77;
              if (a3 != v78)
                swift_arrayInitWithTakeBackToFront(v79, v77);
            }
            v87 += v48;
          }
          v46 = v85;
          if (v85 <= v67)
            break;
          a2 = v69;
          a3 = v66;
        }
        while (v69 > v68);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v18, v84);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v79 = a4 + v20;
    v85 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      v77 = v16;
      v78 = a3;
      v24 = v80;
      v23 = v81;
      do
      {
        sub_1003D4090(a2, (uint64_t)v24);
        sub_1003D4090(a4, (uint64_t)v23);
        v25 = v84;
        v26 = *(int *)(v84 + 48);
        v27 = (char *)v82 + v26;
        v28 = (char *)v24 + v26;
        *v82 = *v24;
        v29 = type metadata accessor for LayoutSubview(0);
        v30 = *(_QWORD *)(v29 - 8);
        v31 = a2;
        v32 = *(uint64_t (**)(char *, char *, uint64_t))(v30 + 16);
        v33 = v32(v27, v28, v29);
        v34 = LayoutSubview.priority.getter(v33);
        v35 = *(void (**)(char *, uint64_t))(v30 + 8);
        v35(v27, v29);
        v36 = *(int *)(v25 + 48);
        v37 = v83;
        v38 = &v83[v36];
        *(_OWORD *)v83 = *(_OWORD *)v23;
        v39 = v32(&v37[v36], &v23[v36], v29);
        v40 = LayoutSubview.priority.getter(v39);
        v35(v38, v29);
        sub_1003D40D8((uint64_t)v23);
        sub_1003D40D8((uint64_t)v24);
        v41 = v87;
        if (v40 >= v34)
        {
          v42 = v77;
          v45 = v86 + v77;
          if (v87 < v86 || v87 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack(v87, v86, 1, v84);
            v44 = v78;
          }
          else
          {
            v44 = v78;
            if (v87 != v86)
              swift_arrayInitWithTakeBackToFront(v87, v86);
          }
          v86 = v45;
          v43 = v31;
        }
        else
        {
          v42 = v77;
          v43 = v31 + v77;
          if (v87 < v31 || v87 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack(v87, v31, 1, v84);
            v44 = v78;
          }
          else
          {
            v44 = v78;
            if (v87 == v31)
              v41 = v31;
            else
              swift_arrayInitWithTakeBackToFront(v87, v31);
          }
        }
        v87 = v41 + v42;
        a4 = v86;
        if (v86 >= v79)
          break;
        a2 = v43;
      }
      while (v43 < v44);
    }
LABEL_60:
    sub_100699260(&v87, &v86, (uint64_t *)&v85);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003D55B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D5600(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v8 = *(int *)(a3 + 28);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    swift_retain(v5);
    v11 = sub_10004CFD4(&qword_1009D3700);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(a1 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v11);
  }
  return a1;
}

uint64_t sub_1003D56C0(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  void (*v7)(char *, uint64_t);

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_10004CFD4(&qword_1009D3700);
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(char *, uint64_t))v7)((char *)a1 + *(int *)(a2 + 32), v5);
}

uint64_t sub_1003D573C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  swift_retain(v6);
  v10 = sub_10004CFD4(&qword_1009D3700);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v10);
  return a1;
}

char *sub_1003D57D8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain(v6);
  swift_release(v7);
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  v8 = *(int *)(a3 + 28);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_10004CFD4(&qword_1009D3700);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 32)], &a2[*(int *)(a3 + 32)], v11);
  return a1;
}

uint64_t sub_1003D5888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_10004CFD4(&qword_1009D3700);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t *sub_1003D5920(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  v7 = *(int *)(a3 + 28);
  v8 = (uint64_t)a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_10004CFD4(&qword_1009D3700);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11((uint64_t)a1 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v10);
  return a1;
}

uint64_t sub_1003D59C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D59CC);
}

uint64_t sub_1003D59CC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D3700);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1003D5A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D5A58);
}

char *sub_1003D5A58(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D3700);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ThemeStateOverlayView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E07D8;
  if (!qword_1009E07D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ThemeStateOverlayView);
  return result;
}

void sub_1003D5B0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_100224A50(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1003D5B94(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086FB04, 1);
}

void sub_1003D5BA4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for ThemeStateOverlayView(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BookThemeViewModel.OverlayState(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v24 - v14;
  BookThemeViewModel.overlayState.getter(v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for BookThemeViewModel.OverlayState.cloud(_:), v8);
  v16 = static BookThemeViewModel.OverlayState.== infix(_:_:)(v15, v11);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v18 = ((uint64_t (*)(char *, uint64_t))v17)(v15, v8);
  LOBYTE(v17) = BookThemeViewModel.hasDarkBackground.getter(v18);
  v19 = sub_1003D78CC(v2, (uint64_t)v7);
  if ((v17 & 1) != 0)
    v20 = BookThemeViewModel.isDarkTheme.getter(v19) ^ 1;
  else
    v20 = 0;
  v21 = sub_1003D7910((uint64_t)v7);
  *a1 = static Alignment.topTrailing.getter(v21);
  a1[1] = v22;
  v23 = sub_10004CFD4(&qword_1009E0820);
  sub_1003D5D28(v2, v20 & 1, v16 & 1, (uint64_t)a1 + *(int *)(v23 + 44));
}

void sub_1003D5D28(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;

  v25 = a2;
  v26 = a3;
  v24 = a1;
  v5 = sub_10004CFD4(&qword_1009E0828);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E0830);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v24 - v15;
  v18 = static Color.clear.getter(v17);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v18);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v19 = sub_10004CFD4(&qword_1009E0838);
  v20 = &v7[*(int *)(v19 + 44)];
  *(_QWORD *)v20 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v21 = sub_10004CFD4(&qword_1009E0840);
  sub_1003D5F40(v24, v25, (uint64_t)&v20[*(int *)(v21 + 44)]);
  if ((v26 & 1) != 0)
    v22 = 0.0;
  else
    v22 = 2.0;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v13, &qword_1009E0828);
  *(double *)&v13[*(int *)(v8 + 36)] = v22;
  sub_100010960((uint64_t)v7, &qword_1009E0828);
  sub_100025B3C((uint64_t)v13, (uint64_t)v16, &qword_1009E0830);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v10, &qword_1009E0830);
  *(_QWORD *)a4 = v18;
  *(_WORD *)(a4 + 8) = 256;
  *(_QWORD *)(a4 + 16) = 0x3FF0000000000000;
  v23 = sub_10004CFD4(&qword_1009E0848);
  sub_10000B5E4((uint64_t)v10, a4 + *(int *)(v23 + 48), &qword_1009E0830);
  swift_retain(v18);
  sub_100010960((uint64_t)v16, &qword_1009E0830);
  sub_100010960((uint64_t)v10, &qword_1009E0830);
  swift_release(v18);
}

uint64_t sub_1003D5F40@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t *v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _OWORD *v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  unsigned int v158;
  uint64_t v159;
  int v160;
  int v161;
  unsigned __int8 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  double v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  __n128 v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _OWORD *v215;
  __int128 v216;
  uint64_t v217;
  uint64_t v218;
  unsigned int v219;
  unsigned int v220;
  uint64_t v221;
  int v222;
  int v223;
  unsigned __int8 v224;
  uint64_t v225;
  uint64_t v226;
  double v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  uint64_t *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  int v300;
  uint64_t *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;

  v300 = a2;
  v308 = a3;
  v280 = sub_10004CFD4(&qword_1009E0850);
  __chkstk_darwin(v280);
  v281 = (uint64_t)&v252 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = sub_10004CFD4(&qword_1009E0858);
  __chkstk_darwin(v307);
  v282 = (char *)&v252 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = type metadata accessor for ControlSize(0);
  v268 = *(_QWORD *)(v269 - 8);
  __chkstk_darwin(v269);
  v275 = (char *)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = sub_10004CFD4(&qword_1009D8400);
  v265 = *(_QWORD *)(v266 - 8);
  __chkstk_darwin(v266);
  v284 = (char *)&v252 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = sub_10004CFD4(&qword_1009E0860);
  __chkstk_darwin(v271);
  v267 = (char *)&v252 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_10004CFD4(&qword_1009E0868);
  __chkstk_darwin(v272);
  v274 = (char *)&v252 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = sub_10004CFD4(&qword_1009E0870);
  __chkstk_darwin(v273);
  v270 = (uint64_t)&v252 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = sub_10004CFD4(&qword_1009E0878);
  __chkstk_darwin(v276);
  v285 = (uint64_t)&v252 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = sub_10004CFD4(&qword_1009E0880);
  __chkstk_darwin(v279);
  v277 = (uint64_t)&v252 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v278 = (char *)&v252 - v14;
  v295 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v295);
  v298 = (uint64_t *)((char *)&v252 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v299 = type metadata accessor for Image.Scale(0);
  v297 = *(_QWORD *)(v299 - 8);
  __chkstk_darwin(v299);
  v296 = (char *)&v252 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v17);
  v293 = (char *)&v252 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = type metadata accessor for Font.TextStyle(0);
  v302 = *(_QWORD *)(v292 - 8);
  __chkstk_darwin(v292);
  v291 = (char *)&v252 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = sub_10004CFD4(&qword_1009E0888);
  __chkstk_darwin(v294);
  v259 = (uint64_t *)((char *)&v252 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v301 = (uint64_t *)((char *)&v252 - v22);
  v289 = sub_10004CFD4(&qword_1009E0890);
  __chkstk_darwin(v289);
  v260 = (uint64_t)&v252 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v287 = (uint64_t)&v252 - v25;
  v290 = sub_10004CFD4(&qword_1009E0898);
  __chkstk_darwin(v290);
  v262 = (uint64_t)&v252 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v283 = (char *)&v252 - v28;
  v305 = sub_10004CFD4(&qword_1009E08A0);
  __chkstk_darwin(v305);
  v261 = (char *)&v252 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v263 = (uint64_t)&v252 - v31;
  __chkstk_darwin(v32);
  v286 = (uint64_t)&v252 - v33;
  __chkstk_darwin(v34);
  v288 = (uint64_t)&v252 - v35;
  v311 = sub_10004CFD4(&qword_1009E08A8);
  __chkstk_darwin(v311);
  v310 = (uint64_t)&v252 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304 = sub_10004CFD4(&qword_1009E08B0);
  __chkstk_darwin(v304);
  v303 = (uint64_t)&v252 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10004CFD4(&qword_1009E08B8);
  __chkstk_darwin(v38);
  v40 = (char *)&v252 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v306 = sub_10004CFD4(&qword_1009E08C0);
  __chkstk_darwin(v306);
  v42 = (char *)&v252 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v312 = sub_10004CFD4(&qword_1009E08C8);
  v43 = __chkstk_darwin(v312);
  v45 = (char *)&v252 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for BookThemeViewModel.OverlayState(0, v43);
  v47 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v49 = (char *)&v252 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10004CFD4(&qword_1009E08D0);
  __chkstk_darwin(v50);
  v309 = (char *)&v252 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v52);
  v55 = (char *)&v252 - v54;
  v56 = a1;
  BookThemeViewModel.overlayState.getter(v53);
  v57 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v49, v46);
  if ((_DWORD)v57 != enum case for BookThemeViewModel.OverlayState.none(_:))
  {
    v253 = v46;
    v67 = v302;
    v254 = v38;
    v255 = v40;
    v256 = v42;
    v264 = v56;
    v257 = v45;
    v258 = v55;
    if ((_DWORD)v57 == enum case for BookThemeViewModel.OverlayState.cloud(_:))
    {
      v68 = Image.init(systemName:)(0x64756F6C6369, 0xE600000000000000);
      v69 = v67;
      v70 = v291;
      v71 = v292;
      (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v291, enum case for Font.TextStyle.caption(_:), v292);
      v72 = type metadata accessor for Font.Design(0);
      v73 = (uint64_t)v293;
      v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v293, 1, 1, v72);
      v75 = static Font.Weight.semibold.getter(v74);
      v76 = static Font.system(_:design:weight:)(v70, v73, *(_QWORD *)&v75, 0);
      sub_100010960(v73, &qword_1009CEDD0);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
      KeyPath = swift_getKeyPath(&unk_100720FF8);
      v78 = v297;
      v79 = v296;
      v80 = v299;
      (*(void (**)(char *, _QWORD, uint64_t))(v297 + 104))(v296, enum case for Image.Scale.medium(_:), v299);
      v81 = swift_getKeyPath(&unk_100721028);
      v82 = v298;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))((char *)v298 + *(int *)(v295 + 28), v79, v80);
      *v82 = v81;
      v83 = v301;
      sub_10000B5E4((uint64_t)v82, (uint64_t)v301 + *(int *)(v294 + 36), &qword_1009D38F8);
      *v83 = v68;
      v83[1] = KeyPath;
      v83[2] = v76;
      swift_retain(v68);
      swift_retain(KeyPath);
      swift_retain(v76);
      sub_100010960((uint64_t)v82, &qword_1009D38F8);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
      swift_release(v76);
      swift_release(KeyPath);
      v84 = swift_release(v68);
      v85 = v264;
      if ((v300 & 1) != 0)
      {
        v86 = BookThemeViewModel.textSecondaryColor.getter(v84);
        v87 = Color.init(_:)(v86);
        v88.n128_u64[0] = 0x3FE3333333333333;
        v89 = Color.opacity(_:)(v87, v88);
        swift_release(v87);
      }
      else
      {
        v89 = BookThemeViewModel.textTertiaryColor.getter(v84);
      }
      v65 = v308;
      v93 = v290;
      v94 = v289;
      v95 = (uint64_t)v283;
      v96 = swift_getKeyPath(&unk_100721058);
      v97 = (uint64_t)v301;
      v98 = v287;
      sub_10000B5E4((uint64_t)v301, v287, &qword_1009E0888);
      v99 = (uint64_t *)(v98 + *(int *)(v94 + 36));
      *v99 = v96;
      v99[1] = v89;
      sub_100010960(v97, &qword_1009E0888);
      type metadata accessor for ThemeStateOverlayView(0);
      v100 = sub_10004CFD4(&qword_1009D3700);
      ScaledMetric.wrappedValue.getter(&v313, v100);
      v101 = v313;
      v102 = ScaledMetric.wrappedValue.getter(&v313, v100);
      v103 = v313;
      v104 = static Alignment.center.getter(v102);
      _FrameLayout.init(width:height:alignment:)(&v313, v101, 0, v103, 0, v104, v105);
      sub_10000B5E4(v98, v95, &qword_1009E0890);
      v106 = (_OWORD *)(v95 + *(int *)(v93 + 36));
      v107 = v314;
      *v106 = v313;
      v106[1] = v107;
      v106[2] = v315;
      sub_100010960(v98, &qword_1009E0890);
      v109 = *(_QWORD *)(v85 + 8);
      v108 = *(_QWORD *)(v85 + 16);
      LOBYTE(v103) = static Edge.Set.all.getter(v110);
      v111 = v286;
      sub_10000B5E4(v95, v286, &qword_1009E0898);
      v112 = v305;
      v113 = v111 + *(int *)(v305 + 36);
      *(_BYTE *)v113 = v103;
      *(_QWORD *)(v113 + 8) = v108;
      *(_QWORD *)(v113 + 16) = 0;
      *(_QWORD *)(v113 + 24) = 0;
      *(_QWORD *)(v113 + 32) = v109;
      *(_BYTE *)(v113 + 40) = 0;
      sub_100010960(v95, &qword_1009E0898);
      v114 = v288;
      sub_100025B3C(v111, v288, &qword_1009E08A0);
      v115 = (uint64_t)v255;
      sub_10000B5E4(v114, (uint64_t)v255, &qword_1009E08A0);
      swift_storeEnumTagMultiPayload(v115, v254, 1);
      v116 = sub_1003D79B8();
      v117 = (uint64_t)v256;
      _ConditionalContent<>.init(storage:)(v115, &type metadata for EmptyView, v112, &protocol witness table for EmptyView, v116);
      v118 = v303;
      sub_10000B5E4(v117, v303, &qword_1009E08C0);
      swift_storeEnumTagMultiPayload(v118, v304, 0);
      v119 = sub_1003D794C();
      v120 = sub_1003D7B08();
      v121 = (uint64_t)v257;
      _ConditionalContent<>.init(storage:)(v118, v306, v307, v119, v120);
      sub_100010960(v117, &qword_1009E08C0);
      v122 = v310;
      sub_10000B5E4(v121, v310, &qword_1009E08C8);
      swift_storeEnumTagMultiPayload(v122, v311, 0);
      v123 = sub_1001F4F10(&qword_1009E08D8, &qword_1009E08C8, (void (*)(void))sub_1003D794C, (void (*)(void))sub_1003D7B08);
      v66 = (uint64_t)v258;
      _ConditionalContent<>.init(storage:)(v122, v312, &type metadata for EmptyView, v123, &protocol witness table for EmptyView);
      sub_100010960(v121, &qword_1009E08C8);
      sub_100010960(v114, &qword_1009E08A0);
      goto LABEL_11;
    }
    if ((_DWORD)v57 == enum case for BookThemeViewModel.OverlayState.spinner(_:))
    {
      ProgressView<>.init<>()(v57);
      if ((v300 & 1) != 0)
      {
        v90 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
        v91.n128_u64[0] = 0x3FE3333333333333;
        v92 = Color.opacity(_:)(v90, v91);
        swift_release(v90);
      }
      else
      {
        v92 = 0;
      }
      v65 = v308;
      v64 = (uint64_t)v309;
      v188 = v269;
      v189 = v268;
      v190 = v267;
      v191 = v266;
      v192 = v265;
      v193 = swift_getKeyPath(&unk_100721088);
      v194 = v284;
      (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v190, v284, v191);
      v195 = (uint64_t *)&v190[*(int *)(v271 + 36)];
      *v195 = v193;
      v195[1] = v92;
      (*(void (**)(char *, uint64_t))(v192 + 8))(v194, v191);
      v196 = v275;
      (*(void (**)(char *, _QWORD, uint64_t))(v189 + 104))(v275, enum case for ControlSize.small(_:), v188);
      v197 = swift_getKeyPath(&unk_1007210B8);
      v198 = (uint64_t)v190;
      v199 = (uint64_t)v274;
      v200 = (uint64_t *)&v274[*(int *)(v272 + 36)];
      v201 = sub_10004CFD4(&qword_1009D85F8);
      (*(void (**)(char *, char *, uint64_t))(v189 + 16))((char *)v200 + *(int *)(v201 + 28), v196, v188);
      *v200 = v197;
      sub_10000B5E4(v198, v199, &qword_1009E0860);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v196, v188);
      sub_100010960(v198, &qword_1009E0860);
      v203 = BookThemeViewModel.textSecondaryColor.getter(v202);
      v204 = Color.init(_:)(v203);
      v205 = swift_getKeyPath(&unk_100721058);
      v206 = v270;
      sub_10000B5E4(v199, v270, &qword_1009E0868);
      v207 = (uint64_t *)(v206 + *(int *)(v273 + 36));
      *v207 = v205;
      v207[1] = v204;
      sub_100010960(v199, &qword_1009E0868);
      type metadata accessor for ThemeStateOverlayView(0);
      v208 = sub_10004CFD4(&qword_1009D3700);
      ScaledMetric.wrappedValue.getter(&v313, v208);
      v209 = v313;
      v210 = ScaledMetric.wrappedValue.getter(&v313, v208);
      v211 = v313;
      v212 = static Alignment.center.getter(v210);
      _FrameLayout.init(width:height:alignment:)(&v313, v209, 0, v211, 0, v212, v213);
      v214 = v285;
      sub_10000B5E4(v206, v285, &qword_1009E0870);
      v215 = (_OWORD *)(v214 + *(int *)(v276 + 36));
      v216 = v314;
      *v215 = v313;
      v215[1] = v216;
      v215[2] = v315;
      v217 = sub_100010960(v206, &qword_1009E0870);
      v218 = static Edge.Set.top.getter(v217);
      v219 = v218;
      v220 = static Edge.Set.trailing.getter(v218);
      v221 = Edge.Set.init(rawValue:)(0);
      v222 = Edge.Set.init(rawValue:)(v221);
      if (Edge.Set.init(rawValue:)(v222 & v219) != v219)
        v221 = Edge.Set.init(rawValue:)(v221 | v219);
      v223 = Edge.Set.init(rawValue:)(v221);
      v224 = Edge.Set.init(rawValue:)(v223 & v220);
      v225 = (uint64_t)v278;
      if (v224 != v220)
        LOBYTE(v221) = Edge.Set.init(rawValue:)(v221 | v220);
      v226 = v303;
      v227 = EdgeInsets.init(_all:)(*(double *)(v264 + 16));
      v229 = v228;
      v231 = v230;
      v233 = v232;
      v234 = v285;
      v235 = v277;
      sub_10000B5E4(v285, v277, &qword_1009E0878);
      v236 = v279;
      v237 = v235 + *(int *)(v279 + 36);
      *(_BYTE *)v237 = v221;
      *(double *)(v237 + 8) = v227;
      *(_QWORD *)(v237 + 16) = v229;
      *(_QWORD *)(v237 + 24) = v231;
      *(_QWORD *)(v237 + 32) = v233;
      *(_BYTE *)(v237 + 40) = 0;
      sub_100010960(v234, &qword_1009E0878);
      sub_100025B3C(v235, v225, &qword_1009E0880);
      v238 = v281;
      sub_10000B5E4(v225, v281, &qword_1009E0880);
      swift_storeEnumTagMultiPayload(v238, v280, 0);
      v239 = sub_1003D7B2C();
      v240 = sub_1003D79B8();
      v241 = (uint64_t)v282;
      _ConditionalContent<>.init(storage:)(v238, v236, v305, v239, v240);
      sub_10000B5E4(v241, v226, &qword_1009E0858);
      swift_storeEnumTagMultiPayload(v226, v304, 1);
      v242 = v225;
      v243 = sub_1003D794C();
      v244 = sub_1003D7B08();
      v245 = (uint64_t)v257;
      _ConditionalContent<>.init(storage:)(v226, v306, v307, v243, v244);
      sub_100010960(v241, &qword_1009E0858);
      v246 = v310;
      sub_10000B5E4(v245, v310, &qword_1009E08C8);
      swift_storeEnumTagMultiPayload(v246, v311, 0);
      v247 = sub_1001F4F10(&qword_1009E08D8, &qword_1009E08C8, (void (*)(void))sub_1003D794C, (void (*)(void))sub_1003D7B08);
      v66 = (uint64_t)v258;
      _ConditionalContent<>.init(storage:)(v246, v312, &type metadata for EmptyView, v247, &protocol witness table for EmptyView);
      sub_100010960(v245, &qword_1009E08C8);
      v186 = v242;
      v187 = &qword_1009E0880;
    }
    else
    {
      if ((_DWORD)v57 != enum case for BookThemeViewModel.OverlayState.override(_:))
      {
        v250 = v310;
        swift_storeEnumTagMultiPayload(v310, v311, 1);
        v251 = sub_1001F4F10(&qword_1009E08D8, &qword_1009E08C8, (void (*)(void))sub_1003D794C, (void (*)(void))sub_1003D7B08);
        v66 = (uint64_t)v258;
        _ConditionalContent<>.init(storage:)(v250, v312, &type metadata for EmptyView, v251, &protocol witness table for EmptyView);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v253);
        v65 = v308;
LABEL_11:
        v64 = (uint64_t)v309;
        goto LABEL_25;
      }
      v124 = Image.init(systemName:)(0x6B73697265747361, 0xE800000000000000);
      v125 = v67;
      v126 = v291;
      v127 = v292;
      (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v291, enum case for Font.TextStyle.caption(_:), v292);
      v128 = type metadata accessor for Font.Design(0);
      v129 = (uint64_t)v293;
      v130 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v293, 1, 1, v128);
      v131 = static Font.Weight.semibold.getter(v130);
      v132 = static Font.system(_:design:weight:)(v126, v129, *(_QWORD *)&v131, 0);
      sub_100010960(v129, &qword_1009CEDD0);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v127);
      v133 = swift_getKeyPath(&unk_100720FF8);
      v134 = v297;
      v135 = v296;
      v136 = v299;
      (*(void (**)(char *, _QWORD, uint64_t))(v297 + 104))(v296, enum case for Image.Scale.small(_:), v299);
      v137 = swift_getKeyPath(&unk_100721028);
      v138 = v298;
      (*(void (**)(char *, char *, uint64_t))(v134 + 16))((char *)v298 + *(int *)(v295 + 28), v135, v136);
      *v138 = v137;
      v139 = v259;
      sub_10000B5E4((uint64_t)v138, (uint64_t)v259 + *(int *)(v294 + 36), &qword_1009D38F8);
      *v139 = v124;
      v139[1] = v133;
      v139[2] = v132;
      swift_retain(v124);
      swift_retain(v133);
      swift_retain(v132);
      sub_100010960((uint64_t)v138, &qword_1009D38F8);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
      swift_release(v132);
      swift_release(v133);
      v140 = swift_release(v124);
      v141 = BookThemeViewModel.textSecondaryColor.getter(v140);
      v142 = Color.init(_:)(v141);
      v143 = swift_getKeyPath(&unk_100721058);
      v144 = v260;
      sub_10000B5E4((uint64_t)v139, v260, &qword_1009E0888);
      v145 = (uint64_t *)(v144 + *(int *)(v289 + 36));
      *v145 = v143;
      v145[1] = v142;
      sub_100010960((uint64_t)v139, &qword_1009E0888);
      type metadata accessor for ThemeStateOverlayView(0);
      v146 = sub_10004CFD4(&qword_1009D3700);
      ScaledMetric.wrappedValue.getter(&v313, v146);
      v147 = v313;
      v148 = ScaledMetric.wrappedValue.getter(&v313, v146);
      v149 = v313;
      v150 = static Alignment.center.getter(v148);
      _FrameLayout.init(width:height:alignment:)(&v313, v147, 0, v149, 0, v150, v151);
      v152 = v262;
      sub_10000B5E4(v144, v262, &qword_1009E0890);
      v153 = (_OWORD *)(v152 + *(int *)(v290 + 36));
      v154 = v314;
      *v153 = v313;
      v153[1] = v154;
      v153[2] = v315;
      v155 = sub_100010960(v144, &qword_1009E0890);
      v156 = static Edge.Set.top.getter(v155);
      v157 = v156;
      v158 = static Edge.Set.trailing.getter(v156);
      v159 = Edge.Set.init(rawValue:)(0);
      v160 = Edge.Set.init(rawValue:)(v159);
      if (Edge.Set.init(rawValue:)(v160 & v157) != v157)
        v159 = Edge.Set.init(rawValue:)(v159 | v157);
      v161 = Edge.Set.init(rawValue:)(v159);
      v162 = Edge.Set.init(rawValue:)(v161 & v158);
      v65 = v308;
      v64 = (uint64_t)v309;
      v163 = v303;
      v164 = (uint64_t)v282;
      v165 = v280;
      v166 = (uint64_t)v261;
      if (v162 != v158)
        LOBYTE(v159) = Edge.Set.init(rawValue:)(v159 | v158);
      v167 = EdgeInsets.init(_all:)(*(double *)(v264 + 16));
      v169 = v168;
      v171 = v170;
      v173 = v172;
      sub_10000B5E4(v152, v166, &qword_1009E0898);
      v174 = v305;
      v175 = v166 + *(int *)(v305 + 36);
      *(_BYTE *)v175 = v159;
      *(double *)(v175 + 8) = v167;
      *(_QWORD *)(v175 + 16) = v169;
      *(_QWORD *)(v175 + 24) = v171;
      *(_QWORD *)(v175 + 32) = v173;
      *(_BYTE *)(v175 + 40) = 0;
      sub_100010960(v152, &qword_1009E0898);
      v176 = v263;
      sub_100025B3C(v166, v263, &qword_1009E08A0);
      v177 = v281;
      sub_10000B5E4(v176, v281, &qword_1009E08A0);
      swift_storeEnumTagMultiPayload(v177, v165, 1);
      v178 = sub_1003D7B2C();
      v179 = sub_1003D79B8();
      _ConditionalContent<>.init(storage:)(v177, v279, v174, v178, v179);
      sub_10000B5E4(v164, v163, &qword_1009E0858);
      swift_storeEnumTagMultiPayload(v163, v304, 1);
      v180 = v164;
      v181 = sub_1003D794C();
      v182 = sub_1003D7B08();
      v183 = (uint64_t)v257;
      _ConditionalContent<>.init(storage:)(v163, v306, v307, v181, v182);
      sub_100010960(v180, &qword_1009E0858);
      v184 = v310;
      sub_10000B5E4(v183, v310, &qword_1009E08C8);
      swift_storeEnumTagMultiPayload(v184, v311, 0);
      v185 = sub_1001F4F10(&qword_1009E08D8, &qword_1009E08C8, (void (*)(void))sub_1003D794C, (void (*)(void))sub_1003D7B08);
      v66 = (uint64_t)v258;
      _ConditionalContent<>.init(storage:)(v184, v312, &type metadata for EmptyView, v185, &protocol witness table for EmptyView);
      sub_100010960(v183, &qword_1009E08C8);
      v186 = v176;
      v187 = &qword_1009E08A0;
    }
    sub_100010960(v186, v187);
    goto LABEL_25;
  }
  swift_storeEnumTagMultiPayload(v40, v38, 0);
  v58 = sub_1003D79B8();
  _ConditionalContent<>.init(storage:)(v40, &type metadata for EmptyView, v305, &protocol witness table for EmptyView, v58);
  v59 = v303;
  sub_10000B5E4((uint64_t)v42, v303, &qword_1009E08C0);
  swift_storeEnumTagMultiPayload(v59, v304, 0);
  v60 = sub_1003D794C();
  v61 = sub_1003D7B08();
  _ConditionalContent<>.init(storage:)(v59, v306, v307, v60, v61);
  sub_100010960((uint64_t)v42, &qword_1009E08C0);
  v62 = v310;
  sub_10000B5E4((uint64_t)v45, v310, &qword_1009E08C8);
  swift_storeEnumTagMultiPayload(v62, v311, 0);
  v63 = sub_1001F4F10(&qword_1009E08D8, &qword_1009E08C8, (void (*)(void))sub_1003D794C, (void (*)(void))sub_1003D7B08);
  _ConditionalContent<>.init(storage:)(v62, v312, &type metadata for EmptyView, v63, &protocol witness table for EmptyView);
  sub_100010960((uint64_t)v45, &qword_1009E08C8);
  v65 = v308;
  v64 = (uint64_t)v309;
  v66 = (uint64_t)v55;
LABEL_25:
  sub_10000B5E4(v66, v64, &qword_1009E08D0);
  *(_QWORD *)v65 = 0;
  *(_BYTE *)(v65 + 8) = 1;
  v248 = sub_10004CFD4(&qword_1009E0938);
  sub_10000B5E4(v64, v65 + *(int *)(v248 + 48), &qword_1009E08D0);
  sub_100010960(v66, &qword_1009E08D0);
  return sub_100010960(v64, &qword_1009E08D0);
}

uint64_t sub_1003D78CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThemeStateOverlayView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D7910(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ThemeStateOverlayView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003D794C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E08E0;
  if (!qword_1009E08E0)
  {
    v1 = sub_100030B74(&qword_1009E08C0);
    sub_1003D79B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E08E0);
  }
  return result;
}

uint64_t sub_1003D79B8()
{
  return sub_1001F5558(&qword_1009E08E8, &qword_1009E08A0, (void (*)(void))sub_1003D79DC);
}

uint64_t sub_1003D79DC()
{
  return sub_1001F5558(&qword_1009E08F0, &qword_1009E0898, (void (*)(void))sub_1003D7A00);
}

unint64_t sub_1003D7A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E08F8;
  if (!qword_1009E08F8)
  {
    v1 = sub_100030B74(&qword_1009E0890);
    sub_1003D7A84();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E08F8);
  }
  return result;
}

unint64_t sub_1003D7A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E0900;
  if (!qword_1009E0900)
  {
    v1 = sub_100030B74(&qword_1009E0888);
    sub_10026F864();
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E0900);
  }
  return result;
}

uint64_t sub_1003D7B08()
{
  return sub_1001F4F10(&qword_1009E0908, &qword_1009E0858, (void (*)(void))sub_1003D7B2C, (void (*)(void))sub_1003D79B8);
}

uint64_t sub_1003D7B2C()
{
  return sub_1001F5558(&qword_1009E0910, &qword_1009E0880, (void (*)(void))sub_1003D7B50);
}

uint64_t sub_1003D7B50()
{
  return sub_1001F5558(&qword_1009E0918, &qword_1009E0878, (void (*)(void))sub_1003D7B74);
}

unint64_t sub_1003D7B74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E0920;
  if (!qword_1009E0920)
  {
    v1 = sub_100030B74(&qword_1009E0870);
    sub_1003D7BF8();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E0920);
  }
  return result;
}

unint64_t sub_1003D7BF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E0928;
  if (!qword_1009E0928)
  {
    v1 = sub_100030B74(&qword_1009E0868);
    sub_1003D7C7C();
    sub_100030B34(&qword_1009D85F0, &qword_1009D85F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E0928);
  }
  return result;
}

unint64_t sub_1003D7C7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E0930;
  if (!qword_1009E0930)
  {
    v1 = sub_100030B74(&qword_1009E0860);
    sub_100030B34(&qword_1009D9160, &qword_1009D8400, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E0930);
  }
  return result;
}

uint64_t sub_1003D7D30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003D7D58(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_1003D7D88()
{
  return sub_100030B34(&qword_1009E0940, &qword_1009E0948, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

unint64_t sub_1003D7DB8()
{
  unint64_t result;

  result = qword_1009E0950;
  if (!qword_1009E0950)
  {
    result = swift_getWitnessTable(&unk_100721180, &type metadata for UpdateBookSettingsIntent);
    atomic_store(result, (unint64_t *)&qword_1009E0950);
  }
  return result;
}

unint64_t sub_1003D7E00()
{
  unint64_t result;

  result = qword_1009E0958;
  if (!qword_1009E0958)
  {
    result = swift_getWitnessTable(&unk_1007211A8, &type metadata for UpdateBookSettingsIntent);
    atomic_store(result, (unint64_t *)&qword_1009E0958);
  }
  return result;
}

uint64_t sub_1003D7E44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086FB48, 1);
}

uint64_t sub_1003D7E54(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1003D7E94();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_1003D7E94()
{
  unint64_t result;

  result = qword_1009E0960;
  if (!qword_1009E0960)
  {
    result = swift_getWitnessTable(&unk_1007210F0, &type metadata for UpdateBookSettingsIntent);
    atomic_store(result, (unint64_t *)&qword_1009E0960);
  }
  return result;
}

uint64_t sub_1003D7ED8()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v0, qword_100A1E800);
  sub_100048F64(v0, (uint64_t)qword_100A1E800);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x80000001007C6B60, v1);
}

uint64_t sub_1003D7F38()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1003D7F68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 432) = a1;
  *(_QWORD *)(v2 + 440) = v1;
  return swift_task_switch(sub_1003D7F80, 0, 0);
}

uint64_t sub_1003D7F80()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t KeyPath;
  _QWORD *v15;
  uint64_t v16;
  ValueMetadata *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 498));
  v1 = *(unsigned __int8 *)(v0 + 498);
  *(_BYTE *)(v0 + 500) = v1;
  if (v1 != 8)
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 120));
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 216);
    v10 = *(_OWORD *)(v0 + 136);
    v11 = *(_OWORD *)(v0 + 168);
    v12 = *(_OWORD *)(v0 + 184);
    v13 = *(_OWORD *)(v0 + 200);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 32) = v10;
    *(_QWORD *)(v0 + 48) = v7;
    *(_QWORD *)(v0 + 56) = v8;
    *(_OWORD *)(v0 + 64) = v11;
    *(_OWORD *)(v0 + 80) = v12;
    *(_OWORD *)(v0 + 96) = v13;
    *(_QWORD *)(v0 + 112) = v9;
    *(_BYTE *)(v0 + 499) = v1;
    KeyPath = swift_getKeyPath(&unk_100721218);
    *(_QWORD *)(v0 + 448) = KeyPath;
    v15 = (_QWORD *)swift_task_alloc(async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1]);
    *(_QWORD *)(v0 + 456) = v15;
    v16 = sub_100030B34(&qword_1009E09B8, &qword_1009E09C0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
    *v15 = v0;
    v15[1] = sub_1003D81D0;
    v17 = &type metadata for BookThemeSetting;
    v18 = v0 + 499;
    v19 = KeyPath;
    return AppEntity._setValue<A, B, C>(_:for:)(v18, v19, v17, v16);
  }
  v2 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 497));
  v3 = *(unsigned __int8 *)(v0 + 497);
  if (v3 != 2)
  {
    v20 = v3 & 1;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 224));
    v21 = *(_QWORD *)(v0 + 256);
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 320);
    v24 = *(_OWORD *)(v0 + 240);
    v25 = *(_OWORD *)(v0 + 272);
    v26 = *(_OWORD *)(v0 + 288);
    v27 = *(_OWORD *)(v0 + 304);
    *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 344) = v24;
    *(_QWORD *)(v0 + 360) = v21;
    *(_QWORD *)(v0 + 368) = v22;
    *(_OWORD *)(v0 + 376) = v25;
    *(_OWORD *)(v0 + 392) = v26;
    *(_OWORD *)(v0 + 408) = v27;
    *(_QWORD *)(v0 + 424) = v23;
    *(_BYTE *)(v0 + 496) = v20;
    *(_QWORD *)(v0 + 472) = v28;
    v29 = (_QWORD *)swift_task_alloc(async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1]);
    *(_QWORD *)(v0 + 480) = v29;
    v16 = sub_100030B34(&qword_1009E09A8, &qword_1009E09B0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
    *v29 = v0;
    v29[1] = sub_1003D84D4;
    v17 = &type metadata for BookPageNavigationSetting;
    v18 = v0 + 496;
    v19 = v28;
    return AppEntity._setValue<A, B, C>(_:for:)(v18, v19, v17, v16);
  }
  if (*(_BYTE *)(v0 + 500) == 8)
  {
    v4 = sub_1001EA7C0();
    v5 = swift_allocError(&type metadata for BookContextualIntentError, v4, 0, 0);
    *v6 = 0;
    swift_willThrow(v5);
  }
  else
  {
    static IntentResult.result<>()(v2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D81D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc(v3);
  v4 = (void *)v2[2];
  v5 = v2[3];
  if (v0)
  {
    v6 = (void *)v2[4];
    v7 = v2[5];
    v8 = v2[6];
    v9 = v2[8];
    v10 = v2[9];
    v11 = v2[10];
    v12 = v2[11];
    v13 = v2[12];
    v26 = v2[13];
    v28 = v2[56];
    v14 = v2[14];

    swift_unknownObjectRelease(v5);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);
    swift_release(v10);
    swift_release(v11);
    swift_release(v12);
    swift_release(v13);
    swift_release(v26);
    swift_release(v14);
    swift_release(v28);
    v15 = sub_1003D869C;
  }
  else
  {
    v16 = (void *)v2[4];
    v17 = v2[5];
    v18 = v2[6];
    v19 = v2[8];
    v20 = v2[9];
    v21 = v2[10];
    v22 = v2[11];
    v23 = v2[12];
    v27 = v2[13];
    v29 = v2[56];
    v24 = v2[14];

    swift_unknownObjectRelease(v5);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
    swift_release(v20);
    swift_release(v21);
    swift_release(v22);
    swift_release(v23);
    swift_release(v27);
    swift_release(v24);
    swift_release(v29);
    v15 = sub_1003D8364;
  }
  return swift_task_switch(v15, 0, 0);
}

uint64_t sub_1003D8364()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t KeyPath;
  _QWORD *v15;
  uint64_t v16;

  v1 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 497));
  v2 = *(unsigned __int8 *)(v0 + 497);
  if (v2 == 2)
  {
    if (*(_BYTE *)(v0 + 500) == 8)
    {
      v3 = sub_1001EA7C0();
      v4 = swift_allocError(&type metadata for BookContextualIntentError, v3, 0, 0);
      *v5 = 0;
      swift_willThrow(v4);
    }
    else
    {
      static IntentResult.result<>()(v1);
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = v2 & 1;
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 224));
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 320);
    v10 = *(_OWORD *)(v0 + 240);
    v11 = *(_OWORD *)(v0 + 272);
    v12 = *(_OWORD *)(v0 + 288);
    v13 = *(_OWORD *)(v0 + 304);
    *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 344) = v10;
    *(_QWORD *)(v0 + 360) = v7;
    *(_QWORD *)(v0 + 368) = v8;
    *(_OWORD *)(v0 + 376) = v11;
    *(_OWORD *)(v0 + 392) = v12;
    *(_OWORD *)(v0 + 408) = v13;
    *(_QWORD *)(v0 + 424) = v9;
    *(_BYTE *)(v0 + 496) = v6;
    *(_QWORD *)(v0 + 472) = KeyPath;
    v15 = (_QWORD *)swift_task_alloc(async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1]);
    *(_QWORD *)(v0 + 480) = v15;
    v16 = sub_100030B34(&qword_1009E09A8, &qword_1009E09B0, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
    *v15 = v0;
    v15[1] = sub_1003D84D4;
    return AppEntity._setValue<A, B, C>(_:for:)(v0 + 496, KeyPath, &type metadata for BookPageNavigationSetting, v16);
  }
}

uint64_t sub_1003D84D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 480);
  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc(v3);
  v4 = (void *)v2[41];
  v5 = v2[42];
  if (v0)
  {
    v6 = (void *)v2[43];
    v7 = v2[44];
    v8 = v2[45];
    v9 = v2[47];
    v10 = v2[48];
    v11 = v2[49];
    v12 = v2[50];
    v13 = v2[51];
    v26 = v2[52];
    v28 = v2[59];
    v14 = v2[53];

    swift_unknownObjectRelease(v5);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);
    swift_release(v10);
    swift_release(v11);
    swift_release(v12);
    swift_release(v13);
    swift_release(v26);
    swift_release(v14);
    swift_release(v28);
    v15 = sub_1003D86A8;
  }
  else
  {
    v16 = (void *)v2[43];
    v17 = v2[44];
    v18 = v2[45];
    v19 = v2[47];
    v20 = v2[48];
    v21 = v2[49];
    v22 = v2[50];
    v23 = v2[51];
    v27 = v2[52];
    v29 = v2[59];
    v24 = v2[53];

    swift_unknownObjectRelease(v5);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
    swift_release(v20);
    swift_release(v21);
    swift_release(v22);
    swift_release(v23);
    swift_release(v27);
    swift_release(v24);
    swift_release(v29);
    v15 = sub_1003D8668;
  }
  return swift_task_switch(v15, 0, 0);
}

uint64_t sub_1003D8668(uint64_t a1)
{
  uint64_t v1;

  static IntentResult.result<>()(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003D869C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D86A8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D86B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE348 != -1)
    swift_once(&qword_1009CE348, sub_1003D7ED8);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1E800);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1003D872C(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v1[2];
  v5 = (_QWORD *)swift_task_alloc(dword_1009E09A4);
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1003D87A8;
  v5[54] = a1;
  v5[55] = v2 + 16;
  return swift_task_switch(sub_1003D7F80, 0, 0);
}

uint64_t sub_1003D87A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

double sub_1003D87F0@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;

  sub_1003D8B08((uint64_t *)v4);
  v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

uint64_t sub_1003D882C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003D7E94();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for UpdateBookSettingsIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  return swift_release(a1[5]);
}

uint64_t *initializeWithCopy for UpdateBookSettingsIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t *assignWithCopy for UpdateBookSettingsIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[5];
  v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  return a1;
}

_QWORD *assignWithTake for UpdateBookSettingsIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_release(v5);
  swift_release(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateBookSettingsIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateBookSettingsIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateBookSettingsIntent()
{
  return &type metadata for UpdateBookSettingsIntent;
}

uint64_t sub_1003D8ADC()
{
  return sub_100030B34((unint64_t *)&qword_1009D2570, &qword_1009D1328, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1003D8B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *);
  unint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *);
  unint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  void (*v70)(char *);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v74;
  _OWORD v75[6];
  uint64_t v76;

  v68 = a1;
  v1 = sub_10004CFD4(&qword_1009E0970);
  __chkstk_darwin(v1);
  v67 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  __chkstk_darwin(v3);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - v12;
  v14 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009DF1D8);
  v17 = type metadata accessor for LocalizedStringResource(0);
  v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v69 = v17;
  v73(v16, 1, 1, v17);
  v18 = type metadata accessor for IntentDialog(0);
  memset(v75, 0, sizeof(v75));
  v76 = 0;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v13, 1, 1, v18);
  v19(v10, 1, 1, v18);
  v74 = enum case for InputConnectionBehavior.default(_:);
  v70 = *(void (**)(char *))(v4 + 104);
  v59 = v7;
  v70(v7);
  v20 = sub_1003A8B7C();
  v66 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v16, v75, v13, v10, v7, v20);
  sub_10004CFD4(&qword_1009E0978);
  v21 = v17;
  v22 = v73;
  v73(v16, 1, 1, v21);
  LOBYTE(v75[0]) = 1;
  v23 = v13;
  v24 = v13;
  v25 = v18;
  v26 = v19;
  v72 = v19;
  v19(v23, 1, 1, v18);
  v27 = v10;
  v26(v10, 1, 1, v18);
  v28 = v59;
  v29 = v5;
  v71 = v5;
  v30 = v70;
  ((void (*)(char *, _QWORD, uint64_t))v70)(v59, v74, v5);
  v31 = sub_1003D90B8();
  v32 = v28;
  v65 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v75, v24, v27, v28, &off_1008F0B20, v31);
  sub_10004CFD4(&qword_1009E0988);
  v33 = v69;
  v22(v16, 1, 1, v69);
  LOBYTE(v75[0]) = 8;
  v34 = v72;
  v72(v24, 1, 1, v25);
  v34(v27, 1, 1, v25);
  v35 = v32;
  v36 = v32;
  v37 = v74;
  ((void (*)(char *, _QWORD, uint64_t))v30)(v36, v74, v29);
  v38 = sub_100204100();
  v64 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v75, v24, v27, v35, &off_1008EFBC8, v38);
  sub_10004CFD4(&qword_1009E0990);
  v39 = v73;
  v73(v16, 1, 1, v33);
  LOBYTE(v75[0]) = 2;
  v62 = v25;
  v40 = v72;
  v72(v24, 1, 1, v25);
  v40(v27, 1, 1, v25);
  v41 = v40;
  v42 = v37;
  v43 = v70;
  ((void (*)(char *, uint64_t, uint64_t))v70)(v35, v42, v71);
  v44 = sub_1003A0394();
  v45 = v27;
  v46 = v35;
  v63 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v16, v75, v24, v45, v35, &off_1008F0B48, v44);
  sub_10004CFD4(&qword_1009E0998);
  v47 = v16;
  v39(v16, 1, 1, v33);
  LOBYTE(v75[0]) = 2;
  v48 = type metadata accessor for Bool.IntentDisplayName(0);
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v49 = v67;
  v60(v67, 1, 1, v48);
  v50 = v62;
  v41(v24, 1, 1, v62);
  v51 = v46;
  v52 = v46;
  v53 = v74;
  v54 = v71;
  ((void (*)(char *, _QWORD, uint64_t))v43)(v52, v74, v71);
  v61 = IntentParameter<>.init(description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v47, v75, v49, v24, v51);
  v73(v47, 1, 1, v69);
  LOBYTE(v75[0]) = 2;
  v60(v49, 1, 1, v48);
  v72(v24, 1, 1, v50);
  ((void (*)(char *, uint64_t, uint64_t))v43)(v51, v53, v54);
  result = IntentParameter<>.init(description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v47, v75, v49, v24, v51);
  v56 = v68;
  v57 = v65;
  *v68 = v66;
  v56[1] = v57;
  v58 = v63;
  v56[2] = v64;
  v56[3] = v58;
  v56[4] = v61;
  v56[5] = result;
  return result;
}

unint64_t sub_1003D90B8()
{
  unint64_t result;

  result = qword_1009E0980;
  if (!qword_1009E0980)
  {
    result = swift_getWitnessTable(&unk_10073114C, &type metadata for StubBookFont);
    atomic_store(result, (unint64_t *)&qword_1009E0980);
  }
  return result;
}

uint64_t sub_1003D9104()
{
  uint64_t v0;
  char v2;

  v0 = sub_10004CFD4(&qword_1009D5D90);
  sub_10001BFD8(v0, qword_1009E09E0);
  sub_100048F64(v0, (uint64_t)qword_1009E09E0);
  if (qword_1009CE820 != -1)
    swift_once(&qword_1009CE820, sub_100064DA0);
  v2 = 0;
  return UserDefault.init(_:defaults:defaultValue:)(0xD000000000000017, 0x80000001007C6ED0, (id)qword_100A1EC28, &v2, &type metadata for Bool);
}

uint64_t sub_1003D91BC(uint64_t a1)
{
  return sub_10001BF38(a1, qword_1009E0A28, 0xD000000000000022, 0x80000001007C6E00);
}

uint64_t sub_1003D91E0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 416));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_1003D92C0;
  }
  else
  {
    *(_BYTE *)(v4 + 77) = a1 & 1;
    v5 = sub_1003D925C;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D925C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 78) = *(_BYTE *)(v0 + 77);
  *(_QWORD *)(v0 + 424) = *sub_10003F198((_QWORD *)(*(_QWORD *)(v0 + 128) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 128) + 40));
  v1 = (_QWORD *)swift_task_alloc(dword_1009E39FC);
  *(_QWORD *)(v0 + 432) = v1;
  *v1 = v0;
  v1[1] = sub_1003D9320;
  return sub_100007F00();
}

uint64_t sub_1003D92C0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 78) = 0;
  *(_QWORD *)(v0 + 424) = *sub_10003F198((_QWORD *)(*(_QWORD *)(v0 + 128) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 128) + 40));
  v1 = (_QWORD *)swift_task_alloc(dword_1009E39FC);
  *(_QWORD *)(v0 + 432) = v1;
  *v1 = v0;
  v1[1] = sub_1003D9320;
  return sub_100007F00();
}

uint64_t sub_1003D9320(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 432);
  *(_QWORD *)(*v2 + 440) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1003D95A4;
  }
  else
  {
    *(_QWORD *)(v4 + 448) = a1;
    v6 = sub_1003D9394;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1003D9394()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  *v1 = *(_QWORD *)(v0 + 448);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v1, enum case for YearInReviewEligibilityCriteria.EligibilityCondition.experience(_:), v3);
  v4 = YearInReviewEligibilityCriteria.isEligible(for:)(v1);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) != 0)
  {
    sub_10003F198((_QWORD *)(*(_QWORD *)(v0 + 128) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 128) + 40));
    v5 = (_QWORD *)swift_task_alloc(dword_1009E3A2C);
    *(_QWORD *)(v0 + 456) = v5;
    *v5 = v0;
    v5[1] = sub_1003D9708;
    return sub_100444458(1);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 376);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v9 = *(_QWORD *)(v0 + 344);
    v11 = *(_QWORD *)(v0 + 304);
    v10 = *(_QWORD *)(v0 + 312);
    v12 = *(_QWORD *)(v0 + 272);
    v8(*(_QWORD *)(v0 + 296), v12);
    v8(v11, v12);
    v8(v10, v12);
    sub_10002C8F0(v9, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    sub_10002C8F0(v7, type metadata accessor for YearInReview.RemoteConfiguration);
    v14 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 320);
    v18 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 304);
    v19 = *(_QWORD *)(v0 + 288);
    v20 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(4);
  }
}

uint64_t sub_1003D95A4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_errorRelease(*(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v3 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 272);
  v2(*(_QWORD *)(v0 + 296), v6);
  v2(v5, v6);
  v2(v4, v6);
  sub_10002C8F0(v3, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  sub_10002C8F0(v1, type metadata accessor for YearInReview.RemoteConfiguration);
  v8 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 352);
  v10 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 192);
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(4);
}

uint64_t sub_1003D9708(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 456));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_1003D99C0;
  }
  else
  {
    *(_BYTE *)(v4 + 79) = a1 & 1;
    v5 = sub_1003D9784;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D9784()
{
  uint64_t v0;
  int v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (*(_BYTE *)(v0 + 79) != 1)
    goto LABEL_6;
  if (qword_1009CE370 != -1)
    swift_once(&qword_1009CE370, sub_1003D91BC);
  v1 = *(unsigned __int8 *)(v0 + 78);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = sub_100048F64(v5, (uint64_t)qword_1009E0A28);
  v3(v4, v6, v5);
  UserDefault.wrappedValue.getter((_QWORD *)(v0 + 74), v5);
  v2(v4, v5);
  if ((*(_BYTE *)(v0 + 74) & 1) != 0 || v1)
  {
    v23 = (_QWORD *)swift_task_alloc(dword_1009E0B9C);
    *(_QWORD *)(v0 + 464) = v23;
    *v23 = v0;
    v23[1] = sub_1003D9B1C;
    return sub_1003DA288(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 296));
  }
  else
  {
LABEL_6:
    v7 = *(_QWORD *)(v0 + 376);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v9 = *(_QWORD *)(v0 + 344);
    v11 = *(_QWORD *)(v0 + 304);
    v10 = *(_QWORD *)(v0 + 312);
    v12 = *(_QWORD *)(v0 + 272);
    v8(*(_QWORD *)(v0 + 296), v12);
    v8(v11, v12);
    v8(v10, v12);
    sub_10002C8F0(v9, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    sub_10002C8F0(v7, type metadata accessor for YearInReview.RemoteConfiguration);
    v14 = *(_QWORD *)(v0 + 344);
    v13 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 320);
    v18 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 304);
    v19 = *(_QWORD *)(v0 + 288);
    v20 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 248);
    v25 = *(_QWORD *)(v0 + 240);
    v26 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(4);
  }
}

uint64_t sub_1003D99C0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v3 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 272);
  v2(*(_QWORD *)(v0 + 296), v6);
  v2(v5, v6);
  v2(v4, v6);
  sub_10002C8F0(v3, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  sub_10002C8F0(v1, type metadata accessor for YearInReview.RemoteConfiguration);
  v8 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 352);
  v10 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 192);
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(4);
}

uint64_t sub_1003D9B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003D9D74;
  else
    v3 = sub_1003D9B80;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003D9B80()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (qword_1009CE350 != -1)
    swift_once(&qword_1009CE350, sub_10001099C);
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 344);
  v27 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 304);
  v23 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = sub_100048F64(v8, (uint64_t)qword_1009E09C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  *(_QWORD *)(v0 + 64) = v2;
  *(_BYTE *)(v0 + 72) = 0;
  UserDefault.wrappedValue.setter(v0 + 64, v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1003DA0F4(v2);
  v1(v4, v5);
  v1(v3, v5);
  v1(v23, v5);
  sub_10002C8F0(v25, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  sub_10002C8F0(v27, type metadata accessor for YearInReview.RemoteConfiguration);
  v11 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 312);
  v12 = *(_QWORD *)(v0 + 320);
  v15 = *(_QWORD *)(v0 + 296);
  v14 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 248);
  v21 = *(_QWORD *)(v0 + 240);
  v22 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 192);
  v26 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v17);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(5);
}

uint64_t sub_1003D9D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];

  if (qword_1009CE378 != -1)
    swift_once(&qword_1009CE378, sub_1003DB518);
  v1 = *(_QWORD *)(v0 + 472);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009E0A40);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 472);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 392);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v44[0] = v10;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 104) = v8;
    v11 = String.init<A>(reflecting:)(v0 + 104, &type metadata for Int);
    v13 = v12;
    *(_QWORD *)(v0 + 96) = sub_100040F58(v11, v12, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue(v7, v0 + 120, v0 + 40);
    v14 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    v16 = v15;
    *(_QWORD *)(v0 + 112) = sub_100040F58(v14, v15, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Cannot schedule notification for year in review %s: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 472));
    swift_errorRelease(v7);
  }

  v17 = *(_QWORD *)(v0 + 472);
  v19 = *(_QWORD *)(v0 + 376);
  v18 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v20 = *(_QWORD *)(v0 + 344);
  v22 = *(_QWORD *)(v0 + 304);
  v21 = *(_QWORD *)(v0 + 312);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 272);
  v25 = sub_1003DB614();
  v43 = swift_allocError(&type metadata for YearInReviewNotificationScheduler.SchedulerError, v25, 0, 0);
  *v26 = 1;
  swift_willThrow(v43);
  swift_errorRelease(v17);
  v18(v23, v24);
  v18(v22, v24);
  v18(v21, v24);
  sub_10002C8F0(v20, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  sub_10002C8F0(v19, type metadata accessor for YearInReview.RemoteConfiguration);
  v28 = *(_QWORD *)(v0 + 344);
  v27 = *(_QWORD *)(v0 + 352);
  v30 = *(_QWORD *)(v0 + 312);
  v29 = *(_QWORD *)(v0 + 320);
  v32 = *(_QWORD *)(v0 + 296);
  v31 = *(_QWORD *)(v0 + 304);
  v33 = *(_QWORD *)(v0 + 288);
  v35 = *(_QWORD *)(v0 + 256);
  v34 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 248);
  v38 = *(_QWORD *)(v0 + 240);
  v39 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 192);
  v41 = *(_QWORD *)(v0 + 168);
  v42 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003DA0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  double (**v9)(uint64_t);
  double v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  NSString v15;
  objc_super v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v2 = OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_experienceSeenObserver;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_experienceSeenObserver))
  {
    v18 = 0xD000000000000012;
    v19 = 0x80000001007C6CC0;
    v17 = a1;
    v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v3._object;
    String.append(_:)(v3);
    swift_bridgeObjectRelease(object);
    v5 = swift_allocObject(&unk_100903028, 24, 7);
    swift_weakInit(v5 + 16, v1);
    v6 = (objc_class *)type metadata accessor for DefaultsObserver();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = &v7[OBJC_IVAR____TtC5BooksP33_8A1BE8AE8AE70CC0220B9F5FF837F82D16DefaultsObserver_keyPath];
    *(_QWORD *)v8 = 0xD000000000000012;
    *((_QWORD *)v8 + 1) = 0x80000001007C6CC0;
    v9 = (double (**)(uint64_t))&v7[OBJC_IVAR____TtC5BooksP33_8A1BE8AE8AE70CC0220B9F5FF837F82D16DefaultsObserver_callback];
    *v9 = sub_1003DB6F8;
    v9[1] = (double (*)(uint64_t))v5;
    v16.receiver = v7;
    v16.super_class = v6;
    *(_QWORD *)&v10 = swift_bridgeObjectRetain(0x80000001007C6CC0).n128_u64[0];
    v11 = objc_msgSendSuper2(&v16, "init", v10);
    v12 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v11;
    v13 = v11;

    if (qword_1009CE820 != -1)
      swift_once(&qword_1009CE820, sub_100064DA0);
    v14 = (void *)qword_100A1EC28;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "addObserver:forKeyPath:options:context:", v13, v15, 1, 0, swift_bridgeObjectRelease(0x80000001007C6CC0).n128_f64[0]);

  }
}

uint64_t sub_1003DA288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for Date(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v8);
  v3[14] = swift_task_alloc(v8);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v3[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v11);
  v3[18] = swift_task_alloc(v11);
  return swift_task_switch(sub_1003DA35C, 0, 0);
}

uint64_t sub_1003DA35C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t);
  NSString v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  NSString v28;
  uint64_t v29;
  double v30;
  id v31;
  Swift::String v32;
  void *object;
  id v34;
  id v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  __n128 v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  _QWORD *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t ObjCClassFromMetadata;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(id, uint64_t, uint64_t);
  id v72;
  id v73;
  uint64_t v74[2];

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[15];
  v4 = v0[16];
  v64 = v3;
  v65 = v4;
  v5 = v0[13];
  v6 = v0[14];
  v8 = v0[11];
  v7 = v0[12];
  v69 = v0[5];
  v72 = objc_msgSend(objc_allocWithZone((Class)UNMutableNotificationContent), "init");
  v0[19] = v72;
  v9 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007C6D00);
  static Locale.current.getter(v9);
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v68(v2, v1, v3);
  v10 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "bundleForClass:", ObjCClassFromMetadata);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v63 = v8;
  v66(v5, v6, v8);
  String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, v12, v5, "Year in Review notification title", 33, 2);
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v15(v6, v8);
  v16 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v16(v1, v64);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v72, "setTitle:", v17, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v18 = String.LocalizationValue.init(stringLiteral:)(0x100000000000003ALL, 0x80000001007C6D50);
  static Locale.current.getter(v18);
  v68(v2, v1, v64);
  v19 = objc_msgSend(v11, "bundleForClass:", ObjCClassFromMetadata);
  v66(v5, v6, v63);
  v20 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, v19, v5, "Year in Review notification body with %d being the year", (int)v0 + 40);
  v22 = v21;
  v15(v6, v63);
  v16(v1, v64);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v24 = swift_allocObject(v23, 72, 7);
  *(_OWORD *)(v24 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v24 + 56) = &type metadata for Int;
  *(_QWORD *)(v24 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v24 + 32) = v69;
  String.init(format:_:)(v20, v22, v24);
  v26 = v25;
  swift_bridgeObjectRelease(v22);
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v72, "setBody:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  objc_msgSend(v72, "setInterruptionLevel:", 1);
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v72, "setCategoryIdentifier:", v28);

  v30 = Date.timeIntervalSinceNow.getter(v29);
  v31 = objc_msgSend((id)objc_opt_self(UNTimeIntervalNotificationTrigger), "triggerWithTimeInterval:repeats:", 0, v30);
  v0[20] = v31;
  v0[2] = v69;
  v74[0] = 762472825;
  v74[1] = 0xE400000000000000;
  v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(object);
  v34 = v72;
  v35 = v31;
  v36 = String._bridgeToObjectiveC()();
  v73 = objc_msgSend((id)objc_opt_self(UNNotificationRequest), "requestWithIdentifier:content:trigger:", v36, v34, v35);
  v0[21] = v73;

  if (qword_1009CE378 != -1)
    swift_once(&qword_1009CE378, sub_1003DB518);
  v38 = v0[9];
  v37 = v0[10];
  v39 = v0[8];
  v40 = v0[6];
  v41 = type metadata accessor for Logger(0);
  sub_100048F64(v41, (uint64_t)qword_1009E0A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, v40, v39);
  swift_bridgeObjectRetain(0xE400000000000000);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.info.getter(v43);
  v45 = os_log_type_enabled(v43, v44);
  v46 = v0[9];
  v47 = v0[10];
  v48 = v0[8];
  if (v45)
  {
    v49 = swift_slowAlloc(22, -1);
    v70 = swift_slowAlloc(64, -1);
    v74[0] = v70;
    *(_DWORD *)v49 = 136315394;
    swift_bridgeObjectRetain(0xE400000000000000);
    v0[3] = sub_100040F58(762472825, 0xE400000000000000, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v49 + 4, v49 + 12);
    swift_bridgeObjectRelease_n(0xE400000000000000, 3);
    *(_WORD *)(v49 + 12) = 2080;
    v50 = sub_100008DB0(&qword_1009E1D40, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v51 = dispatch thunk of CustomStringConvertible.description.getter(v48, v50);
    v53 = v52;
    v0[4] = sub_100040F58(v51, v52, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v62, v49 + 14, v49 + 22);
    v54 = swift_bridgeObjectRelease(v53);
    (*(void (**)(uint64_t, uint64_t, __n128))(v46 + 8))(v47, v48, v54);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Scheduling notification %s to trigger at %s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v70, -1, -1);
    swift_slowDealloc(v49, -1, -1);
  }
  else
  {
    v55 = swift_bridgeObjectRelease_n(0xE400000000000000, 2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v46 + 8))(v47, v48, v55);
  }

  v56 = (_QWORD *)v0[7];
  v57 = v56[10];
  v58 = v56[11];
  sub_10003F198(v56 + 7, v57);
  v59 = *(int **)(v58 + 8);
  v71 = (uint64_t (*)(id, uint64_t, uint64_t))((char *)v59 + *v59);
  v60 = (_QWORD *)swift_task_alloc(v59[1]);
  v0[22] = v60;
  *v60 = v0;
  v60[1] = sub_1003DA9F4;
  return v71(v73, v57, v58);
}

uint64_t sub_1003DA9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003DAAE4;
  else
    v3 = sub_1003DAA58;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003DAA58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void **)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DAAE4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void **)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DAB70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.low.getter(v5);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
  v7 = (_QWORD *)swift_allocObject(&unk_100903050, 48, 7);
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  v7[5] = v1;
  swift_retain(v0);
  v8 = sub_10053DC20((uint64_t)v4, (uint64_t)&unk_1009E0BA8, (uint64_t)v7);
  swift_release(v8);
  return sub_100010960((uint64_t)v4, &qword_1009D3150);
}

uint64_t sub_1003DAC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_10004CFD4(&qword_1009D5D90);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003DACB8, 0, 0);
}

uint64_t sub_1003DACB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[10];
  v3 = v1[11];
  sub_10003F198(v1 + 7, v2);
  v4 = *(int **)(v3 + 16);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_1003DAD34;
  return v7(v2, v3);
}

uint64_t sub_1003DAD34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003DAD90, 0, 0);
}

void sub_1003DAD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char **v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 64);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v16 = *(_QWORD *)(v0 + 64);
    else
      v16 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v1);
    v3 = &selRef_dismissReadingListPopover;
    if (v2)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_38;
      }
      v4 = 0;
      v5 = v1 & 0xC000000000000001;
      v6 = *(_QWORD *)(v0 + 64) + 32;
      do
      {
        if (v5)
          v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 64));
        else
          v9 = *(id *)(v6 + 8 * v4);
        v10 = v9;
        v11 = objc_msgSend(v9, v3[506]);
        static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v13 = v12;

        v14._countAndFlagsBits = 762472825;
        v14._object = (void *)0xE400000000000000;
        LOBYTE(v11) = String.hasPrefix(_:)(v14);
        swift_bridgeObjectRelease(v13);
        if ((v11 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
          v7 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
          v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
          specialized ContiguousArray._endMutation()(v8);
        }
        else
        {

        }
        ++v4;
      }
      while (v2 != v4);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_30;
      goto LABEL_19;
    }
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v3 = &selRef_dismissReadingListPopover;
    if (v2)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_30;
LABEL_19:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_30:
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v17 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_release(_swiftEmptyArrayStorage);
    if (!v17)
      goto LABEL_31;
    goto LABEL_21;
  }
  v17 = _swiftEmptyArrayStorage[2];
  if (v17)
  {
LABEL_21:
    sub_100045E44(0, v17 & ~(v17 >> 63), 0);
    if ((v17 & 0x8000000000000000) == 0)
    {
      v38 = v0;
      v18 = 0;
      do
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, _swiftEmptyArrayStorage);
        else
          v19 = (id)_swiftEmptyArrayStorage[v18 + 4];
        v20 = v19;
        v21 = objc_msgSend(v19, "identifier");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v26 = _swiftEmptyArrayStorage[2];
        v25 = _swiftEmptyArrayStorage[3];
        if (v26 >= v25 >> 1)
          sub_100045E44(v25 > 1, v26 + 1, 1);
        ++v18;
        _swiftEmptyArrayStorage[2] = v26 + 1;
        v27 = &_swiftEmptyArrayStorage[2 * v26];
        v27[4] = v22;
        v27[5] = v24;
      }
      while (v17 != v18);
      swift_release(_swiftEmptyArrayStorage);
      v0 = v38;
      goto LABEL_32;
    }
LABEL_38:
    __break(1u);
    return;
  }
LABEL_31:
  swift_release(_swiftEmptyArrayStorage);
LABEL_32:
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  v29 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v30 = sub_10021AAA8();
  if ((Collection.isNotEmpty.getter(v29, v30) & 1) != 0)
  {
    v31 = *(_QWORD **)(v0 + 24);
    v32 = v31[10];
    v33 = v31[11];
    sub_10003F198(v31 + 7, v32);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 24))(_swiftEmptyArrayStorage, v32, v33);
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (qword_1009CE358 != -1)
    swift_once(&qword_1009CE358, sub_1003D9104);
  v35 = *(_QWORD *)(v0 + 40);
  v34 = *(_QWORD *)(v0 + 48);
  v36 = *(_QWORD *)(v0 + 32);
  v37 = sub_100048F64(v36, (uint64_t)qword_1009E09E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v37, v36);
  *(_BYTE *)(v0 + 72) = 1;
  UserDefault.wrappedValue.setter(v0 + 72, v36);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  swift_task_dealloc(v34);
  (*(void (**)(void))(v0 + 8))();
}

double sub_1003DB124(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  NSString *v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    if (a1)
    {
      if (*(_QWORD *)(a1 + 16))
      {
        v7 = NSKeyValueChangeNewKey;
        v8 = sub_100033914(v7);
        if ((v9 & 1) != 0)
        {
          sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v11);
        }
        else
        {
          v11 = 0u;
          v12 = 0u;
        }

        if (*((_QWORD *)&v12 + 1))
        {
          sub_10004CFC4(&v11, v13);
          sub_10004CD0C((uint64_t)v13, (uint64_t)&v11);
          if ((swift_dynamicCast(&v10, &v11, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
          {
LABEL_12:
            swift_release(v6);
            _s5Books15CurrentPageViewVwxx_0(v13);
            return result;
          }
          if (v10 == 1)
          {
            sub_1003DAB70();
            goto LABEL_12;
          }
          _s5Books15CurrentPageViewVwxx_0(v13);
          goto LABEL_15;
        }
      }
      else
      {
        v11 = 0u;
        v12 = 0u;
      }
      swift_release(v6);
      sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D04E0);
      return result;
    }
LABEL_15:
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003DB268()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  NSString v7;

  v1 = OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_experienceSeenObserver;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_experienceSeenObserver);
  if (v2)
  {
    v3 = qword_1009CE820;
    v4 = v2;
    if (v3 != -1)
      swift_once(&qword_1009CE820, sub_100064DA0);
    v5 = (void *)qword_100A1EC28;
    v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC5BooksP33_8A1BE8AE8AE70CC0220B9F5FF837F82D16DefaultsObserver_keyPath + 8];
    swift_bridgeObjectRetain(v6);
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "removeObserver:forKeyPath:", v4, v7, swift_bridgeObjectRelease(v6).n128_f64[0]);

  }
  _s5Books15CurrentPageViewVwxx_0(v0 + 2);
  _s5Books15CurrentPageViewVwxx_0(v0 + 7);
  sub_100010960((uint64_t)v0 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config, &qword_1009E3A20);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1003DB368()
{
  return type metadata accessor for YearInReviewNotificationScheduler(0);
}

uint64_t type metadata accessor for DefaultsObserver()
{
  return objc_opt_self(_TtC5BooksP33_8A1BE8AE8AE70CC0220B9F5FF837F82D16DefaultsObserver);
}

uint64_t sub_1003DB518()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E0A40);
  sub_100048F64(v0, (uint64_t)qword_1009E0A40);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000019, 0x80000001007C6CE0);
}

uint64_t sub_1003DB59C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009E0B84);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1003DAC54(a1, v4, v5, v6);
}

unint64_t sub_1003DB614()
{
  unint64_t result;

  result = qword_1009E0B90;
  if (!qword_1009E0B90)
  {
    result = swift_getWitnessTable(&unk_100721378, &type metadata for YearInReviewNotificationScheduler.SchedulerError);
    atomic_store(result, &qword_1009E0B90);
  }
  return result;
}

uint64_t sub_1003DB65C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009E0B84);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_1003DAC54(a1, v4, v5, v6);
}

uint64_t sub_1003DB6D4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1003DB6F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1003DB124(a1, v1);
}

uint64_t storeEnumTagSinglePayload for YearInReviewNotificationScheduler.SchedulerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003DB750 + 4 * byte_10072124B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003DB784 + 4 * byte_100721246[v4]))();
}

uint64_t sub_1003DB784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DB78C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003DB794);
  return result;
}

uint64_t sub_1003DB7A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003DB7A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003DB7AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003DB7B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewNotificationScheduler.SchedulerError()
{
  return &type metadata for YearInReviewNotificationScheduler.SchedulerError;
}

unint64_t sub_1003DB7D4()
{
  unint64_t result;

  result = qword_1009E0BB0;
  if (!qword_1009E0BB0)
  {
    result = swift_getWitnessTable(&unk_100721350, &type metadata for YearInReviewNotificationScheduler.SchedulerError);
    atomic_store(result, (unint64_t *)&qword_1009E0BB0);
  }
  return result;
}

char *sub_1003DB818()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  char *v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  CGColorRef GenericRGB;
  id v22;
  id v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  char *v38;
  id v39;
  objc_super v41;

  v1 = OBJC_IVAR____TtC5Books18ToastContainerView_containerView;
  v2 = type metadata accessor for ToastContainerView.ContainerView();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC5Books18ToastContainerView_backgroundView;
  v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v6);

  *(_QWORD *)&v4[v5] = v7;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeight] = 0x4055000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeightInset] = 0x4024000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToastContainerView_defaultWidthInset] = 0x4034000000000000;
  v8 = &v4[OBJC_IVAR____TtC5Books18ToastContainerView_backgroundLayerGroupName];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v4[OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets];
  v10 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v9 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v9 + 1) = v10;

  v41.receiver = v4;
  v41.super_class = (Class)type metadata accessor for ToastContainerView();
  v11 = (char *)objc_msgSendSuper2(&v41, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC5Books18ToastContainerView_containerView;
  v13 = *(void **)&v11[OBJC_IVAR____TtC5Books18ToastContainerView_containerView];
  v14 = v11;
  objc_msgSend(v13, "setClipsToBounds:", 0);
  v15 = (void *)objc_opt_self(UIColor);
  v16 = v13;
  v17 = objc_msgSend(v15, "clearColor");
  objc_msgSend(v16, "setBackgroundColor:", v17);

  v18 = objc_msgSend(*(id *)&v11[v12], "layer");
  objc_msgSend(v18, "setCornerRadius:", 16.0);

  v19 = objc_msgSend(*(id *)&v11[v12], "layer");
  objc_msgSend(v19, "setCornerCurve:", kCACornerCurveContinuous);

  v20 = objc_msgSend(*(id *)&v11[v12], "layer");
  GenericRGB = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 0.35);
  objc_msgSend(v20, "setShadowColor:", GenericRGB);

  v22 = objc_msgSend(*(id *)&v11[v12], "layer");
  objc_msgSend(v22, "setShadowOffset:", 0.0, 8.0);

  v23 = objc_msgSend(*(id *)&v11[v12], "layer");
  LODWORD(v24) = 1.0;
  objc_msgSend(v23, "setShadowOpacity:", v24);

  v25 = objc_msgSend(*(id *)&v11[v12], "layer");
  objc_msgSend(v25, "setShadowRadius:", 26.0);

  v26 = *(void **)&v11[v12];
  v27 = *(double *)&v14[OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeightInset];
  v28 = *(double *)&v14[OBJC_IVAR____TtC5Books18ToastContainerView_defaultWidthInset];
  v29 = v14;
  v30 = v26;
  sub_100411014(v30, v27, v28, v27, v28);

  swift_unknownObjectWeakAssign(*(_QWORD *)&v11[v12]+ OBJC_IVAR____TtCC5Books18ToastContainerViewP33_4DBEA752A9924E02BEA433C77282CE1A13ContainerView_layoutDelegate, v29);
  v31 = OBJC_IVAR____TtC5Books18ToastContainerView_backgroundView;
  v32 = *(void **)&v29[OBJC_IVAR____TtC5Books18ToastContainerView_backgroundView];
  objc_msgSend(v32, "setClipsToBounds:", 1);
  v33 = objc_msgSend(v32, "layer");
  objc_msgSend(v33, "setCornerRadius:", 16.0);

  v34 = *(void **)&v11[v12];
  v35 = *(void **)&v29[v31];
  v36 = v34;
  v37 = v35;
  sub_100411014(v37, 0.0, 0.0, 0.0, 0.0);

  v38 = v29;
  v39 = objc_msgSend(v15, "clearColor");
  objc_msgSend(v38, "setBackgroundColor:", v39);

  return v38;
}

id sub_1003DBF44()
{
  return sub_10025965C(0, type metadata accessor for ToastContainerView.ContainerView);
}

id sub_1003DBF90(uint64_t a1)
{
  return sub_10025965C(a1, type metadata accessor for ToastContainerView);
}

uint64_t type metadata accessor for ToastContainerView()
{
  return objc_opt_self(_TtC5Books18ToastContainerView);
}

uint64_t type metadata accessor for ToastContainerView.ContainerView()
{
  return objc_opt_self(_TtCC5Books18ToastContainerViewP33_4DBEA752A9924E02BEA433C77282CE1A13ContainerView);
}

double sub_1003DC028()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeight);
}

double sub_1003DC038()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets, v3, 0, 0);
  return *(double *)v1;
}

uint64_t sub_1003DC080(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  uint64_t result;
  _BYTE v11[24];

  v9 = (double *)(v4 + OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets);
  result = swift_beginAccess(v4 + OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets, v11, 1, 0);
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return result;
}

uint64_t (*sub_1003DC0E8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1003DC12C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books18ToastContainerView_backgroundLayerGroupName);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books18ToastContainerView_backgroundLayerGroupName, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1003DC180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books18ToastContainerView_backgroundLayerGroupName);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*sub_1003DC1DC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books18ToastContainerView_backgroundLayerGroupName, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_1003DC220(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books18ToastContainerView_containerView);
  objc_msgSend(v3, "bounds");
  objc_msgSend(a1, "setFrame:");
  v4 = objc_msgSend(a1, "layer");
  objc_msgSend(v4, "setCornerRadius:", 16.0);

  objc_msgSend(a1, "setAutoresizingMask:", 18);
  return objc_msgSend(v3, "addSubview:", a1);
}

void sub_1003DC2C4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  char *v7;
  __int128 v8;

  v1 = OBJC_IVAR____TtC5Books18ToastContainerView_containerView;
  v2 = type metadata accessor for ToastContainerView.ContainerView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = OBJC_IVAR____TtC5Books18ToastContainerView_backgroundView;
  v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
  v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v4);

  *(_QWORD *)&v0[v3] = v5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeight] = 0x4055000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeightInset] = 0x4024000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books18ToastContainerView_defaultWidthInset] = 0x4034000000000000;
  v6 = &v0[OBJC_IVAR____TtC5Books18ToastContainerView_backgroundLayerGroupName];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v0[OBJC_IVAR____TtC5Books18ToastContainerView_contentInsets];
  v8 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)v7 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v7 + 1) = v8;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/ToastContainerView.swift", 30, 2, 40, 0);
  __break(1u);
}

uint64_t sub_1003DC404@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007214B8);
  v4 = swift_getKeyPath(&unk_1007214E0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

void sub_1003DC468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  _BYTE v29[24];

  v1 = v0;
  v2 = type metadata accessor for ContinuousClock.Instant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for State(0);
  __chkstk_darwin(v6);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for BookReaderChromeState(0);
  v10 = __chkstk_darwin(v9);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = __chkstk_darwin(v10);
  v15 = &v29[-v14 - 8];
  __chkstk_darwin(v13);
  v17 = &v29[-v16 - 8];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_hasActivePageMovement) == 1)
  {
    if (qword_1009CE380 != -1)
      swift_once(&qword_1009CE380, sub_1003E0938);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100048F64(v18, (uint64_t)qword_1009E0C48);
    v28 = Logger.logObject.getter(v19);
    v20 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v20, "Chrome visibility changes paused (page movement in progress)", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  else
  {
    v22 = v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v29, 0, 0);
    v23 = sub_10002CD84(v22, (uint64_t)v8, type metadata accessor for State);
    static ContinuousClock.Instant.now.getter(v23);
    sub_1003DD4D8((uint64_t)v5, v17);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10002C8F0((uint64_t)v8, type metadata accessor for State);
    KeyPath = swift_getKeyPath(&unk_1007214B8);
    v25 = swift_getKeyPath(&unk_1007214E0);
    static Published.subscript.getter(v15, v1, KeyPath, v25);
    swift_release(v25);
    swift_release(KeyPath);
    LOBYTE(KeyPath) = sub_10058F078(v15, v17);
    sub_10002C8F0((uint64_t)v15, type metadata accessor for BookReaderChromeState);
    if ((KeyPath & 1) == 0)
    {
      sub_10002CD84((uint64_t)v17, (uint64_t)v15, type metadata accessor for BookReaderChromeState);
      v26 = swift_getKeyPath(&unk_1007214B8);
      v27 = swift_getKeyPath(&unk_1007214E0);
      sub_10002CD84((uint64_t)v15, (uint64_t)v12, type metadata accessor for BookReaderChromeState);
      swift_retain(v1);
      static Published.subscript.setter(v12, v1, v26, v27);
      sub_10002C8F0((uint64_t)v15, type metadata accessor for BookReaderChromeState);
    }
    sub_1003DD858();
    sub_10002C8F0((uint64_t)v17, type metadata accessor for BookReaderChromeState);
  }
}

uint64_t sub_1003DC7BC(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = (int *)type metadata accessor for State(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v15, 1, 0);
  sub_10002CD84(v9, (uint64_t)v8, type metadata accessor for State);
  swift_beginAccess(v9, v14, 33, 0);
  sub_1003E08F4(a1, v9);
  swift_endAccess(v14);
  sub_10002CD84(v9, (uint64_t)v6, type metadata accessor for State);
  v10 = sub_1003E0A5C(v8, v6);
  v11 = sub_10002C8F0((uint64_t)v6, type metadata accessor for State);
  if ((v10 & 1) == 0)
  {
    v12 = static UIAccessibility.accessibilityNavigationServicesEnabled.getter(v11);
    *(_BYTE *)(v9 + v3[21]) = v12 & 1;
    if ((v12 & 1) != v8[v3[21]])
    {
      *(_BYTE *)(v9 + v3[23]) = 0;
      *(_BYTE *)(v9 + v3[22]) = 0;
    }
    sub_1003DC468();
  }
  sub_10002C8F0(a1, type metadata accessor for State);
  return sub_10002C8F0((uint64_t)v8, type metadata accessor for State);
}

uint64_t sub_1003DC930(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v40 = a1;
  v3 = sub_10004CFD4(&qword_1009EFF90);
  v4 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v43 = v4;
  __chkstk_darwin(v3);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for State(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_10004CFD4((uint64_t *)&unk_1009F0110);
  v9 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  v38 = v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController__chromeState;
  *(_WORD *)((char *)&v38 - v16) = 0;
  v19 = (char *)&v38 + *(int *)(v18 + 24) - v16;
  v20 = enum case for BookContentHeaderStyle.primary(_:);
  v21 = type metadata accessor for BookContentHeaderStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  v17[v12[7]] = 0;
  v17[v12[8]] = 1;
  v17[v12[9]] = 0;
  v17[v12[10]] = 0;
  *(_WORD *)&v17[v12[11]] = 0;
  v17[v12[12]] = 0;
  v17[v12[13]] = 0;
  v17[v12[14]] = 1;
  v17[v12[15]] = 0;
  sub_10002CD84((uint64_t)v17, (uint64_t)v14, type metadata accessor for BookReaderChromeState);
  Published.init(initialValue:)(v14, v12);
  sub_10002C8F0((uint64_t)v17, type metadata accessor for BookReaderChromeState);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v38, v11, v39);
  v22 = OBJC_IVAR____TtC5Books26BookReaderChromeController_axNotificationTask;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books26BookReaderChromeController_axNotificationTask) = 0;
  v23 = v2 + OBJC_IVAR____TtC5Books26BookReaderChromeController_reapplyStateTask;
  v24 = sub_10004CFD4((uint64_t *)&unk_1009E0CE0);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Books26BookReaderChromeController_hasActivePageMovement) = 0;
  v26 = static ContinuousClock.Instant.now.getter(v25);
  v27 = static ContinuousClock.Instant.now.getter(v26);
  static ContinuousClock.Instant.now.getter(v27);
  *v8 = v40;
  *(_QWORD *)(v8 + 1) = 0;
  *(_DWORD *)(v8 + 9) = 0;
  v8[v6[20]] = 0;
  v8[v6[21]] = 0;
  v8[v6[22]] = 0;
  v8[v6[23]] = 0;
  v28 = sub_1003E0E9C((uint64_t)v8, v2 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state);
  v29 = v41;
  static UIAccessibility.accessibilityNavigationServicesEnabledPublisher.getter(v28);
  v30 = swift_allocObject(&unk_1009031B8, 24, 7);
  v31 = swift_weakInit(v30 + 16, v2);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of static UIAccessibility.accessibilityNavigationServicesEnabledPublisher>>, 1);
  v33 = v42;
  v34 = Publisher<>.sink(receiveValue:)(sub_1003E0EE0, v30, v42, OpaqueTypeConformance2);
  v35 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v29, v33, v35);
  v36 = *(_QWORD *)(v2 + v22);
  *(_QWORD *)(v2 + v22) = v34;
  swift_release(v36);
  sub_1003DC468();
  return v2;
}

double sub_1003DCCA4(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v10 = Strong;
    v11 = Strong + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v12, 0, 0);
    sub_10002CD84(v11, (uint64_t)v6, type metadata accessor for State);
    v6[*(int *)(v4 + 84)] = v7;
    sub_1003DC7BC((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

void sub_1003DCD90(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _BYTE v20[24];

  v3 = type metadata accessor for ContinuousClock.Instant(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (int *)type metadata accessor for State(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v20[-v11 - 8];
  v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_hasActivePageMovement);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_hasActivePageMovement) = a1;
  if (v13 == 1 && (a1 & 1) == 0)
  {
    v14 = v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v20, 0, 0);
    v15 = sub_10002CD84(v14, (uint64_t)v12, type metadata accessor for State);
    static ContinuousClock.Instant.now.getter(v15);
    v16 = &v12[v7[18]];
    v17 = *(void (**)(char *, char *, uint64_t))(v4 + 40);
    v17(v16, v6, v3);
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 24))(&v12[v7[17]], v16, v3);
    static ContinuousClock.Instant.now.getter(v18);
    v17(&v12[v7[19]], v6, v3);
    sub_10002CD84((uint64_t)v12, (uint64_t)v9, type metadata accessor for State);
    sub_1003DC7BC((uint64_t)v9);
    sub_10002C8F0((uint64_t)v12, type metadata accessor for State);
    sub_1003DC468();
  }
}

uint64_t sub_1003DCF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v24 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v24 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v24 - v15;
  v17 = v2 + *(int *)(type metadata accessor for State(0) + 72);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19 = v18(v14, v17, v4);
  static ContinuousClock.Instant.now.getter(v19);
  ContinuousClock.Instant.advanced(by:)(a1, v25);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v21 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  if ((dispatch thunk of static Comparable.>= infix(_:_:)(v11, v14, v4, v21) & 1) != 0)
    v22 = v11;
  else
    v22 = v14;
  v18(v16, (uint64_t)v22, v4);
  v20(v11, v4);
  v20(v14, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v17, v16, v4);
}

uint64_t sub_1003DD0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE v22[24];

  v21 = type metadata accessor for ContinuousClock.Instant(0);
  v1 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for State(0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v22[-v8 - 8];
  v10 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  KeyPath = swift_getKeyPath(&unk_1007214B8);
  v14 = swift_getKeyPath(&unk_1007214E0);
  static Published.subscript.getter(v12, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v14);
  LODWORD(v14) = *((unsigned __int8 *)v12 + *(int *)(v10 + 44));
  sub_10002C8F0((uint64_t)v12, type metadata accessor for BookReaderChromeState);
  v15 = v0 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  v16 = v0 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  if ((_DWORD)v14 == 1)
  {
    swift_beginAccess(v16, v22, 0, 0);
    v17 = sub_10002CD84(v15, (uint64_t)v9, type metadata accessor for State);
    static ContinuousClock.Instant.now.getter(v17);
    v18 = &v9[*(int *)(v4 + 72)];
    v19 = v21;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 40))(v18, v3, v21);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 24))(&v9[*(int *)(v4 + 68)], v18, v19);
    sub_10002CD84((uint64_t)v9, (uint64_t)v6, type metadata accessor for State);
    sub_1003DC7BC((uint64_t)v6);
    return sub_10002C8F0((uint64_t)v9, type metadata accessor for State);
  }
  else
  {
    swift_beginAccess(v16, v22, 0, 0);
    sub_10002CD84(v15, (uint64_t)v9, type metadata accessor for State);
    if (qword_1009CE390 != -1)
      swift_once(&qword_1009CE390, sub_1003E0A38);
    sub_1003DCF34(qword_1009E0C68, unk_1009E0C70);
    return sub_1003DC7BC((uint64_t)v9);
  }
}

uint64_t sub_1003DD344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v21;

  v1 = type metadata accessor for ContinuousClock.Instant(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - v12;
  v14 = v0 + *(int *)(type metadata accessor for State(0) + 76);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v16 = v15(v10, v14, v1);
  static ContinuousClock.Instant.now.getter(v16);
  ContinuousClock.Instant.advanced(by:)(0xA055690D9DB80000, 1);
  v17 = *(void (**)(char *, uint64_t))(v2 + 8);
  v17(v4, v1);
  v18 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  if ((dispatch thunk of static Comparable.>= infix(_:_:)(v7, v10, v1, v18) & 1) != 0)
    v19 = v7;
  else
    v19 = v10;
  v15(v13, (uint64_t)v19, v1);
  v17(v7, v1);
  v17(v10, v1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 40))(v14, v13, v1);
}

uint64_t sub_1003DD4D8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  unsigned int *v23;
  int v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  int v31;
  char v32;
  char v33;
  int *v34;
  uint64_t result;
  _BYTE *v36;
  _BYTE v37[4];
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v6 = type metadata accessor for ContinuousClock.Instant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (int *)type metadata accessor for State(0);
  v11 = __chkstk_darwin(v10);
  v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v37[-v14];
  v16 = type metadata accessor for BookContentHeaderStyle(0);
  v44 = *(_QWORD *)(v16 - 8);
  v45 = v16;
  __chkstk_darwin(v16);
  v43 = &v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_1003DEE50(a1);
  v19 = v2[6];
  v41 = v18;
  v42 = v19;
  v20 = v2[2];
  sub_10002CD84((uint64_t)v3, (uint64_t)v15, type metadata accessor for State);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (v20 == 1)
  {
    v21 = &v15[v10[17]];
    v22 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    LOBYTE(v21) = dispatch thunk of static Comparable.< infix(_:_:)(v9, v21, v6, v22);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    sub_10002C8F0((uint64_t)v15, type metadata accessor for State);
    v23 = (unsigned int *)&enum case for BookContentHeaderStyle.secondary(_:);
    if ((v21 & 1) != 0)
      v23 = (unsigned int *)&enum case for BookContentHeaderStyle.primary(_:);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    sub_10002C8F0((uint64_t)v15, type metadata accessor for State);
    v23 = (unsigned int *)&enum case for BookContentHeaderStyle.primary(_:);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v44 + 104))(v43, *v23, v45);
  v24 = sub_1003DF058(a1);
  v25 = v3[8];
  v39 = v24;
  v40 = v25;
  v38 = sub_1003DF1E0(a1);
  v26 = sub_1003DF5FC(a1);
  if ((v3[3] & 1) != 0)
  {
    v27 = 0;
    v28 = 0;
  }
  else
  {
    v27 = sub_1003E0014(a1);
    v28 = v3[4];
  }
  v29 = sub_1003DF8FC(a1);
  v30 = sub_1003DFCCC(a1);
  v31 = v3[v10[21]];
  sub_10002CD84((uint64_t)v3, (uint64_t)v13, type metadata accessor for State);
  if (v31 == 1)
    v32 = v13[v10[22]] ^ 1;
  else
    v32 = 0;
  sub_10002C8F0((uint64_t)v13, type metadata accessor for State);
  v33 = v3[v10[20]];
  *a2 = v41 & 1;
  a2[1] = v42;
  v34 = (int *)type metadata accessor for BookReaderChromeState(0);
  result = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v44 + 32))(&a2[v34[6]], v43, v45);
  a2[v34[7]] = v39;
  a2[v34[8]] = v40;
  a2[v34[9]] = v38 & 1;
  a2[v34[10]] = v26 & 1;
  v36 = &a2[v34[11]];
  *v36 = v27 & 1;
  v36[1] = v28;
  a2[v34[12]] = v29 & 1;
  a2[v34[13]] = v30 & 1;
  a2[v34[14]] = v32 & 1;
  a2[v34[15]] = v33;
  return result;
}

uint64_t sub_1003DD858()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t);
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  void (*v97)(uint64_t, char *, uint64_t);
  char *v98;
  char v99[16];
  char *v100;
  _BYTE v101[24];
  _BYTE v102[32];
  char v103[32];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009E0E58);
  __chkstk_darwin(v2);
  v96 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v89 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10004CFD4(&qword_1009E0E60);
  __chkstk_darwin(v93);
  v94 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for State(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009E0E68);
  v11 = __chkstk_darwin(v10);
  v85 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v95 = (uint64_t)&v81 - v14;
  v15 = __chkstk_darwin(v13);
  v92 = (char *)&v81 - v16;
  __chkstk_darwin(v15);
  v97 = (void (*)(uint64_t, char *, uint64_t))((char *)&v81 - v17);
  v18 = type metadata accessor for ContinuousClock.Instant(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v21;
  __chkstk_darwin(v20);
  v91 = (char *)&v81 - v23;
  v98 = v1;
  v24 = (uint64_t)&v1[OBJC_IVAR____TtC5Books26BookReaderChromeController_state];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Books26BookReaderChromeController_state], v103, 0, 0);
  v25 = sub_10002CD84(v24, (uint64_t)v9, type metadata accessor for State);
  static ContinuousClock.Instant.now.getter(v25);
  v26 = sub_10004CFD4(&qword_1009DD580);
  v27 = *(_QWORD *)(v19 + 72);
  v28 = *(unsigned __int8 *)(v19 + 80);
  v29 = (v28 + 32) & ~v28;
  v30 = 2 * v27;
  v86 = v28 | 7;
  v31 = swift_allocObject(v26, v29 + 3 * v27, v28 | 7);
  *(_OWORD *)(v31 + 16) = xmmword_100712B60;
  v87 = v29;
  v32 = v31 + v29;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 16);
  v33(v32, &v9[v7[17]], v18);
  v34 = v32 + v27;
  v35 = v18;
  v33(v34, &v9[v7[18]], v18);
  v33(v32 + v30, &v9[v7[19]], v18);
  v100 = v22;
  v36 = sub_100374424(sub_1003E0C08, (uint64_t)v99, v31);
  v37 = v97;
  sub_1003DEC68(v36, (uint64_t)v97);
  swift_bridgeObjectRelease(v36);
  v38 = *(void (**)(char *, uint64_t))(v19 + 8);
  v90 = v22;
  v38(v22, v35);
  sub_10002C8F0((uint64_t)v9, type metadata accessor for State);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v39((uint64_t)v37, 1, v35) != 1)
  {
    v44 = v91;
    v84 = *(void (**)(char *, _QWORD, uint64_t))(v19 + 32);
    v84(v91, v37, v35);
    v45 = (uint64_t)v92;
    v97 = v33;
    v33((uint64_t)v92, v44, v35);
    v46 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56);
    v47 = 1;
    v46(v45, 0, 1, v35);
    v48 = &v98[OBJC_IVAR____TtC5Books26BookReaderChromeController_reapplyStateTask];
    swift_beginAccess(&v98[OBJC_IVAR____TtC5Books26BookReaderChromeController_reapplyStateTask], v102, 0, 0);
    v49 = sub_10004CFD4((uint64_t *)&unk_1009E0CE0);
    v82 = *(_QWORD *)(v49 - 8);
    v50 = *(uint64_t (**)(char *, uint64_t))(v82 + 48);
    v83 = v49;
    v51 = v50(v48, 1);
    v52 = v95;
    if (!v51)
    {
      v97(v95, v48, v35);
      v47 = 0;
    }
    v46(v52, v47, 1, v35);
    v53 = v94;
    v54 = v94 + *(int *)(v93 + 48);
    sub_1003E0CC4(v45, v94);
    sub_1003E0CC4(v52, v54);
    if (v39(v53, 1, v35) == 1)
    {
      sub_100010960(v52, &qword_1009E0E68);
      sub_100010960(v45, &qword_1009E0E68);
      if (v39(v54, 1, v35) == 1)
      {
        sub_100010960(v53, &qword_1009E0E68);
        return ((uint64_t (*)(char *, uint64_t))v38)(v44, v35);
      }
    }
    else
    {
      v55 = v85;
      sub_1003E0CC4(v53, v85);
      if (v39(v54, 1, v35) != 1)
      {
        v93 = (uint64_t)v48;
        v56 = v55;
        v57 = v90;
        v84(v90, v54, v35);
        v58 = sub_100008DB0(&qword_1009E0E80, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
        v59 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v57, v35, v58);
        v38(v57, v35);
        sub_100010960(v95, &qword_1009E0E68);
        sub_100010960(v45, &qword_1009E0E68);
        v38((char *)v56, v35);
        sub_100010960(v53, &qword_1009E0E68);
        if ((v59 & 1) != 0)
          return ((uint64_t (*)(char *, uint64_t))v38)(v44, v35);
LABEL_13:
        v61 = type metadata accessor for TaskPriority(0);
        v62 = (uint64_t)v89;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v89, 1, 1, v61);
        v63 = swift_allocObject(&unk_1009031B8, 24, 7);
        swift_weakInit(v63 + 16, v98);
        v64 = v90;
        v65 = v35;
        v98 = (char *)v38;
        v66 = v35;
        v67 = (void (*)(char *, char *, uint64_t))v97;
        v97((uint64_t)v90, v44, v65);
        type metadata accessor for MainActor(0);
        v68 = swift_retain(v63);
        v69 = static MainActor.shared.getter(v68);
        v70 = v87;
        v71 = v44;
        v72 = (v88 + v87 + 7) & 0xFFFFFFFFFFFFFFF8;
        v73 = swift_allocObject(&unk_1009031E0, v72 + 8, v86);
        *(_QWORD *)(v73 + 16) = v69;
        *(_QWORD *)(v73 + 24) = &protocol witness table for MainActor;
        v84((char *)(v73 + v70), v64, v66);
        *(_QWORD *)(v73 + v72) = v63;
        swift_release(v63);
        v74 = sub_100488750(v62, (uint64_t)&unk_1009E0E78, v73);
        v75 = v83;
        v76 = *(int *)(v83 + 48);
        v77 = (uint64_t)v96;
        v67(v96, v71, v66);
        v78 = type metadata accessor for AnyCancellable(0);
        swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
        v79 = AnyCancellable.init(_:)(sub_1003E0E64, v74);
        ((void (*)(char *, uint64_t))v98)(v71, v66);
        *(_QWORD *)(v77 + v76) = v79;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v77, 0, 1, v75);
        v80 = v93;
        swift_beginAccess(v93, v101, 33, 0);
        sub_1003E0C7C(v77, v80);
        v43 = v101;
        return swift_endAccess(v43);
      }
      sub_100010960(v95, &qword_1009E0E68);
      sub_100010960(v45, &qword_1009E0E68);
      v38((char *)v55, v35);
    }
    v93 = (uint64_t)v48;
    sub_100010960(v53, &qword_1009E0E60);
    goto LABEL_13;
  }
  sub_100010960((uint64_t)v37, &qword_1009E0E68);
  v40 = sub_10004CFD4((uint64_t *)&unk_1009E0CE0);
  v41 = (uint64_t)v96;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v96, 1, 1, v40);
  v42 = (uint64_t)&v98[OBJC_IVAR____TtC5Books26BookReaderChromeController_reapplyStateTask];
  swift_beginAccess(&v98[OBJC_IVAR____TtC5Books26BookReaderChromeController_reapplyStateTask], v102, 33, 0);
  sub_1003E0C7C(v41, v42);
  v43 = v102;
  return swift_endAccess(v43);
}

uint64_t sub_1003DE0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[8] = a4;
  v5[9] = a5;
  v6 = type metadata accessor for ContinuousClock(0);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v5[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[14] = v9;
  v5[15] = v10;
  return swift_task_switch(sub_1003DE14C, v9, v10);
}

uint64_t sub_1003DE14C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 56) = 1;
  static Clock<>.continuous.getter();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep<A>(until:tolerance:clock:)[1]);
  *(_QWORD *)(v0 + 128) = v1;
  v2 = sub_100008DB0(&qword_1009D4250, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  *v1 = v0;
  v1[1] = sub_1003DE1E4;
  return static Task<>.sleep<A>(until:tolerance:clock:)(*(_QWORD *)(v0 + 64), v0 + 40, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80), v2);
}

uint64_t sub_1003DE1E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[11] + 8))(v2[12], v2[10]);
  if (v0)
    v4 = sub_1003DE2E0;
  else
    v4 = sub_1003DE268;
  return swift_task_switch(v4, v2[14], v2[15]);
}

uint64_t sub_1003DE268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 104));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    sub_1003DC468();
    swift_release(v3);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DE2E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003DE31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books26BookReaderChromeController__chromeState;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009F0110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books26BookReaderChromeController_axNotificationTask));
  sub_100010960(v0 + OBJC_IVAR____TtC5Books26BookReaderChromeController_reapplyStateTask, &qword_1009E0E58);
  sub_10002C8F0(v0 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, type metadata accessor for State);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003DE3B0()
{
  return type metadata accessor for BookReaderChromeController(0);
}

uint64_t type metadata accessor for BookReaderChromeController(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009E0CC0, (uint64_t)&nominal type descriptor for BookReaderChromeController);
}

void sub_1003DE3CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_1003DE47C(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "\b";
    sub_1003DE4D0(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for State(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = &unk_100721438;
        swift_updateClassMetadata2(a1, 256, 5, v8, a1 + 80);
      }
    }
  }
}

void sub_1003DE47C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E0CD0)
  {
    v2 = type metadata accessor for BookReaderChromeState(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E0CD0);
  }
}

void sub_1003DE4D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E0CD8)
  {
    v2 = sub_100030B74((uint64_t *)&unk_1009E0CE0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E0CD8);
  }
}

uint64_t type metadata accessor for State(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E0DD8, (uint64_t)&nominal type descriptor for State);
}

_QWORD *sub_1003DE53C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v7 = a3[17];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for ContinuousClock.Instant(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11((uint64_t)v4 + a3[18], (uint64_t)a2 + a3[18], v10);
    v11((uint64_t)v4 + a3[19], (uint64_t)a2 + a3[19], v10);
    v12 = a3[21];
    *((_BYTE *)v4 + a3[20]) = *((_BYTE *)a2 + a3[20]);
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[23];
    *((_BYTE *)v4 + a3[22]) = *((_BYTE *)a2 + a3[22]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
  }
  return v4;
}

uint64_t sub_1003DE640(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + a2[17];
  v5 = type metadata accessor for ContinuousClock.Instant(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(a1 + a2[18], v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + a2[19], v5);
}

uint64_t sub_1003DE6C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = a3[17];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for ContinuousClock.Instant(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + a3[18], a2 + a3[18], v9);
  v10(a1 + a3[19], a2 + a3[19], v9);
  v11 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

_BYTE *sub_1003DE79C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  v6 = a3[17];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ContinuousClock.Instant(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[18]], &a2[a3[18]], v9);
  v10(&a1[a3[19]], &a2[a3[19]], v9);
  a1[a3[20]] = a2[a3[20]];
  a1[a3[21]] = a2[a3[21]];
  a1[a3[22]] = a2[a3[22]];
  a1[a3[23]] = a2[a3[23]];
  return a1;
}

uint64_t sub_1003DE8CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v6 = a3[17];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for ContinuousClock.Instant(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[18], a2 + a3[18], v9);
  v10(a1 + a3[19], a2 + a3[19], v9);
  v11 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

_BYTE *sub_1003DE9A4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  v6 = a3[17];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ContinuousClock.Instant(0);
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[18]], &a2[a3[18]], v9);
  v10(&a1[a3[19]], &a2[a3[19]], v9);
  v11 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v11] = a2[v11];
  v12 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v12] = a2[v12];
  return a1;
}

uint64_t sub_1003DEACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DEAD8);
}

uint64_t sub_1003DEAD8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for ContinuousClock.Instant(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 68)], a2, v10);
  }
}

uint64_t sub_1003DEB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DEB60);
}

_BYTE *sub_1003DEB60(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for ContinuousClock.Instant(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 68)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1003DEBD0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v4[0] = &unk_100721438;
  v4[1] = &unk_100721438;
  v4[2] = &unk_100721438;
  v4[3] = &unk_100721438;
  v4[4] = &unk_100721438;
  v4[5] = &unk_100721438;
  v4[6] = &unk_100721438;
  v4[7] = &unk_100721438;
  v4[8] = &unk_100721438;
  v4[9] = &unk_100721438;
  v4[10] = &unk_100721438;
  v4[11] = &unk_100721438;
  v4[12] = &unk_100721438;
  result = type metadata accessor for ContinuousClock.Instant(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = v5;
    v8 = &unk_100721438;
    v9 = &unk_100721438;
    v10 = &unk_100721438;
    v11 = &unk_100721438;
    swift_initStructMetadata(a1, 256, 20, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003DEC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v23 = a2;
  v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  v13((char *)&v23 - v9, a1 + v12, v4);
  v24 = a1;
  v14 = swift_bridgeObjectRetain(a1);
  v15 = v11 - 1;
  if (v15)
  {
    v18 = *(_QWORD *)(v5 + 72);
    v19 = v24 + v18 + v12;
    do
    {
      ((void (*)(char *, unint64_t, uint64_t, __n128))v13)(v8, v19, v4, v14);
      v20 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
      v21 = dispatch thunk of static Comparable.< infix(_:_:)(v8, v10, v4, v20);
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      if ((v21 & 1) != 0)
      {
        v22(v10, v4);
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
      }
      else
      {
        v22(v8, v4);
      }
      v19 += v18;
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease(v24);
  v16 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v23, v10, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
}

uint64_t sub_1003DEE50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t (*v18)(_QWORD);
  char v19;
  char v20;
  char v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for State(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v23 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v23 - v15;
  v17 = *(_BYTE *)(v2 + 1);
  sub_10002CD84(v2, (uint64_t)&v23 - v15, v18);
  if ((v17 & 1) != 0)
  {
    sub_10002C8F0((uint64_t)v16, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
LABEL_4:
    sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v11, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    goto LABEL_5;
  }
  v19 = v16[5];
  sub_10002C8F0((uint64_t)v16, type metadata accessor for State);
  sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
  if ((v19 & 1) != 0)
    goto LABEL_4;
  v22 = v14[3];
  sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
  sub_10002CD84(v2, (uint64_t)v11, type metadata accessor for State);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((v22 & 1) == 0)
  {
    v20 = sub_1003E0014((uint64_t)v7);
    goto LABEL_6;
  }
LABEL_5:
  v20 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10002C8F0((uint64_t)v11, type metadata accessor for State);
  return v20 & 1;
}

uint64_t sub_1003DF058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t (*v12)(_QWORD);
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for State(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v2 + 2);
  sub_10002CD84(v2, (uint64_t)v10, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v11 == 1)
  {
    v13 = &v10[*(int *)(v8 + 68)];
    v14 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    LOBYTE(v13) = dispatch thunk of static Comparable.< infix(_:_:)(v7, v13, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10002C8F0((uint64_t)v10, type metadata accessor for State);
    if ((v13 & 1) != 0)
    {
      return 0;
    }
    else if ((sub_1003E03E4(a1) & 1) != 0)
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10002C8F0((uint64_t)v10, type metadata accessor for State);
    return 0;
  }
}

uint64_t sub_1003DF1E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  int *v31;
  char v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;

  v2 = v1;
  v50 = a1;
  v3 = type metadata accessor for ContinuousClock.Instant(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v45 - v8;
  v10 = type metadata accessor for State(0);
  v11 = __chkstk_darwin(v10);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v45 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v45 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v45 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v45 - v22;
  v24 = __chkstk_darwin(v21);
  v27 = (char *)&v45 - v26;
  if (qword_1009CE388 != -1)
  {
    v48 = v25;
    v49 = (int *)v24;
    swift_once(&qword_1009CE388, sub_1003E09AC);
    v25 = v48;
    v24 = (uint64_t)v49;
  }
  if ((byte_1009E0C60 & 1) == 0)
  {
    if ((*(_BYTE *)(v2 + 7) & 1) != 0)
    {
      v28 = 0;
      return v28 & 1;
    }
    v48 = v25;
    v49 = (int *)v24;
    v47 = v7;
    v29 = *(_BYTE *)(v2 + 3);
    sub_10002CD84(v2, (uint64_t)v27, type metadata accessor for State);
    if ((v29 & 1) != 0)
    {
      v30 = 1;
    }
    else
    {
      v31 = v49;
      LODWORD(v46) = v27[v49[21]];
      sub_10002CD84((uint64_t)v27, (uint64_t)v23, type metadata accessor for State);
      if ((_DWORD)v46 == 1)
        v30 = v23[v31[22]] ^ 1;
      else
        v30 = 0;
      sub_10002C8F0((uint64_t)v23, type metadata accessor for State);
    }
    sub_10002C8F0((uint64_t)v27, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v20, type metadata accessor for State);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v46(v9, v50, v3);
    if ((v30 & 1) != 0)
    {
      v32 = 1;
    }
    else
    {
      v33 = &v20[v49[18]];
      v34 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
      v32 = dispatch thunk of static Comparable.< infix(_:_:)(v9, v33, v3, v34);
    }
    v35 = *(void (**)(char *, uint64_t))(v4 + 8);
    v35(v9, v3);
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v17, type metadata accessor for State);
    if ((v32 & 1) == 0)
    {
      v36 = v17[11];
      sub_10002CD84((uint64_t)v17, (uint64_t)v14, type metadata accessor for State);
      if ((v36 & 1) == 0)
      {
        v41 = v14[12];
        sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
        sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
        v42 = v2;
        v38 = v48;
        sub_10002CD84(v42, v48, type metadata accessor for State);
        v39 = v47;
        v46(v47, v50, v3);
        if ((v41 & 1) == 0)
        {
          v43 = v38 + v49[19];
          v44 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
          v28 = dispatch thunk of static Comparable.< infix(_:_:)(v39, v43, v3, v44);
          goto LABEL_21;
        }
LABEL_20:
        v28 = 1;
LABEL_21:
        v35(v39, v3);
        sub_10002C8F0(v38, type metadata accessor for State);
        return v28 & 1;
      }
      sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
    }
    sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
    v37 = v2;
    v38 = v48;
    sub_10002CD84(v37, v48, type metadata accessor for State);
    v39 = v47;
    v46(v47, v50, v3);
    goto LABEL_20;
  }
  v28 = 1;
  return v28 & 1;
}

uint64_t sub_1003DF5FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  char v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for State(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v27 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v27 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  if (qword_1009CE388 != -1)
    swift_once(&qword_1009CE388, sub_1003E09AC);
  if ((byte_1009E0C60 & 1) == 0)
  {
    if ((*(_BYTE *)(v2 + 3) & 1) != 0)
      return 0;
    v28 = a1;
    v21 = *(unsigned __int8 *)(v2 + v8[21]);
    sub_10002CD84(v2, (uint64_t)v19, type metadata accessor for State);
    if (v21 == 1)
    {
      v22 = v19[v8[22]];
      sub_10002C8F0((uint64_t)v19, type metadata accessor for State);
      sub_10002CD84(v2, (uint64_t)v17, type metadata accessor for State);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v28, v4);
      if ((v22 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
        sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
        v20 = 1;
LABEL_17:
        sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
        return v20;
      }
    }
    else
    {
      sub_10002C8F0((uint64_t)v19, type metadata accessor for State);
      sub_10002CD84(v2, (uint64_t)v17, type metadata accessor for State);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v28, v4);
    }
    v23 = &v17[v8[18]];
    v24 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    LOBYTE(v23) = dispatch thunk of static Comparable.< infix(_:_:)(v7, v23, v4, v24);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    if ((v23 & 1) != 0)
    {
      v20 = 1;
    }
    else
    {
      v25 = v14[11];
      sub_10002CD84((uint64_t)v14, (uint64_t)v11, type metadata accessor for State);
      if ((v25 & 1) != 0)
        v20 = 1;
      else
        v20 = v11[12];
      sub_10002C8F0((uint64_t)v11, type metadata accessor for State);
    }
    goto LABEL_17;
  }
  return 1;
}

uint64_t sub_1003DF8FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v40 = a1;
  v3 = type metadata accessor for ContinuousClock.Instant(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for State(0);
  v7 = __chkstk_darwin(v38);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v39 = (uint64_t)&v37 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v37 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v37 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v37 - v21;
  if (qword_1009CE388 != -1)
    swift_once(&qword_1009CE388, sub_1003E09AC);
  v23 = byte_1009E0C60;
  sub_10002CD84(v2, (uint64_t)v22, type metadata accessor for State);
  if ((v23 & 1) != 0)
  {
    sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v20, type metadata accessor for State);
LABEL_6:
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v40, v3);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
    v25 = v2;
    v26 = v39;
    sub_10002CD84(v25, v39, type metadata accessor for State);
LABEL_8:
    v27 = 1;
    goto LABEL_9;
  }
  v37 = v9;
  v24 = v22[3];
  sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
  sub_10002CD84(v2, (uint64_t)v20, type metadata accessor for State);
  if ((v24 & 1) != 0)
    goto LABEL_6;
  v29 = v38;
  v30 = v20[*(int *)(v38 + 84)];
  sub_10002CD84((uint64_t)v20, (uint64_t)v17, type metadata accessor for State);
  if (v30 == 1)
  {
    v31 = v17[*(int *)(v29 + 88)];
    sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v40, v3);
    if ((v31 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v40, v3);
  }
  v32 = &v14[*(int *)(v29 + 72)];
  v33 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  LOBYTE(v32) = dispatch thunk of static Comparable.< infix(_:_:)(v6, v32, v3, v33);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
  v34 = v2;
  v26 = v39;
  sub_10002CD84(v34, v39, type metadata accessor for State);
  if ((v32 & 1) != 0)
    goto LABEL_8;
  v35 = *(_BYTE *)(v26 + 11);
  v36 = (uint64_t)v37;
  sub_10002CD84(v26, (uint64_t)v37, type metadata accessor for State);
  if ((v35 & 1) != 0)
    v27 = 1;
  else
    v27 = *(unsigned __int8 *)(v36 + 12);
  sub_10002C8F0(v36, type metadata accessor for State);
LABEL_9:
  sub_10002C8F0(v26, type metadata accessor for State);
  return v27;
}

uint64_t sub_1003DFCCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  char v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for State(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v32 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v32 - v17;
  __chkstk_darwin(v16);
  v21 = (char *)&v32 - v19;
  if ((*(_BYTE *)(v2 + 3) & 1) == 0 && (*(_BYTE *)(v2 + 9) & 1) == 0)
  {
    v32 = a1;
    v33 = v20;
    v23 = *(unsigned __int8 *)(v2 + v8[21]);
    sub_10002CD84(v2, (uint64_t)&v32 - v19, type metadata accessor for State);
    if (v23 == 1)
    {
      v24 = v21[v8[23]];
      sub_10002C8F0((uint64_t)v21, type metadata accessor for State);
      sub_10002CD84(v2, (uint64_t)v18, type metadata accessor for State);
      if ((v24 & 1) != 0)
      {
        sub_10002C8F0((uint64_t)v18, type metadata accessor for State);
        sub_10002CD84(v2, (uint64_t)v15, type metadata accessor for State);
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v32, v4);
        goto LABEL_9;
      }
    }
    else
    {
      sub_10002C8F0((uint64_t)v21, type metadata accessor for State);
      sub_10002CD84(v2, (uint64_t)v18, type metadata accessor for State);
    }
    v25 = v18[10];
    sub_10002C8F0((uint64_t)v18, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v15, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v32, v4);
    if ((v25 & 1) == 0)
    {
      v27 = &v15[v8[18]];
      v28 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
      LOBYTE(v27) = dispatch thunk of static Comparable.< infix(_:_:)(v7, v27, v4, v28);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_10002C8F0((uint64_t)v15, type metadata accessor for State);
      v26 = v33;
      sub_10002CD84(v2, v33, type metadata accessor for State);
      if ((v27 & 1) != 0)
      {
        v22 = 1;
      }
      else
      {
        v29 = v26;
        v30 = *(_BYTE *)(v26 + 11);
        sub_10002CD84(v29, (uint64_t)v11, type metadata accessor for State);
        if ((v30 & 1) != 0)
          v22 = 1;
        else
          v22 = v11[12];
        sub_10002C8F0((uint64_t)v11, type metadata accessor for State);
        v26 = v33;
      }
      goto LABEL_16;
    }
LABEL_9:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10002C8F0((uint64_t)v15, type metadata accessor for State);
    v26 = v33;
    sub_10002CD84(v2, v33, type metadata accessor for State);
    v22 = 1;
LABEL_16:
    sub_10002C8F0(v26, type metadata accessor for State);
    return v22;
  }
  return 0;
}

uint64_t sub_1003E0014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v40 = a1;
  v3 = type metadata accessor for ContinuousClock.Instant(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for State(0);
  v7 = __chkstk_darwin(v38);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v39 = (uint64_t)&v37 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v37 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v37 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v37 - v21;
  if (qword_1009CE388 != -1)
    swift_once(&qword_1009CE388, sub_1003E09AC);
  v23 = byte_1009E0C60;
  sub_10002CD84(v2, (uint64_t)v22, type metadata accessor for State);
  if ((v23 & 1) != 0)
  {
    sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v20, type metadata accessor for State);
LABEL_6:
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v40, v3);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
    v25 = v2;
    v26 = v39;
    sub_10002CD84(v25, v39, type metadata accessor for State);
LABEL_8:
    v27 = 1;
    goto LABEL_9;
  }
  v37 = v9;
  v24 = v22[9];
  sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
  sub_10002CD84(v2, (uint64_t)v20, type metadata accessor for State);
  if ((v24 & 1) != 0)
    goto LABEL_6;
  v29 = v38;
  v30 = v20[*(int *)(v38 + 84)];
  sub_10002CD84((uint64_t)v20, (uint64_t)v17, type metadata accessor for State);
  if (v30 == 1)
  {
    v31 = v17[*(int *)(v29 + 88)];
    sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v40, v3);
    if ((v31 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    sub_10002C8F0((uint64_t)v17, type metadata accessor for State);
    sub_10002C8F0((uint64_t)v20, type metadata accessor for State);
    sub_10002CD84(v2, (uint64_t)v14, type metadata accessor for State);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v40, v3);
  }
  v32 = &v14[*(int *)(v29 + 72)];
  v33 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  LOBYTE(v32) = dispatch thunk of static Comparable.< infix(_:_:)(v6, v32, v3, v33);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10002C8F0((uint64_t)v14, type metadata accessor for State);
  v34 = v2;
  v26 = v39;
  sub_10002CD84(v34, v39, type metadata accessor for State);
  if ((v32 & 1) != 0)
    goto LABEL_8;
  v35 = *(_BYTE *)(v26 + 11);
  v36 = (uint64_t)v37;
  sub_10002CD84(v26, (uint64_t)v37, type metadata accessor for State);
  if ((v35 & 1) != 0)
    v27 = 1;
  else
    v27 = *(unsigned __int8 *)(v36 + 12);
  sub_10002C8F0(v36, type metadata accessor for State);
LABEL_9:
  sub_10002C8F0(v26, type metadata accessor for State);
  return v27;
}

uint64_t sub_1003E03E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  int v33;
  char *v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a1;
  v2 = type metadata accessor for ContinuousClock.Instant(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v52 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v52 - v10;
  v12 = type metadata accessor for State(0);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v52 - v15;
  v17 = __chkstk_darwin(v14);
  v60 = (uint64_t)&v52 - v18;
  v19 = __chkstk_darwin(v17);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v52 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v52 - v24;
  v26 = __chkstk_darwin(v23);
  v30 = (char *)&v52 - v29;
  if (qword_1009CE388 != -1)
  {
    v53 = v27;
    v54 = v28;
    v57 = v26;
    swift_once(&qword_1009CE388, sub_1003E09AC);
    v27 = v53;
    v28 = v54;
    v26 = v57;
  }
  if ((byte_1009E0C60 & 1) == 0)
  {
    v53 = v27;
    v54 = v28;
    v57 = v26;
    v58 = v6;
    v56 = v16;
    v59 = v1;
    sub_10002CD84(v1, (uint64_t)v30, type metadata accessor for State);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32(v11, v61, v2);
    v33 = v30[2];
    sub_10002CD84((uint64_t)v30, (uint64_t)v25, type metadata accessor for State);
    v55 = v32;
    v32(v9, (uint64_t)v11, v2);
    if (v33 == 1)
    {
      v34 = &v25[*(int *)(v57 + 68)];
      v35 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
      v36 = dispatch thunk of static Comparable.< infix(_:_:)(v9, v34, v2, v35);
    }
    else
    {
      v36 = 1;
    }
    v37 = *(void (**)(char *, uint64_t))(v3 + 8);
    v37(v9, v2);
    sub_10002C8F0((uint64_t)v25, type metadata accessor for State);
    v37(v11, v2);
    sub_10002C8F0((uint64_t)v30, type metadata accessor for State);
    v39 = v58;
    v38 = v59;
    if ((v36 & 1) != 0)
      return 0;
    v40 = *(_BYTE *)(v59 + 3);
    sub_10002CD84(v59, (uint64_t)v22, type metadata accessor for State);
    if ((v40 & 1) != 0)
    {
      sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
      v41 = v60;
      sub_10002CD84(v38, v60, type metadata accessor for State);
      v55(v39, v61, v2);
      v42 = (uint64_t)v56;
LABEL_12:
      v37(v39, v2);
      sub_10002C8F0(v41, type metadata accessor for State);
      sub_10002CD84(v38, v42, type metadata accessor for State);
      v31 = 1;
LABEL_23:
      sub_10002C8F0(v42, type metadata accessor for State);
      return v31;
    }
    v43 = v57;
    v44 = v22[*(int *)(v57 + 84)];
    v45 = v54;
    sub_10002CD84((uint64_t)v22, v54, type metadata accessor for State);
    v42 = (uint64_t)v56;
    if (v44 == 1)
    {
      v46 = *(_BYTE *)(v45 + *(int *)(v43 + 88));
      sub_10002C8F0(v45, type metadata accessor for State);
      sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
      v41 = v60;
      sub_10002CD84(v38, v60, type metadata accessor for State);
      v55(v39, v61, v2);
      if ((v46 & 1) == 0)
        goto LABEL_12;
    }
    else
    {
      sub_10002C8F0(v45, type metadata accessor for State);
      sub_10002C8F0((uint64_t)v22, type metadata accessor for State);
      v41 = v60;
      sub_10002CD84(v38, v60, type metadata accessor for State);
      v55(v39, v61, v2);
    }
    v47 = v41 + *(int *)(v43 + 72);
    v48 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
    LOBYTE(v47) = dispatch thunk of static Comparable.< infix(_:_:)(v39, v47, v2, v48);
    v37(v39, v2);
    sub_10002C8F0(v41, type metadata accessor for State);
    sub_10002CD84(v38, v42, type metadata accessor for State);
    if ((v47 & 1) != 0)
    {
      v31 = 1;
    }
    else
    {
      v49 = *(_BYTE *)(v42 + 11);
      v50 = v53;
      sub_10002CD84(v42, v53, type metadata accessor for State);
      if ((v49 & 1) != 0)
        v31 = 1;
      else
        v31 = *(unsigned __int8 *)(v50 + 12);
      sub_10002C8F0(v50, type metadata accessor for State);
    }
    goto LABEL_23;
  }
  return 1;
}

uint64_t sub_1003E08F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E0938()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E0C48);
  sub_100048F64(v0, (uint64_t)qword_1009E0C48);
  sub_100009B88();
  return static OS_os_log.be_logger(for:)(0x7453656D6F726843, 0xEB00000000657461);
}

void sub_1003E09AC()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  byte_1009E0C60 = v2;
}

uint64_t sub_1003E0A38()
{
  uint64_t result;
  uint64_t v1;

  result = static Duration.seconds(_:)(5.5);
  qword_1009E0C68 = result;
  unk_1009E0C70 = v1;
  return result;
}

uint64_t sub_1003E0A5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int *v4;
  char v5;

  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6]
    && a1[7] == a2[7]
    && a1[8] == a2[8]
    && a1[9] == a2[9]
    && a1[10] == a2[10]
    && a1[11] == a2[11]
    && a1[12] == a2[12]
    && (v4 = (int *)type metadata accessor for State(0),
        (static ContinuousClock.Instant.== infix(_:_:)(&a1[v4[17]], &a2[v4[17]]) & 1) != 0)
    && (static ContinuousClock.Instant.== infix(_:_:)(&a1[v4[18]], &a2[v4[18]]) & 1) != 0
    && (static ContinuousClock.Instant.== infix(_:_:)(&a1[v4[19]], &a2[v4[19]]) & 1) != 0
    && a1[v4[20]] == a2[v4[20]]
    && a1[v4[21]] == a2[v4[21]]
    && a1[v4[22]] == a2[v4[22]])
  {
    v5 = a1[v4[23]] ^ a2[v4[23]] ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1003E0C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for ContinuousClock.Instant(0);
  v5 = sub_100008DB0(&qword_1009E0E88, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  return dispatch thunk of static Comparable.< infix(_:_:)(v3, a1, v4, v5) & 1;
}

uint64_t sub_1003E0C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0E58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E0CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E0D0C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E0D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for ContinuousClock.Instant(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1003E0DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for ContinuousClock.Instant(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1009E0E74);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000AE34;
  return sub_1003DE0B8(a1, v6, v7, v8, v9);
}

void sub_1003E0E64()
{
  sub_10004CFD4((uint64_t *)&unk_1009D3170);
  Task.cancel()();
}

uint64_t sub_1003E0E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1003E0EE0(char *a1)
{
  uint64_t v1;

  return sub_1003DCCA4(a1, v1);
}

void sub_1003E0EE8()
{
  qword_100A1E820 = 0x404A000000000000;
}

void sub_1003E0EF8()
{
  qword_100A1E828 = 0x4024000000000000;
}

uint64_t sub_1003E0F08()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E0E90);
  sub_100048F64(v0, (uint64_t)qword_1009E0E90);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000017, 0x80000001007C73D0);
}

uint64_t property wrapper backing initializer of ChromeStyle.colorScheme(uint64_t a1)
{
  return sub_1003E1170(a1, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme);
}

uint64_t sub_1003E0F94@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_100721580, (uint64_t)&unk_1007215A8, a1);
}

uint64_t property wrapper backing initializer of ChromeStyle.verticalSizeClass(uint64_t a1)
{
  return sub_1003E1170(a1, (uint64_t (*)(_QWORD))&type metadata accessor for UserInterfaceSizeClass);
}

uint64_t sub_1003E0FB4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_1007215C8, (uint64_t)&unk_1007215F0, a1);
}

uint64_t property wrapper backing initializer of ChromeStyle.statusBarHeight(double a1)
{
  double v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for CGFloat);
}

double sub_1003E0FF4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100721780);
  v2 = swift_getKeyPath(&unk_1007217A8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1003E1064()
{
  return sub_1001EEA54((uint64_t)&unk_1007216C8, (uint64_t)&unk_1007216F0);
}

uint64_t property wrapper backing initializer of ChromeStyle.pageTextColor(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Color);
}

uint64_t sub_1003E10A4()
{
  return sub_1001EEA54((uint64_t)&unk_100721738, (uint64_t)&unk_100721760);
}

uint64_t sub_1003E10B8()
{
  return sub_1001EEA54((uint64_t)&unk_1007217C8, (uint64_t)&unk_1007217F0);
}

uint64_t sub_1003E10CC()
{
  return sub_1001EEA54((uint64_t)&unk_100721810, (uint64_t)&unk_100721838);
}

uint64_t sub_1003E10E0()
{
  return sub_1001EEA54((uint64_t)&unk_100721858, (uint64_t)&unk_100721880);
}

uint64_t sub_1003E10F4()
{
  return sub_1001EEA54((uint64_t)&unk_1007218A0, (uint64_t)&unk_1007218C8);
}

uint64_t property wrapper backing initializer of ChromeStyle.buttonStyle(uint64_t a1)
{
  return sub_1003E1170(a1, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ButtonStyle);
}

uint64_t sub_1003E1114@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_1007218E8, (uint64_t)&unk_100721910, a1);
}

uint64_t sub_1003E1128@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_100721930, (uint64_t)&unk_100721958, a1);
}

uint64_t sub_1003E113C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_100721978, (uint64_t)&unk_1007219A0, a1);
}

uint64_t property wrapper backing initializer of ChromeStyle.downloadProgressStyle(uint64_t a1)
{
  return sub_1003E1170(a1, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ProgressStyle);
}

uint64_t sub_1003E115C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_1007219C0, (uint64_t)&unk_1007219E8, a1);
}

uint64_t sub_1003E1170(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = a2(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v8 - v5, a1, v3);
  Published.init(initialValue:)(v6, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t sub_1003E120C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1003E1220((uint64_t)&unk_100721A08, (uint64_t)&unk_100721A30, a1);
}

uint64_t sub_1003E1220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  return swift_release(v7);
}

uint64_t sub_1003E127C()
{
  return sub_1001EF2E8((uint64_t)&unk_100721500, (uint64_t)&unk_100721528);
}

uint64_t sub_1003E1290()
{
  return sub_1001EF2E8((uint64_t)&unk_100721A98, (uint64_t)&unk_100721AC0);
}

uint64_t sub_1003E12A4()
{
  return sub_1001EF2E8((uint64_t)&unk_100721A50, (uint64_t)&unk_100721A78);
}

char *ChromeStyle.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, _QWORD, uint64_t);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  objc_class *v98;
  id v99;
  id v100;
  void *v101;
  uint64_t KeyPath;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  objc_super v145;
  uint64_t v146;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v2);
  v144 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v142 = *(_QWORD *)(v4 - 8);
  v143 = v4;
  __chkstk_darwin(v4);
  v141 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v139 = *(_QWORD *)(v6 - 8);
  v140 = v6;
  __chkstk_darwin(v6);
  v138 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E0EA8);
  v136 = *(_QWORD *)(v8 - 8);
  v137 = v8;
  v9 = __chkstk_darwin(v8);
  v135 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookThemeEntity.ProgressStyle(0, v9);
  v133 = *(_QWORD *)(v11 - 8);
  v134 = v11;
  __chkstk_darwin(v11);
  v132 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v131 = (char *)&v111 - v14;
  v15 = sub_10004CFD4(&qword_1009E0EB0);
  v129 = *(_QWORD *)(v15 - 8);
  v130 = v15;
  __chkstk_darwin(v15);
  v128 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for BookThemeEntity.ButtonStyle(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v124 = (char *)&v111 - v19;
  v123 = sub_10004CFD4(&qword_1009E0EB8);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_10004CFD4(&qword_1009E0EC0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10004CFD4(&qword_1009E0EC8);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for UserInterfaceSizeClass(0);
  v114 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v115 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v111 - v27;
  v113 = sub_10004CFD4(&qword_1009E0ED0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v30 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ColorScheme(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v111 - v37;
  v39 = &v1[OBJC_IVAR___REChromeStyle__colorScheme];
  (*(void (**)(char *, _QWORD, uint64_t, double))(v32 + 104))((char *)&v111 - v37, enum case for ColorScheme.light(_:), v31, v36);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v38, v31);
  v40 = v1;
  Published.init(initialValue:)(v34, v31);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v38, v31);
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v39, v30, v113);
  v41 = &v40[OBJC_IVAR___REChromeStyle__verticalSizeClass];
  v42 = v114;
  (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v28, enum case for UserInterfaceSizeClass.regular(_:), v24);
  v43 = v42;
  v44 = v115;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v115, v28, v24);
  v45 = v116;
  Published.init(initialValue:)(v44, v24);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v24);
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v41, v45, v118);
  v46 = &v40[OBJC_IVAR___REChromeStyle__statusBarHeight];
  v146 = 0x4046000000000000;
  v47 = v119;
  Published.init(initialValue:)(&v146, &type metadata for CGFloat);
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v46, v47, v121);
  v48 = &v40[OBJC_IVAR___REChromeStyle__pageBackgroundColor];
  v146 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  Published.init(initialValue:)(&v146, &type metadata for Color);
  v49 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
  v50 = v123;
  v49(v48, v21, v123);
  v51 = &v40[OBJC_IVAR___REChromeStyle__pageTextColor];
  v146 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  Published.init(initialValue:)(&v146, &type metadata for Color);
  v49(v51, v21, v50);
  v52 = &v40[OBJC_IVAR___REChromeStyle__themeSeparatorColor];
  v146 = _s5Books11ChromeStyleC25_secondaryButtonFillColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  Published.init(initialValue:)(&v146, &type metadata for Color);
  v49(v52, v21, v50);
  v53 = &v40[OBJC_IVAR___REChromeStyle__themeSecondaryLabel];
  v146 = _s5Books11ChromeStyleC25_secondaryButtonFillColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  Published.init(initialValue:)(&v146, &type metadata for Color);
  v49(v53, v21, v50);
  v54 = &v40[OBJC_IVAR___REChromeStyle__secondaryButtonLabelColor];
  v146 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  Published.init(initialValue:)(&v146, &type metadata for Color);
  v49(v54, v21, v50);
  v55 = &v40[OBJC_IVAR___REChromeStyle__secondaryButtonFillColor];
  v146 = _s5Books11ChromeStyleC25_secondaryButtonFillColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  Published.init(initialValue:)(&v146, &type metadata for Color);
  v49(v55, v21, v50);
  v56 = &v40[OBJC_IVAR___REChromeStyle__buttonStyle];
  v57 = v124;
  _s5Books11ChromeStyleC07_buttonC033_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy8BookEPUB0O11ThemeEntityV06ButtonC0VGvpfi_0();
  v58 = v126;
  v59 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
  v60 = v125;
  v61 = v127;
  v59(v125, v57, v127);
  v62 = v128;
  Published.init(initialValue:)(v60, v61);
  v63 = *(void (**)(char *, uint64_t))(v58 + 8);
  v63(v57, v61);
  v64 = v130;
  v65 = *(void (**)(char *, char *, uint64_t))(v129 + 32);
  v65(v56, v62, v130);
  v66 = &v40[OBJC_IVAR___REChromeStyle__buttonDisabledStyle];
  _s5Books11ChromeStyleC07_buttonC033_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy8BookEPUB0O11ThemeEntityV06ButtonC0VGvpfi_0();
  v59(v60, v57, v61);
  Published.init(initialValue:)(v60, v61);
  v63(v57, v61);
  v65(v66, v62, v64);
  v67 = &v40[OBJC_IVAR___REChromeStyle__secondaryButtonStyle];
  _s5Books11ChromeStyleC07_buttonC033_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy8BookEPUB0O11ThemeEntityV06ButtonC0VGvpfi_0();
  v59(v60, v57, v61);
  Published.init(initialValue:)(v60, v61);
  v63(v57, v61);
  v65(v67, v62, v64);
  v68 = &v40[OBJC_IVAR___REChromeStyle__downloadProgressStyle];
  v69 = v131;
  _s5Books11ChromeStyleC017_downloadProgressC033_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy8BookEPUB0P11ThemeEntityV0eC0VGvpfi_0();
  v71 = v132;
  v70 = v133;
  v72 = *(void (**)(char *, char *, uint64_t))(v133 + 16);
  v73 = v134;
  v72(v132, v69, v134);
  v74 = v135;
  Published.init(initialValue:)(v71, v73);
  v75 = *(void (**)(char *, uint64_t))(v70 + 8);
  v75(v69, v73);
  v76 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
  v77 = v74;
  v78 = v74;
  v79 = v137;
  v76(v68, v77, v137);
  v80 = &v40[OBJC_IVAR___REChromeStyle__downloadSpinnerStyle];
  _s5Books11ChromeStyleC017_downloadProgressC033_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy8BookEPUB0P11ThemeEntityV0eC0VGvpfi_0();
  v72(v71, v69, v73);
  Published.init(initialValue:)(v71, v73);
  v75(v69, v73);
  v76(v80, v78, v79);
  v81 = &v40[OBJC_IVAR___REChromeStyle__isLeftMenu];
  LOBYTE(v146) = 0;
  v82 = v138;
  Published.init(initialValue:)(&v146, &type metadata for Bool);
  v83 = v140;
  v84 = *(void (**)(char *, char *, uint64_t))(v139 + 32);
  v84(v81, v82, v140);
  v85 = &v40[OBJC_IVAR___REChromeStyle__isDarkTheme];
  LOBYTE(v146) = 0;
  Published.init(initialValue:)(&v146, &type metadata for Bool);
  v84(v85, v82, v83);
  v86 = &v40[OBJC_IVAR___REChromeStyle__themeHasDarkBackground];
  LOBYTE(v146) = 0;
  Published.init(initialValue:)(&v146, &type metadata for Bool);
  v84(v86, v82, v83);
  *(_QWORD *)&v40[OBJC_IVAR___REChromeStyle_menuPositionObserver] = 0;
  v140 = OBJC_IVAR___REChromeStyle_controlFont;
  v87 = v141;
  v88 = v142;
  v89 = *(void (**)(char *, _QWORD, uint64_t))(v142 + 104);
  v90 = v143;
  v89(v141, enum case for Font.TextStyle.body(_:), v143);
  v91 = type metadata accessor for Font.Design(0);
  v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56);
  v93 = (uint64_t)v144;
  v92(v144, 1, 1, v91);
  v94 = static Font.system(_:design:weight:)(v87, v93, 0, 1);
  sub_100010960(v93, &qword_1009CEDD0);
  v95 = *(void (**)(char *, uint64_t))(v88 + 8);
  v95(v87, v90);
  *(_QWORD *)&v40[v140] = v94;
  v96 = OBJC_IVAR___REChromeStyle_controlSubtitleFont;
  v89(v87, enum case for Font.TextStyle.caption(_:), v90);
  v92((char *)v93, 1, 1, v91);
  v97 = static Font.system(_:design:weight:)(v87, v93, 0, 1);
  sub_100010960(v93, &qword_1009CEDD0);
  v95(v87, v90);
  *(_QWORD *)&v40[v96] = v97;

  v98 = (objc_class *)type metadata accessor for ChromeStyle(0);
  v145.receiver = v40;
  v145.super_class = v98;
  v99 = objc_msgSendSuper2(&v145, "init");
  sub_100009E04(0, (unint64_t *)&qword_1009D9428, NSUserDefaults_ptr);
  v100 = v99;
  v101 = (void *)((uint64_t (*)(void))static NSUserDefaults.booksAppGroup.getter)();
  LOBYTE(v89) = objc_msgSend(v101, "BKMenuOnLeft");

  KeyPath = swift_getKeyPath(&unk_100721500);
  v103 = swift_getKeyPath(&unk_100721528);
  LOBYTE(v146) = (_BYTE)v89;
  v104 = (char *)v100;
  v105 = static Published.subscript.setter(&v146, v104, KeyPath, v103);
  v146 = static NSUserDefaults.booksAppGroup.getter(v105);
  v106 = swift_getKeyPath(&unk_100721558);
  v107 = swift_allocObject(&unk_100903238, 24, 7);
  swift_unknownObjectWeakInit(v107 + 16);
  v108 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v106, 1, sub_1003E4874, v107, &protocol witness table for NSObject);
  swift_release(v106);
  swift_release(v107);

  v109 = *(void **)&v104[OBJC_IVAR___REChromeStyle_menuPositionObserver];
  *(_QWORD *)&v104[OBJC_IVAR___REChromeStyle_menuPositionObserver] = v108;

  return v104;
}

uint64_t type metadata accessor for ChromeStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E0F90;
  if (!qword_1009E0F90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChromeStyle);
  return result;
}

void sub_1003E1EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v10[3];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, (char *)v10 + 1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10004CFD4(&qword_1009E0FD8);
    NSKeyValueObservedChange.newValue.getter(v10, v6);
    if (LOBYTE(v10[0]) == 2)
    {

    }
    else
    {
      v7 = v10[0] & 1;
      KeyPath = swift_getKeyPath(&unk_100721500);
      v9 = swift_getKeyPath(&unk_100721528);
      LOBYTE(v10[0]) = v7;
      static Published.subscript.setter(v10, v5, KeyPath, v9);
    }
  }
}

uint64_t sub_1003E1F90(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  unsigned int *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  id v105;
  uint64_t (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v128[2];
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD v143[4];

  v133 = a1;
  v4 = type metadata accessor for BookThemeEntity.ProgressStyle(0, a3);
  v140 = *(_QWORD *)(v4 - 8);
  v141 = v4;
  __chkstk_darwin(v4);
  v139 = (char *)v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v138 = (char *)v128 - v7;
  v8 = type metadata accessor for BookThemeEntity.ButtonStyle(0);
  v135 = *(_QWORD *)(v8 - 8);
  v136 = v8;
  __chkstk_darwin(v8);
  v137 = (char *)v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v134 = (char *)v128 - v11;
  v12 = type metadata accessor for UserInterfaceSizeClass(0);
  v130 = *(_QWORD *)(v12 - 8);
  v131 = v12;
  __chkstk_darwin(v12);
  v132 = (char *)v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v129 = (char *)v128 - v15;
  v16 = type metadata accessor for ColorScheme(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v128 - v21;
  KeyPath = swift_getKeyPath(&unk_100721678);
  v143[0] = a2;
  v128[0] = sub_1003E4AD4();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v143, KeyPath, v128[0]);
  swift_release(KeyPath);
  v24 = a2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  v25 = swift_beginAccess(a2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v143, 0, 0);
  v26 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v26(v22, v24, v16, v25);
  v27 = swift_getKeyPath(&unk_100721580);
  v28 = swift_getKeyPath(&unk_1007215A8);
  ((void (*)(char *, char *, uint64_t))v26)(v19, v22, v16);
  v29 = (id)v128[1];
  static Published.subscript.setter(v19, v29, v27, v28);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  v30 = swift_getKeyPath(&unk_1007216A0);
  v142 = a2;
  v31 = v128[0];
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v142, v30, v128[0]);
  swift_release(v30);
  v32 = Color.init(_:)(*(id *)(a2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor));
  v33 = swift_getKeyPath(&unk_1007216C8);
  v34 = swift_getKeyPath(&unk_1007216F0);
  v142 = v32;
  v35 = v29;
  static Published.subscript.setter(&v142, v35, v33, v34);
  v36 = swift_getKeyPath(&unk_100721710);
  v142 = a2;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v142, v36, v31);
  swift_release(v36);
  v37 = Color.init(_:)(*(id *)(a2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor));
  v38 = swift_getKeyPath(&unk_100721738);
  v39 = swift_getKeyPath(&unk_100721760);
  v142 = v37;
  v40 = v35;
  static Published.subscript.setter(&v142, v40, v38, v39);
  v41 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v42 = objc_msgSend(v41, "verticalSizeClass");

  v43 = (unsigned int *)&enum case for UserInterfaceSizeClass.regular(_:);
  v45 = v129;
  v44 = v130;
  if (v42 != (id)2)
    v43 = (unsigned int *)&enum case for UserInterfaceSizeClass.compact(_:);
  v46 = v131;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v129, *v43, v131);
  v47 = swift_getKeyPath(&unk_1007215C8);
  v48 = swift_getKeyPath(&unk_1007215F0);
  v49 = v132;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v132, v45, v46);
  v50 = v40;
  static Published.subscript.setter(v49, v50, v47, v48);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  v51 = swift_getKeyPath(&unk_100721780);
  v52 = swift_getKeyPath(&unk_1007217A8);
  static Published.subscript.getter(&v142, v50, v51);
  swift_release(v51);
  swift_release(v52);
  v53 = v142;
  v54 = swift_getKeyPath(&unk_100721780);
  v55 = swift_getKeyPath(&unk_1007217A8);
  v142 = v53;
  v56 = v50;
  v57 = static Published.subscript.setter(&v142, v56, v54, v55);
  v58 = BookThemeEntity.themeSeparatorColor.getter(v57);
  v59 = swift_getKeyPath(&unk_1007217C8);
  v60 = swift_getKeyPath(&unk_1007217F0);
  v142 = v58;
  v61 = v56;
  v62 = static Published.subscript.setter(&v142, v61, v59, v60);
  v63 = BookThemeEntity.secondaryLabel.getter(v62);
  v64 = swift_getKeyPath(&unk_100721810);
  v65 = swift_getKeyPath(&unk_100721838);
  v142 = v63;
  v66 = v61;
  v67 = static Published.subscript.setter(&v142, v66, v64, v65);
  v68 = v134;
  v69.n128_f64[0] = BookThemeEntity.secondaryButtonStyle.getter(v67);
  v70 = BookThemeEntity.ButtonStyle.label.getter(v69);
  v72 = v135;
  v71 = v136;
  v73 = *(void (**)(char *, uint64_t))(v135 + 8);
  v73(v68, v136);
  v74 = swift_getKeyPath(&unk_100721858);
  v75 = swift_getKeyPath(&unk_100721880);
  v142 = v70;
  v76 = v66;
  v77 = static Published.subscript.setter(&v142, v76, v74, v75);
  v78.n128_f64[0] = BookThemeEntity.secondaryButtonStyle.getter(v77);
  v79 = BookThemeEntity.ButtonStyle.fill.getter(v78);
  v73(v68, v71);
  v80 = swift_getKeyPath(&unk_1007218A0);
  v81 = swift_getKeyPath(&unk_1007218C8);
  v142 = v79;
  v82 = v76;
  v83 = static Published.subscript.setter(&v142, v82, v80, v81);
  BookThemeEntity.buttonStyle.getter(v83);
  v84 = swift_getKeyPath(&unk_1007218E8);
  v85 = swift_getKeyPath(&unk_100721910);
  v86 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  v87 = v137;
  v86(v137, v68, v71);
  v88 = v82;
  static Published.subscript.setter(v87, v88, v84, v85);
  v89 = ((uint64_t (*)(char *, uint64_t))v73)(v68, v71);
  BookThemeEntity.buttonDisabledStyle.getter(v89);
  v90 = swift_getKeyPath(&unk_100721930);
  v91 = swift_getKeyPath(&unk_100721958);
  v86(v87, v68, v71);
  v92 = v88;
  static Published.subscript.setter(v87, v92, v90, v91);
  v93 = ((uint64_t (*)(char *, uint64_t))v73)(v68, v71);
  BookThemeEntity.secondaryButtonStyle.getter(v93);
  v94 = swift_getKeyPath(&unk_100721978);
  v95 = swift_getKeyPath(&unk_1007219A0);
  v86(v87, v68, v71);
  v96 = v92;
  static Published.subscript.setter(v87, v96, v94, v95);
  v97 = ((uint64_t (*)(char *, uint64_t))v73)(v68, v71);
  v98 = v138;
  BookThemeEntity.downloadProgressStyle.getter(v97);
  v99 = swift_getKeyPath(&unk_1007219C0);
  v100 = swift_getKeyPath(&unk_1007219E8);
  v101 = v139;
  v102 = v140;
  v103 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  v104 = v141;
  v103(v139, v98, v141);
  v105 = v96;
  static Published.subscript.setter(v101, v105, v99, v100);
  v106 = *(uint64_t (**)(char *, uint64_t))(v102 + 8);
  v107 = v106(v98, v104);
  BookThemeEntity.downloadSpinnerStyle.getter(v107);
  v108 = swift_getKeyPath(&unk_100721A08);
  v109 = swift_getKeyPath(&unk_100721A30);
  v103(v101, v98, v104);
  v110 = v105;
  static Published.subscript.setter(v101, v110, v108, v109);
  v111.n128_f64[0] = ((double (*)(char *, uint64_t))v106)(v98, v104);
  LOBYTE(v108) = BookThemeEntity.hasDarkBackground.getter(v111);
  v112 = swift_getKeyPath(&unk_100721A50);
  v113 = swift_getKeyPath(&unk_100721A78);
  LOBYTE(v142) = v108 & 1;
  v114 = v110;
  v115 = static Published.subscript.setter(&v142, v114, v112, v113);
  v116 = BookThemeEntity.variant.getter(v115);
  v117 = BookThemeVariant.rawValue.getter(v116 & 1);
  v119 = v118;
  v120 = 1;
  v122 = BookThemeVariant.rawValue.getter(1);
  v123 = v121;
  if (v117 != v122 || (v124 = v119, v119 != v121))
  {
    v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v117, v119, v122, v121, 0);
    v124 = v123;
  }
  swift_bridgeObjectRelease(v119);
  swift_bridgeObjectRelease(v124);
  v125 = swift_getKeyPath(&unk_100721A98);
  v126 = swift_getKeyPath(&unk_100721AC0);
  LOBYTE(v142) = v120 & 1;
  return static Published.subscript.setter(&v142, v114, v125, v126);
}

uint64_t ChromeStyle.accentColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  char v11;
  void (*v12)(char *, uint64_t);
  id v14;
  uint64_t v15;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  v10 = swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for ColorScheme.dark(_:), v1, v10);
  v11 = static ColorScheme.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v7, v1);
  if ((v11 & 1) != 0)
    return _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
  return Color.init(_:)(v14);
}

BOOL ChromeStyle.isRightMenu.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100721500);
  v2 = swift_getKeyPath(&unk_100721528);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return (v4 & 1) == 0;
}

double ChromeStyle.menuBottomInset.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  double result;
  uint64_t v13;

  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v13 - v6;
  KeyPath = swift_getKeyPath(&unk_1007215C8);
  v9 = swift_getKeyPath(&unk_1007215F0);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for UserInterfaceSizeClass.compact(_:), v1);
  v10 = static UserInterfaceSizeClass.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  result = 20.0;
  if ((v10 & 1) != 0)
    return 17.0;
  return result;
}

uint64_t ChromeStyle.floatingButtonTapMargin(targetSize:)()
{
  uint64_t result;

  if (qword_1009CE628 != -1)
    return swift_once(&qword_1009CE628, sub_100479520);
  return result;
}

uint64_t ChromeStyle.contentFloatingTextColor.getter()
{
  return sub_1003E33E4((uint64_t (*)(uint64_t))&static Color.black.getter, (uint64_t (*)(uint64_t))&static Color.white.getter);
}

uint64_t ChromeStyle.secondaryLabelColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath);
  swift_release(KeyPath);
  v10 = swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for ColorScheme.light(_:), v1, v10);
  v11 = static ColorScheme.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v7, v1);
  if ((v11 & 1) != 0)
    v13 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  else
    v13 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v15 = v13;
  v14.n128_u64[0] = 0x3FE3333333333333;
  v16 = Color.opacity(_:)(v13, v14);
  swift_release(v15);
  return v16;
}

uint64_t ChromeStyle.inverseLabelColor.getter()
{
  return sub_1003E33E4((uint64_t (*)(uint64_t))&static Color.white.getter, (uint64_t (*)(uint64_t))&static Color.black.getter);
}

uint64_t ChromeStyle.labelBlendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  unsigned int *v15;
  uint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v17 - v9;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v12 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v10, v2, KeyPath, v12);
  swift_release(KeyPath);
  swift_release(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for ColorScheme.light(_:), v4);
  LOBYTE(v2) = static ColorScheme.== infix(_:_:)(v10, v8);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  v14 = type metadata accessor for BlendMode(0);
  v15 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  if ((v2 & 1) == 0)
    v15 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a1, *v15, v14);
}

uint64_t ChromeStyle.primaryBackgroundColor.getter()
{
  return sub_1003E3A08((SEL *)&selRef_systemBackgroundColor);
}

uint64_t ChromeStyle.controlBackgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 0xFFFFFFFFLL;
  else
    v12 = 2543163391;
  return Color.init(rgbaHex:)(v12);
}

uint64_t ChromeStyle.disabledMaskColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 1010582527;
  else
    v12 = 3958109695;
  return Color.init(rgbaHex:)(v12);
}

uint64_t ChromeStyle.controlContrastForegroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 2711725567;
  else
    v12 = 4025480447;
  return Color.init(rgbaHex:)(v12);
}

uint64_t ChromeStyle.floatingButtonColor.getter()
{
  return Color.init(rgbaHex:)(4076009215);
}

uint64_t sub_1003E33E4(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t KeyPath;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v5 = v2;
  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v18 - v11);
  KeyPath = swift_getKeyPath(&unk_100721580);
  v14 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v12, v5, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for ColorScheme.light(_:), v6);
  LOBYTE(v5) = static ColorScheme.== infix(_:_:)(v12, v10);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v16 = ((uint64_t (*)(_QWORD *, uint64_t))v15)(v12, v6);
  if ((v5 & 1) != 0)
    return a1(v16);
  else
    return a2(v16);
}

uint64_t ChromeStyle.contentFloatingSecondaryTextColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 2358022399;
  else
    v12 = 2711725567;
  return Color.init(rgbaHex:)(v12);
}

uint64_t ChromeStyle.controlContrastBackgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 1532714495;
  else
    v12 = 4025480447;
  return Color.init(rgbaHex:)(v12);
}

uint64_t ChromeStyle.activeControlBackgroundColor.getter()
{
  return Color.init(rgbaHex:)(1667355647);
}

uint64_t ChromeStyle.orientationLockHintForegroundColor(locked:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v3 = type metadata accessor for ColorScheme(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  if ((a1 & 1) != 0)
    return _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  KeyPath = swift_getKeyPath(&unk_100721580);
  v11 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v9, v1, KeyPath);
  swift_release(KeyPath);
  v12 = swift_release(v11);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for ColorScheme.light(_:), v3, v12);
  v13 = static ColorScheme.== infix(_:_:)(v9, v6);
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v3);
  v14(v9, v3);
  if ((v13 & 1) == 0)
    return _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  else
    return _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
}

uint64_t ChromeStyle.orientationLockHintBackgroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 1212697343;
  else
    v12 = 1667458815;
  return Color.init(rgbaHex:)(v12);
}

uint64_t ChromeStyle.secondaryBackgroundColor.getter()
{
  return sub_1003E3A08((SEL *)&selRef_secondarySystemBackgroundColor);
}

uint64_t sub_1003E3A08(SEL *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(UIColor), *a1);
  return Color.init(_:)(v1);
}

uint64_t ChromeStyle.materialColor(primary:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v20;

  v3 = type metadata accessor for ColorScheme(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v20 - v9);
  if ((a1 & 1) == 0)
    return static Color.clear.getter(v8);
  KeyPath = swift_getKeyPath(&unk_100721580);
  v12 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v10, v1, KeyPath);
  swift_release(KeyPath);
  v13 = swift_release(v12);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for ColorScheme.light(_:), v3, v13);
  v14 = static ColorScheme.== infix(_:_:)(v10, v6);
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v6, v3);
  v8 = ((uint64_t (*)(_QWORD *, uint64_t))v15)(v10, v3);
  if ((v14 & 1) == 0)
    return static Color.clear.getter(v8);
  v16 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v17.n128_u64[0] = 0x3FE3333333333333;
  v18 = Color.opacity(_:)(v16, v17);
  swift_release(v16);
  return v18;
}

uint64_t sub_1003E3B94(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009E0FD0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ColorScheme(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100721580);
  v12 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v10, v2, KeyPath, v12);
  swift_release(KeyPath);
  v13 = swift_release(v12);
  v14 = *(int *)(v4 + 48);
  (*(void (**)(char *, _QWORD *, uint64_t, __n128))(v8 + 32))(v6, v10, v7, v13);
  v6[v14] = a1;
  v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
  if (v15 == enum case for ColorScheme.light(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if ((a1 & 1) != 0)
      return 12;
    else
      return 17;
  }
  else if (v15 == enum case for ColorScheme.dark(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if ((a1 & 1) != 0)
      return 17;
    else
      return 12;
  }
  else
  {
    if (qword_1009CE3A8 != -1)
      swift_once(&qword_1009CE3A8, sub_1003E0F08);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_1009E0E90);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "unknown material environment", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    sub_100010960((uint64_t)v6, &qword_1009E0FD0);
    return 7;
  }
}

uint64_t ChromeStyle.formElementColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath);
  swift_release(KeyPath);
  v10 = swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for ColorScheme.light(_:), v1, v10);
  v11 = static ColorScheme.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v7, v1);
  if ((v11 & 1) != 0)
    return _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  else
    return Color.init(rgbaHex:)(842150655);
}

uint64_t ChromeStyle.controlFont.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___REChromeStyle_controlFont));
}

uint64_t ChromeStyle.controlSubtitleFont.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___REChromeStyle_controlSubtitleFont));
}

uint64_t ChromeStyle.checkmarkIconColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  KeyPath = swift_getKeyPath(&unk_100721580);
  v9 = swift_getKeyPath(&unk_1007215A8);
  static Published.subscript.getter(v7, v0, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v10 = static ColorScheme.== infix(_:_:)(v7, v5);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  if ((v10 & 1) != 0)
    v12 = 10345727;
  else
    v12 = 779925759;
  return Color.init(rgbaHex:)(v12);
}

id ChromeStyle.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChromeStyle(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003E42F8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ChromeStyle(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003E4334@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100721500, (uint64_t)&unk_100721528, a2);
}

uint64_t sub_1003E4348@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100721500, (uint64_t)&unk_100721528, a2);
}

uint64_t sub_1003E436C(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100721500, (uint64_t)&unk_100721528);
}

uint64_t sub_1003E4380(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100721500, (uint64_t)&unk_100721528);
}

const char *sub_1003E43A4()
{
  return "BKMenuOnLeft";
}

id sub_1003E43B0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKMenuOnLeft");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1003E43E0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKMenuOnLeft:", *a1);
}

uint64_t sub_1003E43F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721580, (uint64_t)&unk_1007215A8, a2);
}

uint64_t sub_1003E4408(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t)&unk_100721580, (uint64_t)&unk_1007215A8);
}

double sub_1003E4424@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100721780);
  v5 = swift_getKeyPath(&unk_1007217A8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1003E44A0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100721780);
  v5 = swift_getKeyPath(&unk_1007217A8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1003E4514@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100721738, (uint64_t)&unk_100721760, a2);
}

uint64_t sub_1003E4528(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_100721738, (uint64_t)&unk_100721760);
}

uint64_t sub_1003E453C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100721810, (uint64_t)&unk_100721838, a2);
}

uint64_t sub_1003E4550(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_100721810, (uint64_t)&unk_100721838);
}

uint64_t sub_1003E4564@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100721858, (uint64_t)&unk_100721880, a2);
}

uint64_t sub_1003E4578(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_100721858, (uint64_t)&unk_100721880);
}

uint64_t sub_1003E458C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_1007218A0, (uint64_t)&unk_1007218C8, a2);
}

uint64_t sub_1003E45A0(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_1007218A0, (uint64_t)&unk_1007218C8);
}

uint64_t sub_1003E45B4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v7);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1003E4624@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_1007218E8, (uint64_t)&unk_100721910, a2);
}

uint64_t sub_1003E4638(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ButtonStyle, (uint64_t)&unk_1007218E8, (uint64_t)&unk_100721910);
}

uint64_t sub_1003E4654@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721930, (uint64_t)&unk_100721958, a2);
}

uint64_t sub_1003E4668(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ButtonStyle, (uint64_t)&unk_100721930, (uint64_t)&unk_100721958);
}

uint64_t sub_1003E4684@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_1007219C0, (uint64_t)&unk_1007219E8, a2);
}

uint64_t sub_1003E4698(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ProgressStyle, (uint64_t)&unk_1007219C0, (uint64_t)&unk_1007219E8);
}

uint64_t sub_1003E46B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721A08, (uint64_t)&unk_100721A30, a2);
}

uint64_t sub_1003E46C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(a4, v6, KeyPath, v8);
  swift_release(KeyPath);
  return swift_release(v8);
}

uint64_t sub_1003E472C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ProgressStyle, (uint64_t)&unk_100721A08, (uint64_t)&unk_100721A30);
}

uint64_t sub_1003E4748(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v23;

  v11 = a5(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v23 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v23 - v16, a1, v11);
  v19 = *a2;
  KeyPath = swift_getKeyPath(a6);
  v21 = swift_getKeyPath(a7);
  v18(v15, (uint64_t)v17, v11);
  static Published.subscript.setter(v15, v19, KeyPath, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_1003E4850()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E4874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E1EBC(a1, a2, v2);
}

uint64_t sub_1003E487C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721580, (uint64_t)&unk_1007215A8, a2);
}

uint64_t sub_1003E48A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t)&unk_100721580, (uint64_t)&unk_1007215A8);
}

uint64_t sub_1003E48CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_1007215C8, (uint64_t)&unk_1007215F0, a2);
}

uint64_t sub_1003E48F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&unk_1007215C8, (uint64_t)&unk_1007215F0);
}

uint64_t sub_1003E491C()
{
  return type metadata accessor for ChromeStyle(0);
}

void sub_1003E4924(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  char *v32;
  char *v33;

  sub_1003D2C38(319, &qword_1009E0FA0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v16[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003D2C38(319, &qword_1009E0FA8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
    if (v5 <= 0x3F)
    {
      v16[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001F1000(319, &qword_1009E0FB0, (uint64_t)&type metadata for CGFloat);
      if (v7 <= 0x3F)
      {
        v16[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001F1000(319, &qword_1009E0FB8, (uint64_t)&type metadata for Color);
        if (v9 <= 0x3F)
        {
          v17 = *(_QWORD *)(v8 - 8) + 64;
          v18 = v17;
          v19 = v17;
          v20 = v17;
          v21 = v17;
          v22 = v17;
          sub_1003D2C38(319, &qword_1009E0FC0, (uint64_t (*)(uint64_t))&type metadata accessor for BookThemeEntity.ButtonStyle);
          if (v11 <= 0x3F)
          {
            v23 = *(_QWORD *)(v10 - 8) + 64;
            v24 = v23;
            v25 = v23;
            sub_1003D2C38(319, &qword_1009E0FC8, (uint64_t (*)(uint64_t))&type metadata accessor for BookThemeEntity.ProgressStyle);
            if (v13 <= 0x3F)
            {
              v26 = *(_QWORD *)(v12 - 8) + 64;
              v27 = v26;
              sub_1001F1000(319, (unint64_t *)&qword_1009D1850, (uint64_t)&type metadata for Bool);
              if (v15 <= 0x3F)
              {
                v28 = *(_QWORD *)(v14 - 8) + 64;
                v29 = v28;
                v30 = v28;
                v31 = "\b";
                v32 = (char *)&value witness table for Builtin.NativeObject + 64;
                v33 = (char *)&value witness table for Builtin.NativeObject + 64;
                swift_updateClassMetadata2(a1, 256, 20, v16, a1 + 80);
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1003E4AD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E4C90;
  if (!qword_1009E4C90)
  {
    v1 = type metadata accessor for BookReaderViewModel(255);
    result = swift_getWitnessTable(&unk_10072A198, v1);
    atomic_store(result, (unint64_t *)&qword_1009E4C90);
  }
  return result;
}

uint64_t sub_1003E4B34@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100721738, (uint64_t)&unk_100721760, a2);
}

uint64_t sub_1003E4B58(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_100721738, (uint64_t)&unk_100721760);
}

uint64_t sub_1003E4B84@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_1007217C8, (uint64_t)&unk_1007217F0, a2);
}

uint64_t sub_1003E4BA8(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_1007217C8, (uint64_t)&unk_1007217F0);
}

uint64_t sub_1003E4BCC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100721810, (uint64_t)&unk_100721838, a2);
}

uint64_t sub_1003E4BF0(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_100721810, (uint64_t)&unk_100721838);
}

uint64_t sub_1003E4C14@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100721858, (uint64_t)&unk_100721880, a2);
}

uint64_t sub_1003E4C38(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_100721858, (uint64_t)&unk_100721880);
}

uint64_t sub_1003E4C5C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_1007218A0, (uint64_t)&unk_1007218C8, a2);
}

uint64_t sub_1003E4C80(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E45B4(a1, a2, a3, a4, (uint64_t)&unk_1007218A0, (uint64_t)&unk_1007218C8);
}

uint64_t sub_1003E4CA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_1007218E8, (uint64_t)&unk_100721910, a2);
}

uint64_t sub_1003E4CC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ButtonStyle, (uint64_t)&unk_1007218E8, (uint64_t)&unk_100721910);
}

uint64_t sub_1003E4CF4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721930, (uint64_t)&unk_100721958, a2);
}

uint64_t sub_1003E4D18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ButtonStyle, (uint64_t)&unk_100721930, (uint64_t)&unk_100721958);
}

uint64_t sub_1003E4D44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721978, (uint64_t)&unk_1007219A0, a2);
}

uint64_t sub_1003E4D68(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ButtonStyle, (uint64_t)&unk_100721978, (uint64_t)&unk_1007219A0);
}

uint64_t sub_1003E4D94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_1007219C0, (uint64_t)&unk_1007219E8, a2);
}

uint64_t sub_1003E4DB8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ProgressStyle, (uint64_t)&unk_1007219C0, (uint64_t)&unk_1007219E8);
}

uint64_t sub_1003E4DE4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003E46C8(a1, (uint64_t)&unk_100721A08, (uint64_t)&unk_100721A30, a2);
}

uint64_t sub_1003E4E08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E4748(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity.ProgressStyle, (uint64_t)&unk_100721A08, (uint64_t)&unk_100721A30);
}

uint64_t sub_1003E4E34@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100721A50, (uint64_t)&unk_100721A78, a2);
}

uint64_t sub_1003E4E58(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100721A50, (uint64_t)&unk_100721A78);
}

uint64_t sub_1003E4E7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100721A98, (uint64_t)&unk_100721AC0, a2);
}

uint64_t sub_1003E4EA0(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100721A98, (uint64_t)&unk_100721AC0);
}

uint64_t sub_1003E4EC8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t *v38;
  uint64_t *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v30 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_10004CFD4(&qword_1009E1048);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)(v4 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(_BYTE *)(v4 + v13) = *((_BYTE *)a2 + v13);
    v17 = a3[9];
    *(_BYTE *)(v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v18 = (_QWORD *)(v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = (void *)v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[10];
    v22 = a3[11];
    v23 = *(uint64_t *)((char *)a2 + v21);
    *(_QWORD *)(v4 + v21) = v23;
    v24 = (uint64_t *)(v4 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain(v16);
    v26 = v20;
    swift_retain(v23);
    v27 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v25, v27) == 1)
    {
      v28 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
      v29 = 1;
    }
    else
    {
      v31 = *v25;
      *v24 = *v25;
      swift_retain(v31);
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v27, v29);
    v32 = a3[12];
    v33 = a3[13];
    v34 = (_QWORD *)(v4 + v32);
    v35 = (uint64_t)a2 + v32;
    v37 = *(void **)v35;
    v36 = *(_QWORD *)(v35 + 8);
    *v34 = v37;
    v34[1] = v36;
    v38 = (uint64_t *)(v4 + v33);
    v39 = (uint64_t *)((char *)a2 + v33);
    v40 = v37;
    v41 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v39, v41) == 1)
    {
      v42 = type metadata accessor for UserInterfaceSizeClass(0);
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v43 + 48))(v39, 1, v42))
      {
        v44 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        v45 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v43 + 16))(v38, v39, v42);
        v45 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v38, 0, 1, v42);
      }
    }
    else
    {
      v46 = *v39;
      *v38 = *v39;
      swift_retain(v46);
      v45 = 0;
    }
    swift_storeEnumTagMultiPayload(v38, v41, v45);
    v47 = a3[14];
    v48 = (uint64_t *)(v4 + v47);
    v49 = (uint64_t *)((char *)a2 + v47);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v47, v41) == 1)
    {
      v50 = type metadata accessor for UserInterfaceSizeClass(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      v54 = v48;
      v55 = v41;
      v56 = 1;
    }
    else
    {
      v53 = *v49;
      *v48 = *v49;
      swift_retain(v53);
      v54 = v48;
      v55 = v41;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
    v57 = a3[15];
    v58 = v4 + v57;
    v59 = (uint64_t)a2 + v57;
    v60 = *(_QWORD *)v59;
    v61 = *(_BYTE *)(v59 + 8);
    sub_1001F2508(*(_QWORD *)v59, v61);
    *(_QWORD *)v58 = v60;
    *(_BYTE *)(v58 + 8) = v61;
    v62 = a3[16];
    v63 = v4 + v62;
    v64 = (uint64_t)a2 + v62;
    v65 = *(_QWORD *)v64;
    v66 = *(_BYTE *)(v64 + 8);
    sub_1001F2508(*(_QWORD *)v64, v66);
    *(_QWORD *)v63 = v65;
    *(_BYTE *)(v63 + 8) = v66;
    v67 = a3[17];
    v68 = v4 + v67;
    v69 = (uint64_t)a2 + v67;
    v70 = *(_QWORD *)v69;
    v71 = *(_BYTE *)(v69 + 8);
    sub_1001F2508(*(_QWORD *)v69, v71);
    *(_QWORD *)v68 = v70;
    *(_BYTE *)(v68 + 8) = v71;
    v72 = a3[18];
    v73 = a3[19];
    v74 = v4 + v72;
    v75 = (uint64_t)a2 + v72;
    *(_BYTE *)v74 = *(_BYTE *)v75;
    v76 = *(_QWORD *)(v75 + 8);
    *(_QWORD *)(v74 + 8) = v76;
    v77 = (_QWORD *)(v4 + v73);
    v78 = (uint64_t *)((char *)a2 + v73);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    v80 = a3[20];
    v81 = a3[21];
    v82 = (_QWORD *)(v4 + v80);
    v83 = (uint64_t *)((char *)a2 + v80);
    v84 = v83[1];
    *v82 = *v83;
    v82[1] = v84;
    v85 = (_QWORD *)(v4 + v81);
    v86 = (uint64_t *)((char *)a2 + v81);
    v87 = v86[1];
    *v85 = *v86;
    v85[1] = v87;
    v88 = a3[22];
    v89 = v4 + v88;
    v90 = (uint64_t)a2 + v88;
    swift_retain(v76);
    swift_retain(v79);
    swift_retain(v84);
    swift_retain(v87);
    v91 = sub_10004CFD4(&qword_1009E1050);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v89, v90, v91);
    v92 = a3[23];
    v93 = (char *)(v4 + v92);
    v94 = (char *)a2 + v92;
    v95 = type metadata accessor for AccessibilityTechnologies(0);
    v96 = *(_QWORD *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      v97 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
    v98 = (int *)sub_10004CFD4(&qword_1009D3A10);
    v93[v98[9]] = v94[v98[9]];
    v99 = v98[10];
    v100 = *(_QWORD *)&v94[v99];
    *(_QWORD *)&v93[v99] = v100;
    v93[v98[11]] = v94[v98[11]];
    v101 = a3[24];
    v102 = v4 + v101;
    v103 = (uint64_t)a2 + v101;
    *(_QWORD *)v102 = *(_QWORD *)v103;
    *(_BYTE *)(v102 + 8) = *(_BYTE *)(v103 + 8);
    v30 = *(_QWORD *)(v103 + 16);
    *(_QWORD *)(v102 + 16) = v30;
    swift_retain(v100);
  }
  swift_retain(v30);
  return v4;
}

double sub_1003E53EC(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;

  _s5Books15CurrentPageViewVwxx_0(a1);
  v4 = (char *)a1 + a2[5];
  v5 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));

  swift_release(*(_QWORD *)((char *)a1 + a2[10]));
  v6 = (_QWORD *)((char *)a1 + a2[11]);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }

  v9 = (_QWORD *)((char *)a1 + a2[13]);
  v10 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v13 = (_QWORD *)((char *)a1 + a2[14]);
  if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v13, v14);
  }
  else
  {
    swift_release(*v13);
  }
  sub_1001F2564(*(_QWORD *)((char *)a1 + a2[15]), *((_BYTE *)a1 + a2[15] + 8));
  sub_1001F2564(*(_QWORD *)((char *)a1 + a2[16]), *((_BYTE *)a1 + a2[16] + 8));
  sub_1001F2564(*(_QWORD *)((char *)a1 + a2[17]), *((_BYTE *)a1 + a2[17] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[18] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[19] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[20] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[21] + 8));
  v16 = (char *)a1 + a2[22];
  v17 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = (char *)a1 + a2[23];
  v19 = type metadata accessor for AccessibilityTechnologies(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
  v21 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)&v18[*(int *)(v21 + 40)]);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[24] + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1003E56A8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t *v36;
  uint64_t *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v16 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = (void *)v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[10];
  v21 = a3[11];
  v22 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  v23 = (uint64_t *)(a1 + v21);
  v24 = (uint64_t *)(a2 + v21);
  swift_bridgeObjectRetain(v15);
  v25 = v19;
  swift_retain(v22);
  v26 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v24, v26) == 1)
  {
    v27 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v23, v24, v27);
    v28 = 1;
  }
  else
  {
    v29 = *v24;
    *v23 = *v24;
    swift_retain(v29);
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v23, v26, v28);
  v30 = a3[12];
  v31 = a3[13];
  v32 = (_QWORD *)(a1 + v30);
  v33 = a2 + v30;
  v35 = *(void **)v33;
  v34 = *(_QWORD *)(v33 + 8);
  *v32 = v35;
  v32[1] = v34;
  v36 = (uint64_t *)(a1 + v31);
  v37 = (uint64_t *)(a2 + v31);
  v38 = v35;
  v39 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v37, v39) == 1)
  {
    v40 = type metadata accessor for UserInterfaceSizeClass(0);
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40))
    {
      v42 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      v43 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v41 + 16))(v36, v37, v40);
      v43 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v40);
    }
  }
  else
  {
    v44 = *v37;
    *v36 = *v37;
    swift_retain(v44);
    v43 = 0;
  }
  swift_storeEnumTagMultiPayload(v36, v39, v43);
  v45 = a3[14];
  v46 = (uint64_t *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  if (swift_getEnumCaseMultiPayload(a2 + v45, v39) == 1)
  {
    v48 = type metadata accessor for UserInterfaceSizeClass(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v52 = v46;
    v53 = v39;
    v54 = 1;
  }
  else
  {
    v51 = *v47;
    *v46 = *v47;
    swift_retain(v51);
    v52 = v46;
    v53 = v39;
    v54 = 0;
  }
  swift_storeEnumTagMultiPayload(v52, v53, v54);
  v55 = a3[15];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = *(_QWORD *)v57;
  v59 = *(_BYTE *)(v57 + 8);
  sub_1001F2508(*(_QWORD *)v57, v59);
  *(_QWORD *)v56 = v58;
  *(_BYTE *)(v56 + 8) = v59;
  v60 = a3[16];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(_QWORD *)v62;
  v64 = *(_BYTE *)(v62 + 8);
  sub_1001F2508(*(_QWORD *)v62, v64);
  *(_QWORD *)v61 = v63;
  *(_BYTE *)(v61 + 8) = v64;
  v65 = a3[17];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = *(_QWORD *)v67;
  v69 = *(_BYTE *)(v67 + 8);
  sub_1001F2508(*(_QWORD *)v67, v69);
  *(_QWORD *)v66 = v68;
  *(_BYTE *)(v66 + 8) = v69;
  v70 = a3[18];
  v71 = a3[19];
  v72 = a1 + v70;
  v73 = a2 + v70;
  *(_BYTE *)v72 = *(_BYTE *)v73;
  v74 = *(_QWORD *)(v73 + 8);
  *(_QWORD *)(v72 + 8) = v74;
  v75 = (_QWORD *)(a1 + v71);
  v76 = (_QWORD *)(a2 + v71);
  v77 = v76[1];
  *v75 = *v76;
  v75[1] = v77;
  v78 = a3[20];
  v79 = a3[21];
  v80 = (_QWORD *)(a1 + v78);
  v81 = (_QWORD *)(a2 + v78);
  v82 = v81[1];
  *v80 = *v81;
  v80[1] = v82;
  v83 = (_QWORD *)(a1 + v79);
  v84 = (_QWORD *)(a2 + v79);
  v85 = v84[1];
  *v83 = *v84;
  v83[1] = v85;
  v86 = a3[22];
  v87 = a1 + v86;
  v88 = a2 + v86;
  swift_retain(v74);
  swift_retain(v77);
  swift_retain(v82);
  swift_retain(v85);
  v89 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
  v90 = a3[23];
  v91 = (char *)(a1 + v90);
  v92 = (char *)(a2 + v90);
  v93 = type metadata accessor for AccessibilityTechnologies(0);
  v94 = *(_QWORD *)(v93 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
  {
    v95 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v91, v92, v93);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
  }
  v96 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v91[v96[9]] = v92[v96[9]];
  v97 = v96[10];
  v98 = *(_QWORD *)&v92[v97];
  *(_QWORD *)&v91[v97] = v98;
  v91[v96[11]] = v92[v96[11]];
  v99 = a3[24];
  v100 = a1 + v99;
  v101 = a2 + v99;
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *(_BYTE *)(v100 + 8) = *(_BYTE *)(v101 + 8);
  v102 = *(_QWORD *)(v101 + 16);
  *(_QWORD *)(v100 + 16) = v102;
  swift_retain(v98);
  swift_retain(v102);
  return a1;
}

_QWORD *sub_1003E5B9C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  int v108;
  int v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  sub_1001EAB00(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v13 = v12[1];
  v14 = v11[1];
  v11[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = a3[9];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = (void *)v17[1];
  v19 = (void *)v16[1];
  v16[1] = v18;
  v20 = v18;

  v21 = a3[10];
  v22 = *(_QWORD *)((char *)a2 + v21);
  v23 = *(_QWORD *)((char *)a1 + v21);
  *(_QWORD *)((char *)a1 + v21) = v22;
  swift_retain(v22);
  swift_release(v23);
  if (a1 != a2)
  {
    v24 = a3[11];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    sub_100010960((uint64_t)a1 + v24, (uint64_t *)&unk_1009D8200);
    v27 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
      v29 = 1;
    }
    else
    {
      v30 = *v26;
      *v25 = *v26;
      swift_retain(v30);
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v27, v29);
  }
  v31 = a3[12];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (char *)a2 + v31;
  v34 = *(void **)((char *)a1 + v31);
  v35 = *(void **)((char *)a2 + v31);
  *v32 = v35;
  v36 = v35;

  v32[1] = *((_QWORD *)v33 + 1);
  if (a1 != a2)
  {
    v37 = a3[13];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    sub_100010960((uint64_t)a1 + v37, &qword_1009D26B8);
    v40 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v39, v40) == 1)
    {
      v41 = type metadata accessor for UserInterfaceSizeClass(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41))
      {
        v43 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        v44 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v42 + 16))(v38, v39, v41);
        v44 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
      }
    }
    else
    {
      v45 = *v39;
      *v38 = *v39;
      swift_retain(v45);
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v38, v40, v44);
    v46 = a3[14];
    v47 = (_QWORD *)((char *)a1 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    sub_100010960((uint64_t)a1 + v46, &qword_1009D26B8);
    v49 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
    {
      v50 = type metadata accessor for UserInterfaceSizeClass(0);
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v51 + 48))(v48, 1, v50))
      {
        v52 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v51 + 16))(v47, v48, v50);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v47, 0, 1, v50);
      }
      v54 = v47;
      v55 = v49;
      v56 = 1;
    }
    else
    {
      v53 = *v48;
      *v47 = *v48;
      swift_retain(v53);
      v54 = v47;
      v55 = v49;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
  }
  v57 = a3[15];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *(_QWORD *)v59;
  v61 = v59[8];
  sub_1001F2508(*(_QWORD *)v59, v61);
  v62 = *(_QWORD *)v58;
  v63 = v58[8];
  *(_QWORD *)v58 = v60;
  v58[8] = v61;
  sub_1001F2564(v62, v63);
  v64 = a3[16];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = *(_QWORD *)v66;
  v68 = v66[8];
  sub_1001F2508(*(_QWORD *)v66, v68);
  v69 = *(_QWORD *)v65;
  v70 = v65[8];
  *(_QWORD *)v65 = v67;
  v65[8] = v68;
  sub_1001F2564(v69, v70);
  v71 = a3[17];
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = *(_QWORD *)v73;
  v75 = v73[8];
  sub_1001F2508(*(_QWORD *)v73, v75);
  v76 = *(_QWORD *)v72;
  v77 = v72[8];
  *(_QWORD *)v72 = v74;
  v72[8] = v75;
  sub_1001F2564(v76, v77);
  v78 = a3[18];
  v79 = (char *)a1 + v78;
  v80 = (char *)a2 + v78;
  *v79 = *v80;
  v81 = *((_QWORD *)v79 + 1);
  v82 = *((_QWORD *)v80 + 1);
  *((_QWORD *)v79 + 1) = v82;
  swift_retain(v82);
  swift_release(v81);
  v83 = a3[19];
  v84 = (_QWORD *)((char *)a1 + v83);
  v85 = (_QWORD *)((char *)a2 + v83);
  *v84 = *v85;
  v86 = v84[1];
  v87 = v85[1];
  v84[1] = v87;
  swift_retain(v87);
  swift_release(v86);
  v88 = a3[20];
  v89 = (_QWORD *)((char *)a1 + v88);
  v90 = (_QWORD *)((char *)a2 + v88);
  *v89 = *v90;
  v91 = v89[1];
  v92 = v90[1];
  v89[1] = v92;
  swift_retain(v92);
  swift_release(v91);
  v93 = a3[21];
  v94 = (_QWORD *)((char *)a1 + v93);
  v95 = (_QWORD *)((char *)a2 + v93);
  *v94 = *v95;
  v96 = v94[1];
  v97 = v95[1];
  v94[1] = v97;
  swift_retain(v97);
  swift_release(v96);
  v98 = a3[22];
  v99 = (char *)a1 + v98;
  v100 = (char *)a2 + v98;
  v101 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 24))(v99, v100, v101);
  v102 = a3[23];
  v103 = (char *)a1 + v102;
  v104 = (char *)a2 + v102;
  v105 = type metadata accessor for AccessibilityTechnologies(0);
  v106 = *(_QWORD *)(v105 - 8);
  v107 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48);
  v108 = v107(v103, 1, v105);
  v109 = v107(v104, 1, v105);
  if (!v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 24))(v103, v104, v105);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v103, v105);
    goto LABEL_24;
  }
  if (v109)
  {
LABEL_24:
    v110 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v104, v105);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
LABEL_25:
  v111 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v103[v111[9]] = v104[v111[9]];
  v112 = v111[10];
  v113 = *(_QWORD *)&v103[v112];
  v114 = *(_QWORD *)&v104[v112];
  *(_QWORD *)&v103[v112] = v114;
  swift_retain(v114);
  swift_release(v113);
  v103[v111[11]] = v104[v111[11]];
  v115 = a3[24];
  v116 = (char *)a1 + v115;
  v117 = (char *)a2 + v115;
  v118 = *(_QWORD *)v117;
  v116[8] = v117[8];
  *(_QWORD *)v116 = v118;
  v119 = *((_QWORD *)v116 + 2);
  v120 = *((_QWORD *)v117 + 2);
  *((_QWORD *)v116 + 2) = v120;
  swift_retain(v120);
  swift_release(v119);
  return a1;
}

uint64_t sub_1003E61E0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for UserInterfaceSizeClass(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
    {
      v24 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v19, v20, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v25 = a3[14];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if (swift_getEnumCaseMultiPayload(a2 + v25, v21) == 1)
  {
    v28 = type metadata accessor for UserInterfaceSizeClass(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    swift_storeEnumTagMultiPayload(v26, v21, 1);
  }
  else
  {
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v31 = a3[15];
  v32 = a3[16];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  v37 = a3[17];
  v38 = a3[18];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  v41 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(a2 + v41);
  v42 = a3[22];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v45 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
  v46 = a3[23];
  v47 = (char *)(a1 + v46);
  v48 = (char *)(a2 + v46);
  v49 = type metadata accessor for AccessibilityTechnologies(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v52 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v47[v52[9]] = v48[v52[9]];
  *(_QWORD *)&v47[v52[10]] = *(_QWORD *)&v48[v52[10]];
  v47[v52[11]] = v48[v52[11]];
  v53 = a3[24];
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_QWORD *)(v54 + 16) = *(_QWORD *)(v55 + 16);
  return a1;
}

uint64_t sub_1003E6614(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[9];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  v23 = (void *)v19[1];
  *v19 = v22;
  v19[1] = v21;

  v24 = a3[10];
  v25 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_release(v25);
  if (a1 != a2)
  {
    v26 = a3[11];
    v27 = (void *)(a1 + v26);
    v28 = (const void *)(a2 + v26);
    sub_100010960(a1 + v26, (uint64_t *)&unk_1009D8200);
    v29 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload(v27, v29, 1);
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  v31 = a3[12];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = *(void **)(a1 + v31);
  *v32 = *v33;

  v32[1] = v33[1];
  if (a1 != a2)
  {
    v35 = a3[13];
    v36 = (void *)(a1 + v35);
    v37 = (const void *)(a2 + v35);
    sub_100010960(a1 + v35, &qword_1009D26B8);
    v38 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
    {
      v39 = type metadata accessor for UserInterfaceSizeClass(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39))
      {
        v41 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v36, v37, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
      }
      swift_storeEnumTagMultiPayload(v36, v38, 1);
    }
    else
    {
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    v42 = a3[14];
    v43 = (void *)(a1 + v42);
    v44 = (const void *)(a2 + v42);
    sub_100010960(a1 + v42, &qword_1009D26B8);
    v45 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
    {
      v46 = type metadata accessor for UserInterfaceSizeClass(0);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v44, 1, v46))
      {
        v48 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v43, v44, v46);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v43, 0, 1, v46);
      }
      swift_storeEnumTagMultiPayload(v43, v45, 1);
    }
    else
    {
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
  }
  v49 = a3[15];
  v50 = a1 + v49;
  v51 = (uint64_t *)(a2 + v49);
  v52 = *v51;
  LOBYTE(v51) = *((_BYTE *)v51 + 8);
  v53 = *(_QWORD *)v50;
  v54 = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v50 = v52;
  *(_BYTE *)(v50 + 8) = (_BYTE)v51;
  sub_1001F2564(v53, v54);
  v55 = a3[16];
  v56 = a1 + v55;
  v57 = (uint64_t *)(a2 + v55);
  v58 = *v57;
  LOBYTE(v57) = *((_BYTE *)v57 + 8);
  v59 = *(_QWORD *)v56;
  v60 = *(_BYTE *)(v56 + 8);
  *(_QWORD *)v56 = v58;
  *(_BYTE *)(v56 + 8) = (_BYTE)v57;
  sub_1001F2564(v59, v60);
  v61 = a3[17];
  v62 = a1 + v61;
  v63 = (uint64_t *)(a2 + v61);
  v64 = *v63;
  LOBYTE(v63) = *((_BYTE *)v63 + 8);
  v65 = *(_QWORD *)v62;
  v66 = *(_BYTE *)(v62 + 8);
  *(_QWORD *)v62 = v64;
  *(_BYTE *)(v62 + 8) = (_BYTE)v63;
  sub_1001F2564(v65, v66);
  v67 = a3[18];
  v68 = a1 + v67;
  v69 = a2 + v67;
  *(_BYTE *)v68 = *(_BYTE *)v69;
  v70 = *(_QWORD *)(v68 + 8);
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
  swift_release(v70);
  v71 = a3[19];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (_QWORD *)(a2 + v71);
  *v72 = *v73;
  v74 = v72[1];
  v72[1] = v73[1];
  swift_release(v74);
  v75 = a3[20];
  v76 = (_QWORD *)(a1 + v75);
  v77 = (uint64_t *)(a2 + v75);
  v78 = v76[1];
  v80 = *v77;
  v79 = v77[1];
  *v76 = v80;
  v76[1] = v79;
  swift_release(v78);
  v81 = a3[21];
  v82 = (_QWORD *)(a1 + v81);
  v83 = (uint64_t *)(a2 + v81);
  v84 = v82[1];
  v86 = *v83;
  v85 = v83[1];
  *v82 = v86;
  v82[1] = v85;
  swift_release(v84);
  v87 = a3[22];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v90 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 40))(v88, v89, v90);
  v91 = a3[23];
  v92 = (char *)(a1 + v91);
  v93 = (char *)(a2 + v91);
  v94 = type metadata accessor for AccessibilityTechnologies(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (!v97)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 40))(v92, v93, v94);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v94);
    goto LABEL_23;
  }
  if (v98)
  {
LABEL_23:
    v99 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v92, v93, v94);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
LABEL_24:
  v100 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v92[v100[9]] = v93[v100[9]];
  v101 = v100[10];
  v102 = *(_QWORD *)&v92[v101];
  *(_QWORD *)&v92[v101] = *(_QWORD *)&v93[v101];
  swift_release(v102);
  v92[v100[11]] = v93[v100[11]];
  v103 = a3[24];
  v104 = a1 + v103;
  v105 = a2 + v103;
  *(_QWORD *)v104 = *(_QWORD *)v105;
  *(_BYTE *)(v104 + 8) = *(_BYTE *)(v105 + 8);
  v106 = *(_QWORD *)(v104 + 16);
  *(_QWORD *)(v104 + 16) = *(_QWORD *)(v105 + 16);
  swift_release(v106);
  return a1;
}

uint64_t sub_1003E6BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E6BE0);
}

uint64_t sub_1003E6BE0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009E1048);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[11];
      }
      else
      {
        v13 = sub_10004CFD4(&qword_1009D26A0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[13];
        }
        else
        {
          v14 = sub_10004CFD4(&qword_1009E1050);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[22];
          }
          else
          {
            v10 = sub_10004CFD4(&qword_1009D3A10);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a3[23];
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1003E6D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E6D0C);
}

uint64_t sub_1003E6D0C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009E1048);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[11];
      }
      else
      {
        v13 = sub_10004CFD4(&qword_1009D26A0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[13];
        }
        else
        {
          v14 = sub_10004CFD4(&qword_1009E1050);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[22];
          }
          else
          {
            v10 = sub_10004CFD4(&qword_1009D3A10);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a4[23];
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ReadingSettingsView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E10B0;
  if (!qword_1009E10B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadingSettingsView);
  return result;
}

void sub_1003E6E64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[9];
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v12[0] = "(";
  sub_10026B338(319, &qword_1009E10C0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSettingsViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
  if (v3 <= 0x3F)
  {
    v12[1] = *(_QWORD *)(v2 - 8) + 64;
    v12[2] = &unk_100721B20;
    v12[3] = &unk_100721B38;
    v12[4] = &unk_100721B38;
    v12[5] = &unk_100721B20;
    v12[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_10026B338(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v12[7] = *(_QWORD *)(v4 - 8) + 64;
      v12[8] = &unk_100721B50;
      sub_100233378(319);
      if (v7 <= 0x3F)
      {
        v13 = *(_QWORD *)(v6 - 8) + 64;
        v14 = v13;
        v15 = &unk_100721B68;
        v16 = &unk_100721B68;
        v17 = &unk_100721B68;
        v18 = &unk_100721B50;
        v19 = &unk_100721B50;
        v20 = &unk_100721B50;
        v21 = &unk_100721B50;
        sub_10026B338(319, (unint64_t *)&unk_1009E10C8, type metadata accessor for BrightnessController, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
        if (v9 <= 0x3F)
        {
          v22 = *(_QWORD *)(v8 - 8) + 64;
          sub_10023341C();
          if (v11 <= 0x3F)
          {
            v23 = *(_QWORD *)(v10 - 8) + 64;
            v24 = &unk_100721B80;
            swift_initStructMetadata(a1, 256, 21, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t sub_1003E6FDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100870300, 1);
}

uint64_t sub_1003E6FEC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v41 = a2;
  v42 = a4;
  v7 = type metadata accessor for Locale(0);
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v40 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - v17;
  v19 = sub_10004CFD4(&qword_1009E1588);
  __chkstk_darwin(v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(v4, (uint64_t)v21, &qword_1009E1520);
  v22 = *(int *)(v19 + 36);
  v43 = a1;
  v21[v22] = a1;
  v23 = a3;
  if (a3)
  {
    v24 = a3;
    v25 = v41;
  }
  else
  {
    v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007C7510);
    static Locale.current.getter(v26);
    v37 = v13;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v40);
    v27 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v27);
    v29 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v31 = v38;
    v30 = v39;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v9, v12, v39);
    v25 = String.init(localized:table:bundle:locale:comment:)(v15, v41, 0, v29, v9, "Accessibility string for using VoiceOver double tapping to select", 65, 2);
    v24 = v32;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v40);
  }
  v33 = v42;
  sub_10000B5E4((uint64_t)v21, v42, &qword_1009E1588);
  v34 = v33 + *(int *)(sub_10004CFD4(&qword_1009E1528) + 36);
  *(_BYTE *)v34 = (v43 & 1) == 0;
  *(_QWORD *)(v34 + 8) = v25;
  *(_QWORD *)(v34 + 16) = v24;
  swift_bridgeObjectRetain(v23);
  return sub_100010960((uint64_t)v21, &qword_1009E1588);
}

uint64_t sub_1003E7290@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = FontDownloadAlert.fontDownloadAlertPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003E72BC(unsigned __int8 *a1)
{
  return FontDownloadAlert.fontDownloadAlertPresented.setter(*a1);
}

void sub_1003E72E0()
{
  qword_1009E0FE0 = 0x4024000000000000;
}

void sub_1003E72F0()
{
  qword_1009E0FE8 = 0x4008000000000000;
}

void sub_1003E7300()
{
  qword_1009E0FF0 = 0x401C000000000000;
}

void sub_1003E7310()
{
  qword_1009E0FF8 = 0x4010000000000000;
}

void sub_1003E7320()
{
  qword_1009E1000 = 0x4018000000000000;
}

uint64_t sub_1003E7330()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = type metadata accessor for RoundedRectangle(0);
  sub_10001BFD8(v0, qword_1009E1008);
  v1 = (_QWORD *)sub_100048F64(v0, (uint64_t)qword_1009E1008);
  if (qword_1009CE3A0 != -1)
    swift_once(&qword_1009CE3A0, sub_1003E0EF8);
  v2 = qword_100A1E828;
  v3 = (char *)v1 + *(int *)(v0 + 20);
  v4 = enum case for RoundedCornerStyle.continuous(_:);
  v5 = type metadata accessor for RoundedCornerStyle(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  *v1 = v2;
  v1[1] = v2;
  return result;
}

uint64_t sub_1003E73EC(uint64_t a1)
{
  return sub_1003F2260(a1, &qword_1009E1020);
}

uint64_t sub_1003E73F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  int *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v63;
  char v64;
  __int128 v65;
  uint64_t v66;

  v13 = (int *)type metadata accessor for ReadingSettingsView(0);
  v14 = (_QWORD *)(a9 + v13[11]);
  *v14 = swift_getKeyPath(&unk_100721DB8);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v16 = (_QWORD *)(a9 + v13[12]);
  v17 = type metadata accessor for ChromeStyle(0);
  v18 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v17, v18);
  *v16 = v19;
  v16[1] = v20;
  v21 = (_QWORD *)(a9 + v13[13]);
  *v21 = swift_getKeyPath(&unk_100721DE8);
  v22 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v23 = (_QWORD *)(a9 + v13[14]);
  *v23 = swift_getKeyPath(&unk_100721E18);
  swift_storeEnumTagMultiPayload(v23, v22, 0);
  v24 = a9 + v13[15];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_100721E48);
  *(_BYTE *)(v24 + 8) = 0;
  v25 = a9 + v13[16];
  *(_QWORD *)v25 = swift_getKeyPath(&unk_100721D20);
  *(_BYTE *)(v25 + 8) = 0;
  v26 = a9 + v13[17];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100721CF0);
  *(_BYTE *)(v26 + 8) = 0;
  v27 = a9 + v13[18];
  LOBYTE(v63) = 0;
  State.init(wrappedValue:)(&v65, &v63, &type metadata for Bool);
  v28 = *((_QWORD *)&v65 + 1);
  *(_BYTE *)v27 = v65;
  *(_QWORD *)(v27 + 8) = v28;
  v29 = (_QWORD *)(a9 + v13[19]);
  v63 = 0x4059000000000000;
  State.init(wrappedValue:)(&v65, &v63, &type metadata for CGFloat);
  v30 = *((_QWORD *)&v65 + 1);
  *v29 = v65;
  v29[1] = v30;
  v31 = v13[20];
  v32 = (void *)objc_opt_self(UIDevice);
  v33 = objc_msgSend(v32, "currentDevice");
  v34 = objc_msgSend(v33, "orientation");

  v63 = (uint64_t)v34;
  type metadata accessor for UIDeviceOrientation(0);
  v36 = v35;
  State.init(wrappedValue:)(&v65, &v63, v35);
  *(_OWORD *)(a9 + v31) = v65;
  v37 = v13[21];
  v38 = objc_msgSend(v32, "currentDevice");
  v39 = objc_msgSend(v38, "orientation");

  v63 = (uint64_t)v39;
  v40 = State.init(wrappedValue:)(&v65, &v63, v36);
  *(_OWORD *)(a9 + v37) = v65;
  AccessibilityFocusState.init<>()(v40);
  v41 = a9 + v13[24];
  v63 = 0;
  v64 = 1;
  v42 = sub_10004CFD4(&qword_1009E1458);
  State.init(wrappedValue:)(&v65, &v63, v42);
  v43 = BYTE8(v65);
  v44 = v66;
  *(_QWORD *)v41 = v65;
  *(_BYTE *)(v41 + 8) = v43;
  *(_QWORD *)(v41 + 16) = v44;
  sub_10002E418((uint64_t)a1, a9);
  v45 = type metadata accessor for ReadingSettingsViewModel(0);
  v46 = sub_100008DB0(qword_1009E1460, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingSettingsViewModel, (uint64_t)&protocol conformance descriptor for ReadingSettingsViewModel);
  swift_retain(a2);
  Bindable<A>.init(wrappedValue:)(v47, v45, v46);
  v48 = (_QWORD *)(a9 + v13[6]);
  *v48 = a3;
  v48[1] = a4;
  *(_BYTE *)(a9 + v13[7]) = a5;
  *(_BYTE *)(a9 + v13[8]) = a6;
  v49 = (_QWORD *)(a9 + v13[9]);
  v50 = type metadata accessor for OrientationLockHintViewModel(0);
  v51 = sub_100008DB0(&qword_1009D5930, type metadata accessor for OrientationLockHintViewModel, (uint64_t)&protocol conformance descriptor for OrientationLockHintViewModel);
  v52 = a7;
  *v49 = ObservedObject.init(wrappedValue:)(v52, v50, v51);
  v49[1] = v53;
  *(_QWORD *)(a9 + v13[10]) = a8;
  v54 = type metadata accessor for BrightnessController(0);
  v55 = sub_100008DB0(&qword_1009E12D0, type metadata accessor for BrightnessController, (uint64_t)&unk_10072B480);
  Bindable<A>.init(wrappedValue:)(a10, v54, v55);
  swift_release(a2);

  return _s5Books15CurrentPageViewVwxx_0(a1);
}

uint64_t sub_1003E782C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  void (*v38)(char *, _QWORD, uint64_t, __n128);
  uint64_t result;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t OpaqueTypeConformance2;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double (**v64)(uint64_t);
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)@<X0>(uint64_t@<X8>);
  char v70;
  uint64_t v71;
  _QWORD *v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)@<X0>(uint64_t@<X8>);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (**v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t (*v110)@<X0>(uint64_t@<X8>);
  uint64_t v111;
  uint64_t v112;
  double v113;
  char v114;

  v106 = a1;
  v97 = sub_10004CFD4(&qword_1009D3858);
  __chkstk_darwin(v97);
  v3 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v96 = (char *)&v82 - v5;
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v109 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v82 - v10;
  v99 = sub_10004CFD4(&qword_1009D1C80);
  __chkstk_darwin(v99);
  v91 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v98 = (uint64_t)&v82 - v14;
  v15 = type metadata accessor for AccessibilityChildBehavior(0);
  v107 = *(void (***)(char *, uint64_t))(v15 - 8);
  v108 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for ReadingSettingsView(0);
  v18 = *(_QWORD *)(v104 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v104);
  v20 = (void (**)(char *, uint64_t))((char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_10004CFD4(&qword_1009E1148);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10004CFD4(&qword_1009E1150);
  v95 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v92 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_10004CFD4(&qword_1009E1158);
  __chkstk_darwin(v94);
  v93 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10004CFD4(&qword_1009E1160);
  __chkstk_darwin(v25);
  v101 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009E1168);
  __chkstk_darwin(v27);
  v103 = (uint64_t)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10004CFD4(&qword_1009E1170);
  __chkstk_darwin(v100);
  v102 = (uint64_t)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v1;
  sub_10002CD84(v1, (uint64_t)v20, type metadata accessor for ReadingSettingsView);
  v30 = *(unsigned __int8 *)(v18 + 80);
  v31 = (v30 + 16) & ~v30;
  v86 = v31 + v19;
  v85 = v30 | 7;
  v32 = swift_allocObject(&unk_100903280, v31 + v19, v30 | 7);
  v33 = sub_10002C960((uint64_t)v20, v32 + v31, type metadata accessor for ReadingSettingsView);
  v110 = sub_1003EEA14;
  v111 = v32;
  static AccessibilityChildBehavior.contain.getter(v33);
  v34 = sub_10004CFD4(&qword_1009E1178);
  v35 = sub_100030B34(&qword_1009E1180, &qword_1009E1178, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v87 = v22;
  v36 = v109;
  v84 = v35;
  View.accessibilityElement(children:)(v17, v34, v35);
  v107[1](v17, v108);
  v37 = swift_release(v111);
  v38 = (void (*)(char *, _QWORD, uint64_t, __n128))v7[13];
  v38(v11, enum case for DynamicTypeSize.xSmall(_:), v6, v37);
  ((void (*)(char *, _QWORD, uint64_t))v38)(v36, enum case for DynamicTypeSize.xxxLarge(_:), v6);
  sub_100008DB0((unint64_t *)&qword_1009D38C0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v11, v36, v6);
  if ((result & 1) != 0)
  {
    v107 = v20;
    v108 = v31;
    v40 = v96;
    v41 = v97;
    v42 = &v96[*(int *)(v97 + 48)];
    v83 = (uint64_t (*)@<X0>(uint64_t@<X8>))v34;
    v43 = (void (*)(char *, char *, uint64_t))v7[4];
    v43(v96, v11, v6);
    v43(v42, v36, v6);
    v44 = &v3[*(int *)(v41 + 48)];
    v45 = (void (*)(char *, char *, uint64_t))v7[2];
    v45(v3, v40, v6);
    v45(v44, v42, v6);
    v46 = (uint64_t)v91;
    v43(v91, v3, v6);
    v47 = (void (*)(char *, uint64_t))v7[1];
    v47(v44, v6);
    v48 = &v3[*(int *)(v41 + 48)];
    v43(v3, v40, v6);
    v43(v48, v42, v6);
    v49 = v99;
    v43((char *)(v46 + *(int *)(v99 + 36)), v48, v6);
    v47(v3, v6);
    v50 = v98;
    sub_100025B3C(v46, v98, &qword_1009D1C80);
    v110 = v83;
    v111 = v84;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v110, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v52 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v53 = v92;
    v54 = v90;
    v55 = OpaqueTypeConformance2;
    v56 = v87;
    View.dynamicTypeSize<A>(_:)(v50, v90, v49, v55, v52);
    sub_100010960(v50, &qword_1009D1C80);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v56, v54);
    v57 = v105;
    v58 = (uint64_t)v107;
    sub_10002CD84(v105, (uint64_t)v107, type metadata accessor for ReadingSettingsView);
    v59 = swift_allocObject(&unk_1009032A8, v86, v85);
    sub_10002C960(v58, v59 + v108, type metadata accessor for ReadingSettingsView);
    v60 = v95;
    v61 = (uint64_t)v93;
    v62 = v88;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v93, v53, v88);
    v63 = v94;
    v64 = (double (**)(uint64_t))(v61 + *(int *)(v94 + 36));
    *v64 = sub_1003EEA64;
    v64[1] = (double (*)(uint64_t))v59;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v62);
    v65 = sub_1003EEAA0();
    v66 = (uint64_t)v101;
    View.accessibilityScrollAction(_:)(BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0, v63, v65);
    sub_100010960(v61, &qword_1009E1158);
    v67 = v104;
    v68 = v57 + *(int *)(v104 + 96);
    v69 = *(uint64_t (**)@<X0>(uint64_t@<X8>))v68;
    v70 = *(_BYTE *)(v68 + 8);
    v71 = *(_QWORD *)(v68 + 16);
    v110 = v69;
    LOBYTE(v111) = v70;
    v112 = v71;
    sub_10004CFD4(&qword_1009E1198);
    v72 = State.wrappedValue.getter(&v113);
    v73 = v113;
    LOBYTE(v59) = v114;
    v74 = static Alignment.center.getter(v72);
    v75 = v103;
    sub_1005F2A4C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v103, v73, v59, 0.0, 1, v74, v76);
    sub_100010960(v66, &qword_1009E1160);
    if (*(_BYTE *)(v57 + *(int *)(v67 + 28)))
      v78 = 0x4028000000000000;
    else
      v78 = 0;
    v79 = static Edge.Set.all.getter(v77);
    v80 = v102;
    sub_10000B5E4(v75, v102, &qword_1009E1168);
    v81 = v80 + *(int *)(v100 + 36);
    *(_BYTE *)v81 = v79;
    *(_QWORD *)(v81 + 8) = 0;
    *(_QWORD *)(v81 + 16) = v78;
    *(_QWORD *)(v81 + 24) = v78;
    *(_QWORD *)(v81 + 32) = v78;
    *(_BYTE *)(v81 + 40) = 0;
    sub_100010960(v75, &qword_1009E1168);
    return sub_100025B3C(v80, v106, &qword_1009E1170);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003E8068@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  __n128 v21;
  void (*v22)(char *, uint64_t, __n128);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a2;
  v3 = type metadata accessor for ReadingSettingsView(0);
  v42 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v42 + 64);
  __chkstk_darwin(v3);
  v5 = sub_10004CFD4(&qword_1009E11A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - v10;
  v40 = sub_10004CFD4(&qword_1009E11B0);
  __chkstk_darwin(v40);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10004CFD4(&qword_1009E11B8);
  __chkstk_darwin(v43);
  v41 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = GeometryProxy.size.getter(v15);
  v17 = a1;
  v39 = a1;
  v18 = sub_1003E83B0((uint64_t)v8, v16);
  v19 = static Color.pink.getter(v18);
  v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v20(v11, v8, v5);
  v21 = swift_release(v19);
  v22 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  v22(v8, v5, v21);
  v23 = v17;
  v24 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v23, (uint64_t)v24, type metadata accessor for ReadingSettingsView);
  v25 = *(unsigned __int8 *)(v42 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = v26 + v4;
  v42 = v25 | 7;
  v28 = swift_allocObject(&unk_1009032D0, v27, v25 | 7);
  sub_10002C960((uint64_t)v24, v28 + v26, type metadata accessor for ReadingSettingsView);
  v20(v13, v11, v5);
  v29 = (uint64_t (**)())&v13[*(int *)(v40 + 36)];
  *v29 = sub_1003EEC00;
  v29[1] = (uint64_t (*)())v28;
  v29[2] = 0;
  v29[3] = 0;
  ((void (*)(char *, uint64_t))v22)(v11, v5);
  v30 = v39;
  sub_10002CD84(v39, (uint64_t)v24, type metadata accessor for ReadingSettingsView);
  v31 = v42;
  v32 = swift_allocObject(&unk_1009032F8, v27, v42);
  sub_10002C960((uint64_t)v24, v32 + v26, type metadata accessor for ReadingSettingsView);
  v33 = v41;
  sub_10000B5E4((uint64_t)v13, v41, &qword_1009E11B0);
  v34 = (_QWORD *)(v33 + *(int *)(v43 + 36));
  *v34 = 0;
  v34[1] = 0;
  v34[2] = sub_1003EEC10;
  v34[3] = v32;
  sub_100010960((uint64_t)v13, &qword_1009E11B0);
  sub_10002CD84(v30, (uint64_t)v24, type metadata accessor for ReadingSettingsView);
  v35 = swift_allocObject(&unk_100903320, v27, v31);
  sub_10002C960((uint64_t)v24, v35 + v26, type metadata accessor for ReadingSettingsView);
  v36 = v44;
  sub_10000B5E4(v33, v44, &qword_1009E11B8);
  v37 = (_QWORD *)(v36 + *(int *)(sub_10004CFD4(&qword_1009E11C0) + 36));
  *v37 = sub_1003E8B78;
  v37[1] = 0;
  v37[2] = sub_1003EEC20;
  v37[3] = v35;
  return sub_100010960(v33, &qword_1009E11B8);
}

uint64_t sub_1003E83B0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  int v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  uint64_t v74;
  __n128 v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  _QWORD v100[2];
  unsigned __int8 v101;

  v98 = a1;
  v95 = sub_10004CFD4(&qword_1009D8340);
  __chkstk_darwin(v95);
  v96 = (uint64_t *)((char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10004CFD4(&qword_1009E1048);
  v93 = *(_QWORD *)(v5 - 8);
  v94 = v5;
  __chkstk_darwin(v5);
  v92 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessibilityChildBehavior(0);
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  __chkstk_darwin(v7);
  v88 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingSettingsView(0);
  v79 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v80 = v10;
  v81 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for AccessibilityActionKind(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009E11C8);
  __chkstk_darwin(v13);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009E11D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_10004CFD4(&qword_1009E11D8);
  __chkstk_darwin(v77);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10004CFD4(&qword_1009E11E0);
  __chkstk_darwin(v78);
  v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_10004CFD4(&qword_1009E11E8);
  __chkstk_darwin(v84);
  v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_10004CFD4(&qword_1009E11F0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE3B0 != -1)
    swift_once(&qword_1009CE3B0, sub_1003E72E0);
  v26 = *(double *)&qword_1009E0FE0;
  v89 = v9;
  v27 = *(unsigned __int8 *)(v2 + *(int *)(v9 + 28));
  if (*(_BYTE *)(v2 + *(int *)(v9 + 28)))
    v28 = 14.0;
  else
    v28 = 0.0;
  if (v27)
    v29 = *(double *)&qword_1009E0FE0;
  else
    v29 = 16.0;
  if (v27)
    v30 = 12.0;
  else
    v30 = 4.0;
  v31 = 40.0;
  if (v27)
    v31 = 24.0;
  v32 = a2 - v31;
  v33 = sub_1003E8CC0();
  v34 = 3.0;
  if ((v33 & 1) != 0)
    v34 = 6.0;
  v35 = floor((v26 + v32 - v26 * v34) / v34);
  *(_QWORD *)v15 = static HorizontalAlignment.center.getter(v33);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v36 = (uint64_t)&v15[*(int *)(sub_10004CFD4(&qword_1009E11F8) + 44)];
  v97 = v2;
  sub_1003E99E0(v2, v28, v27 ^ 1, v36, v30, v35, v26, v29);
  KeyPath = swift_getKeyPath(&unk_100721BE8);
  if (qword_1009CE3D8 != -1)
    swift_once(&qword_1009CE3D8, sub_1003E7330);
  v38 = type metadata accessor for RoundedRectangle(0);
  v39 = sub_100048F64(v38, (uint64_t)qword_1009E1008);
  v40 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  v41 = sub_10004CFD4(&qword_1009E1200);
  sub_10002CD84(v39, (uint64_t)v40 + *(int *)(v41 + 28), (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *v40 = KeyPath;
  sub_100025B3C((uint64_t)v15, (uint64_t)v18, &qword_1009E11C8);
  v42 = swift_getKeyPath(&unk_100721C10);
  if (qword_1009CE3E0 != -1)
    swift_once(&qword_1009CE3E0, sub_1003E73EC);
  v43 = qword_1009E1020;
  sub_10000B5E4((uint64_t)v18, (uint64_t)v20, &qword_1009E11D0);
  v44 = (uint64_t *)&v20[*(int *)(v77 + 36)];
  *v44 = v42;
  v44[1] = v43;
  swift_retain(v43);
  v45 = sub_100010960((uint64_t)v18, &qword_1009E11D0);
  v46 = static Color.clear.getter(v45);
  LOBYTE(v43) = static Edge.Set.all.getter(v47);
  sub_10000B5E4((uint64_t)v20, (uint64_t)v22, &qword_1009E11D8);
  v48 = v78;
  v49 = &v22[*(int *)(v78 + 36)];
  *(_QWORD *)v49 = v46;
  v49[8] = v43;
  v50 = sub_100010960((uint64_t)v20, &qword_1009E11D8);
  static AccessibilityActionKind.escape.getter(v50);
  v51 = v97;
  v52 = v81;
  sub_10002CD84(v97, v81, type metadata accessor for ReadingSettingsView);
  v53 = *(unsigned __int8 *)(v79 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = swift_allocObject(&unk_100903348, v54 + v80, v53 | 7);
  sub_10002C960(v52, v55 + v54, type metadata accessor for ReadingSettingsView);
  v56 = sub_1003EECCC();
  View.accessibilityAction(_:_:)(v12, sub_1003EECC0, v55, v48, v56);
  v57 = swift_release(v55);
  (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v12, v83, v57);
  v58 = sub_100010960((uint64_t)v22, &qword_1009E11E0);
  v59 = v88;
  static AccessibilityChildBehavior.contain.getter(v58);
  v60 = sub_1003EEE70();
  v61 = v85;
  v62 = v84;
  View.accessibilityElement(children:)(v59, v84, v60);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v91);
  sub_100010960((uint64_t)v24, &qword_1009E11E8);
  v63 = v92;
  v64 = v94;
  Bindable.projectedValue.getter(v94);
  v65 = swift_getKeyPath(&unk_100721C38);
  v66 = v96;
  Bindable<A>.subscript.getter(v96, v65, v64);
  v67 = swift_release(v65);
  (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v63, v64, v67);
  v68 = swift_getKeyPath(&unk_100721C68);
  Binding.subscript.getter(v100, v68, v95);
  swift_release(v68);
  v69 = sub_100010960((uint64_t)v66, &qword_1009D8340);
  v70 = v100[0];
  v71 = v100[1];
  v72 = v101;
  __chkstk_darwin(v69);
  *(&v77 - 2) = v51;
  v99[0] = v62;
  v99[1] = v60;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v99, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v74 = v87;
  View.alert(isPresented:content:)(v70, v71, v72, sub_1003EEF68, &v77 - 4, v87, OpaqueTypeConformance2);
  swift_release(v71);
  v75 = swift_release(v70);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v86 + 8))(v61, v74, v75);
}

uint64_t sub_1003E8B78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GeometryProxy.size.getter();
  *a1 = v3;
  return result;
}

double sub_1003E8BA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = *a1;
  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ReadingSettingsView(0) + 96));
  v4 = *v3;
  v5 = *((_BYTE *)v3 + 8);
  v6 = v3[2];
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v9 = v2;
  v10 = 0;
  v7 = sub_10004CFD4(&qword_1009E1198);
  *(_QWORD *)&result = State.wrappedValue.setter(&v9, v7).n128_u64[0];
  return result;
}

double sub_1003E8C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  __int128 v11;

  v4 = type metadata accessor for ReadingSettingsView(0);
  v5 = (_QWORD *)(a2 + *(int *)(v4 + 80));
  v7 = v5[1];
  *(_QWORD *)&v11 = *v5;
  v6 = v11;
  *((_QWORD *)&v11 + 1) = v7;
  v8 = sub_10004CFD4(&qword_1009E11A0);
  State.wrappedValue.getter(&v10);
  v11 = *(_OWORD *)(a2 + *(int *)(v4 + 84));
  State.wrappedValue.setter(&v10, v8);
  *(_QWORD *)&v11 = v6;
  *((_QWORD *)&v11 + 1) = v7;
  v10 = a1;
  *(_QWORD *)&result = State.wrappedValue.setter(&v10, v8).n128_u64[0];
  return result;
}

uint64_t sub_1003E8CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  char v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BOOL4 v47;
  _BYTE *v48;
  uint64_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  _BOOL4 v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  char v67;
  void (*v68)(_BYTE *, uint64_t);
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_BYTE *, uint64_t);
  _BYTE v80[4];
  _BOOL4 v81;
  _BOOL4 v82;
  _BOOL4 v83;
  _BYTE *v84;
  void (*v85)(_BYTE *, _QWORD, uint64_t);
  void (*v86)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  __int128 v100;
  _QWORD v101[2];

  v1 = v0;
  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  v97 = v2;
  v98 = v3;
  __chkstk_darwin(v2);
  v92 = &v80[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v5);
  v7 = &v80[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v99 = &v80[-v9];
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v10);
  v12 = &v80[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v80[-v14];
  __chkstk_darwin(v16);
  v94 = &v80[-v17];
  __chkstk_darwin(v18);
  v93 = &v80[-v19];
  __chkstk_darwin(v20);
  v96 = &v80[-v21];
  __chkstk_darwin(v22);
  v95 = &v80[-v23];
  v24 = (int *)type metadata accessor for ReadingSettingsView(0);
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  v27 = &v80[-v26];
  __chkstk_darwin(v28);
  v30 = &v80[-v29];
  __chkstk_darwin(v31);
  v33 = &v80[-v32];
  __chkstk_darwin(v34);
  v37 = &v80[-v36];
  if ((*(_BYTE *)(v1 + *(int *)(v38 + 28)) & 1) != 0)
    goto LABEL_2;
  v90 = v35;
  v91 = v5;
  v89 = v15;
  v40 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v41 = objc_msgSend(v40, "userInterfaceIdiom");

  sub_10002CD84(v1, (uint64_t)v37, type metadata accessor for ReadingSettingsView);
  v87 = v41;
  v88 = v7;
  v84 = v12;
  if (v41)
  {
    sub_10002C8F0((uint64_t)v37, type metadata accessor for ReadingSettingsView);
  }
  else
  {
    v42 = *(_QWORD *)&v37[v24[9] + 8];
    KeyPath = swift_getKeyPath(&unk_100721D70);
    v44 = swift_getKeyPath(&unk_100721D98);
    static Published.subscript.getter(&v100, v42, KeyPath);
    swift_release(KeyPath);
    swift_release(v44);
    LOBYTE(v44) = v100;
    sub_10002C8F0((uint64_t)v37, type metadata accessor for ReadingSettingsView);
    if ((v44 & 1) != 0)
      goto LABEL_2;
  }
  v45 = v24[20];
  v100 = *(_OWORD *)(v1 + v45);
  sub_10004CFD4(&qword_1009E11A0);
  State.wrappedValue.getter(v101);
  v46 = v101[0];
  sub_10002CD84(v1, (uint64_t)v33, type metadata accessor for ReadingSettingsView);
  if (v46 == 3)
  {
    v47 = 1;
  }
  else
  {
    v100 = *(_OWORD *)&v33[v24[20]];
    State.wrappedValue.getter(v101);
    v47 = v101[0] == 4;
  }
  v83 = v47;
  v48 = v96;
  sub_10002C8F0((uint64_t)v33, type metadata accessor for ReadingSettingsView);
  v100 = *(_OWORD *)(v1 + v24[21]);
  State.wrappedValue.getter(v101);
  v49 = v101[0];
  sub_10002CD84(v1, (uint64_t)v30, type metadata accessor for ReadingSettingsView);
  if (v49 == 3)
  {
    v50 = 1;
  }
  else
  {
    v100 = *(_OWORD *)&v30[v24[21]];
    State.wrappedValue.getter(v101);
    v50 = v101[0] == 4;
  }
  v82 = v50;
  v51 = v97;
  sub_10002C8F0((uint64_t)v30, type metadata accessor for ReadingSettingsView);
  v100 = *(_OWORD *)(v1 + v45);
  State.wrappedValue.getter(v101);
  v52 = v101[0];
  sub_10002CD84(v1, (uint64_t)v27, type metadata accessor for ReadingSettingsView);
  if (v52 == 5)
  {
    v53 = 1;
  }
  else
  {
    v100 = *(_OWORD *)&v27[v24[20]];
    State.wrappedValue.getter(v101);
    v53 = v101[0] == 6;
  }
  v81 = v53;
  v54 = v90;
  v55 = v99;
  sub_10002C8F0((uint64_t)v27, type metadata accessor for ReadingSettingsView);
  v56 = v95;
  sub_100667DCC((uint64_t)v95);
  v57 = v98;
  v85 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v98 + 104);
  v85(v48, enum case for UserInterfaceSizeClass.regular(_:), v51);
  v86 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v57 + 56);
  v86(v48, 0, 1, v51);
  v58 = (uint64_t)&v55[*(int *)(v91 + 48)];
  sub_10000B5E4((uint64_t)v56, (uint64_t)v99, (uint64_t *)&unk_1009D8210);
  v59 = (uint64_t)v48;
  v60 = (uint64_t)v48;
  v61 = v99;
  sub_10000B5E4(v59, v58, (uint64_t *)&unk_1009D8210);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v62((uint64_t)v61, 1, v51) == 1)
  {
    sub_100010960(v60, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v56, (uint64_t *)&unk_1009D8210);
    if (v62(v58, 1, v51) == 1)
    {
      sub_100010960((uint64_t)v99, (uint64_t *)&unk_1009D8210);
      sub_10002CD84(v1, v54, type metadata accessor for ReadingSettingsView);
LABEL_22:
      sub_10002C8F0(v54, type metadata accessor for ReadingSettingsView);
LABEL_26:
      v39 = 1;
      return v39 & 1;
    }
    goto LABEL_20;
  }
  v63 = v93;
  sub_10000B5E4((uint64_t)v61, (uint64_t)v93, (uint64_t *)&unk_1009D8210);
  if (v62(v58, 1, v51) == 1)
  {
    sub_100010960((uint64_t)v96, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v95, (uint64_t *)&unk_1009D8210);
    (*(void (**)(_BYTE *, uint64_t))(v98 + 8))(v63, v51);
LABEL_20:
    sub_100010960((uint64_t)v99, &qword_1009D3C08);
    sub_10002CD84(v1, v54, type metadata accessor for ReadingSettingsView);
    goto LABEL_23;
  }
  v64 = v98;
  v65 = v92;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v98 + 32))(v92, v58, v51);
  v66 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v67 = dispatch thunk of static Equatable.== infix(_:_:)(v63, v65, v51, v66);
  v68 = *(void (**)(_BYTE *, uint64_t))(v64 + 8);
  v54 = v90;
  v68(v65, v97);
  sub_100010960((uint64_t)v96, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v95, (uint64_t *)&unk_1009D8210);
  v68(v63, v97);
  v51 = v97;
  sub_100010960((uint64_t)v61, (uint64_t *)&unk_1009D8210);
  sub_10002CD84(v1, v54, type metadata accessor for ReadingSettingsView);
  if ((v67 & 1) != 0)
    goto LABEL_22;
LABEL_23:
  v69 = v94;
  sub_100667DCC((uint64_t)v94);
  v70 = (uint64_t)v89;
  v85(v89, enum case for UserInterfaceSizeClass.compact(_:), v51);
  v86((_BYTE *)v70, 0, 1, v51);
  v71 = (uint64_t)v88;
  v72 = (uint64_t)&v88[*(int *)(v91 + 48)];
  sub_10000B5E4((uint64_t)v69, (uint64_t)v88, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4(v70, v72, (uint64_t *)&unk_1009D8210);
  if (v62(v71, 1, v51) == 1)
  {
    sub_100010960(v70, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v69, (uint64_t *)&unk_1009D8210);
    sub_10002C8F0(v54, type metadata accessor for ReadingSettingsView);
    if (v62(v72, 1, v51) == 1)
    {
      sub_100010960(v71, (uint64_t *)&unk_1009D8210);
      goto LABEL_26;
    }
LABEL_29:
    sub_100010960(v71, &qword_1009D3C08);
    if (!v87)
    {
LABEL_33:
      v39 = v83 || v82 && v81;
      return v39 & 1;
    }
LABEL_2:
    v39 = 0;
    return v39 & 1;
  }
  v73 = (uint64_t)v84;
  sub_10000B5E4(v71, (uint64_t)v84, (uint64_t *)&unk_1009D8210);
  if (v62(v72, 1, v51) == 1)
  {
    sub_100010960((uint64_t)v89, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v69, (uint64_t *)&unk_1009D8210);
    sub_10002C8F0(v90, type metadata accessor for ReadingSettingsView);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v73, v51);
    goto LABEL_29;
  }
  v74 = v98;
  v75 = v92;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v98 + 32))(v92, v72, v51);
  v76 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v39 = dispatch thunk of static Equatable.== infix(_:_:)(v73, v75, v51, v76);
  v77 = v51;
  v78 = *(void (**)(_BYTE *, uint64_t))(v74 + 8);
  v78(v75, v77);
  sub_100010960((uint64_t)v89, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v69, (uint64_t *)&unk_1009D8210);
  sub_10002C8F0(v90, type metadata accessor for ReadingSettingsView);
  v78((_BYTE *)v73, v77);
  sub_100010960(v71, (uint64_t *)&unk_1009D8210);
  if ((v39 & 1) == 0 && !v87)
    goto LABEL_33;
  return v39 & 1;
}

uint64_t sub_1003E9634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v7);
  v30 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - v13;
  v15 = type metadata accessor for ReadingSettingsView(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009E1050);
  Bindable.wrappedValue.getter(&v31, v18);
  swift_release(v31);
  v19 = (uint64_t *)&unk_1009D8210;
  sub_10002CD84(v0, (uint64_t)v17, type metadata accessor for ReadingSettingsView);
  sub_100667DCC((uint64_t)v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v11, enum case for UserInterfaceSizeClass.regular(_:), v1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
  v20 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10000B5E4((uint64_t)v14, (uint64_t)v6, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v11, v20, (uint64_t *)&unk_1009D8210);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v21((uint64_t)v6, 1, v1) == 1)
  {
    sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009D8210);
    sub_10002C8F0((uint64_t)v17, type metadata accessor for ReadingSettingsView);
    if (v21(v20, 1, v1) == 1)
    {
      v22 = -1;
    }
    else
    {
      v19 = &qword_1009D3C08;
      v22 = 0;
    }
  }
  else
  {
    v23 = v30;
    sub_10000B5E4((uint64_t)v6, v30, (uint64_t *)&unk_1009D8210);
    if (v21(v20, 1, v1) == 1)
    {
      sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009D8210);
      sub_10002C8F0((uint64_t)v17, type metadata accessor for ReadingSettingsView);
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v23, v1);
      v22 = 0;
      v19 = &qword_1009D3C08;
    }
    else
    {
      v24 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v29, v20, v1);
      v25 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v24, v1, v25);
      v26 = *(void (**)(char *, uint64_t))(v2 + 8);
      v26(v24, v1);
      v19 = (uint64_t *)&unk_1009D8210;
      sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009D8210);
      sub_10002C8F0((uint64_t)v17, type metadata accessor for ReadingSettingsView);
      v26((char *)v23, v1);
    }
  }
  sub_100010960((uint64_t)v6, v19);
  return v22 & 1;
}

uint64_t sub_1003E99E0@<X0>(uint64_t a1@<X0>, double a2@<X1>, int a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char v60;
  void (*v61)(char *, uint64_t);
  unsigned int *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  void *v75;
  uint64_t v76;
  char v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[42];
  _QWORD v101[2];
  char v102;
  _BYTE v103[319];
  _BYTE v104[312];
  _BYTE v105[328];
  _BYTE v106[319];

  LODWORD(v81) = a3;
  v82 = a2;
  v95 = a4;
  v89 = type metadata accessor for ColorScheme(0);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v85 = (uint64_t)&v79 - v15;
  v16 = type metadata accessor for BlendMode(0);
  v90 = *(_QWORD *)(v16 - 8);
  v91 = v16;
  __chkstk_darwin(v16);
  v88 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for ReadingSettingsView(0);
  v80 = *(_QWORD *)(v83 - 8);
  v18 = *(_QWORD *)(v80 + 64);
  __chkstk_darwin(v83);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CustomizeThemeButton(0);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_10004CFD4(&qword_1009E1258);
  __chkstk_darwin(v84);
  v94 = (uint64_t)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v79 - v25;
  __chkstk_darwin(v27);
  v92 = (uint64_t)&v79 - v28;
  v29 = sub_10004CFD4(&qword_1009E1260);
  __chkstk_darwin(v29);
  v93 = (uint64_t)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v79 - v32;
  v34 = sub_10004CFD4(&qword_1009E1268);
  __chkstk_darwin(v34);
  v99 = (uint64_t)&v79 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v38 = (double *)((char *)&v79 - v37);
  __chkstk_darwin(v39);
  v41 = (char *)&v79 - v40;
  v42 = sub_10004CFD4(&qword_1009E1270);
  __chkstk_darwin(v42);
  v98 = (uint64_t)&v79 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v96 = (uint64_t)&v79 - v45;
  v46 = sub_1003EA128((uint64_t)&v79 - v45);
  *(_QWORD *)v38 = static HorizontalAlignment.center.getter(v46);
  v38[1] = a5;
  *((_BYTE *)v38 + 16) = 0;
  v47 = sub_10004CFD4(&qword_1009E1278);
  sub_1003EA530(a1, (uint64_t)v38 + *(int *)(v47 + 44));
  v97 = v41;
  sub_100025B3C((uint64_t)v38, (uint64_t)v41, &qword_1009E1268);
  v48 = sub_1003E9634();
  if ((v48 & 1) != 0)
  {
    Divider.init()(v48);
    v49 = type metadata accessor for Divider(0);
    v50 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v33, 0, 1, v49);
  }
  else
  {
    v51 = type metadata accessor for Divider(0);
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v33, 1, 1, v51);
  }
  v52 = v81 & 1;
  v81 = static HorizontalAlignment.center.getter(v50);
  sub_1003EB098(v82, v52, a1, (uint64_t)v104, a6, a7, a8);
  v105[320] = 0;
  memcpy(&v105[7], v104, 0x138uLL);
  LODWORD(v82) = 0;
  memcpy(v106, v105, sizeof(v106));
  sub_10002CD84(a1, (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReadingSettingsView);
  v53 = *(unsigned __int8 *)(v80 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = swift_allocObject(&unk_1009033C0, v54 + v18, v53 | 7);
  sub_10002C960((uint64_t)v19, v55 + v54, type metadata accessor for ReadingSettingsView);
  sub_10060167C((uint64_t)sub_1003F2530, v55, v22);
  v56 = v85;
  sub_10066848C(v85);
  v58 = v86;
  v57 = v87;
  v59 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, enum case for ColorScheme.dark(_:), v89);
  v60 = static ColorScheme.== infix(_:_:)(v56, v58);
  v61 = *(void (**)(char *, uint64_t))(v57 + 8);
  v61(v58, v59);
  v61((char *)v56, v59);
  v62 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  v64 = v90;
  v63 = v91;
  if ((v60 & 1) == 0)
    v62 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  v65 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v88, *v62, v91);
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(&v26[*(int *)(v84 + 36)], v65, v63);
  sub_10002CD84((uint64_t)v22, (uint64_t)v26, type metadata accessor for CustomizeThemeButton);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v63);
  sub_10002C8F0((uint64_t)v22, type metadata accessor for CustomizeThemeButton);
  v66 = v92;
  sub_100025B3C((uint64_t)v26, v92, &qword_1009E1258);
  v67 = v98;
  sub_10000B5E4(v96, v98, &qword_1009E1270);
  v68 = v99;
  sub_10000B5E4((uint64_t)v97, v99, &qword_1009E1268);
  v69 = (uint64_t)v33;
  v70 = (uint64_t)v33;
  v71 = v93;
  sub_10000B5E4(v70, v93, &qword_1009E1260);
  v72 = v94;
  sub_10000B5E4(v66, v94, &qword_1009E1258);
  v73 = v95;
  sub_10000B5E4(v67, v95, &qword_1009E1270);
  v74 = (int *)sub_10004CFD4(&qword_1009E1280);
  sub_10000B5E4(v68, v73 + v74[12], &qword_1009E1268);
  sub_10000B5E4(v71, v73 + v74[16], &qword_1009E1260);
  v75 = (void *)(v73 + v74[20]);
  v76 = v81;
  v100[0] = v81;
  v100[1] = 0;
  v77 = LOBYTE(v82);
  LOBYTE(v100[2]) = LOBYTE(v82);
  memcpy((char *)&v100[2] + 1, v106, 0x13FuLL);
  memcpy(v75, v100, 0x150uLL);
  sub_10000B5E4(v72, v73 + v74[24], &qword_1009E1258);
  sub_1003F2578(v100);
  sub_100010960(v66, &qword_1009E1258);
  sub_100010960(v69, &qword_1009E1260);
  sub_100010960((uint64_t)v97, &qword_1009E1268);
  sub_100010960(v96, &qword_1009E1270);
  sub_100010960(v72, &qword_1009E1258);
  v101[0] = v76;
  v101[1] = 0;
  v102 = v77;
  memcpy(v103, v106, sizeof(v103));
  sub_1003F25CC(v101);
  sub_100010960(v71, &qword_1009E1260);
  sub_100010960(v99, &qword_1009E1268);
  return sub_100010960(v98, &qword_1009E1270);
}

uint64_t sub_1003EA128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a1;
  v2 = sub_10004CFD4(&qword_1009E13D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10004CFD4(&qword_1009E13D8);
  __chkstk_darwin(v57);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - v8;
  v55 = sub_10004CFD4(&qword_1009E13E0);
  __chkstk_darwin(v55);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009E13E8);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_10004CFD4(&qword_1009E13F0);
  __chkstk_darwin(v56);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v55 - v18;
  v20 = sub_1003EC2AC();
  v22 = v21;
  v23 = type metadata accessor for ReadingSettingsView(0);
  if (*(_BYTE *)(v1 + *(int *)(v23 + 28)) == 1)
  {
    v59 = v20;
    v60 = v22;
    v24 = sub_1003978CC();
    View.accessibilityHidden(_:)(1, &type metadata for PopoverHeader, v24);
    swift_bridgeObjectRelease(v22);
    v26 = static Edge.Set.bottom.getter(v25);
    v27 = EdgeInsets.init(_all:)(12.0);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009E13E8);
    v34 = v56;
    v35 = &v16[*(int *)(v56 + 36)];
    *v35 = v26;
    *((double *)v35 + 1) = v27;
    *((_QWORD *)v35 + 2) = v29;
    *((_QWORD *)v35 + 3) = v31;
    *((_QWORD *)v35 + 4) = v33;
    v35[40] = 0;
    sub_100010960((uint64_t)v14, &qword_1009E13E8);
    v36 = &qword_1009E13F0;
    sub_100025B3C((uint64_t)v16, (uint64_t)v19, &qword_1009E13F0);
    sub_10000B5E4((uint64_t)v19, (uint64_t)v11, &qword_1009E13F0);
    swift_storeEnumTagMultiPayload(v11, v55, 0);
    v37 = sub_1001F5558(&qword_1009E1400, &qword_1009E13F0, (void (*)(void))sub_1003F3234);
    v38 = sub_1003F32B8();
    _ConditionalContent<>.init(storage:)(v11, v34, v57, v37, v38);
    v39 = (uint64_t)v19;
  }
  else
  {
    *(_QWORD *)v4 = static VerticalAlignment.center.getter(v23);
    *((_QWORD *)v4 + 1) = 0;
    v4[16] = 1;
    v40 = sub_10004CFD4(&qword_1009E13F8);
    sub_1003EC474(v20, v22, v1, (uint64_t)&v4[*(int *)(v40 + 44)]);
    swift_bridgeObjectRelease(v22);
    v42 = static Edge.Set.bottom.getter(v41);
    v43 = EdgeInsets.init(_all:)(12.0);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    sub_10000B5E4((uint64_t)v4, (uint64_t)v6, &qword_1009E13D0);
    v50 = v57;
    v51 = &v6[*(int *)(v57 + 36)];
    *v51 = v42;
    *((double *)v51 + 1) = v43;
    *((_QWORD *)v51 + 2) = v45;
    *((_QWORD *)v51 + 3) = v47;
    *((_QWORD *)v51 + 4) = v49;
    v51[40] = 0;
    sub_100010960((uint64_t)v4, &qword_1009E13D0);
    v36 = &qword_1009E13D8;
    sub_100025B3C((uint64_t)v6, (uint64_t)v9, &qword_1009E13D8);
    sub_10000B5E4((uint64_t)v9, (uint64_t)v11, &qword_1009E13D8);
    swift_storeEnumTagMultiPayload(v11, v55, 1);
    v52 = sub_1001F5558(&qword_1009E1400, &qword_1009E13F0, (void (*)(void))sub_1003F3234);
    v53 = sub_1003F32B8();
    _ConditionalContent<>.init(storage:)(v11, v56, v50, v52, v53);
    v39 = (uint64_t)v9;
  }
  return sub_100010960(v39, v36);
}

uint64_t sub_1003EA530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD);
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  char v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE *v45;
  uint64_t v46;
  unsigned int *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  void (*v53)(_BYTE *, uint64_t);
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  char v59;
  unsigned int *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  double *v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v85[4];
  unsigned int v86;
  void (*v87)(_BYTE *, _QWORD, uint64_t);
  void (*v88)(_BYTE *, _QWORD, uint64_t);
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;

  v103 = a2;
  v3 = type metadata accessor for ModernSlider(0);
  __chkstk_darwin(v3);
  v92 = &v85[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v91 = sub_10004CFD4(&qword_1009E1290);
  __chkstk_darwin(v91);
  v95 = &v85[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = sub_10004CFD4(&qword_1009E1298);
  v99 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v94 = &v85[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v93 = &v85[-v8];
  v9 = sub_10004CFD4(&qword_1009E12A0);
  __chkstk_darwin(v9);
  v102 = &v85[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v100 = &v85[-v12];
  v105 = type metadata accessor for ColorScheme(0);
  v13 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = &v85[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v85[-v16];
  v106 = type metadata accessor for BlendMode(0);
  v97 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v90 = &v85[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v21 = &v85[-v20];
  v22 = sub_10004CFD4(&qword_1009E12A8);
  __chkstk_darwin(v22);
  v24 = &v85[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = sub_10004CFD4(&qword_1009E12B0);
  __chkstk_darwin(v25);
  v27 = &v85[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = sub_10004CFD4(&qword_1009E12B8);
  __chkstk_darwin(v96);
  v98 = &v85[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v29);
  v31 = &v85[-v30];
  __chkstk_darwin(v32);
  v35 = &v85[-v34];
  if (qword_1009CE3B0 != -1)
    v33 = swift_once(&qword_1009CE3B0, sub_1003E72E0);
  v36 = qword_1009E0FE0;
  *(_QWORD *)v24 = static VerticalAlignment.center.getter(v33);
  *((_QWORD *)v24 + 1) = v36;
  v24[16] = 0;
  v37 = sub_10004CFD4(&qword_1009E12C0);
  sub_1003ECB9C(a1, (uint64_t)&v24[*(int *)(v37 + 44)]);
  sub_10000B5E4((uint64_t)v24, (uint64_t)v27, &qword_1009E12A8);
  *(_WORD *)&v27[*(int *)(v25 + 36)] = 256;
  sub_100010960((uint64_t)v24, &qword_1009E12A8);
  v89 = a1 + *(int *)(type metadata accessor for ReadingSettingsView(0) + 44);
  sub_10066848C((uint64_t)v17);
  v38 = *(void (**)(_QWORD))(v13 + 104);
  v39 = v13;
  v40 = v17;
  v41 = v104;
  v86 = enum case for ColorScheme.dark(_:);
  v42 = v105;
  v88 = (void (*)(_BYTE *, _QWORD, uint64_t))v38;
  v38(v104);
  v43 = static ColorScheme.== infix(_:_:)(v40, v41);
  v44 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
  v45 = v41;
  v46 = (uint64_t)v40;
  v44(v45, v42);
  v44(v40, v42);
  v47 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  v48 = v97;
  v49 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v97 + 104);
  if ((v43 & 1) == 0)
    v47 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
  v50 = *v47;
  v51 = v106;
  v87 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v97 + 104);
  v49(v21, v50, v106);
  v52 = &v31[*(int *)(v96 + 36)];
  v96 = *(_QWORD *)(v48 + 16);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v96)(v52, v21, v51);
  sub_10000B5E4((uint64_t)v27, (uint64_t)v31, &qword_1009E12B0);
  v53 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
  v53(v21, v51);
  sub_100010960((uint64_t)v27, &qword_1009E12B0);
  sub_100025B3C((uint64_t)v31, (uint64_t)v35, &qword_1009E12B8);
  v54 = (uint64_t)v35;
  if ((sub_1003E9634() & 1) != 0)
  {
    v55 = v92;
    sub_1003EAC80((uint64_t)v92);
    sub_10066848C(v46);
    v56 = v46;
    v58 = v104;
    v57 = v105;
    v88(v104, v86, v105);
    v59 = static ColorScheme.== infix(_:_:)(v56, v58);
    v44(v58, v57);
    v44((_BYTE *)v56, v57);
    v60 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    if ((v59 & 1) == 0)
      v60 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    v61 = v90;
    v62 = v106;
    v87(v90, *v60, v106);
    v63 = (uint64_t)v95;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v96)(&v95[*(int *)(v91 + 36)], v61, v62);
    sub_10002CD84((uint64_t)v55, v63, type metadata accessor for ModernSlider);
    v53(v61, v62);
    v64 = (uint64_t)v55;
    v54 = (uint64_t)v35;
    v65 = sub_10002C8F0(v64, type metadata accessor for ModernSlider);
    v66 = static Edge.Set.bottom.getter(v65);
    v67 = EdgeInsets.init(_all:)(4.0);
    v69 = v68;
    v71 = v70;
    v73 = v72;
    v74 = v94;
    sub_10000B5E4(v63, (uint64_t)v94, &qword_1009E1290);
    v75 = v101;
    v76 = (double *)&v74[*(int *)(v101 + 36)];
    *(_BYTE *)v76 = v66;
    v76[1] = v67;
    *((_QWORD *)v76 + 2) = v69;
    *((_QWORD *)v76 + 3) = v71;
    *((_QWORD *)v76 + 4) = v73;
    *((_BYTE *)v76 + 40) = 0;
    sub_100010960(v63, &qword_1009E1290);
    v77 = v93;
    sub_100025B3C((uint64_t)v74, (uint64_t)v93, &qword_1009E1298);
    v78 = v100;
    sub_100025B3C((uint64_t)v77, (uint64_t)v100, &qword_1009E1298);
    v79 = 0;
  }
  else
  {
    v79 = 1;
    v78 = v100;
    v75 = v101;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v78, v79, 1, v75);
  v80 = v98;
  sub_10000B5E4(v54, (uint64_t)v98, &qword_1009E12B8);
  v81 = v102;
  sub_10000B5E4((uint64_t)v78, (uint64_t)v102, &qword_1009E12A0);
  v82 = v103;
  sub_10000B5E4((uint64_t)v80, v103, &qword_1009E12B8);
  v83 = sub_10004CFD4(&qword_1009E12C8);
  sub_10000B5E4((uint64_t)v81, v82 + *(int *)(v83 + 48), &qword_1009E12A0);
  sub_100010960((uint64_t)v78, &qword_1009E12A0);
  sub_100010960(v54, &qword_1009E12B8);
  sub_100010960((uint64_t)v81, &qword_1009E12A0);
  return sub_100010960((uint64_t)v80, &qword_1009E12B8);
}

_QWORD *sub_1003EAC80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD v58[5];

  v57 = a1;
  v1 = sub_10004CFD4(&qword_1009D3A10);
  __chkstk_darwin(v1);
  v56 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ReadingSettingsView(0);
  v3 = *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64);
  v54 = *(_QWORD *)(v46 - 8);
  v55 = v3;
  __chkstk_darwin(v46);
  v50 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_10004CFD4(&qword_1009E1050);
  v47 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v43 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v43 - v19;
  v53 = static Color.primary.getter(v21);
  v52 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v51 = static Color.primary.getter(v52);
  v49 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v22 = String.LocalizationValue.init(stringLiteral:)(0x656E746867697242, 0xEA00000000007373);
  static Locale.current.getter(v22);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  v23 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v44 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v25, v10, "Accessibility string for a slider that controls the brightness", 62, 2);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v28 = v45;
  v29 = v48;
  Bindable.projectedValue.getter(v45);
  KeyPath = swift_getKeyPath(&unk_100721CC8);
  Bindable<A>.subscript.getter(v58, KeyPath, v28);
  v31 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v6, v28, v31);
  v32 = v58[0];
  v33 = v58[1];
  v34 = *(double *)&v58[2];
  v35 = v50;
  sub_10002CD84(v29, v50, type metadata accessor for ReadingSettingsView);
  v36 = *(unsigned __int8 *)(v54 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = swift_allocObject(&unk_1009034B0, v37 + v55, v36 | 7);
  v39 = sub_10002C960(v35, v38 + v37, type metadata accessor for ReadingSettingsView);
  v40 = (uint64_t)v56;
  AccessibilityFocusState.init<>()(v39);
  *((_QWORD *)&v42 + 1) = v27;
  *(_QWORD *)&v42 = v44;
  return sub_10054B914(0x2E6E696D2E6E7573, 0xEC0000006C6C6966, 0x2E78616D2E6E7573, 0xEC0000006C6C6966, v53, v52, v51, v49, v57, v34, 0.0, 44.0, 7.0, 16.0, 0.0, 1.0, v42, 0, 128,
           v32,
           v33,
           0,
           0,
           1u,
           v40,
           (uint64_t)sub_1003F2798,
           v38);
}

double sub_1003EB098@<D0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  double result;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  double v55;
  _OWORD v56[8];
  _OWORD v57[2];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  v55 = a1;
  v13 = a2 & 1;
  v54 = a2 & 1;
  v14 = type metadata accessor for GridItem.Size(0);
  v51 = *(_QWORD *)(v14 - 8);
  v52 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ReadingSettingsView(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = static Alignment.center.getter(v21);
  sub_1005F2AA4(0.0, 1, 0.0, 1, 0.0, 1, a1, v13, (uint64_t)v56, 0.0, 1, 0.0, 1, v22, v23, 0, 1);
  v24 = sub_10004CFD4(&qword_1009E1048);
  v25 = Bindable.wrappedValue.getter(v57, v24);
  v26 = *(_QWORD *)&v57[0];
  v53 = ReadingSettingsViewModel.themes.getter(v25);
  swift_release(v26);
  sub_10002CD84(a3, (uint64_t)v20, type metadata accessor for ReadingSettingsView);
  v27 = *(unsigned __int8 *)(v18 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = v28 + v19;
  v30 = v27 | 7;
  v50 = swift_allocObject(&unk_1009033E8, v28 + v19, v27 | 7);
  sub_10002C960((uint64_t)v20, v50 + v28, type metadata accessor for ReadingSettingsView);
  v31 = sub_10004CFD4(&qword_1009E1288);
  v32 = *(_QWORD *)(type metadata accessor for GridItem(0) - 8);
  v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72), *(unsigned __int8 *)(v32 + 80) | 7);
  *(_OWORD *)(v33 + 16) = xmmword_10070CCA0;
  *(double *)v16 = a5;
  *((_QWORD *)v16 + 1) = 0x7FF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v16, enum case for GridItem.Size.adaptive(_:), v52);
  GridItem.init(_:spacing:alignment:)(v16, *(_QWORD *)&a6, 0, 0, 0, 1);
  sub_10002CD84(a3, (uint64_t)v20, type metadata accessor for ReadingSettingsView);
  v34 = swift_allocObject(&unk_100903410, v29, v30);
  v35 = sub_10002C960((uint64_t)v20, v34 + v28, type metadata accessor for ReadingSettingsView);
  v36 = static Alignment.center.getter(v35);
  sub_1005F2AA4(0.0, 1, 0.0, 1, 0.0, 1, v55, v54, (uint64_t)v57, 0.0, 1, 0.0, 1, v36, v37, 0, 1);
  v38 = v56[5];
  *(_OWORD *)(a4 + 64) = v56[4];
  *(_OWORD *)(a4 + 80) = v38;
  v39 = v56[7];
  *(_OWORD *)(a4 + 96) = v56[6];
  *(_OWORD *)(a4 + 112) = v39;
  v40 = v56[1];
  *(_OWORD *)a4 = v56[0];
  *(_OWORD *)(a4 + 16) = v40;
  v41 = v56[3];
  *(_OWORD *)(a4 + 32) = v56[2];
  *(_OWORD *)(a4 + 48) = v41;
  *(_QWORD *)(a4 + 128) = v53;
  *(_QWORD *)(a4 + 136) = v33;
  *(double *)(a4 + 144) = a7;
  v42 = v50;
  *(_QWORD *)(a4 + 152) = sub_1003F2620;
  *(_QWORD *)(a4 + 160) = v42;
  *(_QWORD *)(a4 + 168) = sub_1003F2670;
  *(_QWORD *)(a4 + 176) = v34;
  v43 = v61;
  *(_OWORD *)(a4 + 248) = v60;
  v44 = v62;
  v45 = v63;
  *(_OWORD *)(a4 + 264) = v43;
  *(_OWORD *)(a4 + 280) = v44;
  *(_OWORD *)(a4 + 296) = v45;
  v46 = v57[1];
  *(_OWORD *)(a4 + 184) = v57[0];
  *(_OWORD *)(a4 + 200) = v46;
  result = *(double *)&v58;
  v48 = v59;
  *(_OWORD *)(a4 + 216) = v58;
  *(_OWORD *)(a4 + 232) = v48;
  return result;
}

double sub_1003EB428@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v5 = *a1;
  v6 = type metadata accessor for ReadingSettingsView(0);
  sub_1003EB4B0(v5, *(_QWORD *)(a2 + *(int *)(v6 + 24)), *(_QWORD *)(a2 + *(int *)(v6 + 24) + 8), (uint64_t)v11);
  v7 = v15;
  *(_OWORD *)(a3 + 64) = v14;
  *(_OWORD *)(a3 + 80) = v7;
  *(_OWORD *)(a3 + 96) = v16;
  *(_QWORD *)(a3 + 112) = v17;
  v8 = v11[1];
  *(_OWORD *)a3 = v11[0];
  *(_OWORD *)(a3 + 16) = v8;
  result = *(double *)&v12;
  v10 = v13;
  *(_OWORD *)(a3 + 32) = v12;
  *(_OWORD *)(a3 + 48) = v10;
  return result;
}

double sub_1003EB4B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  _BYTE v44[4];
  int v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v5 = v4;
  v50 = a2;
  v51 = a3;
  v8 = type metadata accessor for ReadingSettingsView(0);
  v46 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v46 + 64);
  __chkstk_darwin(v8);
  v49 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v47 = &v44[-v11];
  __chkstk_darwin(v12);
  v14 = &v44[-v13];
  v15 = sub_10004CFD4(&qword_1009E1048);
  v16 = Bindable.wrappedValue.getter(&v52, v15);
  v17 = v52;
  v18 = ReadingSettingsViewModel.currentTheme.getter(v16);
  v19 = swift_release(v17);
  v48 = a1;
  if (!v18)
  {
    BookThemeViewModel.title.getter(v19);
    v26 = v27;
    goto LABEL_7;
  }
  v20 = BookThemeViewModel.title.getter(v19);
  v22 = v21;
  v23 = swift_release(v18);
  v24 = BookThemeViewModel.title.getter(v23);
  v26 = v25;
  if (!v22)
  {
LABEL_7:
    swift_bridgeObjectRelease(v26);
    v45 = 0;
    goto LABEL_9;
  }
  if (v20 == v24 && v22 == v25)
  {
    swift_bridgeObjectRelease_n(v22, 2);
    v45 = 1;
  }
  else
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v25, 0);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v26);
  }
LABEL_9:
  v28 = *(_BYTE *)(v4 + *(int *)(v8 + 28));
  sub_10002CD84(v4, (uint64_t)v14, type metadata accessor for ReadingSettingsView);
  v29 = *(unsigned __int8 *)(v46 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = v30 + v9;
  v32 = v29 | 7;
  v33 = swift_allocObject(&unk_100903438, v30 + v9, v29 | 7);
  sub_10002C960((uint64_t)v14, v33 + v30, type metadata accessor for ReadingSettingsView);
  v34 = v47;
  sub_10002CD84(v5, (uint64_t)v47, type metadata accessor for ReadingSettingsView);
  v35 = swift_allocObject(&unk_100903460, v31, v32);
  sub_10002C960((uint64_t)v34, v35 + v30, type metadata accessor for ReadingSettingsView);
  v36 = v5;
  v37 = v49;
  sub_10002CD84(v36, (uint64_t)v49, type metadata accessor for ReadingSettingsView);
  v38 = swift_allocObject(&unk_100903488, v31, v32);
  sub_10002C960((uint64_t)v37, v38 + v30, type metadata accessor for ReadingSettingsView);
  KeyPath = swift_getKeyPath(&unk_100721C98);
  v40 = v48;
  swift_retain(v48);
  swift_bridgeObjectRetain(v51);
  *(_BYTE *)a4 = v28;
  v41 = v50;
  *(_QWORD *)(a4 + 8) = v40;
  *(_QWORD *)(a4 + 16) = v41;
  *(_QWORD *)(a4 + 24) = v42;
  *(_BYTE *)(a4 + 32) = v45 & 1;
  *(_QWORD *)(a4 + 40) = sub_1003F26CC;
  *(_QWORD *)(a4 + 48) = v33;
  *(_QWORD *)(a4 + 56) = sub_1003F26DC;
  *(_QWORD *)(a4 + 64) = v35;
  *(_QWORD *)(a4 + 72) = sub_1003F26EC;
  *(_QWORD *)(a4 + 80) = v38;
  *(_QWORD *)(a4 + 88) = KeyPath;
  *(_BYTE *)(a4 + 96) = 0;
  result = 15.0;
  *(_OWORD *)(a4 + 104) = xmmword_100721AE0;
  return result;
}

void sub_1003EB7A0(double *a1)
{
  double v1;
  uint64_t v2;
  double v3;

  v1 = ceil(*a1);
  type metadata accessor for ReadingSettingsView(0);
  v2 = sub_10004CFD4(&qword_1009D3CE0);
  State.wrappedValue.getter(&v3);
  if (v1 != v3)
  {
    v3 = v1;
    State.wrappedValue.setter(&v3, v2);
  }
}

double sub_1003EB840(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for ReadingSettingsView(0);
  v2 = sub_10004CFD4(&qword_1009E1048);
  v3 = Bindable.wrappedValue.getter(&v9, v2);
  v4 = v9;
  v5 = ReadingSettingsViewModel.currentTheme.getter(v3);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  if (v5)
  {
    v7 = a1[3];
    v8 = a1[4];
    sub_10003F198(a1, v7);
    dispatch thunk of ReadingSettingsEventHandling.didTapOptions(with:)(v5, v7, v8);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1003EB8DC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_1003F24E8();
  return EnvironmentValues.subscript.getter(a1, &type metadata for ReadingSettingsButtonShape, &type metadata for ReadingSettingsButtonShape, v2);
}

_QWORD *sub_1003EB910@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_1003F24E8();
  return EnvironmentValues.subscript.getter(a1, &type metadata for ReadingSettingsButtonShape, &type metadata for ReadingSettingsButtonShape, v2);
}

uint64_t sub_1003EB94C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - v6;
  sub_10002CD84(a1, (uint64_t)&v10 - v6, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10002CD84((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v8 = sub_1003F24E8();
  EnvironmentValues.subscript.setter(v4, &type metadata for ReadingSettingsButtonShape, &type metadata for ReadingSettingsButtonShape, v8);
  return sub_10002C8F0((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
}

uint64_t sub_1003EBA20()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_1003F24A4();
  EnvironmentValues.subscript.getter(&v2, &type metadata for ReadingSettingsButtonBackground, &type metadata for ReadingSettingsButtonBackground, v0);
  return v2;
}

_QWORD *sub_1003EBA58@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1003F24A4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for ReadingSettingsButtonBackground, &type metadata for ReadingSettingsButtonBackground, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1003EBAA4(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_1003F24A4();
  swift_retain(v3);
  return EnvironmentValues.subscript.setter(&v3, &type metadata for ReadingSettingsButtonBackground, &type metadata for ReadingSettingsButtonBackground, v1);
}

uint64_t sub_1003EBB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for FontDownloadAlert(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return ReadingSettingsViewModel.fontDownloadAlert.setter(v4);
}

uint64_t sub_1003EBB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __n128 v23;
  double (*v24)(char *, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  __n128 v90;
  uint64_t v91;
  char *v92;
  int v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  double (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  __n128 v120;
  _QWORD v121[2];
  uint64_t v122;
  double (*v123)(char *, uint64_t);
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v139 = a2;
  v3 = sub_10004CFD4(&qword_1009D83F8);
  __chkstk_darwin(v3);
  v5 = (char *)v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReadingSettingsView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v135 = (uint64_t)v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for Alert.Button(0, v9);
  v10 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v136 = (char *)v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v137 = (char *)v121 - v13;
  v14 = type metadata accessor for FontDownloadAlert(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(int *)(v6 + 20);
  v138 = a1;
  v19 = a1 + v18;
  v20 = sub_10004CFD4(&qword_1009E1048);
  v21 = Bindable.wrappedValue.getter(&v140, v20);
  v22 = v140;
  ReadingSettingsViewModel.fontDownloadAlert.getter(v21);
  v23 = swift_release(v22);
  LOBYTE(v22) = FontDownloadAlert.requiresCellularPrompt.getter(v23);
  v24 = *(double (**)(char *, uint64_t))(v15 + 8);
  v24(v17, v14);
  v25 = Bindable.wrappedValue.getter(&v140, v20);
  if ((v22 & 1) != 0)
  {
    v26 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v25);
    v27 = swift_release(v26);
    v28 = FontDownloadAlert.themeTitle.getter(v27);
    v30 = v29;
    v24(v17, v14);
    v140 = v28;
    v141 = v30;
    v31 = sub_1001F2108();
    v126 = v7;
    v33 = Text.init<A>(_:)(&v140, &type metadata for String, v31, v32);
    v133 = v34;
    v134 = v33;
    LODWORD(v131) = v35;
    v132 = v36;
    v37 = Bindable.wrappedValue.getter(&v140, v20);
    v38 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v37);
    v39 = swift_release(v38);
    v40 = FontDownloadAlert.themeMessage.getter(v39);
    v42 = v41;
    v43.n128_f64[0] = v24(v17, v14);
    v140 = v40;
    v141 = v42;
    v125 = v31;
    v44 = Text.init<A>(_:)(&v140, &type metadata for String, v31, v43);
    v129 = v45;
    v130 = v44;
    v127 = v46 & 1;
    v128 = v47;
    v48 = Bindable.wrappedValue.getter(&v140, v20);
    v49 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v48);
    v50 = swift_release(v49);
    v51 = FontDownloadAlert.downloadOverCellularButton.getter(v50);
    v53 = v52;
    v54.n128_f64[0] = v24(v17, v14);
    v140 = v51;
    v141 = v53;
    v55 = Text.init<A>(_:)(&v140, &type metadata for String, v31, v54);
    v57 = v56;
    v123 = v24;
    v59 = v58;
    v61 = v60 & 1;
    v121[1] = v19;
    v62 = v135;
    v122 = v14;
    sub_10002CD84(v138, v135, type metadata accessor for ReadingSettingsView);
    v63 = *(unsigned __int8 *)(v126 + 80);
    v64 = (v63 + 16) & ~v63;
    v126 = v64 + v8;
    v124 = v63 | 7;
    v65 = swift_allocObject(&unk_100903370, v64 + v8, v63 | 7);
    sub_10002C960(v62, v65 + v64, type metadata accessor for ReadingSettingsView);
    static Alert.Button.cancel(_:action:)(v55, v57, v61, v59, sub_1003F2488, v65);
    sub_1001F5B28(v55, v57, v61);
    swift_release(v65);
    swift_bridgeObjectRelease(v59);
    v66 = Bindable.wrappedValue.getter(&v140, v20);
    v67 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v66);
    v68 = swift_release(v67);
    v69 = FontDownloadAlert.waitForWifiButton.getter(v68);
    v71 = v70;
    v72.n128_f64[0] = v123(v17, v122);
    v140 = v69;
    v141 = v71;
    v73 = Text.init<A>(_:)(&v140, &type metadata for String, v125, v72);
    v75 = v74;
    v77 = v76;
    v79 = v78 & 1;
    sub_10002CD84(v138, v62, type metadata accessor for ReadingSettingsView);
    v80 = swift_allocObject(&unk_100903398, v126, v124);
    sub_10002C960(v62, v80 + v64, type metadata accessor for ReadingSettingsView);
    v81 = v136;
    static Alert.Button.default(_:action:)(v73, v75, v79, v77, sub_1003F2498, v80);
    sub_1001F5B28(v73, v75, v79);
    swift_release(v80);
    v82 = swift_bridgeObjectRelease(v77);
    return Alert.init(title:message:primaryButton:secondaryButton:)(v134, v133, v131 & 1, v132, v130, v129, v127, v128, v82, v137, v81);
  }
  else
  {
    v84 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v25);
    v85 = swift_release(v84);
    v86 = FontDownloadAlert.themeTitle.getter(v85);
    v88 = v87;
    v24(v17, v14);
    v140 = v86;
    v141 = v88;
    v89 = sub_1001F2108();
    v91 = Text.init<A>(_:)(&v140, &type metadata for String, v89, v90);
    v137 = v92;
    v138 = v91;
    LODWORD(v135) = v93;
    v136 = v94;
    v95 = Bindable.wrappedValue.getter(&v140, v20);
    v96 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v95);
    v97 = swift_release(v96);
    v98 = FontDownloadAlert.themeMessage.getter(v97);
    v99 = v24;
    v101 = v100;
    v102.n128_f64[0] = v99(v17, v14);
    v140 = v98;
    v141 = v101;
    v103 = Text.init<A>(_:)(&v140, &type metadata for String, v89, v102);
    v132 = v104;
    v133 = v103;
    v130 = v105 & 1;
    v131 = v106;
    v107 = Bindable.wrappedValue.getter(&v140, v20);
    v108 = v140;
    ReadingSettingsViewModel.fontDownloadAlert.getter(v107);
    v109 = swift_release(v108);
    v110 = FontDownloadAlert.dismissButton.getter(v109);
    v112 = v111;
    v113.n128_f64[0] = v99(v17, v14);
    v140 = v110;
    v141 = v112;
    v114 = Text.init<A>(_:)(&v140, &type metadata for String, v89, v113);
    v116 = v115;
    v118 = v117;
    LOBYTE(v99) = v119 & 1;
    static Alert.Button.default(_:action:)(v114, v115, v119 & 1, v117, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0);
    sub_1001F5B28(v114, v116, (char)v99);
    v120 = swift_bridgeObjectRelease(v118);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v10 + 56))(v5, 0, 1, v134, v120);
    return Alert.init(title:message:dismissButton:)(v138, v137, v135 & 1, v136, v133, v132, v130, v131, v5);
  }
}

uint64_t sub_1003EC208(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  type metadata accessor for ReadingSettingsView(0);
  v2 = sub_10004CFD4(&qword_1009E1048);
  Bindable.wrappedValue.getter(v8, v2);
  v3 = v8[0];
  v4 = (void (*)(_QWORD *, _QWORD))ReadingSettingsViewModel.fontDownloadAlert.modify(v8);
  FontDownloadAlert.downloadOverCellularAccepted.setter(1);
  v4(v8, 0);
  swift_release(v3);
  v5 = a1[3];
  v6 = a1[4];
  sub_10003F198(a1, v5);
  return dispatch thunk of ReadingSettingsEventHandling.didTapAllowCellular()(v5, v6);
}

uint64_t sub_1003EC2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  _BYTE v20[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v20[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v20[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007B8800);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Themes & Settings title", 23, 2);
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v18;
}

uint64_t sub_1003EC474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t KeyPath;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)();
  uint64_t v107;

  v97 = a3;
  v101 = a4;
  v6 = sub_10004CFD4(&qword_1009E1420);
  __chkstk_darwin(v6);
  v99 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E1428);
  __chkstk_darwin(v8);
  v98 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v100 = (uint64_t)&v82 - v11;
  v89 = type metadata accessor for ReadingSettingsView(0);
  v12 = *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64);
  v95 = *(_QWORD *)(v89 - 8);
  v96 = v12;
  __chkstk_darwin(v89);
  v94 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for AccessibilityTraits(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_10004CFD4(&qword_1009D8A68);
  __chkstk_darwin(v87);
  v82 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v83 = (char *)&v82 - v18;
  v19 = sub_10004CFD4(&qword_1009E1430);
  v92 = *(_QWORD *)(v19 - 8);
  v93 = v19;
  __chkstk_darwin(v19);
  v86 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10004CFD4(&qword_1009E1438);
  __chkstk_darwin(v91);
  v88 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v90 = (uint64_t)&v82 - v23;
  v102 = a1;
  v103 = a2;
  v24 = sub_1001F2108();
  v25 = swift_bridgeObjectRetain(a2);
  v26 = Text.init<A>(_:)(&v102, &type metadata for String, v24, v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Font.title2.getter(v26);
  static Font.Weight.semibold.getter(v33);
  v34 = Font.weight(_:)(v33);
  swift_release(v33);
  v35 = Text.font(_:)(v34, v26, v28, v32, v30);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release(v34);
  sub_1001F5B28(v26, v28, v32);
  v42 = swift_bridgeObjectRelease(v30);
  v102 = v35;
  v103 = v37;
  LOBYTE(v104) = v39 & 1;
  v105 = v41;
  static AccessibilityTraits.isHeader.getter(v42);
  v43 = (uint64_t)v82;
  View.accessibilityAddTraits(_:)(v15, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v15, v85);
  sub_1001F5B28(v102, v103, v104);
  swift_bridgeObjectRelease(v105);
  v44 = (uint64_t)v83;
  v45 = v87;
  ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)(0, v87);
  sub_100010960(v43, &qword_1009D8A68);
  v46 = v97;
  v47 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(&v102, v47);
  v48 = v102;
  v49 = v103;
  v50 = v104;
  v51 = sub_1003F333C();
  v52 = v86;
  View.accessibilityFocused(_:)(v48, v49, v50, v45, v51);
  swift_release(v49);
  swift_release(v48);
  sub_100010960(v44, &qword_1009D8A68);
  v53 = v46;
  v54 = v94;
  sub_10002CD84(v46, v94, type metadata accessor for ReadingSettingsView);
  v55 = *(unsigned __int8 *)(v95 + 80);
  v56 = (v55 + 16) & ~v55;
  v57 = v56 + v96;
  v58 = v55 | 7;
  v59 = swift_allocObject(&unk_100903618, v56 + v96, v55 | 7);
  sub_10002C960(v54, v59 + v56, type metadata accessor for ReadingSettingsView);
  v61 = v92;
  v60 = v93;
  v62 = (uint64_t)v88;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v88, v52, v93);
  v63 = (uint64_t (**)())(v62 + *(int *)(v91 + 36));
  *v63 = sub_1003F33C4;
  v63[1] = (uint64_t (*)())v59;
  v63[2] = 0;
  v63[3] = 0;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v60);
  v64 = v90;
  sub_100025B3C(v62, v90, &qword_1009E1438);
  sub_10002CD84(v53, v54, type metadata accessor for ReadingSettingsView);
  v65 = swift_allocObject(&unk_100903640, v57, v58);
  sub_10002C960(v54, v65 + v56, type metadata accessor for ReadingSettingsView);
  v66 = type metadata accessor for ChromeStyle(0);
  v67 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v66, v67);
  v69 = v68;
  v71 = v70;
  KeyPath = swift_getKeyPath(&unk_100721C10);
  v102 = (uint64_t)v69;
  v103 = v71;
  v104 = KeyPath;
  LOBYTE(v105) = 0;
  v106 = sub_1003EECC0;
  v107 = v65;
  v73 = sub_1003F3430();
  v74 = (uint64_t)v99;
  View.accessibilityIdentifier(_:)(0xD000000000000017, 0x80000001007C7430, &type metadata for RSCloseButton, v73);
  swift_release(v65);
  swift_release(KeyPath);

  v75 = v98;
  sub_10000B5E4(v74, v98, &qword_1009E1420);
  sub_100010960(v74, &qword_1009E1420);
  v76 = v75;
  v77 = v100;
  sub_100025B3C(v75, v100, &qword_1009E1428);
  sub_10000B5E4(v64, v62, &qword_1009E1438);
  sub_10000B5E4(v77, v75, &qword_1009E1428);
  v78 = v101;
  sub_10000B5E4(v62, v101, &qword_1009E1438);
  v79 = sub_10004CFD4(&qword_1009E1450);
  v80 = v78 + *(int *)(v79 + 48);
  *(_QWORD *)v80 = 0;
  *(_BYTE *)(v80 + 8) = 1;
  sub_10000B5E4(v76, v78 + *(int *)(v79 + 64), &qword_1009E1428);
  sub_100010960(v77, &qword_1009E1428);
  sub_100010960(v64, &qword_1009E1438);
  sub_100010960(v76, &qword_1009E1428);
  return sub_100010960(v62, &qword_1009E1438);
}

uint64_t sub_1003ECB48()
{
  uint64_t v0;
  char v2;

  type metadata accessor for ReadingSettingsView(0);
  v2 = 1;
  v0 = sub_10004CFD4(&qword_1009D3A10);
  return AccessibilityFocusState.wrappedValue.setter(&v2, v0);
}

uint64_t sub_1003ECB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v70 = a2;
  v3 = sub_10004CFD4(&qword_1009E12D8);
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  __chkstk_darwin(v3);
  v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v66 = (uint64_t)&v59 - v6;
  v7 = sub_10004CFD4(&qword_1009D5030);
  __chkstk_darwin(v7);
  v63 = (uint64_t *)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ReadingSettingsView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - v17;
  v64 = sub_10004CFD4(&qword_1009E12E0);
  __chkstk_darwin(v64);
  v65 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v59 - v21;
  v23 = sub_10004CFD4(&qword_1009E1048);
  v24 = Bindable.wrappedValue.getter(&v71, v23);
  v25 = v71;
  v62 = ReadingSettingsViewModel.canDecreaseContentSize.getter(v24);
  swift_release(v25);
  v26 = Bindable.wrappedValue.getter(&v71, v23);
  v27 = v71;
  v61 = ReadingSettingsViewModel.canIncreaseContentSize.getter(v26);
  swift_release(v27);
  v28 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v29 = Color.init(_:)(v28);
  v30.n128_u64[0] = 0x3FE4CCCCCCCCCCCDLL;
  v60 = Color.opacity(_:)(v29, v30);
  swift_release(v29);
  sub_10002CD84(a1, (uint64_t)v18, type metadata accessor for ReadingSettingsView);
  v31 = *(unsigned __int8 *)(v10 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = v32 + v11;
  v34 = v31 | 7;
  v35 = swift_allocObject(&unk_1009034D8, v32 + v11, v31 | 7);
  sub_10002C960((uint64_t)v18, v35 + v32, type metadata accessor for ReadingSettingsView);
  sub_10002CD84(a1, (uint64_t)v15, type metadata accessor for ReadingSettingsView);
  v36 = swift_allocObject(&unk_100903500, v33, v34);
  sub_10002C960((uint64_t)v15, v36 + v32, type metadata accessor for ReadingSettingsView);
  sub_10002CD84(a1, (uint64_t)v12, type metadata accessor for ReadingSettingsView);
  v37 = swift_allocObject(&unk_100903528, v33, v34);
  sub_10002C960((uint64_t)v12, v37 + v32, type metadata accessor for ReadingSettingsView);
  KeyPath = swift_getKeyPath(&unk_100721BE8);
  v39 = (uint64_t)v63;
  *v63 = KeyPath;
  v40 = sub_10004CFD4(&qword_1009D5038);
  swift_storeEnumTagMultiPayload(v39, v40, 0);
  v41 = swift_getKeyPath(&unk_100721C10);
  v42 = sub_10025AE78(v39, v41, 0, (v62 & 1) == 0, (v61 & 1) == 0, v60, (uint64_t)sub_1003F2818, v35, (uint64_t)v22, (uint64_t)sub_1003F2868, v36, (uint64_t)sub_1003F2878, v37);
  v43 = static Alignment.bottom.getter(v42);
  v45 = v44;
  v46 = (uint64_t)&v22[*(int *)(v64 + 36)];
  sub_1003ED0F8(v46);
  v47 = (uint64_t *)(v46 + *(int *)(sub_10004CFD4(&qword_1009E12E8) + 36));
  *v47 = v43;
  v47[1] = v45;
  v48 = v66;
  sub_1003ED820(v66);
  v49 = v65;
  sub_10000B5E4((uint64_t)v22, v65, &qword_1009E12E0);
  v50 = v67;
  v51 = v68;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  v53 = v48;
  v54 = v69;
  v52(v67, v48, v69);
  v55 = v70;
  sub_10000B5E4(v49, v70, &qword_1009E12E0);
  v56 = sub_10004CFD4(&qword_1009E12F0);
  v52((char *)(v55 + *(int *)(v56 + 48)), (uint64_t)v50, v54);
  v57 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v57(v53, v54);
  sub_100010960((uint64_t)v22, &qword_1009E12E0);
  v57((uint64_t)v50, v54);
  return sub_100010960(v49, &qword_1009E12E0);
}

double sub_1003ED030(_QWORD *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _BYTE v10[9];
  uint64_t v11;
  uint64_t v12;

  v4 = a1[3];
  v5 = a1[4];
  sub_10003F198(a1, v4);
  a2(v4, v5);
  v6 = (char *)a1 + *(int *)(type metadata accessor for ReadingSettingsView(0) + 72);
  LOBYTE(v4) = *v6;
  v7 = *((_QWORD *)v6 + 1);
  swift_retain(v7);
  v8 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v12);
  v10[1] = v4;
  v11 = v7;
  v10[0] = (v12 & 1) == 0;
  State.wrappedValue.setter(v10, v8);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1003ED0F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  double v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];

  v45 = a1;
  v1 = type metadata accessor for OpacityTransition(0);
  v39 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009E1360);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - v7;
  v9 = sub_10004CFD4(&qword_1009E1368);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009E1370);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009E1378);
  v43 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReadingSettingsView(0);
  v18 = sub_10004CFD4(&qword_1009E1048);
  v19 = Bindable.wrappedValue.getter(v46, v18);
  v20 = v46[0];
  v21 = ReadingSettingsViewModel.showContentSizeIndicators.getter(v19);
  swift_release(v20);
  if ((v21 & 1) != 0)
  {
    sub_1003ED4A8((uint64_t)v11);
    if (qword_1009CE3C0 != -1)
      swift_once(&qword_1009CE3C0, sub_1003E7300);
    v22 = *(double *)&qword_1009E0FF0;
    if (qword_1009CE3C8 != -1)
      swift_once(&qword_1009CE3C8, sub_1003E7310);
    v23 = v22 + *(double *)&qword_1009E0FF8;
    sub_10000B5E4((uint64_t)v11, (uint64_t)v14, &qword_1009E1368);
    v24 = &v14[*(int *)(v12 + 36)];
    *(_QWORD *)v24 = 0;
    *((double *)v24 + 1) = v23;
    v25 = sub_100010960((uint64_t)v11, &qword_1009E1368);
    OpacityTransition.init()(v25);
    v26 = static Animation.easeInOut(duration:)(0.18);
    v27 = sub_100008DB0(&qword_1009E1380, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
    Transition.animation(_:)(v26, v1, v27);
    v28 = swift_release(v26);
    (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v3, v1, v28);
    v29 = v40;
    v30 = v41;
    v31 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v40, v8, v42);
    v46[0] = v1;
    v46[1] = v27;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v46, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
    v33 = AnyTransition.init<A>(_:)(v29, v31, OpaqueTypeConformance2);
    sub_10000B5E4((uint64_t)v14, (uint64_t)v17, &qword_1009E1370);
    v34 = v44;
    *(_QWORD *)&v17[*(int *)(v44 + 36)] = v33;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
    sub_100010960((uint64_t)v14, &qword_1009E1370);
    v35 = v45;
    sub_100025B3C((uint64_t)v17, v45, &qword_1009E1378);
    v36 = 0;
  }
  else
  {
    v36 = 1;
    v34 = v44;
    v35 = v45;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v35, v36, 1, v34);
}

void sub_1003ED4A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  v2 = v1;
  v4 = type metadata accessor for ReadingSettingsView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E1388);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E1390);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE3C8 != -1)
    v12 = swift_once(&qword_1009CE3C8, sub_1003E7310);
  v15 = *(double *)&qword_1009E0FF8;
  if (qword_1009CE3D0 != -1)
    v12 = swift_once(&qword_1009CE3D0, sub_1003E7320);
  v16 = qword_1009E1000;
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v10 + 1) = v16;
  v10[16] = 0;
  sub_10004CFD4(&qword_1009E1398);
  v17 = sub_10004CFD4(&qword_1009E1048);
  v18 = Bindable.wrappedValue.getter(&v44, v17);
  v19 = v44;
  v20 = ReadingSettingsViewModel.numberOfContentSizeIndicators.getter(v18);
  v42 = v4;
  v21 = v20;
  swift_release(v19);
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    v44 = 0;
    v45 = v21;
    KeyPath = swift_getKeyPath(&unk_100721D58);
    sub_10002CD84(v2, (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReadingSettingsView);
    v23 = *(unsigned __int8 *)(v5 + 80);
    v24 = (v23 + 16) & ~v23;
    v41 = v2;
    v25 = a1;
    v26 = (v6 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject(&unk_1009035F0, v26 + 8, v23 | 7);
    sub_10002C960((uint64_t)v7, v27 + v24, type metadata accessor for ReadingSettingsView);
    *(double *)(v27 + v26) = v15;
    v28 = sub_10004CFD4(&qword_1009D3D58);
    v29 = sub_10004CFD4(&qword_1009E13A0);
    v30 = sub_100233FF8();
    v31 = sub_1003F314C();
    v32 = ForEach<>.init(_:id:content:)(&v44, KeyPath, sub_1003F30EC, v27, v28, v29, v30, &protocol witness table for Int, v31);
    v33 = static Alignment.center.getter(v32);
    sub_1005F2C4C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v14, 0.0, 1, v15, 0, v33, v34);
    sub_100010960((uint64_t)v10, &qword_1009E1388);
    v35 = static Animation.easeInOut(duration:)(0.18);
    v36 = v41 + *(int *)(v42 + 72);
    v37 = *(_BYTE *)v36;
    v38 = *(_QWORD *)(v36 + 8);
    LOBYTE(v44) = v37;
    v45 = v38;
    sub_10004CFD4(&qword_1009D8450);
    State.wrappedValue.getter(&v43);
    LOBYTE(v26) = v43;
    sub_10000B5E4((uint64_t)v14, v25, &qword_1009E1390);
    v39 = v25 + *(int *)(sub_10004CFD4(&qword_1009E1368) + 36);
    *(_QWORD *)v39 = v35;
    *(_BYTE *)(v39 + 8) = v26;
    sub_100010960((uint64_t)v14, &qword_1009E1390);
  }
}

uint64_t sub_1003ED820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];

  v2 = v1;
  v50 = a1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009E12F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10004CFD4(&qword_1009E1300);
  __chkstk_darwin(v44);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_10004CFD4(&qword_1009E1308);
  __chkstk_darwin(v46);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4(&qword_1009E12D8);
  v45 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ReadingSettingsView(0);
  v16 = v15;
  v17 = *(unsigned __int8 *)(v2 + *(int *)(v15 + 28));
  if (qword_1009CE3B0 != -1)
    v15 = swift_once(&qword_1009CE3B0, sub_1003E72E0);
  v18 = qword_1009E0FE0;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v15);
  *((_QWORD *)v8 + 1) = v18;
  v8[16] = 0;
  v19 = sub_10004CFD4(&qword_1009E1310);
  sub_1003EDF5C(v2, (uint64_t)&v8[*(int *)(v19 + 44)]);
  v20 = v2 + *(int *)(v16 + 48);
  v21 = *(void **)v20;
  if (*(_QWORD *)v20)
  {
    if (v17)
      v22 = 1;
    else
      v22 = 2;
    v23 = type metadata accessor for ChromeStyle(0);
    v24 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v25 = v21;
    v26 = static ObservableObject.environmentStore.getter(v23, v24);
    sub_10000B5E4((uint64_t)v8, (uint64_t)v10, &qword_1009E12F8);
    v27 = (uint64_t *)&v10[*(int *)(v44 + 36)];
    *v27 = v26;
    v27[1] = (uint64_t)v21;
    sub_100010960((uint64_t)v8, &qword_1009E12F8);
    v28 = sub_1003EE904(v22);
    v30 = v29;
    v31 = static Alignment.center.getter(v28);
    _FrameLayout.init(width:height:alignment:)(v51, v30, 0, 0, 1, v31, v32);
    sub_10000B5E4((uint64_t)v10, (uint64_t)v12, &qword_1009E1300);
    v33 = v46;
    v34 = &v12[*(int *)(v46 + 36)];
    v35 = v51[1];
    *(_OWORD *)v34 = v51[0];
    *((_OWORD *)v34 + 1) = v35;
    *((_OWORD *)v34 + 2) = v51[2];
    v36 = sub_100010960((uint64_t)v10, &qword_1009E1300);
    static AccessibilityChildBehavior.contain.getter(v36);
    v37 = sub_1001F5558(&qword_1009E1318, &qword_1009E1308, (void (*)(void))sub_1003F2884);
    View.accessibilityElement(children:)(v5, v33, v37);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v49);
    sub_100010960((uint64_t)v12, &qword_1009E1308);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 32))(v50, v14, v47);
  }
  else
  {
    v39 = *(_QWORD *)(v20 + 8);
    v40 = type metadata accessor for ChromeStyle(0);
    v41 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v39, v40, v41, v42);
    __break(1u);
  }
  return result;
}

double sub_1003EDBC0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100721CC8);
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009E12D0, type metadata accessor for BrightnessController, (uint64_t)&unk_10072B480);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  result = *(double *)(v3 + 32);
  *a2 = result;
  return result;
}

void sub_1003EDC4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100721CC8);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009E12D0, type metadata accessor for BrightnessController, (uint64_t)&unk_10072B480);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_1003F27F8, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

double sub_1003EDCFC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  double result;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  __int128 v27;

  v5 = *a1;
  type metadata accessor for ReadingSettingsView(0);
  v6 = sub_10004CFD4(&qword_1009E1048);
  v7 = Bindable.wrappedValue.getter(&v23, v6);
  v8 = v23;
  v9 = ReadingSettingsViewModel.contentSizeIndicatorIndex.getter(v7);
  v11 = v10;
  swift_release(v8);
  if ((v11 & 1) != 0)
  {
    if (v5 < 0)
      goto LABEL_3;
LABEL_5:
    v14 = objc_msgSend((id)objc_opt_self(UIColor), "quaternaryLabelColor");
    v13 = Color.init(_:)(v14);
    goto LABEL_6;
  }
  if (v9 < v5)
    goto LABEL_5;
LABEL_3:
  v13 = static Color.primary.getter(v12);
LABEL_6:
  v15 = v13;
  v16 = static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(&v23, *(_QWORD *)&a3, 0, *(_QWORD *)&a3, 0, v16, v17);
  v18 = v23;
  v19 = v24;
  v20 = v25;
  v21 = v26;
  *(_QWORD *)a2 = v15;
  *(_WORD *)(a2 + 8) = 256;
  *(_QWORD *)(a2 + 16) = v18;
  *(_BYTE *)(a2 + 24) = v19;
  *(_QWORD *)(a2 + 32) = v20;
  *(_BYTE *)(a2 + 40) = v21;
  result = *(double *)&v27;
  *(_OWORD *)(a2 + 48) = v27;
  return result;
}

void sub_1003EDE20(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  type metadata accessor for ReadingSettingsView(0);
  v2 = sub_10004CFD4(&qword_1009E1048);
  v3 = Bindable.wrappedValue.getter(&v6, v2);
  v4 = v6;
  v5 = ReadingSettingsViewModel.pageNavigationStyle.getter(v3);
  swift_release(v4);
  *a1 = v5;
}

void sub_1003EDE8C(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  type metadata accessor for ReadingSettingsView(0);
  v2 = sub_10004CFD4(&qword_1009E1048);
  v3 = Bindable.wrappedValue.getter(&v14, v2);
  v4 = v14;
  v5 = ReadingSettingsViewModel.pageNavigationStyle.getter(v3);
  swift_release(v4);
  v6 = PageNavigationStyle.rawValue.getter(v5);
  v8 = v7;
  v9 = PageNavigationStyle.rawValue.getter(3);
  if (v6 == v9 && v8 == v10)
  {
    v13 = 1;
    v12 = v8;
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  }
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  *a1 = v13 & 1;
}

uint64_t sub_1003EDF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t KeyPath;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;

  v136 = a2;
  v135 = type metadata accessor for DarkModeOptionsButton(0);
  __chkstk_darwin(v135);
  v4 = (char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char **)((char *)&v119 - v6);
  v8 = sub_10004CFD4(&qword_1009D5030);
  __chkstk_darwin(v8);
  v134 = (uint64_t *)((char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for PageTurnOptionsMenu(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10004CFD4(&qword_1009E1330);
  __chkstk_darwin(v128);
  v131 = (uint64_t)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for ScrollToggle(0);
  __chkstk_darwin(v130);
  v126 = (char **)((char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for ReadingSettingsView(0);
  v127 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v127 + 64);
  __chkstk_darwin(v15);
  v17 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v119 - v19;
  v21 = sub_10004CFD4(&qword_1009E1338);
  v132 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v129 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009E1340);
  v24 = a1;
  __chkstk_darwin(v23);
  v133 = (uint64_t)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28.n128_f64[0] = __chkstk_darwin(v26);
  v30 = (char *)&v119 - v29;
  if ((*(_BYTE *)(v24 + *(int *)(v27 + 28)) & 1) == 0)
  {
    v119 = v12;
    v122 = v21;
    v123 = v10;
    v125 = v4;
    v33 = v24 + *(int *)(v27 + 64);
    v34 = *(_QWORD *)v33;
    v35 = *(_BYTE *)(v33 + 8);
    v36 = v27;
    sub_1001F2508(*(_QWORD *)v33, v35);
    v37 = sub_100667C14(v34, v35);
    sub_1001F2564(v34, v35);
    v120 = v24;
    sub_10002CD84(v24, (uint64_t)v20, type metadata accessor for ReadingSettingsView);
    v124 = v30;
    v121 = v36;
    if ((v37 & 1) != 0)
    {
      sub_10002C8F0((uint64_t)v20, type metadata accessor for ReadingSettingsView);
    }
    else
    {
      v38 = &v20[*(int *)(v36 + 68)];
      v39 = *(_QWORD *)v38;
      v40 = v38[8];
      sub_1001F2508(*(_QWORD *)v38, v40);
      v41 = sub_100667C14(v39, v40);
      sub_1001F2564(v39, v40);
      v42 = sub_10002C8F0((uint64_t)v20, type metadata accessor for ReadingSettingsView);
      if ((v41 & 1) == 0 && (static UIAccessibility.accessibilityNavigationServicesEnabled.getter(v42) & 1) == 0)
      {
        v85 = v120;
        sub_10002CD84(v120, (uint64_t)v17, type metadata accessor for ReadingSettingsView);
        v86 = type metadata accessor for MainActor(0);
        v87 = static MainActor.shared.getter(v86);
        v88 = *(unsigned __int8 *)(v127 + 80);
        v89 = (v88 + 32) & ~v88;
        v90 = v89 + v16;
        v91 = v88 | 7;
        v92 = swift_allocObject(&unk_100903550, v90, v88 | 7);
        *(_QWORD *)(v92 + 16) = v87;
        *(_QWORD *)(v92 + 24) = &protocol witness table for MainActor;
        sub_10002C960((uint64_t)v17, v92 + v89, type metadata accessor for ReadingSettingsView);
        v93 = sub_10002CD84(v85, (uint64_t)v17, type metadata accessor for ReadingSettingsView);
        v94 = static MainActor.shared.getter(v93);
        v95 = swift_allocObject(&unk_100903578, v90, v91);
        *(_QWORD *)(v95 + 16) = v94;
        *(_QWORD *)(v95 + 24) = &protocol witness table for MainActor;
        sub_10002C960((uint64_t)v17, v95 + v89, type metadata accessor for ReadingSettingsView);
        Binding.init(get:set:)(&v137, sub_1003F2924, v92, sub_1003F2968, v95, &type metadata for PageNavigationStyle);
        v96 = v137;
        v97 = v138;
        v98 = v139;
        v99 = sub_10004CFD4(&qword_1009E1048);
        v100 = Bindable.wrappedValue.getter(&v137, v99);
        v101 = v137;
        v102 = ReadingSettingsViewModel.isVerticalText.getter(v100);
        swift_release(v101);
        v103 = type metadata accessor for ChromeStyle(0);
        v104 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
        EnvironmentObject.init()(v103, v104);
        v106 = v105;
        v108 = v107;
        KeyPath = swift_getKeyPath(&unk_100721CF0);
        v110 = swift_getKeyPath(&unk_100721D20);
        v111 = swift_getKeyPath(&unk_100721BE8);
        v32 = v134;
        *v134 = v111;
        v112 = sub_10004CFD4(&qword_1009D5038);
        swift_storeEnumTagMultiPayload(v32, v112, 0);
        v113 = swift_getKeyPath(&unk_100721C10);
        v118 = v96;
        v114 = (uint64_t)v119;
        sub_1004E1DE8(v106, v108, KeyPath, 0, v110, 0, (uint64_t)v32, v113, (uint64_t)v119, 0, v118, v97, v98, v102 & 1);
        v115 = v131;
        sub_10002CD84(v114, v131, type metadata accessor for PageTurnOptionsMenu);
        swift_storeEnumTagMultiPayload(v115, v128, 1);
        v116 = sub_100008DB0(&qword_1009E1348, type metadata accessor for ScrollToggle, (uint64_t)&unk_1007205C0);
        v117 = sub_100008DB0(&qword_1009E1350, type metadata accessor for PageTurnOptionsMenu, (uint64_t)&unk_100729EB0);
        v64 = v129;
        _ConditionalContent<>.init(storage:)(v115, v130, v123, v116, v117);
        sub_10002C8F0(v114, type metadata accessor for PageTurnOptionsMenu);
        goto LABEL_8;
      }
    }
    v43 = v120;
    sub_10002CD84(v120, (uint64_t)v17, type metadata accessor for ReadingSettingsView);
    v44 = type metadata accessor for MainActor(0);
    v45 = static MainActor.shared.getter(v44);
    v46 = *(unsigned __int8 *)(v127 + 80);
    v47 = (v46 + 32) & ~v46;
    v48 = v47 + v16;
    v49 = v46 | 7;
    v50 = swift_allocObject(&unk_1009035A0, v48, v46 | 7);
    *(_QWORD *)(v50 + 16) = v45;
    *(_QWORD *)(v50 + 24) = &protocol witness table for MainActor;
    sub_10002C960((uint64_t)v17, v50 + v47, type metadata accessor for ReadingSettingsView);
    v51 = sub_10002CD84(v43, (uint64_t)v17, type metadata accessor for ReadingSettingsView);
    v52 = static MainActor.shared.getter(v51);
    v53 = swift_allocObject(&unk_1009035C8, v48, v49);
    *(_QWORD *)(v53 + 16) = v52;
    *(_QWORD *)(v53 + 24) = &protocol witness table for MainActor;
    sub_10002C960((uint64_t)v17, v53 + v47, type metadata accessor for ReadingSettingsView);
    Binding.init(get:set:)(&v137, sub_1003F2A28, v50, sub_1003F2D78, v53, &type metadata for Bool);
    v54 = v137;
    v55 = v138;
    v56 = v139;
    v57 = sub_10004CFD4(&qword_1009E1048);
    v58 = Bindable.wrappedValue.getter(&v137, v57);
    v59 = v137;
    LOBYTE(v47) = ReadingSettingsViewModel.isVerticalText.getter(v58);
    swift_release(v59);
    v60 = v126;
    sub_1003CA264(v54, v55, v56, v47 & 1, v126);
    v61 = v131;
    sub_10002CD84((uint64_t)v60, v131, type metadata accessor for ScrollToggle);
    swift_storeEnumTagMultiPayload(v61, v128, 0);
    v62 = sub_100008DB0(&qword_1009E1348, type metadata accessor for ScrollToggle, (uint64_t)&unk_1007205C0);
    v63 = sub_100008DB0(&qword_1009E1350, type metadata accessor for PageTurnOptionsMenu, (uint64_t)&unk_100729EB0);
    v64 = v129;
    _ConditionalContent<>.init(storage:)(v61, v130, v123, v62, v63);
    sub_10002C8F0((uint64_t)v60, type metadata accessor for ScrollToggle);
    v32 = v134;
LABEL_8:
    v65 = (uint64_t)v64;
    v30 = v124;
    sub_100025B3C(v65, (uint64_t)v124, &qword_1009E1338);
    v31 = 0;
    v4 = v125;
    v21 = v122;
    goto LABEL_9;
  }
  v31 = 1;
  v32 = v134;
LABEL_9:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v132 + 56))(v30, v31, 1, v21, v28);
  v66 = type metadata accessor for ThemeAppearanceManager(0);
  v67 = static ThemeAppearanceManager.shared.getter();
  v68 = (uint64_t)v30;
  v69 = type metadata accessor for ChromeStyle(0);
  v70 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v69, v70);
  v72 = v71;
  v74 = v73;
  *v32 = swift_getKeyPath(&unk_100721BE8);
  v75 = sub_10004CFD4(&qword_1009D5038);
  swift_storeEnumTagMultiPayload(v32, v75, 0);
  v76 = swift_getKeyPath(&unk_100721C10);
  *v7 = v72;
  v7[1] = v74;
  v77 = sub_100008DB0(&qword_1009D6A48, (uint64_t (*)(uint64_t))&type metadata accessor for ThemeAppearanceManager, (uint64_t)&protocol conformance descriptor for ThemeAppearanceManager);
  v7[2] = ObservedObject.init(wrappedValue:)(v67, v66, v77);
  v7[3] = v78;
  v79 = v135;
  sub_100025B3C((uint64_t)v32, (uint64_t)v7 + *(int *)(v135 + 24), &qword_1009D5030);
  v80 = (char *)v7 + *(int *)(v79 + 28);
  *(_QWORD *)v80 = v76;
  v80[8] = 0;
  v81 = v133;
  sub_10000B5E4(v68, v133, &qword_1009E1340);
  sub_10002CD84((uint64_t)v7, (uint64_t)v4, type metadata accessor for DarkModeOptionsButton);
  v82 = v136;
  sub_10000B5E4(v81, v136, &qword_1009E1340);
  v83 = sub_10004CFD4(&qword_1009E1358);
  sub_10002CD84((uint64_t)v4, v82 + *(int *)(v83 + 48), type metadata accessor for DarkModeOptionsButton);
  sub_10002C8F0((uint64_t)v7, type metadata accessor for DarkModeOptionsButton);
  sub_100010960(v68, &qword_1009E1340);
  sub_10002C8F0((uint64_t)v4, type metadata accessor for DarkModeOptionsButton);
  return sub_100010960(v81, &qword_1009E1340);
}

_QWORD *sub_1003EE904(uint64_t a1)
{
  uint64_t v2;

  if (a1 != 1 && qword_1009CE3B0 != -1)
    swift_once(&qword_1009CE3B0, sub_1003E72E0);
  type metadata accessor for ReadingSettingsView(0);
  sub_10004CFD4(&qword_1009D3CE0);
  return State.wrappedValue.getter(&v2);
}

uint64_t sub_1003EEA14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  return sub_1003E8068(v1 + ((v3 + 16) & ~v3), a1);
}

double sub_1003EEA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  return sub_1003E8C14(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_1003EEAA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = qword_1009E1188;
  if (!qword_1009E1188)
  {
    v1 = sub_100030B74(&qword_1009E1158);
    v2 = sub_100030B74(&qword_1009E1148);
    v3 = sub_100030B74(&qword_1009D1C80);
    v6 = sub_100030B74(&qword_1009E1178);
    v7 = sub_100030B34(&qword_1009E1180, &qword_1009E1178, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v5 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    sub_1003EEBB8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1188);
  }
  return result;
}

unint64_t sub_1003EEBB8()
{
  unint64_t result;

  result = qword_1009E1190;
  if (!qword_1009E1190)
  {
    result = swift_getWitnessTable(&unk_1007378CC, &type metadata for DeviceRotationViewModifier);
    atomic_store(result, (unint64_t *)&qword_1009E1190);
  }
  return result;
}

uint64_t sub_1003EEC00()
{
  return sub_1003F33D4((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didAppear());
}

uint64_t sub_1003EEC10()
{
  return sub_1003F33D4((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didDisappear());
}

uint64_t sub_1003EEC20(uint64_t a1)
{
  return sub_1003F267C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1003E8BA0);
}

_QWORD *sub_1003EEC2C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_1003F24E8();
  return EnvironmentValues.subscript.getter(a1, &type metadata for ReadingSettingsButtonShape, &type metadata for ReadingSettingsButtonShape, v2);
}

_QWORD *sub_1003EEC6C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1003F24A4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for ReadingSettingsButtonBackground, &type metadata for ReadingSettingsButtonBackground, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1003EECC0()
{
  return sub_1003F33D4((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.readingSettingsExit());
}

unint64_t sub_1003EECCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1208;
  if (!qword_1009E1208)
  {
    v1 = sub_100030B74(&qword_1009E11E0);
    sub_1003EED50();
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1208);
  }
  return result;
}

unint64_t sub_1003EED50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1210;
  if (!qword_1009E1210)
  {
    v1 = sub_100030B74(&qword_1009E11D8);
    sub_1003EEDD4();
    sub_100030B34(&qword_1009E1230, &qword_1009E1238, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1210);
  }
  return result;
}

unint64_t sub_1003EEDD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1218;
  if (!qword_1009E1218)
  {
    v1 = sub_100030B74(&qword_1009E11D0);
    sub_100030B34(&qword_1009E1220, &qword_1009E11C8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100030B34(&qword_1009E1228, &qword_1009E1200, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1218);
  }
  return result;
}

unint64_t sub_1003EEE70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1240;
  if (!qword_1009E1240)
  {
    v1 = sub_100030B74(&qword_1009E11E8);
    sub_1003EECCC();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1240);
  }
  return result;
}

uint64_t sub_1003EEEF4()
{
  return ReadingSettingsViewModel.fontDownloadAlert.getter();
}

uint64_t sub_1003EEF18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = FontDownloadAlert.fontDownloadAlertPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003EEF44(unsigned __int8 *a1)
{
  return FontDownloadAlert.fontDownloadAlertPresented.setter(*a1);
}

uint64_t sub_1003EEF68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003EBB80(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003EEF70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjCClassFromMetadata;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t@<X0>, uint64_t@<X8>);
  void (*v61)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v62;
  uint64_t v63;
  void (**v64)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v65;
  char *v66;
  unint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  char *v99;
  __n128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  id v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  void (*v170)(char *, uint64_t);
  void (*v171)(char *, char *, uint64_t);
  id v172;
  uint64_t v173;
  char *v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD v193[2];
  uint64_t v194;
  uint64_t v195;

  v2 = v1;
  v188 = a1;
  v3 = type metadata accessor for AccessibilityActionKind(0);
  v4 = *(_QWORD *)(v3 - 8);
  v182 = v3;
  v183 = v4;
  __chkstk_darwin(v3);
  v178 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessibilityTraits(0);
  v7 = *(_QWORD *)(v6 - 8);
  v179 = v6;
  v180 = v7;
  __chkstk_darwin(v6);
  v177 = (char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for AccessibilityChildBehavior(0);
  v160 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v153 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009E1508);
  __chkstk_darwin(v10);
  v146 = (uint64_t *)((char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v150 = sub_10004CFD4(&qword_1009E1510);
  __chkstk_darwin(v150);
  v148 = (uint64_t)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_10004CFD4(&qword_1009E1518);
  v161 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v149 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_10004CFD4(&qword_1009E1520);
  __chkstk_darwin(v162);
  v151 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v155 = (char *)&v146 - v16;
  v168 = sub_10004CFD4(&qword_1009E1528);
  __chkstk_darwin(v168);
  v157 = (uint64_t)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_10004CFD4(&qword_1009E1530);
  __chkstk_darwin(v176);
  v164 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v174 = (char *)&v146 - v20;
  v192 = sub_10004CFD4(&qword_1009E1538);
  __chkstk_darwin(v192);
  v191 = (uint64_t)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_10004CFD4(&qword_1009E1540);
  __chkstk_darwin(v185);
  v181 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009E1548);
  v186 = *(_QWORD *)(v23 - 8);
  v187 = v23;
  __chkstk_darwin(v23);
  v184 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Locale(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v146 - v30;
  v32 = type metadata accessor for String.LocalizationValue(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v146 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v38 = (char *)&v146 - v37;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x6854207465736552, 0xEB00000000656D65);
  static Locale.current.getter(v39);
  v175 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v165 = v35;
  v154 = v38;
  v40 = v32;
  v158 = v32;
  v175(v35, v38, v32);
  v41 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v41);
  v173 = ObjCClassFromMetadata;
  v172 = (id)objc_opt_self(NSBundle);
  v43 = objc_msgSend(v172, "bundleForClass:", ObjCClassFromMetadata);
  v171 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v167 = v28;
  v159 = v31;
  v166 = v25;
  v171(v28, v31, v25);
  v44 = String.init(localized:table:bundle:locale:comment:)(v35, 0, 0, v43, v28, "Reading settings reset theme menu text", 38, 2);
  v147 = v44;
  v190 = v45;
  v170 = *(void (**)(char *, uint64_t))(v26 + 8);
  v170(v31, v25);
  v169 = *(void (**)(char *, uint64_t))(v33 + 8);
  v169(v38, v40);
  v46 = swift_allocObject(&unk_1009037A0, 136, 7);
  v47 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v46 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v46 + 96) = v47;
  *(_OWORD *)(v46 + 112) = *(_OWORD *)(v2 + 96);
  *(_QWORD *)(v46 + 128) = *(_QWORD *)(v2 + 112);
  v48 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v46 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v46 + 32) = v48;
  v49 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v46 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v46 + 64) = v49;
  v189 = v46;
  v50 = swift_allocObject(&unk_1009037C8, 136, 7);
  v51 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v50 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v50 + 96) = v51;
  *(_OWORD *)(v50 + 112) = *(_OWORD *)(v2 + 96);
  *(_QWORD *)(v50 + 128) = *(_QWORD *)(v2 + 112);
  v52 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v50 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v50 + 32) = v52;
  v53 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v50 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v50 + 64) = v53;
  v152 = v50;
  sub_1003F3BC4(v2);
  v54 = sub_1003F3BC4(v2);
  v55 = static HorizontalAlignment.center.getter(v54);
  v56 = (uint64_t)v146;
  *v146 = v55;
  *(_QWORD *)(v56 + 8) = 0;
  *(_BYTE *)(v56 + 16) = 1;
  v57 = sub_10004CFD4(&qword_1009E1550);
  v58 = sub_1003EFC80((char *)v2, (char *)sub_1003F3B70, v46, v44, v190, (uint64_t)sub_1003F3B9C, v50, v56 + *(int *)(v57 + 44));
  v59 = static Alignment.center.getter(v58);
  v61 = v60;
  v62 = v148;
  sub_10000B5E4(v56, v148, &qword_1009E1508);
  v63 = v150;
  v64 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))(v62 + *(int *)(v150 + 36));
  *v64 = sub_1003F1ACC;
  v64[1] = 0;
  v64[2] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v59;
  v64[3] = v61;
  v65 = sub_100010960(v56, &qword_1009E1508);
  v66 = v153;
  static AccessibilityChildBehavior.combine.getter(v65);
  v67 = sub_1003F3C44();
  v68 = v149;
  View.accessibilityElement(children:)(v66, v63, v67);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v66, v163);
  sub_100010960(v62, &qword_1009E1510);
  v70 = BookThemeViewModel.title.getter(v69);
  v72 = v71;
  v194 = v70;
  v195 = v71;
  v193[0] = v63;
  v193[1] = v67;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v193, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v74 = sub_1001F2108();
  v75 = (uint64_t)v151;
  v76 = v156;
  View.accessibilityLabel<A>(_:)(&v194, v156, &type metadata for String, OpaqueTypeConformance2, v74);
  v77 = swift_bridgeObjectRelease(v72);
  v78 = (*(uint64_t (**)(char *, uint64_t, __n128))(v161 + 8))(v68, v76, v77);
  v79 = BookThemeViewModel.accessibilityDescription.getter(v78);
  v81 = v80;
  v194 = v79;
  v195 = v80;
  v82 = (uint64_t)v155;
  v83 = v74;
  v163 = v74;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v194, v162, &type metadata for String, v74);
  swift_bridgeObjectRelease(v81);
  v84 = sub_100010960(v75, &qword_1009E1520);
  LODWORD(v81) = *(unsigned __int8 *)(v2 + 32);
  v85 = BookThemeViewModel.accessibilityHint.getter(v84);
  v87 = v86;
  v88 = v157;
  sub_1003E6FEC(v81, v85, v86, v157);
  swift_bridgeObjectRelease(v87);
  v89 = sub_100010960(v82, &qword_1009E1520);
  v90 = v177;
  static AccessibilityTraits.isButton.getter(v89);
  v91 = sub_10028156C(&qword_1009E1578, &qword_1009E1528, (void (*)(void))sub_1003F3CE0, (void (*)(void))sub_1003F3DF4);
  v92 = (uint64_t)v164;
  View.accessibilityAddTraits(_:)(v90, v168, v91);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v90, v179);
  v93 = sub_100010960(v88, &qword_1009E1528);
  v94 = v178;
  static AccessibilityActionKind.default.getter(v93);
  v95 = swift_allocObject(&unk_1009037F0, 136, 7);
  v96 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v95 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v95 + 96) = v96;
  *(_OWORD *)(v95 + 112) = *(_OWORD *)(v2 + 96);
  *(_QWORD *)(v95 + 128) = *(_QWORD *)(v2 + 112);
  v97 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v95 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v95 + 32) = v97;
  v98 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v95 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v95 + 64) = v98;
  sub_1003F3BC4(v2);
  v99 = v174;
  ModifiedContent<>.accessibilityAction(_:_:)(v94, sub_1003F3E3C, v95, v176);
  v100 = swift_release(v95);
  (*(void (**)(char *, uint64_t, __n128))(v183 + 8))(v94, v182, v100);
  sub_100010960(v92, &qword_1009E1530);
  v101 = swift_allocObject(&unk_100903818, 136, 7);
  v102 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v101 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v101 + 96) = v102;
  *(_OWORD *)(v101 + 112) = *(_OWORD *)(v2 + 96);
  *(_QWORD *)(v101 + 128) = *(_QWORD *)(v2 + 112);
  v103 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v101 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v101 + 32) = v103;
  v104 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v101 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v101 + 64) = v104;
  v105 = v190;
  v194 = v147;
  v195 = v190;
  sub_1003F3BC4(v2);
  swift_retain(v101);
  v106 = swift_bridgeObjectRetain(v105);
  v107 = Text.init<A>(_:)(&v194, &type metadata for String, v83, v106);
  v109 = v108;
  LOBYTE(v88) = v110;
  v112 = v111;
  v113 = (uint64_t)v99;
  v114 = (uint64_t)v99;
  v115 = v191;
  sub_10000B5E4(v113, v191, &qword_1009E1530);
  v116 = v115 + *(int *)(v192 + 36);
  *(_QWORD *)v116 = sub_1003F3E68;
  *(_QWORD *)(v116 + 8) = v101;
  *(_QWORD *)(v116 + 16) = v107;
  *(_QWORD *)(v116 + 24) = v109;
  *(_BYTE *)(v116 + 32) = v88 & 1;
  *(_QWORD *)(v116 + 40) = v112;
  *(_QWORD *)(v116 + 48) = sub_1003F3B70;
  v117 = v189;
  *(_QWORD *)(v116 + 56) = v189;
  swift_retain(v117);
  swift_bridgeObjectRelease(v105);
  swift_release(v101);
  sub_100010960(v114, &qword_1009E1530);
  v118 = v154;
  v119 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007C74A0);
  v120 = v159;
  static Locale.current.getter(v119);
  v121 = v165;
  v122 = v158;
  v175(v165, v118, v158);
  v123 = objc_msgSend(v172, "bundleForClass:", v173);
  v124 = v167;
  v125 = v166;
  v171(v167, v120, v166);
  v126 = String.init(localized:table:bundle:locale:comment:)(v121, 0, 0, v123, v124, "Accessibility string for an action that opens the theme options menu", 68, 2);
  v128 = v127;
  v170(v120, v125);
  v169(v118, v122);
  v194 = v126;
  v195 = v128;
  v129 = sub_10028156C(&qword_1009E15A8, &qword_1009E1538, (void (*)(void))sub_1003F3E8C, (void (*)(void))sub_1003F3F30);
  v130 = (uint64_t)v181;
  v131 = v152;
  v132 = v191;
  View.accessibilityAction<A>(named:_:)(&v194, sub_1003F3B9C, v152, v192, &type metadata for String, v129, v163);
  swift_bridgeObjectRelease(v128);
  sub_100010960(v132, &qword_1009E1538);
  v133 = swift_allocObject(&unk_100903840, 136, 7);
  v134 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v133 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v133 + 96) = v134;
  *(_OWORD *)(v133 + 112) = *(_OWORD *)(v2 + 96);
  *(_QWORD *)(v133 + 128) = *(_QWORD *)(v2 + 112);
  v135 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v133 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v133 + 32) = v135;
  v136 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v133 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v133 + 64) = v136;
  sub_1003F3BC4(v2);
  v137 = sub_1003F3FC8();
  v138 = v184;
  View.onTapGesture(count:perform:)(1, sub_1003F46F4, v133, v185, v137);
  swift_release(v133);
  v139 = sub_100010960(v130, &qword_1009E1540);
  v140 = static Color.pink.getter(v139);
  swift_release(v131);
  v141 = swift_release(v189);
  v143 = v186;
  v142 = v187;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v186 + 16))(v188, v138, v187, v141);
  v144 = swift_release(v140);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v143 + 8))(v138, v142, v144);
}

uint64_t sub_1003EFC80@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)@<X0>(uint64_t *@<X8>);
  uint64_t (*v82)@<X0>(uint64_t *@<X8>);
  uint64_t (**v83)@<X0>(uint64_t *@<X8>);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  double v126;
  __n128 v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  double *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _OWORD v194[2];
  uint64_t v195;

  v190 = a6;
  v191 = a7;
  v188 = a4;
  v189 = a5;
  v186 = a2;
  v187 = a3;
  v192 = a8;
  v176 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v176);
  v184 = (uint64_t)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_10004CFD4(&qword_1009E15C8);
  __chkstk_darwin(v183);
  v185 = (uint64_t)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for Font.TextStyle(0);
  v171 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v174 = (char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for ThemeStateOverlayView(0);
  __chkstk_darwin(v172);
  v169 = (double *)((char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v173 = (uint64_t)&v158 - v14;
  v15 = sub_10004CFD4(&qword_1009E15D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10004CFD4(&qword_1009E15D8);
  __chkstk_darwin(v18);
  v20 = (char *)&v158 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_10004CFD4(&qword_1009E15E0);
  __chkstk_darwin(v159);
  v22 = (char *)&v158 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_10004CFD4(&qword_1009E15E8);
  __chkstk_darwin(v160);
  v24 = (char *)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_10004CFD4(&qword_1009E15F0);
  __chkstk_darwin(v161);
  v26 = (char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009E15F8);
  __chkstk_darwin(v27);
  v162 = (uint64_t)&v158 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10004CFD4(&qword_1009E1600);
  __chkstk_darwin(v29);
  v164 = (uint64_t)&v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_10004CFD4(&qword_1009E1608);
  __chkstk_darwin(v165);
  v193 = (uint64_t)&v158 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = (char *)sub_10004CFD4(&qword_1009E1610);
  __chkstk_darwin(v163);
  v166 = (char *)&v158 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_10004CFD4(&qword_1009E1618);
  __chkstk_darwin(v167);
  v170 = (char *)&v158 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_10004CFD4(&qword_1009E1620);
  __chkstk_darwin(v168);
  v177 = (char *)&v158 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_10004CFD4(&qword_1009E1628);
  __chkstk_darwin(v180);
  v182 = (char *)&v158 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_10004CFD4(&qword_1009E1630);
  v179 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v178 = (char *)&v158 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v17 = static HorizontalAlignment.center.getter(v37);
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v38 = sub_10004CFD4(&qword_1009E1638);
  v39 = a1;
  v40 = sub_1003F0A80(a1, &v17[*(int *)(v38 + 44)]);
  v41 = static Edge.Set.leading.getter(v40);
  v42 = v41;
  v43 = static Edge.Set.trailing.getter(v41);
  v44 = Edge.Set.init(rawValue:)(0);
  v45 = Edge.Set.init(rawValue:)(v44);
  if (Edge.Set.init(rawValue:)(v45 & v42) != v42)
    v44 = Edge.Set.init(rawValue:)(v44 | v42);
  v46 = Edge.Set.init(rawValue:)(v44);
  if (Edge.Set.init(rawValue:)(v46 & v43) != v43)
    LOBYTE(v44) = Edge.Set.init(rawValue:)(v44 | v43);
  v158 = v39;
  if ((*v39 & 1) != 0)
    v47 = 6.0;
  else
    v47 = 8.0;
  if ((*v39 & 1) != 0)
    v48 = 10.0;
  else
    v48 = 12.0;
  if ((*v39 & 1) != 0)
    v49 = 14.0;
  else
    v49 = 18.0;
  if ((*v39 & 1) != 0)
    v50 = 4.0;
  else
    v50 = 6.0;
  v51 = EdgeInsets.init(_all:)(v47);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  sub_10000B5E4((uint64_t)v17, (uint64_t)v20, &qword_1009E15D0);
  v58 = &v20[*(int *)(v18 + 36)];
  *v58 = v44;
  *((double *)v58 + 1) = v51;
  *((_QWORD *)v58 + 2) = v53;
  *((_QWORD *)v58 + 3) = v55;
  *((_QWORD *)v58 + 4) = v57;
  v58[40] = 0;
  v59 = sub_100010960((uint64_t)v17, &qword_1009E15D0);
  v60 = static Edge.Set.top.getter(v59);
  v61 = EdgeInsets.init(_all:)(v48);
  v63 = v62;
  v65 = v64;
  v67 = v66;
  sub_10000B5E4((uint64_t)v20, (uint64_t)v22, &qword_1009E15D8);
  v68 = &v22[*(int *)(v159 + 36)];
  *v68 = v60;
  *((double *)v68 + 1) = v61;
  *((_QWORD *)v68 + 2) = v63;
  *((_QWORD *)v68 + 3) = v65;
  *((_QWORD *)v68 + 4) = v67;
  v68[40] = 0;
  v69 = sub_100010960((uint64_t)v20, &qword_1009E15D8);
  v70 = static Edge.Set.bottom.getter(v69);
  v71 = EdgeInsets.init(_all:)(v49);
  v73 = v72;
  v75 = v74;
  v77 = v76;
  sub_10000B5E4((uint64_t)v22, (uint64_t)v24, &qword_1009E15E0);
  v78 = &v24[*(int *)(v160 + 36)];
  *v78 = v70;
  *((double *)v78 + 1) = v71;
  *((_QWORD *)v78 + 2) = v73;
  *((_QWORD *)v78 + 3) = v75;
  *((_QWORD *)v78 + 4) = v77;
  v78[40] = 0;
  v79 = sub_100010960((uint64_t)v22, &qword_1009E15E0);
  v80 = static Alignment.center.getter(v79);
  v82 = v81;
  sub_10000B5E4((uint64_t)v24, (uint64_t)v26, &qword_1009E15E8);
  v83 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v26[*(int *)(v161 + 36)];
  *v83 = sub_100233FB4;
  v83[1] = 0;
  v83[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v80;
  v83[3] = v82;
  v84 = sub_100010960((uint64_t)v24, &qword_1009E15E8);
  v85 = static Alignment.center.getter(v84);
  v86 = v162;
  sub_1005F2CA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v162, 0.0, 1, 0.0, 1, v85, v87);
  v88 = sub_100010960((uint64_t)v26, &qword_1009E15F0);
  v89 = static Alignment.center.getter(v88);
  v90 = v164;
  sub_1005F2CFC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v164, 0.0, 1, INFINITY, 0, v89, v91);
  v92 = sub_100010960(v86, &qword_1009E15F8);
  v93 = *((_QWORD *)v39 + 1);
  v94 = BookThemeViewModel.backgroundColor.getter(v92);
  v95 = Color.init(_:)(v94);
  v97 = static Edge.Set.all.getter(v96);
  v98 = v193;
  sub_10000B5E4(v90, v193, &qword_1009E1600);
  v99 = v98 + *(int *)(v165 + 36);
  *(_QWORD *)v99 = v95;
  *(_BYTE *)(v99 + 8) = v97;
  v100 = sub_100010960(v90, &qword_1009E1600);
  v165 = static Alignment.center.getter(v100);
  v164 = v101;
  v102 = (uint64_t)v166;
  v163 = &v166[*((int *)v163 + 9)];
  v103 = v169;
  *(_QWORD *)v169 = v93;
  v103[1] = v50;
  v103[2] = v47;
  *(_QWORD *)&v194[0] = 0x402C000000000000;
  v104 = enum case for Font.TextStyle.caption(_:);
  v105 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 104);
  v106 = v174;
  v107 = v175;
  v105(v174, enum case for Font.TextStyle.caption(_:), v175);
  v108 = sub_100224AA8();
  swift_retain(v93);
  ScaledMetric.init(wrappedValue:relativeTo:)(v194, v106, &type metadata for Double, v108);
  *(_QWORD *)&v194[0] = 0x4032000000000000;
  v105(v106, v104, v107);
  ScaledMetric.init(wrappedValue:relativeTo:)(v194, v106, &type metadata for Double, v108);
  v109 = (uint64_t)v103;
  v110 = v173;
  sub_10002C960(v109, v173, type metadata accessor for ThemeStateOverlayView);
  v111 = v110;
  v112 = (uint64_t)v163;
  sub_10002C960(v111, (uint64_t)v163, type metadata accessor for ThemeStateOverlayView);
  v113 = (uint64_t *)(v112 + *(int *)(sub_10004CFD4(&qword_1009E1640) + 36));
  v114 = v164;
  *v113 = v165;
  v113[1] = v114;
  sub_100025B3C(v193, v102, &qword_1009E1608);
  if (qword_1009CE3D8 != -1)
    swift_once(&qword_1009CE3D8, sub_1003E7330);
  v115 = sub_100048F64(v176, (uint64_t)qword_1009E1008);
  v116 = (uint64_t)v170;
  v117 = (uint64_t)&v170[*(int *)(v167 + 36)];
  sub_10002CD84(v115, v117, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v117 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_100025B3C(v102, v116, &qword_1009E1610);
  v118 = (uint64_t)v177;
  v119 = (uint64_t)&v177[*(int *)(v168 + 36)];
  sub_10002CD84(v115, v119, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_BYTE *)(v119 + *(int *)(sub_10004CFD4(&qword_1009D5140) + 36)) = 0;
  sub_100025B3C(v116, v118, &qword_1009E1618);
  v120 = v184;
  sub_10002CD84(v115, v184, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v121 = v158;
  LOBYTE(v115) = v158[32];
  v122 = (void *)objc_opt_self(UIColor);
  if ((v115 & 1) != 0)
  {
    v123 = Color.init(_:)(objc_msgSend(v122, "labelColor"));
    if (qword_1009CE3B8 != -1)
      swift_once(&qword_1009CE3B8, sub_1003E72F0);
    v126 = *(double *)&qword_1009E0FE8;
  }
  else
  {
    v123 = Color.init(_:)(objc_msgSend(v122, "quaternaryLabelColor"));
    v124 = *((_QWORD *)v121 + 11);
    v125 = v121[96];
    sub_1001F2508(v124, v125);
    v126 = sub_1006684BC(v124, v125);
    sub_1001F2564(v124, v125);
  }
  v127.n128_f64[0] = v126;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v194, 0, 0, _swiftEmptyArrayStorage, v127, 10.0, 0.0);
  v128 = v185;
  sub_10002CD84(v120, v185, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v129 = *(double *)v194 * 0.5;
  v130 = v128 + *(int *)(v183 + 68);
  sub_10002CD84(v120, v130, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v130 + *(int *)(type metadata accessor for RoundedRectangle._Inset(0) + 20)) = v129;
  v131 = v130 + *(int *)(sub_10004CFD4(&qword_1009E1648) + 36);
  v132 = v194[1];
  *(_OWORD *)v131 = v194[0];
  *(_OWORD *)(v131 + 16) = v132;
  *(_QWORD *)(v131 + 32) = v195;
  v133 = sub_10004CFD4(&qword_1009E1650);
  *(_QWORD *)(v130 + *(int *)(v133 + 52)) = v123;
  *(_WORD *)(v130 + *(int *)(v133 + 56)) = 256;
  v134 = static Alignment.center.getter(v133);
  v136 = v135;
  v137 = (uint64_t *)(v130 + *(int *)(sub_10004CFD4(&qword_1009E1658) + 36));
  *v137 = v134;
  v137[1] = v136;
  v138 = sub_10002C8F0(v120, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v139 = static Alignment.center.getter(v138);
  v141 = v140;
  v142 = v180;
  v143 = (uint64_t)v182;
  v144 = (uint64_t)&v182[*(int *)(v180 + 36)];
  sub_10000B5E4(v128, v144, &qword_1009E15C8);
  v145 = (uint64_t *)(v144 + *(int *)(sub_10004CFD4(&qword_1009E1660) + 36));
  *v145 = v139;
  v145[1] = v141;
  sub_10000B5E4(v118, v143, &qword_1009E1620);
  sub_100010960(v128, &qword_1009E15C8);
  v146 = sub_100010960(v118, &qword_1009E1620);
  __chkstk_darwin(v146);
  v147 = v186;
  *(&v158 - 8) = v121;
  *(&v158 - 7) = v147;
  v153 = v187;
  v154 = v188;
  v155 = v189;
  v156 = v190;
  v157 = v191;
  v148 = sub_10004CFD4(&qword_1009E1668);
  v149 = sub_1003F4080();
  v150 = sub_100030B34(&qword_1009E16F0, &qword_1009E1668, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v151 = v178;
  View.contextMenu<A>(menuItems:)(sub_1003F406C, &v158 - 10, v142, v148, v149, v150);
  sub_100010960(v143, &qword_1009E1628);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v179 + 32))(v192, v151, v181);
}

uint64_t sub_1003F0A80@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  void *v54;
  unint64_t v55;
  __n128 v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char *v64;
  uint64_t OpaqueTypeConformance2;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  int *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned __int8 v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  unsigned __int8 v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v137 = a2;
  v127 = sub_10004CFD4(&qword_1009E1708);
  v128 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v122 = (char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10004CFD4(&qword_1009E1710);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v123 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10004CFD4(&qword_1009E1718);
  __chkstk_darwin(v126);
  v125 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10004CFD4(&qword_1009E1720);
  __chkstk_darwin(v134);
  v132 = (uint64_t)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_10004CFD4(&qword_1009E1728);
  __chkstk_darwin(v135);
  v136 = (uint64_t)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v131 = (uint64_t)&v107 - v9;
  __chkstk_darwin(v10);
  v133 = (uint64_t)&v107 - v11;
  v12 = type metadata accessor for TextFormatSizeLabel(0);
  __chkstk_darwin(v12);
  v14 = (char **)((char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v113 = sub_10004CFD4(&qword_1009D3880);
  __chkstk_darwin(v113);
  v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_10004CFD4(&qword_1009E1730);
  __chkstk_darwin(v112);
  v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_10004CFD4(&qword_1009E1738);
  v139 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v124 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v107 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v107 - v24;
  v107 = (char *)&v107 - v24;
  v26 = *a1;
  v29 = static Alignment.center.getter(v27);
  if ((v26 & 1) != 0)
    v30 = 0x403A000000000000;
  else
    v30 = 0x4041800000000000;
  if ((v26 & 1) != 0)
    v31 = 22.0;
  else
    v31 = 30.0;
  v32 = 0x4030000000000000;
  if ((v26 & 1) == 0)
    v32 = 0x4034000000000000;
  v111 = v32;
  if ((v26 & 1) != 0)
    v33 = 10.0;
  else
    v33 = 15.0;
  v34 = 0x4018000000000000;
  if ((v26 & 1) == 0)
    v34 = 0x4024000000000000;
  v115 = v34;
  _FrameLayout.init(width:height:alignment:)(&v140, 0, 1, v30, 0, v29, v28);
  v121 = v140;
  v120 = v141;
  v119 = v142;
  v118 = v143;
  v117 = v144;
  v116 = v145;
  v35 = sub_100445D50(v31);
  v36 = a1;
  v114 = (double *)a1;
  v37 = *((_QWORD *)a1 + 2);
  v38 = *((_QWORD *)v36 + 3);
  *v14 = swift_getKeyPath(&unk_100722010);
  v39 = sub_10004CFD4(&qword_1009D38A0);
  swift_storeEnumTagMultiPayload(v14, v39, 0);
  *(_QWORD *)((char *)v14 + *(int *)(v12 + 20)) = v35;
  v40 = (_QWORD *)((char *)v14 + *(int *)(v12 + 24));
  *v40 = v37;
  v40[1] = v38;
  v41 = swift_bridgeObjectRetain(v38);
  v42 = BookThemeViewModel.textColor.getter(v41);
  v43 = Color.init(_:)(v42);
  if ((BookThemeViewModel.enabled.getter() & 1) != 0)
    v44.n128_f64[0] = 1.0;
  else
    v44.n128_f64[0] = 0.3;
  v45 = Color.opacity(_:)(v43, v44);
  swift_release(v43);
  KeyPath = swift_getKeyPath(&unk_100722040);
  sub_10002CD84((uint64_t)v14, (uint64_t)v16, type metadata accessor for TextFormatSizeLabel);
  v47 = (uint64_t *)&v16[*(int *)(v113 + 36)];
  *v47 = KeyPath;
  v47[1] = v45;
  sub_10002C8F0((uint64_t)v14, type metadata accessor for TextFormatSizeLabel);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v18, &qword_1009D3880);
  v48 = v112;
  *(_WORD *)&v18[*(int *)(v112 + 36)] = 257;
  sub_100010960((uint64_t)v16, &qword_1009D3880);
  v49 = sub_1001F5558(&qword_1009E1740, &qword_1009E1730, (void (*)(void))sub_100226E3C);
  View.lineLimit(_:reservesSpace:)(1, 1, v48, v49);
  sub_100010960((uint64_t)v18, &qword_1009E1730);
  v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v139 + 32))(v25, v22, v138);
  v51 = static Alignment.center.getter(v50);
  _FrameLayout.init(width:height:alignment:)(&v146, 0, 1, v111, 0, v51, v52);
  v113 = v146;
  LODWORD(v112) = v147;
  v111 = v148;
  v110 = v149;
  v109 = v150;
  v108 = v151;
  v152 = (void *)BookThemeViewModel.title.getter(v53);
  v153 = v54;
  v55 = sub_1001F2108();
  v57 = Text.init<A>(_:)(&v152, &type metadata for String, v55, v56);
  v59 = (uint64_t)v58;
  v61 = v60;
  v152 = (void *)v57;
  v153 = v58;
  v63 = v62 & 1;
  LOBYTE(v154) = v62 & 1;
  v155 = v60;
  v64 = v122;
  View.lineLimit(_:reservesSpace:)(2, 1, &type metadata for Text, &protocol witness table for Text);
  sub_1001F5B28(v57, v59, v63);
  swift_bridgeObjectRelease(v61);
  v152 = &type metadata for Text;
  v153 = &protocol witness table for Text;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v152, &opaque type descriptor for <<opaque return type of View.lineLimit(_:reservesSpace:)>>, 1);
  v66 = v123;
  v67 = v127;
  View.hyphenationFactor(_:)(v127, OpaqueTypeConformance2, 0.6);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v64, v67);
  v68 = sub_100445D50(v33);
  v69 = swift_getKeyPath(&unk_100722070);
  v70 = v129;
  v71 = v125;
  v72 = v130;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v125, v66, v130);
  v73 = (uint64_t *)&v71[*(int *)(v126 + 36)];
  v74 = (uint64_t)v71;
  *v73 = v69;
  v73[1] = v68;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v66, v72);
  v76 = BookThemeViewModel.textColor.getter(v75);
  v77 = Color.init(_:)(v76);
  if ((BookThemeViewModel.enabled.getter() & 1) != 0)
    v78.n128_f64[0] = 1.0;
  else
    v78.n128_f64[0] = 0.3;
  v79 = Color.opacity(_:)(v77, v78);
  swift_release(v77);
  v80 = swift_getKeyPath(&unk_100722040);
  v81 = (uint64_t)v71;
  v82 = v132;
  sub_10000B5E4(v81, v132, &qword_1009E1718);
  v83 = (uint64_t *)(v82 + *(int *)(v134 + 36));
  *v83 = v80;
  v83[1] = v79;
  sub_100010960(v74, &qword_1009E1718);
  v84 = v114[14] / v114[13];
  v85 = swift_getKeyPath(&unk_1007220A0);
  v86 = v131;
  sub_10000B5E4(v82, v131, &qword_1009E1720);
  v87 = v86 + *(int *)(v135 + 36);
  *(_QWORD *)v87 = v85;
  *(double *)(v87 + 8) = v84;
  sub_100010960(v82, &qword_1009E1720);
  v88 = v133;
  v89 = sub_100025B3C(v86, v133, &qword_1009E1728);
  v90 = static Alignment.center.getter(v89);
  _FrameLayout.init(width:height:alignment:)(&v152, 0, 1, v115, 0, v90, v91);
  v135 = (uint64_t)v152;
  LODWORD(v134) = v153;
  v132 = v154;
  LODWORD(v131) = v155;
  v130 = v156;
  v129 = v157;
  v92 = v139;
  v93 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
  v94 = v124;
  v95 = v107;
  v96 = v138;
  v93(v124, v107, v138);
  v97 = v136;
  sub_10000B5E4(v88, v136, &qword_1009E1728);
  v98 = v137;
  *v137 = 0;
  *((_BYTE *)v98 + 8) = 1;
  v98[2] = v121;
  *((_BYTE *)v98 + 24) = v120;
  v98[4] = v119;
  *((_BYTE *)v98 + 40) = v118;
  v99 = v116;
  v98[6] = v117;
  v98[7] = v99;
  v100 = (int *)sub_10004CFD4(&qword_1009E1748);
  v93((char *)v98 + v100[12], v94, v96);
  v101 = (char *)v98 + v100[16];
  *(_QWORD *)v101 = 0;
  v101[8] = 1;
  *((_QWORD *)v101 + 2) = v113;
  v101[24] = v112;
  *((_QWORD *)v101 + 4) = v111;
  v101[40] = v110;
  v102 = v108;
  *((_QWORD *)v101 + 6) = v109;
  *((_QWORD *)v101 + 7) = v102;
  sub_10000B5E4(v97, (uint64_t)v98 + v100[20], &qword_1009E1728);
  v103 = (char *)v98 + v100[24];
  *(_QWORD *)v103 = 0;
  v103[8] = 1;
  *((_QWORD *)v103 + 2) = v135;
  v103[24] = v134;
  *((_QWORD *)v103 + 4) = v132;
  v103[40] = v131;
  v104 = v129;
  *((_QWORD *)v103 + 6) = v130;
  *((_QWORD *)v103 + 7) = v104;
  sub_100010960(v88, &qword_1009E1728);
  v105 = *(void (**)(char *, uint64_t))(v92 + 8);
  v105(v95, v96);
  sub_100010960(v97, &qword_1009E1728);
  return ((uint64_t (*)(char *, uint64_t))v105)(v94, v96);
}

uint64_t sub_1003F1550@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a5;
  v44 = a6;
  v40 = a3;
  v41 = a4;
  v42 = a1;
  v9 = sub_10004CFD4(&qword_1009D5150);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - v14;
  v16 = sub_10004CFD4(&qword_1009D8458);
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009E16F8);
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v39 - v24;
  if ((BookThemeViewModel.isOverride.getter(v23) & 1) != 0)
  {
    static ButtonRole.destructive.getter(v26);
    v27 = type metadata accessor for ButtonRole(0);
    v28 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v18, 0, 1, v27);
    v39 = (uint64_t)&v39;
    __chkstk_darwin(v28);
    v29 = v41;
    *(&v39 - 2) = v40;
    *(&v39 - 1) = v29;
    swift_retain(a2);
    v41 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
    v30 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    Button.init(role:action:label:)(v18, v42, a2, sub_1003F44A4, &v39 - 4, v41, v30);
    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v25, v31, 1, v9);
  v32 = v44;
  swift_retain(v44);
  v33 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v34 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(action:label:)(v43, v32, sub_1003F18D4, 0, v33, v34);
  sub_10000B5E4((uint64_t)v25, (uint64_t)v21, &qword_1009E16F8);
  v35 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v35(v12, v15, v9);
  sub_10000B5E4((uint64_t)v21, a7, &qword_1009E16F8);
  v36 = sub_10004CFD4(&qword_1009E1700);
  v35((char *)(a7 + *(int *)(v36 + 48)), v12, v9);
  v37 = *(void (**)(char *, uint64_t))(v10 + 8);
  v37(v15, v9);
  sub_100010960((uint64_t)v25, &qword_1009E16F8);
  v37(v12, v9);
  return sub_100010960((uint64_t)v21, &qword_1009E16F8);
}

uint64_t sub_1003F1860(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  _QWORD v5[2];

  v5[0] = a1;
  v5[1] = a2;
  v3 = sub_1001F2108();
  swift_bridgeObjectRetain(a2);
  return Label<>.init<A>(_:systemImage:)(v5, 0xD00000000000001BLL, 0x80000001007B9D00, &type metadata for String, v3);
}

uint64_t sub_1003F18D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v24[3];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24[-1] - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24[-1] - v12;
  v14 = String.LocalizationValue.init(stringLiteral:)(0x7A696D6F74737543, 0xEF656D6568542065);
  static Locale.current.getter(v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Reading settings theme options menu text", 40, 2);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v24[0] = v18;
  v24[1] = v20;
  v21 = sub_1001F2108();
  return Label<>.init<A>(_:systemImage:)(v24, 1918985575, 0xE400000000000000, &type metadata for String, v21);
}

void sub_1003F1ACC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double v4;

  v3 = static Color.clear.getter(a1);
  v4 = GeometryProxy.size.getter();
  *(_QWORD *)a2 = v3;
  *(double *)(a2 + 8) = v4;
}

uint64_t sub_1003F1B08@<X0>(uint64_t a1@<X8>)
{
  return sub_1003EEF70(a1);
}

uint64_t sub_1003F1B58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[6];

  v33 = a2;
  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin(v4);
  v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = type metadata accessor for Array(255, v6);
  v8 = a1[5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v8, v6, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v30 = a1[2];
  v10 = v30;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v8, v6, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v41[0] = v7;
  v41[1] = AssociatedTypeWitness;
  v41[2] = v10;
  v41[3] = WitnessTable;
  v41[4] = AssociatedConformanceWitness;
  v13 = type metadata accessor for ForEach(255, v41);
  v40 = a1[4];
  v14 = v40;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v13);
  v16 = type metadata accessor for LazyVGrid(0, v13, v15);
  v31 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  v22 = *(_QWORD *)(v2 + 8);
  v29 = *(_QWORD *)(v2 + 16);
  v35 = v30;
  v36 = v6;
  v37 = v14;
  v38 = v8;
  v39 = v2;
  swift_bridgeObjectRetain(v22);
  v24 = static HorizontalAlignment.center.getter(v23);
  v25 = v32;
  sub_1003F20BC();
  LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)(v22, v24, v29, 0, v25, sub_1003F4558, v34, v13, v15);
  swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v16);
  sub_100344038((uint64_t)v18, v16, (uint64_t)v21);
  v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v26(v18, v16);
  sub_100341C00((uint64_t)v21, v16, v33);
  return ((uint64_t (*)(char *, uint64_t))v26)(v21, v16);
}

uint64_t sub_1003F1DB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;

  v26 = a4;
  v28 = a6;
  v25 = type metadata accessor for Array(255, a3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a5, a3, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v25);
  v31[0] = v25;
  v31[1] = AssociatedTypeWitness;
  v31[2] = a2;
  v31[3] = WitnessTable;
  v31[4] = swift_getAssociatedConformanceWitness(a5, a3, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v10 = type metadata accessor for ForEach(0, v31);
  v27 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&AssociatedTypeWitness - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&AssociatedTypeWitness - v14;
  v30 = *a1;
  v16 = v30;
  v31[0] = v30;
  v17 = swift_allocObject(&unk_100903868, 88, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = v26;
  *(_QWORD *)(v17 + 32) = v26;
  *(_QWORD *)(v17 + 40) = a5;
  v19 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v17 + 64) = v19;
  v20 = a1[4];
  *(_QWORD *)(v17 + 80) = v20;
  v32 = a1[1];
  swift_bridgeObjectRetain(v16);
  sub_100210E8C(v31);
  sub_100210E8C(&v32);
  swift_retain(v20);
  ForEach<>.init(_:content:)(&v30, sub_1003F459C, v17, v25, AssociatedTypeWitness, a2, WitnessTable, v18, a5);
  v29 = v18;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v10);
  sub_100344038((uint64_t)v12, v10, (uint64_t)v15);
  v21 = *(void (**)(char *, uint64_t))(v27 + 8);
  v21(v12, v10);
  sub_100341C00((uint64_t)v15, v10, v28);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, v10);
}

uint64_t sub_1003F1FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v15 - v10;
  (*(void (**)(double))(v12 + 24))(v9);
  sub_100344038((uint64_t)v7, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, a2);
  sub_100341C00((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_1003F20BC()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews(0);
  v3 = 0;
  v1 = sub_100008DB0(&qword_1009F40B0, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  return dispatch thunk of OptionSet.init(rawValue:)(&v3, v0, v1);
}

uint64_t sub_1003F2120@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003F1B58(a1, a2);
}

uint64_t sub_1003F2158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for RoundedRectangle(0);
  sub_10001BFD8(v0, qword_1009E1028);
  v1 = sub_100048F64(v0, (uint64_t)qword_1009E1028);
  if (qword_1009CE3D8 != -1)
    swift_once(&qword_1009CE3D8, sub_1003E7330);
  v2 = sub_100048F64(v0, (uint64_t)qword_1009E1008);
  return sub_10002CD84(v2, v1, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
}

uint64_t sub_1003F21E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE3E8 != -1)
    swift_once(&qword_1009CE3E8, sub_1003F2158);
  v2 = type metadata accessor for RoundedRectangle(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009E1028);
  return sub_10002CD84(v3, a1, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
}

uint64_t sub_1003F2254(uint64_t a1)
{
  return sub_1003F2260(a1, &qword_1009E1040);
}

uint64_t sub_1003F2260(uint64_t a1, uint64_t *a2)
{
  id v3;
  uint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  result = Color.init(_:)(v3);
  *a2 = result;
  return result;
}

double sub_1003F22A4@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1009CE3F0 != -1)
    swift_once(&qword_1009CE3F0, sub_1003F2254);
  v2 = qword_1009E1040;
  *a1 = qword_1009E1040;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1003F22F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_1003F3B28();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1003F2344@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100721D70);
  v5 = swift_getKeyPath(&unk_100721D98);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1003F23C0(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100721D70);
  v5 = swift_getKeyPath(&unk_100721D98);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1003F242C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003F2458@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003F2488()
{
  return sub_1003F253C((uint64_t (*)(uint64_t))sub_1003EC208);
}

uint64_t sub_1003F2498()
{
  return sub_1003F33D4((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didTapWaitForWifi());
}

unint64_t sub_1003F24A4()
{
  unint64_t result;

  result = qword_1009E1248;
  if (!qword_1009E1248)
  {
    result = swift_getWitnessTable(&unk_100721FD8, &type metadata for ReadingSettingsButtonBackground);
    atomic_store(result, (unint64_t *)&qword_1009E1248);
  }
  return result;
}

unint64_t sub_1003F24E8()
{
  unint64_t result;

  result = qword_1009E1250;
  if (!qword_1009E1250)
  {
    result = swift_getWitnessTable(&unk_100721FA0, &type metadata for ReadingSettingsButtonShape);
    atomic_store(result, (unint64_t *)&qword_1009E1250);
  }
  return result;
}

uint64_t sub_1003F2530()
{
  return sub_1003F253C((uint64_t (*)(uint64_t))sub_1003EB840);
}

uint64_t sub_1003F253C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

_QWORD *sub_1003F2578(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[20];
  v3 = a1[23];
  v4 = a1[25];
  swift_bridgeObjectRetain(a1[19]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *sub_1003F25CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[19];
  v3 = a1[20];
  v4 = a1[23];
  swift_release(a1[25]);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

double sub_1003F2620@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  return sub_1003EB428(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1003F2670(uint64_t a1)
{
  return sub_1003F267C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1003EB7A0);
}

uint64_t sub_1003F267C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1003F26CC(uint64_t a1)
{
  return sub_1003F26F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didTapResetTheme(_:));
}

uint64_t sub_1003F26DC(uint64_t a1)
{
  return sub_1003F26F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didTapOptions(with:));
}

uint64_t sub_1003F26EC(uint64_t a1)
{
  return sub_1003F26F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didSelect(theme:));
}

uint64_t sub_1003F26F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  v6 = (_QWORD *)(v2 + ((v5 + 16) & ~v5));
  v7 = v6[3];
  v8 = v6[4];
  sub_10003F198(v6, v7);
  return a2(a1, v7, v8);
}

void sub_1003F2764(double *a1@<X8>)
{
  *a1 = EnvironmentValues.pixelLength.getter();
}

uint64_t sub_1003F2798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  v4 = (_QWORD *)(v1 + ((v3 + 16) & ~v3));
  v5 = v4[3];
  v6 = v4[4];
  sub_10003F198(v4, v5);
  return dispatch thunk of ReadingSettingsEventHandling.readingSettingsSetAdjustingBrightness(_:)(a1, v5, v6);
}

id sub_1003F27F8()
{
  uint64_t v0;

  return sub_100521E58(*(double *)(v0 + 24));
}

double sub_1003F2818()
{
  return sub_1003F2824((void (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didTapDecreaseContentSize());
}

double sub_1003F2824(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  return sub_1003ED030((_QWORD *)(v1 + ((v3 + 16) & ~v3)), a1);
}

double sub_1003F2868()
{
  return sub_1003F2824((void (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didTapIncreaseContentSize());
}

uint64_t sub_1003F2878()
{
  return sub_1003F33D4((uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ReadingSettingsEventHandling.didTapResetContentSize());
}

unint64_t sub_1003F2884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1320;
  if (!qword_1009E1320)
  {
    v1 = sub_100030B74(&qword_1009E1300);
    sub_100030B34(&qword_1009E1328, &qword_1009E12F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1320);
  }
  return result;
}

void sub_1003F2924(_BYTE *a1@<X8>)
{
  type metadata accessor for ReadingSettingsView(0);
  sub_1003EDE20(a1);
}

uint64_t sub_1003F2968(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  v4 = (_QWORD *)(v1 + ((v3 + 32) & ~v3));
  v5 = v4[3];
  v6 = v4[4];
  v7 = *a1;
  sub_10003F198(v4, v5);
  return dispatch thunk of ReadingSettingsEventHandling.didSelect(pageNavigationStyle:)(v7, v5, v6);
}

uint64_t sub_1003F29CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003F29F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  *a1 = result & 1;
  return result;
}

void sub_1003F2A28(_BYTE *a1@<X8>)
{
  type metadata accessor for ReadingSettingsView(0);
  sub_1003EDE8C(a1);
}

uint64_t sub_1003F2A6C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = (int *)type metadata accessor for ReadingSettingsView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v4));
  v7 = v0 + v4 + v1[5];
  v8 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6] + 8));

  swift_release(*(_QWORD *)(v0 + v4 + v1[10]));
  v9 = (_QWORD *)(v0 + v4 + v1[11]);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }

  v12 = (_QWORD *)(v6 + v1[13]);
  v13 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v16 = (_QWORD *)(v6 + v1[14]);
  if (swift_getEnumCaseMultiPayload(v16, v13) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    swift_release(*v16);
  }
  sub_1001F2564(*(_QWORD *)(v6 + v1[15]), *(_BYTE *)(v6 + v1[15] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[16]), *(_BYTE *)(v6 + v1[16] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[17]), *(_BYTE *)(v6 + v1[17] + 8));
  swift_release(*(_QWORD *)(v6 + v1[18] + 8));
  swift_release(*(_QWORD *)(v6 + v1[19] + 8));
  swift_release(*(_QWORD *)(v6 + v1[20] + 8));
  swift_release(*(_QWORD *)(v6 + v1[21] + 8));
  v19 = v6 + v1[22];
  v20 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v6 + v1[23];
  v22 = type metadata accessor for AccessibilityTechnologies(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v21 + *(int *)(v24 + 40)));
  swift_release(*(_QWORD *)(v6 + v1[24] + 16));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003F2D78(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  v4 = (_QWORD *)(v1 + ((v3 + 32) & ~v3));
  v5 = *a1;
  v6 = v4[3];
  v7 = v4[4];
  sub_10003F198(v4, v6);
  return dispatch thunk of ReadingSettingsEventHandling.didSelectVoiceOver(scroll:)(v5, v6, v7);
}

uint64_t sub_1003F2DDC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = (int *)type metadata accessor for ReadingSettingsView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v4));
  v7 = v0 + v4 + v1[5];
  v8 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6] + 8));

  swift_release(*(_QWORD *)(v0 + v4 + v1[10]));
  v9 = (_QWORD *)(v0 + v4 + v1[11]);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }

  v12 = (_QWORD *)(v6 + v1[13]);
  v13 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v16 = (_QWORD *)(v6 + v1[14]);
  if (swift_getEnumCaseMultiPayload(v16, v13) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    swift_release(*v16);
  }
  sub_1001F2564(*(_QWORD *)(v6 + v1[15]), *(_BYTE *)(v6 + v1[15] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[16]), *(_BYTE *)(v6 + v1[16] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[17]), *(_BYTE *)(v6 + v1[17] + 8));
  swift_release(*(_QWORD *)(v6 + v1[18] + 8));
  swift_release(*(_QWORD *)(v6 + v1[19] + 8));
  swift_release(*(_QWORD *)(v6 + v1[20] + 8));
  swift_release(*(_QWORD *)(v6 + v1[21] + 8));
  v19 = v6 + v1[22];
  v20 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v6 + v1[23];
  v22 = type metadata accessor for AccessibilityTechnologies(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v21 + *(int *)(v24 + 40)));
  swift_release(*(_QWORD *)(v6 + v1[24] + 16));
  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

double sub_1003F30EC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = type metadata accessor for ReadingSettingsView(0);
  return sub_1003EDCFC(a1, a2, *(double *)(v2+ ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_1003F314C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E13A8;
  if (!qword_1009E13A8)
  {
    v1 = sub_100030B74(&qword_1009E13A0);
    sub_1003F31B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E13A8);
  }
  return result;
}

unint64_t sub_1003F31B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E13B0;
  if (!qword_1009E13B0)
  {
    v1 = sub_100030B74(&qword_1009E13B8);
    sub_100030B34(&qword_1009E13C0, &qword_1009E13C8, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E13B0);
  }
  return result;
}

unint64_t sub_1003F3234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1408;
  if (!qword_1009E1408)
  {
    v1 = sub_100030B74(&qword_1009E13E8);
    sub_1003978CC();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1408);
  }
  return result;
}

unint64_t sub_1003F32B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1410;
  if (!qword_1009E1410)
  {
    v1 = sub_100030B74(&qword_1009E13D8);
    sub_100030B34(&qword_1009E1418, &qword_1009E13D0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1410);
  }
  return result;
}

unint64_t sub_1003F333C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1440;
  if (!qword_1009E1440)
  {
    v1 = sub_100030B74(&qword_1009D8A68);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1440);
  }
  return result;
}

uint64_t sub_1003F33C4()
{
  return sub_1003F253C((uint64_t (*)(uint64_t))sub_1003ECB48);
}

uint64_t sub_1003F33D4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ReadingSettingsView(0) - 8) + 80);
  v4 = (_QWORD *)(v1 + ((v3 + 16) & ~v3));
  v5 = v4[3];
  v6 = v4[4];
  sub_10003F198(v4, v5);
  return a1(v5, v6);
}

unint64_t sub_1003F3430()
{
  unint64_t result;

  result = qword_1009E1448;
  if (!qword_1009E1448)
  {
    result = swift_getWitnessTable(&unk_100729B9C, &type metadata for RSCloseButton);
    atomic_store(result, (unint64_t *)&qword_1009E1448);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSettingsButtonShape()
{
  return &type metadata for ReadingSettingsButtonShape;
}

ValueMetadata *type metadata accessor for ReadingSettingsButtonBackground()
{
  return &type metadata for ReadingSettingsButtonBackground;
}

uint64_t destroy for ThemeButton(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  return sub_1001F2564(*(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
}

uint64_t initializeWithCopy for ThemeButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = *(_OWORD *)(a2 + 48);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v11;
  *(_OWORD *)(a1 + 64) = v12;
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  v9 = *(_BYTE *)(a2 + 96);
  swift_retain(v4);
  swift_bridgeObjectRetain(v6);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v7);
  sub_1001F2508(v8, v9);
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for ThemeButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_BYTE *)(a2 + 96);
  sub_1001F2508(v14, v15);
  v16 = *(_QWORD *)(a1 + 88);
  v17 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v14;
  *(_BYTE *)(a1 + 96) = v15;
  sub_1001F2564(v16, v17);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithTake for ThemeButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v8);
  v9 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v9);
  v10 = *(_BYTE *)(a2 + 96);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = v10;
  sub_1001F2564(v11, v12);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemeButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThemeButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemeButton()
{
  return &type metadata for ThemeButton;
}

uint64_t sub_1003F3818(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  return swift_release(a1[4]);
}

uint64_t *sub_1003F3848(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  v6 = a2[4];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v6);
  return a1;
}

uint64_t *sub_1003F389C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v9 = a2[3];
  v8 = a2[4];
  v10 = a1[4];
  a1[3] = v9;
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t sub_1003F3918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksAssetAppIntentsPerformer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksAssetAppIntentsPerformer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Grid(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Grid);
}

uint64_t sub_1003F3A08()
{
  return sub_1001F5558(&qword_1009E14E8, &qword_1009E1170, (void (*)(void))sub_1003F3A3C);
}

uint64_t sub_1003F3A3C()
{
  return sub_1001F5558(&qword_1009E14F0, &qword_1009E1168, (void (*)(void))sub_1003F3A60);
}

unint64_t sub_1003F3A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E14F8;
  if (!qword_1009E14F8)
  {
    v1 = sub_100030B74(&qword_1009E1160);
    sub_1003EEAA0();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E14F8);
  }
  return result;
}

uint64_t sub_1003F3AE4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_100870350, 1);
}

uint64_t sub_1003F3B18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100870328, 1);
}

unint64_t sub_1003F3B28()
{
  unint64_t result;

  result = qword_1009E1500;
  if (!qword_1009E1500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(result, (unint64_t *)&qword_1009E1500);
  }
  return result;
}

uint64_t sub_1003F3B70()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 56))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1003F3B9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 72))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1003F3BC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_BYTE *)(a1 + 96);
  swift_retain(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  sub_1001F2508(v6, v7);
  return a1;
}

unint64_t sub_1003F3C44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1558;
  if (!qword_1009E1558)
  {
    v1 = sub_100030B74(&qword_1009E1510);
    sub_100030B34(&qword_1009E1560, &qword_1009E1508, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100030B34(&qword_1009E1568, &qword_1009E1570, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1558);
  }
  return result;
}

uint64_t sub_1003F3CE0()
{
  return sub_10028156C(&qword_1009E1580, &qword_1009E1588, (void (*)(void))sub_1003F3D04, (void (*)(void))sub_1003F3DB0);
}

unint64_t sub_1003F3D04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009E1590;
  if (!qword_1009E1590)
  {
    v1 = sub_100030B74(&qword_1009E1520);
    v2[0] = sub_100030B74(&qword_1009E1510);
    v2[1] = sub_1003F3C44();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1590);
  }
  return result;
}

unint64_t sub_1003F3DB0()
{
  unint64_t result;

  result = qword_1009E1598;
  if (!qword_1009E1598)
  {
    result = swift_getWitnessTable(&unk_100717ACC, &type metadata for AccessibilityConditionallySelected);
    atomic_store(result, (unint64_t *)&qword_1009E1598);
  }
  return result;
}

unint64_t sub_1003F3DF4()
{
  unint64_t result;

  result = qword_1009E15A0;
  if (!qword_1009E15A0)
  {
    result = swift_getWitnessTable(&unk_100717A44, &type metadata for AccessibilityConditionalHint);
    atomic_store(result, (unint64_t *)&qword_1009E15A0);
  }
  return result;
}

uint64_t sub_1003F3E3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 88))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1003F3E68()
{
  return BookThemeViewModel.isOverride.getter() & 1;
}

unint64_t sub_1003F3E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E15B0;
  if (!qword_1009E15B0)
  {
    v1 = sub_100030B74(&qword_1009E1530);
    sub_10028156C(&qword_1009E1578, &qword_1009E1528, (void (*)(void))sub_1003F3CE0, (void (*)(void))sub_1003F3DF4);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E15B0);
  }
  return result;
}

unint64_t sub_1003F3F30()
{
  unint64_t result;

  result = qword_1009E15B8;
  if (!qword_1009E15B8)
  {
    result = swift_getWitnessTable(&unk_1007179F4, &type metadata for AccessibilityConditionalAction);
    atomic_store(result, (unint64_t *)&qword_1009E15B8);
  }
  return result;
}

uint64_t sub_1003F3F78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));
  sub_1001F2564(*(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  return swift_deallocObject(v0, 136, 7);
}

unint64_t sub_1003F3FC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E15C0;
  if (!qword_1009E15C0)
  {
    v1 = sub_100030B74(&qword_1009E1540);
    sub_10028156C(&qword_1009E15A8, &qword_1009E1538, (void (*)(void))sub_1003F3E8C, (void (*)(void))sub_1003F3F30);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E15C0);
  }
  return result;
}

uint64_t sub_1003F406C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1003F1550(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

unint64_t sub_1003F4080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1670;
  if (!qword_1009E1670)
  {
    v1 = sub_100030B74(&qword_1009E1628);
    sub_1003F4104();
    sub_100030B34(&qword_1009E16E8, &qword_1009E1660, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1670);
  }
  return result;
}

unint64_t sub_1003F4104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1678;
  if (!qword_1009E1678)
  {
    v1 = sub_100030B74(&qword_1009E1620);
    sub_1003F4188();
    sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1678);
  }
  return result;
}

unint64_t sub_1003F4188()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1680;
  if (!qword_1009E1680)
  {
    v1 = sub_100030B74(&qword_1009E1618);
    sub_1003F420C();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1680);
  }
  return result;
}

unint64_t sub_1003F420C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1688;
  if (!qword_1009E1688)
  {
    v1 = sub_100030B74(&qword_1009E1610);
    sub_1003F4290();
    sub_100030B34(&qword_1009E16E0, &qword_1009E1640, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1688);
  }
  return result;
}

unint64_t sub_1003F4290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E1690;
  if (!qword_1009E1690)
  {
    v1 = sub_100030B74(&qword_1009E1608);
    sub_1001F5558(&qword_1009E1698, &qword_1009E1600, (void (*)(void))sub_1003F4334);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E1690);
  }
  return result;
}

uint64_t sub_1003F4334()
{
  return sub_1001F5558(&qword_1009E16A0, &qword_1009E15F8, (void (*)(void))sub_1003F4358);
}

unint64_t sub_1003F4358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E16A8;
  if (!qword_1009E16A8)
  {
    v1 = sub_100030B74(&qword_1009E15F0);
    sub_1001F5558(&qword_1009E16B0, &qword_1009E15E8, (void (*)(void))sub_1003F43FC);
    sub_100030B34(&qword_1009E16D0, &qword_1009E16D8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E16A8);
  }
  return result;
}

uint64_t sub_1003F43FC()
{
  return sub_1001F5558(&qword_1009E16B8, &qword_1009E15E0, (void (*)(void))sub_1003F4420);
}

unint64_t sub_1003F4420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E16C0;
  if (!qword_1009E16C0)
  {
    v1 = sub_100030B74(&qword_1009E15D8);
    sub_100030B34(&qword_1009E16C8, &qword_1009E15D0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E16C0);
  }
  return result;
}

uint64_t sub_1003F44A4()
{
  uint64_t v0;

  return sub_1003F1860(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003F44C0(double *a1@<X8>)
{
  *a1 = EnvironmentValues.minimumScaleFactor.getter();
}

void sub_1003F44E8(double *a1@<X8>)
{
  *a1 = EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_1003F4510(double *a1)
{
  return EnvironmentValues.minimumScaleFactor.setter(*a1);
}

uint64_t sub_1003F4534(double *a1)
{
  return EnvironmentValues.minimumScaleFactor.setter(*a1);
}

uint64_t sub_1003F4558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003F1DB8(*(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_1003F4568()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003F459C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1003F1FE4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1003F45AC()
{
  _QWORD v1[2];

  v1[0] = sub_100030B74(&qword_1009E1540);
  v1[1] = sub_1003F3FC8();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
}

uint64_t sub_1003F45F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t AssociatedConformanceWitness;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[3];
  v8 = type metadata accessor for Array(255, v1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v3, v1, &protocol requirements base descriptor for Identifiable, &associated type descriptor for Identifiable.ID);
  v10 = v2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, v1, AssociatedTypeWitness, &protocol requirements base descriptor for Identifiable, &associated conformance descriptor for Identifiable.Identifiable.ID: Hashable);
  v4 = type metadata accessor for ForEach(255, &v8);
  v5 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v4);
  v6 = type metadata accessor for LazyVGrid(255, v4, v5);
  return swift_getWitnessTable(&protocol conformance descriptor for LazyVGrid<A>, v6);
}

uint64_t sub_1003F46F8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E1750);
  sub_100048F64(v0, (uint64_t)qword_1009E1750);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001CLL, 0x80000001007C75D0);
}

void sub_1003F4768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for OverlayViewModel.Search(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for OverlayViewModel.Overlay(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F6068(v0, (uint64_t)v4);
  v5 = (char *)sub_1003F481C + 4 * byte_1007220D0[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1003F481C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = type metadata accessor for BookmarkNotesModule();
  v3 = sub_100008DB0(&qword_1009E19E0, (uint64_t (*)(uint64_t))type metadata accessor for BookmarkNotesModule, (uint64_t)&unk_100738A14);
  v4 = ((uint64_t (*)(uint64_t, uint64_t))Identifiable<>.id.getter)(v2, v3);
  swift_release(v1);
  return v4;
}

void sub_1003F4944(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1003F4768();
  *a1 = v2;
}

uint64_t sub_1003F4968@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003F4A7C((uint64_t (*)(uint64_t))type metadata accessor for BookmarkNotesModule, &qword_1009E19E0, (uint64_t)&unk_100738A14, a1);
}

uint64_t sub_1003F4984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = sub_10004CFD4(&qword_1009E19D0);
  v3 = sub_1003F60F0();
  result = Identifiable<>.id.getter(v2, v3);
  *a1 = result;
  return result;
}

uint64_t sub_1003F49D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_10004CFD4(&qword_1009EFD60);
  result = SearchModule.id.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1003F4A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for ShareModule();
  v3 = sub_100008DB0(&qword_1009E19C8, (uint64_t (*)(uint64_t))type metadata accessor for ShareModule, (uint64_t)&unk_100727A24);
  result = Identifiable<>.id.getter(v2, v3);
  *a1 = result;
  return result;
}

uint64_t sub_1003F4A60@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003F4A7C((uint64_t (*)(uint64_t))type metadata accessor for TOCModule, &qword_1009E19C0, (uint64_t)&unk_100720760, a1);
}

uint64_t sub_1003F4A7C@<X0>(uint64_t (*a1)(uint64_t)@<X2>, unint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = a1(0);
  v9 = sub_100008DB0(a2, a1, a3);
  result = Identifiable<>.id.getter(v8, v9);
  *a4 = result;
  return result;
}

uint64_t sub_1003F4AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  int v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v45 - v14;
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v45 - v17);
  KeyPath = swift_getKeyPath(&unk_100722208);
  v20 = swift_getKeyPath(&unk_100722230);
  static Published.subscript.getter(v18, v2, KeyPath, v20);
  swift_release(KeyPath);
  swift_release(v20);
  if (qword_1009CE3F8 != -1)
    swift_once(&qword_1009CE3F8, sub_1003F46F8);
  v21 = type metadata accessor for Logger(0);
  sub_100048F64(v21, (uint64_t)qword_1009E1750);
  sub_1003F5FE0(a1, (uint64_t)v15);
  v22 = sub_1003F5FE0((uint64_t)v18, (uint64_t)v12);
  v23 = Logger.logObject.getter(v22);
  v27 = static os_log_type_t.debug.getter(v23, v24, v25, v26);
  if (os_log_type_enabled(v23, (os_log_type_t)v27))
  {
    v47 = v27;
    v48 = v23;
    v28 = swift_slowAlloc(22, -1);
    v46 = swift_slowAlloc(64, -1);
    v50 = v46;
    *(_DWORD *)v28 = 136315394;
    sub_1003F5FE0((uint64_t)v15, (uint64_t)v9);
    v29 = type metadata accessor for OverlayViewModel.Overlay(0);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
    if (v30(v9, 1, v29) == 1)
    {
      sub_1003F6028((uint64_t)v9);
      v31 = 0;
    }
    else
    {
      sub_1003F4768();
      v31 = v32;
      sub_10002C8F0((uint64_t)v9, type metadata accessor for OverlayViewModel.Overlay);
    }
    v49 = v31;
    v33 = sub_10004CFD4(&qword_1009E19B8);
    v34 = String.init<A>(describing:)(&v49, v33);
    v36 = v35;
    v49 = sub_100040F58(v34, v35, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v28 + 4, v28 + 12);
    swift_bridgeObjectRelease(v36);
    sub_1003F6028((uint64_t)v15);
    *(_WORD *)(v28 + 12) = 2080;
    sub_1003F5FE0((uint64_t)v12, (uint64_t)v6);
    if (v30(v6, 1, v29) == 1)
    {
      sub_1003F6028((uint64_t)v6);
      v37 = 0;
    }
    else
    {
      sub_1003F4768();
      v37 = v38;
      sub_10002C8F0((uint64_t)v6, type metadata accessor for OverlayViewModel.Overlay);
    }
    v49 = v37;
    v39 = String.init<A>(describing:)(&v49, v33);
    v41 = v40;
    v49 = sub_100040F58(v39, v40, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v28 + 14, v28 + 22);
    swift_bridgeObjectRelease(v41);
    sub_1003F6028((uint64_t)v12);
    v42 = v48;
    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v47, "overlay ID: %s => %s", (uint8_t *)v28, 0x16u);
    v43 = v46;
    swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

    sub_1003F6028((uint64_t)v12);
    sub_1003F6028((uint64_t)v15);
  }
  return sub_1003F6028((uint64_t)v18);
}

uint64_t sub_1003F4EBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100722208);
  v4 = swift_getKeyPath(&unk_100722230);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1003F4F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100722208);
  v5 = swift_getKeyPath(&unk_100722230);
  static Published.subscript.getter(v3, v0, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) == 1)
  {
    sub_1003F6028((uint64_t)v3);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload(v3, v6) != 1)
  {
    sub_10002C8F0((uint64_t)v3, type metadata accessor for OverlayViewModel.Overlay);
    return 0;
  }
  v7 = *(_QWORD *)v3;
  v8 = v3[8];
  v9 = *((_QWORD *)v3 + 3);
  swift_release(v7);
  swift_bridgeObjectRelease(v9);
  return v8;
}

void sub_1003F5040(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE v32[12];
  int v33;
  uint64_t v34;

  v3 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v3);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v32[-v7];
  __chkstk_darwin(v9);
  v11 = &v32[-v10];
  __chkstk_darwin(v12);
  v14 = &v32[-v13];
  KeyPath = swift_getKeyPath(&unk_100722208);
  v16 = swift_getKeyPath(&unk_100722230);
  static Published.subscript.getter(v14, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = type metadata accessor for OverlayViewModel.Overlay(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) == 1)
  {
    sub_1003F6028((uint64_t)v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v14, v17) == 1)
    {
      v19 = *(_QWORD *)v14;
      v20 = v14[9];
      v21 = *((_QWORD *)v14 + 2);
      v22 = *((_QWORD *)v14 + 3);
      *(_QWORD *)v11 = v19;
      v11[8] = a1 & 1;
      v11[9] = v20;
      *((_QWORD *)v11 + 2) = v21;
      *((_QWORD *)v11 + 3) = v22;
      swift_storeEnumTagMultiPayload(v11, v17, 1);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
      v23 = swift_getKeyPath(&unk_100722208);
      v24 = swift_getKeyPath(&unk_100722230);
      swift_bridgeObjectRetain(v22);
      swift_retain(v19);
      static Published.subscript.getter(v8, v1, v23);
      swift_release(v23);
      swift_release(v24);
      v25 = swift_getKeyPath(&unk_100722208);
      v26 = swift_getKeyPath(&unk_100722230);
      sub_1003F5FE0((uint64_t)v11, (uint64_t)v5);
      swift_retain(v1);
      static Published.subscript.setter(v5, v1, v25, v26);
      sub_1003F4AE4((uint64_t)v8);
      sub_1003F6028((uint64_t)v11);
      sub_1003F6028((uint64_t)v8);
      swift_bridgeObjectRelease(v22);
      swift_release(v19);
      return;
    }
    sub_10002C8F0((uint64_t)v14, type metadata accessor for OverlayViewModel.Overlay);
  }
  if (qword_1009CE3F8 != -1)
    swift_once(&qword_1009CE3F8, sub_1003F46F8);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_100048F64(v27, (uint64_t)qword_1009E1750);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.error.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v31 = 67109120;
    v33 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v31 + 4, v31 + 8);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Attempt to set isAdjustingBrightness to %{BOOL}d without RS overlay", v31, 8u);
    swift_slowDealloc(v31, -1, -1);
  }

}

uint64_t sub_1003F5398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books16OverlayViewModel__overlay;
  v2 = sub_10004CFD4(&qword_1009E19E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003F53EC()
{
  return type metadata accessor for OverlayViewModel(0);
}

uint64_t type metadata accessor for OverlayViewModel(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009E1798, (uint64_t)&nominal type descriptor for OverlayViewModel);
}

void sub_1003F5408(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1003F5474(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_1003F5474(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E17A8)
  {
    v2 = sub_100030B74(&qword_1009EFD70);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E17A8);
  }
}

uint64_t sub_1003F54CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1003F551C + 4 * byte_1007220D5[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t type metadata accessor for OverlayViewModel.Search(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009E1978, (uint64_t)&nominal type descriptor for OverlayViewModel.Search);
}

void sub_1003F5644(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
    case 3u:
    case 4u:
      swift_release(*a1);
      break;
    case 1u:
      swift_release(*a1);
      swift_bridgeObjectRelease(a1[3]);
      break;
    case 2u:
      v3 = sub_10004CFD4(&qword_1009EFD60);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return;
  }
}

void sub_1003F56D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1003F571C + 4 * byte_1007220DF[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_1003F571C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)v0 = *v2;
  *(_BYTE *)(v0 + 8) = *((_BYTE *)v2 + 8);
  swift_retain(v3);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_1003F5810(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_10002C8F0(result, type metadata accessor for OverlayViewModel.Overlay);
    v5 = (char *)&loc_1003F586C + 4 * byte_1007220E4[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata accessor for OverlayViewModel.Overlay(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E18E8, (uint64_t)&nominal type descriptor for OverlayViewModel.Overlay);
}

_BYTE *sub_1003F5984(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    v6 = sub_10004CFD4(&qword_1009EFD60);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for OverlayViewModel.Search(0);
    a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_1003F5A28(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10002C8F0((uint64_t)a1, type metadata accessor for OverlayViewModel.Overlay);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
    {
      v6 = sub_10004CFD4(&qword_1009EFD60);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for OverlayViewModel.Search(0);
      a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003F5AE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\t";
  v4[1] = &unk_100722128;
  result = type metadata accessor for OverlayViewModel.Search(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = "\t";
    swift_initEnumMetadataMultiPayload(a1, 256, 5, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_1003F5B70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009EFD60);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1003F5BFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009EFD60);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1003F5C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009EFD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003F5C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009EFD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003F5CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009EFD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003F5D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009EFD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003F5DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F5DC0);
}

uint64_t sub_1003F5DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_10004CFD4(&qword_1009EFD60);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1003F5E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F5E5C);
}

uint64_t sub_1003F5E5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009EFD60);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

void sub_1003F5ED8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1003F5F48();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100722148;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_1003F5F48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009E1988)
  {
    v0 = type metadata accessor for SearchModule(0, &type metadata for SearchView);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009E1988);
  }
}

uint64_t sub_1003F5F9C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for OverlayViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003F5FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EFD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F6028(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009EFD70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003F6068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OverlayViewModel.Overlay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F60AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OverlayViewModel.Search(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003F60F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E19D8;
  if (!qword_1009E19D8)
  {
    v1 = sub_100030B74(&qword_1009E19D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ReadingSettingsModule<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E19D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for OverlayViewModel.TOC()
{
  return &type metadata for OverlayViewModel.TOC;
}

ValueMetadata *type metadata accessor for OverlayViewModel.Share()
{
  return &type metadata for OverlayViewModel.Share;
}

uint64_t destroy for OverlayViewModel.ReadingSettings(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t initializeWithCopy for OverlayViewModel.ReadingSettings(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for OverlayViewModel.ReadingSettings(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for OverlayViewModel.ReadingSettings(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  v5 = a2[3];
  v6 = a1[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyboardObserver(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OverlayViewModel.ReadingSettings()
{
  return &type metadata for OverlayViewModel.ReadingSettings;
}

uint64_t initializeBufferWithCopyOfBuffer for OverlayViewModel.BookmarkNotes(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  swift_retain(v3);
  return a1;
}

uint64_t *_s5Books16OverlayViewModelC13BookmarkNotesVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t *assignWithTake for OverlayViewModel.BookmarkNotes(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for OverlayViewModel.BookmarkNotes()
{
  return &type metadata for OverlayViewModel.BookmarkNotes;
}

BOOL sub_1003F6408()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_storeID + 8);
  if (!v1)
    return 0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_libraryItemStateProvider);
  swift_bridgeObjectRetain(v1);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "itemStateWithIdentifier:", v3);

  v5 = objc_msgSend(v4, "library");
  swift_unknownObjectRelease(v4);
  return v5 == (id)3;
}

BOOL sub_1003F64BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSString v8;
  double v9;
  double v10;
  uint64_t v12;
  double v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v15 - v5;
  v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "doubleForKey:", v8);
  v10 = v9;

  if (v10 == 0.0)
    return 1;
  v12 = Date.init(timeIntervalSinceReferenceDate:)(v10);
  static Date.now.getter(v12);
  v13 = Date.timeIntervalSince(_:)(v6);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v4, v0);
  v14(v6, v0);
  return v13 < 5.0;
}

void sub_1003F65FC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  uint64_t v11;
  double v12;
  NSString v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  v15 = v8;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v7, "removeObjectForKey:", v8);

  }
  else
  {
    v9 = objc_msgSend(v7, "objectForKey:", v8);

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)(v9);
      swift_unknownObjectRelease(v9);
      sub_10004A7B8((uint64_t)v16);
    }
    else
    {
      memset(v16, 0, sizeof(v16));
      sub_10004A7B8((uint64_t)v16);
      v10 = objc_msgSend(v6, "standardUserDefaults");
      v11 = static Date.now.getter(v10);
      v12 = Date.timeIntervalSinceReferenceDate.getter(v11);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setDouble:forKey:", v13, v12);

    }
  }
}

uint64_t sub_1003F67D4()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sleepTimer), "sleepTimerOption");
  if ((unint64_t)(v1 - 1) > 7)
    return 0;
  else
    return qword_100722690[(_QWORD)(v1 - 1)];
}

id sub_1003F6820(unint64_t a1)
{
  uint64_t v1;
  id result;
  unint64_t v3;

  if (a1 < 9)
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sleepTimer), "setSleepTimerOption:", qword_1007226D0[a1]);
  v3 = a1;
  result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AudiobookNowPlayingSleepTimerOption, &v3, &type metadata for AudiobookNowPlayingSleepTimerOption, &type metadata for Int);
  __break(1u);
  return result;
}

_QWORD *sub_1003F6888()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t i;
  id v7;
  void *v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "precisionRates"));
  v2 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v3);
    return _swiftEmptyArrayStorage;
  }
  if (v3 < 0)
    v13 = v3;
  else
    v13 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_16;
LABEL_3:
  result = (_QWORD *)sub_100366AC4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v7 = *(id *)(v3 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "floatValue");
      v10 = v9;

      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_100366AC4(v11 > 1, v12 + 1, 1);
      _swiftEmptyArrayStorage[2] = v12 + 1;
      *((_DWORD *)&_swiftEmptyArrayStorage[4] + v12) = v10;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

id sub_1003F6A34(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player], "removeObserver:", v2);
  v4 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_libraryItemStateProvider], "stateCenter");
  objc_msgSend(v4, "removeObserver:", v2);

  v6.receiver = v2;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_1003F6C8C()
{
  return type metadata accessor for AudiobookNowPlayingDataManager(0);
}

uint64_t type metadata accessor for AudiobookNowPlayingDataManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E1A80;
  if (!qword_1009E1A80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookNowPlayingDataManager);
  return result;
}

void sub_1003F6CD0(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, double a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v20;
  uint64_t Strong;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  NSString v26;
  void *v27;
  id v28;
  _QWORD *v29;
  os_unfair_lock_s *v30;
  id *v31;
  os_unfair_lock_s *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t i;
  void *v36;
  uint64_t v37;
  unint64_t v39;

  v11 = v10;
  if (!a1)
  {
    v27 = *(void **)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
    *(_QWORD *)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset) = 0;

    v28 = objc_msgSend((id)objc_opt_self(BKAudiobookNowPlayingAdaptor), "sharedInstance");
    objc_msgSend(v28, "setSessionID:", 0);

    objc_msgSend(*(id *)(v11 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setCurrentAudiobook:", 0);
    v29 = (_QWORD *)(v11 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider);
    sub_10003F198(v29, v29[3]);
    sub_100430024(0);
    v30 = *(os_unfair_lock_s **)(*sub_10003F198(v29, v29[3]) + 16);
    v31 = (id *)&v30[4];
    v32 = v30 + 6;
    os_unfair_lock_lock(v30 + 6);
    sub_10042FD4C(v31, (uint64_t *)&v39);
    os_unfair_lock_unlock(v32);
    v33 = v39;
    if (v39 >> 62)
    {
      if ((v39 & 0x8000000000000000) != 0)
        v37 = v39;
      else
        v37 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v39);
      v34 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v33);
      if (!v34)
        goto LABEL_20;
    }
    else
    {
      v34 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v34)
        goto LABEL_20;
    }
    if (v34 < 1)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v34; ++i)
    {
      if ((v33 & 0xC000000000000001) != 0)
      {
        v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
      }
      else
      {
        v36 = *(void **)(v33 + 8 * i + 32);
        swift_unknownObjectRetain(v36);
      }
      objc_msgSend(v36, "audiobookStoreIDDidChangeTo:", 0);
      swift_unknownObjectRelease(v36);
    }
LABEL_20:
    swift_bridgeObjectRelease(v33);
    return;
  }
  v20 = (_QWORD *)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider);
  sub_10003F198((_QWORD *)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider + 24));
  swift_unknownObjectRetain(a1);
  sub_100430024(a3 & 1);
  sub_10003F198(v20, v20[3]);
  sub_10043015C(a4, a5);
  Strong = swift_unknownObjectWeakLoadStrong(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay) = a6 & 1;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_beginPlaybackInBackground) = (a7 == 2) | a7 & 1;
    v22 = Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_initialPositionOnOpen;
    *(double *)v22 = a9;
    *(_BYTE *)(v22 + 8) = 0;
    swift_unknownObjectRelease(Strong);
  }
  v23 = *(void **)(v10 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset) = a2;
  v24 = a2;

  v25 = objc_msgSend((id)objc_opt_self(BKAudiobookNowPlayingAdaptor), "sharedInstance");
  if (a10)
    v26 = String._bridgeToObjectiveC()();
  else
    v26 = 0;
  objc_msgSend(v25, "setSessionID:", v26, a8);

  objc_msgSend(*(id *)(v11 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setCurrentAudiobook:initialPosition:", a1, a9);
  swift_unknownObjectRelease(a1);
}

id sub_1003F7024(unint64_t a1)
{
  uint64_t v1;
  void *v3;
  id result;
  os_log_type_t v5;
  NSObject *v6;
  NSObject *v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
  result = objc_msgSend(v3, "currentChapterIndex");
  if ((a1 & 0x8000000000000000) != 0 || result != (id)a1)
  {
    v5 = static os_log_type_t.default.getter(result);
    v6 = sub_1001B6D9C();
    if (v6)
    {
      v7 = v6;
      if (os_log_type_enabled(v6, v5))
      {
        v8 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v8 = 134217984;
        v9 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v8 + 4, v8 + 12);
        _os_log_impl((void *)&_mh_execute_header, v7, v5, "goto chapter %ld", v8, 0xCu);
        swift_slowDealloc(v8, -1, -1);
      }

      if ((a1 & 0x8000000000000000) == 0)
        return objc_msgSend(v3, "setCurrentChapterIndex:", a1);
    }
    else
    {
      __break(1u);
    }
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
  }
  return result;
}

void sub_1003F7184(void *a1, uint64_t a2, double a3)
{
  uint64_t v3;
  void *v5;
  os_log_type_t v7;
  NSObject *v8;
  NSObject *v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  void **v13;
  _QWORD v14[4];
  uint64_t v15;

  v5 = a1;
  v7 = static os_log_type_t.default.getter(a1);
  v8 = sub_1001B6D9C();
  if (v8)
  {
    v9 = v8;
    if (os_log_type_enabled(v8, v7))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v10 = 134217984;
      v13 = *(void ***)&a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, v14, v10 + 4, v10 + 12);
      _os_log_impl((void *)&_mh_execute_header, v9, v7, "goto audiobook position %f", v10, 0xCu);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = *(void **)(v3 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
    if (v5)
    {
      v14[3] = v5;
      v15 = a2;
      v13 = _NSConcreteStackBlock;
      v14[0] = 1107296256;
      v14[1] = sub_10004DCB4;
      v14[2] = &unk_100903D40;
      v5 = _Block_copy(&v13);
      v12 = v15;
      swift_retain(a2);
      swift_release(v12);
    }
    objc_msgSend(v11, "movePositionInCurrentAudiobook:completion:", v5, a3);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_1003F72F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  void *v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v4
                                                             + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook"));
  v10 = (void *)sub_1003F73DC((uint64_t)v9, a2, a3, a4);
  *(_QWORD *)&v11 = swift_unknownObjectRelease(v9).n128_u64[0];
  if (!v10)
    return _swiftEmptyArrayStorage;
  v12 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_contextMenuProvider), "menuElementsForViewController:dataModel:", a1, v10, v11);
  v13 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  return (_QWORD *)v14;
}

uint64_t sub_1003F73DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  _QWORD v25[4];

  if (a1)
  {
    v9 = *(void **)(v4 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
    if (v9)
    {
      v10 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel.Asset(0));
      swift_unknownObjectRetain(a1);
      v11 = ContextActionDataModel.Asset.init(mAsset:)(v9);
    }
    else
    {
      v16 = objc_msgSend((id)swift_unknownObjectRetain(a1), "assetID");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      v20 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel.Asset(0));
      v11 = ContextActionDataModel.Asset.init(adamID:)(v17, v19);
    }
    v21 = (void *)v11;
    objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel(0));
    v22 = v21;
    v23 = a2;
    v15 = ContextActionDataModel.init(asset:sourceView:)(v22, a2);
    v25[3] = &type metadata for String;
    v25[0] = a3;
    v25[1] = a4;
    swift_bridgeObjectRetain(a4);
    dispatch thunk of ContextActionDataModel.originatingLocation.setter(v25);
    swift_unknownObjectRelease(a1);

  }
  else
  {
    v12 = Logger.logObject.getter(0);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to retrieve menu data model, no audiobook found.", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    return 0;
  }
  return v15;
}

uint64_t sub_1003F758C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v1 = type metadata accessor for BooksFeatureFlag(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
  if (!v6)
    return 0;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v2 + 104))(v5, enum case for BooksFeatureFlag.unifiedProductPage(_:), v1, v3);
  v7 = sub_100008DB0((unint64_t *)&unk_1009D6230, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
  v8 = sub_100030B34((unint64_t *)&qword_1009E7660, &qword_1009D6240, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
  v9 = v6;
  LOBYTE(v7) = RawRepresentable<>.isEnabled.getter(v1, v7, v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if ((v7 & 1) == 0)
  {

    return 0;
  }
  v10 = objc_msgSend(v9, "supportsUnifiedProductPage");
  v11 = objc_msgSend(v9, "editionKind");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v17 = objc_allocWithZone((Class)type metadata accessor for AppAnalyticsAdditionalData(0));
  v16 = AppAnalyticsAdditionalData.init(supportsUnifiedProductPage:editionKind:)(v10, v13, v15);

  return v16;
}

void sub_1003F771C(uint64_t a1, void (*a2)(void), double a3, double a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE v24[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player;
    v11 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentChapter");
    if (v11
      && (v12 = v11,
          v13 = objc_msgSend(v11, "artwork"),
          swift_unknownObjectRelease(v12),
          v13))
    {
      v14 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v13);
      a2();

    }
    else
    {
      v15 = objc_msgSend(*(id *)&v9[v10], "currentAudiobook");
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, "assetID");
        swift_unknownObjectRelease(v16);
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v20 = v19;

        sub_1003F7920(v18, v20, (void (*)(id))a2, a3, a4);
        swift_bridgeObjectRelease(v20);
      }
      else
      {
        v21 = Logger.logObject.getter(0);
        v22 = static os_log_type_t.default.getter(v21);
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "No image on player and no assetID to get library cover", v23, 2u);
          swift_slowDealloc(v23, -1, -1);
        }

        ((void (*)(_QWORD))a2)(0);
      }
    }

  }
  else
  {
    a2();
  }
}

void sub_1003F7920(uint64_t a1, unint64_t a2, void (*a3)(id), double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t Strong;
  uint64_t v19;
  void *v20;
  id v21;
  NSString v22;
  id v23;
  _BOOL4 v24;
  double v25;
  double v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = v5;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint8_t **)((char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v19 = Strong;
    v20 = (void *)objc_opt_self(BKLibraryManager);
    v21 = objc_msgSend(v20, "defaultManager");
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v21, "libraryAssetOnMainQueueWithAssetID:", v22);

    if (v23)
    {
      v24 = a4 <= 0.0;
      if (a5 <= 0.0)
        v24 = 1;
      v25 = 1536.0;
      if (v24)
        v26 = 1536.0;
      else
        v26 = a4;
      if (!v24)
        v25 = a5;
      v27 = objc_msgSend(v20, "fetchImageForAsset:size:includeSpine:allowGeneric:coverEffectsEnvironment:timeout:", v23, 1, 1, v6, v26, v25, 0.25);
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend(v28, "CGImage");
        v30 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v29);

        v31 = v30;
        a3(v30);

        swift_unknownObjectRelease(v19);
      }
      else
      {
        v35 = swift_bridgeObjectRetain_n(a2, 2);
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter(v36);
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(12, -1);
          v41 = swift_slowAlloc(32, -1);
          v43 = v41;
          *(_DWORD *)v38 = 136315138;
          v40 = v38 + 4;
          swift_bridgeObjectRetain(a2);
          v42 = sub_100040F58(a1, a2, &v43);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v40, v38 + 12);
          swift_bridgeObjectRelease_n(a2, 3);
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Timed out or plain failure generating library cover image for audiobook %s", v38, 0xCu);
          v39 = v41;
          swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v39, -1, -1);
          swift_slowDealloc(v38, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n(a2, 2);
        }

        a3(0);
        swift_unknownObjectRelease(v19);

      }
      return;
    }
    Strong = swift_unknownObjectRelease(v19);
  }
  v32 = Logger.logObject.getter(Strong);
  v33 = static os_log_type_t.error.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Cannot get library cover due to missing libraryAsset or delegate", v34, 2u);
    swift_slowDealloc(v34, -1, -1);
  }

  a3(0);
}

void sub_1003F7D3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  os_unfair_lock_s *v5;
  id *v6;
  os_unfair_lock_s *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset) = 0;

  v2 = (void *)objc_opt_self(BKAudiobookNowPlayingAdaptor);
  v3 = objc_msgSend(v2, "sharedInstance");
  objc_msgSend(v3, "setSessionID:", 0);

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setCurrentAudiobook:", 0);
  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider);
  sub_10003F198((_QWORD *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider + 24));
  sub_100430024(0);
  v5 = *(os_unfair_lock_s **)(*sub_10003F198(v4, v4[3]) + 16);
  v6 = (id *)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_10042FD4C(v6, (uint64_t *)&v14);
  os_unfair_lock_unlock(v7);
  v8 = v14;
  if (!(v14 >> 62))
  {
    v9 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_13:
    v13 = objc_msgSend(v2, "sharedInstance", swift_bridgeObjectRelease(v8).n128_f64[0]);
    objc_msgSend(v13, "setAudiobookPlayerActiveOutput:", 0);

    return;
  }
  if ((v14 & 0x8000000000000000) != 0)
    v12 = v14;
  else
    v12 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v9 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v8);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      }
      else
      {
        v11 = *(void **)(v8 + 8 * i + 32);
        swift_unknownObjectRetain(v11);
      }
      objc_msgSend(v11, "audiobookStoreIDDidChangeTo:", 0);
      swift_unknownObjectRelease(v11);
    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1003F7F50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[17];

  v4[0] = &unk_100722390;
  v4[1] = &unk_1007223A8;
  v4[2] = &unk_1007223C0;
  v4[3] = &unk_1007223A8;
  v4[4] = &unk_1007223D8;
  v4[5] = &unk_1007223C0;
  v4[6] = &unk_1007223F0;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = &unk_1007223C0;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[10] = *(_QWORD *)(result - 8) + 64;
    v4[11] = &unk_100722408;
    v4[12] = &unk_1007223A8;
    v4[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[14] = &unk_1007223D8;
    v4[15] = &unk_100722420;
    v4[16] = &unk_100722438;
    return swift_updateClassMetadata2(a1, 256, 17, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_1003F8038(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;

  v4 = *v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate;
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

void sub_1003F8074(char a1)
{
  sub_1003F65FC(a1);
}

id sub_1003F8094(char a1)
{
  _QWORD *v1;

  return objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setScrubbing:", a1 & 1);
}

id sub_1003F80B8()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setListeningSessionStartTime:");
}

id sub_1003F80D4()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setPlaybackRate:");
}

id sub_1003F80F0(unint64_t a1)
{
  return sub_1003F6820(a1);
}

id sub_1003F8110(double a1)
{
  _QWORD *v1;

  if (*(float *)&a1 < 0.0)
    *(float *)&a1 = 0.0;
  *(float *)&a1 = fminf(*(float *)&a1, 1.0);
  return objc_msgSend(*(id *)(*v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setVolume:", a1);
}

double sub_1003F8300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_productProfile);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_productProfile) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v3);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v6 = Strong;
    sub_1002A4E40(a1);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_1003F8434(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  uint64_t Strong;
  uint64_t v7;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_cachedIsPreordered;
  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_cachedIsPreordered);
  if (v5 == 2 || ((((v5 & 1) == 0) ^ a1) & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v7 = Strong;
      sub_1002A8C20();
      swift_unknownObjectRelease(v7);
      *(_BYTE *)(v2 + v4) = v3 & 1;
    }
  }
}

void sub_1003F84EC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  uint64_t Strong;
  uint64_t v14;
  id v15;

  if (*(void **)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) == a1)
  {
    v6 = objc_msgSend(a1, "currentAudiobook");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "assetID");
      swift_unknownObjectRelease(v7);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v10 = v9;

      v11 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_libraryItemStateProvider), "stateCenter");
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "addOrUpdateObserver:forSingleItemIdentifier:", v2, v12, swift_bridgeObjectRelease(v10).n128_f64[0]);

    }
    else
    {
      v12 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_libraryItemStateProvider), "stateCenter");
      objc_msgSend(v12, "removeObserver:", v2);
    }

    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v14 = Strong;
      sub_1002A3124(a2);
      swift_unknownObjectRelease(v14);
    }
  }
  else
  {
    v3 = static os_log_type_t.error.getter(a1);
    v4 = sub_1001B6D9C();
    if (v4)
    {
      v15 = v4;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003F86C8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  id v10;

  if (*(void **)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) != a1)
  {
    v3 = static os_log_type_t.error.getter(a1);
    v4 = sub_1001B6D9C();
    if (v4)
    {
      v10 = v4;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

      return;
    }
LABEL_9:
    __break(1u);
    return;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v8 = Strong;
    v9 = (uint64_t)objc_msgSend(a1, "currentChapterIndex");
    if ((v9 & 0x8000000000000000) == 0)
    {
      sub_1002A4270(a2, v9);
      swift_unknownObjectRelease(v8);
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
}

void sub_1003F87D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  id v9;

  swift_unknownObjectRetain(a3);
  swift_unknownObjectRetain(a4);
  v9 = a1;
  a5(a3, a4);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a4);

}

void sub_1003F8848(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) == a1)
  {
    v6 = v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v8 = Strong;
      if (a2)
      {
        v9 = objc_allocWithZone((Class)UIImage);
        v10 = a2;
        v11 = objc_msgSend(v9, "initWithCGImage:", v10);
        v12 = *(void **)(v8 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork);
        *(_QWORD *)(v8 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork) = v11;
        v20 = v11;

        v13 = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
        if (v13)
        {
          v14 = v13;
          sub_1004CBF6C(v11);

          swift_unknownObjectRelease(v8);
          v15 = v14;
        }
        else
        {

          v15 = v8;
        }
        swift_unknownObjectRelease(v15);
        goto LABEL_4;
      }
      v16 = *(_QWORD *)(v6 + 8);
      v17 = swift_allocObject(&unk_100903FF8, 32, 7);
      *(_QWORD *)(v17 + 16) = v8;
      *(_QWORD *)(v17 + 24) = v16;
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v18 = swift_allocObject(&unk_100903D78, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16);
      v19 = (_QWORD *)swift_allocObject(&unk_100904020, 56, 7);
      v19[2] = v18;
      v19[3] = sub_1003FBEFC;
      v19[5] = 0;
      v19[6] = 0;
      v19[4] = v17;
      swift_unknownObjectRetain(v8);
      swift_retain(v18);
      swift_retain(v17);
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8F38, v19);
      swift_release(v17);
      swift_unknownObjectRelease(v8);
      swift_release(v18);
      swift_release(v19);
    }
  }
  else
  {
    v3 = static os_log_type_t.error.getter(a1);
    v4 = sub_1001B6D9C();
    if (v4)
    {
      v20 = v4;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);
LABEL_4:

      return;
    }
    __break(1u);
  }
}

void sub_1003F8AA8(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t Strong;
  uint64_t v7;
  id v8;

  v3 = objc_msgSend(a1, "CGImage");
  if (v3)
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v3);
  else
    v4 = 0;
  v5 = *(void **)(a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork) = v4;
  v8 = v4;

  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
  if (Strong)
  {
    v7 = Strong;
    sub_1004CBF6C(v4);

    swift_unknownObjectRelease(v7);
  }
  else
  {

  }
}

void sub_1003F8BE0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t Strong;
  uint64_t v11;
  id v12;

  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) != a1)
  {
    v5 = static os_log_type_t.error.getter(a1);
    v6 = sub_1001B6D9C();
    if (v6)
    {
      v12 = v6;
      os_log(_:dso:log:_:_:)(v5, &_mh_execute_header, v6, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

      return;
    }
LABEL_9:
    __break(1u);
    return;
  }
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      v11 = Strong;
      sub_1002A471C(a2, a3, a4);
      swift_unknownObjectRelease(v11);
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
}

void sub_1003F8D50(void *a1, char **a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char **v20;
  unint64_t v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  id v44;
  id v45;
  double v46;

  if (*(void **)(v3 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) != a1)
  {
    v4 = static os_log_type_t.error.getter(a1);
    v5 = sub_1001B6D9C();
    if (v5)
    {
      v44 = v5;
      os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

      return;
    }
    goto LABEL_39;
  }
  v9 = objc_msgSend(a1, "currentChapter");
  v10 = 0.0;
  if (v9)
  {
    v11 = (uint64_t)v9;
    objc_msgSend(v9, "duration");
    if (v12 <= 0.0)
    {
      swift_unknownObjectRelease(v11);
      goto LABEL_32;
    }
    objc_msgSend((id)v11, "duration");
    v14 = v13;
    objc_msgSend(a1, "positionInCurrentChapter");
    v16 = v15;
    v17 = objc_msgSend(a3, "chapterPositions");
    v45 = (id)sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v45);

    if ((unint64_t)v18 >> 62)
    {
LABEL_27:
      if (v18 < 0)
        v33 = v18;
      else
        v33 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v19 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v18);
      if (v19)
      {
LABEL_8:
        v41 = v11;
        v42 = v3;
        v43 = a2;
        v11 = 4;
        v20 = &selRef_dismissReadingListPopover;
        while (1)
        {
          v21 = v11 - 4;
          if ((v18 & 0xC000000000000001) != 0)
            v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v18);
          else
            v22 = *(id *)(v18 + 8 * v11);
          v23 = v22;
          v3 = v11 - 3;
          if (__OFADD__(v21, 1))
          {
            __break(1u);
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
          a2 = v20;
          objc_msgSend(v22, v20[25]);
          v25 = v24;
          v26 = objc_msgSend(a3, "chapterDurations");
          v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v45);

          if ((v27 & 0xC000000000000001) != 0)
          {
            v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v27);
          }
          else
          {
            if (v21 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_26;
            v28 = *(id *)(v27 + 8 * v11);
          }
          v29 = v28;
          v20 = a2;
          objc_msgSend(v28, a2[25], swift_bridgeObjectRelease(v27).n128_f64[0]);
          v31 = v30;

          if (v25 <= v16)
          {
            v32 = v25 + v31;
            if (v16 <= v32)
              break;
          }
          ++v11;
          if (v3 == v19)
          {
            swift_unknownObjectRelease(v41);
            swift_bridgeObjectRelease(v18);
            v3 = v42;
            a2 = v43;
            goto LABEL_32;
          }
        }
        swift_unknownObjectRelease(v41);
        swift_bridgeObjectRelease(v18);
        v3 = v42;
        a2 = v43;
        if (v32 > 0.0)
          v10 = v32 / v14;
        goto LABEL_32;
      }
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v19)
        goto LABEL_8;
    }
    swift_unknownObjectRelease(v11);
    swift_bridgeObjectRelease(v18);
  }
LABEL_32:
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    if (((unint64_t)a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return;
    }
    v35 = Strong;
    v36 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v36)
    {
      v37 = v36;
      v38 = *(void **)(v36 + 16);
      KeyPath = swift_getKeyPath(&unk_100722640);
      v40 = swift_getKeyPath(&unk_100722668);
      v46 = v10;
      static Published.subscript.setter(&v46, v38, KeyPath, v40);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v37);
    }
    else
    {
      swift_unknownObjectRelease(v35);
    }
  }
}

void sub_1003F91C0(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(_QWORD, _QWORD);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  const char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t Strong;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD);
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  void (*v83)(_QWORD, _QWORD);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t aBlock[5];
  uint64_t v93;
  _QWORD v94[3];
  char v95[8];
  uint64_t v96;
  uint64_t v97;

  v90 = a2;
  v91 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTimeInterval(0, v9);
  v13 = *(void (**)(_QWORD, _QWORD))(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchTime(0);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  if (*(id *)&v2[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player] == v91)
  {
    v80 = v21;
    v81 = v20;
    v82 = v15;
    v83 = v13;
    v84 = (char *)&v80 - v19;
    v85 = v11;
    v24 = v2;
    v86 = v8;
    v87 = v7;
    v88 = v6;
    v89 = v4;
    v25 = v90;
    v91 = v18;
    aBlock[0] = v90;
    swift_errorRetain(v90);
    v26 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    type metadata accessor for AudiobookPlayerError(0);
    v28 = v27;
    if (swift_dynamicCast(&v96, aBlock, v26, v27, 6))
    {
      v29 = (void *)v96;
      v30 = sub_100008DB0(&qword_1009D0C78, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F118);
      _BridgedStoredNSError.code.getter(aBlock, v28, v30);
      v31 = v24;
      switch(aBlock[0])
      {
        case 1:
          Strong = swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate]);
          if (Strong)
          {
            v57 = Strong;
            sub_1002A8D6C();
            swift_unknownObjectRelease(v57);
          }
          goto LABEL_22;
        case 2:
          v58 = swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate]);
          if (v58)
          {
            v59 = v58;
            sub_1002A4B2C(1, 1, v29);
            swift_unknownObjectRelease(v59);
          }
          v60 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
          v90 = static OS_dispatch_queue.main.getter(v60);
          v61 = v80;
          static DispatchTime.now()(v90);
          v63 = v82;
          v62 = v83;
          *v82 = 100;
          (*((void (**)(_QWORD *, _QWORD, uint64_t))v62 + 13))(v63, enum case for DispatchTimeInterval.milliseconds(_:), v12);
          v64 = v84;
          + infix(_:_:)(v61, v63);
          (*((void (**)(_QWORD *, uint64_t))v62 + 1))(v63, v12);
          v83 = *(void (**)(_QWORD, _QWORD))(v81 + 8);
          v83(v61, v91);
          v65 = swift_allocObject(&unk_100903FA8, 24, 7);
          *(_QWORD *)(v65 + 16) = v31;
          aBlock[4] = (uint64_t)sub_1003FBE74;
          v93 = v65;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1000147F0;
          aBlock[3] = (uint64_t)&unk_100903FC0;
          v66 = _Block_copy(aBlock);
          v67 = v93;
          v68 = v31;
          swift_release(v67);
          v69 = v85;
          static DispatchQoS.unspecified.getter(v70);
          aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
          v71 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v72 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
          v73 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
          v74 = v88;
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v72, v73, v3, v71);
          v75 = (void *)v90;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v64, v69, v74, v66);
          _Block_release(v66);

          (*(void (**)(char *, uint64_t))(v89 + 8))(v74, v3);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v69, v87);
          v83(v64, v91);
          return;
        case 3:
        case 4:
          v32 = v29;
          v33 = Logger.logObject.getter(v32);
          v34 = static os_log_type_t.error.getter(v33);
          if (!os_log_type_enabled(v33, v34))
            goto LABEL_14;
          v35 = v28;
          v36 = (uint8_t *)swift_slowAlloc(12, -1);
          v37 = swift_slowAlloc(32, -1);
          aBlock[0] = v37;
          *(_DWORD *)v36 = 136315138;
          v96 = (uint64_t)v32;
          v38 = sub_100008DB0((unint64_t *)&unk_1009E1C70, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F0D8);
          v39 = Error.localizedDescription.getter(v35, v38);
          v41 = v40;
          v96 = sub_100040F58(v39, v40, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v36 + 4, v36 + 12);

          swift_bridgeObjectRelease(v41);
          v42 = "Playback error received in NPVC, ignoring error: %s";
          goto LABEL_13;
        case 5:
          v76 = swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate]);
          if (v76)
          {
            v77 = (void *)v76;
            sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
            v78 = swift_allocObject(&unk_100903F80, 24, 7);
            *(_QWORD *)(v78 + 16) = v77;
            v79 = v77;
            static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1003FBE6C, v78);
            swift_unknownObjectRelease(v79);

            swift_release(v78);
          }
          else
          {
LABEL_22:

          }
          return;
        default:
          v32 = v29;
          v33 = Logger.logObject.getter(v32);
          v34 = static os_log_type_t.error.getter(v33);
          if (os_log_type_enabled(v33, v34))
          {
            v51 = v28;
            v36 = (uint8_t *)swift_slowAlloc(12, -1);
            v37 = swift_slowAlloc(32, -1);
            aBlock[0] = v37;
            *(_DWORD *)v36 = 136315138;
            v96 = (uint64_t)v32;
            v52 = sub_100008DB0((unint64_t *)&unk_1009E1C70, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookPlayerError, (uint64_t)&unk_10070F0D8);
            v53 = Error.localizedDescription.getter(v51, v52);
            v55 = v54;
            v96 = sub_100040F58(v53, v54, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v36 + 4, v36 + 12);

            swift_bridgeObjectRelease(v55);
            v42 = "Unhandled error %s";
LABEL_13:
            _os_log_impl((void *)&_mh_execute_header, v33, v34, v42, v36, 0xCu);
            swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v37, -1, -1);
            swift_slowDealloc(v36, -1, -1);

          }
          else
          {
LABEL_14:

          }
          break;
      }
    }
    else
    {
      swift_errorRetain(v25);
      v43 = swift_errorRetain(v25);
      v44 = Logger.logObject.getter(v43);
      v45 = static os_log_type_t.error.getter(v44);
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc(12, -1);
        v47 = swift_slowAlloc(32, -1);
        aBlock[0] = v47;
        *(_DWORD *)v46 = 136315138;
        swift_getErrorValue(v25, v95, v94);
        v48 = Error.localizedDescription.getter(v94[1], v94[2]);
        v50 = v49;
        v96 = sub_100040F58(v48, v49, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v46 + 4, v46 + 12);
        swift_bridgeObjectRelease(v50);
        swift_errorRelease(v25);
        swift_errorRelease(v25);
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Unhandled error %s", v46, 0xCu);
        swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v46, -1, -1);

      }
      else
      {

        swift_errorRelease(v25);
        swift_errorRelease(v25);
      }
    }
  }
  else
  {
    v22 = static os_log_type_t.error.getter(v18);
    v23 = sub_1001B6D9C();
    if (!v23)
    {
      __break(1u);
      JUMPOUT(0x1003F9ABCLL);
    }
    v91 = v23;
    os_log(_:dso:log:_:_:)(v22, &_mh_execute_header, v23, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

  }
}

void sub_1003F9B38(uint64_t a1, float a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&v3[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player] == a1)
  {
    v17 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v28 = (id)static OS_dispatch_queue.main.getter(v17);
    v18 = swift_allocObject(&unk_100903F30, 28, 7);
    *(_QWORD *)(v18 + 16) = v3;
    *(float *)(v18 + 24) = a2;
    aBlock[4] = sub_1003FBE58;
    v30 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_100903F48;
    v19 = _Block_copy(aBlock);
    v20 = v30;
    v21 = v3;
    swift_release(v20);
    static DispatchQoS.unspecified.getter(v22);
    aBlock[0] = _swiftEmptyArrayStorage;
    v23 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v25 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v6, v23);
    v26 = v28;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v9, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    v15 = static os_log_type_t.error.getter(v12);
    v16 = sub_1001B6D9C();
    if (v16)
    {
      v28 = v16;
      os_log(_:dso:log:_:_:)(v15, &_mh_execute_header, v16, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003F9DDC(uint64_t a1, float a2)
{
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  float v14;
  char v15[24];

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager, v15, 0, 0);
    sub_10003F198(v5, v5[3]);
    v6 = sub_1003F6888();
    v7 = sub_1002A25F4((uint64_t)v6, a2);
    swift_bridgeObjectRelease(v6);
    v8 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(v8 + 16);
      KeyPath = swift_getKeyPath(&unk_1007225F8);
      v12 = swift_getKeyPath(&unk_100722620);
      v14 = v7;
      static Published.subscript.setter(&v14, v10, KeyPath, v12);
      swift_unknownObjectRelease(v4);
      v13 = v9;
    }
    else
    {
      v13 = v4;
    }
    swift_unknownObjectRelease(v13);
  }
}

void sub_1003F9F00(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) == a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v7 = Strong;
      v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
      if (v8)
      {
        v9 = v8;
        sub_1004CC26C(a2 & 1);
        swift_unknownObjectRelease(v7);
        v10 = v9;
      }
      else
      {
        v10 = v7;
      }
      swift_unknownObjectRelease(v10);
    }
  }
  else
  {
    v3 = static os_log_type_t.error.getter(a1);
    v4 = sub_1001B6D9C();
    if (v4)
    {
      v11 = v4;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003FA0D0(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  float v14;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) == a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v7 = Strong;
      v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
      if (v8)
      {
        v9 = v8;
        v10 = *(void **)(v8 + 16);
        KeyPath = swift_getKeyPath(&unk_1007225B0);
        v12 = swift_getKeyPath(&unk_1007225D8);
        v14 = a2;
        static Published.subscript.setter(&v14, v10, KeyPath, v12);
        swift_unknownObjectRelease(v7);
        swift_unknownObjectRelease(v9);
      }
      else
      {
        swift_unknownObjectRelease(v7);
      }
    }
  }
  else
  {
    v3 = static os_log_type_t.error.getter(a1);
    v4 = sub_1001B6D9C();
    if (v4)
    {
      v13 = v4;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003FA23C(void *a1, float a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, float))
{
  id v9;

  swift_unknownObjectRetain(a4);
  v9 = a1;
  a5(a4, a2);
  swift_unknownObjectRelease(a4);

}

void sub_1003FA2AC(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  char v20;

  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) == a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v9 = Strong;
      v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
      if (v10)
      {
        v11 = v10;
        v12 = *(void **)(v10 + 16);
        KeyPath = swift_getKeyPath(&unk_100722520);
        v14 = swift_getKeyPath(&unk_100722548);
        v20 = a2 & 1;
        v15 = v12;
        static Published.subscript.setter(&v20, v15, KeyPath, v14);
        v16 = swift_getKeyPath(&unk_100722568);
        v17 = swift_getKeyPath(&unk_100722590);
        v19 = a3 & 1;
        static Published.subscript.setter(&v19, v15, v16, v17);
        swift_unknownObjectRelease(v9);
        swift_unknownObjectRelease(v11);
      }
      else
      {
        swift_unknownObjectRelease(v9);
      }
    }
  }
  else
  {
    v4 = static os_log_type_t.error.getter(a1);
    v5 = sub_1001B6D9C();
    if (v5)
    {
      v18 = v5;
      os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v5, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

    }
    else
    {
      __break(1u);
    }
  }
}

double sub_1003FA4C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;

  v2 = a1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = sub_1003F67D4();
    sub_1002A53B0(v5);
    swift_unknownObjectRelease(v4);
  }
  v6 = swift_unknownObjectWeakLoadStrong(v2);
  if (v6)
  {
    v8 = v6;
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sleepTimer), "initialDuration");
    v10 = v9;
    v11 = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v11)
    {
      v12 = v11;
      v13 = *(void **)(v11 + 16);
      KeyPath = swift_getKeyPath(&unk_1007224D8);
      v15 = swift_getKeyPath(&unk_100722500);
      v16 = v10;
      static Published.subscript.setter(&v16, v13, KeyPath, v15);
      swift_unknownObjectRelease(v8);
      *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
    }
  }
  return result;
}

double sub_1003FA6BC(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;
  uint64_t v4;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v3 = Strong;
    v4 = sub_1003F67D4();
    sub_1002A53B0(v4);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

void sub_1003FA774(uint64_t a1, double a2)
{
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v5)
    {
      v6 = v5;
      v7 = type metadata accessor for AudiobookNowPlayingPresenter(0);
      sub_1004CC750(v7, (uint64_t)&off_10090B408, a2);
      swift_unknownObjectRelease(v4);
      v4 = v6;
    }
    swift_unknownObjectRelease(v4);
  }
}

void sub_1003FAAB8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(a1, "backwardSkipTime");
    v7 = v6;
    v8 = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v8)
    {
      v9 = v8;
      v10 = type metadata accessor for AudiobookNowPlayingPresenter(0);
      sub_1004CC6A8(v10, (uint64_t)&off_10090B408, v7);
      swift_unknownObjectRelease(v5);
      v5 = v9;
    }
    swift_unknownObjectRelease(v5);
  }
  v11 = swift_unknownObjectWeakLoadStrong(v3);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(a1, "forwardSkipTime");
    v14 = v13;
    v15 = swift_unknownObjectWeakLoadStrong(v12 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
    if (v15)
    {
      v16 = v15;
      v17 = type metadata accessor for AudiobookNowPlayingPresenter(0);
      sub_1004CC6BC(v17, (uint64_t)&off_10090B408, v14);
      swift_unknownObjectRelease(v12);
      v12 = v16;
    }
    swift_unknownObjectRelease(v12);
  }
}

uint64_t sub_1003FAC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
  if (objc_msgSend(v5, "isPlaying")
    && (v6 = objc_msgSend(v5, "currentAudiobook")) != 0)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "assetID");
    swift_unknownObjectRelease(v7);
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    if (v9 == a1 && v11 == a2)
    {
      v13 = 1;
    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, a1, a2, 0);
      a2 = v11;
    }
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

void sub_1003FAD50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _BYTE v18[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "assetID");
      swift_unknownObjectRelease(v11);
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      if (v13 == a2 && v15 == a3)
      {
        swift_bridgeObjectRelease(a3);
      }
      else
      {
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v13, v15, 0);
        swift_bridgeObjectRelease(v15);
        if ((v17 & 1) == 0)
          goto LABEL_11;
      }
      sub_10003F198(&v9[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider], *(_QWORD *)&v9[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider + 24]);
      sub_100430030(objc_msgSend(a4, "library") == (id)3);
    }
LABEL_11:

  }
}

uint64_t sub_1003FAF14@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100722568, (uint64_t)&unk_100722590, a2);
}

uint64_t sub_1003FAF28(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100722568, (uint64_t)&unk_100722590);
}

uint64_t sub_1003FAF3C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100722520, (uint64_t)&unk_100722548, a2);
}

uint64_t sub_1003FAF50(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100722520, (uint64_t)&unk_100722548);
}

float sub_1003FAF64@<S0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  float result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007225B0);
  v5 = swift_getKeyPath(&unk_1007225D8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(float *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1003FAFE0(int *a1, void **a2)
{
  int v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  int v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007225B0);
  v5 = swift_getKeyPath(&unk_1007225D8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_1003FB054@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_100722640, (uint64_t)&unk_100722668, a2);
}

uint64_t sub_1003FB068(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_100722640, (uint64_t)&unk_100722668);
}

double sub_1003FB07C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_100722490, (uint64_t)&unk_1007224B8, a2);
}

uint64_t sub_1003FB090(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_100722490, (uint64_t)&unk_1007224B8);
}

void sub_1003FB0A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  char v19;
  uint64_t Strong;
  uint64_t v21;
  void *v22;
  id v23;
  NSString v24;
  id v25;
  _BOOL4 v26;
  double v27;
  double v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint8_t **)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  _Block_copy(a5);
  _Block_copy(a5);
  v18 = _Block_copy(a5);
  *v17 = static OS_dispatch_queue.main.getter(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v19 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v21 = Strong;
      v22 = (void *)objc_opt_self(BKLibraryManager);
      v23 = objc_msgSend(v22, "defaultManager");
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v23, "libraryAssetOnMainQueueWithAssetID:", v24);

      if (v25)
      {
        v26 = a6 <= 0.0;
        if (a7 <= 0.0)
          v26 = 1;
        v27 = 1536.0;
        if (v26)
          v28 = 1536.0;
        else
          v28 = a6;
        if (!v26)
          v27 = a7;
        v29 = objc_msgSend(v22, "fetchImageForAsset:size:includeSpine:allowGeneric:coverEffectsEnvironment:timeout:", v25, 1, 1, a3, v28, v27, 0.25);
        if (v29)
        {
          v30 = v29;
          v31 = objc_msgSend(v30, "CGImage");
          v32 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v31);

          _Block_copy(a5);
          v33 = v32;
          sub_100393C04(v32, a4, (void (**)(_QWORD))a5);
          _Block_release(a5);

          swift_unknownObjectRelease(v21);
        }
        else
        {
          v37 = swift_bridgeObjectRetain_n(a2, 2);
          v38 = Logger.logObject.getter(v37);
          v39 = static os_log_type_t.error.getter(v38);
          if (os_log_type_enabled(v38, v39))
          {
            v40 = (uint8_t *)swift_slowAlloc(12, -1);
            v43 = swift_slowAlloc(32, -1);
            v45 = v43;
            *(_DWORD *)v40 = 136315138;
            v42 = v40 + 4;
            swift_bridgeObjectRetain(a2);
            v44 = sub_100040F58(a1, a2, &v45);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v42, v40 + 12);
            swift_bridgeObjectRelease_n(a2, 3);
            _os_log_impl((void *)&_mh_execute_header, v38, v39, "Timed out or plain failure generating library cover image for audiobook %s", v40, 0xCu);
            v41 = v43;
            swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v41, -1, -1);
            swift_slowDealloc(v40, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(a2, 2);
          }

          _Block_copy(a5);
          sub_100393C04(0, a4, (void (**)(_QWORD))a5);
          _Block_release(a5);
          swift_unknownObjectRelease(v21);

        }
LABEL_17:
        _Block_release(a5);
        _Block_release(a5);
        _Block_release(a5);
        return;
      }
      Strong = swift_unknownObjectRelease(v21);
    }
    v34 = Logger.logObject.getter(Strong);
    v35 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Cannot get library cover due to missing libraryAsset or delegate", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    _Block_copy(a5);
    sub_100393C04(0, a4, (void (**)(_QWORD))a5);
    _Block_release(a5);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1003FB52C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t Strong;
  uint64_t v7;
  id v8;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) == a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
    if (Strong)
    {
      v7 = Strong;
      sub_1002A54B8(a2);
      swift_unknownObjectRelease(v7);
    }
  }
  else
  {
    v3 = static os_log_type_t.error.getter(a1);
    v4 = sub_1001B6D9C();
    if (v4)
    {
      v8 = v4;
      os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Got a player instance that is not the same as our own", 53, 2, _swiftEmptyArrayStorage);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1003FB5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v7 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v16 + 16) = v3;
  aBlock[4] = a2;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = a3;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  v19 = v7;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v23 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_1003FB800(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100903DF0, 32, 7);
  *(_QWORD *)(v13 + 16) = v1;
  *(double *)(v13 + 24) = a1;
  aBlock[4] = sub_1003FBD44;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100903E08;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  v16 = v2;
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v20 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1003FBA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_100903D78, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = (_QWORD *)swift_allocObject(&unk_100903DA0, 48, 7);
  v15[2] = v14;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  aBlock[4] = sub_1003FBCCC;
  v26 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100903DB8;
  v16 = _Block_copy(aBlock);
  v17 = v26;
  swift_bridgeObjectRetain(a3);
  swift_unknownObjectRetain(a1);
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v21 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

uint64_t sub_1003FBC74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FBC98()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003FBCCC()
{
  uint64_t v0;

  sub_1003FAD50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

double sub_1003FBCD8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_100722490, (uint64_t)&unk_1007224B8, a2);
}

uint64_t sub_1003FBCFC(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_100722490, (uint64_t)&unk_1007224B8);
}

uint64_t sub_1003FBD20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003FBD44()
{
  uint64_t v0;

  sub_1003FA774(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1003FBD50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1003FBD74()
{
  uint64_t v0;

  return sub_1003FA6BC(*(_QWORD *)(v0 + 16));
}

double sub_1003FBD8C()
{
  uint64_t v0;

  return sub_1003FA4C4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003FBD9C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100722520, (uint64_t)&unk_100722548, a2);
}

uint64_t sub_1003FBDC0(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100722520, (uint64_t)&unk_100722548);
}

uint64_t sub_1003FBDE4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A81C8(a1, (uint64_t)&unk_100722568, (uint64_t)&unk_100722590, a2);
}

uint64_t sub_1003FBE08(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A8254(a1, a2, a3, a4, (uint64_t)&unk_100722568, (uint64_t)&unk_100722590);
}

uint64_t sub_1003FBE34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 28, 7);
}

void sub_1003FBE58()
{
  uint64_t v0;

  sub_1003F9DDC(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24));
}

void sub_1003FBE6C()
{
  uint64_t v0;

  sub_1002A56C0(*(_QWORD *)(v0 + 16));
}

id sub_1003FBE74()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "pause");
}

double sub_1003FBE90@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100257BB8(a1, (uint64_t)&unk_100722640, (uint64_t)&unk_100722668, a2);
}

uint64_t sub_1003FBEB4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100257C44(a1, a2, a3, a4, (uint64_t)&unk_100722640, (uint64_t)&unk_100722668);
}

uint64_t sub_1003FBED8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003FBEFC(void *a1)
{
  uint64_t v1;

  sub_1003F8AA8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003FBF04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003FBF30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003FBF54()
{
  uint64_t v0;

  sub_100207578(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t static Logger.rootBar.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003FBFE0(&qword_1009CE408, (uint64_t)qword_1009E1C98, (uint64_t)sub_10006B6D0, a1);
}

uint64_t static Logger.rootBarAppIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003FBFE0(&qword_1009CE400, (uint64_t)qword_1009E1C80, (uint64_t)sub_1003FC048, a1);
}

uint64_t sub_1003FBFE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048F64(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

uint64_t sub_1003FC048(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009E1C80, 0xD000000000000012, 0x80000001007C78A0);
}

uint64_t sub_1003FC06C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 4)
    return swift_unknownObjectRetain(a3);
  return result;
}

uint64_t destroy for RootBarRootViewControllerEvent(uint64_t a1)
{
  return sub_100221848(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for RootBarRootViewControllerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1003FC06C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for RootBarRootViewControllerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1003FC06C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_100221848(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for RootBarRootViewControllerEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_100221848(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RootBarRootViewControllerEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RootBarRootViewControllerEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1003FC23C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1003FC244(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

double sub_1003FC24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  double result;
  _QWORD v29[3];
  _QWORD v30[4];

  v4 = v3;
  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v10, &qword_1009D3150);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if ((_DWORD)v13 == 1)
  {
    sub_100010960((uint64_t)v10, &qword_1009D3150);
    v14 = 12544;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v14 = v21 | 0x3100;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = *v4;
  v23 = swift_allocObject(&unk_1009042F0, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = type metadata accessor for FetchResult(0);
  v25 = (_QWORD *)(v20 | v18);
  if (v20 | v18)
  {
    v30[0] = 0;
    v30[1] = 0;
    v25 = v30;
    v30[2] = v18;
    v30[3] = v20;
  }
  v29[0] = 1;
  v29[1] = v25;
  v29[2] = v22;
  v26 = swift_task_create(v14, v29, v24, &unk_1009E1DD8, v23);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

void sub_1003FC3FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v31 = a2;
  v32 = a3;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v16 = *(unsigned __int8 *)(v7 + 80);
    v17 = (v16 + 24) & ~v16;
    v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
    v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject(&unk_100904170, v20 + 8, v16 | 7);
    v22 = v30;
    *(_QWORD *)(v21 + 16) = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v21 + v17, v9, v6);
    v23 = v31;
    *(_QWORD *)(v21 + v18) = v31;
    v24 = v32;
    *(_QWORD *)(v21 + v19) = v32;
    *(_QWORD *)(v21 + v20) = a4;
    aBlock[4] = sub_1003FCC5C;
    v34 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_100904188;
    v25 = _Block_copy(aBlock);
    v26 = v34;
    swift_unknownObjectRetain(a4);
    v27 = v22;
    v28 = v23;
    swift_unknownObjectRetain(v24);
    objc_msgSend(v28, "performAfterPrivateDataFetchedWithCompletionHandler:", v25, swift_release(v26).n128_f64[0]);
    _Block_release(v25);
  }
  else
  {
    __break(1u);
  }
}

double sub_1003FC62C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a4;
  v31 = a5;
  v29 = a3;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 40) & ~v15;
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject(&unk_1009041C0, v19 + 8, v15 | 7);
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  *((_QWORD *)v20 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v16], v10, v7);
  v22 = v29;
  v21 = v30;
  *(_QWORD *)&v20[v17] = v29;
  *(_QWORD *)&v20[v18] = v21;
  v23 = v31;
  *(_QWORD *)&v20[v19] = v31;
  swift_unknownObjectRetain(v23);
  v24 = a1;
  v25 = v22;
  swift_unknownObjectRetain(v21);
  v26 = sub_10030C02C((uint64_t)v13, (uint64_t)&unk_1009E1CB8, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_1003FC7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc(dword_1009E1CC4);
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_1001FC2C4;
  return sub_1003FC83C(a5, a6, a7, a8);
}

uint64_t sub_1003FC83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for Logger(0);
  v5[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[8] = v7;
  v5[9] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v5[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[11] = v9;
  v5[12] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003FC8CC, 0, 0);
}

id sub_1003FC8CC()
{
  _QWORD *v0;
  id result;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  result = (id)dispatch thunk of AnalyticsController.applicationTracker.getter();
  v0[13] = result;
  if (result)
  {
    v2 = result;
    v3 = Date.init()(result);
    result = (id)BALog(v3, v4, v5);
    if (result)
    {
      v15 = v0[12];
      v6 = v0[9];
      v8 = v0[5];
      v7 = v0[6];
      v10 = v0[3];
      v9 = v0[4];
      v11 = v0[2];
      Logger.init(_:)(result);
      v12 = type metadata accessor for FetchResult(0);
      v13 = (_QWORD *)swift_task_alloc(80);
      v0[14] = v13;
      v13[2] = v9;
      v13[3] = v6;
      v13[4] = v10;
      v13[5] = v7;
      v13[6] = v15;
      v13[7] = v8;
      v13[8] = v11;
      v13[9] = v2;
      v14 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
      v0[15] = v14;
      *v14 = v0;
      v14[1] = sub_1003FC9E4;
      return (id)withTaskGroup<A, B>(of:returning:isolation:body:)(v14, v12, (char *)&type metadata for () + 8, 0, 0, &unk_1009E1CD0, v13, v12);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003FC9E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1003FCA40, 0, 0);
}

uint64_t sub_1003FCA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FCBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v7));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

double sub_1003FCC5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1003FC62C(*(void **)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003FCCB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v7));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_1003FCD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = *(_QWORD *)(v0 + v4);
  v8 = *(_QWORD *)(v0 + v5);
  v9 = *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1009E1CB4);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_1001FC2C4;
  v11 = (_QWORD *)swift_task_alloc(dword_1009E1CC4);
  v10[2] = v11;
  *v11 = v10;
  v11[1] = sub_1001FC2C4;
  return sub_1003FC83C(v6, v7, v8, v9);
}

uint64_t type metadata accessor for FetchResult(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E1E60;
  if (!qword_1009E1E60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FetchResult);
  return result;
}

uint64_t sub_1003FCE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v8[13] = v26;
  v8[14] = v27;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a3;
  v8[8] = a4;
  v8[6] = a2;
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[15] = swift_task_alloc(v9);
  v8[16] = swift_task_alloc(v9);
  v10 = type metadata accessor for FetchResult(0);
  v8[17] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[18] = v11;
  v8[19] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v8[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[21] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[22] = swift_task_alloc(v14);
  v8[23] = swift_task_alloc(v14);
  v8[24] = swift_task_alloc(v14);
  v8[25] = swift_task_alloc(v14);
  v15 = sub_10004CFD4(&qword_1009E1CE0);
  v8[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009E1CE8);
  v8[27] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[28] = v17;
  v8[29] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009E1CF0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[30] = swift_task_alloc(v18);
  v8[31] = swift_task_alloc(v18);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009E1CF8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[32] = swift_task_alloc(v19);
  v8[33] = swift_task_alloc(v19);
  v20 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009E1D00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[34] = swift_task_alloc(v20);
  v8[35] = swift_task_alloc(v20);
  v21 = type metadata accessor for Logger(0);
  v8[36] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[37] = v22;
  v23 = *(_QWORD *)(v22 + 64);
  v8[38] = v23;
  v8[39] = swift_task_alloc((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4(&qword_1009D3150);
  v8[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v24 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003FD0BC, 0, 0);
}

uint64_t sub_1003FD0BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = v0[39];
  v1 = v0[40];
  v3 = v0[37];
  v4 = v0[38];
  v5 = v0[36];
  v39 = v0[35];
  v40 = v0[33];
  v41 = v0[31];
  v42 = v0[17];
  v6 = v0[8];
  v36 = (void *)v0[9];
  v38 = (void *)v0[10];
  v33 = v6;
  v7 = v0[7];
  v35 = (_QWORD *)v0[6];
  v8 = objc_opt_self(BKLibraryManager);
  v30 = swift_dynamicCastObjCClassUnconditional(v7, v8, 0, 0, 0);
  v43 = type metadata accessor for TaskPriority(0);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
  v34(v1, 1, 1, v43);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v29 = v5;
  v32(v2, v6, v5);
  v9 = *(unsigned __int8 *)(v3 + 80);
  v46 = (v9 + 32) & ~v9;
  v47 = v9 | 7;
  v10 = (v4 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = v10 + 8;
  v45 = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject(&unk_1009041E8, v11 + 8, v9 | 7);
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v44(v12 + v46, v2, v5);
  *(_QWORD *)(v12 + ((v4 + v46 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
  *(_QWORD *)(v12 + v11) = v36;
  swift_unknownObjectRetain_n(v7, 2);
  v37 = v36;
  sub_1003FC24C(v1, (uint64_t)&unk_1009E1D10, v12);
  sub_100010960(v1, &qword_1009D3150);
  v34(v1, 1, 1, v43);
  v32(v2, v33, v5);
  v13 = swift_allocObject(&unk_100904210, v31, v47);
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  v44(v13 + v46, v2, v5);
  *(_QWORD *)(v13 + v45) = v30;
  swift_unknownObjectRetain(v7);
  sub_1003FC24C(v1, (uint64_t)&unk_1009E1D20, v13);
  sub_100010960(v1, &qword_1009D3150);
  v34(v1, 1, 1, v43);
  v32(v2, v33, v5);
  v14 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_100904238, v14 + 8, v47);
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  v44(v15 + v46, v2, v29);
  *(_QWORD *)(v15 + v45) = v38;
  *(_QWORD *)(v15 + v11) = v7;
  *(_QWORD *)(v15 + v14) = v37;
  swift_unknownObjectRetain(v7);
  v16 = v37;
  v17 = v38;
  sub_1003FC24C(v1, (uint64_t)&unk_1009E1D30, v15);
  sub_100010960(v1, &qword_1009D3150);
  v18 = type metadata accessor for CollectionSummaryData(0);
  v0[41] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v0[42] = v19;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v0[43] = v20;
  v20(v39, 1, 1, v18);
  v21 = type metadata accessor for LibraryData(0);
  v0[44] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v0[45] = v22;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v0[46] = v23;
  v23(v40, 1, 1, v21);
  v24 = type metadata accessor for ReadingNowData(0);
  v0[47] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v0[48] = v25;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v0[49] = v26;
  v26(v41, 1, 1, v24);
  TaskGroup.makeAsyncIterator()(*v35, v42);
  v27 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  v0[50] = v27;
  *v27 = v0;
  v27[1] = sub_1003FD49C;
  return TaskGroup.Iterator.next(isolation:)(v0[26], 0, 0, v0[27]);
}

uint64_t sub_1003FD49C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 400));
  return swift_task_switch(sub_1003FD4F0, 0, 0);
}

uint64_t sub_1003FD4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  void (*v22)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  NSObject *v77;
  _BOOL4 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  __n128 v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *log;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  os_log_type_t typea[8];
  os_log_type_t type;
  os_log_type_t typeb[8];
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    v8 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    Date.init()(v8);
    v9 = Date.timeIntervalSince(_:)(v7);
    v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v10(v3, v5);
    v11 = swift_unknownObjectRetain_n(v6, 2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = *(_QWORD *)(v0 + 96);
      v15 = swift_slowAlloc(22, -1);
      v16 = swift_slowAlloc(32, -1);
      v126 = v16;
      *(_DWORD *)v15 = 134218242;
      *(double *)(v0 + 32) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v15 + 4, v15 + 12);
      *(_WORD *)(v15 + 12) = 2080;
      if (v14)
        v17 = 0x737473697865;
      else
        v17 = 0x2074276E73656F64;
      if (v14)
        v18 = 0xE600000000000000;
      else
        v18 = 0xED00007473697865;
      *(_QWORD *)(v0 + 40) = sub_100040F58(v17, v18, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v15 + 14, v15 + 22);
      swift_bridgeObjectRelease(v18);
      swift_unknownObjectRelease_n(v6, 2);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Spent %fs waiting for all InitialAppStateQueryEvent data, appSession %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      v19 = swift_unknownObjectRelease_n(v6, 2);
    }
    v28 = *(_QWORD *)(v0 + 160);
    v29 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 128);
    dispatch thunk of AnalyticsController.sessionStartTime.getter(v19);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    v32 = v31(v30, 1, v28);
    if ((_DWORD)v32 == 1)
    {
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter(v33);
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "InitialAppStateQueryEvent skipped because no session exists!", v35, 2u);
        swift_slowDealloc(v35, -1, -1);
      }
      v36 = *(_QWORD *)(v0 + 280);
      v37 = *(_QWORD *)(v0 + 264);
      v38 = *(_QWORD *)(v0 + 248);
      v39 = *(_QWORD *)(v0 + 128);
      v40 = *(_QWORD *)(v0 + 56);

      swift_unknownObjectRelease(v40);
      sub_100010960(v38, &qword_1009E1CF0);
      sub_100010960(v37, &qword_1009E1CF8);
      sub_100010960(v36, &qword_1009E1D00);
      v41 = v39;
LABEL_33:
      sub_100010960(v41, &qword_1009D7440);
      goto LABEL_34;
    }
    v42 = *(_QWORD *)(v0 + 160);
    v43 = *(_QWORD *)(v0 + 120);
    sub_10000B5E4(*(_QWORD *)(v0 + 128), v43, &qword_1009D7440);
    if (v31(v43, 1, v42) == 1)
    {
      sub_100010960(*(_QWORD *)(v0 + 120), &qword_1009D7440);
    }
    else
    {
      v47 = *(_QWORD *)(v0 + 192);
      v48 = *(_QWORD *)(v0 + 160);
      v49 = *(_QWORD *)(v0 + 104);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 168) + 32))(v47, *(_QWORD *)(v0 + 120), v48);
      v50 = sub_1004007C0(&qword_1009D7AE0, (uint64_t)&protocol conformance descriptor for Date);
      v51 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v49, v48, v50);
      v52 = *(_QWORD *)(v0 + 192);
      if ((v51 & 1) == 0)
      {
        v73 = *(_QWORD *)(v0 + 176);
        v74 = *(_QWORD *)(v0 + 160);
        v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 16);
        v75(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 104), v74);
        v76 = v75(v73, v52, v74);
        v77 = Logger.logObject.getter(v76);
        type = static os_log_type_t.error.getter(v77);
        v78 = os_log_type_enabled(v77, type);
        v79 = *(_QWORD *)(v0 + 280);
        v80 = *(_QWORD *)(v0 + 264);
        v81 = *(_QWORD *)(v0 + 248);
        v82 = *(_QWORD *)(v0 + 184);
        v83 = *(_QWORD *)(v0 + 192);
        v84 = *(_QWORD *)(v0 + 176);
        v85 = *(_QWORD *)(v0 + 160);
        v122 = *(_QWORD *)(v0 + 56);
        if (v78)
        {
          v114 = *(_QWORD *)(v0 + 264);
          v86 = swift_slowAlloc(22, -1);
          v108 = swift_slowAlloc(64, -1);
          v126 = v108;
          *(_DWORD *)v86 = 136315394;
          v109 = v83;
          v87 = sub_1004007C0(&qword_1009E1D40, (uint64_t)&protocol conformance descriptor for Date);
          v88 = dispatch thunk of CustomStringConvertible.description.getter(v85, v87);
          log = v77;
          v90 = v89;
          *(_QWORD *)(v0 + 16) = sub_100040F58(v88, v89, &v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v86 + 4, v86 + 12);
          v91 = swift_bridgeObjectRelease(v90);
          ((void (*)(uint64_t, uint64_t, __n128))v10)(v82, v85, v91);
          *(_WORD *)(v86 + 12) = 2080;
          v92 = dispatch thunk of CustomStringConvertible.description.getter(v85, v87);
          v94 = v93;
          *(_QWORD *)(v0 + 24) = sub_100040F58(v92, v93, &v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v86 + 14, v86 + 22);
          v95 = swift_bridgeObjectRelease(v94);
          ((void (*)(uint64_t, uint64_t, __n128))v10)(v84, v85, v95);
          _os_log_impl((void *)&_mh_execute_header, log, type, "InitialAppStateQueryEvent skipped because a different session has started: %s vs %s", (uint8_t *)v86, 0x16u);
          swift_arrayDestroy(v108, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v108, -1, -1);
          swift_slowDealloc(v86, -1, -1);

          v96 = swift_unknownObjectRelease(v122);
          ((void (*)(uint64_t, uint64_t, __n128))v10)(v109, v85, v96);
          sub_100010960(v81, &qword_1009E1CF0);
          sub_100010960(v114, &qword_1009E1CF8);
        }
        else
        {

          v10(v84, v85);
          v10(v82, v85);
          v97 = swift_unknownObjectRelease(v122);
          ((void (*)(uint64_t, uint64_t, __n128))v10)(v83, v85, v97);
          sub_100010960(v81, &qword_1009E1CF0);
          sub_100010960(v80, &qword_1009E1CF8);
        }
        sub_100010960(v79, &qword_1009E1D00);
        v41 = *(_QWORD *)(v0 + 128);
        goto LABEL_33;
      }
      v10(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
    }
    v53 = *(_QWORD *)(v0 + 352);
    v54 = *(_QWORD *)(v0 + 360);
    v56 = *(_QWORD *)(v0 + 256);
    v55 = *(_QWORD *)(v0 + 264);
    v57 = type metadata accessor for EventReporter(0, v44);
    v58 = (void *)static EventReporter.shared.getter(v57);
    sub_10000B5E4(v55, v56, &qword_1009E1CF8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v56, 1, v53);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v59 = *(_QWORD *)(v0 + 328);
      v60 = *(_QWORD *)(v0 + 336);
      v61 = *(_QWORD *)(v0 + 272);
      sub_10000B5E4(*(_QWORD *)(v0 + 280), v61, &qword_1009E1D00);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v61, 1, v59);
      if ((_DWORD)result != 1)
      {
        v62 = *(_QWORD *)(v0 + 376);
        v63 = *(_QWORD *)(v0 + 384);
        v64 = *(_QWORD *)(v0 + 240);
        sub_10000B5E4(*(_QWORD *)(v0 + 248), v64, &qword_1009E1CF0);
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v64, 1, v62);
        if ((_DWORD)result != 1)
        {
          v121 = *(_QWORD *)(v0 + 360);
          v124 = *(_QWORD *)(v0 + 352);
          v111 = *(_QWORD *)(v0 + 384);
          v113 = *(_QWORD *)(v0 + 336);
          v116 = *(_QWORD *)(v0 + 376);
          *(_QWORD *)typea = *(_QWORD *)(v0 + 328);
          v66 = *(_QWORD *)(v0 + 272);
          v65 = *(_QWORD *)(v0 + 280);
          v67 = *(_QWORD *)(v0 + 256);
          v68 = *(_QWORD *)(v0 + 264);
          v69 = *(_QWORD *)(v0 + 240);
          v70 = *(_QWORD *)(v0 + 248);
          v71 = *(_QWORD *)(v0 + 128);
          v72 = *(_QWORD *)(v0 + 56);
          dispatch thunk of EventReporter.emitInitialAppStateQueryEvent(using:from:libraryData:collectionSummaryData:readingNowData:)(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88), v67, v66, v69);

          swift_unknownObjectRelease(v72);
          sub_100010960(v70, &qword_1009E1CF0);
          sub_100010960(v68, &qword_1009E1CF8);
          sub_100010960(v65, &qword_1009E1D00);
          sub_100010960(v71, &qword_1009D7440);
          (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v69, v116);
          (*(void (**)(uint64_t, os_log_type_t *))(v113 + 8))(v66, *(os_log_type_t **)typea);
          (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v67, v124);
LABEL_34:
          v98 = *(_QWORD *)(v0 + 312);
          v100 = *(_QWORD *)(v0 + 272);
          v99 = *(_QWORD *)(v0 + 280);
          v102 = *(_QWORD *)(v0 + 256);
          v101 = *(_QWORD *)(v0 + 264);
          v103 = *(_QWORD *)(v0 + 240);
          v104 = *(_QWORD *)(v0 + 248);
          v105 = *(_QWORD *)(v0 + 232);
          v106 = *(_QWORD *)(v0 + 208);
          v110 = *(_QWORD *)(v0 + 200);
          v112 = *(_QWORD *)(v0 + 192);
          v115 = *(_QWORD *)(v0 + 184);
          v117 = *(_QWORD *)(v0 + 176);
          *(_QWORD *)typeb = *(_QWORD *)(v0 + 152);
          v123 = *(_QWORD *)(v0 + 128);
          v125 = *(_QWORD *)(v0 + 120);
          swift_task_dealloc(*(_QWORD *)(v0 + 320));
          swift_task_dealloc(v98);
          swift_task_dealloc(v99);
          swift_task_dealloc(v100);
          swift_task_dealloc(v101);
          swift_task_dealloc(v102);
          swift_task_dealloc(v104);
          swift_task_dealloc(v103);
          swift_task_dealloc(v105);
          swift_task_dealloc(v106);
          swift_task_dealloc(v110);
          swift_task_dealloc(v112);
          swift_task_dealloc(v115);
          swift_task_dealloc(v117);
          swift_task_dealloc(*(_QWORD *)typeb);
          swift_task_dealloc(v123);
          swift_task_dealloc(v125);
          return (*(uint64_t (**)(void))(v0 + 8))();
        }
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  v20 = *(_QWORD *)(v0 + 152);
  sub_100400800(v1, v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = *(_QWORD *)(v0 + 360);
      v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 368);
      v24 = *(_QWORD *)(v0 + 352);
      v25 = *(_QWORD *)(v0 + 264);
      v26 = *(_QWORD *)(v0 + 152);
      v27 = &qword_1009E1CF8;
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 384);
      v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 392);
      v24 = *(_QWORD *)(v0 + 376);
      v25 = *(_QWORD *)(v0 + 248);
      v26 = *(_QWORD *)(v0 + 152);
      v27 = &qword_1009E1CF0;
    }
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 336);
    v22 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 344);
    v24 = *(_QWORD *)(v0 + 328);
    v25 = *(_QWORD *)(v0 + 280);
    v26 = *(_QWORD *)(v0 + 152);
    v27 = &qword_1009E1D00;
  }
  sub_100010960(v25, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v25, v26, v24);
  v22(v25, 0, 1, v24);
  v45 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 400) = v45;
  *v45 = v0;
  v45[1] = sub_1003FD49C;
  return TaskGroup.Iterator.next(isolation:)(*(_QWORD *)(v0 + 208), 0, 0, *(_QWORD *)(v0 + 216));
}

uint64_t sub_1003FDEB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v10 = v2[7];
  v11 = (_QWORD *)swift_task_alloc(dword_1009E1CCC);
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1001FC2C4;
  return sub_1003FCE88(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1003FDF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v7 = type metadata accessor for Mirror(0);
  v5[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[10] = v8;
  v5[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LibraryData(0);
  v5[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[13] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = swift_task_alloc(v11);
  v5[14] = v12;
  v5[15] = swift_task_alloc(v11);
  v13 = (_QWORD *)swift_task_alloc(async function pointer to BKLibraryManager.libraryData(using:)[1]);
  v5[16] = v13;
  *v13 = v5;
  v13[1] = sub_1003FE02C;
  return BKLibraryManager.libraryData(using:)(v12, a5);
}

uint64_t sub_1003FE02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003FE110;
  else
    v3 = sub_1003FE090;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003FE090()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = *(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 32);
  v1(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(void **)(v0 + 56);
  v5 = *(void **)(v0 + 64);
  v1(*(_QWORD *)(v0 + 32), v3, *(_QWORD *)(v0 + 96));

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FE110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, uint64_t, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v1 = *(_QWORD *)(v0 + 136);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 72);
    v9 = swift_slowAlloc(22, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v28 = swift_slowAlloc(32, -1);
    v29 = v28;
    *(_DWORD *)v9 = 136315394;
    v30[3] = sub_10004CFD4(&qword_1009E1DE8);
    v30[0] = v7;
    v11 = Mirror.init(reflecting:)(v30);
    v12 = Mirror.subjectType.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v27);
    v13 = _typeName(_:qualified:)(v12, 0);
    v15 = v14;
    *(_QWORD *)(v0 + 16) = sub_100040F58(v13, v14, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v9 + 12) = 2114;
    swift_errorRetain(v5);
    v16 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 24) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 14, v9 + 22);
    *v10 = v16;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unable to fetch %s due to %{public}@", (uint8_t *)v9, 0x16u);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v17);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    v18 = *(_QWORD *)(v0 + 136);
    swift_errorRelease(v18);

    swift_errorRelease(v18);
    swift_errorRelease(v18);
  }
  v19 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 96));
  v20 = *(void (**)(_QWORD, uint64_t, _QWORD))(v19 + 32);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 88);
  v25 = *(void **)(v0 + 56);
  v24 = *(void **)(v0 + 64);
  v20(*(_QWORD *)(v0 + 32), v22, *(_QWORD *)(v0 + 96));

  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FE3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  v5 = type metadata accessor for Mirror(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CollectionSummaryData(0);
  v4[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[12] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = swift_task_alloc(v9);
  v4[13] = v10;
  v4[14] = swift_task_alloc(v9);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to BKLibraryManager.collectionSummaryData()[1]);
  v4[15] = v11;
  *v11 = v4;
  v11[1] = sub_1003FE474;
  return BKLibraryManager.collectionSummaryData()(v10);
}

uint64_t sub_1003FE474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1003FE554;
  else
    v3 = sub_1003FE4D8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003FE4D8()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = *(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 32);
  v1(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(void **)(v0 + 56);
  v1(*(_QWORD *)(v0 + 32), v3, *(_QWORD *)(v0 + 88));

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FE554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, uint64_t, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];

  v1 = *(_QWORD *)(v0 + 128);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v26 = *(_QWORD *)(v0 + 64);
    v9 = swift_slowAlloc(22, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v27 = swift_slowAlloc(32, -1);
    v28 = v27;
    *(_DWORD *)v9 = 136315394;
    v29[3] = sub_10004CFD4(&qword_1009E1DC8);
    v29[0] = v7;
    v11 = Mirror.init(reflecting:)(v29);
    v12 = Mirror.subjectType.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v26);
    v13 = _typeName(_:qualified:)(v12, 0);
    v15 = v14;
    *(_QWORD *)(v0 + 16) = sub_100040F58(v13, v14, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v9 + 12) = 2114;
    swift_errorRetain(v5);
    v16 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 24) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 14, v9 + 22);
    *v10 = v16;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unable to fetch %s due to %{public}@", (uint8_t *)v9, 0x16u);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v17);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    v18 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v18);

    swift_errorRelease(v18);
    swift_errorRelease(v18);
  }
  v19 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 88));
  v20 = *(void (**)(_QWORD, uint64_t, _QWORD))(v19 + 32);
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(void **)(v0 + 56);
  v20(*(_QWORD *)(v0 + 32), v22, *(_QWORD *)(v0 + 88));

  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FE7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  v7 = type metadata accessor for Mirror(0);
  v6[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[11] = v8;
  v6[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingNowData(0);
  v6[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[14] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[15] = swift_task_alloc(v11);
  v6[16] = swift_task_alloc(v11);
  return swift_task_switch(sub_1003FE88C, 0, 0);
}

uint64_t sub_1003FE88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 136) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 144) = v3;
  *v3 = v0;
  v3[1] = sub_1003FE92C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 120), 0, 0, 0xD00000000000001CLL, 0x80000001007C78E0, sub_100400844, v2, *(_QWORD *)(v0 + 104));
}

uint64_t sub_1003FE92C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003FEA2C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 136));
    v4 = sub_1003FE998;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003FE998()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = *(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 32);
  v1(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(void **)(v0 + 72);
  v7 = *(void **)(v0 + 56);
  v1(*(_QWORD *)(v0 + 32), v3, *(_QWORD *)(v0 + 104));

  swift_unknownObjectRelease(v5);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FEA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, uint64_t, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];

  v1 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 80);
    v9 = swift_slowAlloc(22, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v29 = swift_slowAlloc(32, -1);
    v30 = v29;
    *(_DWORD *)v9 = 136315394;
    v31[3] = sub_10004CFD4((uint64_t *)&unk_1009E1D50);
    v31[0] = v7;
    v11 = Mirror.init(reflecting:)(v31);
    v12 = Mirror.subjectType.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v28);
    v13 = _typeName(_:qualified:)(v12, 0);
    v15 = v14;
    *(_QWORD *)(v0 + 16) = sub_100040F58(v13, v14, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v9 + 12) = 2114;
    swift_errorRetain(v5);
    v16 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 24) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 14, v9 + 22);
    *v10 = v16;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unable to fetch %s due to %{public}@", (uint8_t *)v9, 0x16u);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v17);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v5);

  }
  else
  {
    v18 = *(_QWORD *)(v0 + 152);
    swift_errorRelease(v18);

    swift_errorRelease(v18);
    swift_errorRelease(v18);
  }
  v19 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 104));
  v20 = *(void (**)(_QWORD, uint64_t, _QWORD))(v19 + 32);
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v25 = *(void **)(v0 + 72);
  v26 = *(void **)(v0 + 56);
  v20(*(_QWORD *)(v0 + 32), v22, *(_QWORD *)(v0 + 104));

  swift_unknownObjectRelease(v24);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FECDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  v7 = type metadata accessor for LibraryData(0);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v6[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003FED40, 0, 0);
}

uint64_t sub_1003FED40()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t **v6;

  v2 = (void *)v0[4];
  v1 = (void *)v0[5];
  LibraryData.init(librarySummary:)(_swiftEmptyArrayStorage);
  v3 = dword_1009E1DE4;
  v4 = v2;
  v5 = v1;
  v6 = (uint64_t **)swift_task_alloc(v3);
  v0[9] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = (uint64_t *)sub_1003FEDBC;
  return sub_1003FDF58(v0[2], v0[8], v0[3], v0[4], v0[5]);
}

uint64_t sub_1003FEDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_task_switch(sub_1003FEE2C, 0, 0);
}

uint64_t sub_1003FEE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = type metadata accessor for FetchResult(0);
  swift_storeEnumTagMultiPayload(v2, v3, 1);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FEE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = type metadata accessor for CollectionSummaryData(0);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003FEEE0, 0, 0);
}

uint64_t sub_1003FEEE0()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t **v4;

  v1 = (void *)v0[4];
  CollectionSummaryData.init(collectionSummary:)(_swiftEmptyArrayStorage);
  v2 = dword_1009E1DC4;
  v3 = v1;
  v4 = (uint64_t **)swift_task_alloc(v2);
  v0[8] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_1003FEF50;
  return sub_1003FE3AC(v0[2], v0[7], v0[3], v0[4]);
}

uint64_t sub_1003FEF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_task_switch(sub_1003FEFC0, 0, 0);
}

uint64_t sub_1003FEFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = type metadata accessor for FetchResult(0);
  swift_storeEnumTagMultiPayload(v2, v3, 0);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003FF010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v8 = type metadata accessor for ReadingNowData(0);
  v7[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[8] = v9;
  v7[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003FF078, 0, 0);
}

uint64_t sub_1003FF078()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t **v7;

  v1 = v0[5];
  v2 = (void *)v0[6];
  v3 = (void *)v0[4];
  ReadingNowData.init(readingNowSummary:)(_swiftEmptyArrayStorage);
  v4 = dword_1009E1D4C;
  v5 = v3;
  swift_unknownObjectRetain(v1);
  v6 = v2;
  v7 = (uint64_t **)swift_task_alloc(v4);
  v0[10] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_1003FF104;
  return sub_1003FE7EC(v0[2], v0[9], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1003FF104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_task_switch(sub_1003FF174, 0, 0);
}

uint64_t sub_1003FF174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = type metadata accessor for FetchResult(0);
  swift_storeEnumTagMultiPayload(v2, v3, 2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003FF1C4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v8 = sub_10004CFD4((uint64_t *)&unk_1009E1D60);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v11);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_100904260, v16 + 8, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v14, v12, v8);
  *(_QWORD *)(v17 + v15) = a3;
  *(_QWORD *)(v17 + v16) = a4;
  aBlock[4] = sub_1004008E0;
  v23 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_100904278;
  v18 = _Block_copy(aBlock);
  v19 = v23;
  v20 = a3;
  v21 = a4;
  objc_msgSend(a2, "performBackgroundReadOnlyBlock:", v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);
}

void sub_1003FF32C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;

  v27 = a3;
  v28 = a4;
  v29 = a2;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009E1D60);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "fetchRequestForRecentlyEngaged");
  v12 = objc_msgSend((id)objc_opt_self(BCJSConfiguration), "sharedInstance");
  v13 = objc_msgSend(v12, "numberOfBooksAllowedInRecentsList");
  v14 = objc_msgSend(v13, "integerValue");

  objc_msgSend(v11, "setFetchLimit:", v14);
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v16 = NSManagedObjectContext.fetch<A>(_:)(v11, v15);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v29, v4);
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = (v18 + 56) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1009042B0, v19 + v6, v18 | 7);
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  v21 = v27;
  *((_QWORD *)v20 + 4) = v16;
  *((_QWORD *)v20 + 5) = v21;
  v22 = v28;
  *((_QWORD *)v20 + 6) = v28;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v20[v19], v7, v4);
  v23 = v21;
  v24 = v22;
  v25 = sub_10030C02C((uint64_t)v10, (uint64_t)&unk_1009E1D78, (uint64_t)v20);
  swift_release(v25);

}

uint64_t sub_1003FF580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v7[97] = a7;
  v7[96] = a6;
  v7[95] = a5;
  v7[94] = a4;
  v8 = type metadata accessor for ReadingNowItemTypeData(0);
  v7[98] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[99] = v9;
  v7[100] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ContentType(0);
  v7[101] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[102] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[103] = swift_task_alloc(v12);
  v7[104] = swift_task_alloc(v12);
  v13 = type metadata accessor for ReadingNowData(0);
  v7[105] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[106] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[107] = swift_task_alloc(v15);
  v7[108] = swift_task_alloc(v15);
  return swift_task_switch(sub_1003FF65C, 0, 0);
}

void sub_1003FF65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  unint64_t *v65;
  uint64_t v66;
  uint64_t v67;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = sub_10004CFD4(&qword_1009E1D80);
  v3 = swift_allocObject(v2, 28, 7);
  *(_QWORD *)(v0 + 872) = v3;
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)v1 >> 62)
    goto LABEL_38;
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  *(_QWORD *)(v0 + 880) = v4;
  if (v4)
  {
    do
    {
      v1 = 0;
      *(_QWORD *)(v0 + 888) = type metadata accessor for Utilities(0);
      while (1)
      {
        *(_QWORD *)(v0 + 896) = 0;
        v5 = *(_QWORD *)(v0 + 752);
        v6 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v1, v5)
           : *(id *)(v5 + 8 * v1 + 32);
        v7 = v6;
        *(_QWORD *)(v0 + 904) = v6;
        *(_QWORD *)(v0 + 912) = v1 + 1;
        if (__OFADD__(v1, 1))
          break;
        v8 = objc_msgSend(v6, "permanentOrTemporaryAssetID");
        v9 = v8;
        v10 = v8;
        if (!v8)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v12 = v11;
          v10 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v12);
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v14 = v13;
          v9 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v14);
        }
        v15 = *(void **)(v0 + 760);
        *(_QWORD *)(v0 + 920) = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        *(_QWORD *)(v0 + 928) = v16;
        v17 = v8;
        dispatch thunk of static Utilities.contentType(from:)((int)objc_msgSend(v7, "contentType"));
        v18 = objc_msgSend(v15, "contentPrivateIDForContentID:", v10);

        if (v18)
        {
          v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
          v21 = v20;

        }
        else
        {
          v19 = 0;
          v21 = 0;
        }
        *(_QWORD *)(v0 + 944) = v21;
        *(_QWORD *)(v0 + 936) = v19;
        v22 = objc_msgSend(*(id *)(v0 + 760), "contentUserIDForContentID:", v9);

        if (v22)
        {
          v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v25 = v24;

        }
        else
        {
          v23 = 0;
          v25 = 0;
        }
        *(_QWORD *)(v0 + 960) = v25;
        *(_QWORD *)(v0 + 952) = v23;
        if (objc_msgSend(v7, "contentType") == 6)
        {
          v51 = *(_QWORD *)(v0 + 768);
          v52 = swift_task_alloc(32);
          *(_QWORD *)(v0 + 968) = v52;
          *(_QWORD *)(v52 + 16) = v51;
          *(_QWORD *)(v52 + 24) = v7;
          swift_asyncLet_begin(v0 + 16, 0, &type metadata for CGFloat, &unk_1009E1D98, v52, v0 + 744);
          swift_asyncLet_get(v0 + 16, v0 + 744, sub_1003FFB84, v0 + 656);
          return;
        }
        v26 = objc_msgSend(v7, "readingProgress");
        if (v26)
        {
          v27 = v26;
          objc_msgSend(v26, "floatValue");
          v29 = v28;

        }
        else
        {
          v29 = 0.0;
        }
        v30 = *(_QWORD *)(v0 + 960);
        v31 = *(_QWORD *)(v0 + 944);
        v32 = *(_QWORD *)(v0 + 928);
        v33 = *(_QWORD *)(v0 + 920);
        v34 = *(_QWORD *)(v0 + 872);
        v35 = *(_QWORD *)(v0 + 824);
        v65 = (unint64_t *)(v34 + 16);
        v66 = *(_QWORD *)(v0 + 896);
        v36 = (os_unfair_lock_s *)(v34 + 24);
        v37 = *(_QWORD *)(v0 + 800);
        if (v31)
          v38 = *(_QWORD *)(v0 + 936);
        else
          v38 = 0;
        if (v31)
          v39 = *(_QWORD *)(v0 + 944);
        else
          v39 = 0xE000000000000000;
        if (v30)
          v40 = *(_QWORD *)(v0 + 952);
        else
          v40 = 0;
        if (v30)
          v41 = *(_QWORD *)(v0 + 960);
        else
          v41 = 0xE000000000000000;
        (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 816) + 16))(v35, *(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 808));
        ReadingNowItemTypeData.init(contentPrivateID:contentUserID:contentType:completionRate:contentID:)(v38, v39, v40, v41, v35, v33, v32, v29);
        v42 = swift_task_alloc(32);
        *(_QWORD *)(v42 + 16) = v37;
        os_unfair_lock_lock(v36);
        sub_10040013C(v65, *(_QWORD *)(v42 + 16));
        os_unfair_lock_unlock(v36);
        if (v66)
          return;
        v43 = *(_QWORD *)(v0 + 912);
        v44 = *(_QWORD *)(v0 + 880);
        v45 = *(_QWORD *)(v0 + 832);
        v46 = *(_QWORD *)(v0 + 816);
        v47 = *(_QWORD *)(v0 + 808);
        v48 = *(_QWORD *)(v0 + 800);
        v49 = *(_QWORD *)(v0 + 792);
        v50 = *(_QWORD *)(v0 + 784);

        swift_task_dealloc(v42);
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        if (v43 == v44)
          goto LABEL_42;
        v1 = *(_QWORD *)(v0 + 912);
      }
      __break(1u);
LABEL_38:
      if (v1 < 0)
        v53 = v1;
      else
        v53 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v54 = _CocoaArrayWrapper.endIndex.getter(v53);
      *(_QWORD *)(v0 + 880) = v54;
    }
    while (v54);
  }
LABEL_42:
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 752));
  v55 = *(_QWORD *)(v0 + 872);
  v56 = *(_QWORD *)(v0 + 864);
  v57 = *(_QWORD *)(v0 + 856);
  v58 = *(_QWORD *)(v0 + 848);
  v59 = *(_QWORD *)(v0 + 840);
  v60 = *(_QWORD *)(v0 + 832);
  v61 = *(_QWORD *)(v0 + 824);
  v67 = *(_QWORD *)(v0 + 800);
  v62 = sub_10004CFD4(&qword_1009E1D88);
  OSAllocatedUnfairLock.valueWithLock.getter(v55, v62);
  ReadingNowData.init(readingNowSummary:)(*(_QWORD *)(v0 + 696));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v57, v56, v59);
  v63 = sub_10004CFD4((uint64_t *)&unk_1009E1D60);
  CheckedContinuation.resume(returning:)(v57, v63);
  v64 = swift_release(v55);
  (*(void (**)(uint64_t, uint64_t, __n128))(v58 + 8))(v56, v59, v64);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v67);
  (*(void (**)(void))(v0 + 8))();
}

uint64_t sub_1003FFB84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 976) = *(_QWORD *)(v0 + 744);
  return swift_asyncLet_finish(v0 + 16, v0 + 744, sub_1003FFBA4, v0 + 704);
}

uint64_t sub_1003FFBA4()
{
  return swift_task_switch(sub_1003FFBB8, 0, 0);
}

void sub_1003FFBB8()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  NSString v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  uint64_t v64;

  v60 = v0 + 744;
  v61 = v0 + 16;
  swift_task_dealloc(*(_QWORD *)(v0 + 968));
  v1 = *(double *)(v0 + 976);
  while (1)
  {
    v2 = *(_QWORD *)(v0 + 960);
    v3 = *(_QWORD *)(v0 + 944);
    v4 = *(_QWORD *)(v0 + 928);
    v5 = *(_QWORD *)(v0 + 920);
    v6 = *(_QWORD *)(v0 + 872);
    v7 = *(_QWORD *)(v0 + 824);
    v62 = (unint64_t *)(v6 + 16);
    v63 = *(_QWORD *)(v0 + 896);
    v8 = (os_unfair_lock_s *)(v6 + 24);
    v9 = *(_QWORD *)(v0 + 800);
    v10 = v3 ? *(_QWORD *)(v0 + 936) : 0;
    v11 = v3 ? *(_QWORD *)(v0 + 944) : 0xE000000000000000;
    v12 = v2 ? *(_QWORD *)(v0 + 952) : 0;
    v13 = v2 ? *(_QWORD *)(v0 + 960) : 0xE000000000000000;
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 816) + 16))(v7, *(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 808));
    ReadingNowItemTypeData.init(contentPrivateID:contentUserID:contentType:completionRate:contentID:)(v10, v11, v12, v13, v7, v5, v4, v1);
    v14 = swift_task_alloc(32);
    *(_QWORD *)(v14 + 16) = v9;
    os_unfair_lock_lock(v8);
    sub_10040013C(v62, *(_QWORD *)(v14 + 16));
    os_unfair_lock_unlock(v8);
    if (v63)
      break;
    v15 = *(_QWORD *)(v0 + 912);
    v16 = *(_QWORD *)(v0 + 880);
    v17 = *(_QWORD *)(v0 + 832);
    v18 = *(_QWORD *)(v0 + 816);
    v19 = *(_QWORD *)(v0 + 808);
    v20 = *(_QWORD *)(v0 + 800);
    v21 = *(_QWORD *)(v0 + 792);
    v22 = *(_QWORD *)(v0 + 784);

    swift_task_dealloc(v14);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    if (v15 == v16)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 752));
      v48 = *(_QWORD *)(v0 + 872);
      v49 = *(_QWORD *)(v0 + 864);
      v50 = *(_QWORD *)(v0 + 856);
      v51 = *(_QWORD *)(v0 + 848);
      v52 = *(_QWORD *)(v0 + 840);
      v53 = *(_QWORD *)(v0 + 832);
      v54 = *(_QWORD *)(v0 + 824);
      v64 = *(_QWORD *)(v0 + 800);
      v55 = sub_10004CFD4(&qword_1009E1D88);
      OSAllocatedUnfairLock.valueWithLock.getter(v48, v55);
      ReadingNowData.init(readingNowSummary:)(*(_QWORD *)(v0 + 696));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v50, v49, v52);
      v56 = sub_10004CFD4((uint64_t *)&unk_1009E1D60);
      CheckedContinuation.resume(returning:)(v50, v56);
      v57 = swift_release(v48);
      (*(void (**)(uint64_t, uint64_t, __n128))(v51 + 8))(v49, v52, v57);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v53);
      swift_task_dealloc(v54);
      swift_task_dealloc(v64);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v23 = *(_QWORD *)(v0 + 912);
    *(_QWORD *)(v0 + 896) = 0;
    v24 = *(_QWORD *)(v0 + 752);
    if ((v24 & 0xC000000000000001) != 0)
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v24);
    else
      v25 = *(id *)(v24 + 8 * v23 + 32);
    v26 = v25;
    *(_QWORD *)(v0 + 904) = v25;
    *(_QWORD *)(v0 + 912) = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      return;
    }
    v27 = objc_msgSend(v25, "permanentOrTemporaryAssetID");
    v28 = v27;
    v29 = v27;
    if (!v27)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v31 = v30;
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v33 = v32;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
    }
    v34 = *(void **)(v0 + 760);
    *(_QWORD *)(v0 + 920) = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = v27;
    dispatch thunk of static Utilities.contentType(from:)((int)objc_msgSend(v26, "contentType"));
    v37 = objc_msgSend(v34, "contentPrivateIDForContentID:", v29);

    if (v37)
    {
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v40 = v39;

    }
    else
    {
      v38 = 0;
      v40 = 0;
    }
    *(_QWORD *)(v0 + 944) = v40;
    *(_QWORD *)(v0 + 936) = v38;
    v41 = objc_msgSend(*(id *)(v0 + 760), "contentUserIDForContentID:", v28);

    if (v41)
    {
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

    }
    else
    {
      v42 = 0;
      v44 = 0;
    }
    *(_QWORD *)(v0 + 960) = v44;
    *(_QWORD *)(v0 + 952) = v42;
    if (objc_msgSend(v26, "contentType") == 6)
    {
      v58 = *(_QWORD *)(v0 + 768);
      v59 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 968) = v59;
      *(_QWORD *)(v59 + 16) = v58;
      *(_QWORD *)(v59 + 24) = v26;
      swift_asyncLet_begin(v61, 0, &type metadata for CGFloat, &unk_1009E1D98, v59, v60);
      swift_asyncLet_get(v61, v60, sub_1003FFB84, v0 + 656);
      return;
    }
    v45 = objc_msgSend(v26, "readingProgress");
    v1 = 0.0;
    if (v45)
    {
      v46 = v45;
      objc_msgSend(v45, "floatValue");
      v1 = v47;

    }
  }
}

uint64_t sub_10040006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc(dword_1009E1DA4);
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_1004000D0;
  v5[16] = a3;
  return swift_task_switch(sub_100400AF8, 0, 0);
}

uint64_t sub_1004000D0(double a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(double *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100400124, 0, 0);
}

uint64_t sub_100400124()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10040013C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = type metadata accessor for ReadingNowItemTypeData(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a2, v4, v6);
  v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v9 = sub_1005B1748(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  if (v11 >= v10 >> 1)
    v9 = sub_1005B1748(v10 > 1, v11 + 1, 1, v9);
  *(_QWORD *)(v9 + 16) = v11 + 1;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v11, v8, v4);
  *a1 = v9;
  return result;
}

uint64_t sub_10040025C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_100009E04(0, (unint64_t *)&unk_1009E1DB0, &off_1008E5328);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_100400304(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100400368;
  return v6(a1);
}

uint64_t sub_100400368()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1004003B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_100400454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1009E1D0C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1001FC2C4;
  return sub_1003FECDC(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_100400508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100400598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1009E1D1C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_1003FEE7C(a1, v6, v7, v8, v9);
}

uint64_t sub_10040063C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_1004006F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1009E1D2C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1001FC2C4;
  return sub_1003FF010(a1, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1004007C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100400800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FetchResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100400844(uint64_t a1)
{
  void **v1;

  sub_1003FF1C4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100400850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009E1D60);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1004008E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009E1D60) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1003FF32C(a1, v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100400940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009E1D60);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004009D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009E1D60) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_1009E1D74);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000AE34;
  return sub_1003FF580(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100400A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1009E1D94);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_10040006C(a1, v5, v4);
}

uint64_t sub_100400AE0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return swift_task_switch(sub_100400AF8, 0, 0);
}

uint64_t sub_100400AF8()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;
  _QWORD *v13;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v3 = objc_msgSend(v2, "isCloud");
  v4 = objc_msgSend((id)objc_opt_self(BKMediaLibraryCache), "sharedCache");
  v0[17] = v4;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070CCA0;
  v7 = objc_msgSend(v2, "permanentOrTemporaryAssetID");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v0[18] = isa;
  swift_bridgeObjectRelease(v6);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100400C60;
  v12 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v13 = v0 + 10;
  v13[1] = 0x40000000;
  v13[2] = sub_10040025C;
  v13[3] = &unk_1009042C8;
  v13[4] = v12;
  objc_msgSend(v4, "fetchAssetsWithIDs:type:completion:", isa, v3, v13);
  return swift_continuation_await(v1);
}

uint64_t sub_100400C60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    v2 = sub_100400DCC;
  else
    v2 = sub_100400CC0;
  return swift_task_switch(v2, 0, 0);
}

void sub_100400CC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);

  if (!((unint64_t)v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(v2);
    goto LABEL_13;
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v2);
  if (!v9)
    goto LABEL_12;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_6:
    v4 = v3;
    swift_bridgeObjectRelease(v2);
    v5 = objc_msgSend(v4, "readPercent");

    if (v5)
    {
      objc_msgSend(v5, "doubleValue");
      v7 = v6;

LABEL_14:
      (*(void (**)(double))(v0 + 8))(v7);
      return;
    }
LABEL_13:
    v7 = 0.0;
    goto LABEL_14;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_100400DCC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *(void **)(v1 + 144);
  v3 = *(_QWORD *)(v1 + 152);
  v4 = *(void **)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  return (*(uint64_t (**)(double))(v1 + 8))(0.0);
}

uint64_t sub_100400E28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100400E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009E1DD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009E1DD0 + dword_1009E1DD0))(a1, v4);
}

uint64_t *sub_100400EBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for ReadingNowData(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for LibraryData(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for CollectionSummaryData(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100400FC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for ReadingNowData(0);
  }
  else if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for LibraryData(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for CollectionSummaryData(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_100401034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for ReadingNowData(0);
  }
  else if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for LibraryData(0);
  }
  else
  {
    v8 = type metadata accessor for CollectionSummaryData(0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1004010CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_100401174(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for ReadingNowData(0);
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for LibraryData(0);
    }
    else
    {
      v8 = type metadata accessor for CollectionSummaryData(0);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_100401174(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FetchResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004011B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v8 = type metadata accessor for ReadingNowData(0);
  }
  else if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for LibraryData(0);
  }
  else
  {
    v8 = type metadata accessor for CollectionSummaryData(0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_100401248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_100401174(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v8 = type metadata accessor for ReadingNowData(0);
    }
    else if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for LibraryData(0);
    }
    else
    {
      v8 = type metadata accessor for CollectionSummaryData(0);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1004012F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  result = type metadata accessor for CollectionSummaryData(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for LibraryData(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for ReadingNowData(319);
      if (v5 <= 0x3F)
      {
        v6[2] = *(_QWORD *)(result - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 3, v6);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100401394@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v31[5];

  v3 = v2;
  v6 = *v2;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10004CFD4(&qword_1009D39F8);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v31[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10004CFD4(&qword_1009D26A0);
  __chkstk_darwin(v13);
  v15 = (_QWORD *)((char *)&v31[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (_QWORD *)((char *)&v31[-1] - v17);
  v19 = v3[4];
  v31[3] = v6;
  v31[4] = &off_100904308;
  v31[0] = v3;
  *v18 = swift_getKeyPath(&unk_100722868);
  v20 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v18, v20, 0);
  *v15 = swift_getKeyPath(&unk_100722898);
  swift_storeEnumTagMultiPayload(v15, v20, 0);
  *v12 = swift_getKeyPath(&unk_1007228C8);
  v21 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v12, v21, 0);
  v22 = type metadata accessor for ChromeStyle(0);
  v23 = sub_100288CBC();
  swift_retain(v19);
  swift_retain(v3);
  EnvironmentObject.init()(v22, v23);
  v25 = v24;
  v27 = v26;
  *v9 = swift_getKeyPath(&unk_1007228F8);
  v28 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v9, v28, 0);
  return sub_1002F2E9C(v19, (uint64_t)v31, (uint64_t)v18, (uint64_t)v15, (uint64_t)v12, v25, v27, (uint64_t)v9, a1, a2);
}

double sub_1004015D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t Strong;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t, double, double);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  double result;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009DE370);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v33 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_OWORD **)(v4 + 32);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 5);
  if (Strong)
  {
    v7 = Strong;
    v8 = v5[2];
    v37 = v5[1];
    v38 = v8;
    v39 = v5[3];
    v9 = swift_unknownObjectWeakLoadStrong(Strong + 16);
    if (v9)
    {
      v10 = v9;
      v40 = v37;
      v41 = v38;
      v42 = v39;
      sub_100059BB4();
      v11 = swift_allocObject(&unk_100904370, 24, 7);
      swift_weakInit(v11 + 16, v10);
      v12 = swift_allocObject(&unk_100904398, 72, 7);
      *(_QWORD *)(v12 + 16) = v11;
      v13 = v38;
      *(_OWORD *)(v12 + 24) = v37;
      *(_OWORD *)(v12 + 40) = v13;
      *(_OWORD *)(v12 + 56) = v39;
      sub_100210D60((uint64_t)&v42);
      sub_100210D60((uint64_t)&v40);
      sub_100210D60((uint64_t)&v41);
      swift_unknownObjectRetain(v4);
      swift_unknownObjectRetain(v5);
      sub_100210D60((uint64_t)&v42);
      sub_100210D60((uint64_t)&v40);
      sub_100210D60((uint64_t)&v41);
      swift_retain(v11);
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1004025F8, v12);
      swift_unknownObjectRelease(v10);
      swift_release(v11);
      swift_release(v12);
      sub_100210D88((uint64_t)&v40);
      sub_100210D88((uint64_t)&v41);
      sub_100210D88((uint64_t)&v42);
      swift_unknownObjectRelease(v4);
      swift_unknownObjectRelease(v5);
    }
    swift_unknownObjectRelease(v7);
  }
  v14 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD **)(v14 + 32);
  v16 = v15[8];
  v17 = v15[9];
  ObjectType = swift_getObjectType();
  v19 = v15[2];
  v20 = v15[3];
  v21 = swift_allocObject(&unk_100904348, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_100402508;
  *(_QWORD *)(v21 + 24) = v1;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t, double, double))(v17 + 8);
  swift_unknownObjectRetain(v14);
  swift_retain_n(v1, 2);
  swift_unknownObjectRetain(v15);
  swift_unknownObjectRetain(v16);
  swift_bridgeObjectRetain(v20);
  v22(v19, v20, sub_100402538, v21, ObjectType, v17, 204.0, 204.0);
  swift_unknownObjectRelease(v14);
  swift_release(v1);
  swift_unknownObjectRelease(v15);
  swift_unknownObjectRelease(v16);
  swift_bridgeObjectRelease(v20);
  swift_release(v21);
  v23 = *(_QWORD *)(v1 + 32);
  swift_beginAccess(v23 + OBJC_IVAR____TtC5Books21SampleHeaderViewModel__navigationAttemptsPastEnd, v36, 33, 0);
  swift_retain(v23);
  v24 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
  v25 = v33;
  Published.projectedValue.getter(v24);
  swift_endAccess(v36);
  swift_release(v23);
  v26 = swift_allocObject(&unk_100904370, 24, 7);
  swift_weakInit(v26 + 16, v1);
  v27 = sub_100402570();
  v28 = v35;
  v29 = Publisher<>.sink(receiveValue:)(sub_100402568, v26, v35, v27);
  v30 = swift_release(v26);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v25, v28, v30);
  v31 = v1 + 96;
  swift_beginAccess(v31, v36, 33, 0);
  AnyCancellable.store(in:)(v31);
  swift_endAccess(v36);
  *(_QWORD *)&result = swift_release(v29).n128_u64[0];
  return result;
}

uint64_t sub_100401958()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100401978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentSizeCategory(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.sizeCategory.setter(v4);
}

void sub_1004019F4(void *a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  void *v9;
  os_log_type_t v10;
  NSObject *v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _BYTE v19[8];
  uint64_t v20;

  if ((a2 & 1) != 0)
  {
    v7 = swift_errorRetain(a1);
    v8 = static os_log_type_t.error.getter(v7);
    if (qword_1009CDD68 != -1)
      swift_once(&qword_1009CDD68, sub_100270CA0);
    v9 = (void *)qword_1009D5C90;
    v10 = v8;
    if (os_log_type_enabled((os_log_t)qword_1009D5C90, v8))
    {
      sub_100402614(a1, 1);
      sub_100402614(a1, 1);
      v11 = v9;
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue(a1, v19, v18);
      v14 = Error.localizedDescription.getter(v18[1], v18[2]);
      v16 = v15;
      v17 = sub_100040F58(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v16);
      sub_10031726C(a1, 1);
      sub_10031726C(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v11, v10, "getCoverImage recieved an error: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
      sub_10031726C(a1, 1);

    }
    else
    {
      sub_10031726C(a1, 1);
    }
  }
  else
  {
    sub_100059BB4();
    v5 = swift_allocObject(&unk_100904370, 24, 7);
    swift_weakInit(v5 + 16, a3);
    v6 = swift_allocObject(&unk_1009043C0, 32, 7);
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = a1;
    sub_100402614(a1, 0);
    sub_100402614(a1, 0);
    swift_retain(v5);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10040264C, v6);
    swift_release(v5);
    swift_release(v6);
    sub_10031726C(a1, 0);
  }
}

uint64_t sub_100401C78(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  void *v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 32);
    KeyPath = swift_getKeyPath(&unk_100722A00);
    v8 = swift_getKeyPath(&unk_100722A28);
    v10 = a2;
    swift_retain(v6);
    v9 = a2;
    static Published.subscript.setter(&v10, v6, KeyPath, v8);
    return swift_release(v5);
  }
  return result;
}

void sub_100401D24(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  Class v12;
  _BYTE v13[24];

  if (*a1 >= 2)
  {
    v2 = a2 + 16;
    swift_beginAccess(a2 + 16, v13, 0, 0);
    Strong = swift_weakLoadStrong(v2);
    if (Strong)
    {
      v4 = Strong;
      v5 = *(_QWORD *)(Strong + 40);
      swift_unknownObjectRetain(v5);
      swift_release(v4);
      v6 = *(_QWORD *)(v5 + 32);
      v7 = (void *)objc_opt_self(JSAApplication);
      v8 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
      v9 = swift_allocObject(v8, 48, 7);
      *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
      v10 = *(_QWORD *)(v6 + 24);
      *(_QWORD *)(v9 + 32) = *(_QWORD *)(v6 + 16);
      *(_QWORD *)(v9 + 40) = v10;
      swift_unknownObjectRetain(v6);
      swift_bridgeObjectRetain(v10);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v9);
      v12 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v7, "openProductPagesWithIds:contentTypes:focusedIndex:options:", isa, v12, 0, 0);
      swift_unknownObjectRelease(v5);
      swift_unknownObjectRelease(v6);

    }
  }
}

double sub_100401E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE v10[40];
  _BYTE v11[40];
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_10002E418(a2, (uint64_t)v11);
    swift_beginAccess(v6 + 56, v10, 33, 0);
    sub_100402110((uint64_t)v11, v6 + 56);
    swift_endAccess(v10);
    v7 = *(_QWORD *)(v6 + 32);
    sub_10002E418(a2, (uint64_t)v11);
    KeyPath = swift_getKeyPath(&unk_100722928);
    v9 = swift_getKeyPath(&unk_100722950);
    sub_1001F1600((uint64_t)v11, (uint64_t)v10);
    swift_retain_n(v7, 2);
    static Published.subscript.setter(v10, v7, KeyPath, v9);
    sub_1001F1648((uint64_t)v11);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_100401F5C()
{
  _QWORD *v0;

  sub_1001FE9A0((uint64_t)(v0 + 2));
  swift_release(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  sub_1001F1648((uint64_t)(v0 + 7));
  swift_bridgeObjectRelease(v0[12]);
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for SampleHeaderPresenter()
{
  return objc_opt_self(_TtC5Books21SampleHeaderPresenter);
}

double sub_100401FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _BYTE v14[24];
  __int128 v15;
  __int128 v16;

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + 32);
    v16 = *(_OWORD *)(a2 + 16);
    KeyPath = swift_getKeyPath(&unk_100722970);
    v9 = swift_getKeyPath(&unk_100722998);
    v15 = v16;
    swift_retain(v7);
    sub_100210D60((uint64_t)&v16);
    static Published.subscript.setter(&v15, v7, KeyPath, v9);
    v10 = *(_QWORD *)(v6 + 32);
    v15 = *(_OWORD *)(a2 + 32);
    v11 = swift_getKeyPath(&unk_1007229B8);
    v12 = swift_getKeyPath(&unk_1007229E0);
    v13 = v15;
    swift_retain(v10);
    sub_100210D60((uint64_t)&v15);
    static Published.subscript.setter(&v13, v10, v11, v12);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004020E4()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100402110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100402160(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;

  sub_1001F1600(a1, (uint64_t)&v38);
  if (!v39)
    return sub_1001F1648((uint64_t)&v38);
  sub_100022840(&v38, (uint64_t)v40);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = Color.init(_:)(objc_msgSend(v1, "labelColor"));
  v3 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v4 = Color.init(_:)(objc_msgSend(v1, "labelColor"));
  v5 = Color.init(_:)(objc_msgSend(v1, "bc_booksOrange"));
  v6 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v7 = *(_QWORD *)(v6 + 32);
  *(_QWORD *)(v6 + 32) = v2;
  swift_retain(v2);
  swift_release(v7);
  v8 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v9 = objc_msgSend(v1, "secondarySystemBackgroundColor", swift_retain(v8).n128_f64[0]);
  v10 = Color.init(_:)(v9);
  v11 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v10;
  swift_release(v8);
  swift_release(v11);
  v12 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  swift_retain(v12);
  v14 = static Color.clear.getter(v13);
  v15 = *(_QWORD *)(v12 + 48);
  *(_QWORD *)(v12 + 48) = v14;
  swift_release(v12);
  swift_release(v15);
  v16 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  swift_retain(v16);
  v17 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v18 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v16 + 16) = v17;
  swift_release(v16);
  swift_release(v18);
  v19 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v20 = objc_msgSend(v1, "tertiaryLabelColor", swift_retain(v19).n128_f64[0]);
  v21 = Color.init(_:)(v20);
  v22 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v19 + 24) = v21;
  swift_release(v19);
  swift_release(v22);
  v23 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v24 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v23 + 64) = v4;
  swift_retain(v4);
  swift_release(v24);
  v25 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v26 = *(_QWORD *)(v25 + 72);
  *(_QWORD *)(v25 + 72) = v3;
  swift_retain(v3);
  swift_release(v26);
  v27 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v28 = *(_QWORD *)(v27 + 80);
  *(_QWORD *)(v27 + 80) = v4;
  swift_retain(v4);
  swift_release(v28);
  v29 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  swift_retain(v29);
  v30 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v31 = *(_QWORD *)(v29 + 104);
  *(_QWORD *)(v29 + 104) = v30;
  swift_release(v29);
  swift_release(v31);
  v32 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v33 = *(_QWORD *)(v32 + 112);
  *(_QWORD *)(v32 + 112) = v5;
  swift_retain(v5);
  swift_release(v33);
  v34 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v35 = *(_QWORD *)(v34 + 120);
  *(_QWORD *)(v34 + 120) = v5;
  swift_retain(v5);
  swift_release(v35);
  v36 = *(_QWORD *)(*sub_10003F198(v40, v41) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  swift_retain(v36);
  swift_release(v5);
  swift_release(v3);
  swift_release(v4);
  swift_release(v2);
  *(_QWORD *)(v36 + 56) = 0;
  swift_release(v36);
  return _s5Books15CurrentPageViewVwxx_0(v40);
}

void sub_100402508(void *a1, char a2)
{
  uint64_t v2;

  sub_1004019F4(a1, a2 & 1, v2);
}

uint64_t sub_100402514()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100402538(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1003177A8(a1, a2 & 1, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16));
}

uint64_t sub_100402544()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100402568(uint64_t *a1)
{
  uint64_t v1;

  sub_100401D24(a1, v1);
}

unint64_t sub_100402570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE3B8;
  if (!qword_1009DE3B8)
  {
    v1 = sub_100030B74(&qword_1009DE370);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1009DE3B8);
  }
  return result;
}

uint64_t sub_1004025BC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_1004025F8()
{
  uint64_t v0;

  return sub_100401FC0(*(_QWORD *)(v0 + 16), v0 + 24);
}

id sub_100402614(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_errorRetain();
  else
    return a1;
}

uint64_t sub_100402620()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10040264C()
{
  uint64_t v0;

  return sub_100401C78(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

BOOL InfoBar.Content.ContentType.isTitle.getter()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_10029DACC(v0, (uint64_t)v2);
  return v2[32] == 0;
}

uint64_t InfoBar.TimedMessage.__allocating_init(content:duration:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v9;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(double *)(v5 + OBJC_IVAR____TtCO5Books7InfoBar12TimedMessage_duration) = a2;
  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v6 = v5 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(v5 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime, 1, 1, v7);
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v9;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v5 + 64) = *(_QWORD *)(a1 + 48);
  return v5;
}

uint64_t InfoBar.Message.__allocating_init(content:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v7;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v4 = v3 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(v3 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime, 1, 1, v5);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(a1 + 48);
  return v3;
}

uint64_t sub_10040281C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1E860);
  sub_100048F64(v0, (uint64_t)qword_100A1E860);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0x7261426F666E49, 0xE700000000000000);
}

void InfoBar.Content.ContentType.description.getter()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_10029DACC(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1004028E8()
{
  Swift::String v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  char v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  char v9;

  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6 = 0x7865546E69616C70;
  v7 = 0xEB00000000203A74;
  String.append(_:)(v8);
  v0._countAndFlagsBits = 0x203A6E6F6369202CLL;
  v0._object = (void *)0xE800000000000000;
  String.append(_:)(v0);
  v5 = v9;
  v1 = sub_10004CFD4(&qword_1009E1F60);
  v2._countAndFlagsBits = String.init<A>(describing:)(&v5, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return v6;
}

uint64_t static InfoBar.Content.ContentType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  InfoBar.Content.ContentType.description.getter();
  v1 = v0;
  v3 = v2;
  InfoBar.Content.ContentType.description.getter();
  v6 = v5;
  if (v1 == v4 && v3 == v5)
  {
    v7 = 1;
    v6 = v3;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
  }
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

Books::InfoBar::Content::ContentType::Icon_optional __swiftcall InfoBar.Content.ContentType.Icon.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  Books::InfoBar::Content::ContentType::Icon_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0B70, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = Books_InfoBar_Content_ContentType_Icon_disclosure;
  else
    v4.value = Books_InfoBar_Content_ContentType_Icon_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t InfoBar.Content.ContentType.Icon.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x75736F6C63736964;
  else
    return 0x72616D6B63656863;
}

uint64_t sub_100402C1C(char *a1, char *a2)
{
  return sub_100670150(*a1, *a2);
}

Swift::Int sub_100402C28()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x75736F6C63736964;
  else
    v2 = 0x72616D6B63656863;
  if (v1)
    v3 = 0xEA00000000006572;
  else
    v3 = 0xE90000000000006BLL;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100402CB0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x75736F6C63736964;
  else
    v2 = 0x72616D6B63656863;
  if (*v1)
    v3 = 0xEA00000000006572;
  else
    v3 = 0xE90000000000006BLL;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100402D14(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x75736F6C63736964;
  else
    v3 = 0x72616D6B63656863;
  if (v2)
    v4 = 0xEA00000000006572;
  else
    v4 = 0xE90000000000006BLL;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100402D98@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0B70, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100402DF4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x72616D6B63656863;
  if (*v1)
    v2 = 0x75736F6C63736964;
  v3 = 0xE90000000000006BLL;
  if (*v1)
    v3 = 0xEA00000000006572;
  *a1 = v2;
  a1[1] = v3;
}

void sub_100402E3C()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_10029DACC(v0, (uint64_t)v1);
  InfoBar.Content.ContentType.description.getter();
}

uint64_t sub_100402E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  _BYTE v13[40];

  sub_10029DACC(a1, (uint64_t)v13);
  sub_10029DACC(a2, (uint64_t)&v12);
  InfoBar.Content.ContentType.description.getter();
  v4 = v3;
  v6 = v5;
  InfoBar.Content.ContentType.description.getter();
  v9 = v8;
  if (v4 == v7 && v6 == v8)
  {
    v10 = 1;
    v9 = v6;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t InfoBar.Content.description.getter()
{
  uint64_t v0;
  char v1;
  _BYTE v3[40];

  v1 = *(_BYTE *)(v0 + 33);
  sub_10029DACC(v0, (uint64_t)v3);
  return sub_100403F38((uint64_t)v3, v1 & 1);
}

uint64_t static InfoBar.Content.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BYTE v14[40];
  _BYTE v15[40];

  v3 = *(_BYTE *)(a1 + 33);
  sub_10029DACC(a1, (uint64_t)v15);
  v4 = sub_100403F38((uint64_t)v15, v3 & 1);
  v6 = v5;
  v7 = *(_BYTE *)(a2 + 33);
  sub_10029DACC(a2, (uint64_t)v14);
  v8 = sub_100403F38((uint64_t)v14, v7 & 1);
  if (v4 == v8 && v6 == v9)
  {
    v12 = 1;
    v11 = v6;
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v9, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v11);
  return v12 & 1;
}

uint64_t sub_100403008()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_10029DACC(v0, (uint64_t)v2);
  return sub_100403F38((uint64_t)v2, *(_BYTE *)(v0 + 33));
}

uint64_t sub_100403038(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BYTE v14[40];
  _BYTE v15[40];

  v3 = a1;
  sub_10029DACC(a1, (uint64_t)v15);
  LOBYTE(v3) = *(_BYTE *)(v3 + 33);
  sub_10029DACC(a2, (uint64_t)v14);
  v4 = *(_BYTE *)(a2 + 33);
  v5 = sub_100403F38((uint64_t)v15, v3);
  v7 = v6;
  v8 = sub_100403F38((uint64_t)v14, v4);
  if (v5 == v8 && v7 == v9)
  {
    v12 = 1;
    v11 = v7;
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  return v12 & 1;
}

uint64_t InfoBar.Message.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 49);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_BYTE *)(v1 + 48);
  sub_100284264(v3, v4, v5, v6, v10);
  result = sub_10002ACF0(v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 33) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  return result;
}

double InfoBar.Message.totalDisplayedTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  double v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[24];
  _BYTE v23[24];

  v1 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v1);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  swift_beginAccess(v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime, v23, 0, 0);
  sub_1001FE7C4(v14, (uint64_t)v6);
  v15 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v8[6];
  if (v15(v6, 1, v7) == 1)
  {
    sub_100010D2C((uint64_t)v6);
    return 0.0;
  }
  else
  {
    v17 = (void (*)(_BYTE *, _BYTE *, uint64_t))v8[4];
    v17(v13, v6, v7);
    v18 = v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime;
    swift_beginAccess(v18, v22, 0, 0);
    sub_1001FE7C4(v18, (uint64_t)v3);
    v19 = v15(v3, 1, v7);
    if ((_DWORD)v19 == 1)
    {
      Date.init()(v19);
      sub_100010D2C((uint64_t)v3);
    }
    else
    {
      v17(v10, v3, v7);
    }
    v16 = Date.timeIntervalSince(_:)(v13);
    v20 = (void (*)(_BYTE *, uint64_t))v8[1];
    v20(v10, v7);
    v20(v13, v7);
  }
  return v16;
}

uint64_t InfoBar.Message.init(content:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v6;

  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v3 = v1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(v1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime, 1, 1, v4);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(a1 + 48);
  return v1;
}

uint64_t InfoBar.Message.willShow(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v14[-v7 - 8];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_10002D974((uint64_t)v8, (uint64_t)v5);
  v11 = v1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  swift_beginAccess(v1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime, v14, 33, 0);
  sub_10006CD88((uint64_t)v5, v11);
  return swift_endAccess(v14);
}

uint64_t InfoBar.Message.didHide(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  double v38;
  uint64_t v39[3];
  _BYTE v40[40];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - v8;
  if (qword_1009CE410 != -1)
    swift_once(&qword_1009CE410, sub_10040281C);
  v10 = type metadata accessor for Logger(0);
  sub_100048F64(v10, (uint64_t)qword_100A1E860);
  v11 = swift_retain_n(v1, 4);
  v12 = Logger.logObject.getter(v11);
  v16 = static os_log_type_t.debug.getter(v12, v13, v14, v15);
  if (os_log_type_enabled(v12, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v37 = v6;
    v18 = v17;
    v19 = swift_slowAlloc(32, -1);
    v36 = a1;
    v20 = v19;
    v39[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v35 = v18 + 4;
    sub_10029DACC(v1 + 16, (uint64_t)v40);
    v21 = *(_BYTE *)(v1 + 49);
    v23 = *(_QWORD *)(v1 + 56);
    v22 = *(_QWORD *)(v1 + 64);
    sub_10029DB08((uint64_t)v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284264);
    sub_10002ACF0(v23, v22);
    v24 = sub_100403F38((uint64_t)v40, v21);
    v26 = v25;
    sub_10029DB08((uint64_t)v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10029DB40);
    sub_10002AD00(v23, v22);
    v38 = COERCE_DOUBLE(sub_100040F58(v24, v26, v39));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v35, v18 + 12);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v18 + 12) = 2048;
    v38 = InfoBar.Message.totalDisplayedTime.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v18 + 14, v18 + 22);
    swift_release_n(v2, 2);
    _os_log_impl((void *)&_mh_execute_header, v12, v16, "Hid message (%s), displayed for %f seconds", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v27 = v20;
    a1 = v36;
    swift_slowDealloc(v27, -1, -1);
    v28 = v18;
    v6 = v37;
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

    swift_release_n(v1, 4);
  }
  v29 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v31(v9, 1, 1, v29);
  v32 = v2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  swift_beginAccess(v2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime, v39, 33, 0);
  sub_10006CD88((uint64_t)v9, v32);
  swift_endAccess(v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v9, a1, v29);
  v31(v9, 0, 1, v29);
  sub_10002D974((uint64_t)v9, (uint64_t)v6);
  v33 = v2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime;
  swift_beginAccess(v33, v39, 33, 0);
  sub_10006CD88((uint64_t)v6, v33);
  return swift_endAccess(v39);
}

uint64_t InfoBar.Message.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_10029DB40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_10002AD00(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id;
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_100010D2C(v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime);
  sub_100010D2C(v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime);
  return v0;
}

uint64_t InfoBar.Message.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_10029DB40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_10002AD00(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id;
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_100010D2C(v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime);
  sub_100010D2C(v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

double InfoBar.TimedMessage.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtCO5Books7InfoBar12TimedMessage_duration);
}

uint64_t InfoBar.TimedMessage.timeRemaining.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v21[24];
  _BYTE v22[24];

  v1 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v21[-v5];
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v21[-v12];
  v14 = v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  swift_beginAccess(v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime, v22, 0, 0);
  sub_1001FE7C4(v14, (uint64_t)v6);
  v15 = (unsigned int (*)(_BYTE *, uint64_t, uint64_t))v8[6];
  if (v15(v6, 1, v7) == 1)
    return sub_100010D2C((uint64_t)v6);
  v17 = (void (*)(_BYTE *, _BYTE *, uint64_t))v8[4];
  v17(v13, v6, v7);
  v18 = v0 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime;
  swift_beginAccess(v18, v21, 0, 0);
  sub_1001FE7C4(v18, (uint64_t)v3);
  v19 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v15)(v3, 1, v7);
  if ((_DWORD)v19 == 1)
  {
    Date.init()(v19);
    sub_100010D2C((uint64_t)v3);
  }
  else
  {
    v17(v10, v3, v7);
  }
  Date.timeIntervalSince(_:)(v13);
  v20 = (void (*)(_BYTE *, uint64_t))v8[1];
  v20(v10, v7);
  return ((uint64_t (*)(_BYTE *, uint64_t))v20)(v13, v7);
}

void sub_100403BBC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x80000001007C7A00, "Books/InfoBarMessage.swift", 26, 2, 129, 0);
  __break(1u);
}

uint64_t InfoBar.TimedMessage.init(content:duration:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v7;

  *(double *)(v2 + OBJC_IVAR____TtCO5Books7InfoBar12TimedMessage_duration) = a2;
  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v4 = v2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_currentVisibleStartTime;
  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(v2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_lastVisibleEndTime, 1, 1, v5);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 48);
  return v2;
}

uint64_t InfoBar.Message.hash(into:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int InfoBar.Message.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

Swift::Int sub_100403DA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_100403E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_100403E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t static InfoBar.Message.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return static UUID.== infix(_:_:)(a1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id, a2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id);
}

uint64_t sub_100403F1C(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id, *a2 + OBJC_IVAR____TtCO5Books7InfoBar7Message_id);
}

uint64_t sub_100403F38(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10070FC00;
  InfoBar.Content.ContentType.description.getter();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease(0xE000000000000000);
  if ((a2 & 1) != 0)
    v7 = 7562617;
  else
    v7 = 28526;
  if ((a2 & 1) != 0)
    v8 = 0xE300000000000000;
  else
    v8 = 0xE200000000000000;
  v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(v4 + 48) = 0xD000000000000026;
  *(_QWORD *)(v4 + 56) = 0x80000001007C7A30;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v11 = sub_100044F44();
  v12 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
  swift_bridgeObjectRelease(v4);
  return v12;
}

unint64_t sub_100404058()
{
  unint64_t result;

  result = qword_1009E1F68;
  if (!qword_1009E1F68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InfoBar.Content.ContentType.Icon, &type metadata for InfoBar.Content.ContentType.Icon);
    atomic_store(result, (unint64_t *)&qword_1009E1F68);
  }
  return result;
}

uint64_t sub_10040409C()
{
  return sub_100008DB0(&qword_1009E1F70, type metadata accessor for InfoBar.Message, (uint64_t)&protocol conformance descriptor for InfoBar.Message);
}

uint64_t type metadata accessor for InfoBar.Message(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E1FA0, (uint64_t)&nominal type descriptor for InfoBar.Message);
}

ValueMetadata *type metadata accessor for InfoBar()
{
  return &type metadata for InfoBar;
}

double destroy for InfoBar.Content(uint64_t a1)
{
  double result;

  sub_10029DB40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  if (*(_QWORD *)(a1 + 40))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 48)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for InfoBar.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_100284264(*(_QWORD *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for InfoBar.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_100284264(*(_QWORD *)a2, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_10029DB40(v9, v10, v11, v12, v13);
  v14 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v15 = *(_QWORD *)(a2 + 40);
  if (!v14)
  {
    if (v15)
    {
      v18 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v18;
      swift_retain(v18);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v15)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

__n128 initializeWithTake for InfoBar.Content(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InfoBar.Content(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_10029DB40(v5, v6, v7, v8, v10);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  if (!v12)
  {
    if (v11)
    {
      v15 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v15;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v11)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v13;
  swift_release(v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfoBar.Content(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InfoBar.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoBar.Content()
{
  return &type metadata for InfoBar.Content;
}

uint64_t destroy for InfoBar.Content.ContentType(uint64_t a1)
{
  return sub_10029DB40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for InfoBar.Content.ContentType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_100284264(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for InfoBar.Content.ContentType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_100284264(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_10029DB40(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for InfoBar.Content.ContentType(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InfoBar.Content.ContentType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_10029DB40(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for InfoBar.Content.ContentType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InfoBar.Content.ContentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_100404608(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_100404610(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InfoBar.Content.ContentType()
{
  return &type metadata for InfoBar.Content.ContentType;
}

uint64_t storeEnumTagSinglePayload for InfoBar.Content.ContentType.Icon(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100404674 + 4 * byte_100722A51[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004046A8 + 4 * byte_100722A4C[v4]))();
}

uint64_t sub_1004046A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004046B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004046B8);
  return result;
}

uint64_t sub_1004046C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004046CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004046D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004046D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InfoBar.Content.ContentType.Icon()
{
  return &type metadata for InfoBar.Content.ContentType.Icon;
}

uint64_t sub_1004046F4()
{
  return type metadata accessor for InfoBar.Message(0);
}

void sub_1004046FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;

  v6[0] = "8";
  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10006CDD0(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

uint64_t sub_100404790()
{
  return type metadata accessor for InfoBar.TimedMessage(0);
}

uint64_t type metadata accessor for InfoBar.TimedMessage(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E20B0, (uint64_t)&nominal type descriptor for InfoBar.TimedMessage);
}

uint64_t sub_1004047AC(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 192);
}

uint64_t destroy for CloseAudiobookMiniPlayerActionItem(uint64_t a1)
{
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));

  return _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
}

uint64_t initializeWithCopy for CloseAudiobookMiniPlayerActionItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = a2 + 88;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v6;
  v10(a1 + 88, v7, v9);
  return a1;
}

_QWORD *assignWithCopy for CloseAudiobookMiniPlayerActionItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  sub_1001EAB00(a1, a2);
  sub_1001EAB00(a1 + 5, a2 + 5);
  v4 = (void *)a1[10];
  v5 = (void *)a2[10];
  a1[10] = v5;
  v6 = v5;

  sub_1001EAB00(a1 + 11, a2 + 11);
  return a1;
}

__n128 initializeWithTake for CloseAudiobookMiniPlayerActionItem(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for CloseAudiobookMiniPlayerActionItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(void **)(a1 + 80);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseAudiobookMiniPlayerActionItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloseAudiobookMiniPlayerActionItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseAudiobookMiniPlayerActionItem()
{
  return &type metadata for CloseAudiobookMiniPlayerActionItem;
}

uint64_t sub_100404A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - v7;
  v9 = (_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v1 + 72);
  sub_10003F198(v9, v10);
  ContextActionDataProtocol.selectionMode.getter(v22, v10, v11);
  if ((v23[0] & 1) != 0)
  {
    sub_1001EB7C0((uint64_t)v22);
    v12 = 0;
  }
  else
  {
    sub_100022840(v22, (uint64_t)v26);
    v13 = v27;
    v14 = v28;
    sub_10003F198(v26, v27);
    v15 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v13, v14);
    v16 = static ContextActionAssetType.== infix(_:_:)(v15, 3);
    sub_100404E54(v1, (uint64_t)v22);
    if ((v16 & 1) != 0)
    {
      v17 = v24;
      v18 = v25;
      sub_10003F198(v23, v24);
      dispatch thunk of ContextActionDataProtocol.source.getter(v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ContextActionSource.miniPlayer(_:), v2);
      v12 = static ContextActionSource.== infix(_:_:)(v8, v5);
      v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v5, v2);
      v19(v8, v2);
    }
    else
    {
      v12 = 0;
    }
    sub_100404E88((uint64_t)v22);
    _s5Books15CurrentPageViewVwxx_0(v26);
  }
  return v12 & 1;
}

uint64_t sub_100404C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100404C98, v2, v3);
}

uint64_t sub_100404C98()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  swift_release(*(_QWORD *)(v0 + 16));
  v1 = (void *)objc_opt_self(BKAppDelegate);
  v2 = objc_msgSend(v1, "sceneManager");
  v3 = objc_msgSend(v2, "primarySceneController");

  v4 = objc_msgSend(v3, "rootBarCoordinator");
  if (v4)
  {
    objc_msgSend(v4, "undockMiniPlayer");
    swift_unknownObjectRelease(v4);
  }
  v5 = objc_msgSend(v1, "sceneManager");
  objc_msgSend(v5, "attemptToPresentStoreReview");

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100404D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for ContextActionType.closeAudiobookMiniPlayer(_:);
  v3 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_100404DC0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E21C4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100404C30();
}

uint64_t sub_100404E04@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  sub_100022840(a1, a5 + 40);
  sub_100022840(a2, a5);
  *(_QWORD *)(a5 + 80) = a3;
  return sub_100022840(a4, a5 + 88);
}

uint64_t sub_100404E54(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CloseAudiobookMiniPlayerActionItem(a2, a1);
  return a2;
}

uint64_t sub_100404E88(uint64_t a1)
{
  destroy for CloseAudiobookMiniPlayerActionItem(a1);
  return a1;
}

uint64_t sub_100404EB4(uint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      v2 = v1[1];
      v3 = HIBYTE(v2) & 0xF;
      if ((v2 & 0x2000000000000000) == 0)
        v3 = *v1;
      v4 = 7;
      if (((v2 >> 60) & ((*v1 & 0x800000000000000) == 0)) != 0)
        v4 = 11;
      result = String.index(_:offsetBy:limitedBy:)(15, result, v4 | (v3 << 16));
      if ((v5 & 1) == 0)
        return String.removeSubrange(_:)(15, result);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100404F28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  id v46;

  v2 = v1;
  v41 = a1;
  v3 = sub_10004CFD4(&qword_1009E22F8);
  v4 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v44 = v4;
  __chkstk_darwin(v3);
  v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009E2300);
  v10 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  v40 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SidebarViewModel(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  *(_QWORD *)(v1 + 16) = sub_10059FD04();
  v14 = sub_10004CFD4(&qword_1009D3470);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)(v1 + 24) = PassthroughSubject.init()();
  v15 = sub_10004CFD4(&qword_1009D3458);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)(v1 + 32) = PassthroughSubject.init()();
  v16 = sub_10004CFD4(&qword_1009D3438);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = PassthroughSubject.init()();
  *(_QWORD *)(v1 + 40) = v17;
  v18 = sub_10004CFD4(&qword_1009D3488);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)(v1 + 48) = PassthroughSubject.init()();
  *(_QWORD *)(v1 + 56) = &_swiftEmptySetSingleton;
  *(_WORD *)(v1 + 64) = 0;
  v45[0] = v17;
  v19 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v20 = swift_retain(v17);
  v46 = (id)static OS_dispatch_queue.main.getter(v20);
  v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v38(v8, 1, 1, v21);
  v22 = sub_100030B34(&qword_1009D3448, &qword_1009D3438, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v37 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v46, v8, v16, v19, v22, v37);
  sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D4AE0);

  swift_release(v45[0]);
  v23 = swift_allocObject(&unk_100904770, 24, 7);
  swift_weakInit(v23 + 16, v2);
  v24 = swift_allocObject(&unk_100904798, 32, 7);
  v25 = v41;
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v25;
  v26 = sub_100030B34(&qword_1009E2308, &qword_1009E2300, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v41 = v25;
  v27 = v39;
  v28 = Publisher<>.sink(receiveValue:)(sub_100408D68, v24, v39, v26);
  swift_release(v24);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v27);
  swift_beginAccess(v2 + 56, v45, 33, 0);
  AnyCancellable.store(in:)(v2 + 56);
  swift_endAccess(v45);
  swift_release(v28);
  v45[0] = *(_QWORD *)(v2 + 48);
  v29 = swift_retain(v45[0]);
  v46 = (id)static OS_dispatch_queue.main.getter(v29);
  v38(v8, 1, 1, v21);
  v30 = sub_100030B34(&qword_1009D3490, &qword_1009D3488, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v31 = v42;
  Publisher.receive<A>(on:options:)(&v46, v8, v18, v19, v30, v37);
  sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D4AE0);

  swift_release(v45[0]);
  v32 = swift_allocObject(&unk_100904770, 24, 7);
  swift_weakInit(v32 + 16, v2);
  v33 = sub_100030B34(&qword_1009E2310, &qword_1009E22F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v34 = v43;
  v35 = Publisher<>.sink(receiveValue:)(sub_100408D70, v32, v43, v33);
  swift_release(v32);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v34);
  swift_beginAccess(v2 + 56, v45, 33, 0);
  AnyCancellable.store(in:)(v2 + 56);
  swift_endAccess(v45);
  swift_release(v35);

  return v2;
}

uint64_t sub_1004053E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = a2 + 16;
  v3 = *(unsigned __int8 *)(a1 + 41);
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
    __asm { BR              X9 }
  return result;
}

void sub_1004058DC(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    sub_10059EEAC(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v5 + 16);
      if (v7)
      {
        v61 = v4;
        v8 = v5 + 48;
        while (1)
        {
          v9 = *(_QWORD *)(v8 - 16);
          v10 = *(_QWORD *)(v8 - 8);
          v11 = *(_QWORD *)v8;
          v64 = *(_QWORD *)(v8 + 16);
          v65 = *(_QWORD *)(v8 + 24);
          v12 = *(_QWORD *)(v8 + 40);
          v66 = *(_QWORD *)(v8 + 32);
          v67 = *(_QWORD *)(v8 + 8);
          v13 = *(unsigned __int8 *)(v8 + 50);
          v14 = *(unsigned __int16 *)(v8 + 48);
          v15 = v13 >> 6;
          if (v15 == 3 || v15 == 2)
          {
            v16 = *(_QWORD *)(a1 + 8);
            if (v9 == *(_QWORD *)a1 && v10 == v16)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, *(_QWORD *)a1, v16, 0) & 1) != 0)
              break;
          }
          v8 += 72;
          if (!--v7)
            goto LABEL_21;
        }
        v17 = v14 & 0xFF00FFFF | (v13 << 16);
        sub_1004091F4(v9, v10, v11, v67, v64, v65, v66, v12, v17);
        swift_bridgeObjectRelease(v6);
        v59 = *(_QWORD *)(a1 + 24);
        v18 = v11;
        v19 = *(_BYTE *)(a1 + 32);
        KeyPath = swift_getKeyPath(&unk_100722EC8);
        v56 = swift_getKeyPath(&unk_100722EF0);
        v70 = v9;
        v71 = v10;
        v72 = v18;
        v73 = v67;
        v74 = v64;
        v75 = v65;
        v76 = v66;
        v77 = v12;
        v78 = v17;
        v79 = v59;
        v80 = v19;
        v58 = v12;
        v60 = v18;
        sub_1004091F4(v9, v10, v18, v67, v64, v65, v66, v12, v17);
        swift_retain(v61);
        static Published.subscript.setter(&v70, v61, KeyPath, v56);
        if (qword_1009CE4F0 != -1)
          swift_once(&qword_1009CE4F0, sub_100450628);
        v20 = type metadata accessor for Logger(0);
        sub_100048F64(v20, (uint64_t)qword_1009E40B0);
        v22 = *(_QWORD *)a1;
        v21 = *(_QWORD *)(a1 + 8);
        v23 = swift_bridgeObjectRetain_n(v21, 2);
        v24 = Logger.logObject.getter(v23);
        v28 = static os_log_type_t.debug.getter(v24, v25, v26, v27);
        if (os_log_type_enabled(v24, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc(12, -1);
          v62 = swift_slowAlloc(32, -1);
          v70 = v62;
          *(_DWORD *)v29 = 136315138;
          swift_bridgeObjectRetain(v21);
          v69 = sub_100040F58(v22, v21, &v70);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v29 + 4, v29 + 12);
          sub_100210D88(a1);
          sub_100210D88(a1);
          sub_100210D88(a1);
          _os_log_impl((void *)&_mh_execute_header, v24, v28, "Force selecting %s", v29, 0xCu);
          swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v62, -1, -1);
          swift_slowDealloc(v29, -1, -1);

          sub_10040927C(v9, v10, v60, v67, v64, v65, v66, v58, v17);
        }
        else
        {
          sub_10040927C(v9, v10, v60, v67, v64, v65, v66, v12, v17);
          sub_100210D88(a1);
          sub_100210D88(a1);

        }
      }
      else
      {
LABEL_21:
        swift_bridgeObjectRelease(v6);
      }
    }
  }
  else
  {
    v30 = swift_getKeyPath(&unk_100722F10);
    v31 = swift_getKeyPath(&unk_100722F38);
    static Published.subscript.getter(&v70, v4, v30, v31);
    swift_release(v30);
    swift_release(v31);
    v32 = v70;
    if (*(_QWORD *)(v70 + 16))
    {
      v63 = v4;
      v33 = *(_QWORD *)(v70 + 32);
      v34 = *(_QWORD *)(v70 + 40);
      v36 = *(_QWORD *)(v70 + 48);
      v35 = *(_QWORD *)(v70 + 56);
      v38 = *(_QWORD *)(v70 + 64);
      v37 = *(_QWORD *)(v70 + 72);
      v39 = *(_QWORD *)(v70 + 80);
      v40 = *(unsigned __int8 *)(v70 + 98);
      v41 = *(unsigned __int16 *)(v70 + 96);
      v42 = v41 | (v40 << 16);
      v68 = *(_QWORD *)(v70 + 88);
      sub_1004091F4(v33, v34, v36, v35, v38, v37, v39, v68, v41 | (v40 << 16));
      swift_bridgeObjectRelease(v32);
      if ((v42 & 0xC00000) == 0x400000)
      {
        v43 = *(_QWORD *)(a1 + 24);
        v44 = v42;
        v54 = swift_getKeyPath(&unk_100722EC8);
        v45 = swift_getKeyPath(&unk_100722EF0);
        v70 = v33;
        v71 = v34;
        v72 = v36;
        v73 = v35;
        v74 = v38;
        v75 = v37;
        v76 = v39;
        v77 = v68;
        v78 = v44;
        v79 = v43;
        v80 = 0;
        v55 = v44;
        sub_1004091F4(v33, v34, v36, v35, v38, v37, v39, v68, v44);
        swift_retain(v63);
        static Published.subscript.setter(&v70, v63, v54, v45);
        if (qword_1009CE4F0 != -1)
          swift_once(&qword_1009CE4F0, sub_100450628);
        v46 = type metadata accessor for Logger(0);
        v47 = sub_100048F64(v46, (uint64_t)qword_1009E40B0);
        v48 = Logger.logObject.getter(v47);
        v52 = static os_log_type_t.debug.getter(v48, v49, v50, v51);
        if (os_log_type_enabled(v48, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v53 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v52, "Force activating search bar", v53, 2u);
          swift_slowDealloc(v53, -1, -1);

          sub_10040927C(v33, v34, v36, v35, v38, v37, v39, v68, v55);
        }
        else
        {
          sub_10040927C(v33, v34, v36, v35, v38, v37, v39, v68, v55);

        }
      }
      else
      {
        sub_10040927C(v33, v34, v36, v35, v38, v37, v39, v68, v42);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v70);
    }
  }
}

void sub_100405EC4(uint64_t a1, unint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  _OWORD v25[5];
  char v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  if ((_BYTE)a3)
  {
    if (a3 == 1)
    {
      v7 = _s5Books20RootBarItemsProviderC19defaultCollectionID18fromItemIdentifierSo09BCDefaultgH0aSgSS_tFZ_0(a1, a2);
      if (v7)
      {
        v8 = v7;
        *(_QWORD *)&v25[0] = v7;
        *((_QWORD *)&v25[0] + 1) = 1;
        memset(&v25[1], 0, 24);
LABEL_16:
        BYTE8(v25[2]) = 0;
        PassthroughSubject.send(_:)(v25);

        return;
      }
    }
    else
    {
      v15 = _s5Books20RootBarItemsProviderC19defaultCollectionID18fromItemIdentifierSo09BCDefaultgH0aSgSS_tFZ_0(a1, a2);
      if (v15)
      {
        v8 = v15;
        *(_QWORD *)&v25[0] = v15;
        memset((char *)v25 + 8, 0, 32);
        goto LABEL_16;
      }
    }
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v16 = type metadata accessor for Logger(0);
    sub_100048F64(v16, (uint64_t)qword_1009E40B0);
    v17 = swift_bridgeObjectRetain_n(a2, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v25[0] = v21;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain(a2);
      v27 = sub_100040F58(a1, a2, (uint64_t *)v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Invalid item to show/hide: %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
  else
  {
    if (a1 == 0x656C6C6F4377656ELL && a2 == 0xED00006E6F697463
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x656C6C6F4377656ELL, 0xED00006E6F697463, 0) & 1) != 0)
    {
      if (*(_BYTE *)(v3 + 64) == 1)
      {
        if (qword_1009CE4F0 != -1)
          swift_once(&qword_1009CE4F0, sub_100450628);
        v10 = type metadata accessor for Logger(0);
        v11 = sub_100048F64(v10, (uint64_t)qword_1009E40B0);
        v12 = Logger.logObject.getter(v11);
        v13 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v14 = 0;
          swift_slowDealloc(v14, -1, -1);
        }

      }
      else
      {
        *(_BYTE *)(v3 + 64) = 1;
        memset(v25, 0, 40);
        BYTE8(v25[2]) = 6;
        PassthroughSubject.send(_:)(v25);
      }
    }
    else
    {
      *(_QWORD *)&v25[0] = a1;
      *((_QWORD *)&v25[0] + 1) = a2;
      LOWORD(v25[1]) = (a3 >> 8) & 1;
      swift_bridgeObjectRetain(a2);
      PassthroughSubject.send(_:)(v25);
      swift_bridgeObjectRelease(a2);
    }
    v22 = *(_QWORD *)(v4 + 16);
    KeyPath = swift_getKeyPath(&unk_100722EC8);
    v24 = swift_getKeyPath(&unk_100722EF0);
    memset(v25, 0, 64);
    v25[4] = xmmword_10070CCB0;
    v26 = 0;
    swift_retain(v22);
    static Published.subscript.setter(v25, v22, KeyPath, v24);
  }
}

void sub_1004062AC(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  id *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  os_log_type_t v95;
  uint64_t v96;
  uint8_t *v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  unsigned __int8 v104;
  unsigned __int8 v105;
  os_log_t oslog;
  NSObject *osloga;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  _OWORD v114[2];
  uint64_t v115;
  unint64_t v116;

  v2 = *((unsigned __int8 *)a1 + 40);
  if (v2 == 253)
    return;
  v3 = v1;
  if (v2 == 254)
  {
    v9 = a1[1];
    v10 = (_QWORD *)_s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(*a1, v9);
    if (v11)
    {
      v12 = v11;
      v13 = a1[2];
      v14 = a1[3];
      v108 = v10;
      v109 = v11;
      v110 = v13;
      v111 = v14;
      v112 = 0;
      v113 = 3;
      swift_bridgeObjectRetain(v14);
      PassthroughSubject.send(_:)(&v108);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v12);
      return;
    }
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v32 = type metadata accessor for Logger(0);
    sub_100048F64(v32, (uint64_t)qword_1009E40B0);
    v34 = a1[2];
    v33 = a1[3];
    swift_bridgeObjectRetain_n(v9, 2);
    v35 = swift_bridgeObjectRetain_n(v33, 2);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v36, v37))
    {

      swift_bridgeObjectRelease_n(v33, 2);
      swift_bridgeObjectRelease_n(v9, 2);
      return;
    }
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = (_QWORD *)swift_slowAlloc(32, -1);
    v108 = v39;
    *(_DWORD *)v38 = 136315138;
    swift_bridgeObjectRetain(v33);
    *(_QWORD *)&v114[0] = sub_100040F58(v34, v33, (uint64_t *)&v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, (char *)v114 + 8, v38 + 4, v38 + 12);
    swift_bridgeObjectRelease_n(v9, 2);
    swift_bridgeObjectRelease_n(v33, 3);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "No collectionID in %s", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    v40 = v38;
    goto LABEL_92;
  }
  if (v2 != 255)
  {
    v15 = a1[4];
    v16 = a1[1];
    v17 = _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(*a1, v16);
    if (!v18)
    {
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v41 = type metadata accessor for Logger(0);
      sub_100048F64(v41, (uint64_t)qword_1009E40B0);
      v43 = a1[2];
      v42 = a1[3];
      sub_100409938(v15, v2);
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v42);
      sub_100409938(v15, v2);
      swift_bridgeObjectRetain(v16);
      v44 = swift_bridgeObjectRetain(v42);
      osloga = Logger.logObject.getter(v44);
      v45 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(osloga, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc(12, -1);
        v47 = (_QWORD *)swift_slowAlloc(32, -1);
        v108 = v47;
        *(_DWORD *)v46 = 136315138;
        swift_bridgeObjectRetain(v42);
        *(_QWORD *)&v114[0] = sub_100040F58(v43, v42, (uint64_t *)&v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, (char *)v114 + 8, v46 + 4, v46 + 12);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease_n(v42, 2);
        sub_100409914(v15, v2);
        swift_bridgeObjectRelease(v42);
        swift_bridgeObjectRelease(v16);
        sub_100409914(v15, v2);
        _os_log_impl((void *)&_mh_execute_header, osloga, v45, "No collectionID in %s", v46, 0xCu);
        swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v46, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease(v42);
        swift_bridgeObjectRelease(v16);
        sub_100409914(v15, v2);
        swift_bridgeObjectRelease(v42);
        swift_bridgeObjectRelease(v16);
        sub_100409914(v15, v2);

      }
      return;
    }
    v19 = v18;
    v20 = (unint64_t)v15 >> 62;
    oslog = (os_log_t)v15;
    v100 = v16;
    v102 = v17;
    if ((v2 & 1) == 0)
    {
      if (v20)
      {
        if (v15 >= 0)
          v81 = v15 & 0xFFFFFFFFFFFFFF8;
        else
          v81 = v15;
        swift_bridgeObjectRetain(v15);
        v21 = _CocoaArrayWrapper.endIndex.getter(v81);
        sub_100409914(v15, v2);
      }
      else
      {
        v21 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v22 = _swiftEmptyArrayStorage;
      if (!v21)
      {
        v23 = _swiftEmptyArrayStorage;
        goto LABEL_85;
      }
      v108 = _swiftEmptyArrayStorage;
      sub_100045E44(0, v21 & ~(v21 >> 63), 0);
      if ((v21 & 0x8000000000000000) == 0)
      {
        v101 = v19;
        v103 = v2;
        v23 = v108;
        if ((v15 & 0xC000000000000001) != 0)
        {
          v24 = 0;
          do
          {
            v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v15);
            v26 = SwiftUIDragItem.assetID.getter();
            v28 = v27;
            swift_unknownObjectRelease(v25);
            v108 = v23;
            v30 = v23[2];
            v29 = v23[3];
            if (v30 >= v29 >> 1)
            {
              sub_100045E44(v29 > 1, v30 + 1, 1);
              v23 = v108;
            }
            ++v24;
            v23[2] = v30 + 1;
            v31 = &v23[2 * v30];
            v31[4] = v26;
            v31[5] = v28;
          }
          while (v21 != v24);
        }
        else
        {
          v73 = (id *)(v15 + 32);
          do
          {
            v74 = *v73;
            v75 = SwiftUIDragItem.assetID.getter();
            v77 = v76;

            v108 = v23;
            v79 = v23[2];
            v78 = v23[3];
            if (v79 >= v78 >> 1)
            {
              sub_100045E44(v78 > 1, v79 + 1, 1);
              v23 = v108;
            }
            v23[2] = v79 + 1;
            v80 = &v23[2 * v79];
            v80[4] = v75;
            v80[5] = v77;
            ++v73;
            --v21;
            v15 = (uint64_t)oslog;
          }
          while (v21);
        }
        v22 = _swiftEmptyArrayStorage;
        LOBYTE(v2) = v103;
        goto LABEL_84;
      }
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      swift_once(&qword_1009CE4F0, sub_100450628);
LABEL_90:
      v91 = type metadata accessor for Logger(0);
      sub_100048F64(v91, (uint64_t)qword_1009E40B0);
      v93 = a1[2];
      v92 = a1[3];
      sub_100409938(v15, v2);
      swift_bridgeObjectRetain(v100);
      swift_bridgeObjectRetain(v92);
      sub_100409938(v15, v2);
      swift_bridgeObjectRetain(v100);
      v94 = swift_bridgeObjectRetain(v92);
      v36 = Logger.logObject.getter(v94);
      v95 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v36, v95))
      {
        swift_bridgeObjectRelease(v92);
        swift_bridgeObjectRelease(v100);
        sub_100409914(v15, v2);
        swift_bridgeObjectRelease(v92);
        swift_bridgeObjectRelease(v100);
        sub_100409914(v15, v2);
        goto LABEL_94;
      }
      v105 = v2;
      v96 = v93;
      v97 = (uint8_t *)swift_slowAlloc(12, -1);
      v98 = (_QWORD *)swift_slowAlloc(32, -1);
      v108 = v98;
      *(_DWORD *)v97 = 136315138;
      swift_bridgeObjectRetain(v92);
      *(_QWORD *)&v114[0] = sub_100040F58(v96, v92, (uint64_t *)&v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, (char *)v114 + 8, v97 + 4, v97 + 12);
      swift_bridgeObjectRelease(v100);
      swift_bridgeObjectRelease_n(v92, 2);
      sub_100409914(v15, v105);
      swift_bridgeObjectRelease(v92);
      swift_bridgeObjectRelease(v100);
      sub_100409914(v15, v105);
      _os_log_impl((void *)&_mh_execute_header, v36, v95, "Drag items contain no library asset, skip adding to '%s'", v97, 0xCu);
      swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      v40 = v97;
LABEL_92:
      swift_slowDealloc(v40, -1, -1);
LABEL_94:

      return;
    }
    v101 = v18;
    if (v20)
    {
      if (v15 >= 0)
        v82 = v15 & 0xFFFFFFFFFFFFFF8;
      else
        v82 = v15;
      swift_bridgeObjectRetain(v15);
      v48 = _CocoaArrayWrapper.endIndex.getter(v82);
      if (v48)
        goto LABEL_35;
    }
    else
    {
      v48 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v15);
      if (v48)
      {
LABEL_35:
        v104 = v2;
        if (v48 < 1)
          goto LABEL_97;
        v99 = v3;
        v49 = 0;
        v50 = v15 & 0xC000000000000001;
        v23 = _swiftEmptyArrayStorage;
        do
        {
          if (v50)
            v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v15);
          else
            v52 = *(id *)(v15 + 8 * v49 + 32);
          v53 = v52;
          *(_QWORD *)&v114[0] = v52;
          sub_10040886C((id *)v114, (uint64_t *)&v108);

          v54 = v109;
          if (v109)
          {
            v55 = v108;
            if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
              v23 = sub_100043ED0(0, v23[2] + 1, 1, v23);
            v57 = v23[2];
            v56 = v23[3];
            if (v57 >= v56 >> 1)
              v23 = sub_100043ED0((_QWORD *)(v56 > 1), v57 + 1, 1, v23);
            v23[2] = v57 + 1;
            v51 = &v23[2 * v57];
            v51[4] = v55;
            v51[5] = v54;
            v15 = (uint64_t)oslog;
          }
          ++v49;
        }
        while (v48 != v49);
        sub_100409914(v15, v104);
        v116 = (unint64_t)_swiftEmptyArrayStorage;
        sub_100409938(v15, v104);
        v62 = 0;
        while (1)
        {
          if (v50)
            v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v15);
          else
            v64 = *(id *)(v15 + 8 * v62 + 32);
          v65 = v64;
          v66 = objc_msgSend(v64, "localObject", v99);
          if (v66)
          {
            v67 = v66;
            _bridgeAnyObjectToAny(_:)(v66);
            swift_unknownObjectRelease(v67);
          }
          else
          {
            memset(v114, 0, sizeof(v114));
          }
          sub_10004C7B4((uint64_t)v114, (uint64_t)&v108);
          if (v111)
          {
            v68 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
            if ((swift_dynamicCast(&v115, &v108, (char *)&type metadata for Any + 8, v68, 6) & 1) != 0)
              goto LABEL_63;
          }
          else
          {
            sub_100010960((uint64_t)&v108, (uint64_t *)&unk_1009D04E0);
          }
          v115 = 0;
LABEL_63:

          v70 = v115;
          if (v115)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
            v72 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v71 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v72 >= v71 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
            v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
            specialized Array._endMutation()(v63);
          }
          if (v48 == ++v62)
          {
            LOBYTE(v2) = v104;
            sub_100409914(v15, v104);
            v22 = (_QWORD *)v116;
            goto LABEL_84;
          }
        }
      }
    }
    sub_100409914(v15, v2);
    v22 = _swiftEmptyArrayStorage;
    v23 = _swiftEmptyArrayStorage;
LABEL_84:
    v19 = v101;
LABEL_85:
    v108 = v23;
    v83 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    v84 = sub_100030B34((unint64_t *)&qword_1009D2B40, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v83, v84) & 1) != 0)
    {
      swift_bridgeObjectRelease(v22);
      v85 = a1[2];
      v86 = a1[3];
      v108 = v23;
      v109 = v102;
      v110 = v19;
      v111 = v85;
      v112 = v86;
      v113 = 7;
      swift_bridgeObjectRetain(v86);
      PassthroughSubject.send(_:)(&v108);
      swift_bridgeObjectRelease(v86);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v23);
      return;
    }
    swift_bridgeObjectRelease(v23);
    v108 = v22;
    v87 = sub_10004CFD4((uint64_t *)&unk_1009F26D0);
    v88 = sub_100030B34((unint64_t *)&qword_1009E2320, (uint64_t *)&unk_1009F26D0, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v87, v88) & 1) != 0)
    {
      v89 = a1[2];
      v90 = a1[3];
      v108 = v22;
      v109 = v102;
      v110 = v19;
      v111 = v89;
      v112 = v90;
      v113 = 5;
      swift_bridgeObjectRetain(v90);
      PassthroughSubject.send(_:)(&v108);
      swift_bridgeObjectRelease(v90);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v22);
      return;
    }
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v22);
    if (qword_1009CE4F0 == -1)
      goto LABEL_90;
    goto LABEL_98;
  }
  v5 = *a1;
  v6 = a1[1];
  v7 = *a1 == 0x656C6C6F4377656ELL && v6 == 0xED00006E6F697463;
  if (v7
    || (_stringCompareWithSmolCheck(_:_:expecting:)(*a1, a1[1], 0x656C6C6F4377656ELL, 0xED00006E6F697463, 0) & 1) != 0)
  {
    v8 = a1[3];
    v108 = (_QWORD *)a1[2];
    v109 = v8;
    v111 = 0;
    v112 = 0;
    v110 = 0;
    v113 = 1;
    swift_bridgeObjectRetain(v8);
    PassthroughSubject.send(_:)(&v108);
LABEL_10:
    swift_bridgeObjectRelease(v8);
    return;
  }
  v58 = (_QWORD *)_s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v5, v6);
  if (v59)
  {
    v8 = v59;
    v60 = a1[2];
    v61 = a1[3];
    v108 = v58;
    v109 = v59;
    v110 = v60;
    v111 = v61;
    v112 = 0;
    v113 = 2;
    swift_bridgeObjectRetain(v61);
    PassthroughSubject.send(_:)(&v108);
    swift_bridgeObjectRelease(v61);
    goto LABEL_10;
  }
}

uint64_t sub_100406F64(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int8 v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  char v41;
  _QWORD v42[3];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v36 = _swiftEmptyArrayStorage;
LABEL_31:
    v38 = v36;
    v39 = 0u;
    v40 = 0u;
    v41 = 4;
    PassthroughSubject.send(_:)(&v38);
    return swift_bridgeObjectRelease(v36);
  }
  v3 = sub_100048F7C();
  v34 = sub_100048FC0();
  swift_bridgeObjectRetain(a1);
  v31 = a1;
  v4 = (unsigned __int8 *)(a1 + 72);
  v36 = _swiftEmptyArrayStorage;
  v33 = v3;
  while (1)
  {
    v5 = *((_QWORD *)v4 - 5);
    v6 = *((_QWORD *)v4 - 4);
    v7 = *((_QWORD *)v4 - 2);
    v37 = *((_QWORD *)v4 - 3);
    v38 = (_QWORD *)v5;
    v8 = *((_QWORD *)v4 - 1);
    v35 = *v4;
    *(_QWORD *)&v39 = v6;
    v42[0] = 0x3A6D6F74737563;
    v42[1] = 0xE700000000000000;
    if ((BidirectionalCollection<>.starts<A>(with:)(v42, &type metadata for String, &type metadata for String, v3, v34) & 1) == 0)
    {
      if (qword_1009CE408 != -1)
        swift_once(&qword_1009CE408, sub_10006B6D0);
      v16 = type metadata accessor for Logger(0);
      sub_100048F64(v16, (uint64_t)qword_1009E1C98);
      v17 = swift_bridgeObjectRetain_n(v6, 2);
      v18 = Logger.logObject.getter(v17);
      v22 = static os_log_type_t.debug.getter(v18, v19, v20, v21);
      if (os_log_type_enabled(v18, v22))
      {
        v23 = swift_slowAlloc(12, -1);
        v32 = v1;
        v24 = swift_slowAlloc(32, -1);
        v38 = (_QWORD *)v24;
        *(_DWORD *)v23 = 136315138;
        swift_bridgeObjectRetain(v6);
        *(_QWORD *)(v23 + 4) = sub_100040F58(v5, v6, (uint64_t *)&v38);
        swift_bridgeObjectRelease_n(v6, 3);
        _os_log_impl((void *)&_mh_execute_header, v18, v22, "Can't extract collectionID from identifier: %s", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        v25 = v24;
        v1 = v32;
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v23, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v6, 2);
      }
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      sub_100048F64(v16, (uint64_t)qword_1009E40B0);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      sub_100409938(v8, v35);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      v26 = sub_100409938(v8, v35);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.error.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc(12, -1);
        v30 = swift_slowAlloc(32, -1);
        v38 = (_QWORD *)v30;
        *(_DWORD *)v29 = 136315138;
        swift_bridgeObjectRetain(v7);
        *(_QWORD *)(v29 + 4) = sub_100040F58(v37, v7, (uint64_t *)&v38);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease_n(v7, 2);
        sub_100409914(v8, v35);
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v6);
        sub_100409914(v8, v35);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Can't get collectionID, reordered items will not contain '%s'", (uint8_t *)v29, 0xCu);
        swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v29, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v6);
        sub_100409914(v8, v35);
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v6);
        sub_100409914(v8, v35);
      }

      v3 = v33;
      goto LABEL_5;
    }
    v38 = (_QWORD *)v5;
    *(_QWORD *)&v39 = v6;
    swift_bridgeObjectRetain(v6);
    result = String.count.getter(0x3A6D6F74737563, 0xE700000000000000);
    if (result)
      break;
LABEL_15:
    swift_bridgeObjectRetain(v7);
    if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      v36 = sub_1005B189C(0, v36[2] + 1, 1, v36);
    v14 = v36[2];
    v13 = v36[3];
    if (v14 >= v13 >> 1)
      v36 = sub_1005B189C((_QWORD *)(v13 > 1), v14 + 1, 1, v36);
    v36[2] = v14 + 1;
    v15 = &v36[4 * v14];
    v15[4] = v5;
    v15[5] = v6;
    v15[6] = v37;
    v15[7] = v7;
LABEL_5:
    v4 += 48;
    if (!--v1)
    {
      swift_bridgeObjectRelease(v31);
      goto LABEL_31;
    }
  }
  if ((result & 0x8000000000000000) == 0)
  {
    v10 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v10 = v5;
    v11 = 7;
    if (((v6 >> 60) & ((v5 & 0x800000000000000) == 0)) != 0)
      v11 = 11;
    result = String.index(_:offsetBy:limitedBy:)(15, result, v11 | (v10 << 16));
    if ((v12 & 1) != 0)
      goto LABEL_33;
    String.removeSubrange(_:)(15, result);
    v5 = (uint64_t)v38;
    v6 = v39;
    goto LABEL_15;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1004074C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];
  _QWORD v63[2];
  char v64;
  uint64_t v65;
  char v66;
  _OWORD v67[3];
  uint64_t v68;

  v2 = *a1;
  v3 = a1[1];
  v57 = a1[2];
  v4 = a1[5];
  v53 = a1[3];
  v54 = a1[4];
  v5 = a1[6];
  v52 = (void *)a1[7];
  v55 = *((unsigned __int8 *)a1 + 64);
  v7 = a1[9];
  v6 = a1[10];
  v8 = a1[11];
  v9 = a1[12];
  v10 = a2 + 16;
  v11 = *((_BYTE *)a1 + 104);
  swift_beginAccess(a2 + 16, v62, 0, 0);
  result = swift_weakLoadStrong(v10);
  if (result)
  {
    v13 = result;
    v48 = v5;
    v49 = v4;
    v50 = v11;
    v51 = v6;
    if (v3 != 1)
    {
      v14 = sub_10059ECEC();
      if (v14)
      {
        v15 = v14;
        KeyPath = swift_getKeyPath(&unk_100722E38);
        v17 = swift_getKeyPath(&unk_100722E60);
        *(_QWORD *)&v67[0] = v2;
        *((_QWORD *)&v67[0] + 1) = v3;
        swift_bridgeObjectRetain(v3);
        static Published.subscript.setter(v67, v15, KeyPath, v17);
      }
    }
    v56 = v13;
    if (v57)
    {
      if (*(_QWORD *)(v57 + 16))
      {
        v45 = v7;
        v46 = v9;
        v47 = v8;
        v18 = (__int128 *)(v57 + 32);
        v19 = *(_QWORD *)(v57 + 16);
        swift_bridgeObjectRetain(v57);
        v21 = (_QWORD *)(v20 + 80);
        v22 = _swiftEmptyArrayStorage;
        v58 = v19;
        do
        {
          if (*((_BYTE *)v21 - 32) == 1)
          {
            v26 = *(v21 - 5);
            v27 = *(v21 - 2);
            v61 = *(v21 - 3);
            v28 = *v21;
            v59 = *(v21 - 6);
            v60 = *(v21 - 1);
            swift_bridgeObjectRetain(v26);
            swift_bridgeObjectRetain(v27);
            swift_bridgeObjectRetain(v28);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
            *(_QWORD *)&v67[0] = v22;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_100366D58(0, v22[2] + 1, 1);
              v22 = *(_QWORD **)&v67[0];
            }
            v24 = v22[2];
            v23 = v22[3];
            if (v24 >= v23 >> 1)
            {
              sub_100366D58(v23 > 1, v24 + 1, 1);
              v22 = *(_QWORD **)&v67[0];
            }
            v22[2] = v24 + 1;
            v25 = &v22[7 * v24];
            v25[4] = v59;
            v25[5] = v26;
            *((_BYTE *)v25 + 48) = 1;
            v25[7] = v61;
            v25[8] = v27;
            v25[9] = v60;
            v25[10] = v28;
          }
          v21 += 7;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease(v57);
        sub_100407968((uint64_t)v22);
        swift_release(v22);
        v9 = v46;
        LOBYTE(v8) = v47;
        v7 = v45;
        while (1)
        {
          v31 = v18[1];
          v30 = v18[2];
          v32 = *v18;
          v68 = *((_QWORD *)v18 + 6);
          v67[1] = v31;
          v67[2] = v30;
          v67[0] = v32;
          v33 = (_QWORD)v32 == 0x7972617262696CLL && *((_QWORD *)&v32 + 1) == 0xE700000000000000;
          if (v33
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v32, *((_QWORD *)&v32 + 1), 0x7972617262696CLL, 0xE700000000000000, 0) & 1) != 0)
          {
            break;
          }
          v18 = (__int128 *)((char *)v18 + 56);
          if (!--v58)
            goto LABEL_33;
        }
        sub_100408DF8(v67);
        LOBYTE(v63[0]) = 0;
        sub_10059EEAC(2u);
        if (v34)
        {
          v35 = v34;
          sub_100408DF8(v67);
          v36 = sub_100408E88(v35, (uint64_t *)v67, v63);
          sub_100408E40(v67);
          swift_bridgeObjectRelease(v35);
          if (LOBYTE(v63[0]) == 1)
          {
            sub_10059F064(2u, v36, 2);
            swift_bridgeObjectRelease(v36);
          }
          else
          {
            swift_bridgeObjectRelease(v36);
            if (qword_1009CE4F0 != -1)
              swift_once(&qword_1009CE4F0, sub_100450628);
            v37 = type metadata accessor for Logger(0);
            v38 = sub_100048F64(v37, (uint64_t)qword_1009E40B0);
            v39 = Logger.logObject.getter(v38);
            v43 = static os_log_type_t.debug.getter(v39, v40, v41, v42);
            if (os_log_type_enabled(v39, v43))
            {
              v44 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v44 = 0;
              _os_log_impl((void *)&_mh_execute_header, v39, v43, "👍 No change in LibraryAll ItemModel, no need to refresh for update(libraryAllItemModel:)", v44, 2u);
              swift_slowDealloc(v44, -1, -1);
            }

          }
        }
        sub_100408E40(v67);
      }
      else
      {
        sub_100407968((uint64_t)_swiftEmptyArrayStorage);
        swift_release(_swiftEmptyArrayStorage);
      }
    }
LABEL_33:
    if (v53)
      sub_100407BE0(v53);
    if (v54)
      sub_100408158(v54);
    if (v55 != 255)
    {
      sub_100408D78(v49, v48, v52, v55);
      sub_100408454(v49, v48, v52, v55);
      sub_100408DB0(v49, v48, v52, v55);
    }
    if (v51)
    {
      v63[0] = v7;
      v63[1] = v51;
      v64 = v8;
      v65 = v9;
      v66 = v50 & 1;
      sub_1004058DC((uint64_t)v63);
    }
    return swift_release(v56);
  }
  return result;
}

void sub_100407968(uint64_t a1)
{
  int64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  os_log_t oslog;
  NSObject *osloga;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100366D2C(0, v1, 0);
    v21 = (id)objc_opt_self(UIColor);
    v3 = (uint64_t *)(a1 + 80);
    do
    {
      v4 = *(v3 - 5);
      v5 = *(v3 - 2);
      v23 = *(v3 - 3);
      oslog = (os_log_t)*(v3 - 6);
      v6 = *v3;
      v22 = *(v3 - 1);
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v5);
      v7 = objc_msgSend(v21, "bc_booksKeyColor", swift_bridgeObjectRetain(v6).n128_f64[0]);
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_100366D2C(v8 > 1, v9 + 1, 1);
      v3 += 7;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      v10 = &_swiftEmptyArrayStorage[9 * v9];
      v10[4] = oslog;
      v10[5] = v4;
      v10[6] = v23;
      v10[7] = v5;
      v10[8] = v22;
      v10[9] = v6;
      v10[10] = v7;
      v10[11] = _swiftEmptyArrayStorage;
      *((_BYTE *)v10 + 98) = 0x80;
      *((_WORD *)v10 + 48) = 0;
      --v1;
    }
    while (v1);
  }
  sub_10059EEAC(1u);
  if (!v11)
    goto LABEL_14;
  v12 = v11;
  v13 = sub_100430F84(v11, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) == 0)
  {
    sub_10059F064(1u, _swiftEmptyArrayStorage, 2);
LABEL_14:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (qword_1009CE4F0 != -1)
    swift_once(&qword_1009CE4F0, sub_100450628);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100048F64(v14, (uint64_t)qword_1009E40B0);
  osloga = Logger.logObject.getter(v15);
  v19 = static os_log_type_t.debug.getter(osloga, v16, v17, v18);
  if (os_log_type_enabled(osloga, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, osloga, v19, "👍 No change in AppleBooks section ItemModels, no need to refresh for update(storeItemsModel:).", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

}

void sub_100407BE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  id *v25;
  _QWORD *v26;
  int v27;
  id v28;
  Swift::String v29;
  unsigned int v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  __int16 v43;
  int v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  int v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  id v69;
  int v70;
  __int16 v71;
  uint64_t v72;
  __int128 v73;
  _QWORD *v74;
  _QWORD v75[5];
  __int128 v76;
  uint64_t v77;
  unsigned __int8 v78;
  unsigned __int8 v79;
  unsigned __int8 v80;

  sub_10059EEAC(2u);
  if (!v2)
    return;
  v63 = a1;
  v64 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
LABEL_12:
    v14 = 0;
    v12 = 0;
    v61 = 0;
    v62 = 0;
    v10 = 0;
    v7 = 0;
    v8 = 0;
    v15 = 0;
    v16 = 16711422;
    v17 = _swiftEmptyArrayStorage;
    v18 = v63;
    goto LABEL_17;
  }
  v4 = v2 + 48;
  while (1)
  {
    v67 = *(unsigned __int16 *)(v4 + 48) | (*(unsigned __int8 *)(v4 + 50) << 16);
    if ((v67 & 0xC00000) != 0x800000)
      goto LABEL_4;
    v6 = *(_QWORD *)(v4 - 16);
    v5 = *(_QWORD *)(v4 - 8);
    v8 = *(_QWORD *)v4;
    v7 = *(_QWORD *)(v4 + 8);
    v10 = *(_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)(v4 + 24);
    v12 = *(_QWORD *)(v4 + 32);
    v11 = *(_QWORD *)(v4 + 40);
    if (v6 == 0x7972617262696CLL && v5 == 0xE700000000000000)
      break;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v4 - 16), *(_QWORD *)(v4 - 8), 0x7972617262696CLL, 0xE700000000000000, 0) & 1) != 0)goto LABEL_14;
LABEL_4:
    v4 += 72;
    if (!--v3)
      goto LABEL_12;
  }
  v5 = 0xE700000000000000;
  v6 = 0x7972617262696CLL;
LABEL_14:
  v16 = v67;
  sub_1004091F4(v6, v5, v8, v7, v10, v9, v12, v11, v67);
  v65 = v6;
  v19 = v6;
  v14 = v11;
  v62 = v5;
  sub_1004091F4(v19, v5, v8, v7, v10, v9, v12, v11, v67);
  v17 = sub_1005B058C(0, 1, 1, _swiftEmptyArrayStorage);
  v21 = v17[2];
  v20 = v17[3];
  if (v21 >= v20 >> 1)
    v17 = sub_1005B058C((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
  v18 = v63;
  v17[2] = v21 + 1;
  v22 = &v17[9 * v21];
  v15 = v65;
  v22[4] = v65;
  v22[5] = v62;
  v22[6] = v8;
  v22[7] = v7;
  v22[8] = v10;
  v22[9] = v9;
  v61 = v9;
  v22[10] = v12;
  v22[11] = v14;
  *((_BYTE *)v22 + 98) = BYTE2(v67);
  *((_WORD *)v22 + 48) = v67;
LABEL_17:
  v66 = v15;
  v58 = v8;
  v59 = v7;
  v60 = v10;
  v74 = v17;
  v23 = *(_QWORD *)(v18 + 16);
  if (v23)
  {
    v68 = v16;
    v56 = v12;
    v57 = v14;
    v69 = (id)objc_opt_self(UIColor);
    swift_bridgeObjectRetain(v18);
    v24 = _swiftEmptyArrayStorage;
    v25 = (id *)(v18 + 40);
    while (1)
    {
      v26 = v24;
      v27 = *(unsigned __int8 *)v25;
      v28 = *(v25 - 1);
      v29._countAndFlagsBits = _s5Books20RootBarItemsProviderC14itemIdentifier22forDefaultCollectionIDSSSgSo09BCDefaultjK0a_tFZ_0((uint64_t)v28);
      if (v29._object)
      {
        v30 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v29);
        v31 = v30 == 16 ? 15 : v30;
      }
      else
      {
        v31 = 15;
      }
      v32 = objc_msgSend(v69, "_monochromeCellImageTintColor");
      if (!v32)
        break;
      sub_1005A1FA0(v31, (uint64_t)v32, v27, (uint64_t)v75);
      v33 = v75[0];
      v34 = v75[1];
      v35 = v75[2];
      v36 = v75[3];
      v37 = v75[4];
      v73 = v76;
      v72 = v77;
      v38 = v79;
      v70 = v80;
      v71 = v78;

      v39 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
        v39 = sub_1005B058C(0, v26[2] + 1, 1, v26);
      v41 = v39[2];
      v40 = v39[3];
      v42 = v39;
      if (v41 >= v40 >> 1)
        v42 = sub_1005B058C((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
      if (v38)
        v43 = 256;
      else
        v43 = 0;
      if (v70)
        v44 = 0x10000;
      else
        v44 = 0;
      v42[2] = v41 + 1;
      v24 = v42;
      v45 = &v42[9 * v41];
      v45[4] = v33;
      v45[5] = v34;
      v45[6] = v35;
      v45[7] = v36;
      v45[8] = v37;
      *(_OWORD *)(v45 + 9) = v73;
      v45[11] = v72;
      *((_WORD *)v45 + 48) = v43 | v71;
      *((_BYTE *)v45 + 98) = (v44 | 0x800000u) >> 16;
      v25 += 2;
      if (!--v23)
      {
        swift_bridgeObjectRelease(v63);
        v12 = v56;
        v14 = v57;
        v16 = v68;
        goto LABEL_38;
      }
    }
    __break(1u);
  }
  else
  {
    v24 = _swiftEmptyArrayStorage;
LABEL_38:
    sub_100374640((uint64_t)v24);
    v46 = sub_100430F84((uint64_t)v74, v64);
    swift_bridgeObjectRelease(v64);
    if ((v46 & 1) != 0)
    {
      swift_bridgeObjectRelease(v74);
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v47 = type metadata accessor for Logger(0);
      v48 = sub_100048F64(v47, (uint64_t)qword_1009E40B0);
      v49 = Logger.logObject.getter(v48);
      v53 = static os_log_type_t.debug.getter(v49, v50, v51, v52);
      if (os_log_type_enabled(v49, v53))
      {
        v54 = v16;
        v55 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v53, "👍 No change in default collection ItemModels, no need to refresh for update(defaultCollectionsModel:)", v55, 2u);
        swift_slowDealloc(v55, -1, -1);

        sub_1004097A0(v66, v62, v58, v59, v60, v61, v12, v14, v54);
      }
      else
      {
        sub_1004097A0(v66, v62, v58, v59, v60, v61, v12, v14, v16);

      }
    }
    else
    {
      sub_10059F064(2u, v74, 1);
      sub_1004097A0(v66, v62, v58, v59, v60, v61, v12, v14, v16);
      swift_bridgeObjectRelease(v74);
    }
  }
}

id sub_100408158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id result;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  int v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  __int16 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _QWORD v32[2];
  __int16 v33;
  _QWORD *v34;
  _QWORD v35[5];
  __int128 v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;

  v2 = v1;
  v34 = _swiftEmptyArrayStorage;
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "userInterfaceLayoutDirection");

  if (v5 == (id)1)
    v6 = 0xD000000000000011;
  else
    v6 = 0xD000000000000010;
  if (v5 == (id)1)
    v7 = 0x80000001007C7AD0;
  else
    v7 = 0x80000001007C7AB0;
  swift_bridgeObjectRetain(v7);
  v8 = sub_100409304(a1, v6, v7);
  swift_bridgeObjectRelease_n(v7, 2);
  sub_100374640((uint64_t)v8);
  result = objc_msgSend((id)objc_opt_self(UIColor), "_monochromeCellImageTintColor");
  if (!result)
  {
    __break(1u);
    return result;
  }
  sub_1005A1FA0(13, (uint64_t)result, 0, (uint64_t)v35);
  v10 = v34;
  v29 = v35[1];
  v30 = v35[0];
  v11 = v35[3];
  v28 = v35[2];
  v12 = v35[4];
  v31 = v36;
  v13 = v37;
  v14 = v38;
  v15 = v39;
  v16 = v40;
  sub_1004097C0(v35);
  if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
    v10 = sub_1005B058C(0, v34[2] + 1, 1, v34);
  v18 = v10[2];
  v17 = v10[3];
  if (v18 >= v17 >> 1)
    v10 = sub_1005B058C((_QWORD *)(v17 > 1), v18 + 1, 1, v10);
  if (v15)
    v19 = 256;
  else
    v19 = 0;
  v10[2] = v18 + 1;
  v20 = &v10[9 * v18];
  v20[4] = v30;
  v20[5] = v29;
  v20[6] = v28;
  v20[7] = v11;
  v20[8] = v12;
  *(_OWORD *)(v20 + 9) = v31;
  v20[11] = v13;
  *((_WORD *)v20 + 48) = v19 | v14;
  *((_BYTE *)v20 + 98) = (v16 != 0) | 0xC0;
  sub_100409820(v35);
  v21 = sub_100408A60();
  sub_10059F064(3u, v10, 1);
  swift_bridgeObjectRelease(v10);
  if (*(_BYTE *)(v2 + 64) != 1)
  {
    v24 = v21;
    return (id)swift_bridgeObjectRelease(v24);
  }
  *(_BYTE *)(v2 + 64) = 0;
  v22 = sub_100408A60();
  if (*(_QWORD *)(v21 + 16) <= *(_QWORD *)(v22 + 16) >> 3)
  {
    v32[0] = v22;
    sub_1000299B4(v21);
    swift_bridgeObjectRelease(v21);
    v23 = (unint64_t *)v32[0];
  }
  else
  {
    v23 = sub_10057B9F4(v21, v22);
    swift_bridgeObjectRelease(v21);
  }
  v25 = sub_1003A34AC((uint64_t)v23);
  v27 = v26;
  result = (id)swift_bridgeObjectRelease(v23);
  if (v27)
  {
    v32[0] = v25;
    v32[1] = v27;
    v33 = 256;
    PassthroughSubject.send(_:)(v32);
    v24 = v27;
    return (id)swift_bridgeObjectRelease(v24);
  }
  return result;
}

uint64_t sub_100408454(uint64_t a1, unint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjCClassFromMetadata;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  char v51;
  id v52;
  char v53;

  v47 = a3;
  v8 = type metadata accessor for Locale(0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v46 - v19;
  if (a4)
  {
    if (a4 == 1)
    {
      v21 = 1;
      *(_BYTE *)(v4 + 65) = 1;
      if (a2)
        v22 = a1;
      else
        v22 = 0;
      if (a2)
        v23 = a2;
      else
        v23 = 0xE000000000000000;
      v24 = v47;
      v25 = v4;
      swift_bridgeObjectRetain(a2);
      v26 = 0;
    }
    else
    {
      v25 = v4;
      *(_BYTE *)(v4 + 65) = 0;
      v35 = String.LocalizationValue.init(stringLiteral:)(0x20676E696E676953, 0xAE00A680E274754FLL);
      static Locale.current.getter(v35);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      v36 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v36);
      v38 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v39 = v48;
      v40 = v49;
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v11, v13, v49);
      v22 = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, v38, v11, "Signing out…", 14, 0);
      v23 = v41;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      v24 = objc_msgSend(objc_allocWithZone((Class)CNContact), "init");
      v26 = 1;
      v21 = 1;
    }
  }
  else
  {
    v21 = a1 & 1;
    v46 = v4;
    *(_BYTE *)(v4 + 65) = 0;
    v27 = String.LocalizationValue.init(stringLiteral:)(0x6E69206E676953, 0xE700000000000000);
    static Locale.current.getter(v27);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    v28 = type metadata accessor for BundleFinder();
    v29 = swift_getObjCClassFromMetadata(v28);
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v29);
    v31 = v48;
    v32 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v11, v13, v49);
    v22 = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, v30, v11, "text to show next to the profile avatar when user is not signed in", 66, 2);
    v23 = v33;
    v34 = v32;
    v25 = v46;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v34);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    v24 = objc_msgSend(objc_allocWithZone((Class)CNContact), "init");
    v26 = 0;
  }
  v42 = *(_QWORD *)(v25 + 16);
  KeyPath = swift_getKeyPath(&unk_100722E80);
  v44 = swift_getKeyPath(&unk_100722EA8);
  v50[0] = v22;
  v50[1] = v23;
  v51 = v26;
  v52 = v24;
  v53 = v21;
  swift_retain(v42);
  return static Published.subscript.setter(v50, v42, KeyPath, v44);
}

uint64_t sub_100408800()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 66, 7);
}

uint64_t type metadata accessor for SidebarPresenter()
{
  return objc_opt_self(_TtC5Books16SidebarPresenter);
}

void sub_10040886C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[24];
  uint64_t v19;
  id v20;

  v3 = *a1;
  v4 = objc_msgSend(*a1, "localObject");
  if (v4)
  {
    v5 = v4;
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_10004C7B4((uint64_t)&v16, (uint64_t)v18);
  if (v19)
  {
    v6 = sub_100009E04(0, (unint64_t *)&unk_1009E2330, BSUIItemDescription_ptr);
    if ((swift_dynamicCast(&v20, v18, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    {
      v7 = v20;
      v8 = objc_msgSend(v20, "storeID");

      if (v8)
        goto LABEL_15;
    }
  }
  else
  {
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D04E0);
  }
  v9 = objc_msgSend(v3, "localObject", v16, v17);
  if (v9)
  {
    v10 = v9;
    _bridgeAnyObjectToAny(_:)(v9);
    swift_unknownObjectRelease(v10);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_10004C7B4((uint64_t)&v16, (uint64_t)v18);
  if (!v19)
  {
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D04E0);
    goto LABEL_17;
  }
  v11 = sub_100009E04(0, &qword_1009E2328, BCAssetDragInfo_ptr);
  if ((swift_dynamicCast(&v20, v18, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
  {
LABEL_17:
    *a2 = 0;
    a2[1] = 0;
    return;
  }
  v12 = v20;
  v8 = objc_msgSend(v20, "assetID");

  if (!v8)
  {
    v13 = 0;
    v15 = 0;
    goto LABEL_19;
  }
LABEL_15:
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v15 = v14;

LABEL_19:
  *a2 = v13;
  a2[1] = v15;
}

uint64_t sub_100408A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_10059EEAC(3u);
  if (v0)
  {
    v1 = v0;
    v2 = *(_QWORD *)(v0 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain(v0);
      v3 = v1 + 48;
      v4 = _swiftEmptyArrayStorage;
      do
      {
        v6 = *(unsigned __int16 *)(v3 + 48);
        if ((v6 | (*(char *)(v3 + 50) << 16)) < 0)
        {
          v8 = *(void **)(v3 + 32);
          v7 = *(_QWORD *)(v3 + 40);
          v9 = *(_QWORD *)(v3 + 24);
          v10 = *(_QWORD *)(v3 + 8);
          v12 = *(_QWORD *)(v3 - 16);
          v11 = *(_QWORD *)(v3 - 8);
          sub_1004091F4(v12, v11, *(_QWORD *)v3, v10, *(_QWORD *)(v3 + 16), v9, (uint64_t)v8, v7, v6 | (*(char *)(v3 + 50) << 16));
          swift_bridgeObjectRelease(v7);

          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v10);
          if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
            v4 = sub_100043ED0(0, v4[2] + 1, 1, v4);
          v14 = v4[2];
          v13 = v4[3];
          if (v14 >= v13 >> 1)
            v4 = sub_100043ED0((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
          v4[2] = v14 + 1;
          v5 = &v4[2 * v14];
          v5[4] = v12;
          v5[5] = v11;
        }
        v3 += 72;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease(v1);
    }
    else
    {
      v4 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v15 = sub_10003455C((uint64_t)v4);
  swift_bridgeObjectRelease(v4);
  return v15;
}

uint64_t sub_100408BE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  _QWORD v11[2];
  char v12;
  uint64_t v13;
  char v14;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100722E80);
  v5 = swift_getKeyPath(&unk_100722EA8);
  static Published.subscript.getter(v11, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v11[1];
  v8 = v12;
  v9 = v13;
  v10 = v14;
  *(_QWORD *)a2 = v11[0];
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v10;
  return result;
}

uint64_t sub_100408C74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  id v10;
  _QWORD v12[2];
  char v13;
  void *v14;
  char v15;

  v3 = *a1;
  v2 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = (void *)a1[3];
  v6 = *((_BYTE *)a1 + 32);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_100722E80);
  v9 = swift_getKeyPath(&unk_100722EA8);
  v12[0] = v3;
  v12[1] = v2;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  swift_bridgeObjectRetain(v2);
  v10 = v5;
  swift_retain(v7);
  return static Published.subscript.setter(v12, v7, KeyPath, v9);
}

uint64_t sub_100408D18()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100408D3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100408D68(uint64_t a1)
{
  uint64_t v1;

  return sub_1004053E4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100408D70(uint64_t *a1)
{
  uint64_t v1;

  return sub_1004074C4(a1, v1);
}

id sub_100408D78(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id result;

  if (a4 == 1)
  {
    swift_bridgeObjectRetain(a2);
    return a3;
  }
  return result;
}

uint64_t sub_100408DB0(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4 != -1)
    return sub_100408DC4(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_100408DC4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
  {

    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

_QWORD *sub_100408DF8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[4];
  v3 = a1[6];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *sub_100408E40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[4];
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

_QWORD *sub_100408E88(uint64_t a1, uint64_t *a2, _BYTE *a3)
{
  int64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *result;
  id v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (!v3)
    return v4;
  sub_100366D2C(0, v3, 0);
  v6 = a1 + 48;
  v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    v8 = *(_QWORD *)(v6 - 16);
    v7 = *(_QWORD *)(v6 - 8);
    v9 = *(_QWORD *)v6;
    v10 = *(_QWORD *)(v6 + 8);
    v11 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    v13 = *(unsigned __int16 *)(v6 + 48) | (*(unsigned __int8 *)(v6 + 50) << 16);
    v43 = v7;
    v38 = *(_QWORD *)v6;
    v39 = v8;
    v41 = *(_QWORD **)(v6 + 40);
    v42 = *(void **)(v6 + 32);
    v40 = v11;
    if ((v13 & 0xC00000) == 0x800000)
      break;
    v20 = *(_QWORD *)(v6 + 8);
    v16 = *(_QWORD *)(v6 + 24);
    sub_1004091F4(*(_QWORD *)(v6 - 16), v7, v9, v10, v11, v12, *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v13);
LABEL_17:
    v25 = v4[2];
    v24 = v4[3];
    if (v25 >= v24 >> 1)
      sub_100366D2C(v24 > 1, v25 + 1, 1);
    v6 += 72;
    v4[2] = v25 + 1;
    v26 = &v4[9 * v25];
    v26[4] = v39;
    v26[5] = v43;
    v26[6] = v38;
    v26[7] = v20;
    v26[8] = v40;
    v26[9] = v16;
    v26[10] = v42;
    v26[11] = v41;
    *((_BYTE *)v26 + 98) = BYTE2(v13);
    *((_WORD *)v26 + 48) = v13;
    if (!--v3)
      return v4;
  }
  v36 = v4;
  v15 = *a2;
  v14 = a2[1];
  if (v8 != *a2 || v7 != v14)
  {
    v16 = *(_QWORD *)(v6 + 24);
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, *a2, a2[1], 0);
    v7 = v43;
    v11 = v40;
    if ((v17 & 1) == 0)
    {
      swift_bridgeObjectRetain(v43);
      v20 = v10;
      swift_bridgeObjectRetain(v10);
      goto LABEL_14;
    }
  }
  v19 = a2[5];
  v18 = a2[6];
  if (v11 == v19 && v12 == v18)
  {
    swift_bridgeObjectRetain(v7);
    v20 = v10;
    swift_bridgeObjectRetain(v10);
    v16 = v12;
LABEL_14:
    v22 = v12;
    goto LABEL_15;
  }
  v33 = v15;
  v34 = v14;
  v35 = a2[6];
  v21 = v11;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v19, v18, 0) & 1) != 0)
  {
    swift_bridgeObjectRetain(v43);
    v20 = v10;
    swift_bridgeObjectRetain(v10);
    v16 = v12;
    v22 = v12;
LABEL_15:
    swift_bridgeObjectRetain(v22);
    v23 = v42;
    swift_bridgeObjectRetain(v41);
LABEL_16:
    v4 = v36;
    goto LABEL_17;
  }
  *a3 = 1;
  v30 = a2[3];
  v32 = a2[4];
  v31 = (id)objc_opt_self(UIColor);
  sub_1004091F4(v8, v43, v9, v10, v21, v12, (uint64_t)v42, (uint64_t)v41, v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v32);
  result = objc_msgSend(v31, "_monochromeCellImageTintColor", swift_bridgeObjectRetain(v35).n128_f64[0]);
  if (result)
  {
    v28 = result;
    sub_10040927C(v8, v43, v9, v10, v40, v12, (uint64_t)v42, (uint64_t)v41, v13);
    v13 = 0x800000;
    v39 = v33;
    v43 = v34;
    v38 = v30;
    v20 = v32;
    v40 = v19;
    v16 = v35;
    v42 = v28;
    v41 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_1004091F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  __asm { BR              X10 }
}

uint64_t sub_100409234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v4);
  v6 = v3;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_10040926C(uint64_t a1)
{
  return swift_retain(a1);
}

void sub_10040927C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  __asm { BR              X10 }
}

uint64_t sub_1004092BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);

  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_1004092F4(uint64_t a1)
{
  return swift_release(a1);
}

_QWORD *sub_100409304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *result;
  id v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int64_t v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t);
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;

  v51 = a2;
  v6 = type metadata accessor for UICellAccessory.ReorderOptions(0);
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E6050);
  __chkstk_darwin(v8);
  v57 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.DeleteOptions(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v54 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v70 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  if (!v13)
    return v14;
  v43 = v3;
  v73 = _swiftEmptyArrayStorage;
  sub_100366D2C(0, v13, 0);
  v14 = v73;
  v50 = (id)objc_opt_self(UIColor);
  v15 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = *(unsigned __int8 *)(v15 + 80);
  v49 = v16;
  v48 = (v17 + 32) & ~v17;
  v47 = v48 + 2 * v16;
  v46 = v17 | 7;
  v69 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v18 = (uint64_t *)(a1 + 56);
  v45 = xmmword_10070FC00;
  v44 = a3;
  v19 = v57;
  while (1)
  {
    v64 = v14;
    v65 = v13;
    v20 = (void *)*(v18 - 2);
    v68 = *(v18 - 3);
    v62 = *(v18 - 1);
    v21 = a3;
    v22 = *v18;
    v23 = sub_10004CFD4(&qword_1009E2318);
    v24 = swift_allocObject(v23, v47, v46);
    *(_OWORD *)(v24 + 16) = v45;
    v61 = v24;
    v66 = v24 + v48;
    v67 = *(void (**)(char *, _QWORD, uint64_t))(v70 + 104);
    v25 = v52;
    v26 = v53;
    v67(v52, v69, v53);
    v27 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
    v28(v19, 1, 1, v27);
    swift_bridgeObjectRetain(v20);
    v63 = v22;
    swift_bridgeObjectRetain(v22);
    v29 = swift_bridgeObjectRetain(v21);
    v30 = v54;
    UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v19, 0, 0, v29);
    static UICellAccessory.delete(displayed:options:actionHandler:)(v25, v30, 0, 0);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v56);
    v31 = *(void (**)(char *, uint64_t))(v70 + 8);
    v31(v25, v26);
    v67(v25, v69, v26);
    v28(v19, 1, 1, v27);
    v32 = v58;
    UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)(2, v19, 0, 2);
    static UICellAccessory.reorder(displayed:options:)(v25, v32);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v60);
    v31(v25, v26);
    v71 = 0x3A6D6F74737563;
    v72 = 0xE700000000000000;
    v33._countAndFlagsBits = v68;
    v33._object = v20;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v20);
    v34 = v71;
    v35 = v72;
    result = objc_msgSend(v50, "_monochromeCellImageTintColor");
    if (!result)
      break;
    v37 = result;
    v14 = v64;
    v73 = v64;
    v39 = v64[2];
    v38 = v64[3];
    if (v39 >= v38 >> 1)
    {
      sub_100366D2C(v38 > 1, v39 + 1, 1);
      v14 = v73;
    }
    v18 += 4;
    v14[2] = v39 + 1;
    v40 = &v14[9 * v39];
    v40[4] = v34;
    v40[5] = v35;
    v41 = v63;
    v40[6] = v62;
    v40[7] = v41;
    a3 = v44;
    v40[8] = v51;
    v40[9] = a3;
    v42 = v61;
    v40[10] = v37;
    v40[11] = v42;
    *((_BYTE *)v40 + 98) = -64;
    *((_WORD *)v40 + 48) = 0;
    v13 = v65 - 1;
    if (v65 == 1)
      return v14;
  }
  __break(1u);
  return result;
}

void sub_1004097A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  if ((~a9 & 0xFEFEFE) != 0)
    sub_10040927C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

_QWORD *sub_1004097C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = (void *)a1[6];
  v5 = a1[7];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  v6 = v4;
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *sub_100409820(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  swift_bridgeObjectRelease(a1[7]);

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100409898(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, char a7)
{
  switch(a7)
  {
    case 1:
    case 2:
    case 3:
      result = a2;
      goto LABEL_3;
    case 4:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a4);
      result = sub_100409914(a5, a6);
      break;
    case 5:
LABEL_3:
      result = swift_bridgeObjectRelease(result);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100409914(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xFCu)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_100409938(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 0xFCu)
    return swift_bridgeObjectRetain(result);
  return result;
}

void sub_10040994C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  id v10;
  void *v11;
  id v12;
  _QWORD *v13;

  v10 = objc_msgSend(a1, "machineAuthorizationService");
  v11 = (void *)objc_opt_self(UIViewController);
  v12 = objc_msgSend(a1, "bk_window");
  v13 = objc_msgSend(v11, "jsa_topMostViewControllerForWindow:", v12);

  sub_100409DA0(0, v13, a2, a3, a4, a5);
}

void sub_100409B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = _convertErrorToNSError(_:)(a1);
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_100409BB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  id v10;
  id v11;

  v8 = objc_msgSend(a1, "machineAuthorizationService");
  v9 = (void *)objc_opt_self(UIViewController);
  v10 = objc_msgSend(a1, "bk_window");
  v11 = objc_msgSend(v9, "jsa_topMostViewControllerForWindow:", v10);

  sub_10040AAC8(0, (uint64_t)v11, a2, a3, a4);
}

double sub_100409DA0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  char *v6;
  char *v7;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  char *v48;
  NSString v49;
  id v50;
  void *v51;
  id v52;
  char v53;
  char v54;
  unint64_t v55;
  char **v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t aBlock[5];
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[16];

  v7 = v6;
  v65 = a6;
  v67 = a5;
  v12 = (char *)type metadata accessor for DispatchPredicate(0);
  v13 = *((_QWORD *)v12 - 1);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_100059BB4();
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, char *))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = _dispatchPreconditionTest(_:)(v15);
  v18 = (*(uint64_t (**)(_QWORD *, char *))(v13 + 8))(v15, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    a2 = sub_1005B18B0(0, a2[2] + 1, 1, a2);
LABEL_20:
    v34 = a2[2];
    v33 = a2[3];
    if (v34 >= v33 >> 1)
      a2 = sub_1005B18B0((_QWORD *)(v33 > 1), v34 + 1, 1, a2);
    a2[2] = v34 + 1;
    v35 = &a2[2 * v34];
    v35[4] = sub_10040C8B4;
    v35[5] = v17;
    swift_beginAccess(v12, aBlock, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v12);
    v68 = *(_QWORD *)v12;
    *(_QWORD *)v12 = 0x8000000000000000;
    sub_1002C4684((uint64_t)a2, a1, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    v37 = *(_QWORD *)v12;
    *(_QWORD *)v12 = v68;
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v37);
    swift_endAccess(aBlock);
    sub_10002AD00(a4, (uint64_t)v15);
    return result;
  }
  v64 = a3;
  v19 = a1 & 1;
  v66 = v7;
  v20 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.info.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v63 = v19;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v25 = a2;
    v71 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v23 + 4, v23 + 12);
    *(_WORD *)(v23 + 12) = 2080;
    if (v19)
      v26 = 0x726F687475616564;
    else
      v26 = 0x7A69726F68747561;
    if (v19)
      v27 = 0xEB00000000657A69;
    else
      v27 = 0xE900000000000065;
    v71 = sub_100040F58(v26, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v23 + 14, v23 + 22);
    v28 = v27;
    a2 = v25;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s Beginning %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  v15 = v65;
  if (a4)
    a1 = v64;
  else
    a1 = 0;
  if (a4)
    v7 = (char *)a4;
  else
    v7 = (char *)0xE000000000000000;
  v12 = &v66[OBJC_IVAR___BKMachineAuthorizationService_completionsByAccountName];
  swift_beginAccess(&v66[OBJC_IVAR___BKMachineAuthorizationService_completionsByAccountName], &v71, 0, 0);
  v29 = *(_QWORD *)v12;
  v30 = *(_QWORD *)(*(_QWORD *)v12 + 16);
  swift_bridgeObjectRetain(a4);
  a4 = v67;
  if (v30)
  {
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v29);
    v31 = sub_10004CE80(a1, (uint64_t)v7);
    if ((v32 & 1) != 0)
    {
      a2 = *(_QWORD **)(*(_QWORD *)(v29 + 56) + 8 * v31);
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v29);
      if (!a4)
      {
        swift_bridgeObjectRelease(v7);
        *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
        return result;
      }
      v17 = swift_allocObject(&unk_100904AC0, 32, 7);
      *(_QWORD *)(v17 + 16) = a4;
      *(_QWORD *)(v17 + 24) = v15;
      swift_retain_n(v15, 2);
      if ((swift_isUniquelyReferenced_nonNull_native(a2) & 1) != 0)
        goto LABEL_20;
      goto LABEL_34;
    }
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v29);
  }
  if (a4)
  {
    v39 = sub_10004CFD4(&qword_1009E2400);
    v40 = swift_allocObject(v39, 48, 7);
    *(_OWORD *)(v40 + 16) = xmmword_10070CCA0;
    v41 = swift_allocObject(&unk_100904A98, 32, 7);
    *(_QWORD *)(v41 + 16) = v67;
    *(_QWORD *)(v41 + 24) = v15;
    *(_QWORD *)(v40 + 32) = sub_10040C8B4;
    *(_QWORD *)(v40 + 40) = v41;
    swift_beginAccess(v12, aBlock, 33, 0);
    sub_10002ACF0(v67, (uint64_t)v15);
    swift_bridgeObjectRetain(v7);
    sub_10002ACF0(v67, (uint64_t)v15);
    v42 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v12);
    v68 = *(_QWORD *)v12;
    *(_QWORD *)v12 = 0x8000000000000000;
    v43 = v40;
    a4 = v67;
    sub_1002C4684(v43, a1, (uint64_t)v7, v42);
    v44 = *(_QWORD *)v12;
    *(_QWORD *)v12 = v68;
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v44);
    swift_endAccess(aBlock);
    sub_10002AD00(a4, (uint64_t)v15);
  }
  v45 = (void *)objc_opt_self(BUBag);
  v46 = objc_msgSend(v45, "defaultBag", swift_bridgeObjectRetain(v7).n128_f64[0]);
  v47 = objc_allocWithZone((Class)AMSAuthorizeMachineTask);
  v48 = v66;
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v47, "initWithUsername:authorizeReason:bag:presentationDelegate:", v49, 2, v46, v48, swift_bridgeObjectRelease(v7).n128_f64[0]);

  swift_unknownObjectWeakAssign(&v48[OBJC_IVAR___BKMachineAuthorizationService_presentingViewController], a2);
  v51 = *(void **)&v48[OBJC_IVAR___BKMachineAuthorizationService_currentTask];
  *(_QWORD *)&v48[OBJC_IVAR___BKMachineAuthorizationService_currentTask] = v50;
  v52 = v50;

  v53 = v63;
  if (v63)
  {
    v55 = swift_bridgeObjectRelease(0xEB00000000657A69).n128_u64[0];
    v56 = &selRef_performDeauthorization;
  }
  else
  {
    v54 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7A69726F68747561, 0xE900000000000065, 0x726F687475616564, 0xEB00000000657A69, 0);
    v55 = swift_bridgeObjectRelease(0xE900000000000065).n128_u64[0];
    v56 = &selRef_performAuthorization;
    if ((v54 & 1) != 0)
      v56 = &selRef_performDeauthorization;
  }
  v57 = objc_msgSend(v52, *v56, *(double *)&v55);
  v58 = swift_allocObject(&unk_100904890, 24, 7);
  swift_unknownObjectWeakInit(v58 + 16);
  v59 = swift_allocObject(&unk_100904A48, 64, 7);
  *(_QWORD *)(v59 + 16) = v58;
  *(_QWORD *)(v59 + 24) = a4;
  *(_QWORD *)(v59 + 32) = v15;
  *(_BYTE *)(v59 + 40) = v53;
  *(_QWORD *)(v59 + 48) = a1;
  *(_QWORD *)(v59 + 56) = v7;
  aBlock[4] = (uint64_t)sub_10040C7DC;
  v70 = v59;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002A7214;
  aBlock[3] = (uint64_t)&unk_100904A60;
  v60 = _Block_copy(aBlock);
  v61 = v70;
  sub_10002ACF0(a4, (uint64_t)v15);
  objc_msgSend(v57, "addFinishBlock:", v60, swift_release(v61).n128_f64[0]);
  _Block_release(v60);

  return result;
}

void sub_10040A4FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  char *v33;
  void *v34;
  _QWORD *v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v13 = a3 + 16;
  swift_beginAccess(a3 + 16, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v15 = (char *)Strong;
    if (a2)
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v16 = swift_errorRetain(a2);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.error.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(42, -1);
        v39 = (uint64_t *)swift_slowAlloc(8, -1);
        v40 = swift_slowAlloc(96, -1);
        v42 = v40;
        *(_DWORD *)v19 = 136315906;
        v41 = sub_100040F58(0xD000000000000024, 0x80000001007C7D50, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v19 + 4, v19 + 12);
        *(_WORD *)(v19 + 12) = 2080;
        v41 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v19 + 14, v19 + 22);
        *(_WORD *)(v19 + 22) = 2080;
        if ((a6 & 1) != 0)
          v20 = 0x726F687475616564;
        else
          v20 = 0x7A69726F68747561;
        if ((a6 & 1) != 0)
          v21 = 0xEB00000000657A69;
        else
          v21 = 0xE900000000000065;
        v41 = sub_100040F58(v20, v21, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v19 + 24, v19 + 32);
        swift_bridgeObjectRelease(v21);
        *(_WORD *)(v19 + 32) = 2112;
        v22 = _convertErrorToNSError(_:)(a2);
        v41 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v19 + 34, v19 + 42);
        *v39 = v22;
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s %s request failed to %s computer (by account name). %@", (uint8_t *)v19, 0x2Au);
        v23 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v39, 1, v23);
        swift_slowDealloc(v39, -1, -1);
        swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        swift_errorRelease(a2);
        swift_errorRelease(a2);
      }
      v34 = (void *)_convertErrorToNSError(_:)(a2);
      sub_100059BB4();
      v35 = (_QWORD *)swift_allocObject(&unk_100904B10, 48, 7);
      v35[2] = v15;
      v35[3] = a7;
      v35[4] = a8;
      v35[5] = v34;
      v36 = v15;
      swift_bridgeObjectRetain(a8);
      v37 = v34;
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10040C8AC, v35);

      swift_release(v35);
      swift_errorRelease(a2);
    }
    else
    {
      v26 = Logger.logObject.getter(Strong);
      v27 = static os_log_type_t.info.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc(22, -1);
        v29 = swift_slowAlloc(64, -1);
        v42 = v29;
        *(_DWORD *)v28 = 136315394;
        v41 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 4, v28 + 12);
        *(_WORD *)(v28 + 12) = 2080;
        if ((a6 & 1) != 0)
          v30 = 0x726F687475616564;
        else
          v30 = 0x7A69726F68747561;
        if ((a6 & 1) != 0)
          v31 = 0xEB00000000657A69;
        else
          v31 = 0xE900000000000065;
        v41 = sub_100040F58(v30, v31, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 14, v28 + 22);
        swift_bridgeObjectRelease(v31);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s Successfully performed %s by account name", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }

      sub_100059BB4();
      v32 = (_QWORD *)swift_allocObject(&unk_100904AE8, 48, 7);
      v32[2] = v15;
      v32[3] = a7;
      v32[4] = a8;
      v32[5] = 0;
      v33 = v15;
      swift_bridgeObjectRetain(a8);
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10040C7F4, v32);
      swift_release(v32);
    }
    v38 = *(void **)&v15[OBJC_IVAR___BKMachineAuthorizationService_currentTask];
    *(_QWORD *)&v15[OBJC_IVAR___BKMachineAuthorizationService_currentTask] = 0;

    swift_unknownObjectWeakAssign(&v15[OBJC_IVAR___BKMachineAuthorizationService_presentingViewController], 0);
  }
  else
  {
    if (!a4)
      return;
    v24 = objc_allocWithZone((Class)NSError);
    v25 = String._bridgeToObjectiveC()();
    v15 = (char *)objc_msgSend(v24, "initWithDomain:code:userInfo:", v25, 0, 0);

    a4(v15);
  }

}

void sub_10040AAC8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  char v56;
  char v57;
  unint64_t v58;
  char **v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  NSString v65;
  id v66;
  _QWORD *v67;
  char *v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t aBlock[5];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[16];

  v6 = v5;
  v78 = a4;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (_QWORD *)((char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (_QWORD *)sub_100059BB4();
  *v14 = static OS_dispatch_queue.main.getter(v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = _dispatchPreconditionTest(_:)(v14);
  v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    v15 = sub_1005B18B0(0, v15[2] + 1, 1, v15);
LABEL_14:
    v34 = v15[2];
    v33 = v15[3];
    if (v34 >= v33 >> 1)
      v15 = sub_1005B18B0((_QWORD *)(v33 > 1), v34 + 1, 1, v15);
    v15[2] = v34 + 1;
    v35 = &v15[2 * v34];
    v35[4] = sub_10040C8B4;
    v35[5] = v16;
    swift_beginAccess(v14, aBlock, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
    v81 = *v14;
    *v14 = 0x8000000000000000;
    sub_1002C47F8((uint64_t)v15, a2, isUniquelyReferenced_nonNull_native);
    v37 = *v14;
    *v14 = v81;
    swift_bridgeObjectRelease(v37);
    swift_endAccess(aBlock);
    sub_10002AD00(a5, v11);
    return;
  }
  v11 = a5;
  v18 = a3;
  v19 = a1 & 1;
  v75[2] = &v6[OBJC_IVAR___BKMachineAuthorizationService_logger];
  v76 = a2;
  v20 = Logger.logObject.getter(v17);
  v21 = static os_log_type_t.info.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v75[1] = v15;
  v77 = v19;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v25 = v6;
    v82 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83, v23 + 4, v23 + 12);
    *(_WORD *)(v23 + 12) = 2080;
    if (v19)
      v26 = 0x726F687475616564;
    else
      v26 = 0x7A69726F68747561;
    if (v19)
      v27 = 0xEB00000000657A69;
    else
      v27 = 0xE900000000000065;
    v82 = sub_100040F58(v26, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83, v23 + 14, v23 + 22);
    v28 = v27;
    v6 = v25;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s Beginning %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  v14 = (uint64_t *)&v6[OBJC_IVAR___BKMachineAuthorizationService_completionsByDSID];
  swift_beginAccess(&v6[OBJC_IVAR___BKMachineAuthorizationService_completionsByDSID], &v82, 0, 0);
  v29 = *v14;
  a2 = v18;
  if (*(_QWORD *)(*v14 + 16))
  {
    v30 = sub_1002C8328(v18);
    if ((v31 & 1) != 0)
    {
      a5 = v78;
      if (!v78)
        return;
      v15 = *(_QWORD **)(*(_QWORD *)(v29 + 56) + 8 * v30);
      v16 = swift_allocObject(&unk_1009049D0, 32, 7);
      *(_QWORD *)(v16 + 16) = a5;
      *(_QWORD *)(v16 + 24) = v11;
      sub_10002ACF0(a5, v11);
      sub_10002ACF0(a5, v11);
      swift_bridgeObjectRetain(v15);
      if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) != 0)
        goto LABEL_14;
      goto LABEL_34;
    }
  }
  v38 = v11;
  v39 = v78;
  if (v78)
  {
    v40 = sub_10004CFD4(&qword_1009E2400);
    v41 = swift_allocObject(v40, 48, 7);
    *(_OWORD *)(v41 + 16) = xmmword_10070CCA0;
    v42 = swift_allocObject(&unk_1009049A8, 32, 7);
    *(_QWORD *)(v42 + 16) = v39;
    *(_QWORD *)(v42 + 24) = v38;
    *(_QWORD *)(v41 + 32) = sub_10040C748;
    *(_QWORD *)(v41 + 40) = v42;
    swift_beginAccess(v14, aBlock, 33, 0);
    swift_retain_n(v38, 2);
    v43 = swift_isUniquelyReferenced_nonNull_native(*v14);
    v81 = *v14;
    *v14 = 0x8000000000000000;
    sub_1002C47F8(v41, a2, v43);
    v44 = *v14;
    *v14 = v81;
    swift_bridgeObjectRelease(v44);
    swift_endAccess(aBlock);
    sub_10002AD00(v39, v38);
  }
  if (a2)
  {
    v45 = (void *)objc_opt_self(ACAccount);
    v46 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedLongLong:", a2);
    v47 = objc_msgSend(v45, "bu_storeAccountWithDSID:", v46);
  }
  else
  {
    v46 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
    v47 = objc_msgSend(v46, "activeStoreAccount");
  }
  v48 = v47;

  if (v48)
  {
    v50 = (void *)objc_opt_self(BUBag);
    v51 = v48;
    v52 = objc_msgSend(v50, "defaultBag");
    v53 = objc_msgSend(objc_allocWithZone((Class)AMSAuthorizeMachineTask), "initWithAccount:authorizeReason:bag:", v51, 2, v52);

    swift_unknownObjectWeakAssign(&v6[OBJC_IVAR___BKMachineAuthorizationService_presentingViewController], v76);
    objc_msgSend(v53, "setPresentationDelegate:", v6);
    v54 = *(void **)&v6[OBJC_IVAR___BKMachineAuthorizationService_currentTask];
    *(_QWORD *)&v6[OBJC_IVAR___BKMachineAuthorizationService_currentTask] = v53;
    v55 = v53;

    v56 = v77;
    if (v77)
    {
      v58 = swift_bridgeObjectRelease(0xEB00000000657A69).n128_u64[0];
      v59 = &selRef_performDeauthorization;
    }
    else
    {
      v57 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7A69726F68747561, 0xE900000000000065, 0x726F687475616564, 0xEB00000000657A69, 0);
      v58 = swift_bridgeObjectRelease(0xE900000000000065).n128_u64[0];
      v59 = &selRef_performAuthorization;
      if ((v57 & 1) != 0)
        v59 = &selRef_performDeauthorization;
    }
    v70 = objc_msgSend(v55, *v59, *(double *)&v58);
    v71 = swift_allocObject(&unk_100904890, 24, 7);
    swift_unknownObjectWeakInit(v71 + 16);
    v72 = swift_allocObject(&unk_100904958, 56, 7);
    *(_QWORD *)(v72 + 16) = v71;
    *(_QWORD *)(v72 + 24) = v39;
    *(_QWORD *)(v72 + 32) = v38;
    *(_BYTE *)(v72 + 40) = v56;
    *(_QWORD *)(v72 + 48) = a2;
    aBlock[4] = (uint64_t)sub_10040C734;
    v80 = v72;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1002A7214;
    aBlock[3] = (uint64_t)&unk_100904970;
    v73 = _Block_copy(aBlock);
    v74 = v80;
    sub_10002ACF0(v39, v38);
    objc_msgSend(v70, "addFinishBlock:", v73, swift_release(v74).n128_f64[0]);
    _Block_release(v73);

  }
  else
  {
    v60 = Logger.logObject.getter(v49);
    v61 = static os_log_type_t.error.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v62 = swift_slowAlloc(22, -1);
      v63 = swift_slowAlloc(64, -1);
      aBlock[0] = v63;
      *(_DWORD *)v62 = 136315394;
      v81 = sub_100040F58(0xD00000000000001DLL, 0x80000001007C7D30, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v62 + 4, v62 + 12);
      *(_WORD *)(v62 + 12) = 2080;
      v81 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v62 + 14, v62 + 22);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s %s cannot authorize without an account.", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v62, -1, -1);
    }

    v64 = objc_allocWithZone((Class)NSError);
    v65 = String._bridgeToObjectiveC()();
    v66 = objc_msgSend(v64, "initWithDomain:code:userInfo:", v65, 0, 0);

    v67 = (_QWORD *)swift_allocObject(&unk_100904930, 40, 7);
    v67[2] = v6;
    v67[3] = a2;
    v67[4] = v66;
    v68 = v6;
    v69 = v66;
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10040C6F4, v67);

    swift_release(v67);
  }
}

void sub_10040B3F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t Strong;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  NSString v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  char *v33;
  void *v34;
  _QWORD *v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (char *)Strong;
    if (a2)
    {
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      v14 = swift_errorRetain(a2);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.error.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc(42, -1);
        v40 = a7;
        v18 = (uint64_t *)swift_slowAlloc(8, -1);
        v39 = swift_slowAlloc(96, -1);
        v42 = v39;
        *(_DWORD *)v17 = 136315906;
        v41 = sub_100040F58(0xD00000000000001DLL, 0x80000001007C7D30, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v17 + 4, v17 + 12);
        *(_WORD *)(v17 + 12) = 2080;
        v41 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v17 + 14, v17 + 22);
        *(_WORD *)(v17 + 22) = 2080;
        if ((a6 & 1) != 0)
          v19 = 0x726F687475616564;
        else
          v19 = 0x7A69726F68747561;
        if ((a6 & 1) != 0)
          v20 = 0xEB00000000657A69;
        else
          v20 = 0xE900000000000065;
        v41 = sub_100040F58(v19, v20, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v17 + 24, v17 + 32);
        swift_bridgeObjectRelease(v20);
        *(_WORD *)(v17 + 32) = 2112;
        v21 = _convertErrorToNSError(_:)(a2);
        v41 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v17 + 34, v17 + 42);
        *v18 = v21;
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s %s request failed to %s computer (by DSID). %@", (uint8_t *)v17, 0x2Au);
        v22 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v18, 1, v22);
        v23 = v18;
        a7 = v40;
        swift_slowDealloc(v23, -1, -1);
        swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v17, -1, -1);

      }
      else
      {

        swift_errorRelease(a2);
        swift_errorRelease(a2);
      }
      v34 = (void *)_convertErrorToNSError(_:)(a2);
      sub_100059BB4();
      v35 = (_QWORD *)swift_allocObject(&unk_100904A20, 40, 7);
      v35[2] = v13;
      v35[3] = a7;
      v35[4] = v34;
      v36 = v13;
      v37 = v34;
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10040C8FC, v35);

      swift_release(v35);
      swift_errorRelease(a2);
    }
    else
    {
      v26 = Logger.logObject.getter(Strong);
      v27 = static os_log_type_t.info.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc(22, -1);
        v29 = swift_slowAlloc(64, -1);
        v42 = v29;
        *(_DWORD *)v28 = 136315394;
        v41 = sub_100040F58(0xD00000000000001BLL, 0x8000000100722FE0, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 4, v28 + 12);
        *(_WORD *)(v28 + 12) = 2080;
        if ((a6 & 1) != 0)
          v30 = 0x726F687475616564;
        else
          v30 = 0x7A69726F68747561;
        if ((a6 & 1) != 0)
          v31 = 0xEB00000000657A69;
        else
          v31 = 0xE900000000000065;
        v41 = sub_100040F58(v30, v31, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 14, v28 + 22);
        swift_bridgeObjectRelease(v31);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s Successfully performed %s by DSID", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }

      sub_100059BB4();
      v32 = (_QWORD *)swift_allocObject(&unk_1009049F8, 40, 7);
      v32[2] = v13;
      v32[3] = a7;
      v32[4] = 0;
      v33 = v13;
      static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10040C8FC, v32);
      swift_release(v32);
    }
    v38 = *(void **)&v13[OBJC_IVAR___BKMachineAuthorizationService_currentTask];
    *(_QWORD *)&v13[OBJC_IVAR___BKMachineAuthorizationService_currentTask] = 0;

    swift_unknownObjectWeakAssign(&v13[OBJC_IVAR___BKMachineAuthorizationService_presentingViewController], 0);
  }
  else
  {
    if (!a4)
      return;
    v24 = objc_allocWithZone((Class)NSError);
    v25 = String._bridgeToObjectiveC()();
    v13 = (char *)objc_msgSend(v24, "initWithDomain:code:userInfo:", v25, 0, 0);

    a4(v13);
  }

}

double sub_10040B9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, __n128);
  __n128 v16;
  uint64_t v17;
  double result;
  _QWORD v19[3];
  _BYTE v20[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR___BKMachineAuthorizationService_completionsByAccountName);
  swift_beginAccess(a1 + OBJC_IVAR___BKMachineAuthorizationService_completionsByAccountName, v20, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(*v7 + 16))
  {
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(v8);
    v9 = sub_10004CE80(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v8);
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v13 = (uint64_t *)(v11 + 40);
        do
        {
          v15 = (void (*)(_QWORD *, __n128))*(v13 - 1);
          v14 = *v13;
          v19[0] = a4;
          v16 = swift_retain(v14);
          v15(v19, v16);
          swift_release(v14);
          v13 += 2;
          --v12;
        }
        while (v12);
      }
      v8 = v11;
    }
    else
    {
      swift_bridgeObjectRelease(a3);
    }
    swift_bridgeObjectRelease(v8);
  }
  swift_beginAccess(v7, v19, 33, 0);
  swift_bridgeObjectRetain(a3);
  v17 = sub_1002BDF6C(a2, a3);
  swift_endAccess(v19);
  swift_bridgeObjectRelease(a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  return result;
}

uint64_t sub_10040BB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(_QWORD *, __n128);
  __n128 v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD v25[3];
  char v26[24];

  v5 = (uint64_t *)(a1 + OBJC_IVAR___BKMachineAuthorizationService_completionsByDSID);
  swift_beginAccess(a1 + OBJC_IVAR___BKMachineAuthorizationService_completionsByDSID, v26, 0, 0);
  v6 = *v5;
  if (*(_QWORD *)(*v5 + 16))
  {
    v7 = sub_1002C8328(a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(v6 + 56);
      v10 = *(_QWORD *)(v9 + 8 * v7);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v9 + 8 * v7));
        v12 = (uint64_t *)(v10 + 40);
        do
        {
          v14 = (void (*)(_QWORD *, __n128))*(v12 - 1);
          v13 = *v12;
          v25[0] = a3;
          v15 = swift_retain(v13);
          v14(v25, v15);
          swift_release(v13);
          v12 += 2;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease(v10);
      }
    }
  }
  swift_beginAccess(v5, v25, 33, 0);
  v16 = sub_1002C8328(a2);
  if ((v17 & 1) != 0)
  {
    v18 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v20 = *v5;
    v24 = *v5;
    *v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1002C0D90();
      v20 = v24;
    }
    v21 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v18);
    sub_1002BE928(v18, v20);
    v22 = *v5;
    *v5 = v20;
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v22);
  }
  return swift_endAccess(v25);
}

id sub_10040BC50()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR___BKMachineAuthorizationService_currentTask] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKMachineAuthorizationService_presentingViewController]);
  v1 = OBJC_IVAR___BKMachineAuthorizationService_completionsByDSID;
  *(_QWORD *)&v0[v1] = sub_1001DF9D4(_swiftEmptyArrayStorage);
  v2 = OBJC_IVAR___BKMachineAuthorizationService_completionsByAccountName;
  v3 = v0;
  *(_QWORD *)&v0[v2] = sub_1001DAE6C((uint64_t)_swiftEmptyArrayStorage);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001BLL, 0x8000000100722FE0);

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for MachineAuthorizationService(0);
  return objc_msgSendSuper2(&v5, "init");
}

id sub_10040BD58()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MachineAuthorizationService(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10040BE0C()
{
  return type metadata accessor for MachineAuthorizationService(0);
}

uint64_t type metadata accessor for MachineAuthorizationService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E2390;
  if (!qword_1009E2390)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MachineAuthorizationService);
  return result;
}

uint64_t sub_10040BE50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = &unk_100723038;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10040BEE0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, id), uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class isa;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;
  char v26[80];
  char v27[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    goto LABEL_6;
  v9 = (void *)Strong;
  v10 = (id)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___BKMachineAuthorizationService_presentingViewController);
  if (!v10)
  {
    v10 = objc_msgSend((id)objc_opt_self(UIViewController), "bc_presentingViewController");
    if (!v10)
    {

LABEL_6:
      v16 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
      inited = swift_initStackObject(v16, v26);
      *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(_QWORD *)(inited + 40) = v18;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = 0xD000000000000048;
      *(_QWORD *)(inited + 56) = 0x80000001007C7CB0;
      v19 = sub_10003FB0C(inited);
      v20 = objc_allocWithZone((Class)NSError);
      v21 = String._bridgeToObjectiveC()();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v23 = objc_msgSend(v20, "initWithDomain:code:userInfo:", v21, 0, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

      v10 = v23;
      a3(0, v23);
      v12 = v10;
      goto LABEL_7;
    }
  }
  v11 = objc_msgSend(objc_allocWithZone((Class)AMSUIAuthenticateTask), "initWithRequest:presentingViewController:", a2, v10);
  v12 = objc_msgSend(v11, "performAuthentication");

  v13 = swift_allocObject(&unk_1009048E0, 32, 7);
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  aBlock[4] = sub_10004DE04;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10040C170;
  aBlock[3] = &unk_1009048F8;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  swift_retain(a4);
  objc_msgSend(v12, "addFinishBlock:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

LABEL_7:
}

void sub_10040C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_10040C2D8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, id), uint64_t a4)
{
  id Strong;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  id v16;
  NSString v17;
  Class isa;
  _QWORD v19[5];
  uint64_t v20;
  _BYTE v21[80];

  Strong = (id)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR___BKMachineAuthorizationService_presentingViewController);
  if (Strong
    || (Strong = objc_msgSend((id)objc_opt_self(UIViewController), "bc_presentingViewController")) != 0)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)AMSUIAlertDialogTask), "initWithRequest:presentingViewController:", a2, Strong);
    v9 = objc_msgSend(v8, "present");
    v19[4] = a3;
    v20 = a4;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_10040C170;
    v19[3] = &unk_100904830;
    v10 = _Block_copy(v19);
    v11 = v20;
    swift_retain(a4);
    objc_msgSend(v9, "addFinishBlock:", v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);

  }
  else
  {
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    inited = swift_initStackObject(v12, v21);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v14;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000040;
    *(_QWORD *)(inited + 56) = 0x80000001007C7C00;
    v15 = sub_10003FB0C(inited);
    v16 = objc_allocWithZone((Class)NSError);
    v17 = String._bridgeToObjectiveC()();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v16, "initWithDomain:code:userInfo:", v17, 0, isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

    a3(0, v9);
  }

}

uint64_t sub_10040C5EC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10040C610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10040C280(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10040C628()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10040C65C()
{
  uint64_t v0;

  sub_10040C2D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD, id))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10040C668()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10040C68C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10040C6C0()
{
  uint64_t v0;

  sub_10040BEE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD, id))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10040C6CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10040C6F4()
{
  uint64_t *v0;

  return sub_10040BB00(v0[2], v0[3], v0[4]);
}

uint64_t sub_10040C700()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_10040C734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10040B3F8(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(char *))(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10040C748(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_10040C774()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10040C7A0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_10040C7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10040A4FC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(char *))(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

double sub_10040C7F4()
{
  uint64_t *v0;

  return sub_10040B9B0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10040C804()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10040C838(uint64_t a1)
{
  uint64_t v1;

  sub_100409B6C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10040C840()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10040C864(void *a1)
{
  uint64_t *v1;

  sub_100409BB8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10040C870()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10040C89C(void *a1)
{
  uint64_t v1;

  sub_10040994C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40));
}

void sub_10040C900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  _QWORD *v21;

  v4 = *(_QWORD *)(a1 + 16);
  v21 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(0);
  v18 = a1;
  swift_bridgeObjectRetain(a1);
  if (v4)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    while (a2 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v19 = a2 + 1;
      v6 = *v5++;
      sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
      v7 = BookThemeType.localizedTitle.getter(v6);
      v9 = v8;
      v20[0] = a2;
      v10 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v12 = v11;
      v13 = BookThemeType.rawValue.getter(v6);
      v20[3] = &type metadata for String;
      v20[0] = v13;
      v20[1] = v14;
      v15 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v7, v9, 0, "books_setTheme:", v10, v12, 1310720, v20, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = v21[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
      a2 = v19;
      if (!--v4)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v18);
  }
}

void sub_10040CA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  _QWORD *v22;

  v4 = *(_QWORD *)(a1 + 16);
  v22 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(0);
  v19 = a1;
  swift_bridgeObjectRetain(a1);
  if (v4)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    while (a2 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v20 = a2 + 1;
      v6 = *v5++;
      sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
      sub_100270FB8(v6);
      v8 = v7;
      v10 = v9;
      v21[0] = a2;
      v11 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v13 = v12;
      v14 = ThemeAppearance.rawValue.getter(v6);
      v21[3] = &type metadata for String;
      v21[0] = v14;
      v21[1] = v15;
      v16 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v8, v10, 0, "books_setThemeAppearance:", v11, v13, 1703936, v21, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = v22[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
      specialized ContiguousArray._endMutation()(v18);
      a2 = v20;
      if (!--v4)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v19);
  }
}

NSString sub_10040CC28()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2408 = (uint64_t)result;
  return result;
}

NSString sub_10040CC5C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2410 = (uint64_t)result;
  return result;
}

NSString sub_10040CC90()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2418 = (uint64_t)result;
  return result;
}

NSString sub_10040CCC4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2420 = (uint64_t)result;
  return result;
}

NSString sub_10040CCF8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2428 = (uint64_t)result;
  return result;
}

NSString sub_10040CD2C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2430 = (uint64_t)result;
  return result;
}

NSString sub_10040CD60()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2438 = (uint64_t)result;
  return result;
}

NSString sub_10040CD94()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2440 = (uint64_t)result;
  return result;
}

NSString sub_10040CDC8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2448 = (uint64_t)result;
  return result;
}

NSString sub_10040CDFC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2450 = (uint64_t)result;
  return result;
}

NSString sub_10040CE30()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E2458 = (uint64_t)result;
  return result;
}

uint64_t sub_10040CE64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;

  v0 = sub_10004CFD4(&qword_1009E2460);
  v1 = swift_allocObject(v0, 120, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1007168A0;
  if (qword_1009CE418 != -1)
    swift_once(&qword_1009CE418, sub_10040CC28);
  v2 = (void *)qword_1009E2408;
  *(_QWORD *)(v1 + 32) = qword_1009E2408;
  v3 = qword_1009CE420;
  v4 = v2;
  if (v3 != -1)
    swift_once(&qword_1009CE420, sub_10040CC5C);
  v5 = (void *)qword_1009E2410;
  *(_QWORD *)(v1 + 40) = qword_1009E2410;
  v6 = qword_1009CE428;
  v7 = v5;
  if (v6 != -1)
    swift_once(&qword_1009CE428, sub_10040CC90);
  v8 = (void *)qword_1009E2418;
  *(_QWORD *)(v1 + 48) = qword_1009E2418;
  v9 = qword_1009CE430;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_1009CE430, sub_10040CCC4);
  v11 = (void *)qword_1009E2420;
  *(_QWORD *)(v1 + 56) = qword_1009E2420;
  v12 = qword_1009CE438;
  v13 = v11;
  if (v12 != -1)
    swift_once(&qword_1009CE438, sub_10040CCF8);
  v14 = (void *)qword_1009E2428;
  *(_QWORD *)(v1 + 64) = qword_1009E2428;
  v15 = qword_1009CE440;
  v16 = v14;
  if (v15 != -1)
    swift_once(&qword_1009CE440, sub_10040CD2C);
  v17 = (void *)qword_1009E2430;
  *(_QWORD *)(v1 + 72) = qword_1009E2430;
  v18 = qword_1009CE448;
  v19 = v17;
  if (v18 != -1)
    swift_once(&qword_1009CE448, sub_10040CD60);
  v20 = (void *)qword_1009E2438;
  *(_QWORD *)(v1 + 80) = qword_1009E2438;
  v21 = qword_1009CE450;
  v22 = v20;
  if (v21 != -1)
    swift_once(&qword_1009CE450, sub_10040CD94);
  v23 = (void *)qword_1009E2440;
  *(_QWORD *)(v1 + 88) = qword_1009E2440;
  v24 = qword_1009CE458;
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_1009CE458, sub_10040CDC8);
  v26 = (void *)qword_1009E2448;
  *(_QWORD *)(v1 + 96) = qword_1009E2448;
  v27 = qword_1009CE460;
  v28 = v26;
  if (v27 != -1)
    swift_once(&qword_1009CE460, sub_10040CDFC);
  v29 = (void *)qword_1009E2450;
  *(_QWORD *)(v1 + 104) = qword_1009E2450;
  v30 = qword_1009CE468;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_1009CE468, sub_10040CE30);
  v32 = (void *)qword_1009E2458;
  *(_QWORD *)(v1 + 112) = qword_1009E2458;
  v33 = v32;
  return v1;
}

UIMenu sub_10040D110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::OpaquePointer v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  id v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  UIImage_optional v57;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - v12;
  v50 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v14 = String.LocalizationValue.init(stringLiteral:)(0x73412077656956, 0xE700000000000000);
  static Locale.current.getter(v14);
  v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v10, v13, v7);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v53 = (id)objc_opt_self(NSBundle);
  v54 = ObjCClassFromMetadata;
  v18 = objc_msgSend(v53, "bundleForClass:", ObjCClassFromMetadata);
  v52 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v52(v3, v6, v0);
  v47 = v10;
  v19 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v18, v3, "View -> View As", 15, 2);
  v48 = v20;
  v49 = v19;
  v51 = *(void (**)(char *, uint64_t))(v1 + 8);
  v51(v6, v0);
  v46 = *(void (**)(char *, uint64_t))(v8 + 8);
  v46(v13, v7);
  if (qword_1009CE420 != -1)
    swift_once(&qword_1009CE420, sub_10040CC5C);
  v21 = (void *)qword_1009E2410;
  v45 = qword_1009E2410;
  v22 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v44 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v44 + 16) = xmmword_1007118C0;
  sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v23 = v21;
  v24 = String.LocalizationValue.init(stringLiteral:)(1684632135, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = v47;
  v15(v47, v13, v7);
  v26 = objc_msgSend(v53, "bundleForClass:", v54);
  v52(v3, v6, v0);
  v27 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v26, v3, "View -> View As -> Grid", 23, 2);
  v43 = v15;
  v29 = v28;
  v51(v6, v0);
  v30 = v46;
  v46(v13, v7);
  v55 = 0u;
  v56 = 0u;
  v31 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v27, v29, 0, 0, 0, 0, "books_viewAsGrid:", &v55, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v32 = v44;
  *(_QWORD *)(v44 + 32) = v31;
  v33 = String.LocalizationValue.init(stringLiteral:)(1953720652, 0xE400000000000000);
  static Locale.current.getter(v33);
  v43(v25, v13, v7);
  v34 = objc_msgSend(v53, "bundleForClass:", v54);
  v52(v3, v6, v0);
  v35 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, v34, v3, "View -> View As -> List", 23, 2);
  v37 = v36;
  v51(v6, v0);
  v30(v13, v7);
  v55 = 0u;
  v56 = 0u;
  v38 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v35, v37, 0, 0, 0, 0, "books_viewAsList:", &v55, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v32 + 40) = v38;
  *(_QWORD *)&v55 = v32;
  specialized Array._endMutation()(v38);
  v39._object = v48;
  v39._countAndFlagsBits = v49;
  v57.value.super.isa = 0;
  v57.is_nil = v45;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v57, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v55, v41);
}

UIMenu sub_10040D5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::OpaquePointer v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  id v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  UIImage_optional v49;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v45 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CE428 != -1)
    swift_once(&qword_1009CE428, sub_10040CC90);
  v14 = (void *)qword_1009E2418;
  v44 = qword_1009E2418;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v43 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1007118C0;
  v46 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v16 = v14;
  v17 = String.LocalizationValue.init(stringLiteral:)(0x6573616863727550, 0xE900000000000064);
  static Locale.current.getter(v17);
  v42 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v42(v10, v13, v7);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v41 = ObjCClassFromMetadata;
  v40 = (id)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v40, "bundleForClass:", ObjCClassFromMetadata);
  v39 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v39(v3, v6, v0);
  v21 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v20, v3, "View -> Purchased", 17, 2);
  v22 = v1;
  v24 = v23;
  v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  v38(v6, v0);
  v37 = *(void (**)(char *, uint64_t))(v8 + 8);
  v37(v13, v7);
  v47 = 0u;
  v48 = 0u;
  v25 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21, v24, 0, 0, 0, 0, "books_viewOnlyPurchased:", &v47, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v26 = v43;
  *(_QWORD *)(v43 + 32) = v25;
  v27 = String.LocalizationValue.init(stringLiteral:)(0x53206E49206C6C41, 0xED00007365697265);
  static Locale.current.getter(v27);
  v42(v10, v13, v7);
  v28 = objc_msgSend(v40, "bundleForClass:", v41);
  v39(v3, v6, v0);
  v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v28, v3, "View -> All In Series", 21, 2);
  v31 = v30;
  v38(v6, v0);
  v37(v13, v7);
  v47 = 0u;
  v48 = 0u;
  v32 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, 0, 0, 0, "books_viewAllInSeries:", &v47, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v26 + 40) = v32;
  *(_QWORD *)&v47 = v26;
  specialized Array._endMutation()(v32);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v49.value.super.isa = 0;
  v49.is_nil = v44;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v49, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v47, v35);
}

UIMenu sub_10040D9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  Swift::OpaquePointer v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  id v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  __int128 v86;
  __int128 v87;
  UIImage_optional v88;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v69 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v69 - v12;
  v75 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v14 = String.LocalizationValue.init(stringLiteral:)(0x79422074726F53, 0xE700000000000000);
  static Locale.current.getter(v14);
  v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v10, v13, v7);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v83 = (id)objc_opt_self(NSBundle);
  v84 = ObjCClassFromMetadata;
  v18 = objc_msgSend(v83, "bundleForClass:", ObjCClassFromMetadata);
  v82 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v82(v3, v6, v0);
  v79 = v3;
  v19 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v18, v3, "View -> Sort By", 15, 2);
  v73 = v20;
  v74 = v19;
  v21 = v0;
  v85 = *(void (**)(char *, uint64_t))(v1 + 8);
  v85(v6, v0);
  v81 = *(void (**)(char *, uint64_t))(v8 + 8);
  v81(v13, v7);
  if (qword_1009CE418 != -1)
    swift_once(&qword_1009CE418, sub_10040CC28);
  v22 = (void *)qword_1009E2408;
  v72 = qword_1009E2408;
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v80 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v80 + 16) = xmmword_1007143B0;
  v77 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v24 = v22;
  v25 = String.LocalizationValue.init(stringLiteral:)(0x746E65636552, 0xE600000000000000);
  static Locale.current.getter(v25);
  v15(v10, v13, v7);
  v26 = objc_msgSend(v83, "bundleForClass:", v84);
  v27 = v79;
  v28 = v0;
  v82(v79, v6, v0);
  v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v26, v27, "View -> Sort By -> Recent", 25, 2);
  v78 = v15;
  v31 = v30;
  v85(v6, v21);
  v81(v13, v7);
  v86 = 0u;
  v87 = 0u;
  v32 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, 0, 0, 0, "books_sortByLastOpened:", &v86, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v80 + 32) = v32;
  v33 = String.LocalizationValue.init(stringLiteral:)(0x656C746954, 0xE500000000000000);
  static Locale.current.getter(v33);
  v15(v10, v13, v7);
  v34 = v27;
  v70 = v7;
  v35 = v28;
  v36 = v83;
  v37 = v84;
  v38 = objc_msgSend(v83, "bundleForClass:", v84);
  v76 = v35;
  v39 = v10;
  v71 = v10;
  v40 = v82;
  v82(v34, v6, v35);
  v41 = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, v38, v34, "View -> Sort By -> Title", 24, 2);
  v43 = v42;
  v85(v6, v35);
  v44 = v70;
  v45 = v81;
  v81(v13, v70);
  v86 = 0u;
  v87 = 0u;
  v46 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v41, v43, 0, 0, 0, 0, "books_sortByTitle:", &v86, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v80 + 40) = v46;
  v47 = String.LocalizationValue.init(stringLiteral:)(0x726F68747541, 0xE600000000000000);
  static Locale.current.getter(v47);
  v48 = v71;
  v49 = v44;
  v78(v71, v13, v44);
  v50 = objc_msgSend(v36, "bundleForClass:", v37);
  v51 = v79;
  v52 = v76;
  v40(v79, v6, v76);
  v53 = v48;
  v54 = String.init(localized:table:bundle:locale:comment:)(v48, 0, 0, v50, v51, "View -> Sort By -> Author", 25, 2);
  v56 = v55;
  v85(v6, v52);
  v45(v13, v49);
  v86 = 0u;
  v87 = 0u;
  v57 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v54, v56, 0, 0, 0, 0, "books_sortByAuthor:", &v86, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v58 = v80;
  *(_QWORD *)(v80 + 48) = v57;
  v59 = String.LocalizationValue.init(stringLiteral:)(0x796C6C61756E614DLL, 0xE800000000000000);
  static Locale.current.getter(v59);
  v78(v53, v13, v49);
  v60 = objc_msgSend(v83, "bundleForClass:", v84);
  v61 = v76;
  v82(v51, v6, v76);
  v62 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v60, v51, "View -> Sort By -> Manually", 27, 2);
  v64 = v63;
  v85(v6, v61);
  v81(v13, v49);
  v86 = 0u;
  v87 = 0u;
  v65 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v62, v64, 0, 0, 0, 0, "books_sortManually:", &v86, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v58 + 56) = v65;
  *(_QWORD *)&v86 = v58;
  specialized Array._endMutation()(v65);
  v66._object = v73;
  v66._countAndFlagsBits = v74;
  v88.value.super.isa = 0;
  v88.is_nil = v72;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v66, (Swift::String_optional)0, v88, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v86, v68);
}

UIMenu sub_10040E0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  id v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  Swift::OpaquePointer v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  void (*v102)(char *, char *, uint64_t);
  void (*v103)(char *, char *, uint64_t);
  id v104;
  __int128 v105;
  __int128 v106;
  UIImage_optional v107;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v90 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v90 - v12;
  v92 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CE460 != -1)
    swift_once(&qword_1009CE460, sub_10040CDFC);
  v14 = (void *)qword_1009E2450;
  v91 = qword_1009E2450;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v96 = swift_allocObject(v15, 80, 7);
  *(_OWORD *)(v96 + 16) = xmmword_10071C6F0;
  v100 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v16 = v14;
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007C81F0);
  static Locale.current.getter(v17);
  v103 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v103(v10, v13, v7);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v99 = ObjCClassFromMetadata;
  v104 = (id)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v104, "bundleForClass:", ObjCClassFromMetadata);
  v102 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v102(v3, v6, v0);
  v21 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v20, v3, "View -> Show Table of Contents", 30, 2);
  v23 = v22;
  v101 = *(void (**)(char *, uint64_t))(v1 + 8);
  v101(v6, v0);
  v98 = *(void (**)(char *, uint64_t))(v8 + 8);
  v98(v13, v7);
  v105 = 0u;
  v106 = 0u;
  v24 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21, v23, 0, "books_showTableOfContents:", 84, 0xE100000000000000, 0x100000, &v105, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v25 = v96;
  *(_QWORD *)(v96 + 32) = v24;
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6F6F4220776F6853, 0xEE00736B72616D6BLL);
  static Locale.current.getter(v26);
  v103(v10, v13, v7);
  v27 = v0;
  v28 = v7;
  v95 = v3;
  v29 = v10;
  v30 = v99;
  v31 = objc_msgSend(v104, "bundleForClass:", v99);
  v102(v3, v6, v27);
  v32 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v31, v3, "View -> Show Bookmarks", 22, 2);
  v34 = v33;
  v101(v6, v27);
  v90 = v28;
  v98(v13, v28);
  v105 = 0u;
  v106 = 0u;
  *(_QWORD *)(v25 + 40) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v32, v34, 0, "books_showBookmarks:", 68, 0xE100000000000000, 1179648, &v105, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v35 = v25;
  v36 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001007C8250);
  static Locale.current.getter(v36);
  v94 = v29;
  v37 = v103;
  v103(v29, v13, v28);
  v38 = objc_msgSend(v104, "bundleForClass:", v30);
  v39 = v95;
  v40 = v27;
  v97 = v27;
  v41 = v102;
  v102(v95, v6, v27);
  v42 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v38, v39, "View -> Show Highlights & Notes", 31, 2);
  v44 = v43;
  v101(v6, v40);
  v45 = v90;
  v98(v13, v90);
  v105 = 0u;
  v106 = 0u;
  *(_QWORD *)(v35 + 48) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v42, v44, 0, "books_showHighlightsAndNotes:", 78, 0xE100000000000000, 1179648, &v105, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v93 = v13;
  v46 = String.LocalizationValue.init(stringLiteral:)(0x75685420776F6853, 0xEF736C69616E626DLL);
  static Locale.current.getter(v46);
  v47 = v94;
  v48 = v13;
  v49 = v45;
  v37(v94, v48, v45);
  v50 = v99;
  v51 = objc_msgSend(v104, "bundleForClass:", v99);
  v52 = v97;
  v41(v39, v6, v97);
  v53 = String.init(localized:table:bundle:locale:comment:)(v47, 0, 0, v51, v39, "View -> Show Thumbnails", 23, 2);
  v55 = v54;
  v56 = v6;
  v57 = v101;
  v101(v6, v52);
  v58 = v93;
  v59 = v98;
  v98(v93, v49);
  v105 = 0u;
  v106 = 0u;
  *(_QWORD *)(v35 + 56) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v53, v55, 0, "books_showThumbnails:", 84, 0xE100000000000000, 1179648, &v105, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v60 = v58;
  v61 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007C82B0);
  v62 = v56;
  static Locale.current.getter(v61);
  v63 = v94;
  v64 = v60;
  v65 = v49;
  v103(v94, v64, v49);
  v66 = objc_msgSend(v104, "bundleForClass:", v50);
  v67 = v95;
  v68 = v97;
  v102(v95, v62, v97);
  v69 = v63;
  v70 = v67;
  v71 = String.init(localized:table:bundle:locale:comment:)(v63, 0, 0, v66, v67, "View -> Show Study Cards", 24, 2);
  v73 = v72;
  v57(v62, v68);
  v74 = v93;
  v59(v93, v65);
  v105 = 0u;
  v106 = 0u;
  v75 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v71, v73, 0, "books_showStudyCards:", 83, 0xE100000000000000, 1179648, &v105, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v76 = v96;
  *(_QWORD *)(v96 + 64) = v75;
  v77 = String.LocalizationValue.init(stringLiteral:)(0x6F6C4720776F6853, 0xED00007972617373);
  static Locale.current.getter(v77);
  v78 = v69;
  v103(v69, v74, v65);
  v79 = objc_msgSend(v104, "bundleForClass:", v99);
  v80 = v70;
  v81 = v70;
  v82 = v97;
  v102(v81, v62, v97);
  v83 = String.init(localized:table:bundle:locale:comment:)(v78, 0, 0, v79, v80, "View -> Show Glossary", 21, 2);
  v85 = v84;
  v101(v62, v82);
  v59(v74, v65);
  v105 = 0u;
  v106 = 0u;
  v86 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v83, v85, 0, "books_showGlossary:", 71, 0xE100000000000000, 1179648, &v105, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v76 + 72) = v86;
  *(_QWORD *)&v105 = v76;
  specialized Array._endMutation()(v86);
  v87._countAndFlagsBits = 0;
  v87._object = (void *)0xE000000000000000;
  v107.value.super.isa = 0;
  v107.is_nil = v91;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v87, (Swift::String_optional)0, v107, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v105, v89);
}

UIMenu sub_10040E9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  UIMenuElementSize v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  void *v75;
  void *v76;
  char v77;
  id v78;
  Swift::String v79;
  Swift::OpaquePointer v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, char *, uint64_t);
  id v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  UIImage_optional v97;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = v0;
  __chkstk_darwin(v0);
  v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v82 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v82 - v13;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v86 = swift_allocObject(v15, 64, 7);
  *(_OWORD *)(v86 + 16) = xmmword_1007143B0;
  v94 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v16 = String.LocalizationValue.init(stringLiteral:)(0x6574696857, 0xE500000000000000);
  static Locale.current.getter(v16);
  v91 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v91(v11, v14, v8);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v90 = ObjCClassFromMetadata;
  v89 = (id)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v89, "bundleForClass:", ObjCClassFromMetadata);
  v88 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v93 = v4;
  v85 = v2;
  v88(v4, v7, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v4, "View -> Theme -> White", 22, 2);
  v22 = v21;
  v92 = *(void (**)(char *, uint64_t))(v1 + 8);
  v92(v7, v2);
  v87 = *(void (**)(char *, uint64_t))(v9 + 8);
  v87(v14, v8);
  v95 = 0u;
  v96 = 0u;
  v23 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v20, v22, 0, 0, 0, 0, "books_setThemeWhite:", &v95, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v24 = v86;
  *(_QWORD *)(v86 + 32) = v23;
  v83 = v14;
  v25 = String.LocalizationValue.init(stringLiteral:)(0x6169706553, 0xE500000000000000);
  static Locale.current.getter(v25);
  v26 = v11;
  v84 = v11;
  v82 = v8;
  v27 = v91;
  v91(v11, v14, v8);
  v28 = v90;
  v29 = objc_msgSend(v89, "bundleForClass:", v90);
  v30 = v93;
  v31 = v85;
  v88(v93, v7, v85);
  v32 = String.init(localized:table:bundle:locale:comment:)(v26, 0, 0, v29, v30, "View -> Theme -> Sepia", 22, 2);
  v34 = v33;
  v35 = v92;
  v92(v7, v31);
  v36 = v83;
  v87(v83, v8);
  v95 = 0u;
  v96 = 0u;
  *(_QWORD *)(v24 + 40) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v32, v34, 0, 0, 0, 0, "books_setThemeSepia:", &v95, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v37 = v36;
  v38 = String.LocalizationValue.init(stringLiteral:)(2036429383, 0xE400000000000000);
  v39 = v7;
  static Locale.current.getter(v38);
  v40 = v84;
  v41 = v37;
  v42 = v82;
  v27(v84, v37, v82);
  v43 = v89;
  v44 = objc_msgSend(v89, "bundleForClass:", v28);
  v45 = v93;
  v46 = v85;
  v47 = v88;
  v88(v93, v39, v85);
  v48 = String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, v44, v45, "View -> Theme -> Gray", 21, 2);
  v50 = v49;
  v35(v39, v46);
  v51 = v41;
  v52 = v87;
  v87(v41, v42);
  v95 = 0u;
  v96 = 0u;
  v53 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v48, v50, 0, 0, 0, 0, "books_setThemeGray:", &v95, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v86 + 48) = v53;
  v54 = String.LocalizationValue.init(stringLiteral:)(0x6B63616C42, 0xE500000000000000);
  static Locale.current.getter(v54);
  v55 = v84;
  v91(v84, v41, v42);
  v56 = objc_msgSend(v43, "bundleForClass:", v90);
  v57 = v93;
  v58 = v39;
  v59 = v39;
  v60 = v85;
  v47(v93, v58, v85);
  v61 = v55;
  v62 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v56, v57, "View -> Theme -> Black", 22, 2);
  v64 = v63;
  v92(v59, v60);
  v65 = v42;
  v52(v51, v42);
  v95 = 0u;
  v96 = 0u;
  v66 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v62, v64, 0, 0, 0, 0, "books_setThemeNight:", &v95, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v67 = v86;
  *(_QWORD *)(v86 + 56) = v66;
  *(_QWORD *)&v95 = v67;
  specialized Array._endMutation()(v66);
  v68 = (uint64_t)v95;
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v69 = String.LocalizationValue.init(stringLiteral:)(0x656D656854, 0xE500000000000000);
  v70 = v59;
  static Locale.current.getter(v69);
  v71 = v65;
  v91(v61, v51, v65);
  v72 = objc_msgSend(v89, "bundleForClass:", v90);
  v73 = v93;
  v88(v93, v70, v60);
  v74 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v72, v73, "View -> Theme Menu", 18, 2);
  v76 = v75;
  v92(v70, v60);
  v87(v51, v71);
  if (qword_1009CE448 != -1)
    swift_once(&qword_1009CE448, sub_10040CD60);
  v77 = qword_1009E2438;
  v78 = (id)qword_1009E2438;
  v79._countAndFlagsBits = v74;
  v79._object = v76;
  v97.value.super.isa = 0;
  v97.is_nil = v77;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v79, (Swift::String_optional)0, v97, 0, 0xFFFFFFFFFFFFFFFFLL, v68, v81);
}

UIMenu sub_10040F124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  UIMenu *v15;
  uint64_t v16;
  UIMenuElementSize v17;
  UIMenuElementSize v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjCClassFromMetadata;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  Swift::String v40;
  UIMenu v41;
  UIMenu *v42;
  UIMenuElementSize v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  char v50;
  id v51;
  Swift::String v52;
  Swift::OpaquePointer v54;
  Swift::OpaquePointer v55;
  UIMenu v56;
  _QWORD v57[2];
  void (*v58)(char *, char *, uint64_t);
  id v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  UIMenu *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[2];
  UIImage_optional v68;
  UIImage_optional v69;
  UIImage_optional v70;

  v0 = type metadata accessor for Locale(0);
  v64 = *(_QWORD *)(v0 - 8);
  v65 = v0;
  __chkstk_darwin(v0);
  v63 = (char *)v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)v57 - v3;
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = v5;
  __chkstk_darwin(v5);
  v9 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v57 - v11;
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1007118C0;
  v15 = (UIMenu *)v14;
  v62 = (UIMenu *)v14;
  v66 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v16 = static BookThemeType.allCases.getter();
  sub_10040C900(v16, 1);
  v18 = v17;
  swift_bridgeObjectRelease(v16);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v68.value.super.isa = 0;
  v68.is_nil = 0;
  v15[4].super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v68, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v18, v54).super.super.isa;
  v20 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1007118F0;
  v57[1] = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x7A696D6F74737543, 0xEF656D6568542065);
  static Locale.current.getter(v21);
  v61 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v22 = v6;
  v23 = v9;
  v57[0] = v9;
  v24 = v9;
  v25 = v7;
  v61(v24, v12, v7);
  v26 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v26);
  v60 = ObjCClassFromMetadata;
  v59 = (id)objc_opt_self(NSBundle);
  v28 = objc_msgSend(v59, "bundleForClass:", ObjCClassFromMetadata);
  v29 = v63;
  v30 = v64;
  v58 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v31 = v65;
  v58(v63, v4, v65);
  v32 = v23;
  v33 = v29;
  v34 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, v28, v29, "View -> Theme -> Customize Theme", 32, 2);
  v36 = v35;
  v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v4, v31);
  v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  v38(v12, v25);
  memset(v67, 0, sizeof(v67));
  v39 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v34, v36, 0, "books_editTheme:", 44, 0xE100000000000000, 1310720, v67, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v20 + 32) = v39;
  *(_QWORD *)&v67[0] = v20;
  specialized Array._endMutation()(v39);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v69.value.super.isa = 0;
  v69.is_nil = 0;
  v41.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v69, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, *(UIMenuElementSize *)&v67[0], v55).super.super.isa;
  v42 = v62;
  v62[5].super.super.isa = v41.super.super.isa;
  *(_QWORD *)&v67[0] = v42;
  specialized Array._endMutation()(v41.super.super.isa);
  v43 = *(_QWORD *)&v67[0];
  v44 = String.LocalizationValue.init(stringLiteral:)(0x656D656854, 0xE500000000000000);
  static Locale.current.getter(v44);
  v45 = v57[0];
  v61((char *)v57[0], v12, v25);
  v46 = objc_msgSend(v59, "bundleForClass:", v60);
  v58(v33, v4, v31);
  v47 = String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v46, v33, "View -> Theme Menu", 18, 2);
  v49 = v48;
  v37(v4, v31);
  v38(v12, v25);
  if (qword_1009CE448 != -1)
    swift_once(&qword_1009CE448, sub_10040CD60);
  v50 = qword_1009E2438;
  v51 = (id)qword_1009E2438;
  v52._countAndFlagsBits = v47;
  v52._object = v49;
  v70.value.super.isa = 0;
  v70.is_nil = v50;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v52, (Swift::String_optional)0, v70, 0, 0xFFFFFFFFFFFFFFFFLL, v43, (Swift::OpaquePointer)v56.super.super.isa);
}

UIMenu sub_10040F5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  UIMenu v41;
  uint64_t v42;
  Swift::String v43;
  Swift::OpaquePointer v45;
  Swift::OpaquePointer v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  id v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  __int128 v60;
  __int128 v61;
  UIImage_optional v62;
  UIImage_optional v63;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  v53 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v14 = String.LocalizationValue.init(stringLiteral:)(0x656E746867697242, 0xEA00000000007373);
  static Locale.current.getter(v14);
  v59 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v59(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v57 = (id)objc_opt_self(NSBundle);
  v58 = ObjCClassFromMetadata;
  v17 = objc_msgSend(v57, "bundleForClass:", ObjCClassFromMetadata);
  v56 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v56(v3, v6, v0);
  v18 = v10;
  v19 = v10;
  v20 = v3;
  v21 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v17, v3, "View -> Brightness Menu", 23, 2);
  v51 = v22;
  v52 = v21;
  v23 = v0;
  v55 = *(void (**)(char *, uint64_t))(v1 + 8);
  v55(v6, v0);
  v54 = *(void (**)(char *, uint64_t))(v8 + 8);
  v54(v13, v7);
  if (qword_1009CE458 != -1)
    swift_once(&qword_1009CE458, sub_10040CDC8);
  v24 = (void *)qword_1009E2448;
  v49 = qword_1009E2448;
  v25 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v50 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v50 + 16) = xmmword_1007118F0;
  v48 = swift_allocObject(v25, 48, 7);
  *(_OWORD *)(v48 + 16) = xmmword_1007118C0;
  sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v26 = v24;
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007C8000);
  static Locale.current.getter(v27);
  v59(v18, v13, v7);
  v28 = objc_msgSend(v57, "bundleForClass:", v58);
  v56(v20, v6, v0);
  v29 = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, v28, v20, "View -> Brightness -> Increase Brightness", 41, 2);
  v31 = v30;
  v55(v6, v0);
  v54(v13, v7);
  v60 = 0u;
  v61 = 0u;
  v32 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, "books_increaseBrightness:", 43, 0xE100000000000000, 1572864, &v60, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v33 = v48;
  *(_QWORD *)(v48 + 32) = v32;
  v34 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007C8050);
  static Locale.current.getter(v34);
  v59(v18, v13, v7);
  v35 = objc_msgSend(v57, "bundleForClass:", v58);
  v56(v20, v6, v0);
  v36 = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, v35, v20, "View -> Brightness -> Decrease Brightness", 41, 2);
  v38 = v37;
  v55(v6, v23);
  v54(v13, v7);
  v60 = 0u;
  v61 = 0u;
  v39 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v36, v38, 0, "books_decreaseBrightness:", 45, 0xE100000000000000, 1572864, &v60, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v33 + 40) = v39;
  *(_QWORD *)&v60 = v33;
  specialized Array._endMutation()(v39);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v62.value.super.isa = 0;
  v62.is_nil = 0;
  v41.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v62, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v60, v45).super.super.isa;
  v42 = v50;
  *(UIMenu *)(v50 + 32) = v41;
  *(_QWORD *)&v60 = v42;
  specialized Array._endMutation()(v41.super.super.isa);
  v43._object = v51;
  v43._countAndFlagsBits = v52;
  v63.value.super.isa = 0;
  v63.is_nil = v49;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v43, (Swift::String_optional)0, v63, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v60, v46);
}

UIMenu sub_10040FB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::OpaquePointer v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  id v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  UIImage_optional v49;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v45 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CE440 != -1)
    swift_once(&qword_1009CE440, sub_10040CD2C);
  v14 = (void *)qword_1009E2430;
  v44 = qword_1009E2430;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v43 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1007118C0;
  v46 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v16 = v14;
  v17 = String.LocalizationValue.init(stringLiteral:)(0x7275542065676150, 0xEC000000676E696ELL);
  static Locale.current.getter(v17);
  v42 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v42(v10, v13, v7);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v41 = ObjCClassFromMetadata;
  v40 = (id)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v40, "bundleForClass:", ObjCClassFromMetadata);
  v39 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v39(v3, v6, v0);
  v21 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v20, v3, "View -> Page Turning", 20, 2);
  v22 = v1;
  v24 = v23;
  v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  v38(v6, v0);
  v37 = *(void (**)(char *, uint64_t))(v8 + 8);
  v37(v13, v7);
  v47 = 0u;
  v48 = 0u;
  v25 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21, v24, 0, 0, 0, 0, "books_disableContinuousScroll:", &v47, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v26 = v43;
  *(_QWORD *)(v43 + 32) = v25;
  v27 = String.LocalizationValue.init(stringLiteral:)(0x6E696C6C6F726353, 0xE900000000000067);
  static Locale.current.getter(v27);
  v42(v10, v13, v7);
  v28 = objc_msgSend(v40, "bundleForClass:", v41);
  v39(v3, v6, v0);
  v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v28, v3, "View -> Scrolling", 17, 2);
  v31 = v30;
  v38(v6, v0);
  v37(v13, v7);
  v47 = 0u;
  v48 = 0u;
  v32 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, 0, 0, 0, "books_enableContinuousScroll:", &v47, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v26 + 40) = v32;
  *(_QWORD *)&v47 = v26;
  specialized Array._endMutation()(v32);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v49.value.super.isa = 0;
  v49.is_nil = v44;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v49, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v47, v35);
}

UIMenu sub_10040FF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::OpaquePointer v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  id v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  UIImage_optional v49;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v45 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CE438 != -1)
    swift_once(&qword_1009CE438, sub_10040CCF8);
  v14 = (void *)qword_1009E2428;
  v44 = qword_1009E2428;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v43 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1007118C0;
  v46 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v16 = v14;
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007C7EA0);
  static Locale.current.getter(v17);
  v42 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v42(v10, v13, v7);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v41 = ObjCClassFromMetadata;
  v40 = (id)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v40, "bundleForClass:", ObjCClassFromMetadata);
  v39 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v39(v3, v6, v0);
  v21 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v20, v3, "View -> Digital Book Page Numbers", 33, 2);
  v22 = v1;
  v24 = v23;
  v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  v38(v6, v0);
  v37 = *(void (**)(char *, uint64_t))(v8 + 8);
  v37(v13, v7);
  v47 = 0u;
  v48 = 0u;
  v25 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21, v24, 0, 0, 0, 0, "books_showDigitalPageNumbers:", &v47, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v26 = v43;
  *(_QWORD *)(v43 + 32) = v25;
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007C7EF0);
  static Locale.current.getter(v27);
  v42(v10, v13, v7);
  v28 = objc_msgSend(v40, "bundleForClass:", v41);
  v39(v3, v6, v0);
  v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v28, v3, "View -> Print Edition Page Numbers", 34, 2);
  v31 = v30;
  v38(v6, v0);
  v37(v13, v7);
  v47 = 0u;
  v48 = 0u;
  v32 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v29, v31, 0, 0, 0, 0, "books_showPrintedPageNumbers:", &v47, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v26 + 40) = v32;
  *(_QWORD *)&v47 = v26;
  specialized Array._endMutation()(v32);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v49.value.super.isa = 0;
  v49.is_nil = v44;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v49, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v47, v35);
}

UIMenu sub_100410348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Swift::OpaquePointer v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  id v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  UIImage_optional v53;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  v43 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  if (qword_1009CE430 != -1)
    swift_once(&qword_1009CE430, sub_10040CCC4);
  v14 = (void *)qword_1009E2420;
  v42 = qword_1009E2420;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v41 = swift_allocObject(v15, 56, 7);
  *(_OWORD *)(v41 + 16) = xmmword_1007118D0;
  v44 = sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  v16 = v14;
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007C7DA0);
  static Locale.current.getter(v17);
  v45 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v45(v10, v13, v7);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v50 = ObjCClassFromMetadata;
  v49 = (id)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v49, "bundleForClass:", ObjCClassFromMetadata);
  v48 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v48(v3, v6, v0);
  v21 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v20, v3, "View -> Reset Font Size to Default", 34, 2);
  v23 = v22;
  v47 = *(void (**)(char *, uint64_t))(v1 + 8);
  v47(v6, v0);
  v46 = *(void (**)(char *, uint64_t))(v8 + 8);
  v46(v13, v7);
  v51 = 0u;
  v52 = 0u;
  v24 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21, v23, 0, "books_resetSize:", 48, 0xE100000000000000, 0x100000, &v51, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v25 = v41;
  *(_QWORD *)(v41 + 32) = v24;
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007C7DF0);
  static Locale.current.getter(v26);
  v45(v10, v13, v7);
  v27 = objc_msgSend(v49, "bundleForClass:", v50);
  v48(v3, v6, v0);
  v28 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v27, v3, "View -> Increase Font Size", 26, 2);
  v30 = v29;
  v47(v6, v0);
  v46(v13, v7);
  v51 = 0u;
  v52 = 0u;
  *(_QWORD *)(v25 + 40) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v28, v30, 0, "books_increaseSize:", 43, 0xE100000000000000, 0x100000, &v51, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007C7E30);
  static Locale.current.getter(v31);
  v45(v10, v13, v7);
  v32 = objc_msgSend(v49, "bundleForClass:", v50);
  v48(v3, v6, v0);
  v33 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v32, v3, "View -> Decrease Font Size", 26, 2);
  v35 = v34;
  v47(v6, v0);
  v46(v13, v7);
  v51 = 0u;
  v52 = 0u;
  v36 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v33, v35, 0, "books_decreaseSize:", 45, 0xE100000000000000, 0x100000, &v51, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v25 + 48) = v36;
  *(_QWORD *)&v51 = v25;
  specialized Array._endMutation()(v36);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v53.value.super.isa = 0;
  v53.is_nil = v42;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v53, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v51, v39);
}

double sub_10041086C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  UIMenuIdentifier v8;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  UIMenu v19;
  const UIMenuIdentifier *v20;
  char *v21;
  uint64_t v22;
  UIMenu v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  UIMenu v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  UIMenu v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  UIMenu v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  UIMenu v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjCClassFromMetadata;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  UIMenuElementSize v57;
  UIMenuElementSize v58;
  Swift::String v59;
  UIMenu v60;
  Swift::String v61;
  UIMenu v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  UIMenu v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  UIMenu v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  UIMenu v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  UIMenu v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v85;
  double result;
  uint64_t v87;
  Swift::OpaquePointer v88;
  Swift::OpaquePointer v89;
  _QWORD v90[3];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  UIMenuElementSize v94;
  uint64_t v95;
  uint64_t v96;
  UIImage_optional v97;
  UIImage_optional v98;

  v2 = type metadata accessor for Locale(0);
  v92 = *(_QWORD *)(v2 - 8);
  v93 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v90 - v6;
  v8 = (UIMenuIdentifier)type metadata accessor for String.LocalizationValue(0);
  v91 = (uint64_t)*(v8 - 1);
  __chkstk_darwin(v8);
  v10 = (char **)((char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (objc_class *)((char *)v90 - v12);
  v90[1] = swift_getObjectType();
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuToolbar);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuTextSize);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuSidebar);
  v14 = sub_10040CE64();
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    v17 = (uint64_t *)(v14 + 32);
    do
    {
      v18 = *v17++;
      objc_msgSend(a1, "removeMenuForIdentifier:", v18);
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease(v15);
  v95 = (uint64_t)_swiftEmptyArrayStorage;
  v96 = (uint64_t)_swiftEmptyArrayStorage;
  v19.super.super.isa = sub_10040D110().super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19.super.super.isa);
  v21 = *(char **)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(const UIMenuIdentifier **)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v21 >= (unint64_t)v20 >> 1)
    goto LABEL_42;
  while (1)
  {
    v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19.super.super.isa);
    specialized Array._endMutation()(v22);
    v23.super.super.isa = sub_10040D5B4().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23.super.super.isa);
    v25 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23.super.super.isa);
    specialized Array._endMutation()(v26);
    v27.super.super.isa = sub_10040D9DC().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27.super.super.isa);
    v29 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27.super.super.isa);
    specialized Array._endMutation()(v30);
    v31.super.super.isa = sub_10040E0F0().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31.super.super.isa);
    v33 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31.super.super.isa);
    specialized Array._endMutation()(v34);
    v35.super.super.isa = sub_10040E9E8().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35.super.super.isa);
    v37 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35.super.super.isa);
    specialized Array._endMutation()(v38);
    v39.super.super.isa = sub_10040F124().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39.super.super.isa);
    v41 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v40 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v41 >= v40 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39.super.super.isa);
    specialized Array._endMutation()(v42);
    v90[2] = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v43 = String.LocalizationValue.init(stringLiteral:)(0x6E61726165707041, 0xEA00000000006563);
    static Locale.current.getter(v43);
    v19.super.super.isa = v13;
    v44 = v91;
    (*(void (**)(char **, Class, UIMenuIdentifier))(v91 + 16))(v10, v19.super.super.isa, v8);
    v45 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v45);
    v47 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v49 = v92;
    v48 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v4, v7, v93);
    v50 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v47, v4, "View -> Appearance Menu", 23, 2);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v48);
    (*(void (**)(Class, UIMenuIdentifier))(v44 + 8))(v19.super.super.isa, v8);
    if (qword_1009CE450 != -1)
      swift_once(&qword_1009CE450, sub_10040CD94);
    v53 = (void *)qword_1009E2440;
    v54 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v55 = swift_allocObject(v54, 40, 7);
    *(_OWORD *)(v55 + 16) = xmmword_1007118F0;
    v56 = static ThemeAppearance.availableCases.getter(v53);
    sub_10040CA94(v56, 1);
    v58 = v57;
    swift_bridgeObjectRelease(v56);
    v59._countAndFlagsBits = 0;
    v59._object = (void *)0xE000000000000000;
    v97.value.super.isa = 0;
    v97.is_nil = 0;
    v60.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v59, (Swift::String_optional)0, v97, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v58, v88).super.super.isa;
    *(UIMenu *)(v55 + 32) = v60;
    v94 = v55;
    specialized Array._endMutation()(v60.super.super.isa);
    v61._countAndFlagsBits = v50;
    v61._object = v52;
    v98.value.super.isa = 0;
    v98.is_nil = (char)v53;
    v62.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v61, (Swift::String_optional)0, v98, 0, 0xFFFFFFFFFFFFFFFFLL, v94, v89).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62.super.super.isa);
    v64 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v63 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v64 >= v63 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
    v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62.super.super.isa);
    specialized Array._endMutation()(v65);
    v66.super.super.isa = sub_10040F5C4().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v66.super.super.isa);
    v68 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v67 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v68 >= v67 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
    v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v66.super.super.isa);
    specialized Array._endMutation()(v69);
    v70.super.super.isa = sub_10040FB00().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70.super.super.isa);
    v72 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v71 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v72 >= v71 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
    v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70.super.super.isa);
    specialized Array._endMutation()(v73);
    v74.super.super.isa = sub_10040FF24().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74.super.super.isa);
    v76 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v75 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v76 >= v75 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
    v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v74.super.super.isa);
    specialized Array._endMutation()(v77);
    v78.super.super.isa = sub_100410348().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78.super.super.isa);
    v21 = *(char **)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v79 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v21 >= v79 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v21 + 1, 1);
    v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v78.super.super.isa);
    specialized Array._endMutation()(v80);
    v81 = v95;
    if (!((unint64_t)v95 >> 62))
    {
      v82 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v82)
        break;
      goto LABEL_29;
    }
    v87 = v95 < 0 ? v95 : v95 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v95);
    v82 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v81);
    if (!v82)
      break;
LABEL_29:
    v7 = (char *)(v81 & 0xC000000000000001);
    v4 = (char *)(v81 & 0xFFFFFFFFFFFFFF8);
    v13 = (objc_class *)(v81 + 32);
    v20 = &UIMenuView;
    v8 = UIMenuView;
    v10 = &selRef__mediaLibraryDidChange_;
    while (1)
    {
      if (__OFSUB__(v82--, 1))
      {
        __break(1u);
LABEL_38:
        swift_bridgeObjectRelease(v81);
        goto LABEL_39;
      }
      if (v7)
      {
        v83 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v81);
        goto LABEL_31;
      }
      if ((v82 & 0x8000000000000000) != 0)
        break;
      v20 = *(const UIMenuIdentifier **)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v82 >= (unint64_t)v20)
        goto LABEL_41;
      v83 = (char *)*((id *)v13 + v82);
LABEL_31:
      v21 = v83;
      objc_msgSend(a1, "insertSiblingMenu:afterMenuForIdentifier:", v83, UIMenuView);

      if (!v82)
        goto LABEL_38;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((unint64_t)v20 > 1, v21 + 1, 1);
  }
  swift_bridgeObjectRelease(v81);
  v8 = UIMenuView;
LABEL_39:
  v85 = v96;
  sub_1001F5D3C(v96, (uint64_t)v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v85).n128_u64[0];
  return result;
}

void sub_100411014(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;

  v6 = v5;
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "addSubview:", a1);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1007143B0;
  v14 = objc_msgSend(a1, "topAnchor");
  v15 = objc_msgSend(v6, "topAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, a2);

  *(_QWORD *)(v13 + 32) = v16;
  v17 = objc_msgSend(a1, "leadingAnchor");
  v18 = objc_msgSend(v6, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, a3);

  *(_QWORD *)(v13 + 40) = v19;
  v20 = objc_msgSend(v6, "bottomAnchor");
  v21 = objc_msgSend(a1, "bottomAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, a4);

  *(_QWORD *)(v13 + 48) = v22;
  v23 = objc_msgSend(v6, "trailingAnchor");
  v24 = objc_msgSend(a1, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, a5);

  *(_QWORD *)(v13 + 56) = v25;
  specialized Array._endMutation()(v26);
  sub_10034132C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "addConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

}

double sub_1004112E4()
{
  void *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  double v10;
  double Width;
  id v12;
  double v13;
  double v14;
  id v15;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, "center");
  v10 = v9;
  v17.origin.x = v2;
  v17.origin.y = v4;
  v17.size.width = v6;
  v17.size.height = v8;
  Width = CGRectGetWidth(v17);
  v12 = objc_msgSend(v0, "layer");
  objc_msgSend(v12, "anchorPoint");
  v14 = v13;

  v18.origin.x = v2;
  v18.origin.y = v4;
  v18.size.width = v6;
  v18.size.height = v8;
  CGRectGetHeight(v18);
  v15 = objc_msgSend(v0, "layer");
  objc_msgSend(v15, "anchorPoint");

  v19.origin.x = v2;
  v19.origin.y = v4;
  v19.size.width = v6;
  v19.size.height = v8;
  CGRectGetWidth(v19);
  v20.origin.x = v2;
  v20.origin.y = v4;
  v20.size.width = v6;
  v20.size.height = v8;
  CGRectGetHeight(v20);
  return v10 - Width * v14;
}

id sub_100411494(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  double MinX;
  double Width;
  id v11;
  double v12;
  double v13;
  double v14;
  double MinY;
  double Height;
  id v17;
  double v18;
  double v19;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  MinX = CGRectGetMinX(*(CGRect *)&a1);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  Width = CGRectGetWidth(v21);
  v11 = objc_msgSend(v4, "layer");
  objc_msgSend(v11, "anchorPoint");
  v13 = v12;

  v14 = MinX + Width * v13;
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  MinY = CGRectGetMinY(v22);
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  Height = CGRectGetHeight(v23);
  v17 = objc_msgSend(v4, "layer");
  objc_msgSend(v17, "anchorPoint");
  v19 = v18;

  objc_msgSend(v4, "setCenter:", v14, MinY + Height * v19);
  objc_msgSend(v4, "bounds");
  return objc_msgSend(v4, "setBounds:");
}

double sub_1004115D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  v3 = *v1;
  v4 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(&v11, v3, 0, 0, 1, v4, v5);
  v6 = v11;
  v7 = v12;
  v8 = v13;
  v9 = v14;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  result = *(double *)&v15;
  *(_OWORD *)(a1 + 40) = v15;
  return result;
}

void sub_100411648()
{
  qword_100A1E898 = 0x4034000000000000;
}

void sub_100411658()
{
  qword_100A1E8A0 = 0x4014000000000000;
}

uint64_t sub_100411668()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E2468);
  sub_100048F64(v0, (uint64_t)qword_1009E2468);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000020, 0x80000001007C8570);
}

uint64_t sub_1004116D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  double v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  uint64_t v33;
  uint64_t v34;

  v34 = a5;
  v13 = (int *)type metadata accessor for ChapterScrubbingView(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v15 = swift_getKeyPath(&unk_1007230A0);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = sub_10003F198(a3, a3[3]);
  Strong = swift_weakLoadStrong(*v17 + 96);
  if (Strong)
  {
    v19 = Strong;
    v20 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(Strong);
    v22 = v21;
    ObjectType = swift_getObjectType();
    v24 = dispatch thunk of BookContentLayoutProviding.contentSize.getter(ObjectType, v22);
    v26 = v25;
    swift_release(v19);
    swift_unknownObjectRelease(v20);
  }
  else
  {
    v24 = 0.0;
    v26 = 0;
  }
  *(_QWORD *)((char *)v15 + v13[5]) = a1;
  v27 = (_QWORD *)((char *)v15 + v13[6]);
  v28 = type metadata accessor for ChapterScrubbingState(0);
  v29 = sub_100008DB0(&qword_1009E2480, type metadata accessor for ChapterScrubbingState, (uint64_t)&protocol conformance descriptor for ChapterScrubbingState);
  *v27 = ObservedObject.init(wrappedValue:)(a2, v28, v29);
  v27[1] = v30;
  *(_QWORD *)((char *)v15 + v13[8]) = a4;
  sub_10002E418((uint64_t)a3, (uint64_t)v15 + v13[7]);
  v31 = (double *)((char *)v15 + v13[9]);
  *v31 = 0.0;
  v31[1] = a7;
  v31[2] = v24;
  *((_QWORD *)v31 + 3) = v26;
  *(_QWORD *)((char *)v15 + v13[10]) = v34;
  sub_1004118E4((uint64_t)v15, a6);
  return _s5Books15CurrentPageViewVwxx_0(a3);
}

uint64_t type metadata accessor for ChapterScrubbingView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E24E0;
  if (!qword_1009E24E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChapterScrubbingView);
  return result;
}

uint64_t sub_1004118E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChapterScrubbingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100411928(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = v16;
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)a1 + v20 + 24) = v23;
    v24 = v23;
    v25 = **(void (***)(char *, char *, uint64_t, __n128))(v23 - 8);
    swift_retain(v16);
    v26 = swift_retain(v19);
    v25(v21, v22, v24, v26);
    v27 = a3[8];
    v28 = a3[9];
    v29 = *(void **)((char *)a2 + v27);
    *(uint64_t *)((char *)a1 + v27) = (uint64_t)v29;
    v30 = (_OWORD *)((char *)a1 + v28);
    v31 = (_OWORD *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[10];
    v34 = *(void **)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + v33) = (uint64_t)v34;
    v35 = v29;
    v36 = v34;
  }
  return a1;
}

void sub_100411A8C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5]));
  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)a1 + a2[7]));

}

uint64_t *sub_100411B30(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = *(uint64_t *)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = v14;
  v15 = (uint64_t *)((char *)a1 + v13);
  v16 = (uint64_t *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_OWORD *)((char *)a2 + v18 + 24);
  *(_OWORD *)((char *)a1 + v18 + 24) = v21;
  v22 = v21;
  v23 = **(void (***)(char *, char *, uint64_t, __n128))(v21 - 8);
  swift_retain(v14);
  v24 = swift_retain(v17);
  v23(v19, v20, v22, v24);
  v25 = a3[8];
  v26 = a3[9];
  v27 = *(void **)((char *)a2 + v25);
  *(uint64_t *)((char *)a1 + v25) = (uint64_t)v27;
  v28 = (_OWORD *)((char *)a1 + v26);
  v29 = (_OWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[10];
  v32 = *(void **)((char *)a2 + v31);
  *(uint64_t *)((char *)a1 + v31) = (uint64_t)v32;
  v33 = v27;
  v34 = v32;
  return a1;
}

uint64_t *sub_100411C68(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, (uint64_t *)&unk_1009D8200);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = *(uint64_t *)((char *)a2 + v12);
  v14 = *(uint64_t *)((char *)a1 + v12);
  *(uint64_t *)((char *)a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[6];
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_retain(v18);
  swift_release(v19);
  sub_1001EAB00((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]));
  v20 = a3[8];
  v21 = *(void **)((char *)a2 + v20);
  v22 = *(void **)((char *)a1 + v20);
  *(uint64_t *)((char *)a1 + v20) = (uint64_t)v21;
  v23 = v21;

  v24 = a3[9];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  v25[2] = v26[2];
  v25[3] = v26[3];
  v27 = a3[10];
  v28 = *(void **)((char *)a2 + v27);
  v29 = *(void **)((char *)a1 + v27);
  *(uint64_t *)((char *)a1 + v27) = (uint64_t)v28;
  v30 = v28;

  return a1;
}

char *sub_100411DD4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = a3[8];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *(_OWORD *)v12;
  v14 = *((_OWORD *)v12 + 1);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v15 = a3[9];
  v16 = a3[10];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  return a1;
}

char *sub_100411EC4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  void *v27;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, (uint64_t *)&unk_1009D8200);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = *(_QWORD *)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release(v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v14 = *(_QWORD *)v12;
  v13 = *((_QWORD *)v12 + 1);
  v15 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v11 = v14;
  *((_QWORD *)v11 + 1) = v13;
  swift_release(v15);
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  _s5Books15CurrentPageViewVwxx_0(&a1[v16]);
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  v20 = a3[8];
  v21 = *(void **)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];

  v22 = a3[9];
  v23 = a3[10];
  v24 = &a1[v22];
  v25 = &a2[v22];
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  v27 = *(void **)&a1[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];

  return a1;
}

uint64_t sub_10041200C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100412018);
}

uint64_t sub_100412018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100412098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004120A4);
}

uint64_t sub_1004120A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_100412120(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = &unk_1007230E8;
    v4[3] = &unk_100723100;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = &unk_100723118;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t sub_1004121C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008709AC, 1);
}

uint64_t sub_1004121D4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  BOOL v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];

  v3 = v2;
  v58 = type metadata accessor for GeometryProxy(0);
  v55 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v56 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v6;
  v7 = type metadata accessor for ChapterScrubbingView(0);
  v53 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v54 = v8;
  v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD **)(v2 + *(int *)(v10 + 20));
  KeyPath = swift_getKeyPath(&unk_100723180);
  v59[0] = v11;
  v13 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v59, KeyPath, v13);
  swift_release(KeyPath);
  if ((v11[41] & 0x8000000000000000) != 0)
  {
    v16 = swift_getKeyPath(&unk_1007231A8);
    v59[0] = v11;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v59, v16, v13);
    swift_release(v16);
    v15 = (double *)(v11 + 38);
  }
  else
  {
    v14 = swift_getKeyPath(&unk_100723238);
    v59[0] = v11;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v59, v14, v13);
    swift_release(v14);
    v15 = (double *)(v11 + 39);
  }
  v17 = *v15;
  sub_10003F198((_QWORD *)(v2 + *(int *)(v7 + 28)), *(_QWORD *)(v2 + *(int *)(v7 + 28) + 24));
  BookActionMenuDataSource.isRightToLeft()();
  if (qword_1009CE478 != -1)
    swift_once(&qword_1009CE478, sub_100411658);
  v18 = fabs(v17) / 0.3;
  v19 = v18 * 3.14159265 * 0.5;
  v20 = v18 <= 1.0;
  v21 = 1.57079633;
  if (v20)
    v21 = v19;
  sin(v21);
  v22 = *(_QWORD *)(v2 + *(int *)(v7 + 24) + 8);
  v23 = swift_getKeyPath(&unk_1007231D0);
  v24 = swift_getKeyPath(&unk_1007231F8);
  swift_retain(v22);
  static Published.subscript.getter(v59, v25, v23);
  swift_release(v22);
  swift_release(v23);
  swift_release(v24);
  v26 = v59[0];
  v27 = *(_QWORD *)(v59[0] + 16);
  v28 = a1;
  GeometryProxy.size.getter(v29);
  sub_100412770();
  v31 = v30;
  sub_100412908();
  v33 = v32;
  swift_bridgeObjectRelease(v26);
  *a2 = static Alignment.center.getter(v34);
  a2[1] = v35;
  v52[1] = (char *)a2 + *(int *)(sub_10004CFD4(&qword_1009E2530) + 44);
  v59[0] = 0;
  v59[1] = v27;
  v36 = swift_getKeyPath(&unk_100723220);
  sub_10002CD84(v3, (uint64_t)v9, type metadata accessor for ChapterScrubbingView);
  v37 = v55;
  v38 = v56;
  v39 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v56, v28, v58);
  v40 = *(unsigned __int8 *)(v53 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = *(unsigned __int8 *)(v37 + 80);
  v43 = (v54 + v42 + v41) & ~v42;
  v44 = (v57 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = swift_allocObject(&unk_100904C50, v45 + 8, v40 | v42 | 7);
  sub_1004118E4((uint64_t)v9, v46 + v41);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v46 + v43, v38, v39);
  *(_QWORD *)(v46 + v44) = v31;
  *(_QWORD *)(v46 + v45) = v33;
  v47 = sub_10004CFD4(&qword_1009E2538);
  v48 = sub_10004CFD4(&qword_1009E2540);
  v49 = sub_100414820();
  v50 = sub_100414884();
  return ForEach<>.init(_:id:content:)(v59, v36, sub_100414788, v46, v47, v48, v49, &protocol witness table for Int, v50);
}

double sub_100412628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  double v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChapterScrubbingView(0) + 20));
  KeyPath = swift_getKeyPath(&unk_100723180);
  v12 = v1;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v1 + 328);
  v5 = v4 >> 62;
  v6 = 0.0;
  if (v4 != 0x8000000000000008 || (_DWORD)v5 != 2)
  {
    v6 = 3.0;
    if (v5 >= 2)
    {
      v8 = swift_getKeyPath(&unk_1007232B8);
      v12 = v1;
      sub_10028C678(v4);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, v8, v3);
      swift_release(v8);
      v9 = *(_QWORD *)(v1 + 272);
      v10 = *(unsigned __int8 *)(v1 + 280);
      sub_100300604(v9, *(_BYTE *)(v1 + 280));
      sub_10028C694(v4);
      if (v10)
      {
        if (v10 == 1)
          sub_100309A54(v9, 1);
        else
          return 0.0;
      }
    }
  }
  return v6;
}

void sub_100412770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChapterScrubbingView(0) + 20));
  KeyPath = swift_getKeyPath(&unk_100723180);
  v8 = v1;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v1 + 328);
  v5 = v4 >> 62;
  if (v4 != 0x8000000000000008 || (_DWORD)v5 != 2)
  {
    if (v5 > 1)
    {
      v7 = swift_getKeyPath(&unk_1007232B8);
      v8 = v1;
      sub_10028C678(v4);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, v7, v3);
      swift_release(v7);
      sub_10028C694(v4);
    }
    else
    {
      sub_10028C678(*(_QWORD *)(v1 + 328));
      if (qword_1009CE470 != -1)
        swift_once(&qword_1009CE470, sub_100411648);
      sub_10028C694(v4);
    }
  }
}

void sub_100412908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ChapterScrubbingView(0) + 20));
  KeyPath = swift_getKeyPath(&unk_100723180);
  v4 = v1;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v3);
  swift_release(KeyPath);
  if ((*(_QWORD *)(v1 + 328) & 0x8000000000000000) != 0)
  {
    if (qword_1009CE478 != -1)
      swift_once(&qword_1009CE478, sub_100411658);
  }
  else if (qword_1009CE470 != -1)
  {
    swift_once(&qword_1009CE470, sub_100411648);
  }
}

_QWORD *sub_100412A38(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  double v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;

  v5 = result[2];
  if ((unint64_t)v5 < 3)
  {
    v7 = 0.7;
  }
  else
  {
    v15 = 0x4000000000000000;
    v16 = (double)(v5 - 1);
    v17 = (double)v5;
    v14 = xmmword_100723070;
    v6 = sub_100414C74();
    result = FloatingPoint.normalize(from:to:clamp:)(&v18, &v15, &v14, 1, &type metadata for Double, v6);
    v7 = v18;
  }
  v17 = (double)a2;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = (double)a3;
    v9 = 0.05 / v7;
    v15 = 0;
    v16 = (double)a3;
    v14 = xmmword_100723080;
    v10 = sub_100414C74();
    FloatingPoint.normalize(from:to:clamp:)(&v18, &v15, &v14, 1, &type metadata for Double, v10);
    v11 = v18;
    v16 = v8;
    v17 = (double)a2;
    v15 = 0;
    v14 = xmmword_100723090;
    FloatingPoint.normalize(from:to:clamp:)(&v18, &v15, &v14, 1, &type metadata for Double, v10);
    v12 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, v11, v18, 0.0);
    v13 = Animation.delay(_:)(v12, v9 * (double)a2);
    swift_release(v12);
    return (_QWORD *)v13;
  }
  return result;
}

void sub_100412BB0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v11;
  uint64_t v12;

  v11 = *a1;
  v12 = type metadata accessor for ChapterScrubbingView(0);
  sub_100412C20(v11, a3, a4, a5, a6, *(double *)(a2 + *(int *)(v12 + 36)), *(double *)(a2 + *(int *)(v12 + 36) + 8), *(double *)(a2 + *(int *)(v12 + 36) + 16), *(double *)(a2 + *(int *)(v12 + 36) + 24));
}

void sub_100412C20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Swift::Bool v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  _QWORD *v57;
  uint64_t Strong;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t ObjectType;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  int v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _BOOL4 v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90[2];

  v12 = v9;
  v22 = type metadata accessor for ChapterScrubbingView(0);
  __chkstk_darwin(v22);
  v88 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD **)(v9 + *(int *)(v24 + 24) + 8);
  KeyPath = swift_getKeyPath(&unk_1007231D0);
  v27 = swift_getKeyPath(&unk_1007231F8);
  swift_retain(v25);
  static Published.subscript.getter(v90, v28, KeyPath);
  swift_release(v25);
  swift_release(KeyPath);
  swift_release(v27);
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v25 = (_QWORD *)v90[0];
  v29 = *(_QWORD *)(v90[0] + 16);
  if (v29 <= a1)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    swift_once(&qword_1009CE480, sub_100411668);
    goto LABEL_10;
  }
  v85 = a3;
  v86 = a2;
  v30 = *(_QWORD *)(v90[0] + 8 * a1 + 32);
  v10 = v29 - 1;
  v11 = (_QWORD *)(v12 + *(int *)(v22 + 28));
  sub_10003F198(v11, v11[3]);
  v31 = BookActionMenuDataSource.isRightToLeft()();
  v84 = v30;
  v32 = sub_100414B90(v30, v31);
  v81 = v33;
  v82 = v32;
  v34 = *(_QWORD *)(v12 + *(int *)(v22 + 20));
  v35 = swift_getKeyPath(&unk_100723180);
  v90[0] = v34;
  a2 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v90, v35, a2);
  swift_release(v35);
  if (*(_QWORD *)(v34 + 328) == 0x8000000000000008)
  {
    swift_bridgeObjectRelease(v25);
    v80 = (_QWORD *)static Animation.linear(duration:)(0.0);
  }
  else
  {
    v80 = sub_100412A38(v25, a1, v10);
    swift_bridgeObjectRelease(v25);
  }
  if (v10 == a1)
    a4 = 0.0;
  else
    a4 = (double)a1 * a5 + a4;
  v25 = v88;
  if (qword_1009CE480 != -1)
    goto LABEL_26;
LABEL_10:
  v36 = type metadata accessor for Logger(0);
  sub_100048F64(v36, (uint64_t)qword_1009E2468);
  v87 = v12;
  v37 = sub_10002CD84(v12, (uint64_t)v25, type metadata accessor for ChapterScrubbingView);
  v38 = Logger.logObject.getter(v37);
  v42 = static os_log_type_t.debug.getter(v38, v39, v40, v41);
  v43 = os_log_type_enabled(v38, v42);
  v83 = v10;
  if (v43)
  {
    v78 = v10 == a1;
    v44 = swift_slowAlloc(38, -1);
    v79 = swift_slowAlloc(32, -1);
    v90[0] = v79;
    *(_DWORD *)v44 = 136315906;
    v77 = v44 + 4;
    v45 = (uint64_t)v25;
    v46 = *(_QWORD *)((char *)v25 + *(int *)(v22 + 20));
    v47 = swift_getKeyPath(&unk_100723260);
    v89 = v46;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v89, v47, a2);
    swift_release(v47);
    BookMovementState.description.getter(*(_QWORD *)(v46 + 232), *(_QWORD *)(v46 + 240), *(_BYTE *)(v46 + 248));
    v49 = v48;
    v89 = sub_100040F58(v50, v48, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90, v77, v44 + 12);
    swift_bridgeObjectRelease(v49);
    sub_10002C8F0(v45, type metadata accessor for ChapterScrubbingView);
    *(_WORD *)(v44 + 12) = 2048;
    v51 = v84;
    v89 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90, v44 + 14, v44 + 22);
    *(_WORD *)(v44 + 22) = 2048;
    v89 = *(_QWORD *)&a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90, v44 + 24, v44 + 32);
    *(_WORD *)(v44 + 32) = 1024;
    LODWORD(v89) = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, (char *)&v89 + 4, v44 + 34, v44 + 38);
    _os_log_impl((void *)&_mh_execute_header, v38, v42, "makePageView for movement %s page %ld @ x %f isLastPageOfExit? %{BOOL}d", (uint8_t *)v44, 0x26u);
    v52 = v79;
    swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v52, -1, -1);
    swift_slowDealloc(v44, -1, -1);

    v54 = v85;
    v53 = v86;
  }
  else
  {
    sub_10002C8F0((uint64_t)v25, type metadata accessor for ChapterScrubbingView);

    v54 = v85;
    v53 = v86;
    v51 = v84;
  }
  v55 = v87;
  v56 = sub_100412628();
  v57 = sub_10003F198(v11, v11[3]);
  Strong = swift_weakLoadStrong(*v57 + 96);
  v59 = 0.0;
  v60 = 0.0;
  if (Strong)
  {
    v61 = Strong;
    v62 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(Strong);
    v64 = v63;
    ObjectType = swift_getObjectType();
    v60 = dispatch thunk of BookContentLayoutProviding.contentContainerTopInset.getter(ObjectType, v64);
    swift_release(v61);
    swift_unknownObjectRelease(v62);
  }
  v66 = sub_10003F198(v11, v11[3]);
  v67 = swift_weakLoadStrong(*v66 + 96);
  if (v67)
  {
    v68 = v67;
    v69 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v67);
    v71 = v70;
    v72 = swift_getObjectType();
    v59 = dispatch thunk of BookContentLayoutProviding.gutterWidth.getter(v72, v71);
    swift_release(v68);
    swift_unknownObjectRelease(v69);
  }
  if (a1)
    v73 = v83 == a1;
  else
    v73 = 1;
  v74 = v73;
  v75 = v80;
  sub_1004131BC(a1, v55, v51, (uint64_t)v80, v82, v74, v81, v53, v54, v56, a6, a7, a8, a9, a4, v59, v60 + a7);
  swift_release(v75);
}

uint64_t sub_1004131BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t ObjectType;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  void *v84;
  id v85;
  _QWORD *v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  Swift::String v93;
  Swift::String v94;
  void *object;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  Swift::String v109;
  Swift::String v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _OWORD v152[8];
  __int128 v153;
  uint64_t v154;
  _OWORD v155[3];
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;

  v138 = a8;
  v134 = a7;
  LODWORD(v142) = a6;
  v132 = a5;
  v146 = a4;
  v143 = a1;
  v144 = a3;
  v129 = sub_10004CFD4(&qword_1009E25D0);
  __chkstk_darwin(v129);
  v131 = (char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10004CFD4(&qword_1009E25C0);
  __chkstk_darwin(v130);
  v135 = (uint64_t)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_10004CFD4(&qword_1009E25B0);
  __chkstk_darwin(v145);
  v133 = (uint64_t)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v136 = (uint64_t)&v129 - v31;
  v148 = sub_10004CFD4(&qword_1009E2600);
  __chkstk_darwin(v148);
  v147 = (uint64_t)&v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10004CFD4(&qword_1009E2608);
  __chkstk_darwin(v140);
  v139 = (uint64_t)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_10004CFD4(&qword_1009E2570);
  __chkstk_darwin(v150);
  v141 = (char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (int *)type metadata accessor for ChapterScrubbingView(0);
  __chkstk_darwin(v35);
  v37 = (char *)&v129 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10004CFD4(&qword_1009E25A0);
  __chkstk_darwin(v38);
  v40 = (double *)((char *)&v129 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v137 = sub_10004CFD4(&qword_1009E2590);
  __chkstk_darwin(v137);
  v42 = (char *)&v129 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10004CFD4(&qword_1009E2580);
  __chkstk_darwin(v43);
  v45 = (char *)&v129 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v149 = a9;
  if (v143)
  {
    v48 = (uint64_t)v37;
    v143 = v43;
    v50 = v144;
    v49 = v145;
    v51 = (_QWORD *)(a2 + v35[7]);
    v52 = sub_10003F198(v51, v51[3]);
    Strong = swift_weakLoadStrong(*v52 + 96);
    if (Strong
      && (v54 = Strong,
          v55 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(Strong),
          v57 = v56,
          ObjectType = swift_getObjectType(),
          v59 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(ObjectType, v57),
          swift_unknownObjectRelease(v55),
          swift_release(v54),
          v59 == 2))
    {
      v60 = *(void **)(a2 + v35[10]);
      sub_10002CD84(a2, v48, type metadata accessor for ChapterScrubbingView);
      v61 = v129;
      v62 = (uint64_t)v131;
      sub_100009B88();
      v63 = v60;
      static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ELL, 0x80000001007C8550);
      *(_QWORD *)v62 = v63;
      *(double *)(v62 + 8) = a10;
      v64 = v62 + *(int *)(v61 + 40);
      v65 = v63;
      *(_QWORD *)v64 = static VerticalAlignment.top.getter(v65);
      *(_QWORD *)(v64 + 8) = 0;
      *(_BYTE *)(v64 + 16) = 0;
      v66 = sub_10004CFD4(&qword_1009E2610);
      sub_100413CB0(v48, v132, v142 & 1, v134, (double *)(v64 + *(int *)(v66 + 44)), a16, a17);
      sub_10002C8F0(v48, type metadata accessor for ChapterScrubbingView);

      v67 = v135;
      sub_10000B5E4(v62, v135, &qword_1009E25D0);
      v68 = v67 + *(int *)(v130 + 36);
      *(double *)v68 = a15;
      *(_QWORD *)(v68 + 8) = 0;
      sub_100010960(v62, &qword_1009E25D0);
      v69 = swift_allocObject(&unk_100904CA0, 24, 7);
      v70 = v146;
      *(_QWORD *)(v69 + 16) = v146;
      v71 = v133;
      sub_10000B5E4(v67, v133, &qword_1009E25C0);
      v72 = (_QWORD *)(v71 + *(int *)(v49 + 36));
      *v72 = sub_100414D5C;
      v72[1] = v69;
      swift_retain(v70);
      sub_100010960(v67, &qword_1009E25C0);
      v73 = &qword_1009E25B0;
      v74 = v136;
      sub_100025B3C(v71, v136, &qword_1009E25B0);
      v75 = v139;
      sub_10000B5E4(v74, v139, &qword_1009E25B0);
      swift_storeEnumTagMultiPayload(v75, v140, 1);
      v76 = sub_10041492C();
      v77 = sub_100414A38();
      v78 = (uint64_t)v141;
      _ConditionalContent<>.init(storage:)(v75, v143, v49, v76, v77);
      v79 = v147;
      sub_10000B5E4(v78, v147, &qword_1009E2570);
      swift_storeEnumTagMultiPayload(v79, v148, 0);
      v80 = sub_10004CFD4(&qword_1009E25E0);
      v81 = sub_100414908();
      v82 = sub_100414AC4();
      _ConditionalContent<>.init(storage:)(v79, v150, v80, v81, v82);
      sub_100010960(v78, &qword_1009E2570);
      v83 = (_OWORD *)v74;
    }
    else
    {
      v84 = *(void **)(a2 + v35[10]);
      sub_10002E418((uint64_t)v51, (uint64_t)v155 + 8);
      v85 = v84;
      v86 = sub_1004141A8(v50, v142 & 1);
      v87 = GeometryProxy.size.getter(v86);
      v89 = v88;
      *(_QWORD *)&v155[0] = v85;
      v90 = type metadata accessor for PageSnapshotLoader(0);
      v91 = sub_100008DB0(&qword_1009DF8F8, type metadata accessor for PageSnapshotLoader, (uint64_t)&protocol conformance descriptor for PageSnapshotLoader);
      *(_QWORD *)&v156 = ObservedObject.init(wrappedValue:)(v86, v90, v91);
      *((_QWORD *)&v156 + 1) = v92;
      *(double *)&v157 = v87;
      *((_QWORD *)&v157 + 1) = v89;
      *(double *)&v158 = a11;
      *((double *)&v158 + 1) = a12;
      *(double *)&v159 = a13;
      *((double *)&v159 + 1) = a14;
      *(double *)&v160 = a10;
      *(_QWORD *)&v152[0] = 0;
      *((_QWORD *)&v152[0] + 1) = 0xE000000000000000;
      v93._countAndFlagsBits = 112;
      v93._object = (void *)0xE100000000000000;
      String.append(_:)(v93);
      v151 = v50;
      v94._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v94._object;
      String.append(_:)(v94);
      swift_bridgeObjectRelease(object);
      v96 = *((_QWORD *)&v152[0] + 1);
      v97 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
      v98 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
      static Alignment.center.getter(v98);
      sub_1003BF224((uint64_t)v155, (uint64_t)v152);
      swift_bridgeObjectRelease(v96);
      swift_release(v97);
      swift_release(v98);
      sub_1003BF258((uint64_t)v155);
      sub_1003BF224((uint64_t)v152, (uint64_t)v155);
      *((double *)&v160 + 1) = a15;
      *(_QWORD *)&v161 = 0;
      sub_1003BF258((uint64_t)v152);
      v99 = swift_allocObject(&unk_100904C78, 24, 7);
      v100 = v146;
      *(_QWORD *)(v99 + 16) = v146;
      sub_10000B5E4((uint64_t)v155, (uint64_t)v152, &qword_1009E25F0);
      *((_QWORD *)&v153 + 1) = sub_100414C5C;
      v154 = v99;
      swift_retain(v100);
      sub_100010960((uint64_t)v155, &qword_1009E25F0);
      v159 = v152[6];
      v160 = v152[7];
      v161 = v153;
      v162 = v154;
      v155[2] = v152[2];
      v156 = v152[3];
      v157 = v152[4];
      v158 = v152[5];
      v155[0] = v152[0];
      v155[1] = v152[1];
      v73 = &qword_1009E25E0;
      v101 = v147;
      sub_10000B5E4((uint64_t)v155, v147, &qword_1009E25E0);
      swift_storeEnumTagMultiPayload(v101, v148, 1);
      v102 = sub_10004CFD4(&qword_1009E25E0);
      v103 = sub_100414908();
      v104 = sub_100414AC4();
      _ConditionalContent<>.init(storage:)(v101, v150, v102, v103, v104);
      v83 = v155;
    }
  }
  else
  {
    v105 = *(void **)(a2 + v35[10]);
    v143 = (uint64_t)&v129 - v47;
    sub_10002CD84(a2, (uint64_t)v37, type metadata accessor for ChapterScrubbingView);
    sub_100009B88();
    v106 = v105;
    static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ELL, 0x80000001007C8550);
    *(_QWORD *)v40 = v106;
    v40[1] = a10;
    v107 = *(void **)&v37[v35[8]];
    *(_QWORD *)&v155[0] = 0;
    *((_QWORD *)&v155[0] + 1) = 0xE000000000000000;
    v142 = v106;
    v108 = v107;
    v109._countAndFlagsBits = 112;
    v109._object = (void *)0xE100000000000000;
    String.append(_:)(v109);
    *(_QWORD *)&v152[0] = v144;
    v110._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v111 = v110._object;
    String.append(_:)(v110);
    swift_bridgeObjectRelease(v111);
    v112 = *((_QWORD *)&v155[0] + 1);
    v113 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
    v114 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    static Alignment.center.getter(v114);
    swift_bridgeObjectRelease(v112);
    swift_release(v113);
    swift_release(v114);
    *((_QWORD *)v40 + 2) = v107;
    v40[3] = 0.0;
    v40[4] = a12;
    sub_10002C8F0((uint64_t)v37, type metadata accessor for ChapterScrubbingView);

    sub_10000B5E4((uint64_t)v40, (uint64_t)v42, &qword_1009E25A0);
    v115 = &v42[*(int *)(v137 + 36)];
    *(double *)v115 = a15;
    *((_QWORD *)v115 + 1) = 0;
    sub_100010960((uint64_t)v40, &qword_1009E25A0);
    v116 = swift_allocObject(&unk_100904CC8, 24, 7);
    v117 = v146;
    *(_QWORD *)(v116 + 16) = v146;
    sub_10000B5E4((uint64_t)v42, (uint64_t)v45, &qword_1009E2590);
    v118 = &v45[*(int *)(v43 + 36)];
    *(_QWORD *)v118 = sub_100414D5C;
    *((_QWORD *)v118 + 1) = v116;
    swift_retain(v117);
    sub_100010960((uint64_t)v42, &qword_1009E2590);
    v73 = &qword_1009E2580;
    v119 = v143;
    sub_100025B3C((uint64_t)v45, v143, &qword_1009E2580);
    v120 = v139;
    sub_10000B5E4(v119, v139, &qword_1009E2580);
    swift_storeEnumTagMultiPayload(v120, v140, 0);
    v121 = sub_10041492C();
    v122 = sub_100414A38();
    v123 = (uint64_t)v141;
    _ConditionalContent<>.init(storage:)(v120, v43, v145, v121, v122);
    v124 = v147;
    sub_10000B5E4(v123, v147, &qword_1009E2570);
    swift_storeEnumTagMultiPayload(v124, v148, 0);
    v125 = sub_10004CFD4(&qword_1009E25E0);
    v126 = sub_100414908();
    v127 = sub_100414AC4();
    _ConditionalContent<>.init(storage:)(v124, v150, v125, v126, v127);
    sub_100010960(v123, &qword_1009E2570);
    v83 = (_OWORD *)v119;
  }
  return sub_100010960((uint64_t)v83, v73);
}

uint64_t sub_100413CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  char v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double *v58;
  int *v59;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;

  v71 = a4;
  v72 = a5;
  v8 = a3;
  v67 = a3;
  v63 = a2;
  v64 = type metadata accessor for ScrubPageContentView(0);
  __chkstk_darwin(v64);
  v12 = (_QWORD *)((char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_10004CFD4(&qword_1009E2618);
  __chkstk_darwin(v70);
  v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_10004CFD4(&qword_1009E2620);
  __chkstk_darwin(v74);
  v16 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v61 - v18;
  __chkstk_darwin(v20);
  v73 = (uint64_t)v61 - v21;
  __chkstk_darwin(v22);
  v69 = (uint64_t)v61 - v23;
  v24 = type metadata accessor for ChapterScrubbingView(0);
  v68 = *(int *)(v24 + 40);
  v25 = *(void **)(a1 + v68);
  v26 = a1 + *(int *)(v24 + 28);
  v65 = v12 + 1;
  v66 = v26;
  sub_10002E418(v26, (uint64_t)(v12 + 1));
  v27 = v25;
  v28 = sub_1004141A8(v63, v8);
  *v12 = v27;
  v29 = type metadata accessor for PageSnapshotLoader(0);
  v63 = v29;
  v62 = sub_100008DB0(&qword_1009DF8F8, type metadata accessor for PageSnapshotLoader, (uint64_t)&protocol conformance descriptor for PageSnapshotLoader);
  v12[6] = ObservedObject.init(wrappedValue:)(v28, v29, v62);
  v12[7] = v30;
  v31 = sub_100009B88();
  v61[0] = 0x80000001007C5850;
  v61[1] = v31;
  v32 = static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000019, 0x80000001007C5850);
  v33 = static Color.red.getter(v32);
  v34.n128_u64[0] = 0x3FD3333333333333;
  v35 = Color.opacity(_:)(v33, v34);
  swift_release(v33);
  KeyPath = swift_getKeyPath(&unk_100723288);
  sub_10002CD84((uint64_t)v12, (uint64_t)v14, type metadata accessor for ScrubPageContentView);
  v37 = v70;
  v38 = (uint64_t *)&v14[*(int *)(v70 + 36)];
  *v38 = KeyPath;
  v38[1] = v35;
  sub_10002C8F0((uint64_t)v12, type metadata accessor for ScrubPageContentView);
  sub_10000B5E4((uint64_t)v14, (uint64_t)v19, &qword_1009E2618);
  v39 = &v19[*(int *)(v74 + 36)];
  *(_QWORD *)v39 = 0;
  *((double *)v39 + 1) = a7;
  v40 = sub_100010960((uint64_t)v14, &qword_1009E2618);
  v41 = static Color.red.getter(v40);
  v42 = v73;
  sub_10000B5E4((uint64_t)v19, v73, &qword_1009E2620);
  swift_release(v41);
  sub_100010960((uint64_t)v19, &qword_1009E2620);
  v43 = v69;
  sub_100025B3C(v42, v69, &qword_1009E2620);
  v44 = *(void **)(a1 + v68);
  sub_10002E418(v66, (uint64_t)v65);
  v45 = v44;
  v46 = sub_1004141A8(v71, v67);
  *v12 = v45;
  v12[6] = ObservedObject.init(wrappedValue:)(v46, v63, v62);
  v12[7] = v47;
  v48 = static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000019, v61[0]);
  v49 = static Color.red.getter(v48);
  v50.n128_u64[0] = 0x3FD3333333333333;
  v51 = Color.opacity(_:)(v49, v50);
  swift_release(v49);
  v52 = swift_getKeyPath(&unk_100723288);
  sub_10002CD84((uint64_t)v12, (uint64_t)v14, type metadata accessor for ScrubPageContentView);
  v53 = (uint64_t *)&v14[*(int *)(v37 + 36)];
  *v53 = v52;
  v53[1] = v51;
  sub_10002C8F0((uint64_t)v12, type metadata accessor for ScrubPageContentView);
  sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009E2618);
  v54 = &v16[*(int *)(v74 + 36)];
  *(_QWORD *)v54 = 0;
  *((double *)v54 + 1) = a7;
  v55 = sub_100010960((uint64_t)v14, &qword_1009E2618);
  v56 = static Color.green.getter(v55);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v19, &qword_1009E2620);
  swift_release(v56);
  sub_100010960((uint64_t)v16, &qword_1009E2620);
  v57 = v73;
  sub_100025B3C((uint64_t)v19, v73, &qword_1009E2620);
  sub_10000B5E4(v43, (uint64_t)v19, &qword_1009E2620);
  sub_10000B5E4(v57, (uint64_t)v16, &qword_1009E2620);
  v58 = v72;
  *v72 = a6;
  v59 = (int *)sub_10004CFD4(&qword_1009E2628);
  sub_10000B5E4((uint64_t)v19, (uint64_t)v58 + v59[12], &qword_1009E2620);
  *(double *)((char *)v58 + v59[16]) = a6;
  sub_10000B5E4((uint64_t)v16, (uint64_t)v58 + v59[20], &qword_1009E2620);
  *(double *)((char *)v58 + v59[24]) = a6;
  sub_100010960(v57, &qword_1009E2620);
  sub_100010960(v43, &qword_1009E2620);
  sub_100010960((uint64_t)v16, &qword_1009E2620);
  return sub_100010960((uint64_t)v19, &qword_1009E2620);
}

_QWORD *sub_1004141A8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v33[5];
  uint64_t v34;
  uint64_t v35[4];
  _BYTE v36[24];

  v3 = v2;
  v6 = type metadata accessor for ChapterScrubbingView(0);
  v7 = (uint64_t *)(*(_QWORD *)(v2 + *(int *)(v6 + 24) + 8)
                 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
  swift_beginAccess(v7, v36, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1002BB7F4(a1), (v10 & 1) != 0))
  {
    v11 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_retain(v11);
  }
  else
  {
    sub_10002E418(v3 + *(int *)(v6 + 28), (uint64_t)&v34);
    v12 = sub_100063750((uint64_t)&v34, v35[2]);
    v13 = __chkstk_darwin(v12);
    v15 = (_QWORD *)((char *)&v33[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    v17 = *v15;
    v18 = type metadata accessor for BookActionMenuDataSource();
    v33[3] = v18;
    v33[4] = &off_1008FF818;
    v33[0] = v17;
    v19 = type metadata accessor for PageSnapshotLoader(0);
    v20 = (_QWORD *)swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v21 = sub_100063750((uint64_t)v33, v18);
    v22 = __chkstk_darwin(v21);
    v24 = (_QWORD *)((char *)&v33[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
    v11 = sub_10066A1A0(*v24, a1, a2 & 1, v20);
    _s5Books15CurrentPageViewVwxx_0(v33);
    _s5Books15CurrentPageViewVwxx_0(&v34);
    if (qword_1009CE480 != -1)
      swift_once(&qword_1009CE480, sub_100411668);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100048F64(v26, (uint64_t)qword_1009E2468);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.info.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v30 = 134217984;
      v34 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v30 + 4, v30 + 12);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "created new loader for index %ld", v30, 0xCu);
      swift_slowDealloc(v30, -1, -1);
    }

  }
  return v11;
}

uint64_t sub_100414448@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_10002CD84(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ChapterScrubbingView);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_100904C28, v7 + v5, v6 | 7);
  result = sub_1004118E4((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *a2 = sub_1004145DC;
  a2[1] = v8;
  return result;
}

uint64_t sub_1004144F4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for ChapterScrubbingView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + v1[5]));
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)v6 + v1[7]));

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1004145DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  type metadata accessor for ChapterScrubbingView(0);
  return sub_1004121D4(a1, a2);
}

uint64_t sub_100414644()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for ChapterScrubbingView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = (_QWORD *)(v0 + v4);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0 + v4, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (v4 + v5 + v8) & ~v8;
  swift_release(*(_QWORD *)((char *)v10 + v1[5]));
  swift_release(*(_QWORD *)((char *)v10 + v1[6] + 8));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)v10 + v1[7]));

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v13, v6);
  return swift_deallocObject(v0, ((((v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | v8 | 7);
}

void sub_100414788(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(type metadata accessor for ChapterScrubbingView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100412BB0(a1, v2 + v6, v2 + v9, a2, *(double *)(v2 + v10), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_100414820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E2548;
  if (!qword_1009E2548)
  {
    v1 = sub_100030B74(&qword_1009E2538);
    sub_100233FF8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ReversedCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E2548);
  }
  return result;
}

unint64_t sub_100414884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E2550;
  if (!qword_1009E2550)
  {
    v1 = sub_100030B74(&qword_1009E2540);
    sub_1001F4F10(&qword_1009E2558, &qword_1009E2560, (void (*)(void))sub_100414908, (void (*)(void))sub_100414AC4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E2550);
  }
  return result;
}

uint64_t sub_100414908()
{
  return sub_1001F4F10(&qword_1009E2568, &qword_1009E2570, (void (*)(void))sub_10041492C, (void (*)(void))sub_100414A38);
}

unint64_t sub_10041492C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E2578;
  if (!qword_1009E2578)
  {
    v1 = sub_100030B74(&qword_1009E2580);
    sub_1004149B8(&qword_1009E2588, &qword_1009E2590, &qword_1009E2598, &qword_1009E25A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E2578);
  }
  return result;
}

uint64_t sub_1004149B8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    sub_100030B34(a3, a4, (uint64_t)&unk_10072FB00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100414A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E25A8;
  if (!qword_1009E25A8)
  {
    v1 = sub_100030B74(&qword_1009E25B0);
    sub_1004149B8(&qword_1009E25B8, &qword_1009E25C0, &qword_1009E25C8, &qword_1009E25D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E25A8);
  }
  return result;
}

uint64_t sub_100414AC4()
{
  return sub_1001F5558(&qword_1009E25D8, &qword_1009E25E0, (void (*)(void))sub_100414AE8);
}

uint64_t sub_100414AE8()
{
  return sub_1001F5558(&qword_1009E25E8, &qword_1009E25F0, (void (*)(void))sub_100414B0C);
}

unint64_t sub_100414B0C()
{
  unint64_t result;

  result = qword_1009E25F8;
  if (!qword_1009E25F8)
  {
    result = swift_getWitnessTable(&unk_100720038, &type metadata for ScrubPageView);
    atomic_store(result, (unint64_t *)&qword_1009E25F8);
  }
  return result;
}

uint64_t sub_100414B58(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = Transaction.disablesAnimations.getter(*a1);
  if ((result & 1) == 0)
  {
    v4 = swift_retain(a2);
    return Transaction.animation.setter(v4);
  }
  return result;
}

uint64_t sub_100414B90(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;

  result = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
  if (result == a1)
  {
    v5 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
    _s5Books17REActionMenuStateC9pageCountSivpfi_0();
    return v5;
  }
  if ((a1 & 0x8000000000000001) == 1)
  {
    if (a1 == 1)
    {
      v5 = 1;
      a1 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
      if ((a2 & 1) != 0)
        return v5;
    }
    else
    {
      v5 = a1--;
      if ((a2 & 1) != 0)
        return v5;
    }
    return a1;
  }
  v5 = a1 + 1;
  if (!__OFADD__(a1, 1))
  {
    if ((a2 & 1) != 0)
      return v5;
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100414C38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100414C5C(_QWORD *a1)
{
  uint64_t v1;

  return sub_100414B58(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_100414C74()
{
  unint64_t result;

  result = qword_1009E2630;
  if (!qword_1009E2630)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1009E2630);
  }
  return result;
}

ValueMetadata *type metadata accessor for SpacerView()
{
  return &type metadata for SpacerView;
}

uint64_t sub_100414CC8()
{
  return sub_100030B34(&qword_1009E2638, &qword_1009E2640, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t sub_100414CF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008709D4, 1);
}

uint64_t sub_100414D04()
{
  return sub_1001F5558(&qword_1009E2648, &qword_1009E2650, (void (*)(void))sub_100414D38);
}

uint64_t sub_100414D38()
{
  return sub_1001F5558(&qword_1009E2658, &qword_1009E2660, (void (*)(void))sub_1002810E0);
}

uint64_t static RootBarItemsProvider.LibraryAllIdentifier.getter()
{
  return 0x7972617262696CLL;
}

uint64_t sub_100414D80(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100414DAC + 4 * byte_100723340[a1]))(1701670760, 0xE400000000000000);
}

uint64_t sub_100414DAC()
{
  return 0x736B6F6F62;
}

uint64_t sub_100414DC0()
{
  return 0x6F6F626F69647561;
}

uint64_t sub_100414DDC()
{
  return 0x61676E616DLL;
}

uint64_t sub_100414DF0()
{
  return 0x686372616573;
}

uint64_t sub_100414E04()
{
  return 0x7972617262696CLL;
}

unint64_t sub_100414E1C()
{
  return 0xD000000000000011;
}

uint64_t sub_100414ED0()
{
  return 0x656C6C6F4377656ELL;
}

uint64_t sub_100414EF4()
{
  return 0x6D6F74737563;
}

uint64_t sub_100414F08()
{
  return 0x6E776F6E6B6E75;
}

uint64_t static RootBarItemsProvider.HomeIdentifier.getter()
{
  return 1701670760;
}

uint64_t static RootBarItemsProvider.BooksIdentifier.getter()
{
  return 0x736B6F6F62;
}

uint64_t static RootBarItemsProvider.AudiobooksIdentifier.getter()
{
  return 0x6F6F626F69647561;
}

uint64_t static RootBarItemsProvider.SearchIdentifier.getter()
{
  return 0x686372616573;
}

uint64_t static RootBarItemsProvider.MangaIdentifier.getter()
{
  return 0x61676E616DLL;
}

uint64_t static RootBarItemsProvider.title(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v10[6];
  Swift::String v11;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v7 = v6;
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    swift_bridgeObjectRelease(a2);
    v8 = 14;
  }
  else
  {
    v11._countAndFlagsBits = a1;
    v11._object = a2;
    v8 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v11);
    if (v8 == 16)
      v8 = 15;
  }
  sub_100047B64(v8, v10);
  return sub_1002215B0((uint64_t)v10, a3);
}

uint64_t static RootBarItemsProvider.itemIdentifier(forCollectionID:)(uint64_t a1, void *a2)
{
  NSString v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;

  v4 = String._bridgeToObjectiveC()();
  v5 = _s5Books20RootBarItemsProviderC14itemIdentifier22forDefaultCollectionIDSSSgSo09BCDefaultjK0a_tFZ_0((uint64_t)v4);
  v7 = v6;

  if (!v7)
  {
    v8._countAndFlagsBits = a1;
    v8._object = a2;
    String.append(_:)(v8);
    return 0x3A6D6F74737563;
  }
  return v5;
}

unint64_t static RootBarItemsProvider.LibraryWantToReadIdentifier.getter()
{
  return 0xD000000000000011;
}

uint64_t static RootBarItemsProvider.LibraryFinishedIdentifier.getter()
{
  return 0x467972617262696CLL;
}

uint64_t static RootBarItemsProvider.LibraryBooksIdentifier.getter()
{
  return 0x427972617262696CLL;
}

unint64_t static RootBarItemsProvider.LibraryAudiobooksIdentifier.getter()
{
  return 0xD000000000000011;
}

uint64_t static RootBarItemsProvider.LibraryPDFIdentifier.getter()
{
  return 0x507972617262696CLL;
}

unint64_t static RootBarItemsProvider.LibraryMySamplesIdentifier.getter()
{
  return 0xD000000000000010;
}

unint64_t static RootBarItemsProvider.LibraryDownloadedIdentifier.getter()
{
  return 0xD000000000000011;
}

uint64_t static RootBarItemsProvider.iconName(for:countryCode:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _BYTE v7[48];

  sub_100047674(a1, a2, a3, a4, (uint64_t)v7);
  return sub_1002215B0((uint64_t)v7, a5);
}

uint64_t static RootBarItemsProvider.NewCollectionIdentifier.getter()
{
  return 0x656C6C6F4377656ELL;
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.tabBarValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.sidebarValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.shortTabBarValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(a1 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.init(tabBar:sidebar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
  v8(a4, a1);
  v11 = type metadata accessor for RootBarItemsProvider.InterfaceDependentValue(0, a3, v9, v10);
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(a4 + *(int *)(v11 + 28), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a4 + *(int *)(v11 + 32), 1, 1, a3);
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.init(tabBar:shortTabBar:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v8 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(a4, a1);
  v11 = type metadata accessor for RootBarItemsProvider.InterfaceDependentValue(0, a3, v9, v10);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v12(a4 + *(int *)(v11 + 28), a1, a3);
  v13 = a4 + *(int *)(v11 + 32);
  v12(v13, a2, a3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, a3);
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v8, a1, a2, v6);
  return RootBarItemsProvider.InterfaceDependentValue.init(tabBar:sidebar:)((uint64_t)v8, a1, a2, a3);
}

uint64_t RootBarItemsProvider.InterfaceDependentValue.init(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v22 - v11;
  if ((*(unsigned int (**)(double))(v6 + 48))(v10) == 1)
  {
    v13 = type metadata accessor for Optional(0, a2);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
    v16 = type metadata accessor for RootBarItemsProvider.InterfaceDependentValue(0, a2, v14, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v18(v12, a1, a2);
    v18(v8, v12, a2);
    RootBarItemsProvider.InterfaceDependentValue.init(_:)((uint64_t)v8, a2, a3);
    v21 = type metadata accessor for RootBarItemsProvider.InterfaceDependentValue(0, a2, v19, v20);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 0, 1, v21);
  }
}

uint64_t sub_100415594(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  const char *v43;
  void (*v44)(char *, _QWORD, uint64_t, double);
  char v45;
  void (*v46)(char *, uint64_t);
  char v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v70;
  uint64_t v71;
  uint64_t v72;

  v1 = a1;
  v2 = type metadata accessor for Locale(0);
  v71 = *(_QWORD *)(v2 - 8);
  v72 = v2;
  __chkstk_darwin(v2);
  v70 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v70 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v70 - v12;
  v14 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v1)
  {
    case 0:
      v19 = String.LocalizationValue.init(stringLiteral:)(0x74206E7275746552, 0xEE00656D6F48206FLL);
      static Locale.current.getter(v19);
      v20 = v8;
      v21 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v22 = v7;
      v21(v10, v13, v7);
      v23 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
      v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v26 = v70;
      v27 = v71;
      v28 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v6, v72);
      v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v25, v26, "Action item to bring user back to the Home tab", 46, 2);
      goto LABEL_14;
    case 1:
      v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007C8920);
      static Locale.current.getter(v37);
      v20 = v8;
      v38 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v22 = v7;
      v38(v10, v13, v7);
      v39 = type metadata accessor for BundleFinder();
      v40 = swift_getObjCClassFromMetadata(v39);
      v41 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v40);
      v42 = v70;
      v27 = v71;
      v28 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v6, v72);
      v43 = "Action item to bring user back to the Book Store tab";
      goto LABEL_13;
    case 2:
      v44 = *(void (**)(char *, _QWORD, uint64_t, double))(v15 + 104);
      v44(v18, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v14, v16);
      v45 = isFeatureEnabled(_:)(v18);
      v46 = *(void (**)(char *, uint64_t))(v15 + 8);
      v46(v18, v14);
      if ((v45 & 1) != 0
        || (((void (*)(char *, _QWORD, uint64_t))v44)(v18, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v14), v47 = isFeatureEnabled(_:)(v18), v46(v18, v14), (v47 & 1) != 0))
      {
        v48 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007C89E0);
        static Locale.current.getter(v48);
        v20 = v8;
        v49 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v22 = v7;
        v49(v10, v13, v7);
        v50 = type metadata accessor for BundleFinder();
        v51 = swift_getObjCClassFromMetadata(v50);
        v52 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v51);
      }
      else
      {
        v65 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007C8980);
        static Locale.current.getter(v65);
        v20 = v8;
        v66 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v22 = v7;
        v66(v10, v13, v7);
        v67 = type metadata accessor for BundleFinder();
        v68 = swift_getObjCClassFromMetadata(v67);
        v52 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v68);
      }
      v41 = v52;
      v42 = v70;
      v27 = v71;
      v28 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v6, v72);
      v43 = "Action item to bring user back to the Audiobooks tab";
LABEL_13:
      v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v41, v42, v43, 52, 2);
      goto LABEL_14;
    case 3:
      v53 = String.LocalizationValue.init(stringLiteral:)(0x74206E7275746552, 0xEF61676E614D206FLL);
      static Locale.current.getter(v53);
      v20 = v8;
      v54 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v22 = v7;
      v54(v10, v13, v7);
      v55 = type metadata accessor for BundleFinder();
      v56 = swift_getObjCClassFromMetadata(v55);
      v57 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v56);
      v58 = v70;
      v27 = v71;
      v28 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v6, v72);
      v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v57, v58, "Action item to bring user back to the Manga tab", 47, 2);
      goto LABEL_14;
    case 4:
      v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007C8800);
      static Locale.current.getter(v30);
      v20 = v8;
      v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v22 = v7;
      v31(v10, v13, v7);
      v32 = type metadata accessor for BundleFinder();
      v33 = swift_getObjCClassFromMetadata(v32);
      v34 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v33);
      v35 = v70;
      v27 = v71;
      v28 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v6, v72);
      v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v34, v35, "Action item to bring user back to the Search tab", 48, 2);
      goto LABEL_14;
    case 5:
      v59 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007C88C0);
      static Locale.current.getter(v59);
      v20 = v8;
      v60 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v22 = v7;
      v60(v10, v13, v7);
      v61 = type metadata accessor for BundleFinder();
      v62 = swift_getObjCClassFromMetadata(v61);
      v63 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v62);
      v64 = v70;
      v27 = v71;
      v28 = v72;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v6, v72);
      v29 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v63, v64, "Action item to bring user back to the Library tab", 49, 2);
LABEL_14:
      v36 = v29;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v22);
      break;
    default:
      v36 = 0;
      break;
  }
  return v36;
}

uint64_t sub_100415C94(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v8;
  char v9;
  char v10;

  v1 = RootBarItemsProvider.ItemKind.rawValue.getter(a1);
  v3 = v1;
  v4 = v2;
  if (v1 == 0x736B6F6F62 && v2 == 0xE500000000000000)
    goto LABEL_3;
  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0x736B6F6F62, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v6 & 1) != 0)
    return 1;
  if (v3 == 0x6F6F626F69647561 && v4 == 0xEA0000000000736BLL)
  {
    v5 = 0xEA0000000000736BLL;
    goto LABEL_4;
  }
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x6F6F626F69647561, 0xEA0000000000736BLL, 0);
  swift_bridgeObjectRelease(v4);
  if ((v8 & 1) != 0)
    return 1;
  if (v3 == 0x61676E616DLL && v4 == 0xE500000000000000)
  {
LABEL_3:
    v5 = 0xE500000000000000;
LABEL_4:
    swift_bridgeObjectRelease(v5);
    return 1;
  }
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x61676E616DLL, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v9 & 1) != 0)
    return 1;
  if (v3 == 0x6E776F6E6B6E75 && v4 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_4;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v4);
  return v10 & 1;
}

uint64_t sub_100415E40(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v1 = RootBarItemsProvider.ItemKind.rawValue.getter(a1);
  v3 = v1;
  v4 = v2;
  if (v1 == 0x686372616573 && v2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
LABEL_4:
    swift_bridgeObjectRelease(v5);
    return 1;
  }
  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0x686372616573, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v6 & 1) != 0)
    return 1;
  if (v3 == 1701670760 && v4 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_4;
  }
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 1701670760, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v8 & 1) != 0)
    return 1;
  if (v3 == 0x736B6F6F62 && v4 == 0xE500000000000000)
    goto LABEL_13;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x736B6F6F62, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v9 & 1) != 0)
    return 1;
  if (v3 == 0x6F6F626F69647561 && v4 == 0xEA0000000000736BLL)
  {
    v5 = 0xEA0000000000736BLL;
    goto LABEL_4;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x6F6F626F69647561, 0xEA0000000000736BLL, 0);
  swift_bridgeObjectRelease(v4);
  if ((v10 & 1) != 0)
    return 1;
  if (v3 == 0x61676E616DLL && v4 == 0xE500000000000000)
  {
LABEL_13:
    v5 = 0xE500000000000000;
    goto LABEL_4;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x61676E616DLL, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v11 & 1) != 0)
    return 1;
  if (v3 == 0x6E776F6E6B6E75 && v4 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_4;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v4);
  return v12 & 1;
}

uint64_t sub_100416094(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = RootBarItemsProvider.ItemKind.rawValue.getter(*a1);
  v5 = v4;
  v6 = RootBarItemsProvider.ItemKind.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_10041611C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = RootBarItemsProvider.ItemKind.rawValue.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_10041617C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = RootBarItemsProvider.ItemKind.rawValue.getter(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_1004161BC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = RootBarItemsProvider.ItemKind.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100416218@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100416244@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = RootBarItemsProvider.ItemKind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static RootBarItemsProvider.LibraryUserCollectionIdentifier.getter()
{
  return 0x6D6F74737563;
}

uint64_t static RootBarItemsProvider.isStoreOnly(for:)(uint64_t a1, void *a2)
{
  return sub_1004166D4(a1, a2, (uint64_t (*)(uint64_t, __n128))sub_100415C94);
}

uint64_t static RootBarItemsProvider.isDefaultCollection(for:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v7;
  Swift::String v8;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  else
  {
    v8._countAndFlagsBits = a1;
    v8._object = a2;
    v7 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v8);
    if (v7 <= 0x10u)
      return (0x1FE0u >> v7) & 1;
    else
      return 1;
  }
}

uint64_t sub_10041668C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v7 = v6;
  LOBYTE(a4) = a4(v5);
  swift_bridgeObjectRelease(v7);
  return a4 & 1;
}

uint64_t static RootBarItemsProvider.isStandardItem(for:)(uint64_t a1, void *a2)
{
  return sub_1004166D4(a1, a2, (uint64_t (*)(uint64_t, __n128))sub_100415E40);
}

uint64_t sub_1004166D4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, __n128))
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  Swift::String v11;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v6 = v5;
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    v7 = swift_bridgeObjectRelease(a2);
    v8 = 14;
  }
  else
  {
    v11._countAndFlagsBits = a1;
    v11._object = a2;
    LODWORD(v8) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v11);
    if (v8 == 16)
      v8 = 15;
    else
      v8 = v8;
  }
  return a3(v8, v7);
}

uint64_t sub_100416768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, __n128))
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char v12;
  Swift::String v14;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v7 = v6;
  swift_bridgeObjectRetain(v6);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v5, (unint64_t)v7);
  v9 = v8;
  swift_bridgeObjectRelease(v8);
  if (v9)
  {
    v10 = swift_bridgeObjectRelease(v7);
    v11 = 14;
  }
  else
  {
    v14._countAndFlagsBits = v5;
    v14._object = v7;
    LODWORD(v11) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v14);
    if (v11 == 16)
      v11 = 15;
    else
      v11 = v11;
  }
  v12 = a4(v11, v10);
  swift_bridgeObjectRelease(v7);
  return v12 & 1;
}

uint64_t static RootBarItemsProvider.itemIdentifier(forCustomCollectionID:)(uint64_t a1, uint64_t a2)
{
  String.append(_:)(*(Swift::String *)&a1);
  return 0x3A6D6F74737563;
}

uint64_t static RootBarItemsProvider.requiresURL(for:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v7;
  Swift::String v8;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  else
  {
    v8._countAndFlagsBits = a1;
    v8._object = a2;
    v7 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v8);
    if (v7 <= 0x10u)
      return (0x1E01Fu >> v7) & 1;
    else
      return 0;
  }
}

uint64_t static RootBarItemsProvider.stringForReturnToRootBarItem(for:)(uint64_t a1, void *a2)
{
  return sub_1004166D4(a1, a2, (uint64_t (*)(uint64_t, __n128))sub_100415594);
}

uint64_t static RootBarItemsProvider.automationIdentifier(for:)(uint64_t a1, void *a2)
{
  return sub_1004166D4(a1, a2, (uint64_t (*)(uint64_t, __n128))sub_100048A4C);
}

id RootBarItemsProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootBarItemsProvider();
  return objc_msgSendSuper2(&v2, "init");
}

id RootBarItemsProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootBarItemsProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

BOOL static RootBarItemsProvider.InterfaceDependentValue<A>.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  void (*v43)(char *, uint64_t);
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t TupleTypeMetadata2;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v67 = a4;
  v65 = a2;
  v63 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Optional(255, v7);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v8, v8, 0, 0);
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v11 = (char *)&v56 - v10;
  v12 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v22 = a1;
  v23 = a1;
  v24 = v65;
  v66 = a3;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v23, v65, a3, v67) & 1) == 0)
    return 0;
  v59 = v21;
  v60 = v18;
  v57 = v15;
  v58 = v9;
  v61 = v11;
  v27 = v66;
  v28 = type metadata accessor for RootBarItemsProvider.InterfaceDependentValue(0, v66, v25, v26);
  v29 = *(int *)(v28 + 28);
  v30 = v22;
  v31 = v22 + v29;
  v32 = v24;
  v33 = v67;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v31, v24 + v29, v27, v67) & 1) == 0)
    return 0;
  v34 = v30 + *(int *)(v28 + 32);
  v35 = v12;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v37 = v59;
  v38 = v8;
  v36(v59, v34, v8);
  v39 = v60;
  v36(v60, v32 + *(int *)(v28 + 32), v38);
  v40 = v61;
  v41 = &v61[*(int *)(TupleTypeMetadata2 + 48)];
  v36(v61, (uint64_t)v37, v38);
  v36(v41, (uint64_t)v39, v38);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v42(v40, 1, v66) == 1)
  {
    v43 = *(void (**)(char *, uint64_t))(v35 + 8);
    v43(v39, v38);
    v43(v37, v38);
    if (v42(v41, 1, v66) == 1)
    {
      v43(v61, v38);
      return 1;
    }
    goto LABEL_8;
  }
  v44 = v57;
  v36(v57, (uint64_t)v40, v38);
  if (v42(v41, 1, v66) == 1)
  {
    v45 = *(void (**)(char *, uint64_t))(v35 + 8);
    v45(v60, v38);
    v45(v37, v38);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v66);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v61, TupleTypeMetadata2);
    return 0;
  }
  v46 = v63;
  v47 = v37;
  v48 = v62;
  v49 = v66;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v41, v66);
  v50 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v48, v49, v33);
  v51 = v40;
  v52 = v50;
  v53 = *(void (**)(char *, uint64_t))(v46 + 8);
  v53(v48, v49);
  v54 = *(void (**)(char *, uint64_t))(v35 + 8);
  v54(v60, v38);
  v54(v47, v38);
  v53(v44, v49);
  v54(v51, v38);
  return (v52 & 1) != 0;
}

BOOL sub_10041712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static RootBarItemsProvider.InterfaceDependentValue<A>.__derived_struct_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t _s5Books20RootBarItemsProviderC019placeholderStandardD0SayAA0bC4ItemCGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1007118E0;
  v2 = (objc_class *)type metadata accessor for RootBarItem();
  v3 = objc_allocWithZone(v2);
  *(_QWORD *)(v1 + 32) = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(1701670760, 0xE400000000000000, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v4 = objc_allocWithZone(v2);
  *(_QWORD *)(v1 + 40) = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(0x7972617262696CLL, 0xE700000000000000, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v5 = objc_allocWithZone(v2);
  *(_QWORD *)(v1 + 48) = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(0x736B6F6F62, 0xE500000000000000, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v6 = objc_allocWithZone(v2);
  *(_QWORD *)(v1 + 56) = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(0x6F6F626F69647561, 0xEA0000000000736BLL, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v7 = objc_allocWithZone(v2);
  v8 = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(0x686372616573, 0xE600000000000000, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)(v1 + 64) = v8;
  specialized Array._endMutation()(v8);
  return v1;
}

unint64_t _s5Books20RootBarItemsProviderC14itemIdentifier22forDefaultCollectionIDSSSgSo09BCDefaultjK0a_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v2 = 0x7972617262696CLL;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultAll);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) != 0)
      return v2;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v11 == v14 && v13 == v15)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v13, 2);
      return 0xD000000000000011;
    }
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) != 0)
      return 0xD000000000000011;
    v2 = 0x467972617262696CLL;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
    v21 = v20;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v24 = v22;
    if (v19 != v23 || v21 != v22)
    {
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v24);
      if ((v26 & 1) != 0)
        return v2;
      v2 = 0x427972617262696CLL;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDBooks);
      v21 = v28;
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v31 = v29;
      if (v27 != v30 || v21 != v29)
      {
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v21, v30, v29, 0);
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v31);
        if ((v32 & 1) != 0)
          return v2;
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDAudiobooks);
        v13 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v37 = v35;
        if (v33 == v36 && v13 == v35)
          goto LABEL_16;
        v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v13, v36, v35, 0);
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v37);
        if ((v38 & 1) != 0)
          return 0xD000000000000011;
        v2 = 0x507972617262696CLL;
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDPDFs);
        v21 = v40;
        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v43 = v41;
        if (v39 != v42 || v21 != v41)
        {
          v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v21, v42, v41, 0);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v43);
          if ((v44 & 1) != 0)
            return v2;
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDSamples);
          v47 = v46;
          v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          v50 = v48;
          if (v45 == v49 && v47 == v48)
          {
            swift_bridgeObjectRelease_n(v47, 2);
          }
          else
          {
            v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
            swift_bridgeObjectRelease(v47);
            swift_bridgeObjectRelease(v50);
            if ((v51 & 1) == 0)
            {
              v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDDownloaded);
              v13 = v53;
              v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
              v56 = v54;
              if (v52 != v55 || v13 != v54)
              {
                v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v13, v55, v54, 0);
                swift_bridgeObjectRelease(v13);
                swift_bridgeObjectRelease(v56);
                if ((v57 & 1) == 0)
                  return 0;
                return 0xD000000000000011;
              }
              goto LABEL_16;
            }
          }
          return 0xD000000000000010;
        }
      }
    }
    swift_bridgeObjectRelease_n(v21, 2);
  }
  return v2;
}

uint64_t _s5Books20RootBarItemsProviderC18isCustomCollection3forSbSS_tFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  Swift::String v12;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(a2);
    v6 = 14;
  }
  else
  {
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    v6 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v12);
    if (v6 == 16)
      v6 = 15;
  }
  v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v6);
  v9 = v8;
  if (v7 == 0x6D6F74737563 && v8 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x6D6F74737563, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v9);
    return v11 & 1;
  }
}

uint64_t type metadata accessor for RootBarItemsProvider.InterfaceDependentValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RootBarItemsProvider.InterfaceDependentValue);
}

id _s5Books20RootBarItemsProviderC19defaultCollectionID18fromItemIdentifierSo09BCDefaultgH0aSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  id *v4;
  id v5;
  id v6;

  if (a1 == 0x7972617262696CLL && a2 == 0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7972617262696CLL, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultAll;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001007B1C10
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001007B1C10, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultIDWantToRead;
  }
  else if (a1 == 0x467972617262696CLL && a2 == 0xEF64656873696E69
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x467972617262696CLL, 0xEF64656873696E69, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultIDFinished;
  }
  else if (a1 == 0x427972617262696CLL && a2 == 0xEC000000736B6F6FLL
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x427972617262696CLL, 0xEC000000736B6F6FLL, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultIDBooks;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001007B1C40
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001007B1C40, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultIDAudiobooks;
  }
  else if (a1 == 0x507972617262696CLL && a2 == 0xEA00000000004644
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x507972617262696CLL, 0xEA00000000004644, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultIDPDFs;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007B1C60
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001007B1C60, a1, a2, 0) & 1) != 0)
  {
    v4 = (id *)&kBKCollectionDefaultIDSamples;
  }
  else
  {
    if ((a1 != 0xD000000000000011 || a2 != 0x80000001007B1C80)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001007B1C80, a1, a2, 0) & 1) == 0)
    {
      return 0;
    }
    v4 = (id *)&kBKCollectionDefaultIDDownloaded;
  }
  v5 = *v4;
  v6 = *v4;
  return v5;
}

uint64_t _s5Books20RootBarItemsProviderC8isSearch3forSbSS_tFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  Swift::String v12;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(a2);
    v6 = 14;
  }
  else
  {
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    v6 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v12);
    if (v6 == 16)
      v6 = 15;
  }
  v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v6);
  v9 = v8;
  if (v7 == 0x686372616573 && v8 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x686372616573, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v9);
    return v11 & 1;
  }
}

uint64_t _s5Books20RootBarItemsProviderC11canBeHidden3forSbSS_tFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  Swift::String v14;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    v6 = (unint64_t)a2;
  }
  else
  {
    v14._countAndFlagsBits = a1;
    v14._object = a2;
    v9 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v14);
    if (v9 < 0x11u && ((0x1E01Fu >> v9) & 1) != 0)
      goto LABEL_4;
    v10 = RootBarItemsProvider.ItemKind.rawValue.getter(v9);
    v12 = v11;
    if (v10 != 0x7972617262696CLL || v11 != 0xE700000000000000)
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0x7972617262696CLL, 0xE700000000000000, 0);
      swift_bridgeObjectRelease(v12);
      v7 = v13 ^ 1;
      return v7 & 1;
    }
    v6 = 0xE700000000000000;
  }
  swift_bridgeObjectRelease(v6);
LABEL_4:
  v7 = 0;
  return v7 & 1;
}

uint64_t type metadata accessor for RootBarItemsProvider()
{
  return objc_opt_self(BKRootBarItemsProvider);
}

unint64_t sub_100417D80()
{
  unint64_t result;

  result = qword_1009E2668;
  if (!qword_1009E2668)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RootBarItemsProvider.ItemKind, &type metadata for RootBarItemsProvider.ItemKind);
    atomic_store(result, (unint64_t *)&qword_1009E2668);
  }
  return result;
}

uint64_t sub_100417DC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[3];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = v8[0];
    v5 = type metadata accessor for Optional(319, v2);
    v3 = v5;
    if (v6 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v5 - 8) + 64;
      swift_initStructMetadata(a1, 0, 3, v8, a1 + 24);
      return 0;
    }
  }
  return v3;
}

uint64_t *sub_100417E5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  int v14;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v19;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  if (*(_DWORD *)(v6 + 84))
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = v7 + 1;
  v13 = ((v7 + v8 + ((v7 + v8) & ~(unint64_t)v8)) & ~(unint64_t)v8)
      + v12;
  v14 = v8 & 0x100000;
  if (v9 > 7 || v14 != 0 || v13 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v9 + 16) & v10));
    swift_retain(v17);
  }
  else
  {
    v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v18(a1, a2, *(_QWORD *)(a3 + 16));
    v19 = ((unint64_t)a2 + v11) & v10;
    v18((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)v19, v5);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((v11 + v19) & v10, 1, v5))
    {
      memcpy((void *)((v11 + (((unint64_t)v4 + v11) & v10)) & v10), (const void *)((v11 + v19) & v10), v12);
    }
    else
    {
      v18((uint64_t *)((v11 + (((unint64_t)v4 + v11) & v10)) & v10), (uint64_t *)((v11 + v19) & v10), v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))((v11 + (((unint64_t)v4 + v11) & v10)) & v10, 0, 1, v5);
    }
  }
  return v4;
}

uint64_t sub_100417F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(a1, v3);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + v5;
  v7 = (v6 + a1) & ~v5;
  v10(v7, v3);
  v8 = (v6 + v7) & ~v5;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v3);
  return result;
}

uint64_t sub_100418058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v11, v5);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v6 + 48))((v8 + v9 + v11) & ~v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v12 = v8;
    else
      v12 = v8 + 1;
    memcpy((void *)((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9), (const void *)((v10 + v11) & ~v9), v12);
  }
  else
  {
    v7((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, (v10 + v11) & ~v9, v5);
    (*(void (**)(size_t, _QWORD, uint64_t, uint64_t))(v6 + 56))((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_100418148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  v11 = (void *)((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9);
  v12 = (void *)((v8 + v9 + v10) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(v10) = v13(v11, 1, v5);
  v14 = v13(v12, 1, v5);
  if ((_DWORD)v10)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v11, v12, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      v7((uint64_t)v11, (uint64_t)v12, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v15 = v8;
  else
    v15 = v8 + 1;
  memcpy(v11, v12, v15);
  return a1;
}

uint64_t sub_10041827C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v11, v5);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v6 + 48))((v8 + v9 + v11) & ~v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v12 = v8;
    else
      v12 = v8 + 1;
    memcpy((void *)((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9), (const void *)((v10 + v11) & ~v9), v12);
  }
  else
  {
    v7((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, (v10 + v11) & ~v9, v5);
    (*(void (**)(size_t, _QWORD, uint64_t, uint64_t))(v6 + 56))((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_10041836C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v10, v5);
  v11 = (void *)((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9);
  v12 = (void *)((v8 + v9 + v10) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  LODWORD(v10) = v13(v11, 1, v5);
  v14 = v13(v12, 1, v5);
  if ((_DWORD)v10)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v11, v12, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      v7((uint64_t)v11, (uint64_t)v12, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v15 = v8;
  else
    v15 = v8 + 1;
  memcpy(v11, v12, v15);
  return a1;
}

uint64_t sub_1004184A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5)
    v7 = *(_QWORD *)(v4 + 64);
  else
    v7 = v6 + 1;
  if (!a2)
    return 0;
  v8 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_21;
  v9 = v7
     + ((v6
       + *(unsigned __int8 *)(v4 + 80)
       + ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 < 2)
    {
LABEL_21:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_21;
LABEL_14:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return v5 + v13 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100418570 + 4 * byte_10072337E[(v9 - 1)]))();
}

void sub_1004185C0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8
      + *(unsigned __int8 *)(v6 + 80)
      + ((v8 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!v7)
    ++v8;
  v10 = v8 + v9;
  v11 = a3 >= v7;
  v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      v15 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v15))
      {
        v13 = &dword_100000004;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v13 = 0;
  }
  if (v7 < a2)
  {
    v14 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t getEnumTagSinglePayload for RootBarItemsProvider.ItemKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RootBarItemsProvider.ItemKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_10041886C + 4 * byte_100723391[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1004188A0 + 4 * byte_10072338C[v4]))();
}

uint64_t sub_1004188A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004188A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004188B0);
  return result;
}

uint64_t sub_1004188BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004188C4);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1004188C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004188D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RootBarItemsProvider.ItemKind()
{
  return &type metadata for RootBarItemsProvider.ItemKind;
}

uint64_t LibraryCollectionsManipulating.add(title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a4 + 16))(0, 0, a1, a2, a3);
}

uint64_t LibraryCollectionsManipulating.add(collectionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 16))(a1, a2, 0, 0, a3, a4);
}

BOOL static LibraryCollectionsServiceError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LibraryCollectionsServiceError.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int LocationControllingError.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

unint64_t sub_1004189A4()
{
  unint64_t result;

  result = qword_1009E2720;
  if (!qword_1009E2720)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryCollectionsServiceState, &type metadata for LibraryCollectionsServiceState);
    atomic_store(result, (unint64_t *)&qword_1009E2720);
  }
  return result;
}

unint64_t sub_1004189EC()
{
  unint64_t result;

  result = qword_1009E2728;
  if (!qword_1009E2728)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryCollectionsServiceError, &type metadata for LibraryCollectionsServiceError);
    atomic_store(result, (unint64_t *)&qword_1009E2728);
  }
  return result;
}

uint64_t sub_100418A34(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100418A80 + 4 * byte_1007235E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100418AB4 + 4 * byte_1007235E0[v4]))();
}

uint64_t sub_100418AB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100418ABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100418AC4);
  return result;
}

uint64_t sub_100418AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100418AD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100418ADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100418AE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCollectionsServiceError()
{
  return &type metadata for LibraryCollectionsServiceError;
}

uint64_t sub_100418B00()
{
  return sub_1001EEA54((uint64_t)&unk_1007238A0, (uint64_t)&unk_1007238C8);
}

uint64_t sub_100418B14()
{
  return sub_1001EEA54((uint64_t)&unk_100723850, (uint64_t)&unk_100723878);
}

uint64_t sub_100418B28()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007238E8);
  v2 = swift_getKeyPath(&unk_100723910);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100418B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  _UNKNOWN **v51;
  char **v52;
  char **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  _QWORD *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  id v73;
  uint64_t *v74;
  __int128 v75;
  void (*v76)(char *, char *, uint64_t);
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  _QWORD v80[2];
  _QWORD v81[3];

  v0 = type metadata accessor for Locale(0);
  v78 = *(_QWORD *)(v0 - 8);
  v1 = __chkstk_darwin(v0);
  v79 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v4 = (char *)&v71 - v3;
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v71 - v10;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v17 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    if (v17 < 0)
      v47 = v17;
    else
      v47 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v34 = _CocoaArrayWrapper.endIndex.getter(v47);
    if (v34)
      goto LABEL_4;
    goto LABEL_22;
  }
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007C8C80);
  static Locale.current.getter(v18);
  v19 = v6;
  v76 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v20 = v9;
  v76(v9, v11, v5);
  v21 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v74 = (uint64_t *)ObjCClassFromMetadata;
  v73 = (id)objc_opt_self(NSBundle);
  v23 = objc_msgSend(v73, "bundleForClass:", ObjCClassFromMetadata);
  v25 = v78;
  v24 = v79;
  v72 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v72(v79, v4, v0);
  v71 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v23, v24, "Name for a new collection of books on the bookshelf.", 52, 2);
  v77 = v26;
  v27 = *(void (**)(char *, uint64_t))(v25 + 8);
  v27(v4, v0);
  v28 = *(void (**)(char *, uint64_t))(v19 + 8);
  v28(v11, v5);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007C8CE0);
  static Locale.current.getter(v29);
  v76(v20, v11, v5);
  v30 = objc_msgSend(v73, "bundleForClass:", v74);
  v72(v24, v4, v0);
  v76 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v30, v24, "Name for a new collection of books on the bookshelf when multiple collections exist with the same 'Untitled Colleciton' name.", 125, 2);
  v78 = v31;
  v27(v4, v0);
  v28(v11, v5);
  v79 = (char *)objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  KeyPath = swift_getKeyPath(&unk_100723850);
  v33 = swift_getKeyPath(&unk_100723878);
  static Published.subscript.getter(v81, v75, KeyPath, v33);
  swift_release(KeyPath);
  swift_release(v33);
  v17 = v81[0];
  if (v81[0] >> 62)
    goto LABEL_18;
  v34 = *(_QWORD *)((v81[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v81[0]);
  if (v34)
  {
LABEL_4:
    if (v34 < 1)
    {
      __break(1u);
      return;
    }
    v35 = 0;
    v36 = _swiftEmptyArrayStorage;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v17);
      else
        v37 = *(id *)(v17 + 8 * v35 + 32);
      v38 = v37;
      v39 = objc_msgSend(v37, "title");
      if (v39)
      {
        v40 = v39;
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v43 = v42;

        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
          v36 = sub_100043ED0(0, v36[2] + 1, 1, v36);
        v45 = v36[2];
        v44 = v36[3];
        if (v45 >= v44 >> 1)
          v36 = sub_100043ED0((_QWORD *)(v44 > 1), v45 + 1, 1, v36);
        v36[2] = v45 + 1;
        v46 = &v36[2 * v45];
        v46[4] = v41;
        v46[5] = v43;
      }
      else
      {

      }
      ++v35;
    }
    while (v34 != v35);
    goto LABEL_23;
  }
LABEL_22:
  v36 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease_n(v17, 2);
  v48 = 0;
  v49 = v36[2];
  v50 = v36 + 5;
  v51 = BCMutableCloudSyncVersions_ptr;
  v52 = &selRef__mediaLibraryDidChange_;
  v53 = &selRef_setupEventDataProvider;
  v75 = xmmword_10070CCA0;
  v74 = v36 + 5;
  while (1)
  {
    v81[0] = v48;
    v54 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v56 = v55;
    v57 = objc_msgSend(objc_allocWithZone((Class)v51[345]), v52[143], v48);
    v58 = objc_msgSend(v79, v53[323], v57);

    if (v58)
    {
      swift_bridgeObjectRelease(v56);
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v56 = v59;

    }
    if (!v48)
      break;
    v60 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v61 = swift_allocObject(v60, 72, 7);
    *(_OWORD *)(v61 + 16) = v75;
    *(_QWORD *)(v61 + 56) = &type metadata for String;
    *(_QWORD *)(v61 + 64) = sub_10002BE50();
    *(_QWORD *)(v61 + 32) = v54;
    *(_QWORD *)(v61 + 40) = v56;
    v62 = String.init(format:_:)(v76, v78, v61);
    v64 = v63;
    if (!v49)
      goto LABEL_38;
LABEL_30:
    v65 = sub_1001F2108();
    v66 = swift_bridgeObjectRetain(v36);
    v67 = v49;
    while (1)
    {
      v68 = *v50;
      v81[0] = *(v50 - 1);
      v81[1] = v68;
      v80[0] = v62;
      v80[1] = v64;
      if (!StringProtocol.localizedCaseInsensitiveCompare<A>(_:)(v80, &type metadata for String, &type metadata for String, v65, v65, v66))break;
      v50 += 2;
      if (!--v49)
      {

        swift_bridgeObjectRelease(v77);
        v70 = v36;
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v36);
    v49 = v67;
    v69 = v48++ == v67;
    v50 = v74;
    v51 = BCMutableCloudSyncVersions_ptr;
    v52 = &selRef__mediaLibraryDidChange_;
    v53 = &selRef_setupEventDataProvider;
    if (v69)
    {
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v78);

      return;
    }
  }
  swift_bridgeObjectRelease(v56);
  v64 = v77;
  swift_bridgeObjectRetain(v77);
  v62 = v71;
  if (v49)
    goto LABEL_30;
LABEL_38:

  v70 = v77;
LABEL_37:
  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v78);
}

void sub_10041929C(void *a1, char a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v4 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v5 = swift_allocObject(&unk_100905270, 25, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_BYTE *)(v5 + 24) = a2;
  v6 = swift_allocObject(&unk_100905298, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_10041D518;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_1002FAC00;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100064AFC;
  v10[3] = &unk_1009052B0;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = a1;
  swift_retain(v6);
  objc_msgSend(v4, "performBlockInUIContext:", v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v6, "", 111, 154, 64, 1);
  swift_release(v5);
  swift_release(v6);
  if ((a1 & 1) != 0)
    __break(1u);
}

void sub_1004193F4(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  _BYTE v27[16];
  id v28;

  v4 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v5 = objc_msgSend(v4, "collectionController");

  static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  v28 = 0;
  v9 = objc_msgSend(v5, "mutableCollectionWithCollectionID:inManagedObjectContext:error:", v8, a1, &v28, swift_bridgeObjectRelease(v7).n128_f64[0]);
  swift_unknownObjectRelease(v5);

  v10 = v28;
  if (v9)
  {
    v11 = v28;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v9, "setHidden:", isa);

  }
  else
  {
    v13 = v28;
    v14 = _convertNSErrorToError(_:)(v10);

    swift_willThrow(v15);
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v16 = type metadata accessor for Logger(0);
    sub_100048F64(v16, (uint64_t)qword_1009E40B0);
    swift_errorRetain(v14);
    v17 = swift_errorRetain(v14);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = (void *)swift_slowAlloc(32, -1);
      v28 = v21;
      *(_DWORD *)v20 = 136315138;
      swift_getErrorValue(v14, v27, v26);
      v22 = Error.localizedDescription.getter(v26[1], v26[2]);
      v24 = v23;
      v25 = sub_100040F58(v22, v23, (uint64_t *)&v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease(v24);
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to fetch and modify default collection: %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      swift_errorRelease(v14);
    }
    else
    {
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      swift_errorRelease(v14);

    }
  }
}

uint64_t sub_1004196E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain(v3);
}

void sub_1004196EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v8 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v9 = (_QWORD *)swift_allocObject(&unk_100905108, 48, 7);
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v10 = swift_allocObject(&unk_100905130, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_10041D014;
  *(_QWORD *)(v10 + 24) = v9;
  v13[4] = sub_1002FAC00;
  v14 = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100064AFC;
  v13[3] = &unk_100905148;
  v11 = _Block_copy(v13);
  v12 = v14;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  swift_retain(v10);
  objc_msgSend(v8, "performBlockInUIContext:", v11, swift_release(v12).n128_f64[0]);

  _Block_release(v11);
  LOBYTE(a4) = swift_isEscapingClosureAtFileLocation(v10, "", 111, 174, 64, 1);
  swift_release(v9);
  swift_release(v10);
  if ((a4 & 1) != 0)
    __break(1u);
}

void sub_100419860(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  _BYTE v37[16];
  id v38;

  swift_bridgeObjectRetain(a3);
  v6 = sub_10041D30C(255, a2, a3);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease(a3);
  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v14 = objc_msgSend(v13, "collectionController");

  v15 = String._bridgeToObjectiveC()();
  v38 = 0;
  v16 = objc_msgSend(v14, "mutableCollectionWithCollectionID:inManagedObjectContext:error:", v15, a1, &v38);
  swift_unknownObjectRelease(v14);

  v17 = v38;
  if (v16)
  {
    v18 = v38;
    static String._fromSubstring(_:)(v6, v8, v10, v12, v19);
    v21 = v20;
    swift_bridgeObjectRelease(v12);
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setTitle:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
  else
  {
    v23 = v38;
    swift_bridgeObjectRelease(v12);
    v24 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v25);
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v26 = type metadata accessor for Logger(0);
    sub_100048F64(v26, (uint64_t)qword_1009E40B0);
    swift_errorRetain(v24);
    v27 = swift_errorRetain(v24);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = (void *)swift_slowAlloc(32, -1);
      v38 = v31;
      *(_DWORD *)v30 = 136315138;
      swift_getErrorValue(v24, v37, v36);
      v32 = Error.localizedDescription.getter(v36[1], v36[2]);
      v34 = v33;
      v35 = sub_100040F58(v32, v33, (uint64_t *)&v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v30 + 4, v30 + 12);
      swift_bridgeObjectRelease(v34);
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to fetch and modify user collections: %s", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      swift_errorRelease(v24);
    }
    else
    {
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      swift_errorRelease(v24);

    }
  }
}

void sub_100419BB8(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v5 = swift_allocObject(&unk_100905090, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject(&unk_1009050B8, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_10041CFF8;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_100064AD4;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100064AFC;
  v9[3] = &unk_1009050D0;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_bridgeObjectRetain(a2);
  swift_retain(v6);
  objc_msgSend(v4, "performBlockInUIContext:", v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v6, "", 111, 188, 64, 1);
  swift_release(v5);
  swift_release(v6);
  if ((a2 & 1) != 0)
    __break(1u);
}

void sub_100419D10(uint64_t a1)
{
  id v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[16];
  id v22;

  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v3 = objc_msgSend(v2, "collectionController");

  v4 = String._bridgeToObjectiveC()();
  v22 = 0;
  LODWORD(a1) = objc_msgSend(v3, "deleteCollectionWithCollectionID:inManagedObjectContext:error:", v4, a1, &v22);
  swift_unknownObjectRelease(v3);

  if ((_DWORD)a1)
  {
    v5 = v22;
  }
  else
  {
    v18 = v22;
    v6 = v22;
    v7 = _convertNSErrorToError(_:)(v18);

    swift_willThrow(v8);
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v9 = type metadata accessor for Logger(0);
    sub_100048F64(v9, (uint64_t)qword_1009E40B0);
    swift_errorRetain(v7);
    v10 = swift_errorRetain(v7);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = (void *)swift_slowAlloc(32, -1);
      v22 = v14;
      *(_DWORD *)v13 = 136315138;
      swift_getErrorValue(v7, v21, v20);
      v15 = Error.localizedDescription.getter(v20[1], v20[2]);
      v17 = v16;
      v19 = sub_100040F58(v15, v16, (uint64_t *)&v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to delete user collections: %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      swift_errorRelease(v7);
    }
    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);

    }
  }
}

void sub_100419FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char isUniquelyReferenced_nonNull_native;
  void *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  void *v80;
  Class isa;
  id v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  void *v86;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[3];
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _BYTE v98[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v98, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return;
  v4 = (void *)Strong;
  v97 = (uint64_t)_swiftEmptyArrayStorage;
  KeyPath = swift_getKeyPath(&unk_100723850);
  v6 = swift_getKeyPath(&unk_100723878);
  static Published.subscript.getter(v93, v4, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v93[0];
  if (v93[0] >> 62)
    goto LABEL_26;
  v8 = *(_QWORD *)((v93[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v86 = v4;
  if (!v8)
  {
LABEL_30:
    v9 = _swiftEmptyDictionarySingleton;
LABEL_31:
    swift_bridgeObjectRelease(v7);
    v95 = _swiftEmptyArrayStorage;
    v96 = _swiftEmptyArrayStorage;
    v35 = *(_QWORD *)(a2 + 16);
    if (!v35)
    {
LABEL_50:
      swift_bridgeObjectRetain(v9);
      sub_100374C88(v57);
      if (v96[2] || v95[2])
      {
        if (qword_1009CE4F0 != -1)
          swift_once(&qword_1009CE4F0, sub_100450628);
        v58 = type metadata accessor for Logger(0);
        v59 = sub_100048F64(v58, (uint64_t)qword_1009E40B0);
        v60 = Logger.logObject.getter(v59);
        v61 = static os_log_type_t.fault.getter(v60);
        if (os_log_type_enabled(v60, v61))
        {
          v62 = swift_slowAlloc(22, -1);
          v63 = swift_slowAlloc(64, -1);
          v94 = v63;
          *(_DWORD *)v62 = 136315394;
          swift_beginAccess(&v96, v93, 0, 0);
          v64 = v96;
          swift_bridgeObjectRetain(v96);
          v66 = Array.description.getter(v65, &type metadata for String);
          v67 = v9;
          v69 = v68;
          swift_bridgeObjectRelease(v64);
          v91 = sub_100040F58(v66, v69, &v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v62 + 4, v62 + 12);
          v70 = v69;
          v9 = v67;
          swift_bridgeObjectRelease(v70);
          *(_WORD *)(v62 + 12) = 2080;
          swift_beginAccess(&v95, &v91, 0, 0);
          v71 = v95;
          swift_bridgeObjectRetain(v95);
          v73 = Array.description.getter(v72, &type metadata for String);
          v75 = v74;
          swift_bridgeObjectRelease(v71);
          v90 = sub_100040F58(v73, v75, &v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v62 + 14, v62 + 22);
          swift_bridgeObjectRelease(v75);
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "The reordered collection ID list does not match the existing list. Only in reordered list: %s; only in original list: %s",
            (uint8_t *)v62,
            0x16u);
          swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v63, -1, -1);
          swift_slowDealloc(v62, -1, -1);
        }

      }
      swift_bridgeObjectRetain(v9);
      sub_100375050(v76);
      v77 = v97;
      if ((unint64_t)v97 >> 62)
      {
        if (v97 < 0)
          v83 = v97;
        else
          v83 = v97 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v97);
        v84 = sub_10004CFD4(&qword_1009E2810);
        v79 = _bridgeCocoaArray<A>(_:)(v83, v84, v85);
        swift_bridgeObjectRelease(v77);
      }
      else
      {
        v78 = swift_bridgeObjectRetain(v97);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v78);
        v79 = v77;
      }
      swift_bridgeObjectRelease(v77);
      v80 = (void *)objc_opt_self(BKUserSortOrderManager);
      sub_10004CFD4(&qword_1009E2810);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v79);
      v82 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
      objc_msgSend(v80, "saveSortedCollectionsArray:inLibraryManager:", isa, v82);

      swift_bridgeObjectRelease(v95);
      swift_bridgeObjectRelease(v96);
      swift_bridgeObjectRelease(v9);
      return;
    }
    swift_bridgeObjectRetain(a2);
    v37 = (uint64_t *)(v36 + 40);
    while (1)
    {
      v39 = *(v37 - 1);
      v38 = *v37;
      v40 = v9[2];
      swift_bridgeObjectRetain(*v37);
      if (!v40)
        goto LABEL_44;
      swift_bridgeObjectRetain(v38);
      v41 = sub_10004CE80(v39, v38);
      if ((v42 & 1) == 0)
        break;
      v43 = *(id *)(v9[7] + 8 * v41);
      swift_bridgeObjectRelease(v38);
      v44 = v43;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v46 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v45 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v46 >= v45 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
      v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
      specialized Array._endMutation()(v47);
      swift_bridgeObjectRetain(v9);
      v48 = sub_10004CE80(v39, v38);
      v50 = v49;
      swift_bridgeObjectRelease(v9);
      if ((v50 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
        v93[0] = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002C0F40();
          v9 = (_QWORD *)v93[0];
        }
        swift_bridgeObjectRelease(*(_QWORD *)(v9[6] + 16 * v48 + 8));
        v52 = *(void **)(v9[7] + 8 * v48);
        sub_1002BE924(v48, (uint64_t)v9);
        swift_bridgeObjectRelease(v38);

        swift_bridgeObjectRelease(0x8000000000000000);
      }
      else
      {
        swift_bridgeObjectRelease(v38);

      }
LABEL_34:
      v37 += 2;
      if (!--v35)
      {
        swift_bridgeObjectRelease(a2);
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease(v38);
LABEL_44:
    v53 = v96;
    if ((swift_isUniquelyReferenced_nonNull_native(v96) & 1) == 0)
      v53 = sub_100043ED0(0, v53[2] + 1, 1, v53);
    v55 = v53[2];
    v54 = v53[3];
    if (v55 >= v54 >> 1)
      v53 = sub_100043ED0((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
    v53[2] = v55 + 1;
    v56 = &v53[2 * v55];
    v56[4] = v39;
    v56[5] = v38;
    v96 = v53;
    goto LABEL_34;
  }
LABEL_4:
  v89 = v7 & 0xC000000000000001;
  v9 = _swiftEmptyDictionarySingleton;
  v10 = 4;
  v88 = v7;
  while (1)
  {
    if (v89)
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v7);
    else
      v12 = *(id *)(v7 + 8 * v10);
    v13 = v12;
    v4 = (void *)(v10 - 3);
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      if (v7 < 0)
        v34 = v7;
      else
        v34 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v8 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v7);
      v86 = v4;
      if (!v8)
        goto LABEL_30;
      goto LABEL_4;
    }
    v14 = objc_msgSend(v12, "collectionID", v86);
    if (!v14)
      break;
    v15 = v14;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

    v19 = v13;
    v7 = swift_isUniquelyReferenced_nonNull_native(v9);
    v93[0] = v9;
    v20 = sub_10004CE80(v16, v18);
    v22 = v9;
    v23 = v20;
    v24 = v22[2];
    v25 = (v21 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_24;
    v27 = v21;
    if (v22[3] >= v26)
    {
      if ((v7 & 1) != 0)
      {
        v7 = v93[0];
        if ((v21 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_1002C0F40();
        v7 = v93[0];
        if ((v27 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_10037C16C(v26, v7);
      v28 = sub_10004CE80(v16, v18);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_66;
      v23 = v28;
      v7 = v93[0];
      if ((v27 & 1) != 0)
      {
LABEL_5:
        v11 = *(_QWORD *)(v7 + 56);

        *(_QWORD *)(v11 + 8 * v23) = v19;
        v9 = (_QWORD *)v7;
        goto LABEL_6;
      }
    }
    *(_QWORD *)(v7 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v30 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v23);
    *v30 = v16;
    v30[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v23) = v19;
    v31 = *(_QWORD *)(v7 + 16);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_25;
    v9 = (_QWORD *)v7;
    *(_QWORD *)(v7 + 16) = v33;
    swift_bridgeObjectRetain(v18);
LABEL_6:

    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(0x8000000000000000);
    ++v10;
    v7 = v88;
    if (v4 == (void *)v8)
      goto LABEL_31;
  }
  __break(1u);
LABEL_66:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

double sub_10041A7EC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Class isa;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t aBlock[6];
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    KeyPath = swift_getKeyPath(&unk_100723850);
    v10 = swift_getKeyPath(&unk_100723878);
    static Published.subscript.getter(aBlock, v8, KeyPath, v10);
    swift_release(KeyPath);
    swift_release(v10);
    v11 = aBlock[0];
    swift_bridgeObjectRetain(a3);
    v12 = sub_10041CE44(v11, a2, a3);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(a3);
    if (v12)
    {
      v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
      v14 = objc_msgSend(v13, "collectionController");

      sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      aBlock[4] = (uint64_t)sub_10041AB38;
      aBlock[5] = 0;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1002A7214;
      aBlock[3] = (uint64_t)&unk_100905058;
      v16 = _Block_copy(aBlock);
      v17 = v12;
      objc_msgSend(v14, "addBooks:toCollection:forceToTop:completion:", isa, v17, 1, v16);
      _Block_release(v16);

      swift_unknownObjectRelease(v14);
    }
    else
    {
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v18 = type metadata accessor for Logger(0);
      sub_100048F64(v18, (uint64_t)qword_1009E40B0);
      v19 = swift_bridgeObjectRetain_n(a3, 2);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.error.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(12, -1);
        v23 = swift_slowAlloc(32, -1);
        aBlock[0] = v23;
        *(_DWORD *)v22 = 136315138;
        swift_bridgeObjectRetain(a3);
        v25 = sub_100040F58(a2, a3, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v22 + 4, v22 + 12);
        swift_bridgeObjectRelease_n(a3, 3);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to add books to user collections: collection ID %s not found", v22, 0xCu);
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

        *(_QWORD *)&result = swift_bridgeObjectRelease_n(a3, 2).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_10041AB38(uint64_t a1, uint64_t a2)
{
  sub_10041AEE4(a1, a2, "Unable to add books to user collections: %s");
}

void sub_10041AB44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t KeyPath;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  NSString v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t aBlock[6];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    KeyPath = swift_getKeyPath(&unk_100723850);
    v11 = swift_getKeyPath(&unk_100723878);
    static Published.subscript.getter(aBlock, v9, KeyPath, v11);
    swift_release(KeyPath);
    swift_release(v11);
    v12 = aBlock[0];
    swift_bridgeObjectRetain(a3);
    LOBYTE(KeyPath) = sub_10041CCAC(v12, a2, a3);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(a3);
    if ((KeyPath & 1) != 0)
    {
      v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
      v14 = objc_msgSend(v13, "collectionController");

      v15 = *(_QWORD *)(a4 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain(a4);
        v16 = (_QWORD *)(a4 + 40);
        do
        {
          v17 = *v16;
          swift_bridgeObjectRetain(*v16);
          v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v17);
          v19 = String._bridgeToObjectiveC()();
          aBlock[4] = (uint64_t)sub_10041AED8;
          aBlock[5] = 0;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1002A7214;
          aBlock[3] = (uint64_t)&unk_100905030;
          v20 = _Block_copy(aBlock);
          objc_msgSend(v14, "addStoreID:toCollectionID:forceToTop:completion:", v18, v19, 1, v20);
          _Block_release(v20);

          v16 += 2;
          --v15;
        }
        while (v15);
        swift_unknownObjectRelease(v14);

        swift_bridgeObjectRelease(a4);
        return;
      }
      swift_unknownObjectRelease(v14);
    }
    else
    {
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v21 = type metadata accessor for Logger(0);
      sub_100048F64(v21, (uint64_t)qword_1009E40B0);
      v22 = swift_bridgeObjectRetain_n(a3, 2);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        aBlock[0] = v26;
        *(_DWORD *)v25 = 136315138;
        swift_bridgeObjectRetain(a3);
        v28 = sub_100040F58(a2, a3, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v25 + 4, v25 + 12);
        swift_bridgeObjectRelease_n(a3, 3);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to add storeIDs to user collections: collection ID %s not found", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2);
      }
    }

  }
}

void sub_10041AED8(uint64_t a1, uint64_t a2)
{
  sub_10041AEE4(a1, a2, "Unable to add storeID to user collections: %s");
}

void sub_10041AEE4(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *oslog;
  uint64_t v14;
  _QWORD v15[3];
  _BYTE v16[8];
  uint64_t v17;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v5 = type metadata accessor for Logger(0);
    sub_100048F64(v5, (uint64_t)qword_1009E40B0);
    swift_errorRetain(a2);
    v6 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v17 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue(a2, v16, v15);
      v10 = Error.localizedDescription.getter(v15[1], v15[2]);
      v12 = v11;
      v14 = sub_100040F58(v10, v11, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, v15, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v12);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, a3, v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

double sub_10041B0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  double result;

  v15 = swift_allocObject(&unk_100905180, 32, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v16 = swift_allocObject(&unk_1009051A8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = (_QWORD *)swift_allocObject(&unk_1009051D0, 80, 7);
  v17[2] = v16;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = a6;
  v17[6] = a7;
  v17[7] = a8;
  v17[8] = sub_10041D3B8;
  v17[9] = v15;
  swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a8);
  swift_retain(a2);
  swift_retain(v16);
  swift_bridgeObjectRetain(a5);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10041D454, v17);
  swift_release(v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_10041B204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, NSString a5, uint64_t a6, void (*a7)(__int128 *))
{
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void (*v45)(__int128 *);
  __int128 aBlock;
  __int128 v47;
  void (*v48)(void *);
  _QWORD *v49;
  char v50[24];

  v12 = a1 + 16;
  swift_beginAccess(a1 + 16, v50, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    v45 = a7;
    if (a3)
    {
      v15 = a3;
    }
    else
    {
      sub_100418B98();
      a2 = v16;
      v15 = v17;
    }
    swift_bridgeObjectRetain(a3);
    v18 = sub_10041D30C(255, a2, v15);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v25 = swift_bridgeObjectRelease(v15);
    v26 = static String._fromSubstring(_:)(v18, v20, v22, v24, v25);
    v28 = v27;
    swift_bridgeObjectRelease(v24);
    v29 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v30 = objc_msgSend(v29, "collectionController");

    if (a5)
      a5 = String._bridgeToObjectiveC()();
    v31 = (_QWORD *)swift_allocObject(&unk_1009051F8, 40, 7);
    v31[2] = v26;
    v31[3] = v28;
    v31[4] = a6;
    v48 = sub_10041D494;
    v49 = v31;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v47 = sub_10000B65C;
    *((_QWORD *)&v47 + 1) = &unk_100905210;
    v32 = _Block_copy(&aBlock);
    v33 = v49;
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(a6);
    v34 = objc_msgSend(v30, "insertNewCollectionSyncOnMainQueueWithCollectionID:newCollectionBlock:", a5, v32, swift_release(v33).n128_f64[0]);
    swift_unknownObjectRelease(v30);
    _Block_release(v32);

    if (v34)
    {
      v35 = objc_msgSend((id)swift_unknownObjectRetain(v34), "collectionID");
      if (!v35)
      {
        __break(1u);
        return;
      }
      v36 = v35;
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v39 = v38;

      *(_QWORD *)&aBlock = v37;
      *((_QWORD *)&aBlock + 1) = v39;
      *(_QWORD *)&v47 = v26;
      *((_QWORD *)&v47 + 1) = v28;
      LOBYTE(v48) = 0;
      v45(&aBlock);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v39);
      swift_unknownObjectRelease_n(v34, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v28);
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v40 = type metadata accessor for Logger(0);
      v41 = sub_100048F64(v40, (uint64_t)qword_1009E40B0);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to create new collection", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }

      aBlock = 0u;
      v47 = 0u;
      LOBYTE(v48) = 1;
      v45(&aBlock);
    }

  }
}

void sub_10041B554(void *a1)
{
  NSString v2;
  Class isa;

  if (a1)
  {
    v2 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setTitle:", v2);

    sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "addLibraryAssets:", isa);

  }
}

void sub_10041B5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  NSString v6;
  id v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v5 = objc_allocWithZone((Class)NSFetchRequest);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithEntityName:", v6);

  v8 = (void *)objc_opt_self(BKLibraryManager);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "predicateForCollectionMembersInCollectionID:hideUnownedItems:", v9, 0);

  objc_msgSend(v7, "setPredicate:", v10);
  v11 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
  v12 = NSManagedObjectContext.count<A>(for:)(v7, v11);

  *(_QWORD *)a4 = v12;
  *(_BYTE *)(a4 + 8) = 0;
}

uint64_t sub_10041B98C()
{
  return type metadata accessor for LibraryCollectionsService(0);
}

uint64_t sub_10041B994(uint64_t a1, uint64_t a2)
{
  return sub_10041B9BC(a1, a2, (uint64_t)&unk_1007238A0, (uint64_t)&unk_1007238C8);
}

uint64_t sub_10041B9A8(uint64_t a1, uint64_t a2)
{
  return sub_10041B9BC(a1, a2, (uint64_t)&unk_100723850, (uint64_t)&unk_100723878);
}

uint64_t sub_10041B9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v10;

  v6 = *v4;
  KeyPath = swift_getKeyPath(a3);
  v8 = swift_getKeyPath(a4);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  return v10;
}

void sub_10041BA2C()
{
  sub_100418B98();
}

uint64_t sub_10041BA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v9 = sub_10004CFD4(&qword_1009DCCA8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v4;
  v14 = (_QWORD *)swift_allocObject(&unk_1009053D8, 64, 7);
  v14[2] = v13;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a1;
  v14[6] = a2;
  v14[7] = _swiftEmptyArrayStorage;
  v15 = sub_10004CFD4((uint64_t *)&unk_1009DCCB0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  swift_bridgeObjectRetain(a2);
  v16 = v13;
  swift_bridgeObjectRetain(a4);
  v17 = Future.init(_:)(sub_10041D580, v14);
  v22[1] = v17;
  v18 = sub_100030B34((unint64_t *)&unk_1009E2820, (uint64_t *)&unk_1009DCCB0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  Publisher.map<A>(_:)(sub_1004196E0, 0, v15, &type metadata for String, v18);
  swift_release(v17);
  v19 = sub_100030B34((unint64_t *)&unk_1009DCCC0, &qword_1009DCCA8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v20 = Publisher.eraseToAnyPublisher()(v9, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v20;
}

double sub_10041BBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  double result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v8 = (_QWORD *)swift_allocObject(&unk_1009053B0, 48, 7);
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  v8[5] = a2;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035B0F4, v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_10041BC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v4 = swift_allocObject(&unk_100905388, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_bridgeObjectRetain(a2);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035B0C0, v4);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_10041BD08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v2 = swift_allocObject(&unk_1009051A8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = swift_allocObject(&unk_100905360, 32, 7);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  swift_retain(v2);
  swift_bridgeObjectRetain(a1);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035B094, v3);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

double sub_10041BDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10041BDEC(a1, a2, a3, a4, a5, (uint64_t)&unk_100905338, (uint64_t)sub_10035AD0C);
}

double sub_10041BDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10041BDEC(a1, a2, a3, a4, a5, (uint64_t)&unk_100905310, (uint64_t)sub_10035ACC8);
}

double sub_10041BDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  _QWORD *v13;
  double result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v12 = swift_allocObject(&unk_1009051A8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = (_QWORD *)swift_allocObject(a6, 48, 7);
  v13[2] = v12;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a1;
  swift_retain(v12);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a1);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(a7, v13);
  swift_release(v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_10041BEC4(uint64_t a1)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *v1;
  v4 = swift_allocObject(&unk_1009052E8, 64, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_QWORD *)(v4 + 56) = a1;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009DCCB0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = v3;
  swift_bridgeObjectRetain(a1);
  return Future.init(_:)(sub_10041D580, v4);
}

void sub_10041BF54(uint64_t a1, uint64_t a2)
{
  sub_10041D600(a1, a2);
}

void sub_10041BF68(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  char v11;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Books25LibraryCollectionsService_defaultCollectionsFRC);
  if (v4
    && (sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr),
        v5 = v4,
        v6 = a1,
        v7 = static NSObject.== infix(_:_:)(v5, v6),
        v5,
        v6,
        (v7 & 1) != 0))
  {
    sub_10041C06C();
  }
  else
  {
    v8 = *(void **)(v2 + OBJC_IVAR____TtC5Books25LibraryCollectionsService_userCollectionsFRC);
    if (v8)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
      v9 = a1;
      v10 = v8;
      v11 = static NSObject.== infix(_:_:)(v10, v9);

      if ((v11 & 1) != 0)
        sub_10041C2E8();
    }
  }
}

void sub_10041C06C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *oslog;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books25LibraryCollectionsService_defaultCollectionsFRC);
  if (v1 && (v2 = objc_msgSend(v1, "fetchedObjects")) != 0)
  {
    v3 = v2;
    v4 = sub_100009E04(0, (unint64_t *)&qword_1009D7640, BKCollection_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009E40B0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Got updated default collections", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v11 = swift_allocObject(&unk_1009051A8, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = swift_allocObject(&unk_100905478, 32, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v5;
    swift_retain(v11);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10041D848, v12);
    swift_release(v11);
    swift_release(v12);
  }
  else
  {
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048F64(v13, (uint64_t)qword_1009E40B0);
    oslog = Logger.logObject.getter(v14);
    v15 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Can't get fetched objects from updated defaultCollectionsFRC", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
}

void sub_10041C2E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *oslog;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books25LibraryCollectionsService_userCollectionsFRC);
  if (v1 && (v2 = objc_msgSend(v1, "fetchedObjects")) != 0)
  {
    v3 = v2;
    v4 = sub_100009E04(0, (unint64_t *)&qword_1009D7640, BKCollection_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009E40B0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Got updated user collections", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v11 = swift_allocObject(&unk_1009051A8, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = swift_allocObject(&unk_1009054A0, 32, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v5;
    swift_retain(v11);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10041D880, v12);
    swift_release(v11);
    swift_release(v12);
  }
  else
  {
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048F64(v13, (uint64_t)qword_1009E40B0);
    oslog = Logger.logObject.getter(v14);
    v15 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Can't get fetched objects from updated userCollectionsFRC", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

  }
}

id sub_10041C5B8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  id result;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = *a1;
  v4 = objc_msgSend(*a1, "title");
  if (!v4)
  {
LABEL_6:
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v11 = type metadata accessor for Logger(0);
    sub_100048F64(v11, (uint64_t)qword_1009E40B0);
    v12 = v3;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v28 = a2;
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v31 = v27;
      *(_DWORD *)v15 = 136315138;
      v16 = objc_msgSend(v12, "collectionID");
      if (v16)
      {
        v17 = v16;
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v20 = v19;

      }
      else
      {
        v18 = 0;
        v20 = 0;
      }
      v21 = Optional<A>.description.getter(v18, v20);
      v23 = v22;
      swift_bridgeObjectRelease(v20);
      v29 = sub_100040F58(v21, v23, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v15 + 4, v15 + 12);

      swift_bridgeObjectRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "User collection %s has empty title, use fallback instead", v15, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      a2 = v28;
    }
    else
    {

    }
    sub_100418B98();
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    objc_msgSend(v12, "setTitle:", v26);

LABEL_15:
    *a2 = v3;
    return v3;
  }

  result = objc_msgSend(v3, "title");
  if (result)
  {
    v6 = result;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v9 = v8;

    swift_bridgeObjectRelease(v9);
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
      goto LABEL_15;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_10041C86C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = sub_10003354C(a2);
    KeyPath = swift_getKeyPath(&unk_1007238A0);
    v8 = swift_getKeyPath(&unk_1007238C8);
    v9 = v6;
    return static Published.subscript.setter(&v9, v5, KeyPath, v8);
  }
  return result;
}

void *sub_10041C900(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *result;
  id v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = sub_10041CB48(a2);

    KeyPath = swift_getKeyPath(&unk_100723850);
    v8 = swift_getKeyPath(&unk_100723878);
    v9 = v6;
    return (void *)static Published.subscript.setter(&v9, v5, KeyPath, v8);
  }
  return result;
}

uint64_t sub_10041C9A8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007238E8);
  v5 = swift_getKeyPath(&unk_100723910);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10041CA24(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007238E8);
  v5 = swift_getKeyPath(&unk_100723910);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10041CA90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_100723850, (uint64_t)&unk_100723878, a2);
}

uint64_t sub_10041CAB4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10041CAD8(a1, a2, a3, a4, (uint64_t)&unk_100723850, (uint64_t)&unk_100723878);
}

uint64_t sub_10041CAD8(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_bridgeObjectRetain(v7);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

_QWORD *sub_10041CB48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v4)
      break;
    v16 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      v14 = v7;
      sub_10041C5B8(&v14, &v15);

      if (v2)
        return (_QWORD *)swift_release(v16);
      ++v6;
      v10 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      if (v4 == v6)
        return v16;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_10041CCAC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v6)
  {
    do
    {
      v7 = 4;
      while (1)
      {
        v8 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5)
           : *(id *)(v5 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        v11 = objc_msgSend(v8, "collectionID");
        if (v11)
        {
          v12 = v11;
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
          v15 = v14;

          if (v13 == a2 && v15 == a3)
          {
            v19 = v5;
            v5 = a3;
            swift_bridgeObjectRelease(v19);

LABEL_19:
            v18 = 1;
            goto LABEL_26;
          }
          v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, a2, a3, 0);

          swift_bridgeObjectRelease(v15);
          if ((v17 & 1) != 0)
            goto LABEL_19;
        }
        else
        {

        }
        ++v7;
        if (v10 == v6)
        {
          v18 = 0;
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_21:
      v20 = a3;
      if (v5 < 0)
        v21 = v5;
      else
        v21 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      a3 = v20;
      v6 = v22;
    }
    while (v22);
  }
  v18 = 0;
LABEL_26:
  swift_bridgeObjectRelease(v5);
  return v18;
}

void *sub_10041CE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    do
    {
      v6 = 4;
      while (1)
      {
        v7 = (a1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
           : *(id *)(a1 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_msgSend(v7, "collectionID");
        if (v10)
        {
          v11 = v10;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease(a1);
            v17 = a3;
            goto LABEL_18;
          }
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, a2, a3, 0);
          swift_bridgeObjectRelease(v14);
          if ((v16 & 1) != 0)
          {
            v17 = a1;
LABEL_18:
            swift_bridgeObjectRelease(v17);
            return v8;
          }
        }

        ++v6;
        if (v9 == v5)
          goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      v18 = a3;
      if (a1 < 0)
        v19 = a1;
      else
        v19 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v20 = _CocoaArrayWrapper.endIndex.getter(v19);
      a3 = v18;
      v5 = v20;
    }
    while (v20);
  }
LABEL_24:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_10041CFD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10041CFF8(uint64_t a1)
{
  sub_100419D10(a1);
}

uint64_t sub_10041D000()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10041D014(uint64_t a1)
{
  uint64_t v1;

  sub_100419860(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10041D020()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_10041D030(void *a1, char a2)
{
  id v3;
  Swift::String v4;
  unsigned __int8 v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double result;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v3 = a1;
  v4._countAndFlagsBits = _s5Books20RootBarItemsProviderC14itemIdentifier22forDefaultCollectionIDSSSgSo09BCDefaultjK0a_tFZ_0((uint64_t)v3);
  if (v4._object)
  {
    v5 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v4);

    if (v5 > 0x10u || ((1 << v5) & 0x1E01F) == 0)
    {
      v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v5);
      v9 = v8;
      if (v7 == 0x7972617262696CLL && v8 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease(0xE700000000000000);
      }
      else
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x7972617262696CLL, 0xE700000000000000, 0);
        swift_bridgeObjectRelease(v9);
        if ((v19 & 1) == 0)
        {
          sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
          v20 = swift_allocObject(&unk_100905248, 25, 7);
          *(_QWORD *)(v20 + 16) = v3;
          *(_BYTE *)(v20 + 24) = a2 & 1;
          v21 = v3;
          static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10041D50C, v20);
          *(_QWORD *)&result = swift_release(v20).n128_u64[0];
          return result;
        }
      }
    }
  }
  else
  {

  }
  if (qword_1009CE4F0 != -1)
    swift_once(&qword_1009CE4F0, sub_100450628);
  v10 = type metadata accessor for Logger(0);
  sub_100048F64(v10, (uint64_t)qword_1009E40B0);
  v22 = v3;
  v11 = Logger.logObject.getter(v22);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v24 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v17 = v16;
    v23 = sub_100040F58(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4, v13 + 12);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Collection %s does not support setting isHidden", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

  }
  return result;
}

uint64_t sub_10041D30C(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

uint64_t sub_10041D394()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10041D3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_BYTE *);
  _BYTE v4[40];

  v2 = *(uint64_t (**)(_BYTE *))(v1 + 16);
  sub_10041D4A0(a1, (uint64_t)v4);
  return v2(v4);
}

uint64_t sub_10041D3EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041D410()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

void sub_10041D454()
{
  uint64_t v0;

  sub_10041B204(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(NSString *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void (**)(__int128 *))(v0 + 64));
}

uint64_t sub_10041D468()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10041D494(void *a1)
{
  sub_10041B554(a1);
}

uint64_t sub_10041D4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E2818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041D4E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10041D50C()
{
  uint64_t v0;

  sub_10041929C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_10041D518(uint64_t a1)
{
  uint64_t v1;

  sub_1004193F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10041D524()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10041D534@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003D0B74(a1, (uint64_t)&unk_1007238A0, (uint64_t)&unk_1007238C8, a2);
}

uint64_t sub_10041D558(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10041CAD8(a1, a2, a3, a4, (uint64_t)&unk_1007238A0, (uint64_t)&unk_1007238C8);
}

uint64_t sub_10041D594()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10041D5C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10041D600(uint64_t a1, uint64_t a2)
{
  id v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t v14;
  char v15;

  v14 = 0;
  v15 = 1;
  v4 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v5 = (_QWORD *)swift_allocObject(&unk_100905400, 40, 7);
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = &v14;
  v6 = swift_allocObject(&unk_100905428, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_10041D7E4;
  *(_QWORD *)(v6 + 24) = v5;
  v12[4] = sub_1002FAC00;
  v13 = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100064AFC;
  v12[3] = &unk_100905440;
  v7 = _Block_copy(v12);
  v8 = v13;
  swift_retain(v6);
  swift_bridgeObjectRetain(a2);
  objc_msgSend(v4, "performBlockInUIContext:", v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v6, "", 111, 306, 60, 1);
  swift_release(v6);
  if ((a2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((v15 & 1) != 0)
    {
      v9 = sub_10041D800();
      v10 = swift_allocError(&type metadata for LibraryCollectionsServiceError, v9, 0, 0);
      *v11 = 1;
      swift_willThrow(v10);
    }
    swift_release(v5);
  }
}

uint64_t sub_10041D7C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10041D7E4(uint64_t a1)
{
  uint64_t *v1;

  sub_10041B5F4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10041D7F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10041D800()
{
  unint64_t result;

  result = qword_1009E2830;
  if (!qword_1009E2830)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryCollectionsServiceError, &type metadata for LibraryCollectionsServiceError);
    atomic_store(result, (unint64_t *)&qword_1009E2830);
  }
  return result;
}

uint64_t sub_10041D848()
{
  uint64_t v0;

  return sub_10041C86C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10041D854()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void *sub_10041D880()
{
  uint64_t v0;

  return sub_10041C900(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10041D888()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041D8AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_10041D91C(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *result;
  char v8;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_1002C3570(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      result = memmove(&v3[4 * a1 + 4], &v3[4 * a1 + 8], 32 * v6);
      v3[2] = v5;
      *v1 = v3;
      return result;
    }
  }
  v8 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v8, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10041DA10(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_1002C35C0(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[4 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10041DB04(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_1002C3598(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10041DBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = _s5Books18PropertyValueActorV9ActorTypeCMa_1();
  v1 = swift_allocObject(v0, 112, 15);
  result = swift_defaultActor_initialize(v1);
  qword_1009E2860 = v1;
  return result;
}

uint64_t *NSNotificationName.markedAsFinished.unsafeMutableAddressor()
{
  if (qword_1009CE498 != -1)
    swift_once(&qword_1009CE498, sub_100064C98);
  return &static NSNotificationName.markedAsFinished;
}

id static NSNotificationName.markedAsFinished.getter()
{
  if (qword_1009CE498 != -1)
    swift_once(&qword_1009CE498, sub_100064C98);
  return (id)static NSNotificationName.markedAsFinished;
}

id sub_10041DD28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___BKPersonalizationEventDonor____lazy_storage___dateFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR___BKPersonalizationEventDonor____lazy_storage___dateFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___BKPersonalizationEventDonor____lazy_storage___dateFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSISO8601DateFormatter), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

double PersonalizationEventDonor.donate(with:context:donationComplete:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  double result;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _OWORD v37[2];
  uint64_t v38;
  char v39;

  v11 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Context.updateLocalStorage.getter(v14);
  v17 = v16;
  if (!a3)
  {
    v18 = swift_bridgeObjectRelease(v16);
    static Context.syncViaCloudKit.getter(v18);
    swift_bridgeObjectRelease(v19);
    goto LABEL_6;
  }
  if (v15 != a2 || v16 != a3)
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v15, v16, 0);
    v23 = swift_bridgeObjectRelease(v17);
    if ((v22 & 1) != 0)
      goto LABEL_11;
    v25 = static Context.syncViaCloudKit.getter(v23);
    v17 = v24;
    if (v25 != a2 || v24 != a3)
    {
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v25, v24, 0);
      swift_bridgeObjectRelease(v17);
      if ((v26 & 1) != 0)
        goto LABEL_11;
LABEL_6:
      v38 = 0;
      memset(v37, 0, sizeof(v37));
      v39 = -1;
      v20 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
      v36 = (id)BMPropertyValue.init(with:)(v37);
      a4();

      return result;
    }
  }
  swift_bridgeObjectRelease(v17);
LABEL_11:
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 1, 1, v27);
  v28 = qword_1009CE490;
  v29 = v5;
  v30 = a1;
  swift_retain(a5);
  if (v28 != -1)
    swift_once(&qword_1009CE490, sub_10041DBE0);
  v31 = qword_1009E2860;
  v32 = sub_10041E4B0();
  v33 = (_QWORD *)swift_allocObject(&unk_100905610, 64, 7);
  v33[2] = v31;
  v33[3] = v32;
  v33[4] = v29;
  v33[5] = v30;
  v33[6] = a4;
  v33[7] = a5;
  swift_retain(v31);
  v34 = sub_10030C02C((uint64_t)v13, (uint64_t)&unk_1009E2878, (uint64_t)v33);
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

uint64_t sub_10041DFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7[33] = a6;
  v7[34] = a7;
  v7[31] = a4;
  v7[32] = a5;
  v8 = type metadata accessor for CDProperty.SpecialPlistKeys(0);
  v7[35] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[36] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[37] = swift_task_alloc(v10);
  v7[38] = swift_task_alloc(v10);
  if (qword_1009CE490 != -1)
    swift_once(&qword_1009CE490, sub_10041DBE0);
  return swift_task_switch(sub_10041E07C, qword_1009E2860, 0);
}

uint64_t sub_10041E07C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  unint64_t v31;
  char v32;
  void (*v33)(void);
  id v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  double v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  _OWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = *(_QWORD *)(v1 + 248);
  v3 = BasePropertyConfiguration.eventName.getter(a1);
  v5 = v4;
  v6 = (_QWORD *)(v2 + OBJC_IVAR___BKPersonalizationEventDonor_cachedEnagagementPropertyValues);
  swift_beginAccess(v2 + OBJC_IVAR___BKPersonalizationEventDonor_cachedEnagagementPropertyValues, v1 + 200, 0, 0);
  v7 = *v6;
  if (!*(_QWORD *)(*v6 + 16))
    goto LABEL_10;
  swift_bridgeObjectRetain(*v6);
  v8 = sub_10004CE80(v3, v5);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease(v7);
LABEL_10:
    swift_bridgeObjectRelease(v5);
    v33 = *(void (**)(void))(v1 + 264);
    *(_QWORD *)(v1 + 96) = 0;
    *(_OWORD *)(v1 + 64) = 0u;
    *(_OWORD *)(v1 + 80) = 0u;
    *(_BYTE *)(v1 + 104) = -1;
    v34 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
    v35 = (void *)BMPropertyValue.init(with:)(v1 + 64);
    v33();

LABEL_11:
    v36 = *(_QWORD *)(v1 + 296);
    swift_task_dealloc(*(_QWORD *)(v1 + 304));
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v5);
  v62 = v10;
  v11 = sub_1003A34C0(v10);
  if (!v12)
  {
    v5 = v10;
    goto LABEL_10;
  }
  v60 = v12;
  v61 = v11;
  result = sub_1002BDF78(v11, v12);
  if (result)
  {
    v14 = result;
    v59 = (_OWORD *)(v1 + 144);
    v15 = *(_QWORD *)(v1 + 304);
    v16 = *(_QWORD *)(v1 + 288);
    v57 = *(_QWORD *)(v1 + 280);
    v17 = BasePropertyConfiguration.eventName.getter(result);
    v19 = v18;
    swift_beginAccess(v6, v1 + 176, 33, 0);
    swift_bridgeObjectRetain(v62);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
    v63 = *v6;
    *v6 = 0x8000000000000000;
    sub_1002C4914(v62, v17, v19, isUniquelyReferenced_nonNull_native);
    v21 = *v6;
    *v6 = v63;
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
    swift_endAccess(v1 + 176);
    v22 = enum case for CDProperty.SpecialPlistKeys.assetID(_:);
    v23 = v57;
    v24 = *(uint64_t (**)(uint64_t))(v16 + 104);
    v25 = v24(v15);
    v26 = CDProperty.SpecialPlistKeys.rawValue.getter(v25);
    v28 = v27;
    v58 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v58(v15, v23);
    v29 = v14;
    if (*(_QWORD *)(v14 + 16))
    {
      v30 = (_OWORD *)(v1 + 112);
      v31 = sub_10004CE80(v26, v28);
      if ((v32 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(v14 + 56) + 32 * v31, v1 + 112);
LABEL_15:
        v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v24;
        swift_bridgeObjectRelease(v28);
        if (*(_QWORD *)(v1 + 136))
        {
          v39 = swift_dynamicCast(v1 + 224, v30, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if (v39)
            v40 = *(_QWORD *)(v1 + 224);
          else
            v40 = 0;
          if (v39)
            v41 = *(_QWORD *)(v1 + 232);
          else
            v41 = 0;
        }
        else
        {
          sub_100010960((uint64_t)v30, (uint64_t *)&unk_1009D04E0);
          v40 = 0;
          v41 = 0;
        }
        v42 = *(_QWORD *)(v1 + 296);
        v43 = *(_QWORD *)(v1 + 280);
        v44 = *(void (**)(void))(v1 + 264);
        v45 = v38(v42, v22, v43);
        v46 = CDProperty.SpecialPlistKeys.rawValue.getter(v45);
        v48 = v47;
        v58(v42, v43);
        sub_1002BD938(v46, v48, v59);
        swift_bridgeObjectRelease(v48);
        sub_100010960((uint64_t)v59, (uint64_t *)&unk_1009D04E0);
        sub_100056604(v29);
        v50 = v49;
        swift_bridgeObjectRelease(v29);
        *(_QWORD *)(v1 + 16) = v61;
        *(_QWORD *)(v1 + 24) = v60;
        *(_QWORD *)(v1 + 32) = v40;
        *(_QWORD *)(v1 + 40) = v41;
        *(_QWORD *)(v1 + 48) = v50;
        *(_BYTE *)(v1 + 56) = 2;
        v51 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
        v52 = (void *)BMPropertyValue.init(with:)(v1 + 16);
        v44();

        *(_QWORD *)(v1 + 240) = v62;
        v53 = sub_10004CFD4(&qword_1009E2888);
        v54 = sub_100030B34(&qword_1009E2A38, &qword_1009E2888, (uint64_t)&protocol conformance descriptor for [A : B]);
        v55 = Collection.isNotEmpty.getter(v53, v54);
        *(_QWORD *)&v56 = swift_bridgeObjectRelease(v62).n128_u64[0];
        if ((v55 & 1) != 0)
          objc_msgSend(*(id *)(v1 + 248), "propertyDidChange:propertyConfiguration:", *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256), v56);
        goto LABEL_11;
      }
      v37 = 0uLL;
    }
    else
    {
      v37 = 0uLL;
      v30 = (_OWORD *)(v1 + 112);
    }
    *v30 = v37;
    v30[1] = v37;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

unint64_t sub_10041E4B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E2870;
  if (!qword_1009E2870)
  {
    v1 = _s5Books18PropertyValueActorV9ActorTypeCMa_1();
    result = swift_getWitnessTable(&unk_100723A14, v1);
    atomic_store(result, (unint64_t *)&qword_1009E2870);
  }
  return result;
}

uint64_t _s5Books18PropertyValueActorV9ActorTypeCMa_1()
{
  return objc_opt_self(_TtCV5BooksP33_DDD98EB54E619D3715FDF2F02FDBC3D218PropertyValueActor9ActorType);
}

uint64_t sub_10041E51C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1009E286C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_10041DFDC(a1, v4, v5, v6, v7, v9, v8);
}

id PersonalizationEventDonor.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for PersonalizationEventDonor);
}

_QWORD *PersonalizationEventDonor.dictPathValues(_:path:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];

  if (!a1)
    return _swiftEmptyArrayStorage;
  v3 = _swiftEmptyArrayStorage;
  if (a2[2])
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v6 = a2[4];
      v5 = a2[5];
      swift_bridgeObjectRetain(v5);
      v7 = sub_10004CE80(v6, v5);
      if ((v8 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v40);
        swift_bridgeObjectRelease(v5);
        if (*((_QWORD *)&v41 + 1))
        {
          sub_10004CFC4(&v40, v42);
          v39 = a2;
          swift_bridgeObjectRetain(a2);
          sub_10041DB04(0);
          swift_bridgeObjectRelease(v9);
          v10 = a2;
          if (!a2[2])
          {
            swift_bridgeObjectRelease(v39);
            v16 = sub_10004CFD4(&qword_1009D4B80);
            v3 = (_QWORD *)swift_allocObject(v16, 64, 7);
            *((_OWORD *)v3 + 1) = xmmword_10070CCA0;
            sub_10004CD0C((uint64_t)v42, (uint64_t)(v3 + 4));
LABEL_34:
            _s5Books15CurrentPageViewVwxx_0(v42);
            return v3;
          }
          sub_10004CD0C((uint64_t)v42, (uint64_t)&v40);
          v11 = sub_10004CFD4(&qword_1009D3090);
          if (swift_dynamicCast(&v36, &v40, (char *)&type metadata for Any + 8, v11, 6))
          {
            v13 = v36;
            v3 = (_QWORD *)PersonalizationEventDonor.dictPathValues(_:path:)(v36, v10, v12);
            swift_bridgeObjectRelease(v13);
            v14 = v10;
LABEL_33:
            swift_bridgeObjectRelease(v14);
            goto LABEL_34;
          }
          sub_10004CD0C((uint64_t)v42, (uint64_t)&v40);
          v17 = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
          if ((swift_dynamicCast(&v36, &v40, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
          {
            v14 = v10;
            goto LABEL_33;
          }
          v18 = (_QWORD *)v36;
          if (!v10[2]
            || ((v19 = v10[4], v20 = v10[5], v19 != 42) || v20 != 0xE100000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 42, 0xE100000000000000, 0) & 1) == 0)
          {
            swift_bridgeObjectRelease(v10);
            v14 = v18;
            goto LABEL_33;
          }
          v38 = _swiftEmptyArrayStorage;
          sub_10041DB04(0);
          swift_bridgeObjectRelease(v21);
          v22 = v18;
          v23 = v18[2];
          if (v23)
          {
            v34 = v22;
            v24 = (uint64_t)(v22 + 4);
            do
            {
              sub_10004CD0C(v24, (uint64_t)&v40);
              sub_10004CD0C((uint64_t)&v40, (uint64_t)&v36);
              if (swift_dynamicCast(&v35, &v36, (char *)&type metadata for Any + 8, v11, 6))
              {
                v25 = v35;
                v26 = v39;
                v27 = swift_bridgeObjectRetain(v39);
                v28 = PersonalizationEventDonor.dictPathValues(_:path:)(v25, v26, v27);
                swift_bridgeObjectRelease(v25);
                swift_bridgeObjectRelease(v26);
                sub_100375484(v28);
              }
              else
              {
                sub_10004CD0C((uint64_t)&v40, (uint64_t)&v36);
                if ((swift_dynamicCast(&v35, &v36, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
                {
                  v37 = &type metadata for String;
                  v36 = v35;
                  v29 = v38;
                  if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
                    v29 = sub_1005B0474(0, v29[2] + 1, 1, v29);
                  v31 = v29[2];
                  v30 = v29[3];
                  v32 = v31 + 1;
                  if (v31 >= v30 >> 1)
                  {
                    v33 = sub_1005B0474((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
                    v32 = v31 + 1;
                    v29 = v33;
                  }
                  v29[2] = v32;
                  sub_10004CFC4(&v36, &v29[4 * v31 + 4]);
                  v38 = v29;
                }
              }
              _s5Books15CurrentPageViewVwxx_0(&v40);
              v24 += 32;
              --v23;
            }
            while (v23);
            v22 = v34;
          }
          swift_bridgeObjectRelease(v22);
          swift_bridgeObjectRelease(v39);
          _s5Books15CurrentPageViewVwxx_0(v42);
          return v38;
        }
      }
      else
      {
        v40 = 0u;
        v41 = 0u;
        swift_bridgeObjectRelease(v5);
      }
    }
    else
    {
      v40 = 0u;
      v41 = 0u;
    }
    sub_100010960((uint64_t)&v40, (uint64_t *)&unk_1009D04E0);
  }
  return v3;
}

uint64_t PersonalizationEventDonor.expressionWrapper(_:matches:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  _BYTE v12[32];

  if (*(_QWORD *)(a1 + 16)
    && (v4 = sub_10004CE80(0x6973736572707865, 0xEA00000000006E6FLL), (v5 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)v12),
        v6 = sub_10004CFD4(&qword_1009D3090),
        (swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0))
  {
    v7 = v11;
    _s5Books25PersonalizationEventDonorC10expression_7matchesSbSDySSypG_yptF_0(v11, a2);
    v9 = v8;
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_10041EBC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  double v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  double *v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  double v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  Swift::Int v58;
  id v59;
  Class isa;
  id v61;
  double v62;
  unint64_t v63;
  unint64_t v64;
  double v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  BOOL v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  _QWORD *v75;
  unsigned __int8 *v76;
  unint64_t v77;
  _BYTE *v78;
  BOOL v79;
  unint64_t v80;
  _QWORD *v81;
  char v82;
  _BYTE *v83;
  BOOL v84;
  double v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int64_t v110;
  int64_t v111;
  unint64_t v112;
  unint64_t i;
  uint64_t *v114;
  uint64_t v115;
  void *v116;
  Swift::String v117;
  Swift::Int v118;
  unint64_t v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  char v142;
  unint64_t v143;
  uint64_t v144;
  _BOOL8 v145;
  uint64_t v146;
  char v147;
  unint64_t v148;
  char v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char **v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  NSObject *v169;
  os_log_type_t v170;
  uint64_t v171;
  double v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  unint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  void *v184;
  uint64_t v185;
  void *v186;
  id v187;
  id v188;
  uint64_t v189;
  _QWORD *v191;
  uint64_t v192;
  char *v193;
  uint64_t ObjectType;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _BYTE *v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  __int128 v215;
  uint64_t v216;
  BOOL v217;
  double v218[2];
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  double v223;
  unint64_t v224;
  _QWORD *v225;
  __int128 v226;
  __int128 v227;
  _QWORD *v228;

  v195 = a7;
  v201 = a6;
  v199 = a4;
  v198 = a3;
  v203 = a2;
  v205 = a1;
  ObjectType = swift_getObjectType();
  v197 = type metadata accessor for Logger(0);
  v196 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v200 = (char *)&v191 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v193 = (char *)&v191 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = _swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(a5 + 64);
  v214 = a5 + 64;
  v12 = 1 << *(_BYTE *)(a5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v202 = OBJC_IVAR___BKPersonalizationEventDonor_finishingBookAutomatically;
  *(_QWORD *)&v215 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain(a5);
  v15 = 0;
  v192 = 0;
  v16 = _swiftEmptyDictionarySingleton;
  v213 = (char *)&type metadata for Any + 8;
  v212 = 0x80000001007C9000;
  v211 = _swiftEmptyArrayStorage;
  v206 = a5;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_17;
    }
    v19 = __OFADD__(v15++, 1);
    if (v19)
    {
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
    if (v15 >= (uint64_t)v215)
      goto LABEL_128;
    v20 = *(_QWORD *)(v214 + 8 * v15);
    if (!v20)
      break;
LABEL_16:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_17:
    v22 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 16 * v18);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v18);
    v26 = *(void **)(v25 + 16);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    if (v26)
    {
      v27 = sub_10004CE80(0xD000000000000012, v212);
      if ((v28 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)&v226);
        v29 = swift_dynamicCast(&v223, &v226, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        if (v29)
          v30 = *(_QWORD *)&v223;
        else
          v30 = 0;
        if (v29)
          v26 = (void *)v224;
        else
          v26 = 0;
        if (!*(_QWORD *)(v25 + 16))
          goto LABEL_37;
      }
      else
      {
        v30 = 0;
        v26 = 0;
        if (!*(_QWORD *)(v25 + 16))
          goto LABEL_37;
      }
    }
    else
    {
      v30 = 0;
      if (!*(_QWORD *)(v25 + 16))
        goto LABEL_37;
    }
    v31 = sub_10004CE80(0x746C694674736F70, 0xEA00000000007265);
    if ((v32 & 1) != 0)
    {
      sub_10004CD0C(*(_QWORD *)(v25 + 56) + 32 * v31, (uint64_t)&v226);
      if ((swift_dynamicCast(&v223, &v226, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v33 = v30;
        v216 = v15;
        v210 = (_QWORD *)v14;
        v34 = v223;
        v35 = v224;
        swift_bridgeObjectRetain(v23);
        v36 = (_QWORD *)v33;
        if ((swift_isUniquelyReferenced_nonNull_native(v211) & 1) == 0)
          v211 = sub_1005B18C4(0, v211[2] + 1, 1, v211);
        v38 = v211[2];
        v37 = v211[3];
        if (v38 >= v37 >> 1)
          v211 = sub_1005B18C4((_QWORD *)(v37 > 1), v38 + 1, 1, v211);
        v39 = v211;
        v211[2] = v38 + 1;
        v40 = (double *)&v39[4 * v38];
        *((_QWORD *)v40 + 4) = v24;
        *((_QWORD *)v40 + 5) = v23;
        v40[6] = v34;
        *((_QWORD *)v40 + 7) = v35;
        a5 = v206;
        v15 = v216;
        v30 = (uint64_t)v36;
        v14 = (unint64_t)v210;
      }
    }
LABEL_37:
    if (*(_QWORD *)(v25 + 16) && (v41 = sub_10004CE80(1752457584, 0xE400000000000000), (v42 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v25 + 56) + 32 * v41, (uint64_t)&v226);
    }
    else
    {
      v226 = 0u;
      v227 = 0u;
    }
    swift_bridgeObjectRelease(v25);
    if (!*((_QWORD *)&v227 + 1))
    {
      swift_bridgeObjectRelease(v26);
      sub_100010960((uint64_t)&v226, (uint64_t *)&unk_1009D04E0);
      goto LABEL_48;
    }
    v43 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    if ((swift_dynamicCast(&v223, &v226, v213, v43, 6) & 1) != 0)
    {
      v216 = v24;
      v44 = v223;
      v45 = PersonalizationEventDonor.dictPathValues(_:path:)(v205, *(_QWORD **)&v223);
      swift_bridgeObjectRelease(*(_QWORD *)&v44);
      *(_QWORD *)&v226 = v45;
      v46 = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
      v47 = sub_100030B34(&qword_1009E2A10, (uint64_t *)&unk_1009DBB30, (uint64_t)&protocol conformance descriptor for [A]);
      if ((Collection.isNotEmpty.getter(v46, v47) & 1) == 0)
      {
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v26);
        v48 = v228;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v228);
        v24 = v216;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          goto LABEL_49;
LABEL_45:
        v48 = sub_100043ED0(0, v48[2] + 1, 1, v48);
        goto LABEL_49;
      }
      v53 = v45[2];
      v54 = v216;
      if (v53)
      {
        v210 = v16;
        v191 = v45;
        v55 = (uint64_t)(v45 + 4);
        v204 = (_QWORD *)v30;
        while (1)
        {
          v208 = v53;
          v207 = v55;
          sub_10004CD0C(v55, (uint64_t)&v226);
          v225 = &type metadata for String;
          v223 = 0.0;
          v224 = 0xE000000000000000;
          sub_10004CD0C((uint64_t)&v226, (uint64_t)&v222);
          if (swift_dynamicCast(&v221, &v222, (char *)&type metadata for Any + 8, &type metadata for String, 6))break;
          sub_10004CD0C((uint64_t)&v226, (uint64_t)&v222);
          sub_10004CFC4(&v222, &v221);
          if ((swift_dynamicCast(&v220, &v221, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
            goto LABEL_63;
          sub_10004CD0C((uint64_t)&v226, (uint64_t)&v221);
          sub_10004CFC4(&v221, &v220);
          if ((swift_dynamicCast(&v219, &v220, (char *)&type metadata for Any + 8, &type metadata for Float, 6) & 1) != 0)
            goto LABEL_64;
          sub_10004CD0C((uint64_t)&v226, (uint64_t)&v220);
          sub_10004CFC4(&v220, &v219);
          if ((swift_dynamicCast(v218, &v219, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
            goto LABEL_65;
LABEL_66:
          if (v26)
          {
            swift_bridgeObjectRetain(v26);
            v57._countAndFlagsBits = v30;
            v57._object = v26;
            v58 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0C58, v57);
            swift_bridgeObjectRelease(v26);
            switch(v58)
            {
              case 0:
                _s5Books15CurrentPageViewVwxx_0(&v223);
                v59 = sub_10041DD28();
                isa = Date._bridgeToObjectiveC()().super.isa;
                v61 = objc_msgSend(v59, "stringFromDate:", isa, v191);

                v62 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(v61));
                v64 = v63;

                v225 = &type metadata for String;
                v223 = v62;
                v224 = v64;
                v54 = v216;
                break;
              case 1:
                sub_10004CD0C((uint64_t)&v226, (uint64_t)&v219);
                v72 = swift_dynamicCast(v218, &v219, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                if (!(_DWORD)v72)
                  break;
                v73 = v218[1];
                v218[0] = 0.0;
                __chkstk_darwin(v72);
                *(&v191 - 2) = v218;
                v75 = v210;
                if ((*(_QWORD *)&v73 & 0x1000000000000000) != 0
                  || !(*(_QWORD *)&v73 & 0x2000000000000000 | v74 & 0x1000000000000000))
                {
                  v102 = v192;
                  _StringGuts._slowWithCString<A>(_:)(&v217, sub_10029B598);
                  v192 = v102;
LABEL_103:
                  swift_bridgeObjectRelease(*(_QWORD *)&v73);
                  goto LABEL_106;
                }
                if ((*(_QWORD *)&v73 & 0x2000000000000000) == 0)
                {
                  if ((v74 & 0x1000000000000000) != 0)
                    v76 = (unsigned __int8 *)((*(_QWORD *)&v73 & 0xFFFFFFFFFFFFFFFLL) + 32);
                  else
                    v76 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v74, *(_QWORD *)&v73);
                  v77 = *v76;
                  v79 = (v77 >= 0x21 || ((0x100003E01uLL >> v77) & 1) == 0)
                     && (v78 = (_BYTE *)_swift_stdlib_strtod_clocale(v76, v218)) != 0
                     && *v78 == 0;
                  v217 = v79;
                  goto LABEL_103;
                }
                *(_QWORD *)&v219 = v74;
                *((_QWORD *)&v219 + 1) = *(_QWORD *)&v73 & 0xFFFFFFFFFFFFFFLL;
                v84 = (v74 > 0x20u || ((0x100003E01uLL >> v74) & 1) == 0)
                   && (v83 = (_BYTE *)_swift_stdlib_strtod_clocale(&v219, v218)) != 0
                   && *v83 == 0;
                v217 = v84;
                swift_bridgeObjectRelease(*(_QWORD *)&v73);
LABEL_106:
                if (v217)
                {
                  v85 = v218[0];
                  _s5Books15CurrentPageViewVwxx_0(&v223);
                  v225 = &type metadata for Double;
                  v223 = v85 / 5.0;
                }
                v54 = v216;
                if (!v75[2])
                  goto LABEL_109;
                goto LABEL_94;
              case 2:
                sub_10004CD0C((uint64_t)&v226, (uint64_t)&v219);
                if (swift_dynamicCast(v218, &v219, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
                {
                  v65 = v218[0];
                  _s5Books15CurrentPageViewVwxx_0(&v223);
                  v225 = &type metadata for Double;
                  v223 = v65 / 100.0;
                }
                break;
              case 3:
                _s5Books15CurrentPageViewVwxx_0(&v223);
                v66 = v209[v202];
                *(double *)&v67 = 9.75020157e199;
                if ((v66 & 1) == 0)
                  *(double *)&v67 = 7.87265972e276;
                v68 = 0xED0000796C6C6163;
                if ((v66 & 1) == 0)
                  v68 = 0xE800000000000000;
                v69 = v66 == 2;
                *(double *)&v70 = 1.35580621e-306;
                if (!v69)
                  v70 = v67;
                v225 = &type metadata for String;
                v71 = 0xE700000000000000;
                if (!v69)
                  v71 = v68;
                v223 = *(double *)&v70;
                v224 = v71;
                v209[v202] = 2;
                break;
              default:
                break;
            }
          }
          v75 = v210;
          if (v210[2])
          {
LABEL_94:
            swift_bridgeObjectRetain(v23);
            v80 = sub_10004CE80(v54, v23);
            v81 = _swiftEmptyArrayStorage;
            if ((v82 & 1) != 0)
            {
              v81 = *(_QWORD **)(v75[7] + 8 * v80);
              swift_bridgeObjectRetain(v81);
            }
            swift_bridgeObjectRelease(v23);
          }
          else
          {
LABEL_109:
            v81 = _swiftEmptyArrayStorage;
          }
          sub_10004CD0C((uint64_t)&v223, (uint64_t)&v219);
          if ((swift_isUniquelyReferenced_nonNull_native(v81) & 1) == 0)
            v81 = sub_1005B0474(0, v81[2] + 1, 1, v81);
          v87 = v81[2];
          v86 = v81[3];
          if (v87 >= v86 >> 1)
            v81 = sub_1005B0474((_QWORD *)(v86 > 1), v87 + 1, 1, v81);
          v81[2] = v87 + 1;
          sub_10004CFC4(&v219, &v81[4 * v87 + 4]);
          swift_bridgeObjectRetain(v23);
          v88 = v75;
          v89 = swift_isUniquelyReferenced_nonNull_native(v75);
          *(_QWORD *)&v219 = v75;
          v91 = sub_10004CE80(v216, v23);
          v92 = v75[2];
          v93 = (v90 & 1) == 0;
          v94 = v92 + v93;
          if (__OFADD__(v92, v93))
            goto LABEL_202;
          v95 = v90;
          if (v88[3] >= v94)
          {
            if ((v89 & 1) == 0)
              sub_1002C0F4C();
          }
          else
          {
            sub_10037C190(v94, v89);
            v96 = sub_10004CE80(v216, v23);
            if ((v95 & 1) != (v97 & 1))
              goto LABEL_209;
            v91 = v96;
          }
          v98 = (_QWORD *)v219;
          v210 = (_QWORD *)v219;
          if ((v95 & 1) != 0)
          {
            v56 = *(_QWORD *)(v219 + 56);
            swift_bridgeObjectRelease(*(_QWORD *)(v56 + 8 * v91));
            *(_QWORD *)(v56 + 8 * v91) = v81;
          }
          else
          {
            *(_QWORD *)(v219 + 8 * (v91 >> 6) + 64) |= 1 << v91;
            v99 = (_QWORD *)(v98[6] + 16 * v91);
            *v99 = v216;
            v99[1] = v23;
            *(_QWORD *)(v98[7] + 8 * v91) = v81;
            v100 = v98[2];
            v19 = __OFADD__(v100, 1);
            v101 = v100 + 1;
            if (v19)
              goto LABEL_205;
            v98[2] = v101;
            swift_bridgeObjectRetain(v23);
          }
          swift_bridgeObjectRelease(v23);
          swift_bridgeObjectRelease(0x8000000000000000);
          _s5Books15CurrentPageViewVwxx_0(&v226);
          _s5Books15CurrentPageViewVwxx_0(&v223);
          v55 = v207 + 32;
          v53 = v208 - 1;
          a5 = v206;
          v54 = v216;
          v30 = (uint64_t)v204;
          if (v208 == 1)
          {
            swift_bridgeObjectRelease(v23);
            swift_bridgeObjectRelease(v191);
            v16 = v210;
            goto LABEL_127;
          }
        }
        swift_bridgeObjectRelease(*((_QWORD *)&v221 + 1));
        sub_10004CD0C((uint64_t)&v226, (uint64_t)&v222);
        _s5Books15CurrentPageViewVwxx_0(&v222);
LABEL_63:
        sub_10004CD0C((uint64_t)&v226, (uint64_t)&v221);
        _s5Books15CurrentPageViewVwxx_0(&v221);
LABEL_64:
        sub_10004CD0C((uint64_t)&v226, (uint64_t)&v220);
        _s5Books15CurrentPageViewVwxx_0(&v220);
LABEL_65:
        sub_100423D6C(&v223, &v226);
        goto LABEL_66;
      }
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v45);
LABEL_127:
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      swift_bridgeObjectRelease(v26);
LABEL_48:
      v48 = v228;
      if ((swift_isUniquelyReferenced_nonNull_native(v228) & 1) == 0)
        goto LABEL_45;
LABEL_49:
      v51 = v48[2];
      v50 = v48[3];
      if (v51 >= v50 >> 1)
        v48 = sub_100043ED0((_QWORD *)(v50 > 1), v51 + 1, 1, v48);
      v48[2] = v51 + 1;
      v52 = &v48[2 * v51];
      v52[4] = v24;
      v52[5] = v23;
      v228 = v48;
    }
  }
  v21 = v15 + 1;
  if (v15 + 1 >= (uint64_t)v215)
    goto LABEL_128;
  v20 = *(_QWORD *)(v214 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v15 + 2;
  if (v15 + 2 >= (uint64_t)v215)
    goto LABEL_128;
  v20 = *(_QWORD *)(v214 + 8 * v21);
  if (v20)
  {
LABEL_15:
    v15 = v21;
    goto LABEL_16;
  }
  v21 = v15 + 3;
  if (v15 + 3 < (uint64_t)v215)
  {
    v20 = *(_QWORD *)(v214 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v15 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
        if (v15 >= (uint64_t)v215)
          goto LABEL_128;
        v20 = *(_QWORD *)(v214 + 8 * v15);
        ++v21;
        if (v20)
          goto LABEL_16;
      }
LABEL_203:
      __break(1u);
      goto LABEL_204;
    }
    goto LABEL_15;
  }
LABEL_128:
  swift_release(a5);
  v103 = v201;
  v104 = v16;
  if (v201)
    v105 = v201;
  else
    v105 = sub_1001DAE78((uint64_t)_swiftEmptyArrayStorage);
  v106 = v105 + 64;
  v107 = 1 << *(_BYTE *)(v105 + 32);
  v108 = -1;
  if (v107 < 64)
    v108 = ~(-1 << v107);
  v109 = v108 & *(_QWORD *)(v105 + 64);
  v214 = OBJC_IVAR___BKPersonalizationEventDonor_booksPersonalizationSectionIDs;
  v110 = (unint64_t)(v107 + 63) >> 6;
  swift_bridgeObjectRetain(v103);
  v111 = 0;
  v215 = xmmword_10070CCA0;
  if (!v109)
    goto LABEL_137;
LABEL_134:
  v112 = __clz(__rbit64(v109));
  v109 &= v109 - 1;
  for (i = v112 | (v111 << 6); ; i = __clz(__rbit64(v119)) + (v111 << 6))
  {
    v114 = (uint64_t *)(*(_QWORD *)(v105 + 48) + 16 * i);
    v115 = *v114;
    v116 = (void *)v114[1];
    swift_bridgeObjectRetain(v116);
    v117._countAndFlagsBits = v115;
    v117._object = v116;
    v118 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0CD8, v117);
    swift_bridgeObjectRelease(v116);
    if (v118)
    {
      if (v109)
        goto LABEL_134;
      goto LABEL_137;
    }
    v121 = sub_10004CFD4(&qword_1009D4B80);
    v216 = swift_allocObject(v121, 64, 7);
    *(_OWORD *)(v216 + 16) = v215;
    v122 = sub_10005F0C4(v205);
    v126 = v123;
    if (v125)
    {
      v127 = v124;
      v128 = v125;
      swift_bridgeObjectRelease(v123);
      v122 = v127;
      v126 = v128;
    }
    v210 = v104;
    v129 = v209;
    v130 = sub_1004227C4(v122, v126);
    v132 = v131;
    swift_bridgeObjectRelease(v126);
    if (v132)
    {
      v133 = (char *)v132;
      v134 = *(_QWORD **)&v129[v214];
      v135 = v134[2];
      if (!v135)
      {
        LOBYTE(v132) = 0;
        goto LABEL_165;
      }
      v136 = v134[4];
      v137 = (char *)v134[5];
      v138 = v130;
      if (v136 == v130 && v133 == v137)
      {
LABEL_158:
        LOBYTE(v132) = 1;
LABEL_165:
        swift_bridgeObjectRelease(v133);
        goto LABEL_166;
      }
      v213 = v133;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v136, v137, v130, v133, 0) & 1) != 0)
        goto LABEL_161;
      if (v135 != 1)
      {
        v156 = v134[6];
        v157 = (char *)v134[7];
        v133 = v213;
        if (v156 == v130 && v213 == v157)
          goto LABEL_158;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v156, v157, v130, v213, 0) & 1) != 0)
        {
LABEL_161:
          LOBYTE(v132) = 1;
LABEL_164:
          v133 = v213;
          goto LABEL_165;
        }
        if (v135 != 2)
        {
          v158 = (char **)(v134 + 9);
          v159 = 2;
          v133 = v213;
          while (1)
          {
            v132 = v159 + 1;
            if (__OFADD__(v159, 1))
              goto LABEL_208;
            v160 = (uint64_t)*(v158 - 1);
            v161 = *v158;
            if (v160 == v138 && v133 == v161)
              goto LABEL_158;
            v212 = v159;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(v160, v161, v138, v133, 0) & 1) != 0)
              goto LABEL_161;
            v163 = v132;
            LOBYTE(v132) = 0;
            v158 += 2;
            v159 = v212 + 1;
            v69 = v163 == v135;
            v133 = v213;
            if (v69)
              goto LABEL_165;
          }
        }
      }
      LOBYTE(v132) = 0;
      goto LABEL_164;
    }
LABEL_166:
    v139 = v216;
    *(_QWORD *)(v216 + 56) = &type metadata for Bool;
    *(_BYTE *)(v139 + 32) = v132;
    v140 = v210;
    v141 = swift_isUniquelyReferenced_nonNull_native(v210);
    *(_QWORD *)&v226 = v140;
    v143 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65);
    v144 = v140[2];
    v145 = (v142 & 1) == 0;
    v146 = v144 + v145;
    if (__OFADD__(v144, v145))
      goto LABEL_206;
    v147 = v142;
    if (v140[3] >= v146)
    {
      if ((v141 & 1) != 0)
      {
        v150 = (_QWORD *)v226;
        if ((v142 & 1) != 0)
          goto LABEL_174;
      }
      else
      {
        sub_1002C0F4C();
        v150 = (_QWORD *)v226;
        if ((v147 & 1) != 0)
          goto LABEL_174;
      }
    }
    else
    {
      sub_10037C190(v146, v141);
      v148 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65);
      if ((v147 & 1) != (v149 & 1))
        goto LABEL_209;
      v143 = v148;
      v150 = (_QWORD *)v226;
      if ((v147 & 1) != 0)
      {
LABEL_174:
        v104 = v150;
        v154 = v150[7];
        v155 = 8 * v143;
        swift_bridgeObjectRelease(*(_QWORD *)(v154 + v155));
        *(_QWORD *)(v154 + v155) = v216;
        goto LABEL_175;
      }
    }
    v150[(v143 >> 6) + 8] |= 1 << v143;
    v151 = v150[6] + 16 * v143;
    strcpy((char *)v151, "weRecommended");
    *(_WORD *)(v151 + 14) = -4864;
    *(_QWORD *)(v150[7] + 8 * v143) = v216;
    v152 = v150[2];
    v19 = __OFADD__(v152, 1);
    v153 = v152 + 1;
    if (v19)
      goto LABEL_207;
    v104 = v150;
    v150[2] = v153;
LABEL_175:
    swift_bridgeObjectRelease(0x8000000000000000);
    if (v109)
      goto LABEL_134;
LABEL_137:
    v19 = __OFADD__(v111++, 1);
    if (v19)
      goto LABEL_201;
    if (v111 >= v110)
      break;
    v119 = *(_QWORD *)(v106 + 8 * v111);
    if (!v119)
    {
      v120 = v111 + 1;
      if (v111 + 1 >= v110)
        break;
      v119 = *(_QWORD *)(v106 + 8 * v120);
      if (!v119)
      {
        v120 = v111 + 2;
        if (v111 + 2 >= v110)
          break;
        v119 = *(_QWORD *)(v106 + 8 * v120);
        if (!v119)
        {
          v120 = v111 + 3;
          if (v111 + 3 >= v110)
            break;
          v119 = *(_QWORD *)(v106 + 8 * v120);
          if (!v119)
          {
            while (1)
            {
              v111 = v120 + 1;
              if (__OFADD__(v120, 1))
                break;
              if (v111 >= v110)
                goto LABEL_193;
              v119 = *(_QWORD *)(v106 + 8 * v111);
              ++v120;
              if (v119)
                goto LABEL_147;
            }
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
            __break(1u);
            JUMPOUT(0x100420194);
          }
        }
      }
      v111 = v120;
    }
LABEL_147:
    v109 = (v119 - 1) & v119;
  }
LABEL_193:
  v164 = v104;
  swift_release(v105);
  v165 = v200;
  v166 = v199;
  if (v228[2])
  {
    v167 = swift_bridgeObjectRelease(v211);
    static Logger.engagement.getter(v167);
    v168 = swift_bridgeObjectRetain_n(v166, 2);
    v169 = Logger.logObject.getter(v168);
    v170 = static os_log_type_t.error.getter(v169);
    if (os_log_type_enabled(v169, v170))
    {
      v171 = swift_slowAlloc(22, -1);
      v172 = COERCE_DOUBLE(swift_slowAlloc(64, -1));
      v223 = v172;
      *(_DWORD *)v171 = 136315394;
      swift_bridgeObjectRetain(v166);
      *(_QWORD *)&v226 = sub_100040F58(v198, v166, (uint64_t *)&v223);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, (char *)&v226 + 8, v171 + 4, v171 + 12);
      swift_bridgeObjectRelease_n(v166, 3);
      *(_WORD *)(v171 + 12) = 2080;
      swift_beginAccess(&v228, &v226, 0, 0);
      v173 = v228;
      swift_bridgeObjectRetain(v228);
      v175 = Array.description.getter(v174, &type metadata for String);
      v177 = v176;
      swift_bridgeObjectRelease(v173);
      *(_QWORD *)&v222 = sub_100040F58(v175, v177, (uint64_t *)&v223);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, (char *)&v222 + 8, v171 + 14, v171 + 22);
      swift_bridgeObjectRelease(v177);
      _os_log_impl((void *)&_mh_execute_header, v169, v170, "Event %s with missing arguments %s", (uint8_t *)v171, 0x16u);
      swift_arrayDestroy(*(_QWORD *)&v172, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(*(_QWORD *)&v172, -1, -1);
      swift_slowDealloc(v171, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v166, 2);
    }
    (*(void (**)(char *, uint64_t))(v196 + 8))(v165, v197);
    swift_bridgeObjectRelease(v228);
    v178 = v164;
  }
  else
  {
    v178 = v164;
    swift_bridgeObjectRetain(v164);
    v180 = _s5Books25PersonalizationEventDonorC11listOfDicts08fromDictF5ListsSaySDySSypGGSDySSSayypGG_tF_0(v179);
    swift_bridgeObjectRelease(v164);
    v181 = type metadata accessor for TaskPriority(0);
    v182 = (uint64_t)v193;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 56))(v193, 1, 1, v181);
    v183 = (_QWORD *)swift_allocObject(&unk_100905688, 88, 7);
    v183[2] = 0;
    v183[3] = 0;
    v184 = v209;
    v183[4] = v180;
    v183[5] = v184;
    v185 = v198;
    v183[6] = v211;
    v183[7] = v185;
    v186 = v195;
    v183[8] = v166;
    v183[9] = v186;
    v183[10] = ObjectType;
    v187 = v184;
    swift_bridgeObjectRetain(v166);
    v188 = v186;
    v189 = sub_10030C02C(v182, (uint64_t)&unk_1009E2A20, (uint64_t)v183);
    swift_release(v189);
    swift_bridgeObjectRelease(v228);
  }
  return swift_bridgeObjectRelease(v178);
}

uint64_t sub_1004201A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = type metadata accessor for Date(0);
  v8[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[15] = v10;
  v8[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE490 != -1)
    swift_once(&qword_1009CE490, sub_10041DBE0);
  return swift_task_switch(sub_100420238, qword_1009E2860, 0);
}

uint64_t sub_100420238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t result;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  void *object;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = sub_10041DD28();
  Date.init()(v5);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = objc_msgSend(v5, "stringFromDate:", isa);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = (_QWORD *)(v4 + OBJC_IVAR___BKPersonalizationEventDonor_cachedEnagagementPropertyValues);
  swift_beginAccess(v4 + OBJC_IVAR___BKPersonalizationEventDonor_cachedEnagagementPropertyValues, v0 + 16, 0, 0);
  v12 = *v11;
  if (!*(_QWORD *)(*v11 + 16))
    goto LABEL_5;
  v14 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v12);
  v15 = sub_10004CE80(v14, v13);
  v16 = *(_QWORD *)(v0 + 88);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v16);
LABEL_5:
    v18 = sub_1001DAE84((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v15);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
LABEL_6:
  v19 = *(_QWORD *)(v0 + 72);
  v20 = (uint64_t *)(v19 + OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedPropertyTimestamp);
  v21 = *(_QWORD *)(v19 + OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedPropertyTimestamp + 8);
  v41 = v18;
  if (!v21
    || ((result = *v20, *v20 == v8) ? (v23 = v21 == v10) : (v23 = 0),
        !v23
     && (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v21, v8, v10, 0),
         v19 = *(_QWORD *)(v0 + 72),
         (result & 1) == 0)))
  {
    *(_QWORD *)(v19 + OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedIdentifierUniquenessIndex) = 0;
    v31 = v20[1];
    *v20 = v8;
    v20[1] = v10;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRelease(v31);
    goto LABEL_15;
  }
  v24 = OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedIdentifierUniquenessIndex;
  v25 = *(_QWORD *)(v19 + OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedIdentifierUniquenessIndex);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v19 + OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedIdentifierUniquenessIndex) = v27;
    v43 = v10;
    v28._countAndFlagsBits = 45;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v19 + v24);
    v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v29._object;
    String.append(_:)(v29);
    swift_bridgeObjectRelease(object);
    v10 = v43;
LABEL_15:
    v32 = *(_QWORD *)(v0 + 96);
    v39 = *(_QWORD *)(v0 + 104);
    v40 = *(_QWORD *)(v0 + 128);
    v34 = *(_QWORD *)(v0 + 80);
    v33 = *(_QWORD *)(v0 + 88);
    v35 = *(void **)(v0 + 72);
    swift_bridgeObjectRetain(v32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v41);
    sub_1002C4930(v32, v8, v10, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease(v10);
    swift_beginAccess(v11, v0 + 40, 33, 0);
    swift_bridgeObjectRetain(v33);
    v37 = swift_isUniquelyReferenced_nonNull_native(*v11);
    v42 = *v11;
    *v11 = 0x8000000000000000;
    sub_1002C4914(v41, v34, v33, v37);
    v38 = *v11;
    *v11 = v42;
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v33);
    swift_endAccess(v0 + 40);
    objc_msgSend(v35, "propertyDidChange:propertyConfiguration:", v35, v39);
    swift_task_dealloc(v40);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_100420554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v8[49] = a8;
  v8[50] = v14;
  v8[47] = a6;
  v8[48] = a7;
  v8[45] = a4;
  v8[46] = a5;
  v9 = sub_10004CFD4(&qword_1009D3150);
  v8[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v8[52] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[53] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[54] = swift_task_alloc(v12);
  v8[55] = swift_task_alloc(v12);
  return swift_task_switch(sub_1004205F4, 0, 0);
}

uint64_t sub_1004205F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  BOOL v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t ObjectType;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  int *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  uint64_t (*v115)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v116)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v117[2];

  v2 = v1[45];
  v3 = *(_QWORD *)(v2 + 16);
  v1[56] = v3;
  if (!v3)
  {
LABEL_66:
    v88 = v1[54];
    v89 = v1[51];
    swift_task_dealloc(v1[55]);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    return ((uint64_t (*)(void))v1[1])();
  }
  v101 = (uint64_t)(v1 + 7);
  v98 = (uint64_t)(v1 + 12);
  v99 = v1 + 22;
  v100 = (uint64_t)(v1 + 2);
  v4 = (uint64_t)(v1 + 26);
  v114 = v1 + 30;
  v103 = (uint64_t)(v1 + 34);
  v104 = v1 + 41;
  v102 = v1 + 43;
  v5 = v1[46];
  v6 = OBJC_IVAR___BKPersonalizationEventDonor_libraryAssetProvider;
  v1[57] = *(_QWORD *)(v1[47] + 16);
  v1[58] = v6;
  v7 = v5 + v6;
  swift_bridgeObjectRetain(v2);
  swift_beginAccess(v7, v1 + 38, 0, 0);
  v8 = 0;
  v109 = v1 + 66;
  v105 = (uint64_t)(v1 + 26);
  v106 = v1;
LABEL_6:
  v1[59] = v8;
  v12 = v1[57];
  v13 = v1[46] + v1[58];
  v14 = *(_QWORD *)(v1[45] + 8 * v8 + 32);
  v1[60] = v14;
  sub_10000B5E4(v13, v101, &qword_1009E29F0);
  if (!v12)
  {
    swift_bridgeObjectRetain(v14);
    goto LABEL_53;
  }
  v15 = v1[47];
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  v16 = 0;
  v17 = v1[57];
  v18 = 1;
LABEL_8:
  if (v16 < v17)
  {
    v19 = 32 * v16;
    do
    {
      *v109 = v18 & 1;
      v1[61] = v16;
      v14 = v1[60];
      v111 = v19;
      v23 = (_QWORD *)(v1[47] + v19);
      v0 = v23[6];
      v15 = v23[7];
      if (*(_QWORD *)(v14 + 16))
      {
        v24 = v4;
        v25 = v23[6];
        v27 = v23[4];
        v26 = v23[5];
        swift_bridgeObjectRetain(v23[7]);
        swift_bridgeObjectRetain(v26);
        v28 = sub_10004CE80(v27, v26);
        if ((v29 & 1) != 0)
        {
          sub_10004CD0C(*(_QWORD *)(v1[60] + 56) + 32 * v28, (uint64_t)v114);
        }
        else
        {
          *v114 = 0u;
          v114[1] = 0u;
        }
        swift_bridgeObjectRelease(v26);
        v0 = v25;
        v4 = v24;
      }
      else
      {
        *v114 = 0u;
        v114[1] = 0u;
        swift_bridgeObjectRetain(v15);
      }
      v30 = v16 + 1;
      v31 = v0 == 0x4165726F74537369 && v15 == 0xEE00444974657373;
      v112 = v30;
      v110 = v0;
      if (v31
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v0, v15, 0x4165726F74537369, 0xEE00444974657373, 0) & 1) != 0)
      {
        sub_10000B5E4((uint64_t)v114, v4, (uint64_t *)&unk_1009D04E0);
        if (v1[29])
        {
          v32 = swift_dynamicCast(v104, v4, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if ((v32 & 1) != 0)
          {
            swift_bridgeObjectRelease(v15);
            v15 = v1[41];
            v14 = v1[42];
            v1[62] = v14;
            v18 = v100;
            sub_10000B5E4(v101, v100, &qword_1009E29F0);
            v0 = v1[5];
            if (!v0)
            {
              sub_100010960((uint64_t)v114, (uint64_t *)&unk_1009D04E0);
              swift_bridgeObjectRelease(v14);
              v55 = v100;
              v56 = &qword_1009E29F0;
LABEL_46:
              sub_100010960(v55, v56);
              v18 = 0;
              goto LABEL_47;
            }
            goto LABEL_68;
          }
        }
        else
        {
          v32 = sub_100010960(v4, (uint64_t *)&unk_1009D04E0);
        }
        v33 = v1[49];
        static Logger.engagement.getter(v32);
        swift_bridgeObjectRetain_n(v33, 2);
        swift_bridgeObjectRetain(v15);
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.error.getter(v35);
        v37 = os_log_type_enabled(v35, v36);
        v0 = v1[55];
        v38 = v1[52];
        v14 = v1[53];
        v39 = v1[49];
        if (v37)
        {
          v40 = v1[48];
          v107 = v1[55];
          v0 = swift_slowAlloc(22, -1);
          v41 = swift_slowAlloc(64, -1);
          v117[0] = v41;
          *(_DWORD *)v0 = 136315394;
          swift_bridgeObjectRetain(v39);
          v42 = v40;
          v4 = v105;
          *(_QWORD *)(v0 + 4) = sub_100040F58(v42, v39, v117);
          swift_bridgeObjectRelease_n(v39, 3);
          *(_WORD *)(v0 + 12) = 2080;
          swift_bridgeObjectRetain(v15);
          *(_QWORD *)(v0 + 14) = sub_100040F58(v110, v15, v117);
          swift_bridgeObjectRelease_n(v15, 3);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "Event %s with non-String for validation %s", (uint8_t *)v0, 0x16u);
          swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
          v1 = v106;
          swift_slowDealloc(v41, -1, -1);
          swift_slowDealloc(v0, -1, -1);

          (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v107, v38, v43);
        }
        else
        {

          swift_bridgeObjectRelease_n(v15, 2);
          v20 = swift_bridgeObjectRelease_n(v39, 2);
          (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v0, v38, v20);
        }
        sub_100010960((uint64_t)v114, (uint64_t *)&unk_1009D04E0);
        v21 = v111;
        v16 = v112;
        v22 = v1[57];
        if (v112 == v22)
          goto LABEL_50;
      }
      else
      {
        if ((v0 != 0xD000000000000016 || v15 != 0x80000001007C9020)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v0, v15, 0xD000000000000016, 0x80000001007C9020, 0) & 1) == 0)
        {
          sub_100010960((uint64_t)v114, (uint64_t *)&unk_1009D04E0);
          swift_bridgeObjectRelease(v15);
LABEL_47:
          v17 = v1[57];
          v16 = v1[61] + 1;
          if (v16 != v17)
            goto LABEL_8;
          swift_bridgeObjectRelease(v1[47]);
          if ((v18 & 1) == 0)
            goto LABEL_51;
LABEL_53:
          v61 = v1[60];
          v63 = (void *)v1[50];
          v62 = v1[51];
          v64 = v1[49];
          v65 = (void *)v1[46];
          v66 = type metadata accessor for TaskPriority(0);
          v113 = *(_QWORD *)(v66 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v62, 1, 1, v66);
          v67 = qword_1009CE490;
          swift_bridgeObjectRetain(v61);
          swift_bridgeObjectRetain(v64);
          v68 = v65;
          v69 = v63;
          if (v67 != -1)
            swift_once(&qword_1009CE490, sub_10041DBE0);
          v70 = v1[60];
          v72 = v1[50];
          v71 = v1[51];
          v74 = v1[48];
          v73 = v1[49];
          v75 = v1[46];
          v76 = qword_1009E2860;
          v77 = sub_10041E4B0();
          v78 = (_QWORD *)swift_allocObject(&unk_1009056B0, 72, 7);
          v78[2] = v76;
          v78[3] = v77;
          v78[4] = v75;
          v78[5] = v74;
          v78[6] = v73;
          v78[7] = v70;
          v78[8] = v72;
          LODWORD(v77) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v71, 1, v66);
          swift_retain(v76);
          if ((_DWORD)v77 == 1)
          {
            sub_100010960(v71, &qword_1009D3150);
            v80 = 0;
          }
          else
          {
            v81 = TaskPriority.rawValue.getter(v79);
            (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v71, v66);
            v80 = v81;
          }
          v82 = v78[2];
          v1 = v106;
          if (v82)
          {
            v83 = v78[3];
            ObjectType = swift_getObjectType();
            swift_unknownObjectRetain(v82);
            v85 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v83);
            v0 = v86;
            swift_unknownObjectRelease(v82);
          }
          else
          {
            v85 = 0;
            v0 = 0;
          }
          v87 = swift_allocObject(&unk_1009056D8, 32, 7);
          *(_QWORD *)(v87 + 16) = &unk_1009E2A30;
          *(_QWORD *)(v87 + 24) = v78;
          if (v0 | v85)
          {
            v9 = v99;
            *v99 = 0;
            v99[1] = 0;
            v106[24] = v85;
            v106[25] = v0;
          }
          else
          {
            v9 = 0;
          }
          v10 = v106[60];
          v11 = swift_task_create(v80 | 0x1C00, v9, (char *)&type metadata for () + 8, &unk_1009DF3C0, v87);
          swift_bridgeObjectRelease(v10);
          swift_release(v11);
          sub_100010960(v101, &qword_1009E29F0);
          v4 = v105;
LABEL_5:
          v8 = v1[59] + 1;
          if (v8 == v1[56])
          {
            swift_bridgeObjectRelease(v1[45]);
            goto LABEL_66;
          }
          goto LABEL_6;
        }
        sub_10000B5E4((uint64_t)v114, v103, (uint64_t *)&unk_1009D04E0);
        if (v1[37])
        {
          v44 = swift_dynamicCast(v102, v103, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if ((v44 & 1) != 0)
          {
            v57 = v1[58];
            v58 = v1[46];
            swift_bridgeObjectRelease(v15);
            v59 = v58 + v57;
            v15 = v1[43];
            v14 = v1[44];
            v1[64] = v14;
            v0 = (uint64_t)&qword_1009E29F0;
            sub_10000B5E4(v59, v98, &qword_1009E29F0);
            if (!v1[15])
            {
              swift_bridgeObjectRelease(v14);
              sub_100010960(v98, &qword_1009E29F0);
              v55 = (uint64_t)v114;
              v56 = (uint64_t *)&unk_1009D04E0;
              goto LABEL_46;
            }
            sub_10002E418(v98, (uint64_t)(v1 + 17));
            sub_100010960(v98, &qword_1009E29F0);
            v94 = v1[20];
            v95 = v1[21];
            sub_10003F198(v1 + 17, v94);
            v96 = *(int **)(v95 + 16);
            v116 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))((char *)v96 + *v96);
            v97 = (_QWORD *)swift_task_alloc(v96[1]);
            v1[65] = v97;
            *v97 = v1;
            v97[1] = sub_100421CA0;
            return v116(v15, v14, v94, v95);
          }
        }
        else
        {
          v44 = sub_100010960(v103, (uint64_t *)&unk_1009D04E0);
        }
        v45 = v1[49];
        static Logger.engagement.getter(v44);
        swift_bridgeObjectRetain_n(v45, 2);
        swift_bridgeObjectRetain(v15);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.error.getter(v47);
        v49 = os_log_type_enabled(v47, v48);
        v14 = v1[53];
        v0 = v1[54];
        v50 = v1[52];
        v51 = v1[49];
        if (v49)
        {
          v52 = v1[48];
          v108 = v1[54];
          v0 = swift_slowAlloc(22, -1);
          v53 = swift_slowAlloc(64, -1);
          v117[0] = v53;
          *(_DWORD *)v0 = 136315394;
          swift_bridgeObjectRetain(v51);
          v54 = v52;
          v4 = v105;
          *(_QWORD *)(v0 + 4) = sub_100040F58(v54, v51, v117);
          swift_bridgeObjectRelease_n(v51, 3);
          *(_WORD *)(v0 + 12) = 2080;
          swift_bridgeObjectRetain(v15);
          *(_QWORD *)(v0 + 14) = sub_100040F58(v110, v15, v117);
          swift_bridgeObjectRelease_n(v15, 3);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Event %s with non-String for validation %s", (uint8_t *)v0, 0x16u);
          swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
          v1 = v106;
          swift_slowDealloc(v53, -1, -1);
          swift_slowDealloc(v0, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v108, v50);
        }
        else
        {

          swift_bridgeObjectRelease_n(v15, 2);
          swift_bridgeObjectRelease_n(v51, 2);
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v50);
        }
        sub_100010960((uint64_t)v114, (uint64_t *)&unk_1009D04E0);
        v22 = v1[57];
        v21 = v111;
        v16 = v112;
        if (v112 == v22)
        {
LABEL_50:
          swift_bridgeObjectRelease(v1[47]);
LABEL_51:
          v60 = v1[60];
          sub_100010960(v101, &qword_1009E29F0);
          swift_bridgeObjectRelease(v60);
          goto LABEL_5;
        }
      }
      v18 = 0;
      v19 = v21 + 32;
    }
    while (v16 < v22);
  }
  __break(1u);
LABEL_68:
  v91 = v1[6];
  sub_10003F198((_QWORD *)v18, v0);
  v92 = *(int **)(v91 + 24);
  v115 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))((char *)v92 + *v92);
  v93 = (_QWORD *)swift_task_alloc(v92[1]);
  v1[63] = v93;
  *v93 = v1;
  v93[1] = sub_100421114;
  return v115(v15, v14, v0, v91);
}

uint64_t sub_100421114(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_BYTE *)(*(_QWORD *)v1 + 529) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_100421178, 0, 0);
}

uint64_t sub_100421178()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  int *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v118[2];

  v96 = (uint64_t)(v1 + 12);
  v97 = (uint64_t)(v1 + 2);
  v98 = v1 + 22;
  v2 = (uint64_t)(v1 + 26);
  v3 = (uint64_t)(v1 + 30);
  v100 = (uint64_t)(v1 + 7);
  v101 = (uint64_t)(v1 + 34);
  v102 = v1 + 41;
  v109 = (char *)(v1 + 66);
  v4 = *((unsigned __int8 *)v1 + 529);
  v99 = v1 + 43;
  v5 = (uint64_t *)&unk_1009D04E0;
  sub_100010960((uint64_t)(v1 + 30), (uint64_t *)&unk_1009D04E0);
  _s5Books15CurrentPageViewVwxx_0(v1 + 2);
  v103 = (uint64_t)(v1 + 26);
  v110 = (uint64_t)(v1 + 30);
  v108 = v1;
  while (2)
  {
    v6 = *v109;
    if (v4 == 2)
      v6 = 0;
    v7 = v6 & v4;
LABEL_5:
    v8 = v1[57];
    v9 = v1[61] + 1;
    if (v9 == v8)
    {
      swift_bridgeObjectRelease(v1[47]);
      if ((v7 & 1) != 0)
        goto LABEL_42;
LABEL_47:
      v67 = v1[60];
      sub_100010960(v100, &qword_1009E29F0);
      swift_bridgeObjectRelease(v67);
      while (1)
      {
        v80 = v1[59] + 1;
        if (v80 == v1[56])
        {
          swift_bridgeObjectRelease(v1[45]);
          v86 = v1[54];
          v87 = v1[51];
          swift_task_dealloc(v1[55]);
          swift_task_dealloc(v86);
          swift_task_dealloc(v87);
          return ((uint64_t (*)(void))v1[1])();
        }
        v1[59] = v80;
        v10 = v1[57];
        v11 = v1[46] + v1[58];
        v4 = *(_QWORD *)(v1[45] + 8 * v80 + 32);
        v1[60] = v4;
        sub_10000B5E4(v11, v100, &qword_1009E29F0);
        if (v10)
          break;
        swift_bridgeObjectRetain(v4);
LABEL_42:
        v49 = v1[60];
        v51 = (void *)v1[50];
        v50 = v1[51];
        v52 = v108[49];
        v53 = (void *)v108[46];
        v54 = type metadata accessor for TaskPriority(0);
        v113 = *(_QWORD *)(v54 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v50, 1, 1, v54);
        v55 = qword_1009CE490;
        swift_bridgeObjectRetain(v49);
        swift_bridgeObjectRetain(v52);
        v56 = v53;
        v57 = v51;
        if (v55 != -1)
          swift_once(&qword_1009CE490, sub_10041DBE0);
        v115 = v108[60];
        v59 = v108[50];
        v58 = v108[51];
        v60 = v108[48];
        v61 = v108[49];
        v62 = v108[46];
        v63 = qword_1009E2860;
        v64 = sub_10041E4B0();
        v0 = (_QWORD *)swift_allocObject(&unk_1009056B0, 72, 7);
        v0[2] = v63;
        v0[3] = v64;
        v0[4] = v62;
        v0[5] = v60;
        v0[6] = v61;
        v0[7] = v115;
        v0[8] = v59;
        LODWORD(v64) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v58, 1, v54);
        swift_retain(v63);
        if ((_DWORD)v64 == 1)
        {
          sub_100010960(v58, &qword_1009D3150);
          v66 = 0;
        }
        else
        {
          v68 = TaskPriority.rawValue.getter(v65);
          (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v58, v54);
          v66 = v68;
        }
        v3 = v110;
        v69 = 0;
        v70 = 0;
        v71 = v0[2];
        v5 = (uint64_t *)&unk_1009D04E0;
        if (v71)
        {
          v72 = v0[3];
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v71);
          v74 = ObjectType;
          v3 = v110;
          v69 = dispatch thunk of Actor.unownedExecutor.getter(v74, v72);
          v70 = v75;
          swift_unknownObjectRelease(v71);
        }
        v76 = swift_allocObject(&unk_1009056D8, 32, 7);
        v77 = 0;
        *(_QWORD *)(v76 + 16) = &unk_1009E2A30;
        *(_QWORD *)(v76 + 24) = v0;
        v1 = v108;
        if (v70 | v69)
        {
          v77 = v98;
          *v98 = 0;
          v98[1] = 0;
          v108[24] = v69;
          v108[25] = v70;
        }
        v78 = v108[60];
        v79 = swift_task_create(v66 | 0x1C00, v77, (char *)&type metadata for () + 8, &unk_1009DF3C0, v76);
        swift_bridgeObjectRelease(v78);
        swift_release(v79);
        sub_100010960(v100, &qword_1009E29F0);
        v2 = v103;
      }
      v12 = v1[47];
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v12);
      v9 = 0;
      v8 = v1[57];
      v7 = 1;
    }
    if (v9 >= v8)
    {
LABEL_61:
      __break(1u);
      break;
    }
    v13 = 32 * v9;
    while (1)
    {
      *v109 = v7 & 1;
      v1[61] = v9;
      v4 = v1[60];
      v14 = (_QWORD *)(v1[47] + v13);
      v15 = v14[6];
      v0 = (_QWORD *)v14[7];
      v114 = v15;
      if (*(_QWORD *)(v4 + 16))
      {
        v111 = v13;
        v16 = (_OWORD *)v3;
        v17 = v5;
        v18 = v2;
        v19 = v9;
        v21 = v14[4];
        v20 = v14[5];
        swift_bridgeObjectRetain(v0);
        swift_bridgeObjectRetain(v20);
        v22 = sub_10004CE80(v21, v20);
        if ((v23 & 1) != 0)
        {
          v1 = v108;
          v3 = (uint64_t)v16;
          sub_10004CD0C(*(_QWORD *)(v108[60] + 56) + 32 * v22, (uint64_t)v16);
          swift_bridgeObjectRelease(v20);
          v9 = v19;
          v2 = v18;
          v5 = v17;
          v13 = v111;
          v15 = v114;
        }
        else
        {
          v3 = (uint64_t)v16;
          *v16 = 0u;
          v16[1] = 0u;
          swift_bridgeObjectRelease(v20);
          v9 = v19;
          v2 = v18;
          v5 = v17;
          v13 = v111;
          v15 = v114;
          v1 = v108;
        }
      }
      else
      {
        *(_OWORD *)v3 = 0u;
        *(_OWORD *)(v3 + 16) = 0u;
        swift_bridgeObjectRetain(v0);
      }
      v24 = v9 + 1;
      v25 = v15 == 0x4165726F74537369 && v0 == (_QWORD *)0xEE00444974657373;
      v112 = v24;
      if (v25
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v0, 0x4165726F74537369, 0xEE00444974657373, 0) & 1) != 0)
      {
        break;
      }
      if ((v15 != 0xD000000000000016 || v0 != (_QWORD *)0x80000001007C9020)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v0, 0xD000000000000016, 0x80000001007C9020, 0) & 1) == 0)
      {
        sub_100010960(v3, v5);
        swift_bridgeObjectRelease(v0);
        goto LABEL_5;
      }
      sub_10000B5E4(v3, v101, v5);
      if (v1[37])
      {
        v39 = swift_dynamicCast(v99, v101, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        if ((v39 & 1) != 0)
        {
          v81 = v1[58];
          v82 = v1[46];
          swift_bridgeObjectRelease(v0);
          v83 = v82 + v81;
          v84 = v1[43];
          v4 = v1[44];
          v1[64] = v4;
          sub_10000B5E4(v83, v96, &qword_1009E29F0);
          if (!v1[15])
          {
            swift_bridgeObjectRelease(v4);
            sub_100010960(v96, &qword_1009E29F0);
            sub_100010960(v3, v5);
            v7 = 0;
            goto LABEL_5;
          }
          sub_10002E418(v96, (uint64_t)(v1 + 17));
          sub_100010960(v96, &qword_1009E29F0);
          v92 = v1[20];
          v93 = v1[21];
          sub_10003F198(v1 + 17, v92);
          v94 = *(int **)(v93 + 16);
          v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v94 + *v94);
          v95 = (_QWORD *)swift_task_alloc(v94[1]);
          v1[65] = v95;
          *v95 = v1;
          v95[1] = sub_100421CA0;
          return v117(v84, v4, v92, v93);
        }
      }
      else
      {
        v39 = sub_100010960(v101, v5);
      }
      v40 = v1[49];
      static Logger.engagement.getter(v39);
      swift_bridgeObjectRetain_n(v40, 2);
      swift_bridgeObjectRetain(v0);
      v29 = Logger.logObject.getter(v41);
      v42 = static os_log_type_t.error.getter(v29);
      v43 = os_log_type_enabled(v29, v42);
      v4 = v1[53];
      v32 = v1[54];
      v33 = v1[52];
      v34 = v1[49];
      if (v43)
      {
        v107 = v1[52];
        v44 = v1[48];
        v105 = v1[54];
        v45 = swift_slowAlloc(22, -1);
        v46 = swift_slowAlloc(64, -1);
        v118[0] = v46;
        *(_DWORD *)v45 = 136315394;
        swift_bridgeObjectRetain(v34);
        *(_QWORD *)(v45 + 4) = sub_100040F58(v44, v34, v118);
        swift_bridgeObjectRelease_n(v34, 3);
        *(_WORD *)(v45 + 12) = 2080;
        swift_bridgeObjectRetain(v0);
        *(_QWORD *)(v45 + 14) = sub_100040F58(v114, (unint64_t)v0, v118);
        swift_bridgeObjectRelease_n(v0, 3);
        _os_log_impl((void *)&_mh_execute_header, v29, v42, "Event %s with non-String for validation %s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
        v47 = v46;
        v2 = v103;
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v45, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v105, v107);
        goto LABEL_38;
      }
LABEL_37:

      swift_bridgeObjectRelease_n(v0, 2);
      swift_bridgeObjectRelease_n(v34, 2);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v33);
LABEL_38:
      v3 = v110;
      v5 = (uint64_t *)&unk_1009D04E0;
      sub_100010960(v110, (uint64_t *)&unk_1009D04E0);
      v9 = v112;
      v48 = v1[57];
      if (v112 == v48)
      {
        swift_bridgeObjectRelease(v1[47]);
        goto LABEL_47;
      }
      v7 = 0;
      v13 += 32;
      if (v112 >= v48)
        goto LABEL_61;
    }
    sub_10000B5E4(v3, v2, v5);
    if (!v1[29])
    {
      v26 = sub_100010960(v2, v5);
LABEL_26:
      v27 = v1[49];
      static Logger.engagement.getter(v26);
      swift_bridgeObjectRetain_n(v27, 2);
      swift_bridgeObjectRetain(v0);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.error.getter(v29);
      v31 = os_log_type_enabled(v29, v30);
      v32 = v1[55];
      v33 = v1[52];
      v4 = v1[53];
      v34 = v1[49];
      if (v31)
      {
        v35 = v1[48];
        v106 = v1[55];
        v36 = swift_slowAlloc(22, -1);
        v104 = v33;
        v37 = swift_slowAlloc(64, -1);
        v118[0] = v37;
        *(_DWORD *)v36 = 136315394;
        swift_bridgeObjectRetain(v34);
        v38 = v35;
        v2 = v103;
        *(_QWORD *)(v36 + 4) = sub_100040F58(v38, v34, v118);
        swift_bridgeObjectRelease_n(v34, 3);
        *(_WORD *)(v36 + 12) = 2080;
        swift_bridgeObjectRetain(v0);
        *(_QWORD *)(v36 + 14) = sub_100040F58(v114, (unint64_t)v0, v118);
        swift_bridgeObjectRelease_n(v0, 3);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Event %s with non-String for validation %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v106, v104);
        goto LABEL_38;
      }
      goto LABEL_37;
    }
    v26 = swift_dynamicCast(v102, v2, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if ((v26 & 1) == 0)
      goto LABEL_26;
    v85 = v3;
    swift_bridgeObjectRelease(v0);
    v9 = v1[41];
    v4 = v1[42];
    v1[62] = v4;
    v3 = v97;
    sub_10000B5E4(v100, v97, &qword_1009E29F0);
    v0 = (_QWORD *)v1[5];
    if (!v0)
    {
      sub_100010960(v85, v5);
      swift_bridgeObjectRelease(v4);
      v3 = v85;
      sub_100010960(v97, &qword_1009E29F0);
      v4 = 2;
      v1 = v108;
      continue;
    }
    break;
  }
  v89 = v108[6];
  sub_10003F198((_QWORD *)v3, (uint64_t)v0);
  v90 = *(int **)(v89 + 24);
  v116 = (int *)((char *)v90 + *v90);
  v91 = (_QWORD *)swift_task_alloc(v90[1]);
  v108[63] = v91;
  *v91 = v108;
  v91[1] = sub_100421114;
  return ((uint64_t (*)(unint64_t, uint64_t, _QWORD *, uint64_t))v116)(v9, v4, v0, v89);
}

uint64_t sub_100421CA0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 520);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 512);
  *(_BYTE *)(*(_QWORD *)v1 + 530) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_100421D08, 0, 0);
}

uint64_t sub_100421D08()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t ObjectType;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  int *v83;
  _QWORD *v84;
  uint64_t (*v85)();
  int *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  uint64_t (*v102)(uint64_t, uint64_t, unint64_t, uint64_t);
  uint64_t v103;

  v2 = (_BYTE *)(v1 + 528);
  v90 = v1 + 56;
  v89 = v1 + 96;
  v88 = v1 + 16;
  v96 = v1 + 208;
  v3 = v1 + 240;
  v91 = v1 + 272;
  v4 = *(unsigned __int8 *)(v1 + 530);
  v87 = (_QWORD *)(v1 + 136);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v1 + 136));
  v5 = (uint64_t *)&unk_1009D04E0;
  v101 = (_OWORD *)(v1 + 240);
LABEL_2:
  v6 = *v2;
  if (v4 == 2)
    v6 = 0;
  if ((v4 & 1) != 0)
    v7 = 0;
  else
    v7 = v6;
  sub_100010960(v3, v5);
LABEL_8:
  v8 = *(_QWORD *)(v1 + 456);
  v9 = *(_QWORD *)(v1 + 488) + 1;
  if (v9 != v8)
  {
LABEL_13:
    if (v9 >= v8)
    {
LABEL_65:
      __break(1u);
LABEL_66:
      v82 = *(_QWORD *)(v1 + 48);
      sub_10003F198((_QWORD *)v7, v3);
      v83 = *(int **)(v82 + 24);
      v102 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))((char *)v83 + *v83);
      v84 = (_QWORD *)swift_task_alloc(v83[1]);
      *(_QWORD *)(v1 + 504) = v84;
      v85 = sub_100421114;
LABEL_68:
      *v84 = v1;
      v84[1] = v85;
      return v102(v0, v4, v3, v82);
    }
    v12 = 32 * v9;
    while (1)
    {
      v13 = v2;
      *v2 = v7 & 1;
      *(_QWORD *)(v1 + 488) = v9;
      v97 = v12;
      v14 = (_QWORD *)(*(_QWORD *)(v1 + 376) + v12);
      v15 = v14[6];
      v3 = v14[7];
      if (*(_QWORD *)(*(_QWORD *)(v1 + 480) + 16))
      {
        v16 = v14[6];
        v17 = v14[4];
        v0 = v14[5];
        swift_bridgeObjectRetain(v14[7]);
        swift_bridgeObjectRetain(v0);
        v18 = sub_10004CE80(v17, v0);
        v4 = v1 + 240;
        if ((v19 & 1) != 0)
        {
          sub_10004CD0C(*(_QWORD *)(*(_QWORD *)(v1 + 480) + 56) + 32 * v18, (uint64_t)v101);
        }
        else
        {
          *v101 = 0u;
          *(_OWORD *)(v1 + 256) = 0u;
        }
        swift_bridgeObjectRelease(v0);
        v15 = v16;
      }
      else
      {
        v4 = v1 + 240;
        *v101 = 0u;
        *(_OWORD *)(v1 + 256) = 0u;
        swift_bridgeObjectRetain(v3);
      }
      v20 = v9 + 1;
      v21 = v15 == 0x4165726F74537369 && v3 == 0xEE00444974657373;
      v99 = v20;
      if (v21
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v3, 0x4165726F74537369, 0xEE00444974657373, 0) & 1) != 0)
      {
        sub_10000B5E4(v4, v96, v5);
        if (*(_QWORD *)(v1 + 232))
        {
          v22 = swift_dynamicCast(v1 + 328, v96, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if ((v22 & 1) != 0)
          {
            swift_bridgeObjectRelease(v3);
            v0 = *(_QWORD *)(v1 + 328);
            v4 = *(_QWORD *)(v1 + 336);
            *(_QWORD *)(v1 + 496) = v4;
            v7 = v1 + 16;
            sub_10000B5E4(v90, v88, &qword_1009E29F0);
            v3 = *(_QWORD *)(v1 + 40);
            if (!v3)
            {
              v2 = v13;
              sub_100010960((uint64_t)v101, v5);
              swift_bridgeObjectRelease(v4);
              sub_100010960(v88, &qword_1009E29F0);
              v7 = 0;
              goto LABEL_8;
            }
            goto LABEL_66;
          }
        }
        else
        {
          v22 = sub_100010960(v96, v5);
        }
        v2 = v13;
        v23 = *(_QWORD *)(v1 + 392);
        static Logger.engagement.getter(v22);
        swift_bridgeObjectRetain_n(v23, 2);
        swift_bridgeObjectRetain(v3);
        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.error.getter(v25);
        v27 = os_log_type_enabled(v25, v26);
        v0 = *(_QWORD *)(v1 + 440);
        v28 = *(_QWORD *)(v1 + 416);
        v4 = *(_QWORD *)(v1 + 424);
        v29 = *(_QWORD *)(v1 + 392);
        if (v27)
        {
          v30 = *(_QWORD *)(v1 + 384);
          v94 = *(_QWORD *)(v1 + 440);
          v0 = v15;
          v31 = swift_slowAlloc(22, -1);
          v92 = v28;
          v32 = swift_slowAlloc(64, -1);
          v103 = v32;
          *(_DWORD *)v31 = 136315394;
          swift_bridgeObjectRetain(v29);
          v33 = v30;
          v2 = (_BYTE *)(v1 + 528);
          *(_QWORD *)(v31 + 4) = sub_100040F58(v33, v29, &v103);
          swift_bridgeObjectRelease_n(v29, 3);
          *(_WORD *)(v31 + 12) = 2080;
          swift_bridgeObjectRetain(v3);
          *(_QWORD *)(v31 + 14) = sub_100040F58(v0, v3, &v103);
          swift_bridgeObjectRelease_n(v3, 3);
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "Event %s with non-String for validation %s", (uint8_t *)v31, 0x16u);
          swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v32, -1, -1);
          swift_slowDealloc(v31, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v94, v92);
          goto LABEL_42;
        }
      }
      else
      {
        v2 = v13;
        if ((v15 != 0xD000000000000016 || v3 != 0x80000001007C9020)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v3, 0xD000000000000016, 0x80000001007C9020, 0) & 1) == 0)
        {
          sub_100010960(v4, v5);
          swift_bridgeObjectRelease(v3);
          goto LABEL_8;
        }
        sub_10000B5E4(v4, v91, v5);
        if (*(_QWORD *)(v1 + 296))
        {
          v34 = swift_dynamicCast(v1 + 344, v91, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if ((v34 & 1) != 0)
          {
            v76 = *(_QWORD *)(v1 + 464);
            v77 = *(_QWORD *)(v1 + 368);
            swift_bridgeObjectRelease(v3);
            v78 = v77 + v76;
            v0 = *(_QWORD *)(v1 + 344);
            v4 = *(_QWORD *)(v1 + 352);
            *(_QWORD *)(v1 + 512) = v4;
            sub_10000B5E4(v78, v89, &qword_1009E29F0);
            if (!*(_QWORD *)(v1 + 120))
            {
              swift_bridgeObjectRelease(v4);
              sub_100010960(v89, &qword_1009E29F0);
              v4 = 2;
              v3 = v1 + 240;
              goto LABEL_2;
            }
            sub_10002E418(v89, (uint64_t)v87);
            sub_100010960(v89, &qword_1009E29F0);
            v3 = *(_QWORD *)(v1 + 160);
            v82 = *(_QWORD *)(v1 + 168);
            sub_10003F198(v87, v3);
            v86 = *(int **)(v82 + 16);
            v102 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))((char *)v86 + *v86);
            v84 = (_QWORD *)swift_task_alloc(v86[1]);
            *(_QWORD *)(v1 + 520) = v84;
            v85 = sub_100421CA0;
            goto LABEL_68;
          }
        }
        else
        {
          v34 = sub_100010960(v91, v5);
        }
        v35 = *(_QWORD *)(v1 + 392);
        static Logger.engagement.getter(v34);
        swift_bridgeObjectRetain_n(v35, 2);
        swift_bridgeObjectRetain(v3);
        v25 = Logger.logObject.getter(v36);
        v37 = static os_log_type_t.error.getter(v25);
        v38 = os_log_type_enabled(v25, v37);
        v4 = *(_QWORD *)(v1 + 424);
        v0 = *(_QWORD *)(v1 + 432);
        v28 = *(_QWORD *)(v1 + 416);
        v29 = *(_QWORD *)(v1 + 392);
        if (v38)
        {
          v95 = *(_QWORD *)(v1 + 416);
          v39 = *(_QWORD *)(v1 + 384);
          v93 = *(_QWORD *)(v1 + 432);
          v0 = v15;
          v40 = swift_slowAlloc(22, -1);
          v41 = swift_slowAlloc(64, -1);
          v103 = v41;
          *(_DWORD *)v40 = 136315394;
          swift_bridgeObjectRetain(v29);
          *(_QWORD *)(v40 + 4) = sub_100040F58(v39, v29, &v103);
          swift_bridgeObjectRelease_n(v29, 3);
          *(_WORD *)(v40 + 12) = 2080;
          swift_bridgeObjectRetain(v3);
          *(_QWORD *)(v40 + 14) = sub_100040F58(v0, v3, &v103);
          swift_bridgeObjectRelease_n(v3, 3);
          _os_log_impl((void *)&_mh_execute_header, v25, v37, "Event %s with non-String for validation %s", (uint8_t *)v40, 0x16u);
          swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
          v42 = v41;
          v2 = (_BYTE *)(v1 + 528);
          swift_slowDealloc(v42, -1, -1);
          swift_slowDealloc(v40, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v93, v95);
          goto LABEL_42;
        }
      }

      swift_bridgeObjectRelease_n(v3, 2);
      swift_bridgeObjectRelease_n(v29, 2);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v28);
LABEL_42:
      v5 = (uint64_t *)&unk_1009D04E0;
      sub_100010960((uint64_t)v101, (uint64_t *)&unk_1009D04E0);
      v43 = *(_QWORD *)(v1 + 456);
      v9 = v99;
      if (v99 == v43)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v1 + 376));
        goto LABEL_51;
      }
      v7 = 0;
      v12 = v97 + 32;
      if (v99 >= v43)
        goto LABEL_65;
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 376));
  if ((v7 & 1) != 0)
    goto LABEL_46;
LABEL_51:
  v63 = v5;
  v64 = *(_QWORD *)(v1 + 480);
  sub_100010960(v90, &qword_1009E29F0);
  swift_bridgeObjectRelease(v64);
  while (1)
  {
    v75 = *(_QWORD *)(v1 + 472) + 1;
    if (v75 == *(_QWORD *)(v1 + 448))
      break;
    *(_QWORD *)(v1 + 472) = v75;
    v10 = *(_QWORD *)(v1 + 456);
    v11 = *(_QWORD *)(v1 + 368) + *(_QWORD *)(v1 + 464);
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 360) + 8 * v75 + 32);
    *(_QWORD *)(v1 + 480) = v4;
    sub_10000B5E4(v11, v90, &qword_1009E29F0);
    if (v10)
    {
      v0 = *(_QWORD *)(v1 + 376);
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v0);
      v9 = 0;
      v8 = *(_QWORD *)(v1 + 456);
      v7 = 1;
      v5 = v63;
      goto LABEL_13;
    }
    swift_bridgeObjectRetain(v4);
LABEL_46:
    v44 = *(_QWORD *)(v1 + 480);
    v46 = *(void **)(v1 + 400);
    v45 = *(_QWORD *)(v1 + 408);
    v47 = *(_QWORD *)(v1 + 392);
    v48 = *(void **)(v1 + 368);
    v49 = type metadata accessor for TaskPriority(0);
    v98 = *(_QWORD *)(v49 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v45, 1, 1, v49);
    v50 = qword_1009CE490;
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRetain(v47);
    v51 = v48;
    v52 = v46;
    if (v50 != -1)
      swift_once(&qword_1009CE490, sub_10041DBE0);
    v100 = *(_QWORD *)(v1 + 480);
    v54 = *(_QWORD *)(v1 + 400);
    v53 = *(_QWORD *)(v1 + 408);
    v55 = *(_QWORD *)(v1 + 384);
    v56 = *(_QWORD *)(v1 + 392);
    v57 = *(_QWORD *)(v1 + 368);
    v58 = qword_1009E2860;
    v59 = sub_10041E4B0();
    v60 = (_QWORD *)swift_allocObject(&unk_1009056B0, 72, 7);
    v60[2] = v58;
    v60[3] = v59;
    v60[4] = v57;
    v60[5] = v55;
    v60[6] = v56;
    v60[7] = v100;
    v60[8] = v54;
    LODWORD(v59) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v53, 1, v49);
    swift_retain(v58);
    if ((_DWORD)v59 == 1)
    {
      sub_100010960(v53, &qword_1009D3150);
      v62 = 0;
    }
    else
    {
      v65 = TaskPriority.rawValue.getter(v61);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v53, v49);
      v62 = v65;
    }
    v2 = (_BYTE *)(v1 + 528);
    v66 = 0;
    v3 = 0;
    v67 = v60[2];
    v63 = (uint64_t *)&unk_1009D04E0;
    if (v67)
    {
      v68 = v60[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v67);
      v66 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v68);
      v3 = v70;
      swift_unknownObjectRelease(v67);
    }
    v71 = swift_allocObject(&unk_1009056D8, 32, 7);
    v72 = 0;
    *(_QWORD *)(v71 + 16) = &unk_1009E2A30;
    *(_QWORD *)(v71 + 24) = v60;
    if (v3 | v66)
    {
      v72 = v1 + 176;
      *(_QWORD *)(v1 + 176) = 0;
      *(_QWORD *)(v1 + 184) = 0;
      *(_QWORD *)(v1 + 192) = v66;
      *(_QWORD *)(v1 + 200) = v3;
    }
    v73 = *(_QWORD *)(v1 + 480);
    v74 = swift_task_create(v62 | 0x1C00, v72, (char *)&type metadata for () + 8, &unk_1009DF3C0, v71);
    swift_bridgeObjectRelease(v73);
    swift_release(v74);
    sub_100010960(v90, &qword_1009E29F0);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 360));
  v79 = *(_QWORD *)(v1 + 432);
  v80 = *(_QWORD *)(v1 + 408);
  swift_task_dealloc(*(_QWORD *)(v1 + 440));
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1004227C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  if (a2)
  {
    v5 = (uint64_t *)(v2 + OBJC_IVAR___BKPersonalizationEventDonor_sectionLinks);
    swift_beginAccess(v5, v17, 0, 0);
    v6 = *v5;
    v7 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain(a2);
    if (v7)
    {
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(v6);
      v8 = sub_10004CE80(a1, a2);
      if ((v9 & 1) != 0)
      {
        v10 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v8);
        v11 = *v10;
        v7 = v10[1];
        swift_bridgeObjectRetain(v7);
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v6);
        v12 = v11 == a1 && v7 == a2;
        if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v7, a1, a2, 0) & 1) != 0)
        {
          swift_bridgeObjectRelease(v7);
          return a1;
        }
      }
      else
      {
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v6);
        v11 = 0;
        v7 = 0;
      }
    }
    else
    {
      v11 = 0;
    }
    v13 = sub_1004227C4(v11, v7);
    v15 = v14;
    swift_bridgeObjectRelease(v7);
    if (v15)
    {
      swift_bridgeObjectRelease(a2);
      return v13;
    }
  }
  return a1;
}

uint64_t sub_10042290C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v18[24];

  v9 = (uint64_t *)(v4 + OBJC_IVAR___BKPersonalizationEventDonor_sectionLinks);
  swift_beginAccess(v9, v18, 0, 0);
  v10 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v10);
    v11 = sub_10004CE80(a1, a2);
    if ((v12 & 1) != 0)
    {
      v13 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v11);
      v14 = *v13;
      v15 = v13[1];
      swift_bridgeObjectRetain(v15);
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v10);
    if (a1 != a3)
      goto LABEL_9;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    if (a1 != a3)
      goto LABEL_9;
  }
  if (a2 == a4)
  {
LABEL_10:
    swift_bridgeObjectRelease(v15);
    v16 = 1;
    return v16 & 1;
  }
LABEL_9:
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0)
    goto LABEL_10;
  if (v15)
  {
    if ((v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v14, v15, 0) & 1) == 0)
    {
      v16 = sub_10042290C(v14, v15, a3, a4);
      swift_bridgeObjectRelease(v15);
      return v16 & 1;
    }
    swift_bridgeObjectRelease(v15);
  }
  v16 = 0;
  return v16 & 1;
}

void PersonalizationEventDonor.finishedBook(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _QWORD v13[2];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v1 = v0;
  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v15 = 0u;
    v16 = 0u;
LABEL_14:
    sub_100010960((uint64_t)&v15, (uint64_t *)&unk_1009D04E0);
    return;
  }
  v3 = v2;
  v13[0] = 0xD00000000000001CLL;
  v13[1] = 0x80000001007B7530;
  AnyHashable.init<A>(_:)(v13, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1000561E8((uint64_t)v14), (v5 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_1000569AC((uint64_t)v14);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_14;
  if ((swift_dynamicCast(v14, &v15, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v7 = v14[0];
    v6 = v14[1];
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(BALocationTypePostReading);
    if (v7 == v8 && v6 == v9)
    {
      v12 = 1;
      v11 = v6;
    }
    else
    {
      v11 = v9;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, v8, v9, 0);
    }
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v6);
    *(_BYTE *)(v1 + OBJC_IVAR___BKPersonalizationEventDonor_finishingBookAutomatically) = v12 & 1;
  }
}

id PersonalizationEventProcessor.__allocating_init(donor:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___BKPersonalizationEventProcessor_donor] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

id PersonalizationEventProcessor.init(donor:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___BKPersonalizationEventProcessor_donor] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for PersonalizationEventProcessor();
  return objc_msgSendSuper2(&v3, "init");
}

void PersonalizationEventProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.PersonalizationEventProcessor", 35, "init()", 6, 0);
  __break(1u);
}

id PersonalizationEventProcessor.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for PersonalizationEventProcessor);
}

void *sub_100422D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = BasePropertyConfiguration.eventName.getter();
      v13 = v12;
      if (v11 == a2 && v12 == a3)
      {
        swift_bridgeObjectRelease(a1);
LABEL_15:
        swift_bridgeObjectRelease(a3);
        return v9;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
      swift_bridgeObjectRelease(v13);
      if ((v14 & 1) != 0)
      {
        a3 = a1;
        goto LABEL_15;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return 0;
}

double sub_100422E7C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (**a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  double result;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _OWORD v37[2];
  uint64_t v38;
  char v39;

  v10 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_100905638, 24, 7);
  *(_QWORD *)(v13 + 16) = a5;
  v14 = _Block_copy(a5);
  v15 = static Context.updateLocalStorage.getter(v14);
  v17 = v16;
  if (!a3)
  {
    v18 = swift_bridgeObjectRelease(v16);
    static Context.syncViaCloudKit.getter(v18);
    swift_bridgeObjectRelease(v19);
    goto LABEL_6;
  }
  if (v15 != a2 || v16 != a3)
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v15, v16, 0);
    v23 = swift_bridgeObjectRelease(v17);
    if ((v22 & 1) != 0)
      goto LABEL_11;
    v25 = static Context.syncViaCloudKit.getter(v23);
    v17 = v24;
    if (v25 != a2 || v24 != a3)
    {
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v25, v24, 0);
      swift_bridgeObjectRelease(v17);
      if ((v26 & 1) != 0)
        goto LABEL_11;
LABEL_6:
      v38 = 0;
      memset(v37, 0, sizeof(v37));
      v39 = -1;
      v20 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
      v36 = (id)BMPropertyValue.init(with:)(v37);
      ((void (**)(_QWORD, id))a5)[2](a5, v36);
      swift_release(v13);

      return result;
    }
  }
  swift_bridgeObjectRelease(v17);
LABEL_11:
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 1, 1, v27);
  v28 = qword_1009CE490;
  v29 = a4;
  v30 = a1;
  swift_retain(v13);
  if (v28 != -1)
    swift_once(&qword_1009CE490, sub_10041DBE0);
  v31 = qword_1009E2860;
  v32 = sub_10041E4B0();
  v33 = (_QWORD *)swift_allocObject(&unk_100905660, 64, 7);
  v33[2] = v31;
  v33[3] = v32;
  v33[4] = v29;
  v33[5] = v30;
  v33[6] = sub_100025DE4;
  v33[7] = v13;
  swift_retain(v31);
  v34 = sub_10030C02C((uint64_t)v12, (uint64_t)&unk_1009E29E8, (uint64_t)v33);
  swift_release(v13);
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

_QWORD *_s5Books25PersonalizationEventDonorC11listOfDicts08fromDictF5ListsSaySDySSypGGSDySSSayypGG_tF_0(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *result;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  int64_t v53;
  _OWORD v54[2];
  _QWORD v55[4];

  v2 = 0;
  v3 = 0;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v10 = v9 | (v3 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10) + 16);
    if (v11 > v2)
      v2 = v11;
  }
  v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v12 >= v8)
    goto LABEL_22;
  v13 = *(_QWORD *)(v4 + 8 * v12);
  ++v3;
  if (v13)
    goto LABEL_21;
  v3 = v12 + 1;
  if (v12 + 1 >= v8)
    goto LABEL_22;
  v13 = *(_QWORD *)(v4 + 8 * v3);
  if (v13)
    goto LABEL_21;
  v3 = v12 + 2;
  if (v12 + 2 >= v8)
    goto LABEL_22;
  v13 = *(_QWORD *)(v4 + 8 * v3);
  if (v13)
  {
LABEL_21:
    v7 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_5;
  }
  v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    if (!v2)
      return _swiftEmptyArrayStorage;
    v15 = 0;
    v16 = _swiftEmptyArrayStorage;
    v49 = v2;
    v52 = a1 + 64;
    while (1)
    {
      v50 = v15 + 1;
      v51 = v16;
      v17 = 1 << *(_BYTE *)(a1 + 32);
      if (v17 < 64)
        v18 = ~(-1 << v17);
      else
        v18 = -1;
      v19 = v18 & *(_QWORD *)(a1 + 64);
      v53 = (unint64_t)(v17 + 63) >> 6;
      swift_bridgeObjectRetain(a1);
      v20 = 0;
      while (1)
      {
        if (v19)
        {
          v22 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
          v23 = v22 | (v20 << 6);
          goto LABEL_46;
        }
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_71;
        if (v24 >= v53)
          break;
        v25 = *(_QWORD *)(v52 + 8 * v24);
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v53)
            break;
          v25 = *(_QWORD *)(v52 + 8 * v20);
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v53)
              break;
            v25 = *(_QWORD *)(v52 + 8 * v20);
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v53)
                break;
              v25 = *(_QWORD *)(v52 + 8 * v26);
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_72;
                  if (v20 >= v53)
                    goto LABEL_60;
                  v25 = *(_QWORD *)(v52 + 8 * v20);
                  ++v26;
                  if (v25)
                    goto LABEL_45;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_45:
        v19 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_46:
        v27 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v23);
        v28 = *(_QWORD *)(v27 + 16);
        v29 = v28 - 1;
        if ((uint64_t)(v28 - 1) >= v15)
          v29 = v15;
        if (v29 >= v28)
        {
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        v30 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v23);
        v32 = *v30;
        v31 = v30[1];
        sub_10004CD0C(v27 + 32 * v29 + 32, (uint64_t)v55);
        sub_10004CD0C((uint64_t)v55, (uint64_t)v54);
        swift_bridgeObjectRetain(v31);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v35 = sub_10004CE80(v32, v31);
        v36 = _swiftEmptyDictionarySingleton[2];
        v37 = (v34 & 1) == 0;
        v38 = v36 + v37;
        if (__OFADD__(v36, v37))
          goto LABEL_69;
        v39 = v34;
        if (_swiftEmptyDictionarySingleton[3] >= v38)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v34 & 1) != 0)
              goto LABEL_28;
          }
          else
          {
            sub_1002BFAC8();
            if ((v39 & 1) != 0)
              goto LABEL_28;
          }
        }
        else
        {
          sub_10037A77C(v38, isUniquelyReferenced_nonNull_native);
          v40 = sub_10004CE80(v32, v31);
          if ((v39 & 1) != (v41 & 1))
            goto LABEL_75;
          v35 = v40;
          if ((v39 & 1) != 0)
          {
LABEL_28:
            v21 = (_QWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v35);
            _s5Books15CurrentPageViewVwxx_0(v21);
            sub_10004CFC4(v54, v21);
            goto LABEL_29;
          }
        }
        _swiftEmptyDictionarySingleton[(v35 >> 6) + 8] |= 1 << v35;
        v42 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v35);
        *v42 = v32;
        v42[1] = v31;
        sub_10004CFC4(v54, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v35));
        v43 = _swiftEmptyDictionarySingleton[2];
        v44 = __OFADD__(v43, 1);
        v45 = v43 + 1;
        if (v44)
          goto LABEL_70;
        _swiftEmptyDictionarySingleton[2] = v45;
        swift_bridgeObjectRetain(v31);
LABEL_29:
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(0x8000000000000000);
        _s5Books15CurrentPageViewVwxx_0(v55);
      }
LABEL_60:
      swift_release(a1);
      v16 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
        v16 = sub_10003FB28(0, v51[2] + 1, 1, v51);
      v47 = v16[2];
      v46 = v16[3];
      if (v47 >= v46 >> 1)
        v16 = sub_10003FB28((_QWORD *)(v46 > 1), v47 + 1, 1, v16);
      v16[2] = v47 + 1;
      v16[v47 + 4] = _swiftEmptyDictionarySingleton;
      v15 = v50;
      if (v50 == v49)
        return v16;
    }
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v3 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v3 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v4 + 8 * v3);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void _s5Books25PersonalizationEventDonorC10expression_7matchesSbSDySSypG_yptF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  _UNKNOWN **v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  int64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  id v29;
  char *v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  v10 = &off_1008F0BF0;
  v32 = v4;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v9 << 6);
LABEL_25:
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = *v16;
    v17 = (void *)v16[1];
    swift_bridgeObjectRetain(v17);
    v19._countAndFlagsBits = v18;
    v19._object = v17;
    v20 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)v10, v19);
    if (v20 >= 3)
    {
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v21 = v20;
      if (*(_QWORD *)(a1 + 16) && (v22 = sub_10004CE80(v18, (uint64_t)v17), (v23 & 1) != 0))
      {
        sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v22, (uint64_t)&v34);
      }
      else
      {
        v34 = 0u;
        v35 = 0u;
      }
      swift_bridgeObjectRelease(v17);
      if (*((_QWORD *)&v35 + 1))
      {
        v24 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
        if ((swift_dynamicCast(&v33, &v34, (char *)&type metadata for Any + 8, v24, 6) & 1) != 0)
        {
          v25 = v33;
          sub_10004CD0C(a2, (uint64_t)&v34);
          if ((swift_dynamicCast(&v33, &v34, (char *)&type metadata for Any + 8, v24, 6) & 1) != 0)
          {
            v26 = v8;
            v27 = v10;
            v28 = a2;
            v29 = v33;
            v30 = (char *)objc_msgSend(v33, "compare:", v25);

            if (v21)
            {
              if (v21 == 1)
                v31 = v30 == (char *)1;
              else
                v31 = v30 + 1 == 0;
              a2 = v28;
              v10 = v27;
              v8 = v26;
              v4 = v32;
              if (v31)
              {
LABEL_43:
                swift_release(a1);
                return;
              }
            }
            else
            {
              a2 = v28;
              v10 = v27;
              v8 = v26;
              v4 = v32;
              if (!v30)
                goto LABEL_43;
            }
          }
          else
          {

          }
        }
      }
      else
      {
        sub_100010960((uint64_t)&v34, (uint64_t *)&unk_1009D04E0);
      }
    }
  }
  v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v13 >= v8)
    goto LABEL_43;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v9;
  if (v14)
    goto LABEL_24;
  v9 = v13 + 1;
  if (v13 + 1 >= v8)
    goto LABEL_43;
  v14 = *(_QWORD *)(v4 + 8 * v9);
  if (v14)
    goto LABEL_24;
  v9 = v13 + 2;
  if (v13 + 2 >= v8)
    goto LABEL_43;
  v14 = *(_QWORD *)(v4 + 8 * v9);
  if (v14)
    goto LABEL_24;
  v9 = v13 + 3;
  if (v13 + 3 >= v8)
    goto LABEL_43;
  v14 = *(_QWORD *)(v4 + 8 * v9);
  if (v14)
    goto LABEL_24;
  v9 = v13 + 4;
  if (v13 + 4 >= v8)
    goto LABEL_43;
  v14 = *(_QWORD *)(v4 + 8 * v9);
  if (v14)
  {
LABEL_24:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_25;
  }
  v15 = v13 + 5;
  if (v15 >= v8)
    goto LABEL_43;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v8)
      goto LABEL_43;
    v14 = *(_QWORD *)(v4 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_45:
  __break(1u);
}

uint64_t _s5Books25PersonalizationEventDonorC5value_19matchesFilterValues05debugC4NameSbyp_SayypGSSSgtF_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[4];
  _QWORD v57[5];

  v8 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  if (!v11)
    return 0;
  v12 = a2 + 32;
  if (a4)
    v13 = a3;
  else
    v13 = 0x6E776F6E6B6E753CLL;
  v14 = 0xE90000000000003ELL;
  if (a4)
    v14 = a4;
  v49 = v14;
  v50 = v13;
  v46 = a2;
  v15 = swift_bridgeObjectRetain(a2);
  v16 = (char *)&type metadata for Any;
  v17 = (char *)&type metadata for Any + 8;
  v15.n128_u64[0] = 136315138;
  v47 = v15;
  v53 = a4;
  v48 = a1;
  while (1)
  {
    sub_10004CD0C(v12, (uint64_t)v57);
    sub_10004CD0C(a1, (uint64_t)v56);
    if ((swift_dynamicCast(&v54, v56, v17, &type metadata for String, 6) & 1) != 0)
      break;
LABEL_18:
    sub_10004CD0C(a1, (uint64_t)v56);
    if ((swift_dynamicCast(&v54, v56, v16 + 8, &type metadata for Bool, 6) & 1) != 0
      && (v22 = v54,
          sub_10004CD0C((uint64_t)v57, (uint64_t)v56),
          (swift_dynamicCast(&v54, v56, v16 + 8, &type metadata for Bool, 6) & 1) != 0))
    {
      v23 = v54;
      _s5Books15CurrentPageViewVwxx_0(v57);
      if (v22 == v23)
        goto LABEL_35;
    }
    else
    {
      sub_10004CD0C((uint64_t)v57, (uint64_t)v56);
      v24 = sub_10004CFD4(&qword_1009D3090);
      v25 = swift_dynamicCast(&v54, v56, v16 + 8, v24, 6);
      if (!(_DWORD)v25)
      {
        static Logger.engagement.getter(v25);
        v33 = swift_bridgeObjectRetain_n(a4, 2);
        v34 = Logger.logObject.getter(v33);
        v35 = static os_log_type_t.error.getter(v34);
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc(12, -1);
          v37 = swift_slowAlloc(32, -1);
          v56[0] = v37;
          *(_DWORD *)v36 = v47.n128_u32[0];
          swift_bridgeObjectRetain(v53);
          v38 = v16;
          v39 = v17;
          v40 = v10;
          v41 = v49;
          *(_QWORD *)(v36 + 4) = sub_100040F58(v50, v49, v56);
          swift_bridgeObjectRelease_n(v53, 2);
          v42 = v41;
          v10 = v40;
          v17 = v39;
          v16 = v38;
          a1 = v48;
          swift_bridgeObjectRelease(v42);
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "Filter values for case in event %s not string and not supported expression", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy(v37, 1, v16 + 8);
          swift_slowDealloc(v37, -1, -1);
          v43 = v36;
          a4 = v53;
          swift_slowDealloc(v43, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n(a4, 2);
        }

        (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v52);
        goto LABEL_9;
      }
      v26 = v54;
      if (!*(_QWORD *)(v54 + 16)
        || (v27 = sub_10004CE80(0x6973736572707865, 0xEA00000000006E6FLL), (v28 & 1) == 0)
        || (sub_10004CD0C(*(_QWORD *)(v26 + 56) + 32 * v27, (uint64_t)v56),
            (swift_dynamicCast(&v54, v56, v16 + 8, v24, 6) & 1) == 0))
      {
        swift_bridgeObjectRelease(v26);
LABEL_9:
        _s5Books15CurrentPageViewVwxx_0(v57);
        goto LABEL_10;
      }
      v29 = v54;
      _s5Books25PersonalizationEventDonorC10expression_7matchesSbSDySSypG_yptF_0(v54, a1);
      v31 = v30;
      swift_bridgeObjectRelease(v26);
      v32 = v29;
      a4 = v53;
      swift_bridgeObjectRelease(v32);
      _s5Books15CurrentPageViewVwxx_0(v57);
      if ((v31 & 1) != 0)
        goto LABEL_35;
    }
LABEL_10:
    v12 += 32;
    if (!--v11)
    {
      swift_bridgeObjectRelease(v46);
      return 0;
    }
  }
  v19 = v54;
  v18 = v55;
  sub_10004CD0C((uint64_t)v57, (uint64_t)v56);
  if ((swift_dynamicCast(&v54, v56, v16 + 8, &type metadata for String, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v18);
    goto LABEL_18;
  }
  v20 = v55;
  if (v54 != v19 || v55 != v18)
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, v19, v18, 0);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v18);
    _s5Books15CurrentPageViewVwxx_0(v57);
    a4 = v53;
    if ((v21 & 1) != 0)
      goto LABEL_35;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease_n(v18, 2);
  _s5Books15CurrentPageViewVwxx_0(v57);
LABEL_35:
  swift_bridgeObjectRelease(v46);
  return 1;
}

uint64_t sub_100423D44()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_100423D6C(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t sub_100423ECC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100423F18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_1009E2A1C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_100420554(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100423FC0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100424004(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1009E2A2C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000AE34;
  return sub_1004201A4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100424098()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004240BC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E2A40);
  sub_100048F64(v0, (uint64_t)qword_1009E2A40);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000022, 0x80000001007C9180);
}

Swift::Int sub_100424138(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v6[10];

  v6[9] = *v2;
  Hasher.init(_seed:)(v6, 0);
  dispatch thunk of Hashable.hash(into:)(v6, a1, a2);
  return Hasher._finalize()();
}

uint64_t sub_100424198(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10042540C();
  return _BridgedNSError.hash(into:)(a1, a2, v4);
}

_QWORD *sub_1004241D0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 0;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1004241E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10042540C();
  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_100424210(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10042540C();
  return _BridgedNSError._code.getter(a1, v2);
}

unint64_t sub_100424238()
{
  return 0xD000000000000023;
}

uint64_t sub_100424254(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_10042540C();
  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

id ViewBookUpdatesOperation.__allocating_init(adamID:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  objc_super v14;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR___BKViewBookUpdatesOperation_parameters];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR___BKViewBookUpdatesOperation_error] = 0;
  v11 = &v9[OBJC_IVAR___BKViewBookUpdatesOperation_adamID];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v12 = &v9[OBJC_IVAR___BKViewBookUpdatesOperation_version];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  v14.receiver = v9;
  v14.super_class = v4;
  return objc_msgSendSuper2(&v14, "init");
}

id ViewBookUpdatesOperation.init(adamID:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v5 = &v4[OBJC_IVAR___BKViewBookUpdatesOperation_parameters];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKViewBookUpdatesOperation_error] = 0;
  v6 = &v4[OBJC_IVAR___BKViewBookUpdatesOperation_adamID];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v7 = &v4[OBJC_IVAR___BKViewBookUpdatesOperation_version];
  *(_QWORD *)v7 = a3;
  *((_QWORD *)v7 + 1) = a4;
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for ViewBookUpdatesOperation();
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t type metadata accessor for ViewBookUpdatesOperation()
{
  return objc_opt_self(BKViewBookUpdatesOperation);
}

uint64_t ViewBookUpdatesOperation.parameters.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_parameters);
  swift_beginAccess(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_parameters, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t ViewBookUpdatesOperation.parameters.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR___BKViewBookUpdatesOperation_parameters);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*ViewBookUpdatesOperation.parameters.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKViewBookUpdatesOperation_parameters, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ViewBookUpdatesOperation.error.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_error);
  swift_beginAccess(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_error, v4, 0, 0);
  v2 = *v1;
  swift_errorRetain(v2);
  return v2;
}

uint64_t ViewBookUpdatesOperation.error.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BKViewBookUpdatesOperation_error);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_errorRelease(v4);
}

uint64_t (*ViewBookUpdatesOperation.error.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKViewBookUpdatesOperation_error, a1, 33, 0);
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall ViewBookUpdatesOperation.main()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  Class isa;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  void *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63[5];
  __int128 v64;
  __int128 v65;

  v1 = v0;
  v2 = (void *)objc_opt_self(BUBag);
  v3 = objc_msgSend(v2, "defaultBag");
  v4 = objc_msgSend(objc_allocWithZone((Class)AMSURLRequestEncoder), "initWithBag:", v3);

  objc_msgSend(v4, "setDialogOptions:", 1);
  objc_msgSend(v4, "setRequestEncoding:", 2);
  objc_msgSend(v4, "setCompressRequestBody:", 1);
  v5 = sub_100424FA0();
  v6 = objc_msgSend(v2, "defaultBag");
  v7 = objc_msgSend(v6, "viewBookUpdateParams");

  v63[0] = 0;
  v8 = objc_msgSend(v7, "valueWithError:", v63);

  v9 = v63[0];
  if (!v8)
  {
    v24 = v63[0];
    swift_bridgeObjectRelease(v5);
    v25 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v26);
LABEL_10:
    v31 = (uint64_t *)&v1[OBJC_IVAR___BKViewBookUpdatesOperation_error];
    swift_beginAccess(&v1[OBJC_IVAR___BKViewBookUpdatesOperation_error], v63, 1, 0);
    v32 = *v31;
    *v31 = v25;
    swift_errorRetain(v25);
    swift_errorRelease(v32);

    swift_errorRelease(v25);
    return;
  }
  v10 = v63[0];
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v4, "requestWithMethod:URL:parameters:", 4, v8, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v63[0] = 0;
  v13 = objc_msgSend(v12, "resultWithError:", v63);

  v14 = v63[0];
  if (!v13)
  {
    v27 = v63[0];
    v25 = _convertNSErrorToError(_:)(v14);

    swift_willThrow(v28);
LABEL_9:

    goto LABEL_10;
  }
  v15 = (void *)objc_opt_self(AMSURLSession);
  v16 = v14;
  v17 = objc_msgSend(v15, "defaultSession");
  v18 = objc_msgSend(v17, "dataTaskPromiseWithRequest:", v13);

  v63[0] = 0;
  v19 = objc_msgSend(v18, "resultWithError:", v63);

  v20 = v63[0];
  if (!v19)
  {
    v29 = v63[0];
    v25 = _convertNSErrorToError(_:)(v20);

    swift_willThrow(v30);
    goto LABEL_9;
  }
  v21 = v63[0];

  v22 = objc_msgSend(v19, "object");
  if (v22)
  {
    v23 = v22;
    _bridgeAnyObjectToAny(_:)(v22);
    swift_unknownObjectRelease(v23);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  sub_10004C7B4((uint64_t)&v64, (uint64_t)v63);
  if (!v63[3])
  {
    sub_10004A7B8((uint64_t)v63);
    goto LABEL_18;
  }
  v33 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  if ((swift_dynamicCast(&v61, v63, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
  {
LABEL_18:
    v37 = sub_100425174();
    v38 = swift_allocError(&type metadata for ViewBookUpdatesOperationError, v37, 0, 0);
    *v39 = 0;
    v40 = (uint64_t *)&v1[OBJC_IVAR___BKViewBookUpdatesOperation_error];
    swift_beginAccess(v40, v63, 1, 0);
    v41 = *v40;
    *v40 = v38;
    swift_errorRelease(v41);
LABEL_19:

    return;
  }
  v34 = v61;
  v61 = 0x73657461647075;
  v62 = 0xE700000000000000;
  AnyHashable.init<A>(_:)(&v61, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v34 + 16) && (v35 = sub_1000561E8((uint64_t)v63), (v36 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v34 + 56) + 32 * v35, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease(v34);
  sub_1000569AC((uint64_t)v63);
  if (!*((_QWORD *)&v65 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast(&v61, &v64, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
    goto LABEL_37;
  v42 = v61;
  v43 = *(_QWORD *)&v1[OBJC_IVAR___BKViewBookUpdatesOperation_adamID + 8];
  v61 = *(_QWORD *)&v1[OBJC_IVAR___BKViewBookUpdatesOperation_adamID];
  v62 = v43;
  swift_bridgeObjectRetain(v43);
  AnyHashable.init<A>(_:)(&v61, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v42 + 16) && (v44 = sub_1000561E8((uint64_t)v63), (v45 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v42 + 56) + 32 * v44, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease(v42);
  sub_1000569AC((uint64_t)v63);
  if (!*((_QWORD *)&v65 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast(&v61, &v64, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
  {
LABEL_37:
    if (qword_1009CE4A0 != -1)
      swift_once(&qword_1009CE4A0, sub_1004240BC);
    v53 = type metadata accessor for Logger(0);
    sub_100048F64(v53, (uint64_t)qword_1009E2A40);
    v54 = v1;
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = (void *)swift_slowAlloc(32, -1);
      v63[0] = v58;
      *(_DWORD *)v57 = 136315138;
      v60 = *(_QWORD *)&v54[OBJC_IVAR___BKViewBookUpdatesOperation_adamID];
      v59 = *(_QWORD *)&v54[OBJC_IVAR___BKViewBookUpdatesOperation_adamID + 8];
      swift_bridgeObjectRetain(v59);
      *(_QWORD *)&v64 = sub_100040F58(v60, v59, (uint64_t *)v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, (char *)&v64 + 8, v57 + 4, v57 + 12);

      swift_bridgeObjectRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Updates payload for %s is missing or malformed from response", v57, 0xCu);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

    }
    else
    {

    }
    goto LABEL_19;
  }
  v46 = v61;
  v61 = 0x6D61726150797562;
  v62 = 0xE900000000000073;
  AnyHashable.init<A>(_:)(&v61, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v46 + 16) && (v47 = sub_1000561E8((uint64_t)v63), (v48 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v46 + 56) + 32 * v47, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease(v46);
  sub_1000569AC((uint64_t)v63);
  if (!*((_QWORD *)&v65 + 1))
  {
LABEL_36:
    sub_10004A7B8((uint64_t)&v64);
    goto LABEL_37;
  }
  if ((swift_dynamicCast(&v61, &v64, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_37;
  v49 = v61;
  v50 = v62;
  v51 = (uint64_t *)&v1[OBJC_IVAR___BKViewBookUpdatesOperation_parameters];
  swift_beginAccess(&v1[OBJC_IVAR___BKViewBookUpdatesOperation_parameters], v63, 1, 0);
  v52 = v51[1];
  *v51 = v49;
  v51[1] = v50;

  swift_bridgeObjectRelease(v52);
}

unint64_t sub_100424FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[176];
  _BYTE v18[96];

  v1 = sub_10004CFD4(&qword_1009D6FD0);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10070CCA0;
  v3 = sub_10004CFD4(&qword_1009ECA50);
  inited = swift_initStackObject(v3, v18);
  *(_OWORD *)(inited + 16) = xmmword_10070FC00;
  *(_QWORD *)(inited + 32) = 0x64692D6D616461;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_adamID + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_adamID);
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 72) = 0x80000001007C05A0;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_version);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___BKViewBookUpdatesOperation_version + 8);
  *(_QWORD *)(inited + 80) = v6;
  *(_QWORD *)(inited + 88) = v7;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  *(_QWORD *)(v2 + 32) = sub_1000316DC(inited);
  v8 = sub_10004CFD4(&qword_1009DD620);
  v9 = swift_initStackObject(v8, v17);
  *(_OWORD *)(v9 + 16) = xmmword_10070FC00;
  v15 = 0x6F622D6C61636F6CLL;
  v16 = 0xEB00000000736B6FLL;
  AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v9 + 96) = sub_10004CFD4(&qword_1009D6FD8);
  *(_QWORD *)(v9 + 72) = v2;
  v15 = 1684632935;
  v16 = 0xE400000000000000;
  AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
  v10 = objc_msgSend((id)objc_opt_self(AMSDevice), "deviceGUID");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(v9 + 168) = &type metadata for String;
  *(_QWORD *)(v9 + 144) = v11;
  *(_QWORD *)(v9 + 152) = v13;
  return sub_1000560A8(v9);
}

unint64_t sub_100425174()
{
  unint64_t result;

  result = qword_1009E2A78;
  if (!qword_1009E2A78)
  {
    result = swift_getWitnessTable(&unk_100723BA8, &type metadata for ViewBookUpdatesOperationError);
    atomic_store(result, (unint64_t *)&qword_1009E2A78);
  }
  return result;
}

void ViewBookUpdatesOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.ViewBookUpdatesOperation", 30, "init()", 6, 0);
  __break(1u);
}

id ViewBookUpdatesOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewBookUpdatesOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

ValueMetadata *type metadata accessor for ViewBookUpdatesOperationError()
{
  return &type metadata for ViewBookUpdatesOperationError;
}

unint64_t sub_1004252F0()
{
  unint64_t result;

  result = qword_1009E2AA8;
  if (!qword_1009E2AA8)
  {
    result = swift_getWitnessTable(&unk_100723A90, &type metadata for ViewBookUpdatesOperationError);
    atomic_store(result, (unint64_t *)&qword_1009E2AA8);
  }
  return result;
}

unint64_t sub_100425338()
{
  unint64_t result;

  result = qword_1009E2AB0;
  if (!qword_1009E2AB0)
  {
    result = swift_getWitnessTable(&unk_100723B40, &type metadata for ViewBookUpdatesOperationError);
    atomic_store(result, (unint64_t *)&qword_1009E2AB0);
  }
  return result;
}

unint64_t sub_100425380()
{
  unint64_t result;

  result = qword_1009E2AB8;
  if (!qword_1009E2AB8)
  {
    result = swift_getWitnessTable(&unk_100723B08, &type metadata for ViewBookUpdatesOperationError);
    atomic_store(result, (unint64_t *)&qword_1009E2AB8);
  }
  return result;
}

unint64_t sub_1004253C8()
{
  unint64_t result;

  result = qword_1009E2AC0;
  if (!qword_1009E2AC0)
  {
    result = swift_getWitnessTable(&unk_100723B80, &type metadata for ViewBookUpdatesOperationError);
    atomic_store(result, (unint64_t *)&qword_1009E2AC0);
  }
  return result;
}

unint64_t sub_10042540C()
{
  unint64_t result;

  result = qword_1009E2AC8;
  if (!qword_1009E2AC8)
  {
    result = swift_getWitnessTable(&unk_100723AC0, &type metadata for ViewBookUpdatesOperationError);
    atomic_store(result, (unint64_t *)&qword_1009E2AC8);
  }
  return result;
}

_QWORD *sub_100425450()
{
  void *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[32];
  unint64_t v28;

  v1 = _swiftEmptyArrayStorage;
  v28 = (unint64_t)_swiftEmptyArrayStorage;
  v2 = objc_msgSend(v0, "physicalPageMap");
  if (v2)
  {
    v3 = v2;
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, (char *)&type metadata for Any + 8);

    v5 = *(_QWORD *)(v4 + 16);
    if (!v5)
    {
      swift_bridgeObjectRelease(v4);
      return _swiftEmptyArrayStorage;
    }
    for (i = v4 + 32; ; i += 32)
    {
      sub_10004CD0C(i, (uint64_t)v27);
      v7 = sub_10004CFD4((uint64_t *)&unk_1009DD6C0);
      if ((swift_dynamicCast(&v26, v27, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
      {
        v8 = v26;
        if (*(_QWORD *)(v26 + 16))
        {
          v9 = sub_10004CE80(1717924456, 0xE400000000000000);
          if ((v10 & 1) != 0)
          {
            if (*(_QWORD *)(v8 + 16))
            {
              v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v9);
              v13 = *v11;
              v12 = v11[1];
              swift_bridgeObjectRetain(v12);
              v14 = sub_10004CE80(1701667182, 0xE400000000000000);
              if ((v15 & 1) != 0)
              {
                v16 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v14);
                v17 = *v16;
                v18 = v16[1];
                swift_bridgeObjectRetain(v18);
                v19 = swift_bridgeObjectRelease(v8);
                v20 = type metadata accessor for PhysicalPageEntity(0, v19);
                swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
                v21 = PhysicalPageEntity.init(href:name:)(v13, v12, v17, v18);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
                v23 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v22 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v23 >= v22 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
                v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
                specialized Array._endMutation()(v24);
                goto LABEL_6;
              }
              swift_bridgeObjectRelease(v12);
            }
          }
        }
        swift_bridgeObjectRelease(v8);
      }
LABEL_6:
      if (!--v5)
      {
        swift_bridgeObjectRelease(v4);
        return (_QWORD *)v28;
      }
    }
  }
  return v1;
}

void AEBookInfo.bookEntity.getter(uint64_t *a1@<X8>)
{
  unsigned int *v1;
  unint64_t v2;
  char *v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  char **v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  char **v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  unint64_t v55;
  id v56;
  void *v57;
  unint64_t v58;
  id v59;
  void *v60;
  unint64_t v61;
  id v62;
  void *v63;
  unint64_t v64;
  char **v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  char **v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char **v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  char **v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char **v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  void *v109;
  id v110;
  void *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  id v117;
  void *v118;
  id v119;
  void *v120;
  id v121;
  void *v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  uint64_t v130;
  id v131;
  void *v132;
  unint64_t v133;
  id v134;
  void *v135;
  id v136;
  void *v137;
  char **v138;
  id v139;
  void *v140;
  uint64_t v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BOOL8 v147;
  char **v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  __int16 v152;
  uint64_t v153;
  int v154;
  __int16 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  unsigned int v160;
  _QWORD *v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned int v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  char **v184;
  uint64_t *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  unsigned int *v191;
  void *v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t i;
  char **v197;
  __int128 v198;
  unsigned int *v199;
  void *v200;
  char **v201;

  v8 = v1;
  v185 = a1;
  v9 = type metadata accessor for URL(0);
  v187 = *(_QWORD *)(v9 - 8);
  v188 = v9;
  __chkstk_darwin(v9);
  v186 = (char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v12 = __chkstk_darwin(v11);
  v190 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(v1, "chapters", v12);
  v191 = v1;
  if (v14
    && (v16 = v14,
        v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, &protocol witness table for AnyHashable), v16, sub_10042696C(v17), v19 = v18, v15 = swift_bridgeObjectRelease(v17).n128_u64[0], v19))
  {
    swift_bridgeObjectRetain(v19);
    v21 = sub_100427858(v20, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_1003825CC);
    swift_bridgeObjectRelease(v19);
    *(_QWORD *)&v198 = v21;
    sub_100427EEC((uint64_t *)&v198);
    swift_bridgeObjectRelease(v19);
    v4 = v198;
    *(_QWORD *)&v198 = _swiftEmptyArrayStorage;
    if ((v4 & 0x8000000000000000) != 0 || (v4 & 0x4000000000000000) != 0)
      goto LABEL_21;
    v22 = *(_QWORD *)(v4 + 16);
    swift_retain(v4);
    for (i = v22; i; i = _CocoaArrayWrapper.endIndex.getter(v44))
    {
      v195 = v4 & 0xC000000000000001;
      v23 = 4;
      v7 = &selRef_ignoredCurrentBookNotification;
      while (1)
      {
        v24 = (char **)(v23 - 4);
        v25 = v195
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23 - 4, v4)
            : *(id *)(v4 + 8 * v23);
        v2 = (unint64_t)v25;
        if (__OFADD__(v24, 1))
          break;
        v26 = objc_msgSend(v25, "href");
        if (!v26)
          goto LABEL_141;
        v27 = v26;
        v197 = (char **)(v23 - 3);
        v24 = (char **)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        v30 = objc_msgSend((id)v2, "name");
        if (!v30)
          goto LABEL_142;
        v31 = v30;
        v32 = (_QWORD *)v4;
        v5 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v6 = v33;

        v34 = objc_msgSend((id)v2, "indentationLevel");
        if (!v34)
          goto LABEL_143;
        v35 = v34;
        v36 = objc_msgSend(v34, v7[404]);

        v37 = objc_msgSend((id)v2, "absoluteOrder");
        if (!v37)
          goto LABEL_144;
        v38 = v7;
        v39 = v37;
        v8 = (unsigned int *)objc_msgSend(v37, v38[404]);

        v40 = type metadata accessor for ChapterEntity(0);
        swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
        v3 = (char *)ChapterEntity.init(href:name:indentationLevel:absoluteOrder:)(v24, v29, v5, v6, v36, v8);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v2 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v42 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v2 >= v42 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v2 + 1, 1);
        v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v3);
        specialized Array._endMutation()(v43);
        ++v23;
        v4 = (unint64_t)v32;
        v7 = &selRef_ignoredCurrentBookNotification;
        if (v197 == (char **)i)
        {
          swift_release(v32);
          v24 = (char **)v198;
          v8 = v191;
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_21:
      swift_retain(v4);
    }
    swift_release(v4);
    v24 = (char **)_swiftEmptyArrayStorage;
LABEL_23:
    v15 = swift_release(v4).n128_u64[0];
  }
  else
  {
    v24 = 0;
  }
  v45 = objc_msgSend(v8, "storeFrontId", *(double *)&v15);
  v181 = v45;
  if (v45)
  {
    v46 = v45;
    v178 = UInt64.init(truncating:)();

  }
  else
  {
    v178 = 0;
  }
  v47 = objc_msgSend(v8, "assetID");
  if (!v47)
    goto LABEL_151;
  v48 = v47;
  v183 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v182 = v49;

  v50 = objc_msgSend(v8, "bookBundlePath");
  if (!v50)
  {
    swift_bridgeObjectRelease(v24);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000023, 0x80000001007C91D0, "Books/BookProviderService.swift", 31, 2, 67, 0);
    goto LABEL_153;
  }
  v51 = v50;
  v180 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v179 = v52;

  v53 = objc_msgSend(v8, "storeId");
  if (v53)
  {
    v54 = v53;
    v177 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v176 = v55;

  }
  else
  {
    v177 = 0;
    v176 = 0xE000000000000000;
  }
  v56 = objc_msgSend(v8, "bookTitle");
  if (v56)
  {
    v57 = v56;
    v175 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v174 = v58;

  }
  else
  {
    v175 = 0;
    v174 = 0xE000000000000000;
  }
  v59 = objc_msgSend(v8, "bookAuthor");
  if (v59)
  {
    v60 = v59;
    v173 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v172 = v61;

  }
  else
  {
    v173 = 0;
    v172 = 0xE000000000000000;
  }
  v62 = objc_msgSend(v8, "tocPageHref");
  v184 = v24;
  if (v62)
  {
    v63 = v62;
    v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    v170 = v64;

  }
  else
  {
    v171 = 0;
    v170 = 0xE000000000000000;
  }
  v65 = (char **)objc_msgSend(v8, "linearDocuments");
  if (!v65)
    goto LABEL_145;
  v24 = v65;
  v189 = sub_100009E04(0, &qword_1009E2AD0, BKDocument_ptr);
  v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v189);

  if ((unint64_t)v66 >> 62)
    goto LABEL_59;
  v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v67)
  {
    while (1)
    {
      v201 = (char **)_swiftEmptyArrayStorage;
      sub_100366D74(0, v67 & ~(v67 >> 63), 0);
      if (v67 < 0)
        break;
      v2 = 0;
      v24 = v201;
      v195 = v66;
      i = v66 & 0xC000000000000001;
      v193 = v67;
      v194 = 0x80000001007C9200;
      while (v67 != v2)
      {
        v197 = v24;
        if (i)
          v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v66);
        else
          v68 = *(id *)(v66 + 8 * v2 + 32);
        v69 = v68;
        v70 = objc_msgSend(v69, "href");
        if (!v70)
          goto LABEL_133;
        v71 = v70;
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
        v24 = v72;

        v73 = objc_msgSend(v69, "documentOrdinal");
        if (!v73)
          goto LABEL_134;
        v74 = v73;
        v7 = (char **)objc_msgSend(v73, "integerValue");

        v4 = (unint64_t)objc_msgSend(v69, "linearDocumentIndex");
        v75 = objc_msgSend(v69, "nonlinearElement");
        if (!v75)
          goto LABEL_135;
        v76 = v75;
        v5 = objc_msgSend(v75, "BOOLValue");

        v77 = objc_msgSend(v69, "manifestId");
        if (!v77)
          goto LABEL_136;
        v78 = v77;
        v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
        v81 = v80;

        v8 = (unsigned int *)type metadata accessor for DocumentEntity(0);
        swift_allocObject(v8, v8[12], *((unsigned __int16 *)v8 + 26));
        v82 = DocumentEntity.init(href:ordinal:linearDocumentIndex:nonLinear:manifestId:fileSize:mime:)(v6, v24, v7, v4, v5, v79, v81, 0, 0xD000000000000015, v194);

        v199 = v8;
        v200 = &protocol witness table for DocumentEntity;

        *(_QWORD *)&v198 = v82;
        v24 = v197;
        v201 = v197;
        v84 = (unint64_t)v197[2];
        v83 = (unint64_t)v197[3];
        v3 = (char *)(v84 + 1);
        if (v84 >= v83 >> 1)
        {
          sub_100366D74(v83 > 1, v84 + 1, 1);
          v24 = v201;
        }
        ++v2;
        v24[2] = v3;
        sub_100022840(&v198, (uint64_t)&v24[5 * v84 + 4]);
        v67 = v193;
        v66 = v195;
        if (v193 == v2)
        {
          v197 = v24;
          v85 = swift_bridgeObjectRelease(v195).n128_u64[0];
          v8 = v191;
          goto LABEL_64;
        }
      }
      __break(1u);
LABEL_59:
      if (v66 < 0)
        v24 = (char **)v66;
      else
        v24 = (char **)(v66 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v66);
      v67 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v66);
      if (!v67)
        goto LABEL_63;
    }
    __break(1u);
    goto LABEL_102;
  }
LABEL_63:
  v85 = swift_bridgeObjectRelease(v66).n128_u64[0];
  v197 = (char **)_swiftEmptyArrayStorage;
LABEL_64:
  v86 = (char **)objc_msgSend(v8, "allDocuments", *(double *)&v85);
  if (!v86)
    goto LABEL_146;
  v24 = v86;
  v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v86, v189);

  if ((unint64_t)v66 >> 62)
    goto LABEL_82;
  v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v67)
  {
    while (1)
    {
      v201 = (char **)_swiftEmptyArrayStorage;
      v24 = (char **)&v201;
      sub_100366D74(0, v67 & ~(v67 >> 63), 0);
      if (v67 < 0)
        break;
      v2 = 0;
      v4 = (unint64_t)v201;
      v194 = v66;
      v195 = v66 & 0xC000000000000001;
      v192 = (void *)v67;
      v193 = 0x80000001007C9200;
      while (v67 != v2)
      {
        if (v195)
          v87 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v66);
        else
          v87 = *(id *)(v66 + 8 * v2 + 32);
        v88 = v87;
        v89 = objc_msgSend(v88, "href");
        if (!v89)
          goto LABEL_137;
        v90 = v89;
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
        v24 = v91;

        v92 = objc_msgSend(v88, "documentOrdinal");
        if (!v92)
          goto LABEL_138;
        v93 = v92;
        i = v4;
        v7 = (char **)objc_msgSend(v92, "integerValue");

        v94 = objc_msgSend(v88, "linearDocumentIndex");
        v95 = objc_msgSend(v88, "nonlinearElement");
        if (!v95)
          goto LABEL_139;
        v96 = v95;
        v5 = objc_msgSend(v95, "BOOLValue");

        v97 = objc_msgSend(v88, "manifestId");
        if (!v97)
          goto LABEL_140;
        v98 = v97;
        v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
        v101 = v100;

        v8 = (unsigned int *)type metadata accessor for DocumentEntity(0);
        v102 = swift_allocObject(v8, v8[12], *((unsigned __int16 *)v8 + 26));
        v103 = v24;
        v24 = (char **)v102;
        v104 = DocumentEntity.init(href:ordinal:linearDocumentIndex:nonLinear:manifestId:fileSize:mime:)(v6, v103, v7, v94, v5, v99, v101, 0, 0xD000000000000015, v193);

        v199 = v8;
        v200 = &protocol witness table for DocumentEntity;

        *(_QWORD *)&v198 = v104;
        v4 = i;
        v201 = (char **)i;
        v106 = *(_QWORD *)(i + 16);
        v105 = *(_QWORD *)(i + 24);
        v3 = (char *)(v106 + 1);
        if (v106 >= v105 >> 1)
        {
          v24 = (char **)&v201;
          sub_100366D74(v105 > 1, v106 + 1, 1);
          v4 = (unint64_t)v201;
        }
        ++v2;
        *(_QWORD *)(v4 + 16) = v3;
        sub_100022840(&v198, v4 + 40 * v106 + 32);
        v67 = (uint64_t)v192;
        v66 = v194;
        if (v192 == (void *)v2)
        {
          v107 = swift_bridgeObjectRelease(v194).n128_u64[0];
          v8 = v191;
          goto LABEL_87;
        }
      }
      __break(1u);
LABEL_82:
      if (v66 < 0)
        v24 = (char **)v66;
      else
        v24 = (char **)(v66 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v66);
      v67 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v66);
      if (!v67)
        goto LABEL_86;
    }
LABEL_102:
    __break(1u);
LABEL_103:
    if (v66 < 0)
      v127 = v66;
    else
      v127 = v66 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v66);
    v24 = (char **)_CocoaArrayWrapper.endIndex.getter(v127);
    swift_bridgeObjectRelease(v66);
    if (!v24)
      goto LABEL_107;
    goto LABEL_97;
  }
LABEL_86:
  v107 = swift_bridgeObjectRelease(v66).n128_u64[0];
  v4 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_87:
  v108 = objc_msgSend(v8, "firstDocumentLocation", *(double *)&v107);
  if (!v108)
    goto LABEL_147;
  v109 = v108;
  v3 = (char *)objc_msgSend(v108, "ordinal");

  v24 = &selRef_isFileURL;
  LODWORD(v5) = objc_msgSend(v8, "isFixedLayout");
  v110 = objc_msgSend(v8, "baseURL");
  if (!v110)
  {
LABEL_148:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v187 + 56))(v190, 1, 1, v188);
    goto LABEL_149;
  }
  v111 = v110;
  v112 = v186;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v110);

  v113 = v187;
  v114 = v190;
  v115 = v112;
  v116 = v188;
  (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v190, v115, v188);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v114, 0, 1, v116);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v114, 1, v116) == 1)
  {
LABEL_149:
    swift_bridgeObjectRelease(v184);
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    swift_bridgeObjectRelease(v24);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000023, 0x80000001007C91D0, "Books/BookProviderService.swift", 31, 2, 62, 0);
LABEL_153:
    __break(1u);
    swift_release(v198);
    __break(1u);
    return;
  }
  v117 = objc_msgSend(v8, "spineIndexInPackage");
  if (v117)
  {
    v118 = v117;
    v67 = (uint64_t)objc_msgSend(v117, "unsignedIntegerValue");

  }
  else
  {
    v67 = 0;
  }
  LODWORD(v7) = objc_msgSend(v8, "bkPageProgressionDirection");
  v2 = (unint64_t)objc_msgSend(v8, "scrollModeOrientation");
  LODWORD(v6) = objc_msgSend(v8, "isFixedLayout");
  if (!(_DWORD)v6)
    goto LABEL_108;
  v119 = objc_msgSend(v8, "sortedDocuments");
  if (!v119)
    goto LABEL_150;
  v120 = v119;
  v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v119, v189);

  if ((unint64_t)v66 >> 62)
    goto LABEL_103;
  v24 = *(char ***)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v24)
  {
LABEL_107:
    swift_bridgeObjectRelease(v66);
LABEL_108:
    v192 = 0;
    v189 = 0;
    goto LABEL_109;
  }
LABEL_97:
  if ((v66 & 0xC000000000000001) != 0)
  {
    v121 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v66);
    goto LABEL_100;
  }
  if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    swift_bridgeObjectRelease(v184);
    __break(1u);
LABEL_146:
    swift_bridgeObjectRelease(v184);
    __break(1u);
LABEL_147:
    swift_bridgeObjectRelease(v184);
    __break(1u);
    goto LABEL_148;
  }
  v121 = *(id *)(v66 + 32);
LABEL_100:
  v122 = v121;
  objc_msgSend(v121, "fixedLayoutSize", swift_bridgeObjectRelease(v66).n128_f64[0]);
  v124 = v123;
  v126 = v125;

  v192 = v124;
  v189 = v126;
LABEL_109:
  LODWORD(v188) = objc_msgSend(v8, "obeyPageBreaks");
  LODWORD(v187) = objc_msgSend(v8, "shouldAllowRemoteInspection");
  LODWORD(v186) = objc_msgSend(v8, "respectImageSizeClassIsPrefix");
  v169 = objc_msgSend(v8, "shouldDisableOptimizeSpeed");
  v128 = objc_msgSend(v8, "respectImageSizeClass");
  if (v128)
  {
    v129 = v128;
    v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
    v167 = v130;

  }
  else
  {
    v168 = 0;
    v167 = 0;
  }
  v131 = objc_msgSend(v8, "bookLanguage");
  if (v131)
  {
    v132 = v131;
    v166 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
    v165 = v133;

  }
  else
  {
    v166 = 0;
    v165 = 0xE000000000000000;
  }
  v134 = objc_msgSend(v8, "sampleContent");
  if (v134)
  {
    v135 = v134;
    v164 = objc_msgSend(v134, "BOOLValue");

  }
  else
  {
    v164 = 0;
  }
  v163 = objc_msgSend(v8, "isProtected");
  v162 = objc_msgSend(v8, "suppressTOC");
  v161 = sub_100425450();
  v136 = objc_msgSend(v8, "isPreorder");
  v194 = v67;
  if (v136)
  {
    v137 = v136;
    v160 = objc_msgSend(v136, "BOOLValue");

  }
  else
  {
    v160 = 0;
  }
  v138 = v184;
  v159 = objc_msgSend(v8, "hasBuiltInFonts");
  v139 = objc_msgSend(v8, "versionNumberHumanReadable");
  if (v139)
  {
    v140 = v139;
    v158 = static String._unconditionallyBridgeFromObjectiveC(_:)(v139);
    v157 = v141;

  }
  else
  {
    v158 = 0;
    v157 = 0;
  }
  v195 = (unint64_t)v3;
  v142 = objc_msgSend(v8, "databaseKey");
  i = v4;
  LODWORD(v193) = (_DWORD)v5;
  if (v142)
  {
    v143 = v142;
    v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(v142);
    v146 = v145;

  }
  else
  {
    v144 = 0;
    v146 = 0;
  }
  v147 = v181 == 0;
  if (v138)
    v148 = v138;
  else
    v148 = (char **)_swiftEmptyArrayStorage;
  v149 = type metadata accessor for BookEntity(0);
  swift_allocObject(v149, *(unsigned int *)(v149 + 48), *(unsigned __int16 *)(v149 + 52));
  HIBYTE(v155) = v159;
  LOBYTE(v155) = v160;
  BYTE2(v154) = v162;
  BYTE1(v154) = v163;
  LOBYTE(v154) = v164;
  BYTE4(v153) = v169;
  BYTE3(v153) = (_BYTE)v186;
  BYTE2(v153) = v187;
  BYTE1(v153) = v188;
  LOBYTE(v153) = v6 ^ 1;
  HIBYTE(v152) = v2 != 0;
  LOBYTE(v152) = (_DWORD)v7 != 0;
  v150 = BookEntity.init(assetID:storeID:storeFrontID:title:author:tocHref:linearDocuments:allDocuments:firstDocumentOrdinal:path:collectionType:baseURL:spineIndexInPackage:pageProgressionDirection:scrollModeOrientation:fixedLayoutSize:obeyPageBreaks:shouldAllowRemoteInspection:respectImageSizeClassIsPrefix:shouldDisableOptimizeSpeed:respectImageSizeClass:bookLanguage:sample:protected:suppressTOC:physicalPages:preordered:hasBuiltInFonts:chapters:versionNumberHumanReadable:bookDatabaseKey:)(v183, v182, v177, v176, v178, v147, v175, v174, v173, v172, v171, v170, v197, i, v195, v180, v179, (_BYTE)v193, v190,
           v194,
           v152,
           v192,
           v189,
           v153,
           v168,
           v167,
           v166,
           v165,
           v154,
           v161,
           v155,
           v148,
           v158,
           v157,
           v144,
           v146);
  dispatch thunk of BookEntity.protocolCacheItem.setter(objc_msgSend(v191, "cacheItem"));
  v151 = v185;
  v185[3] = v149;
  v151[4] = (uint64_t)&protocol witness table for BookEntity;
  *v151 = v150;
}

void sub_10042696C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  NSObject v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  _BYTE v30[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009E2B50);
    v3 = (_QWORD *)static _SetStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptySetSingleton;
  }
  v29 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 7);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = (v6 - 1) & v6;
      v11 = __clz(__rbit64(v6)) | (v8 << 6);
      v12 = v8;
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v13 >= v28)
      goto LABEL_39;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v12 = v8 + 1;
    if (!v14)
    {
      v12 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_39;
      v14 = *(_QWORD *)(v29 + 8 * v12);
      if (!v14)
      {
        v12 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_39;
        v14 = *(_QWORD *)(v29 + 8 * v12);
        if (!v14)
        {
          v12 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_39;
          v14 = *(_QWORD *)(v29 + 8 * v12);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_28:
    sub_1000569E0(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v30);
    v16.isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_1000569AC((uint64_t)v30);
    v17 = objc_opt_self(BKNavigationInfo);
    v18 = swift_dynamicCastObjCClass(v16.isa, v17);
    if (!v18)
    {
      swift_release_n(v3, 2);

      sub_100299C3C(a1);
      return;
    }
    v19 = v18;
    v20 = NSObject._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    *(_QWORD *)(v3[6] + 8 * v9) = v19;
    ++v3[2];
    v8 = v12;
    v6 = v10;
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_39:
    swift_release(v3);
    sub_100299C3C(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v15);
  if (v14)
  {
    v12 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v28)
      goto LABEL_39;
    v14 = *(_QWORD *)(v29 + 8 * v12);
    ++v15;
    if (v14)
      goto LABEL_27;
  }
LABEL_41:
  __break(1u);
}

id BKDocument.documentEntity.getter()
{
  void *v0;
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  result = objc_msgSend(v0, "href");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v6 = v5;

  result = objc_msgSend(v1, "documentOrdinal");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = result;
  v8 = objc_msgSend(result, "integerValue");

  v9 = objc_msgSend(v1, "linearDocumentIndex");
  result = objc_msgSend(v1, "nonlinearElement");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = result;
  v11 = objc_msgSend(result, "BOOLValue");

  result = objc_msgSend(v1, "manifestId");
  if (result)
  {
    v12 = result;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v15 = v14;

    v16 = type metadata accessor for DocumentEntity(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    return (id)DocumentEntity.init(href:ordinal:linearDocumentIndex:nonLinear:manifestId:fileSize:mime:)(v4, v6, v8, v9, v11, v13, v15, 0, 0xD000000000000015, 0x80000001007C9200);
  }
LABEL_9:
  __break(1u);
  return result;
}

void *BookProviderService.bookInfo.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookProviderService_bookInfo);
  v2 = v1;
  return v1;
}

void *BookProviderService.bookInfoMOC.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookProviderService_bookInfoMOC);
  v2 = v1;
  return v1;
}

uint64_t sub_100426E84(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _BYTE v5[24];
  __int128 v6[2];

  sub_10002E418(a1, (uint64_t)v6);
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___REBookProviderService_bookEntity);
  swift_beginAccess(v3, v5, 33, 0);
  _s5Books15CurrentPageViewVwxx_0(v3);
  sub_100022840(v6, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t BookProviderService.bookEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002E418(v3, a1);
}

id BookProviderService.__allocating_init(bookEntity:bookInfo:storeController:epubParser:)(_QWORD *a1, void *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v9 = a3[3];
  v10 = a3[4];
  v11 = sub_100063750((uint64_t)a3, v9);
  v12 = sub_100428FB0(a1, a2, v11, a4, v4, v9, v10);

  _s5Books15CurrentPageViewVwxx_0(a3);
  return v12;
}

id BookProviderService.init(bookEntity:bookInfo:storeController:epubParser:)(_QWORD *a1, void *a2, _QWORD *a3, _QWORD *a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v9 = a3[3];
  v10 = a3[4];
  v11 = sub_100063750((uint64_t)a3, v9);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v14, v12);
  v16 = sub_100428E34(a1, a2, (uint64_t)v14, a4, v4, v9, v10);

  _s5Books15CurrentPageViewVwxx_0(a3);
  return v16;
}

uint64_t BookProviderService.areCitationsAllowed.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = v0 + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v0 + OBJC_IVAR___REBookProviderService_bookEntity, &v19, 0, 0);
  sub_10002E418(v2, (uint64_t)v20);
  v3 = v21;
  v4 = v22;
  sub_10003F198(v20, v21);
  v5 = dispatch thunk of BookEntityType.sample.getter(v3, v4);
  _s5Books15CurrentPageViewVwxx_0(v20);
  if ((v5 & 1) != 0)
    goto LABEL_7;
  sub_10002E418(v2, (uint64_t)v20);
  v6 = v21;
  v7 = v22;
  sub_10003F198(v20, v21);
  v8 = dispatch thunk of BookEntityType.protected.getter(v6, v7);
  _s5Books15CurrentPageViewVwxx_0(v20);
  if ((v8 & 1) == 0)
  {
    v17 = 1;
    return v17 & 1;
  }
  sub_10002E418(v2, (uint64_t)v20);
  v9 = v21;
  v10 = v22;
  sub_10003F198(v20, v21);
  v11 = dispatch thunk of BookEntityType.storeFrontID.getter(v9, v10);
  if ((v12 & 1) != 0)
  {
    _s5Books15CurrentPageViewVwxx_0(v20);
LABEL_7:
    v17 = 0;
    return v17 & 1;
  }
  v13 = v11;
  _s5Books15CurrentPageViewVwxx_0(v20);
  v14 = (_QWORD *)(v1 + OBJC_IVAR___REBookProviderService_storeController);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR___REBookProviderService_storeController + 24);
  v16 = v14[4];
  sub_10003F198(v14, v15);
  v17 = dispatch thunk of StoreControlling.citationAllowed(forStoreFrontID:)(v13, v15, v16);
  return v17 & 1;
}

Swift::Void __swiftcall BookProviderService.setPreordered(_:)(Swift::Bool a1)
{
  uint64_t v1;
  _BOOL8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a1;
  v3 = v1 + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v3, v6, 33, 0);
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  sub_100063750(v3, v4);
  dispatch thunk of BookEntityType.preordered.setter(v2, v4, v5);
  swift_endAccess(v6);
}

Swift::OpaquePointer_optional __swiftcall BookProviderService.cachedTocCfiIdMap()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Bool v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  Swift::OpaquePointer_optional result;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR___REBookProviderService_bookInfo);
  if (v2)
  {
    v3 = objc_msgSend(v2, "databaseKey");
    if (v3)
    {
      v4 = v3;
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v7 = v6;

LABEL_5:
      v13 = (_QWORD *)(v1 + OBJC_IVAR___REBookProviderService_epubParser);
      v14 = *(_QWORD *)(v1 + OBJC_IVAR___REBookProviderService_epubParser + 24);
      v15 = v13[4];
      sub_10003F198(v13, v14);
      v16 = dispatch thunk of EpubParsing.cachedTocCfiIdMap(bookDatabaseKey:)(v5, v7, v14, v15);
      swift_bridgeObjectRelease(v7);
      goto LABEL_9;
    }
  }
  v8 = v0 + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v1 + OBJC_IVAR___REBookProviderService_bookEntity, &v22, 0, 0);
  sub_10002E418(v8, (uint64_t)v23);
  v9 = v24;
  v10 = v25;
  sub_10003F198(v23, v24);
  v5 = dispatch thunk of BookEntityType.bookDatabaseKey.getter(v9, v10);
  v7 = v11;
  v12 = _s5Books15CurrentPageViewVwxx_0(v23);
  if (v7)
    goto LABEL_5;
  v18 = Logger.logObject.getter(v12);
  v19 = static os_log_type_t.error.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not retrive TOC CFI Id map from parser, missing database key from book", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v16 = 0;
LABEL_9:
  v21 = (void *)v16;
  result.value._rawValue = v21;
  result.is_nil = v17;
  return result;
}

void BookProviderService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BookProviderService", 25, "init()", 6, 0);
  __break(1u);
}

id BookProviderService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookProviderService(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_10042750C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004CFD4(&qword_1009E2B48);
  v4 = *(_QWORD *)(type metadata accessor for ContentMessage.CFIUpdate(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size_0(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = sub_100381DEC(&v13, (uint64_t)v8 + v7, v1, a1);
      v12 = v13;
      swift_bridgeObjectRetain(a1);
      sub_100299C3C(v12);
      if (v11 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100427624(uint64_t a1)
{
  return sub_10042795C(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1003820B4);
}

_QWORD *sub_100427630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1003820B8((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100299C3C(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_100427714(uint64_t a1)
{
  return sub_100427858(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_1003822B4);
}

_QWORD *sub_100427720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004CFD4(&qword_1009DD748);
  v4 = *(_QWORD *)(sub_10004CFD4(&qword_1009DD750) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size_0(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009DD750) - 8) + 80);
      sub_1003822D0(&v15, (uint64_t)v8 + ((v11 + 32) & ~v11), v1, a1);
      v13 = v12;
      v14 = v15;
      swift_bridgeObjectRetain(a1);
      sub_100299C3C(v14);
      if (v13 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100427858(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;

  v3 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
      goto LABEL_5;
    return _swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaSet.count.getter(a1);
  if (!v4)
    return _swiftEmptyArrayStorage;
LABEL_5:
  if (v4 <= 0)
  {
    v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    v5 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
    v7 = j__malloc_size_0(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = v4;
    v6[3] = (2 * (v8 >> 3)) | 1;
  }
  v9 = swift_bridgeObjectRetain(v3);
  v10 = a2(&v12, v6 + 4, v4, v3, v9);
  result = (_QWORD *)sub_100299C3C(v12);
  if (v10 == v4)
    return v6;
  __break(1u);
  return result;
}

_QWORD *sub_10042795C(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v6 = (_QWORD *)swift_allocObject(v5, 16 * v2 + 32, 7);
  v7 = j__malloc_size_0(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v2;
  v6[3] = 2 * (v8 >> 4);
  v9 = a2(&v12, v6 + 4, v2, a1);
  v10 = v12;
  swift_bridgeObjectRetain(a1);
  sub_100299C3C(v10);
  if (v9 != v2)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

_QWORD *sub_100427A44(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1)
    return _swiftEmptyArrayStorage;
  v5 = (uint64_t)result;
  if (v3 <= 0)
  {
    v7 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = sub_10004CFD4(&qword_1009D2F30);
    v7 = (_QWORD *)swift_allocObject(v6, 8 * v3 + 32, 7);
    v8 = j__malloc_size_0(v7);
    v9 = v8 - 32;
    if (v8 < 32)
      v9 = v8 - 25;
    v7[2] = v3;
    v7[3] = 2 * (v9 >> 3);
  }
  result = (_QWORD *)sub_100428DA8((uint64_t)&v10, (uint64_t)(v7 + 4), v3, v5, a2);
  if (result == (_QWORD *)v3)
    return v7;
LABEL_14:
  __break(1u);
  return result;
}

_QWORD *sub_100427B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004CFD4(&qword_1009DD578);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 3);
  v7 = sub_100382ADC(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100299C3C(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_100427BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  v7 = sub_100382C70(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100299C3C(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_100427CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10004CFD4(&qword_1009E2B40);
  v4 = *(_QWORD *)(type metadata accessor for NoteHighlight(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size_0(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      sub_100382E6C(&v14, (uint64_t)v8 + v7, v1, a1);
      v12 = v11;
      v13 = v14;
      swift_bridgeObjectRetain(a1);
      sub_100299C3C(v13);
      if (v12 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100427DF8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size_0(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_100381DC8((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_100427EEC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_10069BB14(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100427F64(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100427F64(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  char **v12;
  Swift::Int v13;
  unint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  _BOOL4 v27;
  Swift::Int v28;
  void *v29;
  id v30;
  id v31;
  Swift::Int v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t *v39;
  Swift::Int v40;
  Swift::Int v41;
  uint64_t *v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Swift::Int v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  Swift::Int v120;
  Swift::Int v121;
  Swift::Int v122;
  Swift::Int v123;
  uint64_t v124;
  void **v125;
  uint64_t v126;
  uint64_t v127;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_148;
    if (v3)
      sub_10042882C(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_156;
  v120 = v4;
  v123 = v3;
  v118 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v127 = (uint64_t)_swiftEmptyArrayStorage;
    v125 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
LABEL_114:
      if (v14 >= 2)
      {
        v110 = *v118;
        do
        {
          v111 = v14 - 2;
          if (v14 < 2)
            goto LABEL_143;
          if (!v110)
            goto LABEL_155;
          v112 = *(_QWORD *)&v9[16 * v111 + 32];
          v113 = *(_QWORD *)&v9[16 * v14 + 24];
          sub_100428998((void **)(v110 + 8 * v112), (id *)(v110 + 8 * *(_QWORD *)&v9[16 * v14 + 16]), v110 + 8 * v113, v125);
          if (v1)
            break;
          if (v113 < v112)
            goto LABEL_144;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_1006995F8((uint64_t)v9);
          if (v111 >= *((_QWORD *)v9 + 2))
            goto LABEL_145;
          v114 = &v9[16 * v111 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v9 + 2);
          if (v14 > v115)
            goto LABEL_146;
          memmove(&v9[16 * v14 + 16], &v9[16 * v14 + 32], 16 * (v115 - v14));
          *((_QWORD *)v9 + 2) = v115 - 1;
          v14 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease(v9);
      *(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v116);
      swift_bridgeObjectRelease(v127);
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_100009E04(0, &qword_1009DDF08, BKNavigationInfo_ptr);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v125 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v127 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v119 = *a1 - 8;
  v9 = (char *)_swiftEmptyArrayStorage;
  v12 = &selRef_dateFromString_;
  v13 = v123;
  v126 = *a1;
LABEL_15:
  v15 = v10++;
  v122 = v15;
  if (v10 < v13)
  {
    v16 = v15;
    v17 = v9;
    v18 = *(void **)(v11 + 8 * v16);
    v19 = *(id *)(v11 + 8 * v10);
    v20 = v18;
    v21 = objc_msgSend(v19, v12[442]);
    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(v20, v12[442]);
      if (v23)
      {
        v24 = v23;
        v25 = objc_msgSend(v22, "integerValue");
        v26 = objc_msgSend(v24, "integerValue");

        v27 = (uint64_t)v25 < (uint64_t)v26;
        v28 = v122 + 2;
        v12 = &selRef_dateFromString_;
        if (v122 + 2 < v123)
          goto LABEL_26;
LABEL_34:
        v9 = v17;
        v15 = v122;
        if (!v27)
          goto LABEL_43;
        if (v28 < v122)
          goto LABEL_149;
LABEL_36:
        if (v15 < v28)
        {
          v39 = (uint64_t *)(v119 + 8 * v28);
          v40 = v28;
          v41 = v15;
          v42 = (uint64_t *)(v126 + 8 * v15);
          do
          {
            if (v41 != --v40)
            {
              if (!v126)
                goto LABEL_154;
              v43 = *v42;
              *v42 = *v39;
              *v39 = v43;
            }
            ++v41;
            --v39;
            ++v42;
          }
          while (v41 < v40);
        }
LABEL_43:
        v10 = v28;
        v11 = v126;
        goto LABEL_44;
      }

      v19 = v20;
      v12 = &selRef_dateFromString_;
    }
    else
    {
      v22 = v20;
    }

    v28 = v122 + 2;
    if (v122 + 2 >= v123)
    {
      v9 = v17;
      v15 = v122;
      goto LABEL_36;
    }
    v27 = 1;
LABEL_26:
    while (1)
    {
      v33 = *(void **)(v126 + 8 * v10);
      v34 = *(id *)(v126 + 8 * v28);
      v35 = v33;
      v36 = objc_msgSend(v34, v12[442]);
      if (!v36)
        break;
      v37 = v36;
      v38 = objc_msgSend(v35, v12[442]);
      if (!v38)
      {

        v34 = v35;
        v12 = &selRef_dateFromString_;
        goto LABEL_30;
      }
      v29 = v38;
      v30 = objc_msgSend(v37, "integerValue");
      v31 = objc_msgSend(v29, "integerValue");

      v12 = &selRef_dateFromString_;
      if (((v27 ^ ((uint64_t)v30 >= (uint64_t)v31)) & 1) == 0)
        goto LABEL_34;
LABEL_25:
      v32 = v28 + 1;
      v10 = v28;
      v28 = v32;
      if (v32 >= v123)
      {
        v28 = v32;
        goto LABEL_34;
      }
    }
    v37 = v35;
LABEL_30:

    if (!v27)
    {
      v10 = v28;
      v9 = v17;
      v11 = v126;
      v15 = v122;
      goto LABEL_44;
    }
    goto LABEL_25;
  }
LABEL_44:
  if (v10 >= v123)
    goto LABEL_66;
  if (__OFSUB__(v10, v15))
    goto LABEL_147;
  if (v10 - v15 >= v120)
    goto LABEL_66;
  if (__OFADD__(v15, v120))
    goto LABEL_150;
  v44 = v123;
  if (v15 + v120 < v123)
    v44 = v15 + v120;
  if (v44 >= v15)
  {
    if (v10 == v44)
      goto LABEL_66;
    v117 = v9;
    v45 = v119 + 8 * v10;
    v121 = v44;
LABEL_54:
    v46 = v45;
    v47 = *(void **)(v11 + 8 * v10);
    v48 = v15;
    v124 = v46;
    v49 = v46;
    while (1)
    {
      v50 = *(void **)v49;
      v51 = v47;
      v52 = v50;
      v53 = objc_msgSend(v51, v12[442]);
      if (v53)
      {
        v54 = v53;
        v55 = objc_msgSend(v52, v12[442]);
        if (v55)
        {
          v56 = v55;
          v57 = objc_msgSend(v54, "integerValue");
          v58 = objc_msgSend(v56, "integerValue");

          v92 = (uint64_t)v57 < (uint64_t)v58;
          v11 = v126;
          v12 = &selRef_dateFromString_;
          if (!v92)
            goto LABEL_53;
          goto LABEL_62;
        }

        v51 = v52;
        v12 = &selRef_dateFromString_;
      }
      else
      {
        v54 = v52;
      }

LABEL_62:
      if (!v11)
        goto LABEL_152;
      v59 = *(void **)v49;
      v47 = *(void **)(v49 + 8);
      *(_QWORD *)v49 = v47;
      *(_QWORD *)(v49 + 8) = v59;
      v49 -= 8;
      if (v10 == ++v48)
      {
LABEL_53:
        ++v10;
        v45 = v124 + 8;
        v15 = v122;
        if (v10 != v121)
          goto LABEL_54;
        v10 = v121;
        v9 = v117;
LABEL_66:
        if (v10 < v15)
          goto LABEL_142;
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          v9 = sub_1006990C0(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v61 = *((_QWORD *)v9 + 2);
        v60 = *((_QWORD *)v9 + 3);
        v14 = v61 + 1;
        if (v61 >= v60 >> 1)
          v9 = sub_1006990C0((char *)(v60 > 1), v61 + 1, 1, v9);
        *((_QWORD *)v9 + 2) = v14;
        v62 = v9 + 32;
        v63 = &v9[16 * v61 + 32];
        *(_QWORD *)v63 = v15;
        *((_QWORD *)v63 + 1) = v10;
        if (v61)
        {
LABEL_72:
          v64 = v14 - 1;
          if (v14 >= 4)
          {
            v69 = &v62[16 * v14];
            v70 = *((_QWORD *)v69 - 8);
            v71 = *((_QWORD *)v69 - 7);
            v75 = __OFSUB__(v71, v70);
            v72 = v71 - v70;
            if (v75)
              goto LABEL_131;
            v74 = *((_QWORD *)v69 - 6);
            v73 = *((_QWORD *)v69 - 5);
            v75 = __OFSUB__(v73, v74);
            v67 = v73 - v74;
            v68 = v75;
            if (v75)
              goto LABEL_132;
            v76 = v14 - 2;
            v77 = &v62[16 * v14 - 32];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v75 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v75)
              goto LABEL_134;
            v75 = __OFADD__(v67, v80);
            v81 = v67 + v80;
            if (v75)
              goto LABEL_137;
            if (v81 >= v72)
            {
              v99 = &v62[16 * v64];
              v101 = *(_QWORD *)v99;
              v100 = *((_QWORD *)v99 + 1);
              v75 = __OFSUB__(v100, v101);
              v102 = v100 - v101;
              if (v75)
                goto LABEL_141;
              v92 = v67 < v102;
            }
            else
            {
LABEL_85:
              if ((v68 & 1) != 0)
                goto LABEL_133;
              v76 = v14 - 2;
              v82 = &v62[16 * v14 - 32];
              v84 = *(_QWORD *)v82;
              v83 = *((_QWORD *)v82 + 1);
              v85 = __OFSUB__(v83, v84);
              v86 = v83 - v84;
              v87 = v85;
              if (v85)
                goto LABEL_136;
              v88 = &v62[16 * v64];
              v90 = *(_QWORD *)v88;
              v89 = *((_QWORD *)v88 + 1);
              v75 = __OFSUB__(v89, v90);
              v91 = v89 - v90;
              if (v75)
                goto LABEL_139;
              if (__OFADD__(v86, v91))
                goto LABEL_140;
              if (v86 + v91 < v67)
                goto LABEL_97;
              v92 = v67 < v91;
            }
            if (v92)
              v64 = v76;
          }
          else
          {
            if (v14 == 3)
            {
              v66 = *((_QWORD *)v9 + 4);
              v65 = *((_QWORD *)v9 + 5);
              v75 = __OFSUB__(v65, v66);
              v67 = v65 - v66;
              v68 = v75;
              goto LABEL_85;
            }
            v93 = *((_QWORD *)v9 + 4);
            v94 = *((_QWORD *)v9 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
LABEL_97:
            if ((v87 & 1) != 0)
              goto LABEL_135;
            v95 = &v62[16 * v64];
            v97 = *(_QWORD *)v95;
            v96 = *((_QWORD *)v95 + 1);
            v75 = __OFSUB__(v96, v97);
            v98 = v96 - v97;
            if (v75)
              goto LABEL_138;
            if (v98 < v86)
              goto LABEL_14;
          }
          v103 = v64 - 1;
          if (v64 - 1 >= v14)
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
            break;
          }
          if (!v11)
            goto LABEL_153;
          v104 = v11;
          v105 = &v62[16 * v103];
          v106 = *(_QWORD *)v105;
          v107 = &v62[16 * v64];
          v108 = *((_QWORD *)v107 + 1);
          sub_100428998((void **)(v104 + 8 * *(_QWORD *)v105), (id *)(v104 + 8 * *(_QWORD *)v107), v104 + 8 * v108, v125);
          if (v1)
            goto LABEL_125;
          if (v108 < v106)
            goto LABEL_128;
          if (v64 > *((_QWORD *)v9 + 2))
            goto LABEL_129;
          *(_QWORD *)v105 = v106;
          *(_QWORD *)&v62[16 * v103 + 8] = v108;
          v109 = *((_QWORD *)v9 + 2);
          if (v64 >= v109)
            goto LABEL_130;
          v14 = v109 - 1;
          memmove(&v62[16 * v64], v107 + 16, 16 * (v109 - 1 - v64));
          *((_QWORD *)v9 + 2) = v109 - 1;
          v11 = v126;
          if (v109 <= 2)
            goto LABEL_14;
          goto LABEL_72;
        }
        v14 = 1;
LABEL_14:
        v13 = v123;
        v12 = &selRef_dateFromString_;
        if (v10 >= v123)
          goto LABEL_114;
        goto LABEL_15;
      }
    }
  }
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_10042882C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char **v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  BOOL v20;
  void *v21;
  uint64_t v24;
  uint64_t v25;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
    v7 = &selRef_dateFromString_;
LABEL_5:
    v8 = *(void **)(v5 + 8 * v4);
    v9 = a1;
    v24 = v6;
    v25 = v4;
    while (1)
    {
      v10 = *(void **)v6;
      v11 = v8;
      v12 = v10;
      v13 = objc_msgSend(v11, v7[442]);
      if (!v13)
        break;
      v14 = v13;
      v15 = objc_msgSend(v12, v7[442]);
      if (!v15)
      {

        v11 = v12;
        v7 = &selRef_dateFromString_;
        goto LABEL_12;
      }
      v16 = v15;
      v17 = v5;
      v18 = objc_msgSend(v14, "integerValue");
      v19 = objc_msgSend(v16, "integerValue");

      v20 = (uint64_t)v18 < (uint64_t)v19;
      v5 = v17;
      v4 = v25;
      v7 = &selRef_dateFromString_;
      if (!v20)
        goto LABEL_4;
LABEL_13:
      if (!v5)
      {
        __break(1u);
        return;
      }
      v21 = *(void **)v6;
      v8 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v8;
      *(_QWORD *)(v6 + 8) = v21;
      v6 -= 8;
      if (v4 == ++v9)
      {
LABEL_4:
        ++v4;
        v6 = v24 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
    }
    v14 = v12;
LABEL_12:

    goto LABEL_13;
  }
}

uint64_t sub_100428998(void **__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  BOOL v23;
  id *v24;
  id *v25;
  void **v26;
  id *v27;
  id *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t result;
  id *v40;
  id v41;
  id *v43;
  void **v44;
  id *v45;
  void **__dst;
  void **v47;
  void **v48;
  id *v49;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v49 = __src;
  __dst = a4;
  v48 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7)
      goto LABEL_54;
    if (a4 != a2 || &a2[v11] <= a4)
      memmove(a4, a2, 8 * v11);
    v26 = &__dst[v11];
    v47 = v26;
    v49 = v4;
    if (v5 >= v4 || v9 < 8)
    {
LABEL_53:
      sub_100699370(&v49, &v48, &v47);
      return 1;
    }
    v27 = (id *)(a3 - 8);
    v28 = v4;
    v40 = v5;
    while (1)
    {
      v43 = v27 + 1;
      v45 = v26;
      v30 = *--v26;
      v29 = v30;
      v31 = *--v28;
      v32 = v29;
      v33 = v31;
      v34 = objc_msgSend(v32, "absoluteOrder");
      if (!v34)
        break;
      v35 = v34;
      v36 = objc_msgSend(v33, "absoluteOrder");
      if (!v36)
      {

        v32 = v33;
        v5 = v40;
        goto LABEL_49;
      }
      v37 = v36;
      v41 = objc_msgSend(v35, "integerValue");
      v38 = objc_msgSend(v37, "integerValue");

      v5 = v40;
      if ((uint64_t)v41 >= (uint64_t)v38)
      {
        v47 = v26;
        if (v43 < v45 || v27 >= v45 || v43 != v45)
          *v27 = *v26;
        v28 = v4;
        if (v4 <= v40)
          goto LABEL_53;
        goto LABEL_37;
      }
LABEL_50:
      v26 = v45;
      if (v43 != v4 || v27 >= v4)
        *v27 = *v28;
      v49 = v28;
      if (v28 <= v5)
        goto LABEL_53;
LABEL_37:
      --v27;
      v4 = v28;
      if (v26 <= __dst)
        goto LABEL_53;
    }
    v35 = v33;
LABEL_49:

    goto LABEL_50;
  }
  if (v6 >= -7)
  {
    v12 = a3;
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v44 = &__dst[v8];
    v47 = v44;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      while (1)
      {
        v13 = v5;
        v14 = *__dst;
        v15 = *v4;
        v16 = v14;
        v17 = objc_msgSend(v15, "absoluteOrder");
        if (!v17)
          break;
        v18 = v17;
        v19 = objc_msgSend(v16, "absoluteOrder");
        if (!v19)
        {

          v15 = v16;
          goto LABEL_20;
        }
        v20 = v19;
        v21 = objc_msgSend(v18, "integerValue");
        v22 = objc_msgSend(v20, "integerValue");

        v23 = (uint64_t)v21 < (uint64_t)v22;
        v12 = a3;
        v24 = v13;
        if (v23)
          goto LABEL_21;
        if (v13 != __dst)
          *v13 = *__dst;
        v48 = ++__dst;
        v25 = v4;
LABEL_25:
        v5 = v24 + 1;
        if (__dst < v44)
        {
          v4 = v25;
          if ((unint64_t)v25 < v12)
            continue;
        }
        v49 = v5;
        goto LABEL_53;
      }
      v18 = v16;
LABEL_20:

      v24 = v13;
LABEL_21:
      v25 = v4 + 1;
      if (v24 < v4 || v24 >= v25 || v24 != v4)
        *v24 = *v4;
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_54:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100428DA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;

  if (!a2)
  {
    v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    v7 = 0;
LABEL_14:
    v8 = a4;
LABEL_15:
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_QWORD *)(result + 16) = v8;
    *(_BYTE *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0)
    goto LABEL_17;
  v5 = 0;
  v6 = a4;
  while (1)
  {
    v7 = v6 == a5;
    if (v6 != a5)
      break;
    v8 = 0;
LABEL_8:
    *(_QWORD *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5)
      goto LABEL_15;
    ++v5;
    v9 = v6 == a5;
    v6 = v8;
    if (v9)
    {
      v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  v8 = v6 + 1;
  if (!__OFADD__(v6, 1))
    goto LABEL_8;
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

id sub_100428E34(_QWORD *a1, void *a2, uint64_t a3, _QWORD *a4, void *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  objc_class *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  objc_super v22;
  objc_class *v23;
  _QWORD v24[5];

  v24[3] = a6;
  v24[4] = a7;
  v13 = sub_1000257F8(v24);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v13, a3, a6);
  v14 = (objc_class *)type metadata accessor for BookProviderService(0);
  v23 = v14;
  v15 = a5;
  v16 = sub_10004CFD4(&qword_1009CEDD8);
  v17 = String.init<A>(describing:)(&v23, v16);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v17, v18);
  sub_10002E418((uint64_t)a1, (uint64_t)&v15[OBJC_IVAR___REBookProviderService_bookEntity]);
  *(_QWORD *)&v15[OBJC_IVAR___REBookProviderService_bookInfo] = a2;
  sub_10002E418((uint64_t)v24, (uint64_t)&v15[OBJC_IVAR___REBookProviderService_storeController]);
  sub_10002E418((uint64_t)a4, (uint64_t)&v15[OBJC_IVAR___REBookProviderService_epubParser]);
  if (a2)
    v19 = objc_msgSend(a2, "managedObjectContext");
  else
    v19 = 0;
  *(_QWORD *)&v15[OBJC_IVAR___REBookProviderService_bookInfoMOC] = v19;

  v22.receiver = v15;
  v22.super_class = v14;
  v20 = objc_msgSendSuper2(&v22, "init");
  _s5Books15CurrentPageViewVwxx_0(a4);
  _s5Books15CurrentPageViewVwxx_0(v24);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return v20;
}

id sub_100428FB0(_QWORD *a1, void *a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v18;

  v13 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(a1);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_allocWithZone((Class)type metadata accessor for BookProviderService(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, a6);
  return sub_100428E34(a1, a2, (uint64_t)v15, a4, v16, a6, a7);
}

uint64_t type metadata accessor for BookProviderService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E2B30;
  if (!qword_1009E2B30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookProviderService);
  return result;
}

uint64_t sub_1004290B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002E418(v3, a2);
}

uint64_t sub_100429108()
{
  return type metadata accessor for BookProviderService(0);
}

uint64_t sub_100429110(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_100723C70;
  v4[3] = &unk_100723C70;
  v4[4] = &unk_100723C70;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100429198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004291A4);
}

uint64_t sub_1004291A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100429220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042922C);
}

uint64_t sub_10042922C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1004292A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = v1[3];
  v4 = v1[4];
  sub_10003F198(v1, v3);
  v5 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v3, v4);
  v6 = v5;
  if (!*(_QWORD *)(v5 + 16))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    swift_bridgeObjectRelease(v5);
    goto LABEL_7;
  }
  sub_10002E418(v5 + 32, (uint64_t)&v10);
  swift_bridgeObjectRelease(v6);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_7:
    sub_100010960((uint64_t)&v10, qword_1009D4378);
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
    goto LABEL_9;
  }
  v7 = sub_10004CFD4(&qword_1009DD4B0);
  v8 = sub_10004CFD4(&qword_1009E2C18);
  if ((swift_dynamicCast(&v13, &v10, v7, v8, 6) & 1) != 0)
  {
    if (*((_QWORD *)&v14 + 1))
      return sub_100022840(&v13, a1);
  }
  else
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
  }
LABEL_9:
  sub_100010960((uint64_t)&v13, &qword_1009E2C10);
  *(_QWORD *)&v13 = 0;
  *((_QWORD *)&v13 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(*((_QWORD *)&v13 + 1));
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x80000001007C9320, "Books/ViewSupplementalContentActionItem.swift", 45, 2, 25, 0);
  __break(1u);
  return result;
}

uint64_t sub_100429418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6[2];
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_10002E418(v1 + 40, (uint64_t)&v8);
  v3 = sub_10004CFD4(&qword_1009D2848);
  v4 = sub_10004CFD4(&qword_1009D2850);
  if (swift_dynamicCast(v6, &v8, v3, v4, 6))
    return sub_100022840(v6, a1);
  v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_100010960((uint64_t)v6, qword_1009D2858);
  v8 = 0;
  v9 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(v9);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000043, 0x80000001007C92D0, "Books/ViewSupplementalContentActionItem.swift", 45, 2, 32, 0);
  __break(1u);
  return result;
}

uint64_t sub_100429510()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[3];
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  v2 = type metadata accessor for ViewSupplementalContentActionItem(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextActionSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - v10;
  v12 = v0[3];
  v13 = v1[4];
  sub_10003F198(v1, v12);
  ContextActionDataProtocol.selectionMode.getter(&v40, v12, v13);
  if ((v42 & 1) != 0)
  {
    sub_1001EB7C0((uint64_t)&v40);
    return 0;
  }
  sub_100022840(&v40, (uint64_t)v46);
  sub_1004292A0((uint64_t)v44);
  sub_10003F198(v44, v45);
  sub_100298F54((uint64_t)&v40);
  v14 = v40;
  v15 = BYTE8(v40);
  v16 = v41;
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v16);
  _s5Books15CurrentPageViewVwxx_0(v44);
  if ((v15 & 1) != 0)
    goto LABEL_11;
  if (v14 < 1)
    goto LABEL_11;
  v17 = v1[3];
  v18 = v1[4];
  sub_10003F198(v1, v17);
  dispatch thunk of ContextActionDataProtocol.source.getter(v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ContextActionSource.productPage(_:), v5);
  v19 = sub_10042A194();
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v8, v5, v19);
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  v21(v11, v5);
  if ((v20 & 1) != 0)
    goto LABEL_11;
  v22 = v47;
  v23 = v48;
  sub_10003F198(v46, v47);
  if ((dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(v22, v23) & 1) == 0)
    goto LABEL_11;
  v24 = v47;
  v25 = v48;
  sub_10003F198(v46, v47);
  dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v24, v25);
  v27 = v26;
  swift_bridgeObjectRelease(v26);
  if (!v27
    || (v28 = v47,
        v29 = v48,
        sub_10003F198(v46, v47),
        v30 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v28, v29),
        (static ContextActionAssetType.== infix(_:_:)(v30, 3) & 1) == 0))
  {
LABEL_11:
    _s5Books15CurrentPageViewVwxx_0(v46);
    return 0;
  }
  v31 = v1[3];
  v32 = v1[4];
  sub_10003F198(v1, v31);
  v33 = dispatch thunk of ContextActionDataProtocol.isOnline.getter(v31, v32);
  sub_10042A1DC((uint64_t)v1, (uint64_t)v4);
  if ((v33 & 1) != 0)
  {
    sub_10042A220((uint64_t)v4);
    v34 = 1;
  }
  else
  {
    sub_1004292A0((uint64_t)v44);
    sub_10003F198(v44, v45);
    sub_100298F54((uint64_t)&v40);
    v36 = v41;
    v37 = v42;
    v38 = v43;
    sub_10042A220((uint64_t)v4);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v36);
    v34 = v38 & 1;
    _s5Books15CurrentPageViewVwxx_0(v44);
  }
  _s5Books15CurrentPageViewVwxx_0(v46);
  return v34;
}

uint64_t sub_100429830()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[28] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[29] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[30] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v4);
  v1[32] = swift_task_alloc(v4);
  v5 = type metadata accessor for ViewSource(0);
  v1[33] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[34] = v6;
  v1[35] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v1[36] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004298FC, v8, v9);
}

uint64_t sub_1004298FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 288));
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  ContextActionDataProtocol.selectionMode.getter((_QWORD *)(v0 + 16), v2, v3);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    v4 = sub_1001EB7C0(v0 + 16);
LABEL_5:
    v10 = static Logger.contextActionItem.getter(v4);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Trying to view a pdf when no supplemental pdf count in unavailable", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
    v15 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 232);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    goto LABEL_20;
  }
  sub_100022840((__int128 *)(v0 + 16), v0 + 64);
  sub_1004292A0(v0 + 104);
  sub_10003F198((_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
  sub_100298F54((uint64_t)&v54);
  v5 = v54;
  v6 = v55;
  v7 = v57;
  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v7);
  v8 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 104));
  if (v6 == 1)
  {
    v4 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
    goto LABEL_5;
  }
  if (v5 == 1)
  {
    v17 = *(_QWORD *)(v0 + 272);
    v18 = *(_QWORD *)(v0 + 280);
    v19 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 224);
    v21 = type metadata accessor for EventReporter(0, v9);
    v22 = (void *)static EventReporter.shared.getter(v21);
    v23 = *(_QWORD *)(v20 + 80);
    v25 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 96);
    sub_10003F198((_QWORD *)(v0 + 64), v25);
    v26 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v25, v24);
    v28 = v27;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v18, enum case for ViewSource.actionMenu(_:), v19);
    LOBYTE(v54) = 0;
    EventReporter.emitViewSupplementalContent(using:for:from:with:)(v23, v26, v28, v18, 1);
    swift_bridgeObjectRelease(v28);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    sub_1004292A0(v0 + 144);
    sub_10003F198((_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
    sub_100298F54((uint64_t)&v54);
    v30 = v56;
    v29 = v57;
    swift_bridgeObjectRelease(v59);
    if (v29)
    {
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 144));
      sub_1004292A0(v0 + 184);
      sub_10003F198((_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 208));
      sub_100298F54((uint64_t)&v54);
      v31 = v58;
      v32 = v59;
      swift_bridgeObjectRelease(v57);
      sub_100429D74(v30, v29, v31, v32);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v32);
      v33 = (_QWORD *)(v0 + 184);
    }
    else
    {
      v33 = (_QWORD *)(v0 + 144);
    }
    _s5Books15CurrentPageViewVwxx_0(v33);
  }
  else if (v5 < 2)
  {
    v44 = static Logger.contextActionItem.getter(v8);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Trying to view a pdf when no supplemental pdf should be available", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }
    v48 = *(_QWORD *)(v0 + 256);
    v49 = *(_QWORD *)(v0 + 232);
    v50 = *(_QWORD *)(v0 + 240);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  else
  {
    v34 = (void *)objc_opt_self(BKLibraryBookshelfController);
    v35 = *(_QWORD *)(v0 + 88);
    v36 = *(_QWORD *)(v0 + 96);
    sub_10003F198((_QWORD *)(v0 + 64), v35);
    dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v35, v36);
    v38 = v37;
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v34, "supplementalContentPDFPickerWithPlaylistID:fromActionMenu:", v39, 1, swift_bridgeObjectRelease(v38).n128_f64[0]);

    if (v40)
    {
      v41 = *(_QWORD **)(v0 + 224);
      objc_msgSend(v40, "setModalPresentationStyle:", 2);
      v42 = v41[8];
      v43 = v41[9];
      sub_10003F198(v41 + 5, v42);
      dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v40, 1, v42, v43);

    }
  }
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
LABEL_20:
  v51 = *(_QWORD *)(v0 + 248);
  v52 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v52);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100429D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  Class isa;
  uint64_t v35;
  _QWORD *v36;
  _OWORD v37[2];
  __int128 v38;
  _QWORD *ObjectType;
  _QWORD *v40;

  v40 = _swiftEmptyDictionarySingleton;
  sub_100429418((uint64_t)&v38);
  v7 = sub_10003F198(&v38, (uint64_t)ObjectType);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong
    && (v9 = (void *)Strong,
        v10 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneControllerForViewController:", Strong), v9, v10))
  {
    _s5Books15CurrentPageViewVwxx_0(&v38);
    v11 = objc_msgSend(v10, "newShowAssetTransaction");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(BCTransactionOptionsTransactionKey);
    v35 = a2;
    v13 = a3;
    v15 = v14;
    ObjectType = (_QWORD *)swift_getObjectType();
    *(_QWORD *)&v38 = v11;
    sub_10004CFC4(&v38, v37);
    swift_unknownObjectRetain(v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v40 = (_QWORD *)0x8000000000000000;
    sub_1002C3A2C(v37, v12, v15, isUniquelyReferenced_nonNull_native);
    v17 = v40;
    v40 = _swiftEmptyDictionarySingleton;
    swift_unknownObjectRelease(v10);
    v18 = v15;
    a3 = v13;
    a2 = v35;
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    _s5Books15CurrentPageViewVwxx_0(&v38);
    v11 = 0;
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEAssetLogID);
  v21 = v19;
  v22 = v20;
  if (a4)
  {
    ObjectType = &type metadata for String;
    *(_QWORD *)&v38 = a3;
    *((_QWORD *)&v38 + 1) = a4;
    sub_10004CFC4(&v38, v37);
    swift_bridgeObjectRetain(a4);
    v23 = v40;
    v24 = swift_isUniquelyReferenced_nonNull_native(v40);
    v36 = v23;
    v40 = (_QWORD *)0x8000000000000000;
    sub_1002C3A2C(v37, v21, v22, v24);
    v25 = v40;
    v40 = v36;
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    sub_1002BD938(v19, v20, &v38);
    swift_bridgeObjectRelease(v22);
    sub_100010960((uint64_t)&v38, (uint64_t *)&unk_1009D04E0);
  }
  sub_100429418((uint64_t)&v38);
  sub_10003F198(&v38, (uint64_t)ObjectType);
  v26 = v40;
  v27 = sub_1004EC9E0((uint64_t)v40);
  swift_bridgeObjectRelease(v26);
  v28 = sub_10044CAB0();
  if (v28)
  {
    v29 = (void *)v28;
    v30 = objc_allocWithZone((Class)BKAssetID);
    swift_bridgeObjectRetain(a2);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v30, "initWithAssetID:", v31, swift_bridgeObjectRelease(a2).n128_f64[0]);

    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "showAssetWithTransaction:assetIdentifier:location:options:completion:", v11, v32, 0, isa, 0);
    swift_unknownObjectRelease(v11);
    swift_bridgeObjectRelease(v27);
    swift_unknownObjectRelease(v29);

  }
  else
  {
    swift_unknownObjectRelease(v11);
    swift_bridgeObjectRelease(v27);
  }
  return _s5Books15CurrentPageViewVwxx_0(&v38);
}

uint64_t sub_10042A0C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E2C0C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100429830();
}

uint64_t sub_10042A104@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_100022840(a1, a6);
  sub_100022840(a2, a6 + 40);
  *(_QWORD *)(a6 + 80) = a3;
  sub_100022840(a4, a6 + 88);
  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.viewIncludedPDF(_:);
  v13 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
}

unint64_t sub_10042A194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D4318;
  if (!qword_1009D4318)
  {
    v1 = type metadata accessor for ContextActionSource(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ContextActionSource, v1);
    atomic_store(result, (unint64_t *)&qword_1009D4318);
  }
  return result;
}

uint64_t sub_10042A1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ViewSupplementalContentActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042A220(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ViewSupplementalContentActionItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10042A25C()
{
  void *v0;
  unint64_t result;
  unint64_t v2;
  char *v3;
  char *v4;
  id v5;
  BOOL v6;

  result = (unint64_t)objc_msgSend(v0, "numberOfSections");
  if ((result & 0x8000000000000000) == 0)
  {
    v2 = result;
    if (!result)
      return 0;
    v3 = 0;
    v4 = (char *)(result - 1);
    while ((char *)v2 != v3)
    {
      v5 = objc_msgSend(v0, "numberOfRowsInSection:", v3);
      v6 = (uint64_t)v5 <= 0;
      result = (uint64_t)v5 > 0;
      if (!v6 || v4 == v3++)
        return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10042A2E8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E2C20);
  sub_100048F64(v0, (uint64_t)qword_1009E2C20);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001FLL, 0x80000001007C9450);
}

id sub_10042A388(void *a1, void *a2, void *a3, void *a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKAudiobookController_delegate], 0);
  v5[OBJC_IVAR___BKAudiobookController_supportsReportConcernInJS] = 0;
  v5[OBJC_IVAR___BKAudiobookController_canChangePlayerVolume] = 0;
  v5[OBJC_IVAR___BKAudiobookController_canStopPlayer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKAudiobookController_player] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___BKAudiobookController_sleepTimer] = a2;
  *(_QWORD *)&v5[OBJC_IVAR___BKAudiobookController_bag] = a3;
  *(_QWORD *)&v5[OBJC_IVAR___BKAudiobookController_bridge] = a4;
  v19.receiver = v5;
  v19.super_class = ObjectType;
  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = objc_msgSendSuper2(&v19, "init");
  v16 = swift_allocObject(&unk_100905978, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v15);
  v17 = v15;
  swift_retain(v16);
  JSABridge.enqueueBlockPrefersSync(_:f:l:)(sub_100069E24, v16, 0xD000000000000058, 0x80000001007C9490, 52);

  swift_release_n(v16, 2);
  return v17;
}

uint64_t sub_10042A510()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKAudiobookController_bag), "reportConcerns");
  *(_QWORD *)&v12 = 0;
  v2 = objc_msgSend(v1, "jsa_valueWithError:", &v12);

  v3 = (void *)v12;
  if (!v2)
  {
    v7 = (id)v12;
    v8 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v9);
    swift_errorRelease(v8);
    v12 = 0u;
    v13 = 0u;
LABEL_9:
    sub_10004A7B8((uint64_t)&v12);
    return 0;
  }
  *(_QWORD *)&v12 = 0x64656C62616E65;
  *((_QWORD *)&v12 + 1) = 0xE700000000000000;
  v4 = v3;
  v5 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v12, &type metadata for String);
  v6 = objc_msgSend(v2, "__swift_objectForKeyedSubscript:", v5);
  swift_unknownObjectRelease(v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_10004C7B4((uint64_t)v11, (uint64_t)&v12);
  if (!*((_QWORD *)&v13 + 1))
    goto LABEL_9;
  result = swift_dynamicCast(v11, &v12, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((_DWORD)result)
    return LOBYTE(v11[0]);
  return result;
}

id sub_10042A6B8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int v13;
  void *v14;
  id v15;
  double v16;
  id result;
  void *v18;
  id v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  double v28;
  int v29;
  id v30;
  unsigned int v31;
  id v32;
  double v33;
  uint64_t v34;
  uint64_t v36;
  objc_super v37;
  _QWORD v38[3];
  uint64_t v39;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_10004AA7C(a2, (uint64_t)v38);
  v6 = v39;
  if (v39)
  {
    v7 = sub_10003F198(v38, v39);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    _s5Books15CurrentPageViewVwxx_0(v38);
  }
  else
  {
    v12 = 0;
  }
  v37.receiver = v2;
  v37.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v37, "canPerformAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  if ((static Selector.== infix(_:_:)("books_togglePlaying:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_skipBackward:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_skipForward:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setPlaybackSpeed75Percent:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setPlaybackSpeed100Percent:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setPlaybackSpeed125Percent:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setPlaybackSpeed150Percent:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setPlaybackSpeed175Percent:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setPlaybackSpeed200Percent:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimer5Minutes:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimer10Minutes:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimer15Minutes:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimer30Minutes:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimer45Minutes:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimer1Hour:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_setSleepTimerWhenCurrentChapterEnds:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("books_unsetSleepTimer:", a1) & 1) != 0)
  {
    if (v13)
    {
      v14 = *(void **)&v2[OBJC_IVAR___BKAudiobookController_player];
      v15 = objc_msgSend(v14, "currentAudiobook");
      *(_QWORD *)&v16 = swift_unknownObjectRelease(v15).n128_u64[0];
      if (v15)
        return (id)(objc_msgSend(v14, "state", v16) != (id)4);
    }
    return 0;
  }
  if ((static Selector.== infix(_:_:)("books_stopPlaying:", a1) & 1) != 0)
    return 0;
  if ((static Selector.== infix(_:_:)("books_trackForward:", a1) & 1) != 0)
  {
    v18 = *(void **)&v2[OBJC_IVAR___BKAudiobookController_player];
    v19 = objc_msgSend(v18, "currentAudiobook");
    if (v19)
    {
      v21 = v19;
      v22 = objc_msgSend(v19, "chapters");
      swift_unknownObjectRelease(v21);
      v23 = sub_10004CFD4(&qword_1009D7448);
      v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

      if ((unint64_t)v24 >> 62)
      {
        if (v24 < 0)
          v36 = v24;
        else
          v36 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v24);
        v25 = _CocoaArrayWrapper.endIndex.getter(v36);
        swift_bridgeObjectRelease(v24);
      }
      else
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)&v20 = swift_bridgeObjectRelease(v24).n128_u64[0];
      if ((v13 & 1) == 0)
        return 0;
    }
    else
    {
      if (!v13)
        return 0;
      v25 = 0;
    }
    v32 = objc_msgSend(v18, "currentAudiobook", v20);
    *(_QWORD *)&v33 = swift_unknownObjectRelease(v32).n128_u64[0];
    if (!v32 || objc_msgSend(v18, "state", v33) == (id)4)
      return 0;
    result = objc_msgSend(v18, "currentChapterIndex");
    v34 = v25 - 1;
    if (__OFSUB__(v25, 1))
      __break(1u);
    else
      return (id)(v34 > 0 && (unint64_t)result < v34);
  }
  else
  {
    if ((static Selector.== infix(_:_:)("books_trackBackward:", a1) & 1) != 0)
    {
      if (v13)
      {
        v26 = *(void **)&v2[OBJC_IVAR___BKAudiobookController_player];
        v27 = objc_msgSend(v26, "currentAudiobook");
        *(_QWORD *)&v28 = swift_unknownObjectRelease(v27).n128_u64[0];
        if (v27)
        {
          if (objc_msgSend(v26, "state", v28) != (id)4)
            return (id)(objc_msgSend(v26, "currentChapterIndex") != 0);
        }
      }
      return 0;
    }
    if ((static Selector.== infix(_:_:)("books_increaseVolume:", a1) & 1) != 0
      || (static Selector.== infix(_:_:)("books_decreaseVolume:", a1) & 1) != 0)
    {
      return 0;
    }
    v29 = static Selector.== infix(_:_:)("books_reportAudioIssue:", a1);
    if ((v29 & v13) != 1)
      return (id)(v13 & ~v29);
    result = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookController_player], "currentAudiobook");
    if (result)
    {
      v30 = result;
      v31 = objc_msgSend(result, "isSG");
      swift_unknownObjectRelease(v30);
      if (v31 && (sub_10042A510() & 1) != 0 && v2[OBJC_IVAR___BKAudiobookController_supportsReportConcernInJS] == 1)
        return (id)(objc_msgSend((id)objc_opt_self(BKReachability), "isOffline") ^ 1);
      return 0;
    }
  }
  return result;
}

void sub_10042AC84(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  NSString v30;
  double v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37[2];

  v3 = type metadata accessor for Locale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v37 - v16;
  v37[0] = a1;
  v18 = objc_msgSend(a1, "action", v15);
  if ((static Selector.== infix(_:_:)("books_togglePlaying:", v18) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("books_setPlaybackSpeed75Percent:", v18) & 1) != 0)
    {
      v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "playbackSpeed") == 0;
      goto LABEL_23;
    }
    if ((static Selector.== infix(_:_:)("books_setPlaybackSpeed100Percent:", v18) & 1) != 0)
    {
      v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "playbackSpeed") == (id)1;
      goto LABEL_23;
    }
    if ((static Selector.== infix(_:_:)("books_setPlaybackSpeed125Percent:", v18) & 1) != 0)
    {
      v32 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "playbackSpeed");
LABEL_13:
      v24 = v32 == (id)2;
      goto LABEL_23;
    }
    if ((static Selector.== infix(_:_:)("books_setPlaybackSpeed150Percent:", v18) & 1) != 0)
    {
      v33 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "playbackSpeed");
LABEL_16:
      v24 = v33 == (id)3;
      goto LABEL_23;
    }
    if ((static Selector.== infix(_:_:)("books_setPlaybackSpeed175Percent:", v18) & 1) != 0)
    {
      v34 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "playbackSpeed");
LABEL_19:
      v24 = v34 == (id)4;
      goto LABEL_23;
    }
    if ((static Selector.== infix(_:_:)("books_setPlaybackSpeed200Percent:", v18) & 1) != 0)
    {
      v35 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "playbackSpeed");
    }
    else
    {
      if ((static Selector.== infix(_:_:)("books_setSleepTimer5Minutes:", v18) & 1) != 0)
      {
        v32 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "sleepTimerOption");
        goto LABEL_13;
      }
      if ((static Selector.== infix(_:_:)("books_setSleepTimer10Minutes:", v18) & 1) != 0)
      {
        v33 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "sleepTimerOption");
        goto LABEL_16;
      }
      if ((static Selector.== infix(_:_:)("books_setSleepTimer15Minutes:", v18) & 1) != 0)
      {
        v34 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "sleepTimerOption");
        goto LABEL_19;
      }
      if ((static Selector.== infix(_:_:)("books_setSleepTimer30Minutes:", v18) & 1) == 0)
      {
        if ((static Selector.== infix(_:_:)("books_setSleepTimer45Minutes:", v18) & 1) != 0)
        {
          v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "sleepTimerOption") == (id)6;
        }
        else
        {
          if ((static Selector.== infix(_:_:)("books_setSleepTimer1Hour:", v18) & 1) == 0)
          {
            if ((static Selector.== infix(_:_:)("books_setSleepTimerWhenCurrentChapterEnds:", v18) & 1) != 0)
            {
              v36 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "expiresAtChapterEnd");
            }
            else
            {
              if ((static Selector.== infix(_:_:)("books_unsetSleepTimer:", v18) & 1) == 0)
                return;
              v36 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "isActive") ^ 1;
            }
LABEL_26:
            objc_msgSend(v37[0], "setState:", v36);
            return;
          }
          v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "sleepTimerOption") == (id)7;
        }
LABEL_23:
        v36 = v24;
        goto LABEL_26;
      }
      v35 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_sleepTimer), "sleepTimerOption");
    }
    v24 = v35 == (id)5;
    goto LABEL_23;
  }
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookController_player), "isPlaying"))
  {
    v19 = String.LocalizationValue.init(stringLiteral:)(0x6573756150, 0xE500000000000000);
    static Locale.current.getter(v19);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
    v20 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v22, v6, "Controls -> Pause", 17, 2);
  }
  else
  {
    v25 = String.LocalizationValue.init(stringLiteral:)(2036427856, 0xE400000000000000);
    static Locale.current.getter(v25);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
    v26 = type metadata accessor for BundleFinder();
    v27 = swift_getObjCClassFromMetadata(v26);
    v28 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v27);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v28, v6, "Controls -> Play", 16, 2);
  }
  v29 = v23;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  v30 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v31 = swift_bridgeObjectRelease(v29).n128_u64[0];
  objc_msgSend(v37[0], "setTitle:", v30, v31);

}

id sub_10042B308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;

  v1 = v0;
  if (qword_1009CE4A8 != -1)
    swift_once(&qword_1009CE4A8, sub_10042A2E8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009E2C20);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Stopping playback from AudiobookController", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR___BKAudiobookController_player);
  objc_msgSend(v7, "stop");
  return objc_msgSend(v7, "setCurrentAudiobook:", 0);
}

uint64_t sub_10042B430(char *a1, uint64_t a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  char *v9;
  uint64_t v10;
  double v11;
  char *v12;
  id v13;
  __int128 v15;
  __int128 v16;

  if (a3)
  {
    v9 = a1;
    v10 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v10);
    *(_QWORD *)&v11 = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
    v12 = a1;
  }
  v13 = objc_msgSend(*(id *)&a1[OBJC_IVAR___BKAudiobookController_player], "skipController", v11, v15, v16);
  objc_msgSend(v13, *a4);
  objc_msgSend(v13, "singleSkip:interval:", a5);

  return sub_10004A7B8((uint64_t)&v15);
}

uint64_t sub_10042B500(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  char *v7;
  uint64_t v8;
  double v9;
  char *v10;
  __int128 v12;
  __int128 v13;

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v8);
    *(_QWORD *)&v9 = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
    v10 = a1;
  }
  objc_msgSend(*(id *)&a1[OBJC_IVAR___BKAudiobookController_player], *a4, v9, v12, v13);

  return sub_10004A7B8((uint64_t)&v12);
}

uint64_t sub_10042B844(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4, SEL *a5, uint64_t a6)
{
  char *v11;
  uint64_t v12;
  double v13;
  char *v14;
  __int128 v16;
  __int128 v17;

  if (a3)
  {
    v11 = a1;
    v12 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12);
    *(_QWORD *)&v13 = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
    v14 = a1;
  }
  objc_msgSend(*(id *)&a1[*a4], *a5, a6, v13, v16, v17);

  return sub_10004A7B8((uint64_t)&v16);
}

void sub_10042B8D8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *isa;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookController_player], "currentAudiobook", v3);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "assetID");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = objc_msgSend(v7, "supplementalContents");
    v13 = sub_100009E04(0, &qword_1009E2CA0, BKAudiobookSupplementalContent_ptr);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v29 = v14;
      else
        v29 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v14);
    }
    swift_bridgeObjectRelease(v14);
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    v15 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
    v16 = objc_msgSend(v15, "primaryAnalyticsController");

    v17 = (void *)dispatch thunk of AnalyticsController.applicationTracker.getter();
    if (v17)
    {
      v18 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
      type metadata accessor for MainActor(0);
      v19 = isa;
      v20 = v17;
      v21 = v1;
      v22 = static MainActor.shared.getter(v21);
      v23 = (_QWORD *)swift_allocObject(&unk_100905900, 72, 7);
      v23[2] = v22;
      v23[3] = &protocol witness table for MainActor;
      v23[4] = v9;
      v23[5] = v11;
      v23[6] = v19;
      v23[7] = v20;
      v23[8] = v21;
      v24 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009E2CB0, (uint64_t)v23);
      swift_unknownObjectRelease(v7);
      swift_release(v24);

      return;
    }
    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    if (qword_1009CE4A8 != -1)
      swift_once(&qword_1009CE4A8, sub_10042A2E8);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100048F64(v25, (uint64_t)qword_1009E2C20);
    isa = Logger.logObject.getter(v26);
    v27 = static os_log_type_t.error.getter(isa);
    if (os_log_type_enabled(isa, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, isa, v27, "Current audiobook is nil", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }
  }

}

uint64_t sub_10042BC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;

  v7[8] = a6;
  v7[9] = a7;
  v12 = type metadata accessor for MainActor(0);
  v7[10] = v12;
  v7[11] = static MainActor.shared.getter(v12);
  objc_allocWithZone((Class)sub_10004CFD4(&qword_1009D1440));
  v13 = dword_1009EA55C;
  swift_bridgeObjectRetain(a5);
  v14 = a6;
  v15 = a7;
  v16 = (_QWORD *)swift_task_alloc(v13);
  v7[12] = v16;
  *v16 = v7;
  v16[1] = sub_10042BCE0;
  return sub_1005384F8(a4, a5, (uint64_t)a6, (uint64_t)v15);
}

uint64_t sub_10042BCE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(void **)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(void **)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc(v2);

  v6 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10042BD6C, v6, v7);
}

uint64_t sub_10042BD6C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = (void *)v0[13];
  swift_release(v0[11]);
  v2 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v3 = objc_msgSend(v2, "sceneManager");
  v4 = swift_allocObject(&unk_100905928, 24, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v0[6] = sub_10042C0F4;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1001EDBF0;
  v0[5] = &unk_100905940;
  v5 = _Block_copy(v0 + 2);
  v6 = v0[7];
  v7 = v1;
  objc_msgSend(v3, "requestPrimaryScene:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);

  return ((uint64_t (*)(void))v0[1])();
}

uint64_t type metadata accessor for AudiobookController()
{
  return objc_opt_self(BKAudiobookController);
}

void sub_10042BF44(void *a1, void *a2)
{
  void *v4;
  id v5;
  id v6;

  v4 = (void *)objc_opt_self(UIViewController);
  v5 = objc_msgSend(a1, "bk_window");
  v6 = objc_msgSend(v4, "jsa_topMostViewControllerForWindow:", v5);

  objc_msgSend(a2, "setModalPresentationStyle:", 2);
  objc_msgSend(v6, "presentViewController:animated:completion:", a2, 1, 0);

}

uint64_t sub_10042BFF8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10042C03C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (void *)v1[6];
  v9 = (void *)v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1009E2CAC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000AE34;
  return sub_10042BC24(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10042C0D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10042C0F4(void *a1)
{
  uint64_t v1;

  sub_10042BF44(a1, *(void **)(v1 + 16));
}

uint64_t sub_10042C0FC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t ScrubberStatePublisher.bookContentViewProxy.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t ScrubberStatePublisher.statusBarStateProvider.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 24);
}

uint64_t ScrubberStatePublisher.statusBarStateProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 24, v6, 1, 0);
  *(_QWORD *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign(v2 + 24, a1);
  return swift_unknownObjectRelease(a1);
}

void (*ScrubberStatePublisher.statusBarStateProvider.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 24, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_10042C238;
}

void sub_10042C238(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 24, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t property wrapper backing initializer of ScrubberStatePublisher.scrubberState(uint64_t a1, char a2)
{
  uint64_t v3;
  char v4;

  v3 = a1;
  v4 = a2;
  return Published.init(initialValue:)(&v3, &type metadata for ScrubberState);
}

uint64_t ScrubberStatePublisher.scrubberState.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100723DB0);
  v2 = swift_getKeyPath(&unk_100723DD8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t ScrubberStatePublisher.scrubberState.setter(uint64_t a1, char a2)
{
  sub_10042CAB4(a1, a2);
  return sub_100309A54(a1, a2);
}

void (*ScrubberStatePublisher.scrubberState.modify(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  KeyPath = swift_getKeyPath(&unk_100723DB0);
  v5 = swift_getKeyPath(&unk_100723DD8);
  static Published.subscript.getter(v3, v1, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  v3[6] = *v3;
  *((_BYTE *)v3 + 56) = *((_BYTE *)v3 + 8);
  return sub_10042C420;
}

void sub_10042C420(char **a1, char a2)
{
  char *v3;
  uint64_t v4;
  char v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *a1;
  v4 = *((_QWORD *)*a1 + 6);
  v5 = (*a1)[56];
  KeyPath = swift_getKeyPath(&unk_100723DB0);
  v7 = swift_getKeyPath(&unk_100723DD8);
  if ((a2 & 1) != 0)
  {
    v8 = *((_QWORD *)v3 + 8);
    *(_QWORD *)v3 = v4;
    v3[8] = v5;
    sub_100300604(v4, v5);
    swift_retain(v8);
    sub_100300604(v4, v5);
    static Published.subscript.setter(v3, v8, KeyPath, v7);
    swift_beginAccess(v8 + 24, v3, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v8 + 24);
    if (Strong)
    {
      v10 = Strong;
      v11 = *(_QWORD *)(*((_QWORD *)v3 + 8) + 32);
      ObjectType = swift_getObjectType();
      v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      if (v13)
      {
        v16 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
        swift_unknownObjectRelease(v13);
      }
    }
    sub_100309A54(v4, v5);
    v17 = *((_QWORD *)v3 + 6);
    v18 = v3[56];
  }
  else
  {
    v19 = *((_QWORD *)v3 + 8);
    *(_QWORD *)v3 = v4;
    v3[8] = v5;
    swift_retain(v19);
    sub_100300604(v4, v5);
    static Published.subscript.setter(v3, v19, KeyPath, v7);
    swift_beginAccess(v19 + 24, v3 + 24, 0, 0);
    v20 = swift_unknownObjectWeakLoadStrong(v19 + 24);
    if (v20)
    {
      v21 = v20;
      v22 = *(_QWORD *)(*((_QWORD *)v3 + 8) + 32);
      v23 = swift_getObjectType();
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v23, v22);
      v26 = v25;
      swift_unknownObjectRelease(v21);
      if (v24)
      {
        v27 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
        swift_unknownObjectRelease(v24);
      }
    }
    v17 = v4;
    v18 = v5;
  }
  sub_100309A54(v17, v18);
  free(v3);
}

uint64_t ScrubberStatePublisher.$scrubberState.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books22ScrubberStatePublisher__scrubberState, v3, 33, 0);
  v1 = sub_10004CFD4(&qword_1009E2CC0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t ScrubberStatePublisher.$scrubberState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_10004CFD4(&qword_1009E2CC8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books22ScrubberStatePublisher__scrubberState, v11, 33, 0);
  v8 = sub_10004CFD4(&qword_1009E2CC0);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*ScrubberStatePublisher.$scrubberState.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10004CFD4(&qword_1009E2CC8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC5Books22ScrubberStatePublisher__scrubberState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10004CFD4(&qword_1009E2CC0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1002B5428;
}

uint64_t ScrubberStatePublisher.__allocating_init(bookContentViewProxy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  char v6;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  *(_QWORD *)(v3 + 32) = 0;
  swift_unknownObjectWeakInit(v3 + 24, 0);
  v5 = 0;
  v6 = 2;
  Published.init(initialValue:)(&v5, &type metadata for ScrubberState);
  *(_QWORD *)(v3 + 16) = a1;
  return v3;
}

uint64_t ScrubberStatePublisher.init(bookContentViewProxy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v3 = sub_10004CFD4(&qword_1009E2CC0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit(v1 + 24);
  v7 = v1 + OBJC_IVAR____TtC5Books22ScrubberStatePublisher__scrubberState;
  v9 = 0;
  v10 = 2;
  Published.init(initialValue:)(&v9, &type metadata for ScrubberState);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7, v6, v3);
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

UIView __swiftcall ScrubberStatePublisher.makeSnapshotView()()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)dispatch thunk of PlatformViewProvider.view.getter();
  if (v0
    && (v1 = v0,
        v2 = objc_msgSend(v0, "snapshotViewAfterScreenUpdates:", 0),
        v1,
        v2))
  {
    return (UIView)v2;
  }
  else
  {
    return (UIView)objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  }
}

uint64_t ScrubberStatePublisher.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1001FE9A0(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtC5Books22ScrubberStatePublisher__scrubberState;
  v2 = sub_10004CFD4(&qword_1009E2CC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScrubberStatePublisher.__deallocating_deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_release(v0[2]);
  sub_1001FE9A0((uint64_t)(v0 + 3));
  v1 = (char *)v0 + OBJC_IVAR____TtC5Books22ScrubberStatePublisher__scrubberState;
  v2 = sub_10004CFD4(&qword_1009E2CC0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10042CA78@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ScrubberStatePublisher(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10042CAB4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  KeyPath = swift_getKeyPath(&unk_100723DB0);
  v6 = swift_getKeyPath(&unk_100723DD8);
  v15 = a1;
  v16 = a2;
  swift_retain(v2);
  sub_100300604(a1, a2);
  static Published.subscript.setter(&v15, v2, KeyPath, v6);
  swift_beginAccess(v2 + 24, &v15, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2 + 24);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(v2 + 32);
    ObjectType = swift_getObjectType();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
    v13 = v12;
    result = swift_unknownObjectRelease(v8);
    if (v11)
    {
      v14 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v13);
      return swift_unknownObjectRelease(v11);
    }
  }
  return result;
}

uint64_t sub_10042CBAC()
{
  return type metadata accessor for ScrubberStatePublisher(0);
}

uint64_t type metadata accessor for ScrubberStatePublisher(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E2CF8;
  if (!qword_1009E2CF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ScrubberStatePublisher);
  return result;
}

void sub_10042CBF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100723E68;
  sub_10042CC74();
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_10042CC74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009E2D08)
  {
    v0 = type metadata accessor for Published(0, &type metadata for ScrubberState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009E2D08);
  }
}

void sub_10042CDF8()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  id v15;
  id v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for BuyButtonUIViewController();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for BuyButtonUIView();
    v4 = swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books15BuyButtonUIView_button), "addTarget:action:forControlEvents:", v0, "_buyButtonPressed:", 64);
      v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books25BuyButtonUIViewController_viewModel];
      swift_retain(v6);
      sub_10042CFC8(v7);
      swift_release(v6);
      v8 = OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress;
      v9 = *(void **)(v5 + OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress);
      v10 = (void *)objc_opt_self(UIColor);
      v11 = v9;
      v12 = objc_msgSend(v10, "clearColor");
      objc_msgSend(v11, "setTrackColor:", v12);

      v13 = *(void **)(v5 + v8);
      objc_msgSend(v13, "setInscribeProgress:", 0);
      v14 = *(double *)&v0[OBJC_IVAR____TtC5Books25BuyButtonUIViewController_radialProgressThickness];
      objc_msgSend(v13, "setProgressThickness:", v14);
      v15 = v13;
      v16 = objc_msgSend(v10, "labelColor");
      objc_msgSend(v15, "setProgressColor:", v16);

      objc_msgSend(*(id *)(v5 + v8), "setTrackThickness:", v14);
    }

  }
}

double sub_10042CFC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  double result;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, uint64_t, __n128);
  uint64_t v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  id v169;

  v162 = a1;
  v2 = sub_10004CFD4(&qword_1009E2E38);
  v3 = *(_QWORD *)(v2 - 8);
  v157 = v2;
  v158 = v3;
  __chkstk_darwin(v2);
  v155 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E2E40);
  v6 = *(_QWORD *)(v5 - 8);
  v159 = v5;
  v160 = v6;
  __chkstk_darwin(v5);
  v156 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009DE380);
  v9 = *(_QWORD *)(v8 - 8);
  v151 = v8;
  v152 = v9;
  __chkstk_darwin(v8);
  v149 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009DE388);
  v12 = *(_QWORD *)(v11 - 8);
  v153 = v11;
  v154 = v12;
  __chkstk_darwin(v11);
  v150 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_10004CFD4(&qword_1009D4DC0);
  v146 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_10004CFD4(&qword_1009D4DC8);
  v148 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v144 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_10004CFD4(&qword_1009D4D90);
  v133 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_10004CFD4(&qword_1009D4D98);
  v136 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v130 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10004CFD4(&qword_1009E2E48);
  v126 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_10004CFD4(&qword_1009E2E50);
  v128 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v124 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v20);
  v22 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009E2E58);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_10004CFD4(&qword_1009E2E60);
  v27 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__disabledForegroundColor, &v169, 33, 0);
  v142 = sub_10004CFD4(&qword_1009E0EB8);
  v134 = v26;
  Published.projectedValue.getter(v142);
  swift_endAccess(&v169);
  v30 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v169 = (id)static OS_dispatch_queue.main.getter(v30);
  v31 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v166 = v31;
  v167 = v32;
  v32(v22, 1, 1, v31);
  v33 = sub_100030B34(&qword_1009E2E68, &qword_1009E2E58, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v141 = v33;
  v161 = sub_1001EDDD0();
  v137 = v23;
  Publisher.receive<A>(on:options:)(&v169, v22, v23, v30, v33, v161);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  v140 = *(void (**)(char *, uint64_t))(v24 + 8);
  v140(v26, v23);
  v34 = swift_allocObject(&unk_1009059C0, 24, 7);
  v35 = v168;
  swift_unknownObjectUnownedInit(v34 + 16);
  v139 = sub_100030B34(&qword_1009E2E70, &qword_1009E2E60, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v36 = v163;
  v132 = v29;
  v37 = Publisher<>.sink(receiveValue:)(sub_10042E9AC, v34, v163, v139);
  v38 = swift_release(v34);
  v138 = *(void (**)(char *, uint64_t, __n128))(v27 + 8);
  v138(v29, v36, v38);
  v39 = v35 + OBJC_IVAR____TtC5Books25BuyButtonUIViewController_cancellables;
  swift_beginAccess(v35 + OBJC_IVAR____TtC5Books25BuyButtonUIViewController_cancellables, &v169, 33, 0);
  AnyCancellable.store(in:)(v39);
  swift_endAccess(&v169);
  swift_release(v37);
  v40 = v162;
  swift_beginAccess(v162 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__downloadProgress, &v169, 33, 0);
  v41 = sub_10004CFD4(&qword_1009E0EC0);
  v42 = v123;
  Published.projectedValue.getter(v41);
  v43 = swift_endAccess(&v169);
  v164 = v30;
  v169 = (id)static OS_dispatch_queue.main.getter(v43);
  v44 = v167;
  v167(v22, 1, 1, v31);
  v45 = sub_100030B34(&qword_1009E2E78, &qword_1009E2E48, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v46 = v124;
  v47 = v125;
  v48 = v30;
  v49 = v161;
  Publisher.receive<A>(on:options:)(&v169, v22, v125, v48, v45, v161);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v126 + 8))(v42, v47);
  v50 = swift_allocObject(&unk_1009059C0, 24, 7);
  swift_unknownObjectUnownedInit(v50 + 16);
  v51 = sub_100030B34(&qword_1009E2E80, &qword_1009E2E50, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v52 = v127;
  v53 = Publisher<>.sink(receiveValue:)(sub_10042E9C8, v50, v127, v51);
  v54 = swift_release(v50);
  (*(void (**)(char *, uint64_t, __n128))(v128 + 8))(v46, v52, v54);
  swift_beginAccess(v39, &v169, 33, 0);
  AnyCancellable.store(in:)(v39);
  swift_endAccess(&v169);
  swift_release(v53);
  swift_beginAccess(v40 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__enabled, &v169, 33, 0);
  v55 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v56 = v129;
  Published.projectedValue.getter(v55);
  v57 = swift_endAccess(&v169);
  v58 = v164;
  v169 = (id)static OS_dispatch_queue.main.getter(v57);
  v44(v22, 1, 1, v166);
  v59 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v60 = v130;
  v61 = v131;
  Publisher.receive<A>(on:options:)(&v169, v22, v131, v58, v59, v49);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v133 + 8))(v56, v61);
  v62 = swift_allocObject(&unk_1009059C0, 24, 7);
  swift_unknownObjectUnownedInit(v62 + 16);
  v63 = sub_100030B34((unint64_t *)&unk_1009D4E80, &qword_1009D4D98, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v64 = v135;
  v65 = Publisher<>.sink(receiveValue:)(sub_10042E9D0, v62, v135, v63);
  v66 = swift_release(v62);
  (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v60, v64, v66);
  v165 = v39;
  swift_beginAccess(v39, &v169, 33, 0);
  AnyCancellable.store(in:)(v39);
  swift_endAccess(&v169);
  swift_release(v65);
  swift_beginAccess(v40 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__imageName, &v169, 33, 0);
  v67 = sub_10004CFD4(&qword_1009D19E8);
  v68 = v143;
  Published.projectedValue.getter(v67);
  v69 = swift_endAccess(&v169);
  v70 = v58;
  v169 = (id)static OS_dispatch_queue.main.getter(v69);
  v72 = v166;
  v71 = v167;
  v167(v22, 1, 1, v166);
  v73 = sub_100030B34(&qword_1009D4E30, &qword_1009D4DC0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v74 = v144;
  v75 = v145;
  v76 = v49;
  Publisher.receive<A>(on:options:)(&v169, v22, v145, v70, v73, v49);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v146 + 8))(v68, v75);
  v77 = swift_allocObject(&unk_1009059C0, 24, 7);
  swift_unknownObjectUnownedInit(v77 + 16);
  v78 = sub_100030B34(&qword_1009D4E38, &qword_1009D4DC8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v79 = v147;
  v80 = Publisher<>.sink(receiveValue:)(sub_10042E9D8, v77, v147, v78);
  v81 = swift_release(v77);
  (*(void (**)(char *, uint64_t, __n128))(v148 + 8))(v74, v79, v81);
  v82 = v165;
  swift_beginAccess(v165, &v169, 33, 0);
  AnyCancellable.store(in:)(v82);
  swift_endAccess(&v169);
  swift_release(v80);
  v83 = v162;
  swift_beginAccess(v162 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__normalForegroundColor, &v169, 33, 0);
  v84 = v134;
  Published.projectedValue.getter(v142);
  v85 = swift_endAccess(&v169);
  v86 = v164;
  v169 = (id)static OS_dispatch_queue.main.getter(v85);
  v71(v22, 1, 1, v72);
  v87 = v71;
  v88 = v132;
  v89 = v137;
  Publisher.receive<A>(on:options:)(&v169, v22, v137, v86, v141, v76);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  v140(v84, v89);
  v90 = swift_allocObject(&unk_1009059C0, 24, 7);
  swift_unknownObjectUnownedInit(v90 + 16);
  v91 = v163;
  v92 = Publisher<>.sink(receiveValue:)(sub_10042E9E0, v90, v163, v139);
  v93 = swift_release(v90);
  v138(v88, v91, v93);
  v94 = v165;
  swift_beginAccess(v165, &v169, 33, 0);
  AnyCancellable.store(in:)(v94);
  swift_endAccess(&v169);
  swift_release(v92);
  swift_beginAccess(v83 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__price, &v169, 33, 0);
  v95 = sub_10004CFD4(&qword_1009D19E0);
  v96 = v149;
  Published.projectedValue.getter(v95);
  v97 = swift_endAccess(&v169);
  v98 = v164;
  v169 = (id)static OS_dispatch_queue.main.getter(v97);
  v99 = v166;
  v87(v22, 1, 1, v166);
  v100 = sub_100030B34((unint64_t *)&unk_1009DBFF0, &qword_1009DE380, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v101 = v150;
  v102 = v151;
  v103 = v98;
  v104 = v161;
  Publisher.receive<A>(on:options:)(&v169, v22, v151, v98, v100, v161);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v152 + 8))(v96, v102);
  v105 = swift_allocObject(&unk_1009059C0, 24, 7);
  swift_unknownObjectUnownedInit(v105 + 16);
  v106 = sub_100030B34((unint64_t *)&unk_1009DE3A8, &qword_1009DE388, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v107 = v153;
  v108 = Publisher<>.sink(receiveValue:)(sub_10042E9FC, v105, v153, v106);
  v109 = swift_release(v105);
  (*(void (**)(char *, uint64_t, __n128))(v154 + 8))(v101, v107, v109);
  v110 = v165;
  swift_beginAccess(v165, &v169, 33, 0);
  AnyCancellable.store(in:)(v110);
  swift_endAccess(&v169);
  swift_release(v108);
  swift_beginAccess(v83 + OBJC_IVAR____TtC5Books18BuyButtonViewModel__viewState, &v169, 33, 0);
  v111 = sub_10004CFD4(&qword_1009E2E88);
  v112 = v155;
  Published.projectedValue.getter(v111);
  v113 = swift_endAccess(&v169);
  v169 = (id)static OS_dispatch_queue.main.getter(v113);
  v167(v22, 1, 1, v99);
  v114 = sub_100030B34(&qword_1009E2E90, &qword_1009E2E38, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v116 = v156;
  v115 = v157;
  Publisher.receive<A>(on:options:)(&v169, v22, v157, v103, v114, v104);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v158 + 8))(v112, v115);
  v117 = swift_allocObject(&unk_1009059C0, 24, 7);
  swift_unknownObjectUnownedInit(v117 + 16);
  v118 = sub_100030B34(&qword_1009E2E98, &qword_1009E2E40, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v119 = v159;
  v120 = Publisher<>.sink(receiveValue:)(sub_10042EA04, v117, v159, v118);
  v121 = swift_release(v117);
  (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v116, v119, v121);
  swift_beginAccess(v110, &v169, 33, 0);
  AnyCancellable.store(in:)(v110);
  swift_endAccess(&v169);
  *(_QWORD *)&result = swift_release(v120).n128_u64[0];
  return result;
}

id sub_10042DF84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BuyButtonUIViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BuyButtonUIViewController()
{
  return objc_opt_self(_TtC5Books25BuyButtonUIViewController);
}

void sub_10042E024(double *a1, uint64_t a2)
{
  double v2;
  void *Strong;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  id v9;

  v2 = *a1;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = objc_msgSend(Strong, "view");
  if (v4)
  {
    v9 = v4;
    v5 = type metadata accessor for BuyButtonUIView();
    v6 = swift_dynamicCastClass(v9, v5);

    if (v6)
    {
      *(float *)&v7 = v2;
      objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress), "setProgress:", v7);
    }
    v8 = v9;
  }
  else
  {
    v8 = Strong;
  }

}

void sub_10042E0C4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  id v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  unsigned __int8 v9;
  void *v10;
  id v11;

  v2 = *a1;
  v3 = a2 + 16;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v5 = objc_msgSend(Strong, "view");
  if (v5)
  {
    v11 = v5;
    v6 = type metadata accessor for BuyButtonUIView();
    v7 = (char *)swift_dynamicCastClass(v11, v6);

    if (v7)
    {
      v8 = (_BYTE *)swift_unknownObjectUnownedLoadStrong(v3);
      if ((_DWORD)v2)
        v9 = objc_msgSend(v7, "isUserInteractionEnabled");
      else
        v9 = 0;
      v8[OBJC_IVAR____TtC5Books25BuyButtonUIViewController_buttonEnabled] = v9;

      objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC5Books15BuyButtonUIView_button], "setUserInteractionEnabled:", v2);
    }
    v10 = v11;
  }
  else
  {
    v10 = Strong;
  }

}

void sub_10042E1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSString v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id Strong;
  id v17;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = a2 + 16;
  Strong = (id)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = objc_msgSend(Strong, "view");
  if (!v4)
    goto LABEL_11;
  v5 = v4;
  v6 = type metadata accessor for BuyButtonUIView();
  v7 = swift_dynamicCastClass(v5, v6);

  if (!v7)
  {
    v11 = v5;
LABEL_12:

    return;
  }
  if (v2)
  {
    v8 = (void *)objc_opt_self(UIImage);
    v9 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v8, "__systemImageNamedSwift:", v9);

    v10 = v17;
  }
  else
  {
    v10 = 0;
  }
  Strong = v10;
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC5Books15BuyButtonUIView_button), "setImage:forState:");
  v12 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v13 = objc_msgSend(v12, "parentViewController");
  if (!v13)
  {
LABEL_10:

LABEL_11:
    v11 = Strong;
    goto LABEL_12;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "view");

  if (v15)
  {
    objc_msgSend(v15, "setNeedsLayout");

    v5 = v12;
    v12 = Strong;
    Strong = v15;
    goto LABEL_10;
  }
  __break(1u);
}

void sub_10042E320(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id Strong;

  v4 = *a1;
  v5 = a2 + 16;
  Strong = (id)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v6 = objc_msgSend(Strong, "view");
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for BuyButtonUIView();
    v9 = swift_dynamicCastClass(v7, v8);

    if (!v9)
    {
      v13 = v7;
      goto LABEL_6;
    }
    v10 = *(id *)(v9 + OBJC_IVAR____TtC5Books15BuyButtonUIView_button);

    v11 = (void *)swift_unknownObjectUnownedLoadStrong(v5);
    sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
    swift_retain(v4);
    Strong = (id)UIColor.init(_:)(v12);

    objc_msgSend(v10, "setTitleColor:forState:", Strong, a3);
  }
  v13 = Strong;
LABEL_6:

}

void sub_10042E42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  NSString *v9;
  NSString *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  Class isa;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id Strong;
  _BYTE v25[48];

  v2 = *(_QWORD *)(a1 + 8);
  v3 = a2 + 16;
  Strong = (id)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = objc_msgSend(Strong, "view");
  if (!v4)
  {
    v22 = Strong;
LABEL_8:

    return;
  }
  v23 = v4;
  v5 = type metadata accessor for BuyButtonUIView();
  v6 = swift_dynamicCastClass(v23, v5);

  if (!v6)
  {
    v22 = v23;
    goto LABEL_8;
  }
  v7 = sub_10004CFD4(&qword_1009E2EA0);
  inited = swift_initStackObject(v7, v25);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v9 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  v10 = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = sub_1005D55EC((uint64_t)UIFontTextStyleCallout, (uint64_t)v9);
  v11 = sub_1001DAE90(inited);
  swift_bridgeObjectRetain(v2);
  sub_1004ED920(v11);
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  v14 = objc_allocWithZone((Class)NSAttributedString);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  type metadata accessor for Key(0);
  sub_100352538();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v14, "initWithString:attributes:", v15, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC5Books15BuyButtonUIView_button), "setAttributedTitle:forState:", v17, 0);
  v18 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
  v19 = objc_msgSend(v18, "parentViewController");
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, "view");

    if (v21)
    {
      objc_msgSend(v21, "setNeedsLayout");

    }
    else
    {
      __break(1u);
    }
  }
  else
  {

  }
}

void sub_10042E6C8(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  double v9;
  id v10;
  double v11;
  char **v12;
  void *v13;
  id Strong;

  v2 = *a1;
  Strong = (id)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v3 = objc_msgSend(Strong, "view");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for BuyButtonUIView();
    v6 = swift_dynamicCastClass(v4, v5);

    if (!v6)
    {
      v13 = v4;
      goto LABEL_18;
    }
    if (v2)
      v7 = 0.0;
    else
      v7 = 1.0;
    objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC5Books15BuyButtonUIView_button), "setAlpha:", v7);
    v8 = *(void **)(v6 + OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress);
    if (v2 == 2)
      v9 = 1.0;
    else
      v9 = 0.0;
    objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC5Books15BuyButtonUIView_radialProgress), "setAlpha:", v9);
    objc_msgSend(v8, "setIsAccessibilityElement:", v2 != 2);
    v10 = *(id *)(v6 + OBJC_IVAR____TtC5Books15BuyButtonUIView_spinner);
    Strong = v10;
    if (v2 == 1)
      v11 = 1.0;
    else
      v11 = 0.0;
    if (v2 == 1)
      v12 = &selRef_startAnimating;
    else
      v12 = &selRef_stopAnimating;
    objc_msgSend(v10, "setAlpha:", v11);
    objc_msgSend(Strong, "setIsAccessibilityElement:", v2 != 2);
    objc_msgSend(Strong, *v12);

  }
  v13 = Strong;
LABEL_18:

}

uint64_t sub_10042E828()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];
  _BYTE v4[24];
  uint64_t v5;

  sub_10042E940(v0 + OBJC_IVAR____TtC5Books25BuyButtonUIViewController_eventHandler, (uint64_t)v4);
  if (!v5)
    return sub_100010960((uint64_t)v4, &qword_1009D26C8);
  sub_10002E418((uint64_t)v4, (uint64_t)v3);
  sub_100010960((uint64_t)v4, &qword_1009D26C8);
  v1 = *(_QWORD *)(*sub_10003F198(v3, v3[3]) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor);
  swift_unknownObjectRetain(v1);
  sub_1004AA100();
  swift_unknownObjectRelease(v1);
  return _s5Books15CurrentPageViewVwxx_0(v3);
}

uint64_t sub_10042E940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D26C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042E988()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10042E9AC(uint64_t *a1)
{
  uint64_t v1;

  sub_10042E320(a1, v1, 2);
}

void sub_10042E9C8(double *a1)
{
  uint64_t v1;

  sub_10042E024(a1, v1);
}

void sub_10042E9D0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10042E0C4(a1, v1);
}

void sub_10042E9D8(uint64_t a1)
{
  uint64_t v1;

  sub_10042E1A0(a1, v1);
}

void sub_10042E9E0(uint64_t *a1)
{
  uint64_t v1;

  sub_10042E320(a1, v1, 0);
}

void sub_10042E9FC(uint64_t a1)
{
  uint64_t v1;

  sub_10042E42C(a1, v1);
}

void sub_10042EA04(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10042E6C8(a1, v1);
}

void sub_10042EA0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  UIMenuElementSize v8;
  uint64_t v9;
  Swift::String v10;
  UIMenuElementSize v11;
  Swift::String v12;
  UIMenu v13;
  Swift::String v14;
  uint64_t v15;
  UIMenuElementSize *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  UIMenuElementSize v21;
  UIMenuElementSize v22;
  Swift::String v23;
  UIMenuElementSize v24;
  uint64_t v25;
  Swift::String v26;
  UIMenu v27;
  Swift::String v28;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v30;
  Swift::OpaquePointer v31;
  Swift::OpaquePointer v32;
  UIMenu v33;
  Swift::OpaquePointer v34;
  Swift::OpaquePointer v35;
  UIMenu *v38;
  Class isa;
  UIMenuElementSize v40[2];
  __int128 v41;
  UIImage_optional v42;
  UIImage_optional v43;
  UIImage_optional v44;
  UIImage_optional v45;
  UIImage_optional v46;
  UIImage_optional v47;

  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v7 = swift_allocObject(v6, 112, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10071CB60;
  sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v7 + 32) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0x654D206775626544, 0xEA0000000000756ELL, 0, "books_internal_presentDebugMenu:", 68, 0xE100000000000000, 1310720, v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v7 + 40) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD000000000000017, 0x80000001007C9630, 0, 0, 0, 0, "books_internal_simulateMemoryWarning:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v7 + 48) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0x646552206E65704FLL, 0xEF4C5255206D6565, 0, 0, 0, 0, "books_internal_openRedeemURL:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v7 + 56) = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD000000000000012, 0x80000001007C9650, 0, "books_internal_toggleFakePlayer:", 65, 0xE100000000000000, 1310720, v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v7 + 64) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD000000000000018, 0x80000001007C9670, 0, 0, 0, 0, "books_internal_toggleRecordingLiveResizeStats:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v8 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1007118D0;
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v8 + 32) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0x655220796C696144, 0xED0000676E696461, 0, 0, 0, 0, "books_internal_triggerFakeDailyReadingGoalAchievementNotification:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v8 + 40) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD000000000000015, 0x80000001007C96C0, 0, 0, 0, 0, "books_internal_triggerFakeYearlyBooksGoalAchievementNotification:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  v9 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0x20747365676E6F4CLL, 0xEE006B6165727453, 0, 0, 0, 0, "books_internal_triggerFakeLongestStreakNotification:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v8 + 48) = v9;
  v40[0] = v8;
  specialized Array._endMutation()(v9);
  v10._countAndFlagsBits = 0xD000000000000023;
  v10._object = (void *)0x80000001007C9690;
  v42.value.super.isa = 0;
  v42.is_nil = 0;
  *(UIMenu *)(v7 + 72) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v42, 0, 0xFFFFFFFFFFFFFFFFLL, v40[0], v30);
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  *(_QWORD *)(v7 + 80) = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD00000000000001ELL, 0x80000001007C96E0, 0, 0, 0, 0, "books_internal_disableStoreInternalDebugMessageUI:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v11 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1007118F0;
  preferredElementSize = sub_10042F1CC(a2, a3);
  v12._object = (void *)0x80000001007C9700;
  v12._countAndFlagsBits = 0xD000000000000019;
  v43.value.super.isa = 0;
  v43.is_nil = 0;
  v13.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v43, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v31).super.super.isa;
  *(UIMenu *)(v11 + 32) = v13;
  v40[0] = v11;
  specialized Array._endMutation()(v13.super.super.isa);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v44.value.super.isa = 0;
  v44.is_nil = 0;
  v38 = (UIMenu *)v7;
  *(UIMenu *)(v7 + 88) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v14, (Swift::String_optional)0, v44, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v40[0], v32);
  v15 = *(_QWORD *)(a4 + 16);
  if (v15)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v15);
    v16 = (UIMenuElementSize *)(a4 + 40);
    do
    {
      v21 = *((_QWORD *)v16 - 1);
      v22 = *v16;
      if (*v16)
      {
        *((_QWORD *)&v41 + 1) = &type metadata for String;
        v40[0] = v21;
        v40[1] = v22;
        swift_bridgeObjectRetain_n(v22, 2);
        v17 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v21, v22, 0, 0, 0, 0, "books_internal_setLegacyAccount:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      }
      else
      {
        sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
        v17 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0xD000000000000011, 0x80000001007C9720, v21, 0, 0, 0, 0, v21, 0, 1, 0, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0);
      }
      v18 = v17;
      v16 += 2;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v19 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v18);
      specialized ContiguousArray._endMutation()(v20);
      --v15;
    }
    while (v15);
  }
  v23._object = (void *)0x80000001007C9740;
  v23._countAndFlagsBits = 0xD000000000000012;
  v45.value.super.isa = 0;
  v45.is_nil = 0;
  v38[12].super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, (Swift::OpaquePointer)v33.super.super.isa).super.super.isa;
  v24 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1007118F0;
  *(_OWORD *)v40 = 0u;
  v41 = 0u;
  v25 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD000000000000031, 0x80000001007C9760, 0, 0, 0, 0, "books_internal_incrementPostLaunchCacheCount:", v40, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  *(_QWORD *)(v24 + 32) = v25;
  v40[0] = v24;
  specialized Array._endMutation()(v25);
  v26._countAndFlagsBits = 5525584;
  v26._object = (void *)0xE300000000000000;
  v46.value.super.isa = 0;
  v46.is_nil = 0;
  v27.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v46, 0, 0xFFFFFFFFFFFFFFFFLL, v40[0], v34).super.super.isa;
  v38[13].super.super.isa = v27.super.super.isa;
  v40[0] = (UIMenuElementSize)v38;
  specialized Array._endMutation()(v27.super.super.isa);
  v28._countAndFlagsBits = 0x6C616E7265746E49;
  v28._object = (void *)0xE800000000000000;
  v47.value.super.isa = 0;
  v47.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v47, 0, 0xFFFFFFFFFFFFFFFFLL, v40[0], v35).super.super.isa;
  objc_msgSend(a1, "insertSiblingMenu:afterMenuForIdentifier:", isa, UIMenuHelp);

}

uint64_t sub_10042F1CC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  UIMenuElementSize v25;
  Swift::String v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v33;
  _QWORD v34[4];
  _QWORD *v35;
  UIImage_optional v36;

  KeyPath = swift_getKeyPath(&unk_100723EB0);
  v6 = swift_getKeyPath(&unk_100723ED8);
  static Published.subscript.getter(v34, a1, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v34[0];
  v8 = v2;
  v9 = sub_10042F914(v7);
  swift_bridgeObjectRelease(v7);

  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v35 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
    v11 = (uint64_t *)(a2 + 56);
    do
    {
      v13 = *(v11 - 3);
      v12 = *(v11 - 2);
      v14 = *(v11 - 1);
      v15 = *v11;
      v34[3] = &type metadata for String;
      v34[0] = v13;
      v34[1] = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v15);
      v16 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v14, v15, 0, 0, 0, 0, "books_internal_selectSidebarCollection:", v34, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = v35[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
      specialized ContiguousArray._endMutation()(v18);
      v11 += 4;
      --v10;
    }
    while (v10);
    v19 = v35;
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    v9 = sub_1005B19D0(0, v9[2] + 1, 1, v9);
  v21 = v9[2];
  v20 = v9[3];
  v22 = v21 + 1;
  if (v21 >= v20 >> 1)
    v9 = sub_1005B19D0((_QWORD *)(v20 > 1), v21 + 1, 1, v9);
  v9[2] = v22;
  v9[v21 + 4] = v19;
  v34[0] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v9);
  specialized ContiguousArray.reserveCapacity(_:)(v21 + 1);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v23 = 0;
  do
  {
    v24 = v23 + 1;
    swift_bridgeObjectRetain(v9[v23 + 4]);
    preferredElementSize = v25;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v36.value.super.isa = 0;
    v36.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v36, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v33).super.super.isa;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(isa);
    v28 = *(_QWORD *)(v34[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
    v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, isa);
    specialized ContiguousArray._endMutation()(v29);
    v23 = v24;
  }
  while (v22 != v24);
  v30 = v34[0];
  swift_bridgeObjectRelease_n(v9, 2);
  return v30;
}

_QWORD *sub_10042F4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  char v20;
  char v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  _QWORD v55[4];
  _QWORD *v56;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v47 = a2;
    v4 = (uint64_t *)(a2 + 48);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v7 = *((unsigned __int16 *)v4 + 24) | (*((unsigned __int8 *)v4 + 50) << 16);
      if ((v7 & 0xC00000) == 0x800000)
      {
        v8 = (void *)v4[4];
        v9 = v4[5];
        v10 = v4[3];
        v11 = v4[1];
        v51 = *v4;
        v53 = v4[2];
        v12 = *(v4 - 1);
        v49 = *(v4 - 2);
        swift_bridgeObjectRetain(v12);
        swift_bridgeObjectRetain(v11);
        swift_bridgeObjectRetain(v10);
        v13 = v8;
        swift_bridgeObjectRetain(v9);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_1005B1AFC(0, v5[2] + 1, 1, v5);
        v15 = v5[2];
        v14 = v5[3];
        v16 = v5;
        if (v15 >= v14 >> 1)
          v16 = sub_1005B1AFC((_QWORD *)(v14 > 1), v15 + 1, 1, v5);
        v16[2] = v15 + 1;
        v5 = v16;
        v6 = &v16[9 * v15];
        v6[4] = v49;
        v6[5] = v12;
        v6[6] = v51;
        v6[7] = v11;
        v6[8] = v53;
        v6[9] = v10;
        v6[10] = v13;
        v6[11] = v9;
        *((_BYTE *)v6 + 96) = v7 & 1;
        *((_BYTE *)v6 + 97) = BYTE1(v7) & 1;
        *((_BYTE *)v6 + 98) = BYTE2(v7) & 1;
      }
      v4 += 9;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v47, 2);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v17 = v5[2];
  v18 = _swiftEmptyArrayStorage;
  v45 = v5;
  if (v17)
  {
    v19 = (char *)v5 + 98;
    do
    {
      v27 = *(_QWORD *)(v19 - 66);
      v28 = *(_QWORD *)(v19 - 58);
      v29 = *(_QWORD *)(v19 - 42);
      v30 = *(_QWORD *)(v19 - 26);
      v31 = *(void **)(v19 - 18);
      v32 = *(_QWORD *)(v19 - 10);
      if (v27 != 0x656C6C6F4377656ELL || v28 != 0xED00006E6F697463)
      {
        v50 = *v19;
        v52 = *(v19 - 1);
        v54 = *(v19 - 2);
        v46 = *(_QWORD *)(v19 - 34);
        v48 = *(_QWORD *)(v19 - 50);
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x656C6C6F4377656ELL, 0xED00006E6F697463, 0) & 1) == 0)
        {
          swift_bridgeObjectRetain(v28);
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v30);
          v33 = v31;
          swift_bridgeObjectRetain(v32);
          v55[0] = v18;
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
          {
            sub_100366DA0(0, v18[2] + 1, 1);
            v18 = (_QWORD *)v55[0];
          }
          v20 = v54;
          v21 = v52;
          v22 = v50;
          v24 = v18[2];
          v23 = v18[3];
          v25 = v18;
          if (v24 >= v23 >> 1)
          {
            sub_100366DA0(v23 > 1, v24 + 1, 1);
            v22 = v50;
            v21 = v52;
            v20 = v54;
            v25 = (_QWORD *)v55[0];
          }
          v25[2] = v24 + 1;
          v26 = &v25[9 * v24];
          v26[4] = v27;
          v26[5] = v28;
          v26[6] = v48;
          v26[7] = v29;
          v26[8] = v46;
          v26[9] = v30;
          v26[10] = v33;
          v26[11] = v32;
          *((_BYTE *)v26 + 96) = v20;
          *((_BYTE *)v26 + 97) = v21;
          *((_BYTE *)v26 + 98) = v22;
          v18 = v25;
        }
      }
      v19 += 72;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease(v45);
  v34 = v18[2];
  if (v34)
  {
    v56 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v34);
    sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
    v35 = v18 + 7;
    do
    {
      v36 = *(v35 - 3);
      v37 = *(v35 - 2);
      v38 = *(v35 - 1);
      v39 = *v35;
      v55[3] = &type metadata for String;
      v55[0] = v36;
      v55[1] = v37;
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRetain(v37);
      v40 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v38, v39, 0, 0, 0, 0, "books_internal_selectSidebarItem:", v55, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v41 = v56[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v41);
      v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v40);
      specialized ContiguousArray._endMutation()(v42);
      v35 += 9;
      --v34;
    }
    while (v34);
    v43 = v56;
    swift_release(v18);
  }
  else
  {
    swift_release(v18);
    return _swiftEmptyArrayStorage;
  }
  return v43;
}

_QWORD *sub_10042F914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v46[2];
  __int128 v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[3];

  v3 = type metadata accessor for Locale(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v50 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v49 = (char *)v46 - v6;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v48 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)v46 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v46[1] = v1;
    swift_bridgeObjectRetain(a1);
    v46[0] = a1;
    v13 = a1 + 48;
    v47 = xmmword_1007118F0;
    while (1)
    {
      v14 = *(_QWORD *)(v13 - 16);
      v15 = *(_QWORD *)(v13 - 8);
      v16 = *(_QWORD *)v13;
      v66 = *(_QWORD *)(v13 + 8);
      v17 = *(_QWORD *)(v13 + 16);
      v18 = *(_QWORD *)(v13 + 24);
      v19 = *(_QWORD *)(v13 + 32);
      v20 = *(_QWORD *)(v13 + 40);
      v21 = *(unsigned __int16 *)(v13 + 48) | (*(unsigned __int8 *)(v13 + 50) << 16);
      if (*(unsigned __int8 *)(v13 + 50) >> 6 == 1)
        break;
      if (!(*(unsigned __int8 *)(v13 + 50) >> 6))
      {
        v64 = *(_QWORD *)(v13 + 32);
        v65 = v20;
        swift_bridgeObjectRetain(v15);
        v22 = sub_10042F4B0(v14, v15);
        v23 = v17;
        v24 = v22;
        sub_10040927C(v14, v15, v16, v66, v23, v18, v64, v65, v21);
LABEL_9:
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
          v12 = sub_1005B19D0(0, v12[2] + 1, 1, v12);
        v44 = v12[2];
        v43 = v12[3];
        if (v44 >= v43 >> 1)
          v12 = sub_1005B19D0((_QWORD *)(v43 > 1), v44 + 1, 1, v12);
        v12[2] = v44 + 1;
        v12[v44 + 4] = v24;
      }
      v13 += 72;
      if (!--v11)
      {
        swift_bridgeObjectRelease(v46[0]);
        return v12;
      }
    }
    v58 = *(_QWORD *)(v13 + 16);
    v59 = v18;
    v64 = v19;
    v65 = v20;
    v25 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v57 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v57 + 16) = v47;
    v55 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
    swift_retain(v14);
    v26 = v61;
    v27 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
    v56 = v14;
    v28 = v49;
    static Locale.current.getter(v27);
    v29 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    v54 = v15;
    v30 = v48;
    v29(v48, v26, v63);
    v31 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v31);
    v33 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v60 = v12;
    v34 = v51;
    v35 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v36 = v50;
    v53 = v16;
    v37 = v52;
    v35(v50, v28, v52);
    v38 = String.init(localized:table:bundle:locale:comment:)(v30, 0, 0, v33, v36, "Search tab/sidebar item", 23, 2);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
    memset(v67, 0, 32);
    v12 = v60;
    v41 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v38, v40, 0, 0, 0, 0, "books_internal_selectSidebarSearch:", v67, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v42 = v57;
    *(_QWORD *)(v57 + 32) = v41;
    *(_QWORD *)&v67[0] = v42;
    specialized Array._endMutation()(v41);
    v24 = *(_QWORD **)&v67[0];
    sub_10040927C(v56, v54, v53, v66, v58, v59, v64, v65, v21);
    goto LABEL_9;
  }
  return v12;
}

void sub_10042FD4C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, "allObjects");
  v4 = sub_10004CFD4(&qword_1009E2F90);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  *a2 = v5;
}

id sub_10042FDB8(id *a1, uint64_t a2)
{
  return objc_msgSend(*a1, "addObject:", a2);
}

void sub_10042FDEC(double a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  id *v4;
  os_unfair_lock_s *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = (id *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_10042FD4C(v4, (uint64_t *)&v11);
  os_unfair_lock_unlock(v5);
  v6 = v11;
  if (!(v11 >> 62))
  {
    v7 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if ((v11 & 0x8000000000000000) != 0)
    v10 = v11;
  else
    v10 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v7 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_13;
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      }
      else
      {
        v9 = *(void **)(v6 + 8 * i + 32);
        swift_unknownObjectRetain(v9);
      }
      objc_msgSend(v9, "audiobookBuyButtonProgressDidChangeTo:", a1);
      swift_unknownObjectRelease(v9);
    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_10042FF08(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  id *v4;
  os_unfair_lock_s *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = (id *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_10042FD4C(v4, (uint64_t *)&v11);
  os_unfair_lock_unlock(v5);
  v6 = v11;
  if (!(v11 >> 62))
  {
    v7 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if ((v11 & 0x8000000000000000) != 0)
    v10 = v11;
  else
    v10 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v7 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_13;
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      }
      else
      {
        v9 = *(void **)(v6 + 8 * i + 32);
        swift_unknownObjectRetain(v9);
      }
      objc_msgSend(v9, "audiobookCoverWillChangeTo:", a1);
      swift_unknownObjectRelease(v9);
    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_100430024(char a1)
{
  sub_10043003C(a1, (SEL *)&selRef_audiobookIsStreamingDidChangeTo_);
}

void sub_100430030(char a1)
{
  sub_10043003C(a1, (SEL *)&selRef_audiobookPreorderStateChangedTo_);
}

void sub_10043003C(char a1, SEL *a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  id *v6;
  os_unfair_lock_s *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;

  v5 = *(os_unfair_lock_s **)(v2 + 16);
  v6 = (id *)&v5[4];
  v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_10042FD4C(v6, (uint64_t *)&v14);
  os_unfair_lock_unlock(v7);
  v8 = v14;
  if (!(v14 >> 62))
  {
    v9 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v8);
    return;
  }
  if ((v14 & 0x8000000000000000) != 0)
    v13 = v14;
  else
    v13 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v9 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v8);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    v11 = a1 & 1;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      }
      else
      {
        v12 = *(void **)(v8 + 8 * v10 + 32);
        swift_unknownObjectRetain(v12);
      }
      ++v10;
      objc_msgSend(v12, *a2, v11);
      swift_unknownObjectRelease(v12);
    }
    while (v9 != v10);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_10043015C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;
  id *v5;
  os_unfair_lock_s *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(os_unfair_lock_s **)(v2 + 16);
  v5 = (id *)&v4[4];
  v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_10042FD4C(v5, (uint64_t *)&v13);
  os_unfair_lock_unlock(v6);
  v7 = v13;
  if (v13 >> 62)
  {
    if ((v13 & 0x8000000000000000) != 0)
      v12 = v13;
    else
      v12 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (v8)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v7);
    return;
  }
  v8 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_16;
LABEL_3:
  if (v8 >= 1)
  {
    v9 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
        if (!a2)
          goto LABEL_11;
      }
      else
      {
        v11 = *(void **)(v7 + 8 * v9 + 32);
        swift_unknownObjectRetain(v11);
        if (!a2)
        {
LABEL_11:
          v10 = 0;
          goto LABEL_6;
        }
      }
      v10 = String._bridgeToObjectiveC()();
LABEL_6:
      ++v9;
      objc_msgSend(v11, "audiobookStoreIDDidChangeTo:", v10);
      swift_unknownObjectRelease(v11);

      if (v8 == v9)
        goto LABEL_16;
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for AudiobookNowPlayingSharedStateProvider()
{
  return objc_opt_self(_TtC5Books38AudiobookNowPlayingSharedStateProvider);
}

uint64_t UserCollectionEvent.collectionID.getter()
{
  uint64_t v0;

  return _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t _s5Books26UserCollectionReorderEventV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned __int8 v25;
  BOOL v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v32;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    do
    {
      v8 = *(_QWORD *)(a1 + v3 + 32);
      v9 = *(_QWORD *)(a1 + v3 + 40);
      v11 = *(_QWORD *)(a1 + v3 + 48);
      v10 = *(_QWORD *)(a1 + v3 + 56);
      v32 = *(_QWORD *)(a1 + v3 + 64);
      v12 = *(unsigned __int8 *)(a1 + v3 + 72);
      v13 = *(_QWORD *)(a2 + v3 + 32);
      v14 = *(_QWORD *)(a2 + v3 + 40);
      v15 = *(_QWORD *)(a2 + v3 + 48);
      v16 = *(_QWORD *)(a2 + v3 + 56);
      v29 = *(_QWORD *)(a2 + v3 + 64);
      v17 = *(unsigned __int8 *)(a2 + v3 + 72);
      if (v8 != v13 || v9 != v14)
      {
        v19 = *(_QWORD *)(a1 + v3 + 56);
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v13, v14, 0);
        v10 = v19;
        if ((v20 & 1) == 0)
          return 0;
      }
      if (v11 != v15 || v10 != v16)
      {
        v22 = v11;
        v23 = v10;
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v10, v15, v16, 0);
        v10 = v23;
        if ((v24 & 1) == 0)
          return 0;
      }
      if (v12 == 253)
      {
        v26 = v17 == 253;
      }
      else if (v12 == 254)
      {
        v26 = v17 == 254;
      }
      else
      {
        v25 = v17;
        if (v12 != 255)
        {
          if (v17 > 0xFC)
            return 0;
          v28 = v10;
          if ((v12 & 1) != 0)
          {
            if ((v17 & 1) == 0)
              return 0;
            swift_bridgeObjectRetain(v10);
            v4 = v32;
            sub_100409938(v32, v12);
            swift_bridgeObjectRetain(v9);
            swift_bridgeObjectRetain(v14);
            swift_bridgeObjectRetain(v16);
            v5 = v29;
            sub_100409938(v29, v25);
            v6 = sub_100430798(v32, v29);
          }
          else
          {
            if ((v17 & 1) != 0)
              return 0;
            swift_bridgeObjectRetain(v10);
            v4 = v32;
            sub_100409938(v32, v12);
            swift_bridgeObjectRetain(v9);
            swift_bridgeObjectRetain(v14);
            swift_bridgeObjectRetain(v16);
            v5 = v29;
            sub_100409938(v29, v25);
            v6 = sub_100430520(v32, v29);
          }
          v7 = v6;
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v14);
          sub_100409914(v5, v25);
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v9);
          sub_100409914(v4, v12);
          if ((v7 & 1) == 0)
            return 0;
          goto LABEL_8;
        }
        v26 = v17 == 255;
      }
      if (!v26)
      {
        sub_100409914(v32, v12);
        return 0;
      }
      sub_100409914(v32, v12);
LABEL_8:
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_100430520(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
LABEL_38:
    if (a2 < 0)
      v24 = a2;
    else
      v24 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a2);
    if (v6 == v25)
      goto LABEL_4;
    return 0;
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(a1);
  v7 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_38;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_47:
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_49;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_49:
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_21:
    v14 = v13;
    type metadata accessor for SwiftUIDragItem(0);
    v15 = static NSObject.== infix(_:_:)(v5, v14);

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v26)
        {
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = static NSObject.== infix(_:_:)(v22, v18);

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100430798(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
LABEL_38:
    if (a2 < 0)
      v24 = a2;
    else
      v24 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a2);
    if (v6 == v25)
      goto LABEL_4;
    return 0;
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(a1);
  v7 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_38;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_47:
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_49;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_49:
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_21:
    v14 = v13;
    sub_100009E04(0, (unint64_t *)&unk_1009E60E0, UIDragItem_ptr);
    v15 = static NSObject.== infix(_:_:)(v5, v14);

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v26)
        {
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = static NSObject.== infix(_:_:)(v22, v18);

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100430A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X9 }
  }
  return 1;
}

uint64_t sub_100430E40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  unsigned __int8 v10[120];
  unsigned __int8 v11[120];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_100386504(v3, (uint64_t)v11);
        sub_100386504(v4, (uint64_t)v10);
        v6 = sub_100385CAC(v11, v10);
        sub_100386538((uint64_t)v10);
        sub_100386538((uint64_t)v11);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v3 += 120;
        v4 += 120;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

BOOL sub_100430EFC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100430F68(uint64_t a1, uint64_t a2)
{
  return sub_100431210(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009E3080, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
}

uint64_t sub_100430F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
    __asm { BR              X9 }
  return 1;
}

uint64_t sub_1004311F4(uint64_t a1, uint64_t a2)
{
  return sub_100431210(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo, &qword_1009E3078, (uint64_t)&protocol conformance descriptor for SelectionInfo);
}

uint64_t sub_100431210(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  BOOL v30;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);

  v10 = a3(0);
  __chkstk_darwin(v10);
  v14.n128_f64[0] = __chkstk_darwin(v11);
  v16 = (char *)&v32 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 == *(_QWORD *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      v27 = 1;
    }
    else
    {
      v35 = v13;
      v36 = v12;
      v37 = a3;
      v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v32 = *(_QWORD *)(v12 + 72);
      v33 = a1;
      v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v19 = v17 - 1;
      v20 = v13;
      do
      {
        v21 = v34;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v34)(v16, a1 + v18, v10, v14);
        v22 = a2;
        v21(v20, a2 + v18, v10);
        v23 = a4;
        v24 = a4;
        v25 = a5;
        v26 = sub_100008DB0(v24, v37, a5);
        v27 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v20, v10, v26);
        v28 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v28(v20, v10);
        v28((uint64_t)v16, v10);
        v30 = v19-- != 0;
        if ((v27 & 1) == 0)
          break;
        v18 += v32;
        a5 = v25;
        a4 = v23;
        a2 = v22;
        a1 = v33;
      }
      while (v30);
    }
  }
  else
  {
    v27 = 0;
  }
  return v27 & 1;
}

uint64_t SidebarItemEvent.identifier.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t SidebarItemEvent.reason.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t SidebarItemEvent.isUserAction.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

void SidebarItemEvent.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  swift_bridgeObjectRetain(a3);
  String.hash(into:)(a1, a2, a3);
  swift_bridgeObjectRelease(a3);
  Hasher._combine(_:)(a4);
  Hasher._combine(_:)(HIBYTE(a4) & 1);
}

uint64_t static SidebarItemEvent.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t result;
  char v9;

  if (a1 == a4 && a2 == a5)
  {
    if (a6 != a3)
      return 0;
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  }
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
  result = 0;
  if ((v9 & 1) != 0 && a6 == a3)
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  return result;
}

Swift::Int SidebarItemEvent.hashValue.getter(uint64_t a1, uint64_t a2, __int16 a3)
{
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  swift_bridgeObjectRetain(a2);
  String.hash(into:)(v7, a1, a2);
  swift_bridgeObjectRelease(a2);
  Hasher._combine(_:)(a3);
  Hasher._combine(_:)(HIBYTE(a3) & 1);
  return Hasher._finalize()();
}

Swift::Int sub_100431558()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  Swift::UInt8 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  v4 = *((_BYTE *)v0 + 17);
  Hasher.init(_seed:)(v6, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_1004315E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  Swift::UInt8 v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((unsigned __int8 *)v1 + 16);
  v6 = *((_BYTE *)v1 + 17);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(v6);
}

Swift::Int sub_10043164C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  Swift::UInt8 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = *((unsigned __int8 *)v1 + 16);
  v5 = *((_BYTE *)v1 + 17);
  Hasher.init(_seed:)(v7, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v3);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t sub_1004316D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  char v12;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = *((unsigned __int8 *)a1 + 17);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(unsigned __int8 *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a2 + 17);
  if (v4 == *(_QWORD *)a2 && v5 == v8)
  {
    if (v6 != v9)
      return 0;
    return v7 ^ v10 ^ 1u;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v8, 0);
  result = 0;
  if ((v12 & 1) != 0 && v6 == v9)
    return v7 ^ v10 ^ 1u;
  return result;
}

BOOL static BuyButtonViewState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void BuyButtonViewState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int BuyButtonViewState.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

void SearchBarEvent.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a3);
    String.hash(into:)(a1, a2, a3);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(a4);
}

Swift::Int SearchBarEvent.hashValue.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  if (a2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v7, a1, a2);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(a3);
  return Hasher._finalize()();
}

Swift::Int sub_1004318D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v0;
  v1 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)(v5, 0);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v1);
    String.hash(into:)(v5, v2, v1);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_100431960(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t v6;

  v2 = v1;
  v4 = v2[1];
  v5 = *((unsigned __int8 *)v2 + 16);
  if (v4)
  {
    v6 = *v2;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v6, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v5);
}

Swift::Int sub_1004319D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v3 = *v1;
  v2 = v1[1];
  v4 = *((unsigned __int8 *)v1 + 16);
  Hasher.init(_seed:)(v6, a1);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v2);
    String.hash(into:)(v6, v3, v2);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_100431A5C(uint64_t a1, uint64_t a2)
{
  return _s5Books14SearchBarEventV23__derived_struct_equalsySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t UserCollectionEvent.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.uniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t UserCollectionEvent.reason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_100409938(v1, *(_BYTE *)(v0 + 40));
  return v1;
}

void UserCollectionEvent.Reason.DragItemType.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  Hasher._combine(_:)(a3 & 1);
  sub_10043287C(a1, a2);
}

uint64_t static UserCollectionEvent.Reason.DragItemType.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
      return sub_100430520(a1, a3);
    return 0;
  }
  if ((a4 & 1) == 0)
    return 0;
  return sub_100430798(a1, a3);
}

Swift::Int UserCollectionEvent.Reason.DragItemType.hashValue.getter(uint64_t a1, char a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  Hasher._combine(_:)(a2 & 1);
  sub_10043287C((uint64_t)v5, a1);
  return Hasher._finalize()();
}

Swift::Int sub_100431BB8()
{
  uint64_t v0;
  uint64_t v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(v2);
  sub_10043287C((uint64_t)v4, v1);
  return Hasher._finalize()();
}

void sub_100431C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + 8));
  sub_10043287C(a1, v3);
}

Swift::Int sub_100431C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(v3);
  sub_10043287C((uint64_t)v5, v2);
  return Hasher._finalize()();
}

uint64_t sub_100431CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      return sub_100430798(v4, v5);
    return 0;
  }
  if ((v6 & 1) != 0)
    return 0;
  return sub_100430520(v4, v5);
}

void UserCollectionEvent.Reason.hash(into:)(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  switch(a3)
  {
    case 0xFDu:
      Hasher._combine(_:)(2uLL);
      break;
    case 0xFEu:
      Hasher._combine(_:)(1uLL);
      break;
    case 0xFFu:
      Hasher._combine(_:)(0);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)((a3 & 1) != 0);
      sub_10043287C(a1, a2);
      break;
  }
}

uint64_t static UserCollectionEvent.Reason.__derived_enum_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  switch(a2)
  {
    case 0xFDu:
      return a4 == 253;
    case 0xFEu:
      return a4 == 254;
    case 0xFFu:
      return a4 == 255;
  }
  if (a4 > 0xFCu)
    return 0;
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0 && (sub_100430798(a1, a3) & 1) != 0)
      return 1;
  }
  else if ((a4 & 1) == 0 && (sub_100430520(a1, a3) & 1) != 0)
  {
    return 1;
  }
  return 0;
}

Swift::Int UserCollectionEvent.Reason.hashValue.getter(uint64_t a1, unsigned __int8 a2)
{
  int v3;
  _QWORD v5[9];

  v3 = a2;
  Hasher.init(_seed:)(v5, 0);
  switch(v3)
  {
    case 253:
      Hasher._combine(_:)(2uLL);
      break;
    case 254:
      Hasher._combine(_:)(1uLL);
      break;
    case 255:
      Hasher._combine(_:)(0);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)((v3 & 1) != 0);
      sub_10043287C((uint64_t)v5, a1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_100431EC8()
{
  uint64_t v0;

  return UserCollectionEvent.Reason.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_100431ED4(uint64_t a1)
{
  uint64_t v1;
  int v3;
  Swift::UInt v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(v1 + 8);
  switch(v3)
  {
    case 253:
      v4 = 2;
      goto LABEL_7;
    case 254:
      v4 = 1;
      goto LABEL_7;
    case 255:
      v4 = 0;
LABEL_7:
      Hasher._combine(_:)(v4);
      return;
  }
  v5 = *(_QWORD *)v1;
  Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)((v3 & 1) != 0);
  sub_10043287C(a1, v5);
}

Swift::Int sub_100431F68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  switch(v3)
  {
    case 253:
      Hasher._combine(_:)(2uLL);
      break;
    case 254:
      Hasher._combine(_:)(1uLL);
      break;
    case 255:
      Hasher._combine(_:)(0);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)((v3 & 1) != 0);
      sub_10043287C((uint64_t)v5, v2);
      break;
  }
  return Hasher._finalize()();
}

BOOL sub_100432014(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  switch(v2)
  {
    case 253:
      return v3 == 253;
    case 254:
      if (v3 == 254)
        return 1;
      break;
    case 255:
      return v3 == 255;
    default:
      if (v3 <= 0xFC)
      {
        v5 = *(_QWORD *)a1;
        v6 = *(_QWORD *)a2;
        if ((v2 & 1) != 0)
        {
          if ((v3 & 1) == 0 || (sub_100430798(v5, v6) & 1) == 0)
            return 0;
        }
        else if ((v3 & 1) != 0 || (sub_100430520(v5, v6) & 1) == 0)
        {
          return 0;
        }
        return 1;
      }
      break;
  }
  return 0;
}

void UserCollectionEvent.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  Swift::UInt v8;
  uint64_t v9;

  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = v1[2];
  v6 = v1[3];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = *((unsigned __int8 *)v1 + 40);
  switch(v7)
  {
    case 253:
      v8 = 2;
      goto LABEL_7;
    case 254:
      v8 = 1;
      goto LABEL_7;
    case 255:
      v8 = 0;
LABEL_7:
      Hasher._combine(_:)(v8);
      return;
  }
  v9 = v1[4];
  Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)((v7 & 1) != 0);
  swift_bridgeObjectRetain(v9);
  sub_10043287C(a1, v9);
  sub_100409914(v9, v7);
}

Swift::Int UserCollectionEvent.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  UserCollectionEvent.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1004321E0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  UserCollectionEvent.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100432218(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return _s5Books19UserCollectionEventV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t *)&v5, &v7) & 1;
}

double UserCollectionReorderEvent.hash(into:)(uint64_t a1, uint64_t a2)
{
  double result;

  swift_bridgeObjectRetain(a2);
  sub_100432518(a1, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  return result;
}

Swift::Int UserCollectionReorderEvent.hashValue.getter(uint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  swift_bridgeObjectRetain(a1);
  sub_100432518((uint64_t)v3, a1);
  swift_bridgeObjectRelease(a1);
  return Hasher._finalize()();
}

Swift::Int sub_1004322F4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  swift_bridgeObjectRetain(v1);
  sub_100432518((uint64_t)v3, v1);
  swift_bridgeObjectRelease(v1);
  return Hasher._finalize()();
}

double sub_100432348(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  double result;

  v3 = *v1;
  swift_bridgeObjectRetain(v3);
  sub_100432518(a1, v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

Swift::Int sub_100432380(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  swift_bridgeObjectRetain(v2);
  sub_100432518((uint64_t)v4, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

uint64_t sub_1004323D0(uint64_t *a1, uint64_t *a2)
{
  return _s5Books26UserCollectionReorderEventV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1004323DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v1 = sub_10004CFD4(&qword_1009E3088);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[2];
  v6 = type metadata accessor for SidebarViewModel(0);
  v7 = sub_100008DB0(&qword_1009D3440, type metadata accessor for SidebarViewModel, (uint64_t)&protocol conformance descriptor for SidebarViewModel);
  swift_retain(v4);
  swift_retain(v5);
  v9 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  v11 = v10;
  v12 = static SafeAreaRegions.all.getter(v9);
  v14 = static Edge.Set.all.getter(v13);
  *(_QWORD *)v3 = v4;
  *((_QWORD *)v3 + 1) = v9;
  *((_QWORD *)v3 + 2) = v11;
  *((_QWORD *)v3 + 3) = v12;
  v3[32] = v14;
  swift_storeEnumTagMultiPayload(v3, v1, 1);
  v15 = sub_10004CFD4(&qword_1009E3090);
  v16 = sub_10004CFD4(&qword_1009E3098);
  v17 = sub_100433E14();
  v18 = sub_100433E60();
  return _ConditionalContent<>.init(storage:)(v3, v15, v16, v17, v18);
}

void sub_100432518(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  uint64_t j;
  uint64_t v19;
  Swift::UInt v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  void **v24;
  void *v25;
  id v26;
  void **v27;
  void *v28;
  id v29;
  Swift::UInt v30;
  Swift::UInt v31;
  uint64_t v32;

  v4 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (!v4)
    return;
  v5 = 0;
  v6 = a2 + 32;
  v32 = a2 + 32;
  while (1)
  {
    v8 = (uint64_t *)(v6 + 48 * v5);
    v10 = v8[3];
    v9 = v8[4];
    v11 = *((unsigned __int8 *)v8 + 40);
    v13 = v8[1];
    v12 = v8[2];
    v14 = *v8;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v10);
    sub_100409938(v9, v11);
    String.hash(into:)(a1, v14, v13);
    swift_bridgeObjectRetain(v10);
    String.hash(into:)(a1, v12, v10);
    swift_bridgeObjectRelease(v10);
    if (v11 == 253)
    {
      v7 = 2;
      goto LABEL_4;
    }
    if (v11 == 254)
    {
      v7 = 1;
      goto LABEL_4;
    }
    if (v11 != 255)
      break;
    v7 = 0;
LABEL_4:
    Hasher._combine(_:)(v7);
LABEL_5:
    ++v5;
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v13);
    sub_100409914(v9, v11);
    if (v5 == v4)
      return;
  }
  Hasher._combine(_:)(3uLL);
  v15 = v9 & 0xFFFFFFFFFFFFFF8;
  if ((v11 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v15 = v9;
      swift_bridgeObjectRetain_n(v9, 2);
      v31 = _CocoaArrayWrapper.endIndex.getter(v15);
      sub_100409914(v9, v11);
      Hasher._combine(_:)(v31);
      swift_bridgeObjectRetain(v9);
      v21 = _CocoaArrayWrapper.endIndex.getter(v15);
      sub_100409914(v9, v11);
      if (!v21)
      {
LABEL_39:
        sub_100409914(v9, v11);
        goto LABEL_5;
      }
    }
    else
    {
      v20 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v9);
      Hasher._combine(_:)(v20);
      v21 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v21)
        goto LABEL_39;
    }
    if (v21 < 1)
      goto LABEL_42;
    if ((v9 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v21; ++i)
      {
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
        NSObject.hash(into:)(a1);
        swift_unknownObjectRelease(v23);
      }
    }
    else
    {
      v27 = (void **)(v9 + 32);
      do
      {
        v28 = *v27++;
        v29 = v28;
        NSObject.hash(into:)(a1);

        --v21;
      }
      while (v21);
    }
    goto LABEL_31;
  }
  Hasher._combine(_:)(0);
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v15 = v9;
    swift_bridgeObjectRetain_n(v9, 2);
    v30 = _CocoaArrayWrapper.endIndex.getter(v15);
    sub_100409914(v9, v11);
    Hasher._combine(_:)(v30);
    swift_bridgeObjectRetain(v9);
    v17 = _CocoaArrayWrapper.endIndex.getter(v15);
    sub_100409914(v9, v11);
    if (!v17)
      goto LABEL_39;
  }
  else
  {
    v16 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    Hasher._combine(_:)(v16);
    v17 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v17)
      goto LABEL_39;
  }
  if (v17 >= 1)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v17; ++j)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v9);
        NSObject.hash(into:)(a1);
        swift_unknownObjectRelease(v19);
      }
    }
    else
    {
      v24 = (void **)(v9 + 32);
      do
      {
        v25 = *v24++;
        v26 = v25;
        NSObject.hash(into:)(a1);

        --v17;
      }
      while (v17);
    }
LABEL_31:
    sub_100409914(v9, v11);
    v6 = v32;
    goto LABEL_5;
  }
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_10043287C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;
  Swift::UInt v11;

  if (!((unint64_t)a2 >> 62))
  {
    Hasher._combine(_:)(*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10));
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return;
    goto LABEL_3;
  }
  if (a2 < 0)
    v10 = a2;
  else
    v10 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a2);
  Hasher._combine(_:)(v11);
  swift_bridgeObjectRetain(a2);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a2);
  if (v4)
  {
LABEL_3:
    if (v4 < 1)
    {
      __break(1u);
    }
    else if ((a2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
        NSObject.hash(into:)(a1);
        swift_unknownObjectRelease(v6);
      }
    }
    else
    {
      v7 = (void **)(a2 + 32);
      do
      {
        v8 = *v7++;
        v9 = v8;
        NSObject.hash(into:)(a1);

        --v4;
      }
      while (v4);
    }
  }
}

BOOL _s5Books14SearchBarEventV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v8;
  _BOOL8 result;

  if (!a2)
  {
    if (!a5)
      return a3 == a6;
    return 0;
  }
  if (!a5)
    return 0;
  if (a1 == a4 && a2 == a5)
    return a3 == a6;
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
  result = 0;
  if ((v8 & 1) != 0)
    return a3 == a6;
  return result;
}

uint64_t _s5Books19UserCollectionEventV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17[2];
  uint64_t v18[2];
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21[2];
  uint64_t v22;
  char v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26[2];
  uint64_t v27;
  unsigned __int8 v28;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      sub_100433F10(a1 + 4, (uint64_t)v18);
      sub_100433F10(a2 + 4, (uint64_t)v17);
      sub_100433F10(v18, (uint64_t)&v19);
      if (v20 == 253)
      {
        sub_100433F10(v17, (uint64_t)&v27);
        if (v28 == 253)
          return 1;
      }
      else
      {
        if (v20 != 254)
        {
          if (v20 == 255)
          {
            sub_100433F10(v17, (uint64_t)&v27);
            if (v28 == 255)
              return 1;
          }
          else
          {
            sub_100433F10(&v19, (uint64_t)v21);
            sub_100433F10(v17, (uint64_t)&v24);
            if (v25 <= 0xFCu)
            {
              sub_100433F10(&v24, (uint64_t)v26);
              sub_100433F10(v21, (uint64_t)&v22);
              v16 = v22;
              if ((v23 & 1) != 0)
              {
                sub_100433F10(v26, (uint64_t)&v27);
                if ((v28 & 1) != 0 && (sub_100430798(v16, v27) & 1) != 0)
                  return 1;
              }
              else
              {
                sub_100433F10(v26, (uint64_t)&v27);
                if ((v28 & 1) == 0 && (sub_100430520(v16, v27) & 1) != 0)
                  return 1;
              }
            }
          }
          return 0;
        }
        sub_100433F10(v17, (uint64_t)&v27);
        if (v28 == 254)
          return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_100432BA8()
{
  unint64_t result;

  result = qword_1009E2F98;
  if (!qword_1009E2F98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SidebarItemEvent.Reason, &type metadata for SidebarItemEvent.Reason);
    atomic_store(result, (unint64_t *)&qword_1009E2F98);
  }
  return result;
}

unint64_t sub_100432BF0()
{
  unint64_t result;

  result = qword_1009E2FA0;
  if (!qword_1009E2FA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SidebarItemEvent, &type metadata for SidebarItemEvent);
    atomic_store(result, (unint64_t *)&qword_1009E2FA0);
  }
  return result;
}

unint64_t sub_100432C38()
{
  unint64_t result;

  result = qword_1009E2FA8;
  if (!qword_1009E2FA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchBarEvent.Reason, &type metadata for SearchBarEvent.Reason);
    atomic_store(result, (unint64_t *)&qword_1009E2FA8);
  }
  return result;
}

unint64_t sub_100432C80()
{
  unint64_t result;

  result = qword_1009E2FB0;
  if (!qword_1009E2FB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchBarEvent, &type metadata for SearchBarEvent);
    atomic_store(result, (unint64_t *)&qword_1009E2FB0);
  }
  return result;
}

unint64_t sub_100432CC8()
{
  unint64_t result;

  result = qword_1009E2FB8;
  if (!qword_1009E2FB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UserCollectionEvent.Reason.DragItemType, &type metadata for UserCollectionEvent.Reason.DragItemType);
    atomic_store(result, (unint64_t *)&qword_1009E2FB8);
  }
  return result;
}

unint64_t sub_100432D10()
{
  unint64_t result;

  result = qword_1009E2FC0;
  if (!qword_1009E2FC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UserCollectionEvent.Reason, &type metadata for UserCollectionEvent.Reason);
    atomic_store(result, (unint64_t *)&qword_1009E2FC0);
  }
  return result;
}

unint64_t sub_100432D58()
{
  unint64_t result;

  result = qword_1009E2FC8;
  if (!qword_1009E2FC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UserCollectionEvent, &type metadata for UserCollectionEvent);
    atomic_store(result, (unint64_t *)&qword_1009E2FC8);
  }
  return result;
}

unint64_t sub_100432DA0()
{
  unint64_t result;

  result = qword_1009E2FD0[0];
  if (!qword_1009E2FD0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UserCollectionReorderEvent, &type metadata for UserCollectionReorderEvent);
    atomic_store(result, qword_1009E2FD0);
  }
  return result;
}

uint64_t sub_100432DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

void sub_100432DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, char a7)
{
  switch(a7)
  {
    case 1:
    case 2:
    case 3:
      a1 = a2;
      goto LABEL_3;
    case 4:
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRetain(a4);
      sub_100409938(a5, a6);
      break;
    case 5:
LABEL_3:
      swift_bridgeObjectRetain(a1);
      break;
    default:
      return;
  }
}

void sub_100432E68(uint64_t a1)
{
  sub_100432E84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), *(_BYTE *)(a1 + 41));
}

void sub_100432E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, char a7)
{
  switch(a7)
  {
    case 1:
    case 2:
    case 3:
      a1 = a2;
      goto LABEL_3;
    case 4:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a4);
      sub_100409914(a5, a6);
      break;
    case 5:
LABEL_3:
      swift_bridgeObjectRelease(a1);
      break;
    default:
      return;
  }
}

uint64_t sub_100432F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 41);
  v9 = *(_BYTE *)(a2 + 40);
  sub_100432DEC(*(_QWORD *)a2, v4, v5, v6, v7, v9, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 41) = v8;
  return a1;
}

uint64_t sub_100432F80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 41);
  v9 = *(_BYTE *)(a2 + 40);
  sub_100432DEC(*(_QWORD *)a2, v4, v5, v6, v7, v9, v8);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v15 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  v16 = *(_BYTE *)(a1 + 41);
  *(_BYTE *)(a1 + 41) = v8;
  sub_100432E84(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 sub_100433018(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10043302C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_WORD *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 41);
  v12 = *(_BYTE *)(a1 + 40);
  *(_WORD *)(a1 + 40) = v4;
  sub_100432E84(v5, v7, v6, v8, v9, v12, v11);
  return a1;
}

uint64_t sub_100433080(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 41);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1004330C8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = -(char)a2;
  }
  return result;
}

uint64_t sub_100433118(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 41) <= 5u)
    return *(unsigned __int8 *)(a1 + 41);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_100433130(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_BYTE *)(result + 40) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 41) = a2;
  return result;
}

uint64_t type metadata accessor for SidebarViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SidebarViewEvent);
}

uint64_t sub_100433168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SidebarItemEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for SidebarItemEvent(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SidebarItemEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarItemEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarItemEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarItemEvent()
{
  return &type metadata for SidebarItemEvent;
}

uint64_t storeEnumTagSinglePayload for SidebarItemEvent.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100433334 + 4 * byte_100723F63[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100433368 + 4 * byte_100723F5E[v4]))();
}

uint64_t sub_100433368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100433370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100433378);
  return result;
}

uint64_t sub_100433384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10043338CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100433390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100433398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarItemEvent.Reason()
{
  return &type metadata for SidebarItemEvent.Reason;
}

uint64_t sub_1004333B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SearchBarEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SearchBarEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchBarEvent(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchBarEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchBarEvent()
{
  return &type metadata for SearchBarEvent;
}

uint64_t storeEnumTagSinglePayload for SearchBarEvent.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100433588 + 4 * byte_100723F6D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1004335BC + 4 * byte_100723F68[v4]))();
}

uint64_t sub_1004335BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004335C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004335CCLL);
  return result;
}

uint64_t sub_1004335D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004335E0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1004335E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004335EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchBarEvent.Reason()
{
  return &type metadata for SearchBarEvent.Reason;
}

uint64_t destroy for UserCollectionEvent(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFCu)
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return result;
}

uint64_t initializeWithCopy for UserCollectionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unsigned int v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = (uint64_t *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  if (v6 <= 0xFC)
  {
    v7 = *v5;
    *(_QWORD *)(a1 + 32) = *v5;
    *(_BYTE *)(a1 + 40) = v6 & 1;
    swift_bridgeObjectRetain(v7);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *v5;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)v5 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for UserCollectionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (uint64_t *)(a1 + 32);
  v9 = (uint64_t *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFCu)
  {
    if (v10 <= 0xFC)
    {
      v14 = *v9;
      v15 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v9;
      *(_BYTE *)(a1 + 40) = v10 & 1;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v15);
    }
    else
    {
      sub_1001FC120((_QWORD *)(a1 + 32));
      v12 = *(_BYTE *)(a2 + 40);
      *v8 = *v9;
      *(_BYTE *)(a1 + 40) = v12;
    }
  }
  else if (v10 <= 0xFC)
  {
    v13 = *v9;
    *(_QWORD *)(a1 + 32) = *v9;
    *(_BYTE *)(a1 + 40) = v10 & 1;
    swift_bridgeObjectRetain(v13);
  }
  else
  {
    v11 = *v9;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *v8 = v11;
  }
  return a1;
}

uint64_t assignWithTake for UserCollectionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned int v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = (_QWORD *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFCu)
  {
    v9 = *(unsigned __int8 *)(a2 + 40);
    if (v9 <= 0xFC)
    {
      v10 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v8;
      *(_BYTE *)(a1 + 40) = v9 & 1;
      swift_bridgeObjectRelease(v10);
      return a1;
    }
    sub_1001FC120((_QWORD *)(a1 + 32));
  }
  *(_QWORD *)(a1 + 32) = *v8;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserCollectionEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserCollectionEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserCollectionEvent()
{
  return &type metadata for UserCollectionEvent;
}

uint64_t destroy for UserCollectionEvent.Reason(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 8) <= 1u)
    return swift_bridgeObjectRelease(*(_QWORD *)result);
  return result;
}

uint64_t _s5Books19UserCollectionEventV6ReasonOwCP_0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;

  v3 = *((unsigned __int8 *)a2 + 8);
  if (v3 > 1)
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  }
  else
  {
    v4 = *a2;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v3 != 0;
    swift_bridgeObjectRetain(v4);
  }
  return a1;
}

uint64_t *assignWithCopy for UserCollectionEvent.Reason(uint64_t *a1, uint64_t *a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned __int8 *)a1 + 8) > 1u)
  {
    if (v4 <= 1)
    {
      v7 = *a2;
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = v4 != 0;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    v8 = *a2;
    *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
    *a1 = v8;
    return a1;
  }
  if (v4 > 1)
  {
    swift_bridgeObjectRelease(*a1);
    goto LABEL_7;
  }
  v5 = *a2;
  v6 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4 != 0;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t *assignWithTake for UserCollectionEvent.Reason(uint64_t *a1, uint64_t *a2)
{
  unsigned int v4;
  uint64_t v5;

  if (*((unsigned __int8 *)a1 + 8) > 1u)
    goto LABEL_5;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (v4 > 1)
  {
    swift_bridgeObjectRelease(*a1);
LABEL_5:
    *a1 = *a2;
    *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
    return a1;
  }
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4 != 0;
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserCollectionEvent.Reason(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 > 1)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 4)
    return v4 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UserCollectionEvent.Reason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -3 - a2;
  }
  return result;
}

uint64_t sub_100433B2C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 8);
  if (v1 > 1)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_100433B40(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserCollectionEvent.Reason()
{
  return &type metadata for UserCollectionEvent.Reason;
}

uint64_t initializeBufferWithCopyOfBuffer for UserCollectionEvent.Reason.DragItemType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for UserCollectionEvent.Reason.DragItemType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t *assignWithTake for UserCollectionEvent.Reason.DragItemType(uint64_t *a1, uint64_t *a2)
{
  char v3;
  uint64_t v4;

  v3 = *((_BYTE *)a2 + 8);
  v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserCollectionEvent.Reason.DragItemType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserCollectionEvent.Reason.DragItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100433CB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100433CB8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UserCollectionEvent.Reason.DragItemType()
{
  return &type metadata for UserCollectionEvent.Reason.DragItemType;
}

ValueMetadata *type metadata accessor for UserCollectionReorderEvent()
{
  return &type metadata for UserCollectionReorderEvent;
}

uint64_t destroy for SidebarView(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[2]);
}

uint64_t *_s5Books11SidebarViewVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for SidebarView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

uint64_t *assignWithTake for SidebarView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for SidebarView()
{
  return &type metadata for SidebarView;
}

uint64_t sub_100433E04(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008711E4, 1);
}

unint64_t sub_100433E14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E30A0;
  if (!qword_1009E30A0)
  {
    v1 = sub_100030B74(&qword_1009E3090);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E30A0);
  }
  return result;
}

unint64_t sub_100433E60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E30A8;
  if (!qword_1009E30A8)
  {
    v1 = sub_100030B74(&qword_1009E3098);
    sub_100433ECC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E30A8);
  }
  return result;
}

unint64_t sub_100433ECC()
{
  unint64_t result;

  result = qword_1009E30B0;
  if (!qword_1009E30B0)
  {
    result = swift_getWitnessTable(&unk_1007282A8, &type metadata for SidebarCollectionView);
    atomic_store(result, (unint64_t *)&qword_1009E30B0);
  }
  return result;
}

uint64_t sub_100433F10(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

unint64_t sub_100433F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E30B8;
  if (!qword_1009E30B8)
  {
    v1 = sub_100030B74(&qword_1009E30C0);
    sub_100433E14();
    sub_100433E60();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E30B8);
  }
  return result;
}

double KeyboardAvoidance.beginFrame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double KeyboardAvoidance.endFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double KeyboardAvoidance.animationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t PageSnapshotLoader.pageIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t KeyboardAvoidance.local.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t KeyboardAvoidance.animationOptions.getter()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = *(_QWORD *)(v0 + 72) << 16;
  if (result < 0)
  {
    v2 = 2;
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v2, 3451, 0);
    __break(1u);
  }
  return result;
}

uint64_t KeyboardAvoidance.init(notification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[88];

  sub_100434450(a1, (uint64_t)v4);
  return sub_10043490C((uint64_t)v4, a2);
}

void KeyboardAvoidance.additionalSafeAreaInsets(for:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  double v5;
  id v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double Height;
  double MinY;
  char v24;
  CGRect v25;
  CGRect v26;

  v5 = 0.0;
  if (!objc_msgSend(a1, "isViewLoaded")
    || (v6 = objc_msgSend(a1, "view")) == 0)
  {
    v24 = 1;
LABEL_8:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(double *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 32) = v24;
    return;
  }
  v7 = v6;
  objc_msgSend(v6, "convertRect:fromView:", 0, v2[4], v2[5], v2[6], v2[7]);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = objc_msgSend(a1, "view");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "safeAreaInsets");
    v19 = v18;

    objc_msgSend(a1, "additionalSafeAreaInsets");
    v21 = v19 - v20;
    objc_msgSend(v7, "frame");
    Height = CGRectGetHeight(v25);
    v26.origin.x = v9;
    v26.origin.y = v11;
    v26.size.width = v13;
    v26.size.height = v15;
    MinY = CGRectGetMinY(v26);

    v24 = 0;
    if (Height - MinY - v21 < 0.0)
      v5 = 0.0;
    else
      v5 = Height - MinY - v21;
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t static KeyboardAvoidance.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;

  if (CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2)
    && CGRectEqualToRect(*(CGRect *)(a1 + 32), *(CGRect *)(a2 + 32))
    && *(double *)(a1 + 64) == *(double *)(a2 + 64)
    && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72))
  {
    v4 = ((*(_BYTE *)(a1 + 80) & 1) == 0) ^ *(_BYTE *)(a2 + 80);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100434258(uint64_t a1, uint64_t a2)
{
  CGFloat v2;
  double v3;
  CGFloat v4;
  uint64_t v5;
  int v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  CGFloat v15;
  CGFloat v16;
  CGRect v17;
  CGRect v18;

  v2 = *(double *)(a1 + 48);
  v15 = *(double *)(a1 + 40);
  v16 = *(double *)(a1 + 32);
  v4 = *(double *)(a1 + 56);
  v3 = *(double *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(unsigned __int8 *)(a1 + 80);
  v7 = *(double *)(a2 + 32);
  v8 = *(double *)(a2 + 40);
  v9 = *(double *)(a2 + 48);
  v10 = *(double *)(a2 + 56);
  v11 = *(double *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(unsigned __int8 *)(a2 + 80);
  result = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  if ((_DWORD)result)
  {
    v17.origin.y = v15;
    v17.origin.x = v16;
    v17.size.width = v2;
    v17.size.height = v4;
    v18.origin.x = v7;
    v18.origin.y = v8;
    v18.size.width = v9;
    v18.size.height = v10;
    result = CGRectEqualToRect(v17, v18);
    if ((_DWORD)result)
    {
      result = 0;
      if (v3 == v11)
      {
        if (v5 == v12)
          return v6 ^ v13 ^ 1u;
        else
          return 0;
      }
    }
  }
  return result;
}

uint64_t KeyboardObserver.update.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain(a3);
  return a2;
}

uint64_t sub_100434360(uint64_t a1, uint64_t (*a2)(uint64_t, _OWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[88];
  _OWORD v14[5];
  char v15;
  _OWORD v16[5];
  char v17;

  v7 = type metadata accessor for Notification(0);
  v8 = __chkstk_darwin(v7);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, double))(v11 + 16))(v10, a1, v8);
  sub_100434450((uint64_t)v10, (uint64_t)v13);
  result = sub_10043490C((uint64_t)v13, (uint64_t)v14);
  if (v15 != 2)
  {
    v16[2] = v14[2];
    v16[3] = v14[3];
    v16[4] = v14[4];
    v17 = v15;
    v16[0] = v14[0];
    v16[1] = v14[1];
    return a2(a4, v16);
  }
  return result;
}

uint64_t sub_100434450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  float v35;
  float v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  unsigned __int8 v48;
  double v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _BYTE v55[40];
  __int128 v56;
  __int128 v57;

  v4 = Notification.userInfo.getter();
  if (!v4)
    goto LABEL_32;
  v5 = v4;
  v53 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameBeginUserInfoKey);
  v54 = v6;
  AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v7 = sub_1000561E8((uint64_t)v55), (v8 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1000569AC((uint64_t)v55);
  if (!*((_QWORD *)&v57 + 1))
    goto LABEL_29;
  v9 = sub_100009E04(0, &qword_1009E30D8, NSValue_ptr);
  if ((swift_dynamicCast(&v53, &v56, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
    goto LABEL_31;
  v10 = v53;
  objc_msgSend(v53, "CGRectValue");
  v52 = v11;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v53 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v54 = v18;
  AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v19 = sub_1000561E8((uint64_t)v55), (v20 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v19, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1000569AC((uint64_t)v55);
  if (!*((_QWORD *)&v57 + 1))
    goto LABEL_29;
  if ((swift_dynamicCast(&v53, &v56, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
    goto LABEL_31;
  v21 = v53;
  objc_msgSend(v53, "CGRectValue");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v53 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationDurationUserInfoKey);
  v54 = v30;
  AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v31 = sub_1000561E8((uint64_t)v55), (v32 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v31, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1000569AC((uint64_t)v55);
  if (!*((_QWORD *)&v57 + 1))
    goto LABEL_29;
  v33 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  if ((swift_dynamicCast(&v53, &v56, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease(v5);
    goto LABEL_32;
  }
  v34 = v53;
  objc_msgSend(v53, "floatValue");
  v36 = v35;

  v53 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationCurveUserInfoKey);
  v54 = v37;
  AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v38 = sub_1000561E8((uint64_t)v55), (v39 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v38, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  sub_1000569AC((uint64_t)v55);
  if (!*((_QWORD *)&v57 + 1))
  {
LABEL_29:
    swift_bridgeObjectRelease(v5);
LABEL_30:
    sub_10004A7B8((uint64_t)&v56);
    goto LABEL_32;
  }
  if ((swift_dynamicCast(&v53, &v56, (char *)&type metadata for Any + 8, v33, 6) & 1) == 0)
    goto LABEL_31;
  v40 = v53;
  v41 = objc_msgSend(v53, "integerValue");

  v53 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardIsLocalUserInfoKey);
  v54 = v42;
  AnyHashable.init<A>(_:)(&v53, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v43 = sub_1000561E8((uint64_t)v55), (v44 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v43, (uint64_t)&v56);
  }
  else
  {
    v56 = 0u;
    v57 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  sub_1000569AC((uint64_t)v55);
  if (!*((_QWORD *)&v57 + 1))
    goto LABEL_30;
  if ((swift_dynamicCast(&v53, &v56, (char *)&type metadata for Any + 8, v33, 6) & 1) != 0)
  {
    v50 = v53;
    v48 = objc_msgSend(v53, "BOOLValue");

    v49 = v36;
    v51 = type metadata accessor for Notification(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(a1, v51);
    v47 = v52;
    goto LABEL_33;
  }
LABEL_32:
  v45 = type metadata accessor for Notification(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(a1, v45);
  v41 = 0;
  v47 = 0;
  v13 = 0;
  v48 = 2;
  v15 = 0;
  v17 = 0;
  v23 = 0;
  v25 = 0;
  v27 = 0;
  v29 = 0;
  v49 = 0.0;
LABEL_33:
  *(_QWORD *)a2 = v47;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v25;
  *(_QWORD *)(a2 + 48) = v27;
  *(_QWORD *)(a2 + 56) = v29;
  *(double *)(a2 + 64) = v49;
  *(_QWORD *)(a2 + 72) = v41;
  *(_BYTE *)(a2 + 80) = v48;
  return result;
}

uint64_t sub_10043490C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E30C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _s5Books16KeyboardObserverV7options6updateACShyAC6OptionOG_yAG_AA0B9AvoidanceVtctcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  void *v29;

  v28 = a2;
  v5 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = &_swiftEmptySetSingleton;
  v9 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v27 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  v13 = 0;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v23 >= v27)
      goto LABEL_21;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v13;
    if (!v24)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v27)
        goto LABEL_21;
      v24 = *(_QWORD *)(v26 + 8 * v13);
      if (!v24)
      {
        v13 = v23 + 2;
        if (v23 + 2 >= v27)
          goto LABEL_21;
        v24 = *(_QWORD *)(v26 + 8 * v13);
        if (!v24)
          break;
      }
    }
LABEL_20:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_5:
    v16 = *(char *)(*(_QWORD *)(a1 + 48) + v15);
    v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v18 = *(id *)*(&off_100906158 + v16);
    NSNotificationCenter.publisher(for:object:)(v18, 0);

    v19 = swift_allocObject(&unk_100906140, 33, 7);
    *(_QWORD *)(v19 + 16) = v28;
    *(_QWORD *)(v19 + 24) = a3;
    *(_BYTE *)(v19 + 32) = v16;
    v20 = sub_100008C8C();
    swift_retain(a3);
    v21 = Publisher<>.sink(receiveValue:)(sub_100434F48, v19, v5, v20);
    v22 = swift_release(v19);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v22);
    AnyCancellable.store(in:)(&v29);
    swift_release(v21);
  }
  v25 = v23 + 3;
  if (v25 >= v27)
  {
LABEL_21:
    swift_release(a1);
    swift_release(a3);
    return;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v13 = v25;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v13 >= v27)
      goto LABEL_21;
    v24 = *(_QWORD *)(v26 + 8 * v13);
    ++v25;
    if (v24)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
}

unint64_t sub_100434C04()
{
  unint64_t result;

  result = qword_1009E30D0;
  if (!qword_1009E30D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for KeyboardObserver.Option, &type metadata for KeyboardObserver.Option);
    atomic_store(result, (unint64_t *)&qword_1009E30D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for KeyboardAvoidance(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 80);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardAvoidance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardAvoidance()
{
  return &type metadata for KeyboardAvoidance;
}

uint64_t destroy for KeyboardObserver(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_release(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t initializeWithCopy for KeyboardObserver(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for KeyboardObserver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for KeyboardObserver(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  swift_release(a1[2]);
  v4 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardObserver()
{
  return &type metadata for KeyboardObserver;
}

uint64_t storeEnumTagSinglePayload for KeyboardObserver.Option(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100434EA4 + 4 * byte_100724415[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100434ED8 + 4 * byte_100724410[v4]))();
}

uint64_t sub_100434ED8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100434EE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100434EE8);
  return result;
}

uint64_t sub_100434EF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100434EFCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100434F00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100434F08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyboardObserver.Option()
{
  return &type metadata for KeyboardObserver.Option;
}

uint64_t sub_100434F24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100434F48(uint64_t a1)
{
  uint64_t v1;

  return sub_100434360(a1, *(uint64_t (**)(uint64_t, _OWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t EngagementManagerAnalyticsHelper.allProperties.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_allProperties));
}

uint64_t EngagementManagerAnalyticsHelper.standardProperties.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_standardProperties));
}

uint64_t EngagementManagerAnalyticsHelper.sampleCapableProperties.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_sampleCapableProperties));
}

void EngagementManagerAnalyticsHelper.collectLocalSignalsAnalytics(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  id *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  double v28;
  unint64_t v29;
  int v30;
  double v31;
  unint64_t v32;
  int v33;
  double v34;
  unint64_t v35;
  char v36;
  double v37;
  unint64_t v38;
  int v39;
  double v40;
  unint64_t v41;
  int v42;
  double v43;
  unint64_t v44;
  int v45;
  double v46;
  unint64_t v47;
  char v48;
  double v49;
  unint64_t v50;
  int v51;
  double v52;
  unint64_t v53;
  int v54;
  double v55;
  unint64_t v56;
  int v57;
  double v58;
  unint64_t v59;
  char v60;
  double v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  double v65;
  unint64_t v66;
  int v67;
  double v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  double v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  double v80;
  char *v81;
  uint64_t ErrorValue;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  double v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  int v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  char *v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  int v156;
  int v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178[24];
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182[8];
  char v183[24];
  char v184[24];
  char v185[24];
  char v186[32];

  v1 = type metadata accessor for Date(0);
  v169 = *(_QWORD *)(v1 - 8);
  v170 = v1;
  __chkstk_darwin(v1);
  v168 = (char *)&v125 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v166 = (uint64_t)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v125 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v125 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v125 - v12;
  v14 = type metadata accessor for UserEventStorageData(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((BATracker.optedIn.getter(v18) & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager);
    if (Strong)
    {
      v20 = (void *)Strong;
      v21 = (id *)(Strong + OBJC_IVAR___BKEngagementManager_metadata);
      swift_beginAccess(Strong + OBJC_IVAR___BKEngagementManager_metadata, v186, 0, 0);
      v22 = (char *)*v21;

      v167 = v22;
      v23 = &v22[OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts];
      swift_beginAccess(&v22[OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts], v185, 0, 0);
      v24 = *(_QWORD *)v23;
      v25 = *(_QWORD *)(v24 + 16);
      swift_bridgeObjectRetain(v24);
      if (v25)
      {
        v26 = sub_10004CE80(0xD000000000000019, 0x80000001007C97E0);
        if ((v27 & 1) != 0)
        {
          v28 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v26) / 5.0) * 5.0;
          if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
          {
LABEL_169:
            __break(1u);
            goto LABEL_170;
          }
          if (v28 <= -9.22337204e18)
          {
LABEL_170:
            __break(1u);
            goto LABEL_171;
          }
          if (v28 >= 9.22337204e18)
          {
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }
          v25 = (uint64_t)v28;
        }
        else
        {
          v25 = 0;
        }
        v165 = v27 ^ 1;
        if (*(_QWORD *)(v24 + 16))
        {
          v29 = sub_10004CE80(0xD000000000000012, 0x80000001007C9800);
          if ((v30 & 1) != 0)
          {
            v31 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v29) / 5.0) * 5.0;
            if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
            {
LABEL_181:
              __break(1u);
              goto LABEL_182;
            }
            if (v31 <= -9.22337204e18)
            {
LABEL_182:
              __break(1u);
              goto LABEL_183;
            }
            if (v31 >= 9.22337204e18)
            {
LABEL_183:
              __break(1u);
              goto LABEL_184;
            }
            v164 = (uint64_t)v31;
          }
          else
          {
            v164 = 0;
          }
          v163 = v30 ^ 1;
          if (*(_QWORD *)(v24 + 16))
          {
            v32 = sub_10004CE80(0xD000000000000019, 0x80000001007C9820);
            if ((v33 & 1) != 0)
            {
              v34 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v32) / 5.0) * 5.0;
              if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
              {
LABEL_193:
                __break(1u);
                goto LABEL_194;
              }
              if (v34 <= -9.22337204e18)
              {
LABEL_194:
                __break(1u);
                goto LABEL_195;
              }
              if (v34 >= 9.22337204e18)
              {
LABEL_195:
                __break(1u);
                goto LABEL_196;
              }
              v161 = (uint64_t)v34;
            }
            else
            {
              v161 = 0;
            }
            v162 = v33 ^ 1;
            if (*(_QWORD *)(v24 + 16))
            {
              v35 = sub_10004CE80(0xD000000000000016, 0x80000001007C9840);
              if ((v36 & 1) != 0)
              {
                v37 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v35) / 5.0) * 5.0;
                if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
                {
LABEL_205:
                  __break(1u);
                  goto LABEL_206;
                }
                if (v37 <= -9.22337204e18)
                {
LABEL_206:
                  __break(1u);
                  goto LABEL_207;
                }
                if (v37 >= 9.22337204e18)
                {
LABEL_207:
                  __break(1u);
                  goto LABEL_208;
                }
                v159 = 0;
                v160 = (uint64_t)v37;
LABEL_36:
                if (*(_QWORD *)(v24 + 16))
                {
                  v38 = sub_10004CE80(0xD00000000000001DLL, 0x80000001007C9860);
                  if ((v39 & 1) != 0)
                  {
                    v40 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v38) / 5.0) * 5.0;
                    if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
                    {
LABEL_172:
                      __break(1u);
                      goto LABEL_173;
                    }
                    if (v40 <= -9.22337204e18)
                    {
LABEL_173:
                      __break(1u);
                      goto LABEL_174;
                    }
                    if (v40 >= 9.22337204e18)
                    {
LABEL_174:
                      __break(1u);
                      goto LABEL_175;
                    }
                    v158 = (uint64_t)v40;
                  }
                  else
                  {
                    v158 = 0;
                  }
                  v157 = v39 ^ 1;
                  if (*(_QWORD *)(v24 + 16))
                  {
                    v41 = sub_10004CE80(0x6E61576F54646461, 0xEF646165526F5474);
                    if ((v42 & 1) != 0)
                    {
                      v43 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v41) / 5.0) * 5.0;
                      if ((~*(_QWORD *)&v43 & 0x7FF0000000000000) == 0)
                      {
LABEL_184:
                        __break(1u);
                        goto LABEL_185;
                      }
                      if (v43 <= -9.22337204e18)
                      {
LABEL_185:
                        __break(1u);
                        goto LABEL_186;
                      }
                      if (v43 >= 9.22337204e18)
                      {
LABEL_186:
                        __break(1u);
                        goto LABEL_187;
                      }
                      v155 = (uint64_t)v43;
                    }
                    else
                    {
                      v155 = 0;
                    }
                    v156 = v42 ^ 1;
                    if (*(_QWORD *)(v24 + 16))
                    {
                      v44 = sub_10004CE80(0x64616F6C6E776F64, 0xEE00656C706D6153);
                      if ((v45 & 1) != 0)
                      {
                        v46 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v44) / 5.0) * 5.0;
                        if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
                        {
LABEL_196:
                          __break(1u);
                          goto LABEL_197;
                        }
                        if (v46 <= -9.22337204e18)
                        {
LABEL_197:
                          __break(1u);
                          goto LABEL_198;
                        }
                        if (v46 >= 9.22337204e18)
                        {
LABEL_198:
                          __break(1u);
                          goto LABEL_199;
                        }
                        v153 = (uint64_t)v46;
                      }
                      else
                      {
                        v153 = 0;
                      }
                      v154 = v45 ^ 1;
                      if (*(_QWORD *)(v24 + 16))
                      {
                        v47 = sub_10004CE80(0x676E69746172, 0xE600000000000000);
                        if ((v48 & 1) != 0)
                        {
                          v49 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v47) / 5.0) * 5.0;
                          if ((~*(_QWORD *)&v49 & 0x7FF0000000000000) == 0)
                          {
LABEL_208:
                            __break(1u);
                            goto LABEL_209;
                          }
                          if (v49 <= -9.22337204e18)
                          {
LABEL_209:
                            __break(1u);
                            goto LABEL_210;
                          }
                          if (v49 >= 9.22337204e18)
                          {
LABEL_210:
                            __break(1u);
                            goto LABEL_211;
                          }
                          v151 = 0;
                          v152 = (uint64_t)v49;
LABEL_69:
                          if (*(_QWORD *)(v24 + 16))
                          {
                            v50 = sub_10004CE80(0x4D74736567677573, 0xEB0000000065726FLL);
                            if ((v51 & 1) != 0)
                            {
                              v52 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v50) / 5.0) * 5.0;
                              if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
                              {
LABEL_175:
                                __break(1u);
                                goto LABEL_176;
                              }
                              if (v52 <= -9.22337204e18)
                              {
LABEL_176:
                                __break(1u);
                                goto LABEL_177;
                              }
                              if (v52 >= 9.22337204e18)
                              {
LABEL_177:
                                __break(1u);
                                goto LABEL_178;
                              }
                              v150 = (uint64_t)v52;
                            }
                            else
                            {
                              v150 = 0;
                            }
                            v149 = v51 ^ 1;
                            if (*(_QWORD *)(v24 + 16))
                            {
                              v53 = sub_10004CE80(0x6572616873, 0xE500000000000000);
                              if ((v54 & 1) != 0)
                              {
                                v55 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v53) / 5.0) * 5.0;
                                if ((~*(_QWORD *)&v55 & 0x7FF0000000000000) == 0)
                                {
LABEL_187:
                                  __break(1u);
                                  goto LABEL_188;
                                }
                                if (v55 <= -9.22337204e18)
                                {
LABEL_188:
                                  __break(1u);
                                  goto LABEL_189;
                                }
                                if (v55 >= 9.22337204e18)
                                {
LABEL_189:
                                  __break(1u);
                                  goto LABEL_190;
                                }
                                v147 = (uint64_t)v55;
                              }
                              else
                              {
                                v147 = 0;
                              }
                              v146 = v54 ^ 1;
                              if (*(_QWORD *)(v24 + 16))
                              {
                                v56 = sub_10004CE80(0x72706D496B6F6F62, 0xEE006E6F69737365);
                                if ((v57 & 1) != 0)
                                {
                                  v58 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v56) / 5.0) * 5.0;
                                  if ((~*(_QWORD *)&v58 & 0x7FF0000000000000) == 0)
                                  {
LABEL_199:
                                    __break(1u);
                                    goto LABEL_200;
                                  }
                                  if (v58 <= -9.22337204e18)
                                  {
LABEL_200:
                                    __break(1u);
                                    goto LABEL_201;
                                  }
                                  if (v58 >= 9.22337204e18)
                                  {
LABEL_201:
                                    __break(1u);
                                    goto LABEL_202;
                                  }
                                  v145 = (uint64_t)v58;
                                }
                                else
                                {
                                  v145 = 0;
                                }
                                v144 = v57 ^ 1;
                                if (*(_QWORD *)(v24 + 16))
                                {
                                  v59 = sub_10004CE80(0x4C74736567677573, 0xEB00000000737365);
                                  if ((v60 & 1) != 0)
                                  {
                                    v61 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v59) / 5.0) * 5.0;
                                    if ((~*(_QWORD *)&v61 & 0x7FF0000000000000) == 0)
                                    {
LABEL_211:
                                      __break(1u);
                                      goto LABEL_212;
                                    }
                                    if (v61 <= -9.22337204e18)
                                    {
LABEL_212:
                                      __break(1u);
                                      goto LABEL_213;
                                    }
                                    if (v61 >= 9.22337204e18)
                                    {
LABEL_213:
                                      __break(1u);
                                      return;
                                    }
                                    v141 = 0;
                                    v142 = (uint64_t)v61;
LABEL_102:
                                    v62 = *(_QWORD *)(v24 + 16);
                                    v148 = v17;
                                    v143 = v25;
                                    if (v62)
                                    {
                                      v63 = sub_10004CE80(0x6B6F6F4265646968, 0xE800000000000000);
                                      if ((v64 & 1) != 0)
                                      {
                                        v65 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v63) / 5.0) * 5.0;
                                        if ((~*(_QWORD *)&v65 & 0x7FF0000000000000) == 0)
                                        {
LABEL_178:
                                          __break(1u);
                                          goto LABEL_179;
                                        }
                                        if (v65 <= -9.22337204e18)
                                        {
LABEL_179:
                                          __break(1u);
                                          goto LABEL_180;
                                        }
                                        if (v65 >= 9.22337204e18)
                                        {
LABEL_180:
                                          __break(1u);
                                          goto LABEL_181;
                                        }
                                        v140 = (uint64_t)v65;
                                      }
                                      else
                                      {
                                        v140 = 0;
                                      }
                                      v139 = v64 ^ 1;
                                      if (*(_QWORD *)(v24 + 16))
                                      {
                                        v66 = sub_10004CE80(0xD000000000000014, 0x80000001007C9880);
                                        if ((v67 & 1) != 0)
                                        {
                                          v68 = round((double)*(uint64_t *)(*(_QWORD *)(v24 + 56) + 8 * v66) / 5.0) * 5.0;
                                          if ((~*(_QWORD *)&v68 & 0x7FF0000000000000) == 0)
                                          {
LABEL_190:
                                            __break(1u);
                                            goto LABEL_191;
                                          }
                                          if (v68 <= -9.22337204e18)
                                          {
LABEL_191:
                                            __break(1u);
                                            goto LABEL_192;
                                          }
                                          if (v68 >= 9.22337204e18)
                                          {
LABEL_192:
                                            __break(1u);
                                            goto LABEL_193;
                                          }
                                          v138 = (uint64_t)v68;
                                        }
                                        else
                                        {
                                          v138 = 0;
                                        }
                                        v137 = v67 ^ 1;
                                        if (*(_QWORD *)(v24 + 16))
                                        {
                                          v69 = sub_10004CE80(0x615365766F6D6572, 0xEC000000656C706DLL);
                                          if ((v70 & 1) != 0)
                                          {
                                            v71 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v69);
                                            swift_bridgeObjectRelease(v24);
                                            v72 = round((double)v71 / 5.0) * 5.0;
                                            if ((~*(_QWORD *)&v72 & 0x7FF0000000000000) == 0)
                                            {
LABEL_202:
                                              __break(1u);
                                              goto LABEL_203;
                                            }
                                            if (v72 <= -9.22337204e18)
                                            {
LABEL_203:
                                              __break(1u);
                                              goto LABEL_204;
                                            }
                                            v73 = v167;
                                            if (v72 >= 9.22337204e18)
                                            {
LABEL_204:
                                              __break(1u);
                                              goto LABEL_205;
                                            }
                                            v135 = 0;
                                            v136 = (uint64_t)v72;
LABEL_125:
                                            v74 = (uint64_t)&v73[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp];
                                            swift_beginAccess(&v73[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp], v184, 0, 0);
                                            sub_1001FE7C4(v74, (uint64_t)v13);
                                            v76 = v169;
                                            v75 = v170;
                                            v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v169 + 48);
                                            v134 = v77(v13, 1, v170);
                                            if (v134)
                                            {
                                              sub_100010D2C((uint64_t)v13);
                                              v131 = 0;
                                              v78 = v167;
                                              goto LABEL_131;
                                            }
                                            (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v168, v13, v75);
                                            v79 = sub_100010D2C((uint64_t)v13);
                                            v80 = round(Date.timeIntervalSince1970.getter(v79) / 3600.0)
                                                * 3600.0
                                                * 1000.0;
                                            if ((~*(_QWORD *)&v80 & 0x7FF0000000000000) != 0)
                                            {
                                              v78 = v167;
                                              if (v80 > -9.22337204e18)
                                              {
                                                if (v80 < 9.22337204e18)
                                                {
                                                  v131 = (uint64_t)v80;
                                                  (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v170);
LABEL_131:
                                                  v132 = v14;
                                                  v133 = v15;
                                                  v81 = &v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError];
                                                  swift_beginAccess(&v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError], v183, 0, 0);
                                                  if (*(_QWORD *)v81)
                                                  {
                                                    ErrorValue = swift_getErrorValue(*(_QWORD *)v81, v182, &v179);
                                                    v83 = v180;
                                                    v84 = v181;
                                                    v85 = *(_QWORD *)(v180 - 8);
                                                    v86 = __chkstk_darwin(ErrorValue);
                                                    v88 = (char *)&v125 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
                                                    (*(void (**)(char *, double))(v85 + 16))(v88, v86);
                                                    v89 = Error.localizedDescription.getter(v83, v84);
                                                    v129 = v90;
                                                    v130 = v89;
                                                    v91 = v83;
                                                    v78 = v167;
                                                    (*(void (**)(char *, uint64_t))(v85 + 8))(v88, v91);
                                                  }
                                                  else
                                                  {
                                                    v129 = 0;
                                                    v130 = 0;
                                                  }
                                                  v92 = v169;
                                                  v93 = (uint64_t)&v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp];
                                                  swift_beginAccess(&v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp], v178, 0, 0);
                                                  sub_1001FE7C4(v93, (uint64_t)v10);
                                                  v94 = v170;
                                                  v95 = v77(v10, 1, v170);
                                                  if (v95)
                                                  {
                                                    sub_100010D2C((uint64_t)v10);
                                                    v128 = 0;
                                                    goto LABEL_140;
                                                  }
                                                  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v168, v10, v94);
                                                  v96 = sub_100010D2C((uint64_t)v10);
                                                  v97 = round(Date.timeIntervalSince1970.getter(v96) / 3600.0)
                                                      * 3600.0
                                                      * 1000.0;
                                                  if ((~*(_QWORD *)&v97 & 0x7FF0000000000000) != 0)
                                                  {
                                                    if (v97 > -9.22337204e18)
                                                    {
                                                      if (v97 < 9.22337204e18)
                                                      {
                                                        v128 = (uint64_t)v97;
                                                        (*(void (**)(char *, uint64_t))(v92 + 8))(v168, v94);
LABEL_140:
                                                        v98 = (uint64_t)&v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp];
                                                        swift_beginAccess(&v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp], &v177, 0, 0);
                                                        sub_1001FE7C4(v98, (uint64_t)v7);
                                                        v99 = v77(v7, 1, v94);
                                                        if (v99)
                                                        {
                                                          sub_100010D2C((uint64_t)v7);
                                                          v126 = 0;
                                                          goto LABEL_146;
                                                        }
                                                        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v168, v7, v94);
                                                        v100 = sub_100010D2C((uint64_t)v7);
                                                        v101 = round(Date.timeIntervalSince1970.getter(v100) / 3600.0)
                                                             * 3600.0
                                                             * 1000.0;
                                                        if ((~*(_QWORD *)&v101 & 0x7FF0000000000000) != 0)
                                                        {
                                                          if (v101 > -9.22337204e18)
                                                          {
                                                            if (v101 < 9.22337204e18)
                                                            {
                                                              v126 = (uint64_t)v101;
                                                              (*(void (**)(char *, uint64_t))(v92 + 8))(v168, v94);
LABEL_146:
                                                              v127 = v95;
                                                              v102 = &v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError];
                                                              swift_beginAccess(&v78[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError], &v176, 0, 0);
                                                              if (*(_QWORD *)v102)
                                                              {
                                                                v103 = swift_getErrorValue(*(_QWORD *)v102, &v175, &v172);
                                                                v104 = v173;
                                                                v105 = v174;
                                                                v106 = *(_QWORD *)(v173 - 8);
                                                                v107 = __chkstk_darwin(v103);
                                                                v109 = (char *)&v125
                                                                     - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
                                                                (*(void (**)(char *, double))(v106 + 16))(v109, v107);
                                                                v110 = Error.localizedDescription.getter(v104, v105);
                                                                v112 = v111;
                                                                (*(void (**)(char *, uint64_t))(v106 + 8))(v109, v104);
                                                                v94 = v170;
                                                              }
                                                              else
                                                              {
                                                                v110 = 0;
                                                                v112 = 0;
                                                              }
                                                              v113 = v133;
                                                              v114 = &v167[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp];
                                                              swift_beginAccess(&v167[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp], &v171, 0, 0);
                                                              v115 = (uint64_t)v114;
                                                              v116 = v166;
                                                              sub_1001FE7C4(v115, v166);
                                                              v117 = v77((char *)v116, 1, v94);
                                                              if (v117)
                                                              {
                                                                sub_100010D2C(v116);
                                                                v118 = 0;
                                                                v119 = v148;
LABEL_155:
                                                                UserEventStorageData.init(productCardViewCount:readingSampleCount:previewAudiobookCount:readCount:playCount:addToWantToReadCount:sampleBooksDownloadedCount:ratedBookCount:likedCount:shareCount:totalContentExposedCount:unLikedEventCount:hiddenEventCount:removefromWTRCount:deleteSampleCount:lastSyncFromCloudTimestamp:lastSyncFromCloudError:lastSyncErrorFromCloudTimestamp:lastSyncToCloudTimestamp:lastSyncToCloudError:lastSyncToFromCloudTimestamp:)(v143, v165 & 1, v164, v163 & 1, v161, v162 & 1, v160, v159, v158, v157 & 1, v155, v156 & 1, v153, v154 & 1, v152, (_BYTE)v151, v150, v149 & 1, v147,
                                                                  v146 & 1,
                                                                  v145,
                                                                  v144 & 1,
                                                                  v142,
                                                                  (_BYTE)v141,
                                                                  v140,
                                                                  v139 & 1,
                                                                  v138,
                                                                  v137 & 1,
                                                                  v136,
                                                                  (_BYTE)v135,
                                                                  v131,
                                                                  v134 != 0,
                                                                  v130,
                                                                  v129,
                                                                  v128,
                                                                  v127 != 0,
                                                                  v126,
                                                                  v99 != 0,
                                                                  v110,
                                                                  v112,
                                                                  v118,
                                                                  v117 != 0);
                                                                v122 = sub_1004364D0(&qword_1009E3100, (uint64_t)&protocol conformance descriptor for UserEventStorageData);
                                                                v123 = sub_1004364D0(&qword_1009E3108, (uint64_t)&protocol conformance descriptor for UserEventStorageData);
                                                                v124 = v132;
                                                                BATracker.pop<A>(type:)(v132, v132, v122, v123);
                                                                BATracker.push<A>(data:traits:file:line:)(v119, 0, 0xD000000000000073, 0x80000001007C98A0, 57, v124, v122, v123);

                                                                (*(void (**)(char *, uint64_t))(v113 + 8))(v119, v124);
                                                                return;
                                                              }
                                                              (*(void (**)(char *, uint64_t, uint64_t))(v169 + 16))(v168, v116, v94);
                                                              v120 = sub_100010D2C(v116);
                                                              v121 = round(Date.timeIntervalSince1970.getter(v120) / 3600.0)
                                                                   * 3600.0
                                                                   * 1000.0;
                                                              v119 = v148;
                                                              if ((~*(_QWORD *)&v121 & 0x7FF0000000000000) != 0)
                                                              {
                                                                if (v121 > -9.22337204e18)
                                                                {
                                                                  if (v121 < 9.22337204e18)
                                                                  {
                                                                    v118 = (uint64_t)v121;
                                                                    (*(void (**)(char *, uint64_t))(v169 + 8))(v168, v170);
                                                                    goto LABEL_155;
                                                                  }
                                                                  goto LABEL_168;
                                                                }
LABEL_167:
                                                                __break(1u);
LABEL_168:
                                                                __break(1u);
                                                                goto LABEL_169;
                                                              }
LABEL_166:
                                                              __break(1u);
                                                              goto LABEL_167;
                                                            }
LABEL_165:
                                                            __break(1u);
                                                            goto LABEL_166;
                                                          }
LABEL_164:
                                                          __break(1u);
                                                          goto LABEL_165;
                                                        }
LABEL_163:
                                                        __break(1u);
                                                        goto LABEL_164;
                                                      }
LABEL_162:
                                                      __break(1u);
                                                      goto LABEL_163;
                                                    }
LABEL_161:
                                                    __break(1u);
                                                    goto LABEL_162;
                                                  }
LABEL_160:
                                                  __break(1u);
                                                  goto LABEL_161;
                                                }
LABEL_159:
                                                __break(1u);
                                                goto LABEL_160;
                                              }
                                            }
                                            else
                                            {
                                              __break(1u);
                                            }
                                            __break(1u);
                                            goto LABEL_159;
                                          }
                                        }
                                      }
                                      else
                                      {
                                        v138 = 0;
                                        v137 = 1;
                                      }
                                    }
                                    else
                                    {
                                      v138 = 0;
                                      v140 = 0;
                                      v137 = 1;
                                      v139 = 1;
                                    }
                                    swift_bridgeObjectRelease(v24);
                                    v136 = 0;
                                    v135 = 1;
                                    v73 = v167;
                                    goto LABEL_125;
                                  }
                                }
                                v142 = 0;
                              }
                              else
                              {
                                v145 = 0;
                                v142 = 0;
                                v144 = 1;
                              }
LABEL_101:
                              v141 = 1;
                              goto LABEL_102;
                            }
                            v145 = 0;
                            v147 = 0;
                            v142 = 0;
                            v144 = 1;
                          }
                          else
                          {
                            v145 = 0;
                            v150 = 0;
                            v147 = 0;
                            v142 = 0;
                            v144 = 1;
                            v149 = 1;
                          }
                          v146 = 1;
                          goto LABEL_101;
                        }
                      }
                      v152 = 0;
                    }
                    else
                    {
                      v152 = 0;
                      v153 = 0;
                      v154 = 1;
                    }
LABEL_68:
                    v151 = 1;
                    goto LABEL_69;
                  }
                  v152 = 0;
                  v153 = 0;
                  v155 = 0;
                  v154 = 1;
                }
                else
                {
                  v152 = 0;
                  v153 = 0;
                  v158 = 0;
                  v155 = 0;
                  v154 = 1;
                  v157 = 1;
                }
                v156 = 1;
                goto LABEL_68;
              }
            }
            v160 = 0;
          }
          else
          {
            v160 = 0;
            v161 = 0;
            v162 = 1;
          }
LABEL_35:
          v159 = 1;
          goto LABEL_36;
        }
        v160 = 0;
        v161 = 0;
        v164 = 0;
        v162 = 1;
      }
      else
      {
        v160 = 0;
        v161 = 0;
        v164 = 0;
        v162 = 1;
        v165 = 1;
      }
      v163 = 1;
      goto LABEL_35;
    }
  }
}

Swift::Void __swiftcall EngagementManagerAnalyticsHelper.registerSyncToCloudKitSuccess()()
{
  sub_100013BD0(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp);
}

void EngagementManagerAnalyticsHelper.registerSyncToCloudKitError(_:)(uint64_t a1)
{
  sub_1000667F0(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp);
}

void EngagementManagerAnalyticsHelper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.EngagementManagerAnalyticsHelper", 38, "init()", 6, 0);
  __break(1u);
}

id EngagementManagerAnalyticsHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementManagerAnalyticsHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004364D0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UserEventStorageData(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100436510()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for MainToolbarPresenter()
{
  return objc_opt_self(_TtC5Books20MainToolbarPresenter);
}

void destroy for MainToolbarViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);

}

uint64_t initializeWithCopy for MainToolbarViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = (void *)a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t *assignWithCopy for MainToolbarViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a1[1];
  v7 = (void *)a2[1];
  a1[1] = (uint64_t)v7;
  v8 = v7;

  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for MainToolbarViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for MainToolbarViewModel()
{
  return &type metadata for MainToolbarViewModel;
}

uint64_t sub_100436698(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  if (a1 >> 6)
  {
    if (a1 >> 6 != 1)
    {
      if (a1 == 128)
        return 0x6165707061736944;
      else
        return 0x6465726165707041;
    }
    v2 = 0x6165707061736944;
  }
  else
  {
    v2 = 0x6E69726165707041;
  }
  v7 = v2;
  if ((a1 & 1) != 0)
    v3 = 0x646574616D696E61;
  else
    v3 = 0x6D696E61206E6F6ELL;
  if ((a1 & 1) != 0)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEC00000064657461;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  return v7;
}

BOOL sub_1004367A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  char v5;
  char v7;
  char v8;
  BOOL v9;
  BOOL v10;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      v4 = v3 & 0xC0;
      v5 = ((v2 & 1) == 0) ^ v3;
      if (v4 != 64)
        v5 = 0;
      return v5 & 1;
    }
    else
    {
      v9 = v3 == 128;
      v10 = v3 == 129;
      if (v2 == 128)
        return v9;
      return v10;
    }
  }
  else
  {
    v7 = ((v2 & 1) == 0) ^ v3;
    if (v3 >= 0x40)
      v8 = 0;
    else
      v8 = v7;
    return v8 & 1;
  }
}

uint64_t sub_100436814()
{
  unsigned __int8 *v0;

  return sub_100436698(*v0);
}

uint64_t sub_10043681C(uint64_t result, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v6 = result >> 6;
  if (result >> 6)
  {
    if (v6 == 1)
    {
      if ((a2 & 0xC0) == 0x40)
        return result;
    }
    else if (result == 128)
    {
      if (a2 == 128)
        return result;
    }
    else if (a2 == 129)
    {
      return result;
    }
  }
  else if (a2 < 0x40u)
  {
    return result;
  }
  if (!(a2 >> 6))
  {
    if (!(result >> 6))
      return result;
    if (v6 != 1)
    {
      if (result != 128)
        return result;
      v7 = a2 & 1;
      v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
      v9 = 1;
      return v8(v9, v7, a3, a4);
    }
    v10 = a2 & 1;
    (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
    v9 = 1;
    goto LABEL_29;
  }
  if (a2 >> 6 != 1)
  {
    if (a2 == 128)
    {
      if (result >> 6)
      {
        if (v6 != 1)
        {
          if (result == 128)
            return result;
          (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a4 + 8))(0, 0, a3, a4);
        }
        return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
      }
      v11 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
      v11(a3, a4);
      (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a4 + 8))(0, 0, a3, a4);
    }
    else
    {
      if (!(result >> 6))
        return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
      if (v6 != 1)
      {
        if (result != 128)
          return result;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 8))(1, 0, a3, a4);
        return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
      }
      v11 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
      v11(a3, a4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 8))(1, 0, a3, a4);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(a3, a4);
  }
  if (!(result >> 6))
  {
    v10 = a2 & 1;
    (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
    v9 = 0;
LABEL_29:
    v7 = v10;
    return v8(v9, v7, a3, a4);
  }
  if (v6 != 1 && result != 128)
  {
    v7 = a2 & 1;
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
    v9 = 0;
    return v8(v9, v7, a3, a4);
  }
  return result;
}

id sub_100436A38(char a1, char a2)
{
  id *v2;

  return objc_msgSend(*v2, "beginAppearanceTransition:animated:", a1 & 1, a2 & 1);
}

id sub_100436A58()
{
  id *v0;

  return objc_msgSend(*v0, "endAppearanceTransition");
}

uint64_t getEnumTagSinglePayload for AppearanceState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 130 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 130) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 130;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 130;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 130;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for AppearanceState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_100436B54 + 4 * byte_1007245E5[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_100436B88 + 4 * byte_1007245E0[v4]))();
}

uint64_t sub_100436B88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100436B90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100436B98);
  return result;
}

uint64_t sub_100436BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100436BB8);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_100436BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100436BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100436BD0(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return v1 & 1 | 2u;
}

_BYTE *sub_100436BEC(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_100436BFC(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = a2 & 1 | 0x80;
  return result;
}

ValueMetadata *type metadata accessor for AppearanceState()
{
  return &type metadata for AppearanceState;
}

uint64_t sub_100436C38(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[3];
  _QWORD *v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = _swiftEmptyArrayStorage;
    if (!v2)
      return (uint64_t)v3;
    v15 = _swiftEmptyArrayStorage;
    result = sub_100045E44(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v15;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_retain(v6);
      }
      KeyPath = swift_getKeyPath(&unk_1007248A0);
      v14[0] = v6;
      swift_retain(v6);
      swift_getAtKeyPath(v14, KeyPath);
      swift_release(KeyPath);
      swift_release_n(v6, 2);
      v9 = v14[1];
      v8 = v14[2];
      v15 = v3;
      v11 = v3[2];
      v10 = v3[3];
      if (v11 >= v10 >> 1)
      {
        sub_100045E44(v10 > 1, v11 + 1, 1);
        v3 = v15;
      }
      ++v5;
      v3[2] = v11 + 1;
      v12 = &v3[2 * v11];
      v12[4] = v9;
      v12[5] = v8;
      if (v2 == v5)
        return (uint64_t)v3;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100436DCC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E31E0);
  sub_100048F64(v0, (uint64_t)qword_1009E31E0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000020, 0x80000001007C9B70);
}

uint64_t sub_100436E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t result;

  v1 = a1 - 1;
  if (a1 < 1)
    return 0;
  v3 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
  if (v3 == a1)
    return 0;
  v4 = dispatch thunk of PaginatingService.bookPaginationEntity.getter(v3);
  v5 = BookPaginationEntity.documents.getter();
  swift_release(v4);
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v6)
      goto LABEL_5;
    goto LABEL_24;
  }
LABEL_20:
  if (v5 < 0)
    v20 = v5;
  else
    v20 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v6)
  {
LABEL_24:
    swift_bridgeObjectRelease_n(v5, 2);
    return 0;
  }
LABEL_5:
  v7 = 4;
  while (1)
  {
    v8 = v7 - 4;
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5);
      v10 = v9;
      v11 = __OFADD__(v8, 1);
      v12 = v7 - 3;
      if (v11)
        goto LABEL_18;
    }
    else
    {
      v10 = *(_QWORD *)(v5 + 8 * v7);
      swift_retain(v10);
      v11 = __OFADD__(v8, 1);
      v12 = v7 - 3;
      if (v11)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    v13 = dispatch thunk of DocumentPaginationEntity.startingPageOffset.getter(v9);
    if (v13 < v1)
    {
      v14 = dispatch thunk of DocumentPaginationEntity.startingPageOffset.getter(v13);
      if (__OFSUB__(v1, v14))
        goto LABEL_19;
      if (v1 - v14 < dispatch thunk of DocumentPaginationEntity.pageCount.getter())
        break;
    }
    swift_release(v10);
    ++v7;
    if (v12 == v6)
      goto LABEL_24;
  }
  swift_bridgeObjectRelease_n(v5, 2);
  v15 = swift_retain(v10);
  v16 = DocumentPaginationEntity.ordinal.getter(v15);
  v17 = dispatch thunk of DocumentPaginationEntity.startingPageOffset.getter(v16);
  v18 = v1 - v17;
  if (__OFSUB__(v1, v17))
  {
    __break(1u);
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = objc_msgSend(objc_allocWithZone((Class)BKPageLocation), "initWithOrdinal:andOffset:", v16, v18);
    swift_release_n(v10, 2);
    return (uint64_t)v19;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

void sub_100437038(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  Swift::UInt8 v5;
  Swift::UInt v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = v1[3];
  v5 = v1[4];
  v6 = *((_QWORD *)v2 + 1);
  v7 = v2[16];
  v8 = v2[1];
  v9 = v2[2];
  v10 = PageNavigationStyle.rawValue.getter(*v2);
  v12 = v11;
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease(v12);
  v13 = ThemeAppearance.rawValue.getter(v8);
  v15 = v14;
  String.hash(into:)(a1, v13, v14);
  swift_bridgeObjectRelease(v15);
  v16 = BookThemeType.rawValue.getter(v9);
  v18 = v17;
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease(v18);
  v19 = BookThemeVariant.rawValue.getter(v4);
  v21 = v20;
  String.hash(into:)(a1, v19, v20);
  swift_bridgeObjectRelease(v21);
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(v6);
  v22 = PageProgressDirection.rawValue.getter(v7);
  v24 = v23;
  String.hash(into:)(a1, v22, v23);
  swift_bridgeObjectRelease(v24);
  v25 = type metadata accessor for _BookReaderInteractorState(0);
  v26 = type metadata accessor for PageMovementState(0);
  v27 = sub_100008DB0(&qword_1009E33F8, (uint64_t (*)(uint64_t))&type metadata accessor for PageMovementState, (uint64_t)&protocol conformance descriptor for PageMovementState);
  dispatch thunk of Hashable.hash(into:)(a1, v26, v27);
  Hasher._combine(_:)(v2[*(int *)(v25 + 24)]);
}

Swift::Int sub_1004371C8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100437038((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100437208(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100437038((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100437240(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const mach_header_64 *v11;
  unint64_t v12;
  unint64_t v13;
  const mach_header_64 *v14;
  char v15;

  v6 = *((_QWORD *)a1 + 1);
  v7 = *((_BYTE *)a1 + 16);
  v8 = 0x1000000;
  if (*((_BYTE *)a1 + 3))
    v9 = 0x1000000;
  else
    v9 = 0;
  v10 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 2) << 16) | v9;
  if (*((_BYTE *)a1 + 4))
    v11 = &_mh_execute_header;
  else
    v11 = 0;
  v12 = v10 | (unint64_t)v11;
  if (!*((_BYTE *)a2 + 3))
    v8 = 0;
  v13 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 2) << 16) | v8;
  if (*((_BYTE *)a2 + 4))
    v14 = &_mh_execute_header;
  else
    v14 = 0;
  if ((sub_100518C20(v12, v6, v7, v13 | (unint64_t)v14, *((_QWORD *)a2 + 1), *((_BYTE *)a2 + 16)) & 1) != 0
    && (static PageMovementState.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20)) & 1) != 0)
  {
    v15 = *((_BYTE *)a1 + *(int *)(a3 + 24)) ^ *((_BYTE *)a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100437320@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  int v42;

  v42 = a5;
  v38 = a4;
  v39 = a6;
  v41 = a2;
  v7 = a1 >> 8;
  v8 = a1 >> 16;
  v36 = a1 >> 8;
  v37 = a1 >> 16;
  v9 = a3 & 1;
  v34 = a3 & 1;
  v10 = sub_10004CFD4(&qword_1009E3408);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - v14;
  v16 = type metadata accessor for _BookReaderInteractorState(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v15[*(int *)(v10 + 48)];
  *v15 = a1;
  v15[1] = v7;
  v15[2] = v8;
  v40 = BYTE3(a1) & 1;
  v15[3] = v40;
  LOBYTE(v8) = a1;
  v31 = a1;
  v15[4] = BYTE4(a1) & 1;
  v20 = HIDWORD(a1) & 1;
  v32 = v20;
  v33 = v19;
  *((_QWORD *)v15 + 1) = v41;
  v15[16] = v9;
  v21 = type metadata accessor for PageMovementState(0);
  v35 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
  v22(v19, v38, v21);
  v23 = (void (*)(char *, char *, uint64_t))v22;
  v29 = (void (*)(char *, char *, uint64_t))v22;
  v15[*(int *)(v10 + 64)] = v42;
  *v18 = 2;
  *(_DWORD *)(v18 + 1) = 0;
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 0;
  v24 = &v18[*(int *)(v16 + 20)];
  PageMovementState.init(isIdle:isDragging:)(1, 0);
  v38 = *(int *)(v16 + 24);
  v18[v38] = 0;
  v25 = &v12[*(int *)(v10 + 48)];
  v30 = *(int *)(v10 + 64);
  *v12 = v8;
  LOBYTE(v8) = v36;
  LOBYTE(v22) = v37;
  v12[1] = v36;
  v12[2] = (char)v22;
  v12[3] = v40;
  v12[4] = v20;
  v26 = v41;
  *((_QWORD *)v12 + 1) = v41;
  LOBYTE(v20) = v34;
  v12[16] = v34;
  v23(v25, v33, v21);
  LOBYTE(v23) = v42;
  v12[v30] = v42;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v21);
  v29(v24, v25, v21);
  *v18 = v31;
  v18[1] = v8;
  v18[2] = (char)v22;
  v18[3] = v40;
  v18[4] = v32;
  *((_QWORD *)v18 + 1) = v26;
  v18[16] = v20;
  v27 = v39;
  v18[v38] = (char)v23;
  sub_100270BE8((uint64_t)v18, v27);
  return sub_100270BAC((uint64_t)v18);
}

uint64_t sub_100437590(char a1)
{
  return 0x3020001u >> (8 * a1);
}

double sub_1004375A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  uint64_t v15;
  uint64_t v16;
  const mach_header_64 *v17;
  double result;
  uint64_t v19;
  _QWORD v20[2];
  char v21;

  v19 = a1;
  v2 = type metadata accessor for PageMovementState(0);
  __chkstk_darwin(v2);
  v4 = (_QWORD *)((char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  CurrentValueSubject.value.getter(v20);
  v5 = BYTE2(v20[0]);
  v6 = BYTE3(v20[0]);
  v7 = BYTE4(v20[0]);
  v8 = v20[1];
  v9 = v21;
  v10 = LOWORD(v20[0]);
  v11 = *(_QWORD *)(v1 + 176);
  swift_retain(v11);
  CurrentValueSubject.value.getter(v4);
  v12 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v14 = dispatch thunk of PageNumberProviding.usePhysicalPagesValue.getter(ObjectType, *(_QWORD *)(v12 + 8));
  v15 = 0x1000000;
  if (!v6)
    v15 = 0;
  v16 = v10 | (v5 << 16) | v15;
  v17 = &_mh_execute_header;
  if (!v7)
    v17 = 0;
  sub_100437320(v16 | (unint64_t)v17, v8, v9, (uint64_t)v4, v14 & 1, v19);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1004376C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = sub_10004CFD4(&qword_1009E3410);
  v2 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  v34 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10004CFD4(&qword_1009E3418);
  v37 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10004CFD4(&qword_1009E3420);
  v38 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)(v0[8] + OBJC_IVAR____TtC5Books21BookReaderDataManager_stateSubject);
  v9 = sub_10004CFD4(&qword_1009E3428);
  v10 = sub_100030B34(&qword_1009E3430, &qword_1009E3428, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v11 = Publisher.eraseToAnyPublisher()(v9, v10);
  v40 = *(_QWORD *)(v0[22] + 64);
  v41 = v11;
  v12 = sub_10004CFD4(&qword_1009E3438);
  v13 = sub_100030B34((unint64_t *)&qword_1009E3440, &qword_1009E3438, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v40 = Publisher.eraseToAnyPublisher()(v12, v13);
  v14 = v0[15];
  ObjectType = swift_getObjectType();
  v39 = dispatch thunk of PageNumberProviding.usePhysicalPagesPublisher.getter(ObjectType, *(_QWORD *)(v14 + 8));
  v16 = sub_10004CFD4(&qword_1009E3448);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009E76C0);
  v18 = sub_10004CFD4(&qword_1009D9D30);
  v19 = sub_100030B34(&qword_1009E3450, &qword_1009E3448, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v20 = sub_100030B34(&qword_1009E3458, (uint64_t *)&unk_1009E76C0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v21 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publishers.CombineLatest3.init(_:_:_:)(&v41, &v40, &v39, v16, v17, v18, v19, v20, v21);
  v22 = type metadata accessor for _BookReaderInteractorState(0);
  v23 = sub_100030B34(&qword_1009E3460, &qword_1009E3410, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
  v24 = v33;
  Publisher.map<A>(_:)(sub_100437A50, 0, v33, v22, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v24);
  v25 = sub_100030B34(&qword_1009E3468, &qword_1009E3418, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v26 = sub_100008DB0(&qword_1009E33D8, type metadata accessor for _BookReaderInteractorState, (uint64_t)&unk_100724818);
  v27 = v35;
  Publisher<>.removeDuplicates()(v35, v25, v26);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v27);
  v28 = sub_100030B34(&qword_1009E3470, &qword_1009E3420, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v29 = v36;
  v30 = Publisher.eraseToAnyPublisher()(v36, v28);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v29);
  return v30;
}

uint64_t sub_100437A50@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const mach_header_64 *v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;

  v39 = a2;
  v3 = sub_10004CFD4(&qword_1009E3408);
  v32 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  v9 = *a1;
  v34 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = a1[3];
  v35 = v12;
  v13 = a1[4];
  v14 = *((_QWORD *)a1 + 1);
  v36 = v11;
  v37 = v14;
  v15 = a1[16];
  v40 = v13;
  v41 = v15;
  v16 = sub_10004CFD4(&qword_1009E3478);
  v33 = &a1[*(int *)(v16 + 48)];
  v38 = a1[*(int *)(v16 + 64)];
  v17 = &v8[*(int *)(v3 + 48)];
  v30 = v10;
  v31 = v17;
  *v8 = v9;
  v8[1] = v10;
  v8[2] = v11;
  v8[3] = v12;
  LOBYTE(a1) = v40;
  v8[4] = v40;
  *((_QWORD *)v8 + 1) = v14;
  v8[16] = v15;
  v18 = type metadata accessor for PageMovementState(0);
  v19 = *(void (**)(void))(*(_QWORD *)(v18 - 8) + 16);
  ((void (*)(char *, unsigned __int8 *, uint64_t))v19)(v17, v33, v18);
  v20 = v32;
  v21 = *(int *)(v32 + 64);
  v22 = v38;
  v8[v21] = v38;
  v33 = (unsigned __int8 *)&v5[*(int *)(v20 + 48)];
  v23 = v34;
  *v5 = v34;
  v5[1] = v10;
  v24 = v36;
  v5[2] = v36;
  LODWORD(v10) = v35;
  v5[3] = v35;
  v5[4] = (char)a1;
  v25 = v37;
  *((_QWORD *)v5 + 1) = v37;
  v5[16] = v41;
  v19();
  v5[v21] = v22;
  v26 = 0x1000000;
  if (!(_DWORD)v10)
    v26 = 0;
  v27 = &_mh_execute_header;
  if (!v40)
    v27 = 0;
  sub_100437320(v23 | (v30 << 8) | (v24 << 16) | v26 | (unint64_t)v27, v25, v41, (uint64_t)v33, v22, v39);
  return sub_100010960((uint64_t)v8, &qword_1009E3408);
}

uint64_t sub_100437C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = type metadata accessor for Location(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (_QWORD *)((char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(v0 + 104);
  ObjectType = swift_getObjectType();
  v7 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v5);
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  swift_retain(v8);
  CurrentValueSubject.value.getter(v4);
  v9 = swift_release(v8);
  v10 = BookPaginationEntity.bookmarks(for:)(v4, v9);
  v11 = swift_release(v7);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v2 + 8))(v4, v1, v11);
  v15[1] = v10;
  v12 = sub_10004CFD4(&qword_1009DDDB0);
  v13 = sub_100030B34(&qword_1009DDDB8, &qword_1009DDDB0, (uint64_t)&protocol conformance descriptor for [A]);
  LOBYTE(v1) = Collection.isNotEmpty.getter(v12, v13);
  swift_bridgeObjectRelease(v10);
  return v1 & 1;
}

void sub_100437D74(char a1)
{
  _QWORD *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t Strong;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = a1 & 1;
  v48 = type metadata accessor for Location(0);
  v4 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v6 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10004CFD4((uint64_t *)&unk_1009E4CC0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10004CFD4(&qword_1009E33F0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1;
  if ((sub_100437C40() & 1) != v3)
  {
    if ((a1 & 1) != 0)
    {
      v15 = sub_10043816C(v9);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, double))(v11 + 48))(v9, 1, v10, v15) == 1)
      {
        sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009E4CC0);
        if (qword_1009CE4B0 != -1)
          swift_once(&qword_1009CE4B0, sub_100436DCC);
        v16 = type metadata accessor for Logger(0);
        v17 = sub_100048F64(v16, (uint64_t)qword_1009E31E0);
        v18 = Logger.logObject.getter(v17);
        v19 = static os_log_type_t.error.getter(v18);
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v20 = 0;
          swift_slowDealloc(v20, -1, -1);
        }

      }
      else
      {
        v34 = *(int *)(v10 + 48);
        v35 = &v13[v34];
        v36 = (_QWORD *)((char *)v9 + v34);
        (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 32))(v13, v9, v48);
        v37 = *v36;
        v38 = v36[1];
        *(_QWORD *)v35 = *v36;
        *((_QWORD *)v35 + 1) = v38;
        v39 = *(_QWORD *)(v14[8] + OBJC_IVAR____TtC5Books21BookReaderDataManager_annotationProviderService + 8);
        swift_bridgeObjectRetain(v38);
        v41 = Location.documentOrdinal.getter(v40);
        v42 = Location.pageOffset.getter(v41);
        if (v42 < 0)
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
          __break(1u);
        }
        else
        {
          v43 = v42;
          ObjectType = swift_getObjectType();
          dispatch thunk of AnnotationProviding.bookmark(location:documentOrdinal:pageOffset:eventType:)(v37, v38, v41, v43, 2, ObjectType, v39);
          swift_bridgeObjectRelease(v38);
          Strong = swift_unknownObjectWeakLoadStrong(v14 + 2);
          if (Strong)
          {
            v46 = Strong;
            sub_1005DE9FC(1);
            swift_unknownObjectRelease(v46);
          }
          sub_100010960((uint64_t)v13, &qword_1009E33F0);
        }
      }
    }
    else
    {
      v21 = v1[8];
      v22 = v1[13];
      v23 = swift_getObjectType();
      v24 = dispatch thunk of Paginating.bookPaginationEntity.getter(v23, v22);
      v25 = *(_QWORD *)(v1[21] + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
      swift_retain(v25);
      CurrentValueSubject.value.getter(v6);
      v26 = swift_release(v25);
      v27 = BookPaginationEntity.bookmarks(for:)(v6, v26);
      v28 = swift_release(v24);
      (*(void (**)(_QWORD *, uint64_t, __n128))(v4 + 8))(v6, v48, v28);
      v29 = sub_100436C38(v27);
      v30 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Books21BookReaderDataManager_annotationProviderService + 8);
      v31 = swift_getObjectType();
      dispatch thunk of AnnotationProviding.deleteAnnotationsWithUUIDs(_:)(v29, v31, v30);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v29);
      v32 = swift_unknownObjectWeakLoadStrong(v1 + 2);
      if (v32)
      {
        v33 = v32;
        sub_1005DE9FC(0);
        swift_unknownObjectRelease(v33);
      }
    }
  }
}

double sub_10043816C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  __n128 v17;
  double result;

  v3 = *(_QWORD *)(v1 + 168);
  v4 = OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  v6 = type metadata accessor for CurrentLocationProvider(0);
  v7 = sub_100008DB0((unint64_t *)&unk_1009F1BE0, type metadata accessor for CurrentLocationProvider, (uint64_t)&unk_100712AA0);
  v8 = swift_retain(v5);
  v9 = LocationProviding.readingLocationCFI.getter(v6, v7, v8);
  v11 = v10;
  swift_release(v5);
  v12 = sub_1001F15BC();
  LOBYTE(v5) = Collection.isNotEmpty.getter(&type metadata for String, v12);
  v13 = sub_10004CFD4(&qword_1009E33F0);
  v14 = v13;
  if ((v5 & 1) != 0)
  {
    v15 = (_QWORD *)((char *)a1 + *(int *)(v13 + 48));
    v16 = *(_QWORD *)(v3 + v4);
    swift_retain(v16);
    CurrentValueSubject.value.getter(a1);
    v17 = swift_release(v16);
    *v15 = v9;
    v15[1] = v11;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 56))(a1, 0, 1, v14, v17);
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004382B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;

  v1 = sub_10004CFD4(&qword_1009E3480);
  v2 = *(_QWORD *)(v1 - 8);
  v63 = v1;
  v64 = v2;
  __chkstk_darwin(v1);
  v56 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10004CFD4(&qword_1009E3488);
  __chkstk_darwin(v66);
  v57 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10004CFD4(&qword_1009E3490);
  __chkstk_darwin(v65);
  v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D4D90);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009E3498);
  v51 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10004CFD4(&qword_1009E34A0);
  __chkstk_darwin(v58);
  v53 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10004CFD4(&qword_1009E34A8);
  v61 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v54 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10004CFD4(&qword_1009E34B0);
  v62 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v55 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v0;
  v16 = *(_QWORD *)(v0 + 104);
  ObjectType = swift_getObjectType();
  v68 = dispatch thunk of Paginating.bookPaginationEntityPublisher.getter(ObjectType, v16);
  dispatch thunk of Paginating.paginationComplete.getter(ObjectType, v16);
  v18 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher<>.removeDuplicates()(v6, v18, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = sub_100030B34(&qword_1009E34B8, &qword_1009E3498, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  Publisher.asSignal()(v10, v19);
  v20 = v10;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v10);
  v21 = dispatch thunk of Paginating.bookmarksChangedPublisher.getter(ObjectType, v16);
  v67[0] = v21;
  v22 = sub_10004CFD4(&qword_1009E3B40);
  v23 = sub_100030B34(&qword_1009F0090, &qword_1009E3B40, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v24 = v52;
  Publisher.prepend(_:)(&off_1008F0D10, v22, v23);
  swift_release(v21);
  v67[0] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 168)
                                 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider)
                     + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject);
  v25 = sub_10004CFD4(&qword_1009D2ED8);
  v26 = sub_100030B34(&qword_1009D2EE0, &qword_1009D2ED8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v67[0] = Publisher.eraseToAnyPublisher()(v25, v26);
  KeyPath = swift_getKeyPath(&unk_1007248D0);
  v28 = sub_10004CFD4(&qword_1009E34C0);
  v29 = sub_100030B34((unint64_t *)&unk_1009E8F50, &qword_1009E34C0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v30 = v56;
  Publisher.map<A>(_:)(KeyPath, v28, v29);
  swift_release(KeyPath);
  swift_release(v67[0]);
  v31 = sub_100030B34(&qword_1009E34C8, &qword_1009E3480, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v32 = sub_100008DB0((unint64_t *)&unk_1009E8ED0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
  v33 = v57;
  v34 = v63;
  Publisher<>.removeDuplicates()(v63, v31, v32);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v34);
  v35 = sub_10004CFD4(&qword_1009E34D0);
  v36 = sub_100030B34(&qword_1009E34D8, &qword_1009E34D0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v67[0] = v20;
  v67[1] = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v67, &opaque type descriptor for <<opaque return type of Publisher.asSignal()>>, 1);
  v38 = sub_100030B34(&qword_1009E34E0, &qword_1009E3490, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  v39 = sub_100030B34(&qword_1009E34E8, &qword_1009E3488, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v48 = OpaqueTypeConformance2;
  v40 = v54;
  Publishers.CombineLatest4.init(_:_:_:_:)(&v68, v53, v24, v33, v35, v58, v65, v66, v36, v48, v38, v39);
  v41 = sub_100030B34(&qword_1009E34F0, &qword_1009E34A8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v42 = v55;
  v43 = v59;
  Publisher.map<A>(_:)(sub_1004388CC, 0, v59, &type metadata for Bool, v41);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v43);
  v44 = sub_100030B34(&qword_1009E34F8, &qword_1009E34B0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v45 = v60;
  v46 = Publisher.eraseToAnyPublisher()(v60, v44);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v45);
  return v46;
}

void sub_1004388CC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = sub_10004CFD4(&qword_1009E3500);
  v8 = BookPaginationEntity.bookmarks(for:)(a1 + *(int *)(v4 + 80));
  v5 = sub_10004CFD4(&qword_1009DDDB0);
  v6 = sub_100030B34(&qword_1009DDDB8, &qword_1009DDDB0, (uint64_t)&protocol conformance descriptor for [A]);
  v7 = Collection.isNotEmpty.getter(v5, v6);
  swift_bridgeObjectRelease(v8);
  *a2 = v7 & 1;
}

uint64_t sub_100438970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v0 + 160, v7, 1, 0);
  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain(v1);
  sub_1002FBE64(v2);
  swift_bridgeObjectRelease(v1);
  v3 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 160) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v3);
  sub_1001FE9A0(v0 + 16);
  sub_1001FE9A0(v0 + 32);
  sub_1001FE9A0(v0 + 48);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 112));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 128));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 144));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));

  swift_release(*(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
  v4 = v0 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate;
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentReadingProgressSubject));
  return v0;
}

uint64_t sub_100438A80()
{
  uint64_t v0;

  sub_100438970();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100438AA4()
{
  return type metadata accessor for BookReaderInteractor(0);
}

uint64_t type metadata accessor for BookReaderInteractor(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E3238, (uint64_t)&nominal type descriptor for BookReaderInteractor);
}

uint64_t sub_100438AC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[17];

  v4[0] = &unk_100724778;
  v4[1] = &unk_100724778;
  v4[2] = &unk_100724778;
  v4[3] = &unk_100724790;
  v4[4] = &unk_100724790;
  v4[5] = &unk_100724790;
  v4[6] = &unk_100724790;
  v4[7] = &unk_100724790;
  v4[8] = &unk_100724790;
  v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[12] = &unk_1007247A8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(result - 8) + 64;
    v4[14] = &unk_1007247C0;
    v4[15] = &unk_1007247C0;
    v4[16] = (char *)&value witness table for Builtin.NativeObject + 64;
    return swift_updateClassMetadata2(a1, 256, 17, v4, a1 + 80);
  }
  return result;
}

_QWORD *sub_100438B8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for PageMovementState(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_100438C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for PageMovementState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_100438C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for PageMovementState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100438CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for PageMovementState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100438D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for PageMovementState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100438E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for PageMovementState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100438EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100438EC4);
}

uint64_t sub_100438EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 3);
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for PageMovementState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100438F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100438F44);
}

uint64_t sub_100438F44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 3) = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for PageMovementState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for _BookReaderInteractorState(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E3398, (uint64_t)&nominal type descriptor for _BookReaderInteractorState);
}

uint64_t sub_100438FC8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100724800;
  result = type metadata accessor for PageMovementState(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1007247C0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100439044()
{
  return sub_100008DB0(&qword_1009E33D8, type metadata accessor for _BookReaderInteractorState, (uint64_t)&unk_100724818);
}

void sub_100439070()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for SpreadPaginationEntity(0);
  __chkstk_darwin(v1);
  v2 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v2);
  __asm { BR              X11 }
}

uint64_t sub_100439120()
{
  uint64_t v0;

  return sub_1003B4D44(v0) & 1;
}

void sub_10043924C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  void (*v41)(char *, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  __n128 v59;
  uint8_t *v60;
  void *v61;
  id v62;
  Swift::String v63;
  id v64;
  double v65;
  __n128 v66;
  char *v67;
  uint64_t v68;
  id v69;
  double v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[5];
  char v80;

  v3 = type metadata accessor for PageLocation(0);
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  __chkstk_darwin(v3);
  v71 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (char *)&v71 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - v8;
  __chkstk_darwin(v10);
  v72 = (char *)&v71 - v11;
  sub_10043DC44(a1, (uint64_t)v79);
  v12 = v80;
  v13 = v79[0];
  v14 = (void *)v79[1];
  v16 = v79[2];
  v15 = v79[3];
  v17 = v79[4];
  v18 = *(_QWORD *)(v1 + 104);
  v76 = v1;
  ObjectType = swift_getObjectType();
  v20 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v18);
  v21 = BookPaginationEntity.document(for:)(v17);
  v22 = swift_release(v20);
  if ((v12 & 1) == 0)
  {
    if (v21)
    {
      v42 = dispatch thunk of DocumentPaginationEntity.page(containingBookmark:)(v16, v15, v22);
      if (v42)
      {
        v43 = v42;
        v44 = PagePaginationEntity.pageOffset.getter(v42);
        swift_release(v43);
        v45 = v72;
        PageLocation.init(documentOrdinal:pageOffset:)(v17, v44);
        if (qword_1009CEAB0 != -1)
          swift_once(&qword_1009CEAB0, sub_100629668);
        v46 = type metadata accessor for Logger(0);
        sub_100048F64(v46, (uint64_t)qword_1009F1A00);
        v48 = v74;
        v47 = v75;
        v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 16))(v9, v45, v75);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.info.getter(v50);
        if (os_log_type_enabled(v50, v51))
        {
          v52 = swift_slowAlloc(12, -1);
          v73 = (char *)v21;
          v53 = (uint8_t *)v52;
          v54 = swift_slowAlloc(32, -1);
          v78 = v54;
          *(_DWORD *)v53 = 136315138;
          v55 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
          v56 = dispatch thunk of CustomStringConvertible.description.getter(v47, v55);
          v58 = v57;
          v77 = sub_100040F58(v56, v57, &v78);
          v45 = v72;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v53 + 4, v53 + 12);
          v59 = swift_bridgeObjectRelease(v58);
          v41 = *(void (**)(char *, uint64_t, __n128))(v48 + 8);
          v41(v9, v47, v59);
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "Requesting move to bookmark location: %s", v53, 0xCu);
          swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v54, -1, -1);
          v60 = v53;
          v21 = (uint64_t)v73;
          swift_slowDealloc(v60, -1, -1);
        }
        else
        {
          v41 = *(void (**)(char *, uint64_t, __n128))(v48 + 8);
          ((void (*)(char *, uint64_t))v41)(v9, v47);
        }

        v69 = *(id *)(v76 + 168);
        sub_10062B9E0(v45, v70);

        v66 = swift_release(v21);
        v67 = v45;
        v68 = v47;
        goto LABEL_20;
      }
      goto LABEL_14;
    }
LABEL_15:
    v61 = *(void **)(v76 + 168);
    type metadata accessor for CurrentLocationController(0);
    sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
    v62 = v61;
    v63._countAndFlagsBits = v13;
    v63._object = v14;
    LocationControlling.moveTo(cfi:)(v63);

    return;
  }
  if (!v21)
    goto LABEL_15;
  v23 = dispatch thunk of DocumentPaginationEntity.page(containingHighlight:)(v16, v15, v22);
  if (!v23)
  {
LABEL_14:
    swift_release(v21);
    goto LABEL_15;
  }
  v24 = v23;
  v25 = PagePaginationEntity.pageOffset.getter(v23);
  swift_release(v24);
  v26 = v73;
  PageLocation.init(documentOrdinal:pageOffset:)(v17, v25);
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v27 = type metadata accessor for Logger(0);
  sub_100048F64(v27, (uint64_t)qword_1009F1A00);
  v29 = v74;
  v28 = v75;
  v30 = v71;
  v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 16))(v71, v26, v75);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.info.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v78 = v35;
    *(_DWORD *)v34 = 136315138;
    v36 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
    v37 = dispatch thunk of CustomStringConvertible.description.getter(v28, v36);
    v39 = v38;
    v77 = sub_100040F58(v37, v38, &v78);
    v26 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v34 + 4, v34 + 12);
    v40 = swift_bridgeObjectRelease(v39);
    v41 = *(void (**)(char *, uint64_t, __n128))(v29 + 8);
    v41(v71, v28, v40);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Requesting move to highlight location: %s", v34, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, __n128))(v29 + 8);
    ((void (*)(char *, uint64_t))v41)(v30, v28);
  }

  v64 = *(id *)(v76 + 168);
  sub_10062B9E0(v26, v65);

  v66 = swift_release(v21);
  v67 = v26;
  v68 = v28;
LABEL_20:
  v41(v67, v68, v66);
}

uint64_t sub_1004397FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v3 = v2;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Location(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)(v3 + 104);
  ObjectType = swift_getObjectType();
  dispatch thunk of Paginating.location(for:)(a1, a2, ObjectType, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  v15 = *(_QWORD *)(v3 + 120);
  v16 = swift_getObjectType();
  v17 = dispatch thunk of PageNumberProviding.pageName(for:)(v12, v16, *(_QWORD *)(v15 + 8));
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  return v17;
}

uint64_t sub_10043998C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Location(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10043CDC0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009D23A0);
    return 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v11 = *(_QWORD *)(v2 + 120);
    ObjectType = swift_getObjectType();
    v13 = dispatch thunk of PageNumberProviding.paginationProvider.getter(ObjectType, *(_QWORD *)(v11 + 8));
    v15 = v14;
    v16 = swift_getObjectType();
    v17 = dispatch thunk of Paginating.bookPaginationEntity.getter(v16, v15);
    swift_unknownObjectRelease(v13);
    v18 = BookPaginationEntity.pageOffset(for:)(v10);
    swift_release(v17);
    v19 = *(_QWORD *)(v2 + 104);
    v20 = swift_getObjectType();
    v21 = dispatch thunk of Paginating.chapterName(bookPageOffset:)(v18, v20, v19);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v21;
}

uint64_t sub_100439B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = type metadata accessor for PageLocation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Location(0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  swift_retain(v9);
  CurrentValueSubject.value.getter(v8);
  swift_release(v9);
  v10 = objc_msgSend((id)objc_opt_self(BCProgressKitController), "sharedController");
  Location.pageLocation.getter(v10);
  sub_10043D280((uint64_t)v5);
  v12 = v11;
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v12)
  {
    v15 = *(_QWORD *)(v0 + 88);
    ObjectType = swift_getObjectType();
    dispatch thunk of BookProviding.bookEntity.getter(v35, ObjectType, v15);
    v17 = v36;
    v18 = v37;
    sub_10003F198(v35, v36);
    dispatch thunk of BookEntityType.assetID.getter(v17, v18);
    v20 = v19;
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    _s5Books15CurrentPageViewVwxx_0(v35);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "activateChapterForBook:chapterID:title:completion:", v21, v22, v23, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
  v24 = *(_QWORD *)(v1 + 88);
  v25 = swift_getObjectType();
  dispatch thunk of BookProviding.bookEntity.getter(v35, v25, v24);
  v26 = v36;
  v27 = v37;
  sub_10003F198(v35, v36);
  dispatch thunk of BookEntityType.assetID.getter(v26, v27);
  v29 = v28;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  _s5Books15CurrentPageViewVwxx_0(v35);
  objc_msgSend(v10, "updateBookProgress:completion:", v30, 0);

  return (*(uint64_t (**)(_QWORD *, uint64_t))(v33 + 8))(v8, v34);
}

double sub_100439DC8(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  double v19[2];

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    v3 = sub_10043A604();
    if ((v3 & 0x100000000) == 0)
    {
      v4 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentReadingProgressSubject);
      v19[0] = *(float *)&v3;
      swift_retain(v4);
      PassthroughSubject.send(_:)(v19);
      swift_release(v4);
    }
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 6);
    if (Strong)
    {
      v6 = Strong;
      v7 = v2[13];
      ObjectType = swift_getObjectType();
      v9 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v7);
      sub_1004D4C30(v9);
      swift_release(v9);
      swift_unknownObjectRelease(v6);
    }
    v10 = v2[24];
    if (v10)
    {
      v11 = v2[23];
      v12 = (void *)v2[21];
      swift_bridgeObjectRetain(v2[24]);
      v13 = v12;
      sub_10062C3D4(v11, v10, v14);
      swift_bridgeObjectRelease(v10);

      v15 = v2[24];
      v2[23] = 0;
      v2[24] = 0;
      swift_bridgeObjectRelease(v15);
    }
  }
  v16 = swift_unknownObjectWeakLoadStrong(v2 + 2);
  if (v16)
  {
    v18 = v16;
    sub_1005EDF80();
    *(_QWORD *)&result = swift_unknownObjectRelease(v18).n128_u64[0];
  }
  return result;
}

void sub_100439F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  float v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t Strong;
  char *v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  id v46;
  double v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[104];
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;

  v2 = v1;
  v4 = type metadata accessor for Location(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v66 - v9;
  v11 = *(_QWORD *)(v1 + 80);
  v12 = *(_QWORD *)(v2 + 88);
  ObjectType = swift_getObjectType();
  v72 = v11;
  v71 = ObjectType;
  v73 = v12;
  dispatch thunk of BookProviding.bookEntity.getter(v76, ObjectType, v12);
  v14 = v77;
  v15 = v78;
  sub_10003F198(v76, v77);
  v70 = dispatch thunk of BookEntityType.sessionID.getter(v14, v15);
  v17 = v16;
  _s5Books15CurrentPageViewVwxx_0(v76);
  if (qword_1009CE4B0 != -1)
    swift_once(&qword_1009CE4B0, sub_100436DCC);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_100048F64(v18, (uint64_t)qword_1009E31E0);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v10, a1, v4);
  v20(v7, a1, v4);
  v21 = swift_bridgeObjectRetain_n(v17, 2);
  v69 = v19;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.info.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(32, -1);
    v25 = swift_slowAlloc(32, -1);
    v67 = v2;
    v26 = v25;
    v76[0] = v25;
    *(_DWORD *)v24 = 134218498;
    v68 = v17;
    v27 = Location.documentOrdinal.getter(v25);
    v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    v28(v10, v4);
    v74 = v27;
    v29 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v24 + 4, v24 + 12);
    *(_WORD *)(v24 + 12) = 2048;
    v30 = Location.pageOffset.getter(v29);
    v28(v7, v4);
    v74 = v30;
    v17 = v68;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v24 + 14, v24 + 22);
    *(_WORD *)(v24 + 22) = 2082;
    swift_bridgeObjectRetain(v17);
    v74 = sub_100040F58(v70, v17, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v24 + 24, v24 + 32);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Received updated location ordinal: %ld offset: %ld session:%{public}s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    v31 = v26;
    v2 = v67;
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v32(v7, v4);
    v32(v10, v4);

    swift_bridgeObjectRelease_n(v17, 2);
  }
  dispatch thunk of BookProviding.bookEntity.getter(v76, v71, v73);
  v33 = v77;
  v34 = v78;
  sub_10003F198(v76, v77);
  LOBYTE(v33) = dispatch thunk of BookEntityType.sample.getter(v33, v34);
  _s5Books15CurrentPageViewVwxx_0(v76);
  if ((v33 & 1) != 0)
    goto LABEL_20;
  v35 = sub_10043A604();
  if ((v35 & 0x100000000) != 0)
    goto LABEL_20;
  v36 = *(float *)&v35;
  if (*(float *)&v35 < 0.0)
    goto LABEL_20;
  v37 = sub_10043A604();
  if ((v37 & 0x100000000) == 0)
  {
    v38 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentReadingProgressSubject);
    *(double *)v76 = *(float *)&v37;
    swift_retain(v38);
    PassthroughSubject.send(_:)(v76);
    swift_release(v38);
  }
  v39 = v2;
  v40 = v2 + 32;
  Strong = swift_unknownObjectWeakLoadStrong(v40);
  if (Strong)
  {
    v42 = (char *)Strong;
    v43 = sub_10004CFD4(&qword_1009DD620);
    inited = swift_initStackObject(v43, v75);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    v76[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(BCAssetReadingProgressKey);
    v76[1] = v45;
    AnyHashable.init<A>(_:)(v76, &type metadata for String, &protocol witness table for String);
    v46 = objc_allocWithZone((Class)NSNumber);
    *(float *)&v47 = v36;
    v48 = objc_msgSend(v46, "initWithFloat:", v47);
    *(_QWORD *)(inited + 96) = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
    *(_QWORD *)(inited + 72) = v48;
    v49 = sub_1000560A8(inited);
    v50 = swift_unknownObjectWeakLoadStrong(&v42[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate]);
    if (v50)
    {
      v51 = (char *)v50;
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v51, "assetViewController:assetPropertyChanged:", v42, isa);
      swift_bridgeObjectRelease(v49);
      swift_unknownObjectRelease(v42);

      v42 = v51;
    }
    else
    {
      swift_bridgeObjectRelease(v49);
    }
    swift_unknownObjectRelease(v42);
  }
  v53 = *(_QWORD *)(v39 + 152);
  v54 = swift_getObjectType();
  v55 = dispatch thunk of CurrentLocationPersisting.persistedLocation.getter(v54, v53);
  v56 = PersistedLocationEntity.readingProgressHighWaterMark.getter();
  swift_release(v55);
  if (v56 >= kAEAnnotationReadingLocationSignificantHighwaterMark
    || kAEAnnotationReadingLocationSignificantHighwaterMark >= v36)
  {
LABEL_20:
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    swift_bridgeObjectRetain(v17);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v76[0] = v61;
      *(_DWORD *)v60 = 136446210;
      swift_bridgeObjectRetain(v17);
      v74 = sub_100040F58(v70, v17, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease_n(v17, 3);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Read past our signifigant high water mark for session:%{public}s", v60, 0xCu);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v17, 2);
    }
    v62 = swift_unknownObjectWeakLoadStrong(v40);
    if (v62)
    {
      v63 = v62;
      v64 = (void *)swift_unknownObjectWeakLoadStrong(v62 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
      if (v64)
      {
        v65 = v64;
        objc_msgSend(v64, "assetViewControllerSignificantReadingLocationChange:", v63);
        swift_unknownObjectRelease(v63);
        swift_unknownObjectRelease(v65);
      }
      else
      {
        swift_unknownObjectRelease(v63);
      }
    }
  }
}

unint64_t sub_10043A604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v16;
  _BYTE v17[16];

  v1 = type metadata accessor for Location(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  swift_retain(v5);
  CurrentValueSubject.value.getter(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(v0 + 104);
  ObjectType = swift_getObjectType();
  v8 = dispatch thunk of Paginating.isPaginationComplete.getter(ObjectType, v6);
  if ((v8 & 1) == 0
    || (Location.hasRequestedLocation.getter(v8) & 1) != 0
    || (v9 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v6),
        v10 = dispatch thunk of BookPaginationEntity.pageCount.getter(),
        swift_release(v9),
        v11 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v6),
        v12 = BookPaginationEntity.pageOffset(for:)(v4),
        swift_release(v11),
        v12 == _s5Books17REActionMenuStateC9pageCountSivpfi_0()))
  {
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v16 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
    if (v10 != v16)
    {
      v14 = 0;
      v13 = COERCE_UNSIGNED_INT((float)v12 / (float)v10);
      goto LABEL_6;
    }
  }
  v13 = 0;
  v14 = 1;
LABEL_6:
  v17[12] = v14;
  return v13 | ((unint64_t)v14 << 32);
}

void sub_10043A790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v35;
  id v36;
  NSString v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53[3];
  uint64_t v54;
  uint64_t v55;

  Strong = swift_unknownObjectWeakLoadStrong(v4 + 48);
  if (Strong)
  {
    v10 = Strong;
    v11 = Strong + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate;
    v12 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (!v12
      || (v13 = v12,
          v14 = objc_msgSend(v12, "readingStatisticsEnabled"),
          swift_unknownObjectRelease(v13),
          (v14 & 1) == 0))
    {
      swift_unknownObjectRelease(v10);
      return;
    }
    v15 = *(_QWORD *)(v4 + 88);
    ObjectType = swift_getObjectType();
    dispatch thunk of BookProviding.bookEntity.getter(v53, ObjectType, v15);
    v16 = v54;
    v17 = v55;
    sub_10003F198(v53, v54);
    v50 = dispatch thunk of BookEntityType.sessionID.getter(v16, v17);
    v19 = v18;
    _s5Books15CurrentPageViewVwxx_0(v53);
    if (qword_1009CE4B0 != -1)
      swift_once(&qword_1009CE4B0, sub_100436DCC);
    v20 = type metadata accessor for Logger(0);
    sub_100048F64(v20, (uint64_t)qword_1009E31E0);
    swift_bridgeObjectRetain_n(a4, 2);
    swift_bridgeObjectRetain(v19);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v48 = a1;
      v24 = swift_slowAlloc(22, -1);
      v47 = swift_slowAlloc(64, -1);
      v53[0] = v47;
      *(_DWORD *)v24 = 136446466;
      v25 = String.redactedCFI.getter(a3, a4);
      v49 = a3;
      v26 = v11;
      v28 = v27;
      v52 = sub_100040F58(v25, v27, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease_n(a4, 2);
      v29 = v28;
      v11 = v26;
      a3 = v49;
      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v24 + 12) = 2082;
      swift_bridgeObjectRetain(v19);
      v52 = sub_100040F58(v50, v19, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease_n(v19, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Received updated location CFI: %{public}s session:%{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      v30 = v24;
      a1 = v48;
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v19, 2);
      swift_bridgeObjectRelease_n(a4, 2);
    }
    dispatch thunk of BookProviding.bookEntity.getter(v53, ObjectType, v15);
    v31 = v54;
    v32 = v55;
    sub_10003F198(v53, v54);
    v33 = dispatch thunk of BookEntityType.sample.getter(v31, v32);
    _s5Books15CurrentPageViewVwxx_0(v53);
    if ((v33 & 1) == 0)
    {
      if ((String.isCFI.getter(a1, a2, v34) & 1) != 0)
      {
        v36 = objc_allocWithZone((Class)BCCFISet);
        swift_bridgeObjectRetain(a2);
        v37 = String._bridgeToObjectiveC()();
        v38 = objc_msgSend(v36, "initWithCFIString:", v37, swift_bridgeObjectRelease(a2).n128_f64[0]);

        if (!v38)
        {
          __break(1u);
          goto LABEL_25;
        }
        v39 = (void *)swift_unknownObjectWeakLoadStrong(v11);
        if (v39)
        {
          v40 = v39;
          objc_msgSend(v39, "assetViewController:willHideContentWithCFIs:", v10, v38);

          *(_QWORD *)&v35 = swift_unknownObjectRelease(v40).n128_u64[0];
        }
        else
        {

        }
      }
      if ((String.isCFI.getter(a3, a4, v35) & 1) != 0)
      {
        v41 = objc_allocWithZone((Class)BCCFISet);
        swift_bridgeObjectRetain(a4);
        v42 = String._bridgeToObjectiveC()();
        v43 = objc_msgSend(v41, "initWithCFIString:", v42, swift_bridgeObjectRelease(a4).n128_f64[0]);

        if (v43)
        {
          v44 = (void *)swift_unknownObjectWeakLoadStrong(v11);
          if (!v44)
          {
            swift_unknownObjectRelease(v10);

            return;
          }
          v45 = (uint64_t)v44;
          objc_msgSend(v44, "assetViewController:didShowContentWithCFIs:", v10, v43);
          swift_unknownObjectRelease(v10);

          v46 = v45;
          goto LABEL_21;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    v46 = v10;
LABEL_21:
    swift_unknownObjectRelease(v46);
  }
}

uint64_t sub_10043AC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v44 - v12;
  result = String.isCFI.getter(a1, a2, v11);
  if ((result & 1) != 0)
  {
    Date.init()(result);
    v15 = v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate;
    v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate, v51, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v7 + 24))(v15, v13, v6, v16);
    swift_endAccess(v51);
    v17 = *(_QWORD *)(v3 + 88);
    ObjectType = swift_getObjectType();
    dispatch thunk of BookProviding.bookEntity.getter(v51, ObjectType, v17);
    v19 = v52;
    v20 = v53;
    sub_10003F198(v51, v52);
    v21 = dispatch thunk of BookEntityType.sessionID.getter(v19, v20);
    v23 = v22;
    _s5Books15CurrentPageViewVwxx_0(v51);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v24 = type metadata accessor for Logger(0);
    sub_100048F64(v24, (uint64_t)qword_1009F1A00);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    swift_bridgeObjectRetain_n(a2, 2);
    swift_bridgeObjectRetain(v23);
    v26 = Logger.logObject.getter(v25);
    v30 = static os_log_type_t.debug.getter(v26, v27, v28, v29);
    v49 = v30;
    if (os_log_type_enabled(v26, v30))
    {
      v31 = swift_slowAlloc(32, -1);
      v45 = a1;
      v32 = v31;
      v47 = swift_slowAlloc(96, -1);
      v51[0] = v47;
      *(_DWORD *)v32 = 136446722;
      v44 = v21;
      v33 = sub_100008DB0(&qword_1009E1D40, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v46 = v26;
      v34 = dispatch thunk of CustomStringConvertible.description.getter(v6, v33);
      v48 = v3;
      v36 = v35;
      v50 = sub_100040F58(v34, v35, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v32 + 4, v32 + 12);
      v37 = swift_bridgeObjectRelease(v36);
      v38 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v38(v9, v6, v37);
      *(_WORD *)(v32 + 12) = 2082;
      swift_bridgeObjectRetain(v23);
      v50 = sub_100040F58(v44, v23, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v32 + 14, v32 + 22);
      swift_bridgeObjectRelease_n(v23, 3);
      *(_WORD *)(v32 + 22) = 2082;
      v39 = String.redactedCFI.getter(v45, a2);
      v41 = v40;
      v50 = sub_100040F58(v39, v40, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v32 + 24, v32 + 32);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v41);
      v42 = v46;
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v49, "#currentLoc: updated location change date:%{public}s for:%{public}s location:%{public}s", (uint8_t *)v32, 0x20u);
      v43 = v47;
      swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v32, -1, -1);

    }
    else
    {
      v38 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      ((void (*)(char *, uint64_t))v38)(v9, v6);

      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease_n(v23, 2);
    }
    sub_10043AFD8(1);
    return ((uint64_t (*)(char *, uint64_t))v38)(v13, v6);
  }
  return result;
}

uint64_t sub_10043AFD8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  _BOOL4 v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  __n128 v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  double v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  __n128 v107;
  void (*v108)(char *, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  __n128 v116;
  void (*v117)(char *, uint64_t);
  char *v118;
  uint8_t *v119;
  uint8_t *v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  char *v131;
  char *v132;
  char *v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint8_t *v144;
  uint64_t v145;
  char *v146;
  _QWORD v147[2];
  uint64_t v148;
  uint64_t v149;
  char *v150;
  _BYTE v151[32];

  LODWORD(v134) = a1;
  v2 = type metadata accessor for PageLocation(0);
  v135 = *(_QWORD *)(v2 - 8);
  v136 = v2;
  __chkstk_darwin(v2);
  v131 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v141 = *(_QWORD *)(v4 - 8);
  v142 = v4;
  __chkstk_darwin(v4);
  v137 = (uint64_t)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v127 - v7;
  v9 = sub_10004CFD4(&qword_1009D2EE8);
  __chkstk_darwin(v9);
  v11 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D2C98);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v133 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v138 = (char *)&v127 - v16;
  v17 = sub_10004CFD4(&qword_1009D2EF0);
  v145 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v132 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v140 = (char *)&v127 - v20;
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v127 - v22);
  v144 = (uint8_t *)v1;
  v24 = *(_QWORD *)(v1 + 168);
  v25 = OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider;
  v26 = *(_QWORD *)(v24 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  swift_retain(v26);
  CurrentValueSubject.value.getter(v23);
  v27 = v26;
  v28 = (char *)v12;
  swift_release(v27);
  v29 = *(_QWORD *)(v24 + v25) + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation;
  swift_beginAccess(v29, v151, 0, 0);
  sub_10043D6D4(v29, (uint64_t)v11);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  v143 = v23;
  v139 = v8;
  if (v30 == 1)
  {
    sub_100010960((uint64_t)v11, &qword_1009D2EE8);
    goto LABEL_9;
  }
  v31 = v138;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v138, v11, v12);
  DatedLocation.date.getter(v12);
  v32 = v137;
  DatedLocation.date.getter(v17);
  v33 = static Date.> infix(_:_:)(v8, v32);
  v34 = v141;
  v35 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
  v36 = v32;
  v37 = v142;
  v35(v36, v142);
  v35((uint64_t)v8, v37);
  v38 = v31;
  if ((v33 & 1) == 0)
  {
    (*(void (**)(char *, char *))(v13 + 8))(v31, v28);
LABEL_9:
    v67 = v143;
    v68 = DatedLocation.location.getter(v17);
    v69 = v147[0];
    v70 = String.isCFI.getter(v146, v147[0], v68);
    swift_bridgeObjectRelease(v69);
    v71 = v140;
    if ((v70 & 1) != 0)
    {
      v72 = *((_QWORD *)v144 + 11);
      ObjectType = swift_getObjectType();
      dispatch thunk of BookProviding.bookEntity.getter(&v146, ObjectType, v72);
      v74 = v148;
      v75 = v149;
      sub_10003F198(&v146, v148);
      v76 = dispatch thunk of BookEntityType.sessionID.getter(v74, v75);
      v78 = v77;
      _s5Books15CurrentPageViewVwxx_0(&v146);
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v79 = type metadata accessor for Logger(0);
      sub_100048F64(v79, (uint64_t)qword_1009F1A00);
      v80 = v145;
      (*(void (**)(char *, _QWORD *, uint64_t))(v145 + 16))(v71, v67, v17);
      swift_bridgeObjectRetain(v78);
      v82 = Logger.logObject.getter(v81);
      v83 = static os_log_type_t.default.getter(v82);
      if (os_log_type_enabled(v82, v83))
      {
        v84 = swift_slowAlloc(22, -1);
        v138 = (char *)swift_slowAlloc(64, -1);
        v150 = v138;
        *(_DWORD *)v84 = 136446466;
        v136 = v84 + 4;
        DatedLocation.location.getter(v17);
        v85 = v147[0];
        v86 = String.redactedCFI.getter(v146, v147[0]);
        v137 = v76;
        v87 = v71;
        v88 = v67;
        v90 = v89;
        swift_bridgeObjectRelease(v85);
        v146 = (char *)sub_100040F58(v86, v90, (uint64_t *)&v150);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, v147, v136, v84 + 12);
        v91 = v90;
        v67 = v88;
        v92 = swift_bridgeObjectRelease(v91);
        v145 = *(_QWORD *)(v145 + 8);
        ((void (*)(char *, uint64_t, __n128))v145)(v87, v17, v92);
        *(_WORD *)(v84 + 12) = 2080;
        swift_bridgeObjectRetain(v78);
        v146 = (char *)sub_100040F58(v137, v78, (uint64_t *)&v150);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, v147, v84 + 14, v84 + 22);
        swift_bridgeObjectRelease_n(v78, 3);
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "#currentLoc: Saving currentlocation:%{public}s for sessionID:%s", (uint8_t *)v84, 0x16u);
        v93 = v138;
        swift_arrayDestroy(v138, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v93, -1, -1);
        swift_slowDealloc(v84, -1, -1);

      }
      else
      {
        v145 = *(_QWORD *)(v80 + 8);
        ((void (*)(char *, uint64_t))v145)(v71, v17);

        swift_bridgeObjectRelease_n(v78, 2);
      }
      v110 = *((_QWORD *)v144 + 19);
      v111 = swift_getObjectType();
      DatedLocation.location.getter(v17);
      v112 = (uint64_t)v146;
      v113 = v147[0];
      v114 = sub_10043A604();
      v115 = v139;
      DatedLocation.date.getter(v17);
      dispatch thunk of CurrentLocationPersisting.update(cfiLocation:progress:updateDate:avoidSync:)(v112, v113, v114 | ((HIDWORD(v114) & 1) << 32), v115, v134 & 1, v111, v110);
      v116 = swift_bridgeObjectRelease(v113);
      (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v115, v142, v116);
      return ((uint64_t (*)(_QWORD *, uint64_t))v145)(v67, v17);
    }
    else
    {
      v94 = v145;
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v95 = type metadata accessor for Logger(0);
      sub_100048F64(v95, (uint64_t)qword_1009F1A00);
      v96 = v132;
      v97 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v94 + 16))(v132, v67, v17);
      v98 = Logger.logObject.getter(v97);
      v99 = static os_log_type_t.error.getter(v98);
      if (os_log_type_enabled(v98, v99))
      {
        v100 = (uint8_t *)swift_slowAlloc(12, -1);
        v101 = swift_slowAlloc(32, -1);
        v150 = (char *)v101;
        v102 = v17;
        *(_DWORD *)v100 = 136446210;
        v144 = v100 + 4;
        DatedLocation.location.getter(v17);
        v103 = v147[0];
        v104 = String.redactedCFI.getter(v146, v147[0]);
        v106 = v105;
        swift_bridgeObjectRelease(v103);
        v146 = (char *)sub_100040F58(v104, v106, (uint64_t *)&v150);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, v147, v144, v100 + 12);
        v107 = swift_bridgeObjectRelease(v106);
        v108 = *(void (**)(char *, uint64_t, __n128))(v145 + 8);
        v108(v96, v102, v107);
        _os_log_impl((void *)&_mh_execute_header, v98, v99, "#currentLoc: we have an updated readingLocationCFI:%{public}s but it is invalid. Skiping save.", v100, 0xCu);
        swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v101, -1, -1);
        swift_slowDealloc(v100, -1, -1);

        return ((uint64_t (*)(_QWORD *, uint64_t))v108)(v143, v102);
      }
      else
      {

        v117 = *(void (**)(char *, uint64_t))(v94 + 8);
        v117(v96, v17);
        return ((uint64_t (*)(_QWORD *, uint64_t))v117)(v67, v17);
      }
    }
  }
  v134 = (void (*)(char *, uint64_t))v35;
  v140 = v28;
  v137 = v17;
  v39 = *((_QWORD *)v144 + 11);
  v40 = swift_getObjectType();
  dispatch thunk of BookProviding.bookEntity.getter(&v146, v40, v39);
  v41 = v148;
  v42 = v149;
  sub_10003F198(&v146, v148);
  v43 = dispatch thunk of BookEntityType.sessionID.getter(v41, v42);
  v45 = v44;
  _s5Books15CurrentPageViewVwxx_0(&v146);
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v46 = type metadata accessor for Logger(0);
  sub_100048F64(v46, (uint64_t)qword_1009F1A00);
  v47 = v13;
  v48 = v133;
  v49 = v140;
  (*(void (**)(char *, char *, char *))(v13 + 16))(v133, v38, v140);
  swift_bridgeObjectRetain(v45);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.default.getter(v51);
  v53 = v52;
  v54 = os_log_type_enabled(v51, v52);
  v55 = v139;
  if (v54)
  {
    v56 = swift_slowAlloc(22, -1);
    v132 = (char *)swift_slowAlloc(64, -1);
    v146 = v132;
    *(_DWORD *)v56 = 136315394;
    v128 = v56 + 4;
    v129 = v43;
    v57 = v131;
    v130 = v53;
    DatedLocation.location.getter(v140);
    v58 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
    v59 = v136;
    v60 = dispatch thunk of CustomStringConvertible.description.getter(v136, v58);
    v62 = v61;
    (*(void (**)(char *, uint64_t))(v135 + 8))(v57, v59);
    v150 = (char *)sub_100040F58(v60, v62, (uint64_t *)&v146);
    v49 = v140;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, v151, v128, v56 + 12);
    v63 = swift_bridgeObjectRelease(v62);
    v64 = v133;
    v133 = *(char **)(v47 + 8);
    ((void (*)(char *, char *, __n128))v133)(v64, v49, v63);
    *(_WORD *)(v56 + 12) = 2080;
    swift_bridgeObjectRetain(v45);
    v150 = (char *)sub_100040F58(v129, v45, (uint64_t *)&v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, v151, v56 + 14, v56 + 22);
    swift_bridgeObjectRelease_n(v45, 3);
    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v130, "#currentLoc: Saving current PageLocation:%s for sessionID:%s", (uint8_t *)v56, 0x16u);
    v65 = v132;
    swift_arrayDestroy(v132, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    v66 = v56;
    v38 = v138;
    swift_slowDealloc(v66, -1, -1);

  }
  else
  {
    v133 = *(char **)(v47 + 8);
    ((void (*)(char *, char *))v133)(v48, v49);

    swift_bridgeObjectRelease_n(v45, 2);
    v57 = v131;
  }
  DatedLocation.date.getter(v49);
  v118 = v38;
  v119 = v144;
  v120 = &v144[OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate];
  v121 = swift_beginAccess(&v144[OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate], &v146, 33, 0);
  v122 = v142;
  (*(void (**)(uint8_t *, char *, uint64_t, __n128))(v34 + 40))(v120, v55, v142, v121);
  swift_endAccess(&v146);
  v123 = *((_QWORD *)v119 + 19);
  v124 = v49;
  v125 = swift_getObjectType();
  DatedLocation.location.getter(v124);
  v126 = sub_10043A604();
  DatedLocation.date.getter(v124);
  dispatch thunk of CurrentLocationPersisting.update(pageLocation:progress:updateDate:)(v57, v126 | ((HIDWORD(v126) & 1) << 32), v55, v125, v123);
  v134(v55, v122);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v57, v136);
  ((void (*)(char *, char *))v133)(v118, v124);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v145 + 8))(v143, v137);
}

uint64_t sub_10043BC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  char v11;
  void (*v12)(char *, uint64_t);
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE v19[24];

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v19[-v6 - 8];
  _s8BookEPUB25HighlightAnnotationEntityC5BooksE26annotationModificationDate10Foundation0I0Vvg_0();
  v8 = v0 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate;
  v9 = swift_beginAccess(v0 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate, v19, 0, 0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v10(v4, v8, v1, v9);
  v11 = static Date.> infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v7, v1);
  if ((v11 & 1) != 0)
  {
    v13 = 1;
  }
  else
  {
    v14 = _s8BookEPUB25HighlightAnnotationEntityC5BooksE26annotationModificationDate10Foundation0I0Vvg_0();
    static Date.distantPast.getter(v14);
    v15 = static Date.== infix(_:_:)(v7, v4);
    v12(v4, v1);
    v12(v7, v1);
    if ((v15 & 1) != 0)
    {
      v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v7, v8, v1);
      static Date.distantPast.getter(v16);
      v13 = static Date.== infix(_:_:)(v7, v4);
      v12(v4, v1);
      v12(v7, v1);
    }
    else
    {
      v13 = 0;
    }
  }
  return v13 & 1;
}

double sub_10043BD90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __n128 v64;
  void (*v65)(char *, uint64_t, __n128);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  id v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  __n128 v114;
  uint64_t v115;
  void *v116;
  void *v117;
  Swift::String v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[2];
  uint64_t v128;
  uint64_t v129;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v122 = *(_QWORD *)(v4 - 8);
  v123 = v4;
  __chkstk_darwin(v4);
  v121 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v6);
  v8 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PageLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v119 - v14;
  v16 = *(_QWORD *)(v1 + 88);
  ObjectType = swift_getObjectType();
  dispatch thunk of BookProviding.bookEntity.getter(&v126, ObjectType, v16);
  v19 = v128;
  v18 = v129;
  sub_10003F198(&v126, v128);
  v20 = dispatch thunk of BookEntityType.sessionID.getter(v19, v18);
  v22 = v21;
  _s5Books15CurrentPageViewVwxx_0(&v126);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books20BookReaderInteractor_openingToLocation) == 1)
  {
    swift_bridgeObjectRelease(v22);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v24 = type metadata accessor for Logger(0);
    sub_100048F64(v24, (uint64_t)qword_1009F1A00);
    v25 = swift_retain_n(a1, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      *(_DWORD *)v28 = 136446210;
      v125 = a1;
      v126 = v29;
      v30 = type metadata accessor for PersistedLocationEntity(0);
      v31 = sub_100008DB0(&qword_1009E3510, (uint64_t (*)(uint64_t))&type metadata accessor for PersistedLocationEntity, (uint64_t)&protocol conformance descriptor for PersistedLocationEntity);
      v32 = dispatch thunk of CustomStringConvertible.description.getter(v30, v31);
      v34 = v33;
      v125 = sub_100040F58(v32, v33, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v28 + 4, v28 + 12);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "#currentLoc: Ignoring currentPersistedLocation:%{public}s as we have an openingLocation provided", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      return result;
    }

LABEL_25:
    v87 = a1;
LABEL_26:
    swift_release_n(v87, 2);
    return result;
  }
  v120 = v20;
  v36 = dispatch thunk of AnnotationEntity.location.getter(v23);
  v38 = v37;
  v126 = v36;
  v127[0] = v37;
  v39 = sub_1001F15BC();
  v40 = Collection.isNotEmpty.getter(&type metadata for String, v39);
  v41 = swift_bridgeObjectRelease(v38);
  if ((v40 & 1) == 0 || (sub_10043BC00() & 1) == 0)
  {
    PersistedLocationEntity.pageLocation.getter(v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_100010960((uint64_t)v8, &qword_1009E3508);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      if ((sub_10043BC00() & 1) != 0)
      {
        if (qword_1009CEAB0 != -1)
          swift_once(&qword_1009CEAB0, sub_100629668);
        v54 = type metadata accessor for Logger(0);
        sub_100048F64(v54, (uint64_t)qword_1009F1A00);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
        swift_bridgeObjectRetain(v22);
        v56 = Logger.logObject.getter(v55);
        v57 = static os_log_type_t.default.getter(v56);
        v58 = v57;
        if (os_log_type_enabled(v56, v57))
        {
          v59 = swift_slowAlloc(22, -1);
          v123 = swift_slowAlloc(64, -1);
          v126 = v123;
          *(_DWORD *)v59 = 136446466;
          v121 = (char *)(v59 + 4);
          v60 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
          LODWORD(v122) = v58;
          v61 = dispatch thunk of CustomStringConvertible.description.getter(v9, v60);
          v63 = v62;
          v125 = sub_100040F58(v61, v62, &v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v121, v59 + 12);
          v64 = swift_bridgeObjectRelease(v63);
          v65 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
          v65(v12, v9, v64);
          *(_WORD *)(v59 + 12) = 2082;
          swift_bridgeObjectRetain(v22);
          v125 = sub_100040F58(v120, v22, &v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v59 + 14, v59 + 22);
          swift_bridgeObjectRelease_n(v22, 3);
          _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v122, "#currentLoc: #globalAnnotation Adopting currentPersistedPageLocation:\n%{public}s \nfor:%{public}s", (uint8_t *)v59, 0x16u);
          v66 = v123;
          swift_arrayDestroy(v123, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v66, -1, -1);
          swift_slowDealloc(v59, -1, -1);

        }
        else
        {
          v65 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
          ((void (*)(char *, uint64_t))v65)(v12, v9);

          swift_bridgeObjectRelease_n(v22, 2);
        }
        v100 = *(id *)(v2 + 168);
        sub_10062B9E0(v15, v101);

        ((void (*)(char *, uint64_t))v65)(v15, v9);
        return result;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v67 = type metadata accessor for Logger(0);
    sub_100048F64(v67, (uint64_t)qword_1009F1A00);
    swift_retain_n(a1, 2);
    swift_retain_n(v2, 2);
    swift_bridgeObjectRetain(v22);
    v69 = Logger.logObject.getter(v68);
    v70 = static os_log_type_t.default.getter(v69);
    if (os_log_type_enabled(v69, v70))
    {
      v71 = swift_slowAlloc(32, -1);
      v119 = swift_slowAlloc(96, -1);
      v125 = v119;
      v126 = a1;
      *(_DWORD *)v71 = 136446722;
      v72 = type metadata accessor for PersistedLocationEntity(0);
      v73 = sub_100008DB0(&qword_1009E3510, (uint64_t (*)(uint64_t))&type metadata accessor for PersistedLocationEntity, (uint64_t)&protocol conformance descriptor for PersistedLocationEntity);
      v74 = dispatch thunk of CustomStringConvertible.description.getter(v72, v73);
      v76 = v75;
      v126 = sub_100040F58(v74, v75, &v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, v127, v71 + 4, v71 + 12);
      swift_release_n(a1, 2);
      swift_bridgeObjectRelease(v76);
      *(_WORD *)(v71 + 12) = 2082;
      swift_bridgeObjectRetain(v22);
      v126 = sub_100040F58(v120, v22, &v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, v127, v71 + 14, v71 + 22);
      swift_bridgeObjectRelease_n(v22, 3);
      *(_WORD *)(v71 + 22) = 2080;
      v77 = v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate;
      v78 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_currentLocationChangeDate, &v126, 0, 0);
      v80 = v121;
      v79 = v122;
      v81 = v123;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v122 + 16))(v121, v77, v123, v78);
      v82 = sub_100008DB0(&qword_1009E1D40, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v83 = dispatch thunk of CustomStringConvertible.description.getter(v81, v82);
      v85 = v84;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
      v124 = sub_100040F58(v83, v85, &v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, &v125, v71 + 24, v71 + 32);
      swift_release_n(v2, 2);
      swift_bridgeObjectRelease(v85);
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "#currentLoc: Ignoring currentPersistedLocation:%{public}s for:%{public}s currentLocationChangeDate:%s", (uint8_t *)v71, 0x20u);
      v86 = v119;
      swift_arrayDestroy(v119, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      return result;
    }

    swift_release_n(v2, 2);
    swift_bridgeObjectRelease_n(v22, 2);
    goto LABEL_25;
  }
  v42 = a1;
  v43 = dispatch thunk of AnnotationEntity.location.getter(v41);
  v45 = v44;
  v46 = *(char **)(v2 + 168);
  v47 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider];
  v48 = type metadata accessor for CurrentLocationProvider(0);
  v49 = sub_100008DB0((unint64_t *)&unk_1009F1BE0, type metadata accessor for CurrentLocationProvider, (uint64_t)&unk_100712AA0);
  v50 = swift_retain(v47);
  v51 = LocationProviding.readingLocationCFI.getter(v48, v49, v50);
  v53 = v52;
  swift_release(v47);
  if (v43 == v51 && v45 == v53)
  {
    swift_bridgeObjectRelease_n(v45, 2);
  }
  else
  {
    v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v51, v53, 0);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v53);
    if ((v88 & 1) == 0)
    {
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v102 = type metadata accessor for Logger(0);
      sub_100048F64(v102, (uint64_t)qword_1009F1A00);
      swift_retain_n(a1, 2);
      swift_bridgeObjectRetain(v22);
      v104 = Logger.logObject.getter(v103);
      v105 = static os_log_type_t.default.getter(v104);
      if (os_log_type_enabled(v104, v105))
      {
        v106 = swift_slowAlloc(22, -1);
        v107 = swift_slowAlloc(64, -1);
        v125 = v42;
        v126 = v107;
        *(_DWORD *)v106 = 136446466;
        v108 = type metadata accessor for PersistedLocationEntity(0);
        v109 = sub_100008DB0(&qword_1009E3510, (uint64_t (*)(uint64_t))&type metadata accessor for PersistedLocationEntity, (uint64_t)&protocol conformance descriptor for PersistedLocationEntity);
        v110 = dispatch thunk of CustomStringConvertible.description.getter(v108, v109);
        v112 = v111;
        v125 = sub_100040F58(v110, v111, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v106 + 4, v106 + 12);
        swift_release_n(v42, 2);
        swift_bridgeObjectRelease(v112);
        *(_WORD *)(v106 + 12) = 2082;
        swift_bridgeObjectRetain(v22);
        v125 = sub_100040F58(v120, v22, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v106 + 14, v106 + 22);
        swift_bridgeObjectRelease_n(v22, 3);
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "#currentLoc: #globalAnnotation Adopting currentPersistedLocation:\n%{public}s \nfor:%{public}s", (uint8_t *)v106, 0x16u);
        swift_arrayDestroy(v107, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v107, -1, -1);
        swift_slowDealloc(v106, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v22, 2);
        swift_release_n(a1, 2);
      }
      v113 = v46;
      v115 = dispatch thunk of AnnotationEntity.location.getter(v114);
      v117 = v116;
      type metadata accessor for CurrentLocationController(0);
      sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
      v118._countAndFlagsBits = v115;
      v118._object = v117;
      LocationControlling.moveTo(cfi:)(v118);

      *(_QWORD *)&result = swift_bridgeObjectRelease(v117).n128_u64[0];
      return result;
    }
  }
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v89 = type metadata accessor for Logger(0);
  sub_100048F64(v89, (uint64_t)qword_1009F1A00);
  swift_retain_n(a1, 2);
  swift_bridgeObjectRetain(v22);
  v91 = Logger.logObject.getter(v90);
  v92 = static os_log_type_t.info.getter(v91);
  if (!os_log_type_enabled(v91, v92))
  {

    swift_bridgeObjectRelease_n(v22, 2);
    v87 = a1;
    goto LABEL_26;
  }
  v93 = swift_slowAlloc(22, -1);
  v94 = swift_slowAlloc(64, -1);
  v125 = v42;
  v126 = v94;
  *(_DWORD *)v93 = 136446466;
  v95 = type metadata accessor for PersistedLocationEntity(0);
  v96 = sub_100008DB0(&qword_1009E3510, (uint64_t (*)(uint64_t))&type metadata accessor for PersistedLocationEntity, (uint64_t)&protocol conformance descriptor for PersistedLocationEntity);
  v97 = dispatch thunk of CustomStringConvertible.description.getter(v95, v96);
  v99 = v98;
  v125 = sub_100040F58(v97, v98, &v126);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v93 + 4, v93 + 12);
  swift_release_n(v42, 2);
  swift_bridgeObjectRelease(v99);
  *(_WORD *)(v93 + 12) = 2082;
  swift_bridgeObjectRetain(v22);
  v125 = sub_100040F58(v120, v22, &v126);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v93 + 14, v93 + 22);
  swift_bridgeObjectRelease_n(v22, 3);
  _os_log_impl((void *)&_mh_execute_header, v91, v92, "#currentLoc: #globalAnnotation Ignoring identical location currentPersistedLocation:%{public}s for:%{public}s", (uint8_t *)v93, 0x16u);
  swift_arrayDestroy(v94, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v94, -1, -1);
  swift_slowDealloc(v93, -1, -1);

  return result;
}

double sub_10043CB3C(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_100439DC8(v2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_10043CB98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_100439F00(a1);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_10043CBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  _BYTE v13[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    sub_10043A790(a1, a2, a3, a4);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_10043CC7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    sub_10043AC18(v2, v3);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

double sub_10043CCE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_10043BD90(v2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_10043CD44(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + 16);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    if (v7)
    {
      sub_1005DEFD8(v2);
      *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10043CDC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;

  v5 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  v9.n128_f64[0] = __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + 96);
  v13 = type metadata accessor for PaginatingService(0, v9);
  if (swift_dynamicCastClass(v12, v13))
  {
    swift_unknownObjectRetain(v12);
    v14 = objc_msgSend(a1, "annotationUuid");
    if (v14)
    {
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      v19 = objc_msgSend(a1, "ordinal");
      v20 = dispatch thunk of PaginatingService.bookPaginationEntity.getter(v19);
      v21 = BookPaginationEntity.document(for:)(v19);
      v22 = swift_release(v20);
      if (v21)
      {
        v23 = dispatch thunk of DocumentPaginationEntity.page(containingAnnotation:)(v16, v18, v22);
        swift_bridgeObjectRelease(v18);
        if (v23)
        {
          v25 = PagePaginationEntity.pageOffset.getter(v24);
          swift_release(v23);
          swift_release(v21);
LABEL_20:
          v44 = sub_10004CFD4(&qword_1009D2F18);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v11, 1, 1, v44);
          v45 = sub_10004CFD4(&qword_1009D2AD0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v7, 1, 1, v45);
          Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v19, v25, v11, 0, 0, 0, 0, v7, 0.0, 0);
          swift_unknownObjectRelease(v12);
          v46 = type metadata accessor for Location(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(a2, 0, 1, v46);
        }
        swift_release(v21);
      }
      else
      {
        swift_bridgeObjectRelease(v18);
      }
      v25 = 0;
      goto LABEL_20;
    }
    if (qword_1009CE4B0 != -1)
      swift_once(&qword_1009CE4B0, sub_100436DCC);
    v35 = type metadata accessor for Logger(0);
    sub_100048F64(v35, (uint64_t)qword_1009E31E0);
    v36 = a1;
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v47 = a2;
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v39 = 138412290;
      v48 = v36;
      v41 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v39 + 4, v39 + 12);
      *v40 = v36;

      a2 = v47;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Annotation %@ did not have UUID", v39, 0xCu);
      v42 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v40, 1, v42);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);

    }
    else
    {

    }
    swift_unknownObjectRelease(v12);
    v43 = type metadata accessor for Location(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a2, 1, 1, v43);
  }
  else
  {
    if (qword_1009CE4B0 != -1)
      swift_once(&qword_1009CE4B0, sub_100436DCC);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100048F64(v26, (uint64_t)qword_1009E31E0);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = a2;
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "No paginating service", v31, 2u);
      v32 = v31;
      a2 = v30;
      swift_slowDealloc(v32, -1, -1);
    }

    v33 = type metadata accessor for Location(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a2, 1, 1, v33);
  }
}

uint64_t sub_10043D280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  __n128 v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(v1 + 104);
  ObjectType = swift_getObjectType();
  if ((dispatch thunk of Paginating.isPaginationComplete.getter(ObjectType, v3) & 1) == 0)
  {
    if (qword_1009CE4B0 != -1)
      swift_once(&qword_1009CE4B0, sub_100436DCC);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100048F64(v18, (uint64_t)qword_1009E31E0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.info.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "pagination not yet complete", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return 0;
  }
  v5 = dispatch thunk of Paginating.lastChapterIndex(forPageLocation:)(a1, ObjectType, v3);
  if ((v6 & 1) != 0)
    return 0;
  v7 = v5;
  v8 = *(_QWORD *)(v1 + 88);
  v9 = swift_getObjectType();
  dispatch thunk of BookProviding.bookEntity.getter(v24, v9, v8);
  v10 = v25;
  v11 = v26;
  sub_10003F198(v24, v25);
  v12 = dispatch thunk of BookEntityType.chapters.getter(v10, v11);
  result = _s5Books15CurrentPageViewVwxx_0(v24);
  if ((v12 & 0xC000000000000001) != 0)
  {
    v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v12);
    goto LABEL_7;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(v12 + 8 * v7 + 32);
    v15 = swift_retain(v14);
LABEL_7:
    v16 = ChapterEntity.href.getter(v15);
    swift_release(v14);
    if ((v12 & 0xC000000000000001) != 0)
    {
      v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v12);
    }
    else
    {
      v17 = *(_QWORD *)(v12 + 8 * v7 + 32);
      swift_retain(v17);
    }
    v23 = swift_bridgeObjectRelease(v12);
    ChapterEntity.name.getter(v23);
    swift_release(v17);
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_10043D4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v3 = (_QWORD *)(*(_QWORD *)(v2 + 64) + OBJC_IVAR____TtC5Books21BookReaderDataManager_annotationProviderService);
  v5 = *v3;
  v4 = v3[1];
  ObjectType = swift_getObjectType(*v3, a2);
  swift_unknownObjectRetain(v5);
  v7 = dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(ObjectType, v4);
  v8 = swift_unknownObjectRelease(v5);
  v9 = dispatch thunk of BookAnnotationEntity.totalHighlights.getter(v8);
  swift_release(v7);
  v11 = *v3;
  v10 = v3[1];
  v13 = swift_getObjectType(*v3, v12);
  swift_unknownObjectRetain(v11);
  v14 = dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(v13, v10);
  v15 = swift_unknownObjectRelease(v11);
  v16 = dispatch thunk of BookAnnotationEntity.totalNotes.getter(v15);
  swift_release(v14);
  result = v9 - v16;
  if (__OFSUB__(v9, v16))
    __break(1u);
  return result;
}

uint64_t sub_10043D570()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_10043A604();
  if ((v0 & (unint64_t)&_mh_execute_header) != 0)
    *(double *)&result = 0.0;
  else
    *(double *)&result = *(float *)&v0;
  return result;
}

uint64_t sub_10043D59C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009E33E0);
  v1 = sub_100030B34(&qword_1009E33E8, &qword_1009E33E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_10043D610(uint64_t a1, uint64_t a2)
{
  return sub_10043D628(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of BookAnnotationEntity.totalBookmarks.getter);
}

uint64_t sub_10043D61C(uint64_t a1, uint64_t a2)
{
  return sub_10043D628(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of BookAnnotationEntity.totalNotes.getter);
}

uint64_t sub_10043D628(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = (_QWORD *)(*(_QWORD *)(v3 + 64) + OBJC_IVAR____TtC5Books21BookReaderDataManager_annotationProviderService);
  v6 = *v5;
  v7 = v5[1];
  ObjectType = swift_getObjectType(*v5, a2);
  swift_unknownObjectRetain(v6);
  v9 = dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(ObjectType, v7);
  v10 = swift_unknownObjectRelease(v6);
  v11 = a3(v10);
  swift_release(v9);
  return v11;
}

uint64_t sub_10043D6AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ElementPaginationEntity.uniqueIdentifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10043D6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D2EE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10043D71C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  double v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  NSObject *v55;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Location(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_isOpening) == 1)
    *(_BYTE *)(v2 + OBJC_IVAR____TtC5Books20BookReaderInteractor_openingToLocation) = 1;
  if (!a1)
  {
    if (qword_1009CE4B0 != -1)
      swift_once(&qword_1009CE4B0, sub_100436DCC);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100048F64(v26, (uint64_t)qword_1009E31E0);
    v55 = Logger.logObject.getter(v27);
    v28 = static os_log_type_t.error.getter(v55);
    if (os_log_type_enabled(v55, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v28, "Ignoring nil location", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }
    goto LABEL_13;
  }
  v14 = objc_opt_self(BKEpubCFILocation);
  v15 = swift_dynamicCastObjCClass(a1, v14);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = *(void **)(v2 + 168);
    v55 = a1;
    v18 = v17;
    v19 = objc_msgSend(v16, "cfiString");
    if (v19)
    {
      v20 = v19;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;

      type metadata accessor for CurrentLocationController(0);
      sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
      v24._countAndFlagsBits = v21;
      v24._object = v23;
      LocationControlling.moveTo(cfi:)(v24);

      v25 = v23;
LABEL_7:
      swift_bridgeObjectRelease(v25);
LABEL_8:

LABEL_13:
      return;
    }
    goto LABEL_28;
  }
  v30 = objc_opt_self(BKAnchorPathLocation);
  v31 = swift_dynamicCastObjCClass(a1, v30);
  if (v31)
  {
    v32 = (void *)v31;
    v55 = a1;
    v33 = objc_msgSend(v32, "pathWithAnchor");
    if (!v33)
      goto LABEL_8;
    v34 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v37 = v36;

    v38 = *(_QWORD *)(v2 + 104);
    ObjectType = swift_getObjectType();
    if ((dispatch thunk of Paginating.isPaginationComplete.getter(ObjectType, v38) & 1) == 0)
    {
      v25 = *(void **)(v2 + 192);
      *(_QWORD *)(v2 + 184) = v35;
      *(_QWORD *)(v2 + 192) = v37;
      goto LABEL_7;
    }
    v54 = *(id *)(v2 + 168);
    sub_10062C3D4(v35, v37, v40);
    swift_bridgeObjectRelease(v37);

  }
  else
  {
    v55 = *(NSObject **)(v2 + 120);
    v41 = objc_opt_self(BKPageLocation);
    v42 = swift_dynamicCastObjCClass(a1, v41);
    v43 = a1;
    if (v42)
    {
      v44 = objc_msgSend((id)v42, "pageOffset");
      v45 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
      if (v45 < 0 || v44 != (id)v45)
      {
        v42 = (uint64_t)objc_msgSend((id)v42, "pageOffset");
        if (v42 < 0)
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
      }
      else
      {
        v42 = 0;
      }
    }
    v54 = v43;
    v46 = swift_getObjectType();
    v47 = objc_msgSend(v43, "ordinal");
    v48 = sub_10004CFD4(&qword_1009D2F18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v9, 1, 1, v48);
    v49 = sub_10004CFD4(&qword_1009D2AD0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v6, 1, 1, v49);
    Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v47, v42, v9, 0, 0, 0, 0, v6, 0.0, 0);
    v51 = dispatch thunk of PageNumberProviding.pageNumber(for:)(v13, v46, v55[1].isa, v50);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v51 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
    {

    }
    else
    {
      v52 = *(id *)(v2 + 168);
      sub_10062C074(v51);

    }
  }
}

uint64_t sub_10043DC24()
{
  return Location.pageLocation.getter();
}

uint64_t sub_10043DC44(uint64_t a1, uint64_t a2)
{
  _s26ContentSelectionInteractorC5StateV6LookupVwtk(a2, a1);
  return a2;
}

void sub_10043DC80(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];

  v10 = (void *)objc_opt_self(UITraitCollection);
  v11 = a1;
  v12 = objc_msgSend(v10, "currentTraitCollection");
  objc_msgSend(v12, "displayCornerRadius");
  v14 = v13;

  v15[0] = v11;
  *(double *)&v15[1] = a4;
  *(double *)&v15[2] = a5;
  v15[3] = 0x3FB999999999999ALL;
  v15[4] = v14;
  v15[5] = 0x4010000000000000;
  View.modifier<A>(_:)(v15, a2, &type metadata for WithPageShadow, a3);

}

uint64_t initializeWithCopy for WithPageShadow(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for WithPageShadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for WithPageShadow(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for WithPageShadow()
{
  return &type metadata for WithPageShadow;
}

uint64_t sub_10043DE6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100871664, 1);
}

uint64_t sub_10043DE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v58 = a2;
  v55 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v55);
  v5 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = sub_10004CFD4(&qword_1009E3518);
  __chkstk_darwin(v56);
  v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ColorScheme(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - v12;
  v14 = v2[3];
  v15 = v2[1];
  v16 = *v2;
  KeyPath = swift_getKeyPath(&unk_100724960);
  v18 = swift_getKeyPath(&unk_100724988);
  v54 = v16;
  static Published.subscript.getter(v13, *(_QWORD *)&v16, KeyPath);
  swift_release(KeyPath);
  v19 = swift_release(v18);
  v20 = enum case for ColorScheme.light(_:);
  v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 104);
  v21(v10, enum case for ColorScheme.light(_:), v7, v19);
  LOBYTE(v18) = static ColorScheme.== infix(_:_:)(v13, v10);
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, v7);
  v22(v13, v7);
  if ((v18 & 1) != 0)
  {
    v23 = swift_getKeyPath(&unk_100724960);
    v24 = swift_getKeyPath(&unk_100724988);
    v53 = a1;
    v25 = v24;
    static Published.subscript.getter(v13, *(_QWORD *)&v54, v23);
    swift_release(v23);
    v26 = v25;
    a1 = v53;
    v27 = swift_release(v26);
    v21(v10, v20, v7, v27);
    v28 = static ColorScheme.== infix(_:_:)(v13, v10);
    v22(v10, v7);
    v22(v13, v7);
    v30 = (uint64_t)v57;
    v29 = v58;
    v31 = v55;
    v32 = v56;
    if ((v28 & 1) != 0)
      v33 = 1010582527;
    else
      v33 = 3958109695;
    v34 = Color.init(rgbaHex:)(v33);
  }
  else
  {
    v34 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
    v30 = (uint64_t)v57;
    v29 = v58;
    v31 = v55;
    v32 = v56;
  }
  v35 = v14 - v14 * v15;
  v36 = *((_QWORD *)v2 + 4);
  v37 = (char *)v5 + *(int *)(v31 + 20);
  v38 = enum case for RoundedCornerStyle.continuous(_:);
  v39 = type metadata accessor for RoundedCornerStyle(0);
  v40 = ((__n128 (*)(char *, uint64_t, uint64_t))*(_QWORD *)(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  *v5 = v36;
  v5[1] = v36;
  v40.n128_f64[0] = v35;
  v41 = Color.opacity(_:)(v34, v40);
  v42 = *((_QWORD *)v2 + 5);
  v43 = *((_QWORD *)v2 + 2);
  sub_10025BC3C((uint64_t)v5, v30);
  v44 = (uint64_t *)(v30 + *(int *)(v32 + 36));
  *v44 = v41;
  v44[1] = v42;
  v44[2] = v43;
  v44[3] = 0;
  v45 = sub_10025BC80((uint64_t)v5);
  v46 = static Alignment.center.getter(v45);
  v48 = v47;
  swift_release(v34);
  v49 = v29 + *(int *)(sub_10004CFD4(&qword_1009E3520) + 36);
  sub_10043E204(v30, v49);
  v50 = (uint64_t *)(v49 + *(int *)(sub_10004CFD4(&qword_1009E3528) + 36));
  *v50 = v46;
  v50[1] = v48;
  v51 = sub_10004CFD4(&qword_1009E3530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v29, a1, v51);
  return sub_10043E24C(v30);
}

uint64_t sub_10043E204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E3518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10043E24C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E3518);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10043E290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E3538;
  if (!qword_1009E3538)
  {
    v1 = sub_100030B74(&qword_1009E3520);
    sub_100030B34(&qword_1009E3540, &qword_1009E3530, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100030B34(&qword_1009E3548, &qword_1009E3528, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E3538);
  }
  return result;
}

BOOL ActionMenuState.isScrubbingRelated.getter(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFF7) == 0x8000000000000010;
}

BOOL ActionMenuState.isAnimatingChapterScrub.getter(uint64_t a1)
{
  return a1 >= 0;
}

BOOL ActionMenuState.isOpen.getter(uint64_t a1)
{
  return a1 == 0x8000000000000008;
}

unint64_t ActionMenuState.description.getter(unint64_t a1)
{
  Swift::String v2;
  void *object;
  unint64_t v5;

  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      __asm { BR              X10 }
    swift_retain(a1 & 0x3FFFFFFFFFFFFFFFLL);
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0xD000000000000011;
  }
  else
  {
    swift_retain(a1);
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5 = 0xD000000000000020;
  }
  v2._countAndFlagsBits = ChapterScrubbingState.description.getter();
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  sub_10028C694(a1);
  return v5;
}

void sub_10043E48C()
{
  JUMPOUT(0x10043E448);
}

void sub_10043E49C()
{
  JUMPOUT(0x10043E448);
}

void sub_10043E4C0()
{
  JUMPOUT(0x10043E448);
}

void sub_10043E4DC()
{
  JUMPOUT(0x10043E448);
}

uint64_t ActionMenuState.isAnyScrubbing.getter(unint64_t a1)
{
  _BOOL4 v1;

  v1 = a1 >> 62 == 2 && (a1 & 0xFFFFFFFFFFFFFFF7) == 0x8000000000000010;
  return (a1 >> 62) < 2 || v1;
}

unint64_t sub_10043E52C()
{
  unint64_t *v0;

  return ActionMenuState.description.getter(*v0);
}

uint64_t sub_10043E534(unint64_t *a1, unint64_t *a2)
{
  return _s5Books15ActionMenuStateO2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s5Books15ActionMenuStateO2eeoiySbAC_ACtFZ_0(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      __asm { BR              X10 }
    if (a2 >> 62 == 1)
    {
      sub_10028C678(a1);
      sub_10028C678(a2);
      v4 = a1 & 0x3FFFFFFFFFFFFFFFLL;
      v5 = a2 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_7:
      v6 = _s5Books21ChapterScrubbingStateC2eeoiySbAC_ACtFZ_0(v4, v5);
      sub_10028C694(a2);
      sub_10028C694(a1);
      return v6 & 1;
    }
  }
  else if (!(a2 >> 62))
  {
    sub_10028C678(a1);
    sub_10028C678(a2);
    v4 = a1;
    v5 = a2;
    goto LABEL_7;
  }
  return 0;
}

unint64_t *initializeBufferWithCopyOfBuffer for ActionMenuState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_10028C678(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ActionMenuState(unint64_t *a1)
{
  return sub_10028C694(*a1);
}

unint64_t *assignWithCopy for ActionMenuState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_10028C678(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_10028C694(v4);
  return a1;
}

unint64_t *assignWithTake for ActionMenuState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_10028C694(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenuState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ActionMenuState(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10043E7C4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_10043E7E0(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_10043E7F0(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenuState()
{
  return &type metadata for ActionMenuState;
}

_QWORD *sub_10043E830(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v2 = v1;
  v29 = a1;
  v3 = sub_10004CFD4(&qword_1009E3640);
  v4 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v31 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E3648);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - v15;
  v2[3] = 0;
  swift_unknownObjectWeakInit(v2 + 2);
  v17 = type metadata accessor for ThemeOptionsContainerViewModel(0);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v19 = v18 + OBJC_IVAR____TtC5Books30ThemeOptionsContainerViewModel__themeOptions;
  v20 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
  sub_10043F7A8((uint64_t)v16, (uint64_t)v13);
  Published.init(initialValue:)(v13, v11);
  sub_100010960((uint64_t)v16, &qword_1009E3608);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19, v10, v7);
  v2[4] = v18;
  v21 = v29;
  v2[5] = v29;
  v2[6] = 0;
  swift_beginAccess(v19, v32, 33, 0);
  swift_retain(v21);
  Published.projectedValue.getter(v7);
  swift_endAccess(v32);
  v22 = swift_allocObject(&unk_1009067C0, 24, 7);
  swift_weakInit(v22 + 16, v2);
  v23 = sub_10043FB60();
  v24 = v30;
  v25 = Publisher<>.sink(receiveValue:)(sub_10043FB58, v22, v30, v23);
  swift_release(v21);
  v26 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v6, v24, v26);
  v27 = v2[6];
  v2[6] = v25;
  swift_release(v27);
  return v2;
}

double sub_10043EAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_10043EAFC(a1);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_10043EAFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v25 - v8);
  v10 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v15 = Strong;
    v26 = a1;
    v16 = *(_QWORD *)(v2 + 32);
    KeyPath = swift_getKeyPath(&unk_100724AF8);
    v18 = swift_getKeyPath(&unk_100724B20);
    static Published.subscript.getter(v9, v16, KeyPath);
    swift_release(KeyPath);
    v19 = swift_release(v18);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v20)(v9, 1, v10, v19) == 1)
    {
      swift_unknownObjectRelease(v15);
      sub_100010960((uint64_t)v9, &qword_1009E3608);
      return;
    }
    sub_10043FBAC((uint64_t)v9, (uint64_t)v13);
    v21 = sub_10004CFD4(&qword_1009E3630);
    v22 = ((uint64_t (*)(void))ThemeOptionsModule.id.getter)();
    sub_10043F7A8(v26, (uint64_t)v6);
    if (v20(v6, 1, v10) == 1)
    {
      sub_100010960((uint64_t)v6, &qword_1009E3608);
    }
    else
    {
      v23 = ThemeOptionsModule.id.getter(v21);
      sub_10002C8F0((uint64_t)v6, type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions);
      if (v23)
        v24 = v22 == v23;
      else
        v24 = 0;
      if (v24)
      {
        swift_unknownObjectRelease(v15);
        sub_10002C8F0((uint64_t)v13, type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions);
        return;
      }
    }
    if ((ThemeOptionsModule.isDirty.getter(v21) & 1) != 0)
    {
      swift_retain(v2);
      sub_10043FBF0(v15);
      swift_unknownObjectRelease(v15);
      sub_10002C8F0((uint64_t)v13, type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions);
      swift_release(v2);
    }
    else
    {
      sub_10002C8F0((uint64_t)v13, type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions);
      swift_unknownObjectRelease(v15);
    }
  }
}

uint64_t type metadata accessor for ThemeOptionsContainerPresenter()
{
  return objc_opt_self(_TtC5Books30ThemeOptionsContainerPresenter);
}

uint64_t sub_10043ED88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;

  v31 = a5;
  v29 = a3;
  v30 = a4;
  v28 = *v5;
  v8 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - v15;
  v17 = sub_10004CFD4(&qword_1009E3630);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10003E1A0(&qword_1009E3638, v21, (uint64_t (*)(uint64_t))type metadata accessor for ThemeOptionsContainerPresenter, (uint64_t)&unk_100724AB0);
  ThemeOptionsModuleFactory.create<A>(router:theme:layoutMode:representativePageText:representativePageTextIsVertical:)(v5, a1, a2, v29, v30, v31, v28, v22);
  v23 = v5[4];
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v16, v20, v17);
  v24 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  v16[*(int *)(v24 + 20)] = 0;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 0, 1, v24);
  sub_10043F7A8((uint64_t)v16, (uint64_t)v13);
  KeyPath = swift_getKeyPath(&unk_100724AF8);
  v26 = swift_getKeyPath(&unk_100724B20);
  sub_10043F7A8((uint64_t)v13, (uint64_t)v10);
  swift_retain(v23);
  static Published.subscript.setter(v10, v23, KeyPath, v26);
  sub_100010960((uint64_t)v13, &qword_1009E3608);
  sub_100010960((uint64_t)v16, &qword_1009E3608);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_10043EF9C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1009E3624);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_10043F004;
  return sub_10043F074(0);
}

uint64_t sub_10043F004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100283F08, v2, v3);
}

uint64_t sub_10043F074(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 112) = a1;
  v3 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v2 + 24) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009E3608) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 48) = swift_task_alloc(v5);
  *(_QWORD *)(v2 + 56) = swift_task_alloc(v5);
  *(_QWORD *)(v2 + 64) = swift_task_alloc(v5);
  *(_QWORD *)(v2 + 72) = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 80) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 88) = v7;
  *(_QWORD *)(v2 + 96) = v8;
  return swift_task_switch(sub_10043F158, v7, v8);
}

uint64_t sub_10043F158()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD **)(v0 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  KeyPath = swift_getKeyPath(&unk_100724AF8);
  v4 = swift_getKeyPath(&unk_100724B20);
  static Published.subscript.getter(v1, v2, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  v6 = *(_QWORD *)(v5 - 8);
  LODWORD(v4) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  sub_100010960((uint64_t)v1, &qword_1009E3608);
  if ((_DWORD)v4 == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(unsigned __int8 *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
  sub_10043F7A8(v7, v8);
  v11 = swift_getKeyPath(&unk_100724AF8);
  v12 = swift_getKeyPath(&unk_100724B20);
  sub_10043F7A8(v8, v9);
  swift_retain(v2);
  static Published.subscript.setter(v9, v2, v11, v12);
  sub_100010960(v8, &qword_1009E3608);
  v13 = sub_100010960(v7, &qword_1009E3608);
  if (v10 != 1)
  {
LABEL_4:
    swift_release(*(_QWORD *)(v0 + 80));
    v16 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    ContinuousClock.init()(v13);
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1009E3628 + dword_1009E3628);
    v14 = (_QWORD *)swift_task_alloc(unk_1009E362C);
    *(_QWORD *)(v0 + 104) = v14;
    *v14 = v0;
    v14[1] = sub_10043F378;
    return v20(200000000000000000, 0, 0, 0, 1);
  }
}

uint64_t sub_10043F378()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 104));
  v4 = v2[4];
  v3 = v2[5];
  v5 = v2[3];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[11];
    v7 = v2[12];
    v8 = sub_10043FD80;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[5], v2[3]);
    v6 = v2[11];
    v7 = v2[12];
    v8 = sub_10043F418;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10043F418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_10043F480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;

  v1 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  KeyPath = swift_getKeyPath(&unk_100724AF8);
  v6 = swift_getKeyPath(&unk_100724B20);
  static Published.subscript.getter(v3, v4, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  v8 = (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7) != 1;
  sub_100010960((uint64_t)v3, &qword_1009E3608);
  return v8;
}

double sub_10043F56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor(0);
  swift_retain(v0);
  v7 = static MainActor.shared.getter(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_100906798, 40, 7);
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  v9 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009E3618, (uint64_t)v8);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_10043F648@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100724AF8);
  v5 = swift_getKeyPath(&unk_100724B20);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_10043F6B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10043F7A8(a1, (uint64_t)&v14 - v8);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100724AF8);
  v12 = swift_getKeyPath(&unk_100724B20);
  sub_10043F7A8((uint64_t)v9, (uint64_t)v6);
  swift_retain(v10);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_100010960((uint64_t)v9, &qword_1009E3608);
}

uint64_t sub_10043F7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E3608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10043F7F0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10043F81C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E3614);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_10043EF9C();
}

uint64_t sub_10043F888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant(0);
  *(_QWORD *)(v6 + 64) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 72) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 80) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 88) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch(sub_10043F92C, 0, 0);
}

uint64_t sub_10043F92C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  v4 = type metadata accessor for ContinuousClock(0);
  v5 = sub_10003E1A0(&qword_1009D4250, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v4, v5);
  v6 = sub_10003E1A0(&qword_1009D4258, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v7;
  v7(v1, v2);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_10043FA4C;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v4, v5);
}

uint64_t sub_10043FA4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 64);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0)
    return swift_task_switch(sub_10043FAF8, 0, 0);
  v8 = *(_QWORD *)(v6 + 80);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10043FAF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10043FB34()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10043FB58(uint64_t a1)
{
  uint64_t v1;

  return sub_10043EAA0(a1, v1);
}

unint64_t sub_10043FB60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E3650;
  if (!qword_1009E3650)
  {
    v1 = sub_100030B74(&qword_1009E3640);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1009E3650);
  }
  return result;
}

uint64_t sub_10043FBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10043FBF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
  {
    v13 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    goto LABEL_6;
  }
  v6 = Strong;
  v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v7);
  swift_release(v6);
  KeyPath = swift_getKeyPath(&unk_100724B40);
  v9 = swift_getKeyPath(&unk_100724B68);
  static Published.subscript.getter(v4, v7, KeyPath);
  swift_release(v7);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v4, 1, v10) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v4, &qword_1009EFD70);
    return;
  }
  if (swift_getEnumCaseMultiPayload(v4, v10) == 1)
  {
    v11 = *v4;
    v12 = v4[3];
    ReadingSettingsModule.fetchThemes()();
    swift_release(v11);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    sub_10002C8F0((uint64_t)v4, type metadata accessor for OverlayViewModel.Overlay);
  }
}

uint64_t ExplicitDeclineActionItem.likeStateController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10002E418(v1 + 128, a1);
}

uint64_t ExplicitDeclineActionItem.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExplicitDeclineActionItem(0) + 36);
  v4 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ExplicitDeclineActionItem.attributes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ExplicitDeclineActionItem(0) + 40));
}

id ExplicitDeclineActionItem.init(data:context:tracker:figaroProvider:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  id result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[3];
  uint64_t v20;
  void *v21;
  _QWORD v22[5];
  __int128 v23;
  uint64_t v24;
  void *v25;
  __int128 v26[2];
  __int128 v27[2];
  __int128 v28[2];

  sub_10002E418((uint64_t)a1, (uint64_t)v28);
  sub_10002E418((uint64_t)a2, (uint64_t)v27);
  sub_10002E418((uint64_t)a4, (uint64_t)v26);
  result = objc_msgSend((id)objc_opt_self(JSAStore), "sharedInstance");
  if (result)
  {
    v11 = result;
    v22[3] = sub_10043FF9C();
    v22[4] = &protocol witness table for JSAStore;
    v22[0] = v11;
    v20 = type metadata accessor for AccountController(0);
    v21 = &protocol witness table for AccountController;
    v19[0] = static AccountController.shared.getter(v20, v12, v13, v14);
    v24 = type metadata accessor for MenuLikeStateController(0);
    v25 = &protocol witness table for MenuLikeStateController;
    sub_1000257F8(&v23);
    MenuLikeStateController.init(authStatusProvider:authServiceProvider:)(v22, v19);
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v15 = type metadata accessor for ExplicitDeclineActionItem(0);
    v16 = a5 + *(int *)(v15 + 36);
    v17 = enum case for ContextActionType.explicitDecline(_:);
    v18 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
    *(_QWORD *)(a5 + *(int *)(v15 + 40)) = 2;
    sub_100022840(v28, a5);
    sub_100022840(v27, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v26, a5 + 88);
    return (id)sub_100022840(&v23, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10043FF9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E3658;
  if (!qword_1009E3658)
  {
    v1 = objc_opt_self(JSAStore);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009E3658);
  }
  return result;
}

uint64_t ExplicitDeclineActionItem.isSupported.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v23[2];
  char v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  sub_10003F198(v0, v2);
  if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v2, v3) & 1) == 0)
    goto LABEL_12;
  v4 = v0[3];
  v5 = v1[4];
  sub_10003F198(v1, v1[3]);
  ContextActionDataProtocol.selectionMode.getter(v23, v4, v5);
  if (v24 == 1)
  {
    sub_1001EB7C0((uint64_t)v23);
LABEL_12:
    v21 = 0;
    return v21 & 1;
  }
  sub_100022840(v23, (uint64_t)v25);
  v6 = v26;
  v7 = v27;
  sub_10003F198(v25, v26);
  v8 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v6, v7);
  if ((static ContextActionAssetType.== infix(_:_:)(v8, 4) & 1) != 0)
    goto LABEL_11;
  v9 = v26;
  v10 = v27;
  sub_10003F198(v25, v26);
  v11 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v9, v10);
  if ((static ContextActionAssetType.== infix(_:_:)(v11, 5) & 1) != 0)
    goto LABEL_11;
  v12 = v26;
  v13 = v27;
  sub_10003F198(v25, v26);
  v14 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v12, v13);
  if (!v15)
    goto LABEL_11;
  v16 = v14;
  v17 = v15;
  swift_bridgeObjectRelease(v15);
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
LABEL_11:
    _s5Books15CurrentPageViewVwxx_0(v25);
    goto LABEL_12;
  }
  v19 = v1[3];
  v20 = v1[4];
  sub_10003F198(v1, v19);
  v21 = dispatch thunk of ContextActionDataProtocol.isOnline.getter(v19, v20);
  _s5Books15CurrentPageViewVwxx_0(v25);
  return v21 & 1;
}

uint64_t ExplicitDeclineActionItem.handle()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[13] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[14] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[15] = v3;
  v1[16] = v4;
  return swift_task_switch(sub_1004401BC, v3, v4);
}

uint64_t sub_1004401BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = *(_QWORD **)(v0 + 104);
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v2, v3) & 1) == 0)
  {
    v6 = swift_release(*(_QWORD *)(v0 + 112));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
  v5 = v1[3];
  v4 = v1[4];
  sub_10003F198(*(_QWORD **)(v0 + 104), v5);
  ContextActionDataProtocol.selectionMode.getter((_QWORD *)(v0 + 16), v5, v4);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 112));
    sub_1001EB7C0(v0 + 16);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
  v8 = *(_QWORD **)(v0 + 104);
  sub_100022840((__int128 *)(v0 + 16), v0 + 64);
  v10 = v1[3];
  v9 = v1[4];
  sub_10003F198(v8, v10);
  if ((dispatch thunk of ContextActionDataProtocol.isAnODPRecommendation.getter(v10, v9) & 1) != 0)
  {
    v11 = (_QWORD *)swift_task_alloc(dword_1009E3674);
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_100440318;
    return sub_1004403EC(v0 + 64);
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_1009E366C);
    *(_QWORD *)(v0 + 144) = v12;
    *v12 = v0;
    v12[1] = sub_1004403A0;
    return sub_1004412FC(v0 + 64);
  }
}

uint64_t sub_100440318()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  return swift_task_switch(sub_100440364, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100440364()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 112));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004403A0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_1004435CC, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_1004403EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2[22] = a1;
  v2[23] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[24] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[25] = v4;
  v2[26] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D5D90);
  v2[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[28] = v6;
  v2[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E3770);
  v2[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[31] = v8;
  v2[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionOutcome(0);
  v2[33] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[34] = v10;
  v2[35] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E3678);
  v2[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0, v12);
  v2[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for JSAction(0);
  v2[38] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[39] = v15;
  v2[40] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009E3778);
  v2[41] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[42] = v17;
  v2[43] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100440564, 0, 0);
}

uint64_t sub_100440564()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[23];
  v2 = v1[8];
  v3 = v1[9];
  sub_10003F198(v1 + 5, v2);
  v0[44] = dispatch thunk of ContextMenuPresentationContextProtocol.objectGraph.getter(v2, v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[45] = v4;
  *v4 = v0;
  v4[1] = sub_1004405F0;
  return BaseObjectGraph.inject<A>(_:)(v0[43], v0[41], v0[41]);
}

uint64_t sub_1004405F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 360);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100440BC0;
  else
    v3 = sub_100440654;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100440654(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1[40];
  v18 = v1[39];
  v4 = v1[37];
  v3 = v1[38];
  v5 = v1[36];
  v19 = v1[31];
  v20 = v1[30];
  v21 = v1[32];
  v6 = (_QWORD *)v1[22];
  static ActionMetrics.notInstrumented.getter(a1);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v7, v1 + 2);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v10 = v6[3];
  v9 = v6[4];
  sub_10003F198(v6, v10);
  v11 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v10, v9);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = v12;
  v13 = sub_100025DC8(inited);
  v14 = type metadata accessor for ClickData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  JSAction.init(actionMetrics:kind:params:clickData:)(v4, 0x6F6853746F4E6F44, 0xED00007369685477, v13, v5);
  v1[15] = v3;
  v1[16] = sub_100008DB0(&qword_1009E3780, (uint64_t (*)(uint64_t))&type metadata accessor for JSAction, (uint64_t)&protocol conformance descriptor for JSAction);
  v15 = sub_1000257F8(v1 + 12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 16))(v15, v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v21, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v20);
  v16 = (_QWORD *)swift_task_alloc(async function pointer to ActionDispatcher.perform(_:withMetrics:asPartOf:)[1]);
  v1[47] = v16;
  *v16 = v1;
  v16[1] = sub_100440830;
  return ActionDispatcher.perform(_:withMetrics:asPartOf:)(v1[35], v1 + 12, v1[32], v1[44], v1[41]);
}

uint64_t sub_100440830()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
  {
    v7 = sub_100440E08;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[34] + 8))(v2[35], v2[33]);
    _s5Books15CurrentPageViewVwxx_0(v2 + 12);
    v7 = sub_1004408D8;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1004408D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  sub_100442170();
  sub_100442640();
  if (qword_1009CDD78 != -1)
    swift_once(&qword_1009CDD78, sub_100270F50);
  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = sub_100048F64(v3, (uint64_t)qword_1009D5CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  UserDefault.wrappedValue.getter((_QWORD *)(v0 + 408), v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((*(_BYTE *)(v0 + 408) & 1) != 0)
  {
    v5 = swift_release(*(_QWORD *)(v0 + 352));
    v7 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 328);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304), v5);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD **)(v0 + 184);
    v18 = v17[19];
    v19 = v17[20];
    sub_10003F198(v17 + 16, v18);
    v20 = v17[10];
    v21 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of LikeStateController.authAndSubmitExplicitDecline(context:data:assetInfo:tracker:)[1]);
    *(_QWORD *)(v0 + 392) = v21;
    *v21 = v0;
    v21[1] = sub_100440A98;
    return dispatch thunk of LikeStateController.authAndSubmitExplicitDecline(context:data:assetInfo:tracker:)(v17 + 5, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176), v20, v18, v19);
  }
}

uint64_t sub_100440A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 392);
  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100441088;
  else
    v3 = sub_100440AFC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100440AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(*(_QWORD *)(v0 + 352));
  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100440BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_release(*(_QWORD *)(v0 + 352));
  v1 = *(_QWORD *)(v0 + 368);
  static Logger.likeActionItem.getter(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v22 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 208);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v25 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v1, v0 + 160, v0 + 136);
    v8 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v10 = v9;
    *(_QWORD *)(v0 + 168) = sub_100040F58(v8, v9, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "error while trying to submit explicit decline preference with : %s for ODP content", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 192);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v14 = *(_QWORD *)(v0 + 320);
  v16 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 296);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  v20 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100440E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 304);
  v7 = swift_release(*(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v8 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 96));
  v9 = *(_QWORD *)(v0 + 384);
  static Logger.likeActionItem.getter(v8);
  swift_errorRetain(v9);
  v10 = swift_errorRetain(v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v29 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 192);
    v31 = *(_QWORD *)(v0 + 208);
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v32 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getErrorValue(v9, v0 + 160, v0 + 136);
    v15 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v17 = v16;
    *(_QWORD *)(v0 + 168) = sub_100040F58(v15, v16, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "error while trying to submit explicit decline preference with : %s for ODP content", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 320);
  v23 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100441088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 304);
  v7 = swift_release(*(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v9 = *(_QWORD *)(v0 + 400);
  static Logger.likeActionItem.getter(v8);
  swift_errorRetain(v9);
  v10 = swift_errorRetain(v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v29 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 192);
    v31 = *(_QWORD *)(v0 + 208);
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v32 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getErrorValue(v9, v0 + 160, v0 + 136);
    v15 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v17 = v16;
    *(_QWORD *)(v0 + 168) = sub_100040F58(v15, v16, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "error while trying to submit explicit decline preference with : %s for ODP content", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 320);
  v23 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004412FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2[22] = a1;
  v2[23] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[24] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[25] = v4;
  v2[26] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D5D90);
  v2[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[28] = v6;
  v2[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E3770);
  v2[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[31] = v8;
  v2[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionOutcome(0);
  v2[33] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[34] = v10;
  v2[35] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E3678);
  v2[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActionMetrics(0, v12);
  v2[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for JSAction(0);
  v2[38] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[39] = v15;
  v2[40] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009E3778);
  v2[41] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[42] = v17;
  v2[43] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100441474, 0, 0);
}

uint64_t sub_100441474()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[23];
  v2 = v1[8];
  v3 = v1[9];
  sub_10003F198(v1 + 5, v2);
  v0[44] = dispatch thunk of ContextMenuPresentationContextProtocol.objectGraph.getter(v2, v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.inject<A>(_:)[1]);
  v0[45] = v4;
  *v4 = v0;
  v4[1] = sub_100441500;
  return BaseObjectGraph.inject<A>(_:)(v0[43], v0[41], v0[41]);
}

uint64_t sub_100441500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 360);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100441A34;
  else
    v3 = sub_100441564;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100441564(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1[40];
  v21 = v1[39];
  v4 = v1[37];
  v3 = v1[38];
  v5 = v1[36];
  v22 = v1[31];
  v23 = v1[30];
  v24 = v1[32];
  v6 = (_QWORD *)v1[23];
  v7 = v6 + 5;
  static ActionMetrics.notInstrumented.getter(a1);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009DB440);
  inited = swift_initStackObject(v8, v1 + 2);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  strcpy((char *)(inited + 32), "cardIdentifier");
  *(_BYTE *)(inited + 47) = -18;
  v11 = v6[8];
  v10 = v6[9];
  sub_10003F198(v7, v11);
  v12 = (void *)dispatch thunk of ContextMenuPresentationContextProtocol.dataModel.getter(v11, v10);
  v13 = dispatch thunk of ContextActionDataModel.presentationRefInstance.getter();
  v15 = v14;

  *(_QWORD *)(inited + 72) = sub_10004CFD4(&qword_1009D2A80);
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v15;
  v16 = sub_100025DC8(inited);
  v17 = type metadata accessor for ClickData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  JSAction.init(actionMetrics:kind:params:clickData:)(v4, 0x6F6853746F4E6F44, 0xED00007369685477, v16, v5);
  v1[15] = v3;
  v1[16] = sub_100008DB0(&qword_1009E3780, (uint64_t (*)(uint64_t))&type metadata accessor for JSAction, (uint64_t)&protocol conformance descriptor for JSAction);
  v18 = sub_1000257F8(v1 + 12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 16))(v18, v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v24, enum case for ActionDispatcher.MetricsBehavior.notProcessed<A>(_:), v23);
  v19 = (_QWORD *)swift_task_alloc(async function pointer to ActionDispatcher.perform(_:withMetrics:asPartOf:)[1]);
  v1[47] = v19;
  *v19 = v1;
  v19[1] = sub_100441774;
  return ActionDispatcher.perform(_:withMetrics:asPartOf:)(v1[35], v1 + 12, v1[32], v1[44], v1[41]);
}

uint64_t sub_100441774()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
  {
    v7 = sub_100441C7C;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[34] + 8))(v2[35], v2[33]);
    _s5Books15CurrentPageViewVwxx_0(v2 + 12);
    v7 = sub_10044181C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10044181C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  if (qword_1009CDD78 != -1)
    swift_once(&qword_1009CDD78, sub_100270F50);
  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = sub_100048F64(v3, (uint64_t)qword_1009D5CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  UserDefault.wrappedValue.getter((_QWORD *)(v0 + 408), v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((*(_BYTE *)(v0 + 408) & 1) != 0)
  {
    v5 = swift_release(*(_QWORD *)(v0 + 352));
    v7 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 328);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304), v5);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 280);
    v13 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD **)(v0 + 184);
    v18 = v17[19];
    v19 = v17[20];
    sub_10003F198(v17 + 16, v18);
    v20 = v17[10];
    v21 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of LikeStateController.authAndSubmitExplicitDecline(context:data:assetInfo:tracker:)[1]);
    *(_QWORD *)(v0 + 392) = v21;
    *v21 = v0;
    v21[1] = sub_1004419D0;
    return dispatch thunk of LikeStateController.authAndSubmitExplicitDecline(context:data:assetInfo:tracker:)(v17 + 5, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176), v20, v18, v19);
  }
}

uint64_t sub_1004419D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 392);
  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100441EFC;
  else
    v3 = sub_100440AFC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100441A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_release(*(_QWORD *)(v0 + 352));
  v1 = *(_QWORD *)(v0 + 368);
  static Logger.likeActionItem.getter(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v22 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 208);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v25 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(v1, v0 + 160, v0 + 136);
    v8 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v10 = v9;
    *(_QWORD *)(v0 + 168) = sub_100040F58(v8, v9, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "error while trying to submit explicit decline preference with : %s for default content", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 192);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v14 = *(_QWORD *)(v0 + 320);
  v16 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 296);
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 232);
  v20 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100441C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 304);
  v7 = swift_release(*(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v8 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 96));
  v9 = *(_QWORD *)(v0 + 384);
  static Logger.likeActionItem.getter(v8);
  swift_errorRetain(v9);
  v10 = swift_errorRetain(v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v29 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 192);
    v31 = *(_QWORD *)(v0 + 208);
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v32 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getErrorValue(v9, v0 + 160, v0 + 136);
    v15 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v17 = v16;
    *(_QWORD *)(v0 + 168) = sub_100040F58(v15, v16, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "error while trying to submit explicit decline preference with : %s for default content", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 320);
  v23 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100441EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 304);
  v7 = swift_release(*(_QWORD *)(v0 + 352));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v9 = *(_QWORD *)(v0 + 400);
  static Logger.likeActionItem.getter(v8);
  swift_errorRetain(v9);
  v10 = swift_errorRetain(v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v29 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 192);
    v31 = *(_QWORD *)(v0 + 208);
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v32 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getErrorValue(v9, v0 + 160, v0 + 136);
    v15 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
    v17 = v16;
    *(_QWORD *)(v0 + 168) = sub_100040F58(v15, v16, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "error while trying to submit explicit decline preference with : %s for default content", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_errorRelease(v9);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 320);
  v23 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100442170()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  Class isa;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;

  v1 = v0;
  v2 = type metadata accessor for FigaroClickEvent.TargetType(0);
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  __chkstk_darwin(v2);
  v64 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FigaroClickEvent.Location.Type(0);
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  __chkstk_darwin(v4);
  v58 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FigaroActionType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for FigaroClickEvent.ActionContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FigaroClickEvent(0);
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  __chkstk_darwin(v14);
  v59 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v0[3];
  v16 = v0[4];
  sub_10003F198(v0, v17);
  result = dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v17, v16);
  if ((result & 1) != 0)
  {
    v19 = v0[3];
    v20 = v1[4];
    sub_10003F198(v1, v1[3]);
    ContextActionDataProtocol.selectionMode.getter(&v65, v19, v20);
    if (v68 == 1)
    {
      return sub_1001EB7C0((uint64_t)&v65);
    }
    else
    {
      sub_100022840(&v65, (uint64_t)v69);
      v21 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
      v22 = v13;
      v21(v13, enum case for FigaroClickEvent.ActionContext.actionSheet(_:), v10);
      v23 = type metadata accessor for ExplicitDeclineActionItem(0);
      *v9 = ContextActionType.rawValue.getter();
      v9[1] = v24;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FigaroActionType.custom(_:), v6);
      v25 = sub_10004CFD4(&qword_1009E8860);
      v26 = type metadata accessor for FigaroClickEvent.Location(0);
      v27 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) | 7);
      *(_OWORD *)(v27 + 16) = xmmword_10070CCA0;
      v28 = v70;
      v29 = v71;
      sub_10003F198(v69, v70);
      v55 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v28, v29);
      v54 = v30;
      v31 = sub_100008DB0((unint64_t *)&unk_1009DDFD0, type metadata accessor for ExplicitDeclineActionItem, (uint64_t)&protocol conformance descriptor for ExplicitDeclineActionItem);
      v53 = ContextActionItem.title.getter(v23, v31);
      v52 = v32;
      v33 = v1[14];
      v34 = v1[15];
      sub_10003F198(v1 + 11, v33);
      v66 = v23;
      v67 = v31;
      v35 = sub_1000257F8(&v65);
      sub_100443588((uint64_t)v1, (uint64_t)v35);
      v36 = dispatch thunk of FigaroProviding.contextMenuActionPosition(for:)(&v65, v33, v34);
      _s5Books15CurrentPageViewVwxx_0(&v65);
      v37 = v58;
      (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v58, enum case for FigaroClickEvent.Location.Type.button(_:), v57);
      FigaroClickEvent.Location.init(adamId:name:locationPosition:locationType:)(v55, v54, v53, v52, v36, v37);
      v38 = v70;
      v39 = v71;
      sub_10003F198(v69, v70);
      v40 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v38, v39);
      v42 = v41;
      v43 = v64;
      (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v64, enum case for FigaroClickEvent.TargetType.dontShow(_:), v63);
      v44 = sub_1004F6E50((uint64_t)_swiftEmptyArrayStorage);
      v45 = v59;
      FigaroClickEvent.init(actionContext:actionDetails:actionType:actionURLString:locations:targetId:targetType:)(v22, v44, v9, 0, 0, v27, v40, v42, v43);
      v46 = sub_100008DB0(&qword_1009D7C20, (uint64_t (*)(uint64_t))&type metadata accessor for FigaroClickEvent, (uint64_t)&protocol conformance descriptor for FigaroClickEvent);
      v47 = v61;
      v48 = FigaroEventBuilding.build()(v61, v46);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v47);
      v49 = (void *)objc_opt_self(JSAApplication);
      type metadata accessor for FigaroKey(0);
      sub_100008DB0(&qword_1009D05A8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070DDC4);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v49, "recordNativeEvent:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

      return _s5Books15CurrentPageViewVwxx_0(v69);
    }
  }
  return result;
}

uint64_t sub_100442640()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  char *v47;
  unint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68[2];
  char v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;

  v1 = v0;
  v2 = type metadata accessor for ProductionType(0);
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  __chkstk_darwin(v2);
  v60 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009DF4E8);
  __chkstk_darwin(v4);
  v61 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ContentType(0);
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentAcquisitionType(0);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextAssetInfoAnalytics(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OdpSuggestionType(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v0[3];
  v21 = v0[4];
  sub_10003F198(v0, v20);
  result = dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v20, v21);
  if ((result & 1) != 0)
  {
    v23 = v0[3];
    v24 = v1[4];
    sub_10003F198(v1, v1[3]);
    ContextActionDataProtocol.selectionMode.getter(v68, v23, v24);
    if (v69 == 1)
      return sub_1001EB7C0((uint64_t)v68);
    sub_100022840(v68, (uint64_t)v70);
    v25 = v1[3];
    v26 = v1[4];
    sub_10003F198(v1, v25);
    dispatch thunk of ContextActionDataProtocol.analyticsAttributes.getter(v25, v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_10044350C((uint64_t)v15);
      return _s5Books15CurrentPageViewVwxx_0(v70);
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v28 = (void *)v1[10];
    if (!v28)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return _s5Books15CurrentPageViewVwxx_0(v70);
    }
    type metadata accessor for EventReporter(0, v27);
    v59 = v28;
    v58 = static EventReporter.shared.getter(v59);
    v29 = v71;
    v30 = v72;
    sub_10003F198(v70, v71);
    v56 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v29, v30);
    v57 = v31;
    (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v11, enum case for ContentAcquisitionType.unknown(_:), v65);
    v32 = v71;
    v33 = v72;
    sub_10003F198(v70, v71);
    v34 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v8, *(unsigned int *)*(&off_100906808 + v34), v67);
    v35 = v71;
    v36 = v72;
    sub_10003F198(v70, v71);
    result = dispatch thunk of ContextAssetInfoProtocol.supplementalContentCount.getter(v35, v36);
    v38 = v37;
    v39 = 0;
    if ((v37 & 1) == 0)
    {
      if (result < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (result <= 0x7FFFFFFF)
      {
        v39 = result;
        goto LABEL_11;
      }
      __break(1u);
      return result;
    }
LABEL_11:
    v55 = v39;
    v40 = (void *)static EventReporter.shared.getter(result);
    v41 = v71;
    v42 = v72;
    sub_10003F198(v70, v71);
    v43 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v41, v42);
    v45 = v44;
    dispatch thunk of EventReporter.seriesType(for:)(v43);

    v46 = swift_bridgeObjectRelease(v45);
    v47 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v62 + 104))(v60, enum case for ProductionType.unknown(_:), v63, v46);
    LOBYTE(v68[0]) = v38 & 1;
    v48 = v55 | ((unint64_t)(v38 & 1) << 32);
    v49 = (void *)v58;
    v50 = v59;
    v51 = v57;
    v52 = (uint64_t)v61;
    EventReporter.emitRemoveSuggestionCardEvent(using:suggestionType:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(v59, v19, v56, v57, v11, v8, v48, v61, v47);

    v53 = swift_bridgeObjectRelease(v51);
    (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v47, v63, v53);
    sub_100443548(v52);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v67);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v11, v65);
    goto LABEL_12;
  }
  return result;
}

void ExplicitDeclineActionItem.swiftuiPostAction(shelfID:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __int128 v59[2];
  char v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;

  v4 = v3;
  v57 = a1;
  v7 = sub_10004CFD4(&qword_1009E3678);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionMetrics(0, v8);
  __chkstk_darwin(v11);
  v58 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009E3680);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v48 - v18);
  v20 = sub_10004CFD4(&qword_1009E3688);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v53 = v22;
    v54 = v14;
    v55 = v13;
    v56 = v10;
    v25 = v4[3];
    v26 = v4[4];
    sub_10003F198(v4, v25);
    swift_bridgeObjectRetain(a2);
    if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v25, v26) & 1) != 0)
    {
      v27 = v4[3];
      v28 = v4[4];
      sub_10003F198(v4, v27);
      ContextActionDataProtocol.selectionMode.getter(v59, v27, v28);
      if (v60 != 1)
      {
        sub_100022840(v59, (uint64_t)v61);
        v29 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
        v30 = swift_allocObject(v29, 48, 7);
        v48 = xmmword_10070CCA0;
        *(_OWORD *)(v30 + 16) = xmmword_10070CCA0;
        v31 = v62;
        v32 = v63;
        sub_10003F198(v61, v62);
        *(_QWORD *)(v30 + 32) = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v31, v32);
        *(_QWORD *)(v30 + 40) = v33;
        v34 = type metadata accessor for Page(0);
        v52 = v34;
        v35 = type metadata accessor for Shelf(0);
        v51 = v35;
        v36 = sub_100008DB0(&qword_1009E3690, (uint64_t (*)(uint64_t))&type metadata accessor for Page, (uint64_t)&protocol conformance descriptor for Page);
        v50 = v36;
        v49 = sub_100008DB0(&qword_1009E3698, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf, (uint64_t)&protocol conformance descriptor for Shelf);
        PageUpdateInstruction.ShelfItemRemovalDescriptor.init(itemIDs:shelfID:)(v30, v57, a2, v34, v35, v36, v49);
        v37 = sub_10004CFD4(&qword_1009E36A0);
        v38 = *(unsigned __int8 *)(v21 + 80);
        v39 = (v38 + 32) & ~v38;
        v40 = swift_allocObject(v37, v39 + *(_QWORD *)(v21 + 72), v38 | 7);
        *(_OWORD *)(v40 + 16) = v48;
        v41 = v53;
        (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v40 + v39, v24, v53);
        *v19 = v40;
        v43 = v54;
        v42 = v55;
        v44 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v54 + 104))(v19, enum case for PageUpdateInstruction.removeItems<A, B>(_:), v55);
        v45 = v58;
        static ActionMetrics.notInstrumented.getter(v44);
        (*(void (**)(char *, uint64_t *, uint64_t))(v43 + 16))(v16, v19, v42);
        v46 = type metadata accessor for ClickData(0);
        v47 = v56;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v56, 1, 1, v46);
        *(_QWORD *)(a3 + 24) = sub_10004CFD4(&qword_1009E36A8);
        *(_QWORD *)(a3 + 32) = sub_100442EC8();
        sub_1000257F8((_QWORD *)a3);
        PageUpdateAction.init(actionMetrics:instruction:animated:clickData:)(v45, v16, 1, v47, v52, v51, v50, v49);
        (*(void (**)(uint64_t *, uint64_t))(v43 + 8))(v19, v42);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v41);
        _s5Books15CurrentPageViewVwxx_0(v61);
        return;
      }
      swift_bridgeObjectRelease(a2);
      sub_1001EB7C0((uint64_t)v59);
    }
    else
    {
      swift_bridgeObjectRelease(a2);
    }
  }
  *(_QWORD *)(a3 + 32) = 0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
}

unint64_t sub_100442EC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E36B0[0];
  if (!qword_1009E36B0[0])
  {
    v1 = sub_100030B74(&qword_1009E36A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for PageUpdateAction<A, B>, v1);
    atomic_store(result, qword_1009E36B0);
  }
  return result;
}

uint64_t sub_100442F14(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_100442F28()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E3664);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return ExplicitDeclineActionItem.handle()();
}

uint64_t initializeBufferWithCopyOfBuffer for ExplicitDeclineActionItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v19);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = (void *)a2[10];
    *(_QWORD *)(v4 + 80) = v9;
    v10 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    v13 = v9;
    v12(v4 + 88, (uint64_t)(a2 + 11), v11);
    v14 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(v4 + 152) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v4 + 128, (uint64_t)(a2 + 16));
    v15 = *(int *)(a3 + 36);
    v16 = v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    *(_QWORD *)(v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t initializeWithCopy for ExplicitDeclineActionItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v8;
  v11(a1 + 88, a2 + 88, v10);
  v13 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 128, a2 + 128);
  v14 = *(int *)(a3 + 36);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

_QWORD *assignWithCopy for ExplicitDeclineActionItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  sub_1001EAB00(a1, a2);
  sub_1001EAB00(a1 + 5, a2 + 5);
  v6 = (void *)a1[10];
  v7 = (void *)a2[10];
  a1[10] = v7;
  v8 = v7;

  sub_1001EAB00(a1 + 11, a2 + 11);
  sub_1001EAB00(a1 + 16, a2 + 16);
  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t initializeWithTake for ExplicitDeclineActionItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 88);
  v9 = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v9;
  *(_OWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 144);
  v11 = *(int *)(a3 + 36);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  v14 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t assignWithTake for ExplicitDeclineActionItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 128));
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplicitDeclineActionItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100443410);
}

uint64_t sub_100443410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ExplicitDeclineActionItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100443498);
}

uint64_t sub_100443498(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10044350C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContextAssetInfoAnalytics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100443548(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009DF4E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100443588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExplicitDeclineActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1004435D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  uint64_t v10;

  KeyPath = swift_getKeyPath(&unk_100724D28);
  v4 = swift_getKeyPath(&unk_100724D50);
  static Published.subscript.getter(v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v10;
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = v5;
  return result;
}

uint64_t sub_100443658()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100724CE0);
  v2 = swift_getKeyPath(&unk_100724D08);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1004436C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[24];

  v1 = swift_allocObject(*v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
  *(_QWORD *)v18 = 0;
  v16 = 0u;
  v17 = 0u;
  *(_OWORD *)&v18[8] = xmmword_100715FD0;
  v2 = sub_10004CFD4(&qword_1009D67E0);
  Published.init(initialValue:)(&v16, v2);
  LOBYTE(v16) = 0;
  Published.init(initialValue:)(&v16, &type metadata for Bool);
  KeyPath = swift_getKeyPath(&unk_100724D28);
  v4 = swift_getKeyPath(&unk_100724D50);
  static Published.subscript.getter(&v16, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v4);
  v14 = v17;
  v15 = v16;
  v13 = *(_OWORD *)v18;
  v5 = *(_QWORD *)&v18[16];
  v6 = swift_getKeyPath(&unk_100724D28);
  v7 = swift_getKeyPath(&unk_100724D50);
  v16 = v15;
  v17 = v14;
  *(_OWORD *)v18 = v13;
  *(_QWORD *)&v18[16] = v5;
  swift_retain(v1);
  static Published.subscript.setter(&v16, v1, v6, v7);
  v8 = swift_getKeyPath(&unk_100724CE0);
  v9 = swift_getKeyPath(&unk_100724D08);
  static Published.subscript.getter(&v16, v0, v8);
  swift_release(v8);
  swift_release(v9);
  LOBYTE(v8) = v16;
  v10 = swift_getKeyPath(&unk_100724CE0);
  v11 = swift_getKeyPath(&unk_100724D08);
  LOBYTE(v16) = v8;
  swift_retain(v1);
  static Published.subscript.setter(&v16, v1, v10, v11);
  return v1;
}

uint64_t sub_1004438A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5Books16InfoBarViewModel__message;
  v2 = sub_10004CFD4(&qword_1009E3858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books16InfoBarViewModel__isTimedMessage;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100443928()
{
  return type metadata accessor for InfoBarViewModel(0);
}

uint64_t type metadata accessor for InfoBarViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E37C0;
  if (!qword_1009E37C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InfoBarViewModel);
  return result;
}

void sub_10044396C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1004439F4(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100443A4C();
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_1004439F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E37D0)
  {
    v2 = sub_100030B74(&qword_1009D67E0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E37D0);
  }
}

void sub_100443A4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009D1850)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009D1850);
  }
}

uint64_t destroy for MenuMicaItem(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[2]);
  result = swift_unknownObjectWeakDestroy(a1 + 7);
  if (a1[9])
    return swift_release(a1[10]);
  return result;
}

uint64_t initializeWithCopy for MenuMicaItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = a2 + 56;
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectWeakCopyInit(a1 + 56, v5);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v6;
    *(_QWORD *)(a1 + 80) = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for MenuMicaItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectWeakCopyAssign(a1 + 56, a2 + 56);
  v6 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  if (!v6)
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v7;
      *(_QWORD *)(a1 + 80) = v10;
      swift_retain(v10);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v7)
  {
    swift_release(*(_QWORD *)(a1 + 80));
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

