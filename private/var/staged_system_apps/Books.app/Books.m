_BYTE *initializeBufferWithCopyOfBuffer for DeepLinkItem(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for ServiceSetupState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100006614 + 4 * byte_10072CB45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100006648 + 4 * asc_10072CB40[v4]))();
}

uint64_t sub_100006648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100006658);
  return result;
}

uint64_t sub_100006664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000666CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100006670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006684(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = (*(_QWORD *)(*(_QWORD *)(result + 32) + 8) & (1 << *(_DWORD *)(result + 48))) != 0;
  return result;
}

uint64_t getEnumTagSinglePayload for AudiobookNowPlayingDownloadState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_100006740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000067A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000067B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000067C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000067D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000067E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000067F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006860(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000068A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000068B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000068C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000068D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000068E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000068F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000069A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000069B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000069C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000069D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000069E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000069F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100006F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t _s13ConfigurationV16CollectionScorerOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100006F6C + 4 * byte_1007187F3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100006FA0 + 4 * byte_1007187EE[v4]))();
}

uint64_t sub_100006FA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006FA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100006FB0);
  return result;
}

uint64_t sub_100006FBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100006FC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100006FC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006FD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006FDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000701C();
  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

unint64_t sub_10000701C()
{
  unint64_t result;

  result = qword_1009D8BE8;
  if (!qword_1009D8BE8)
  {
    result = swift_getWitnessTable(&unk_1007188DC, &_s13ConfigurationV16CollectionScorerON);
    atomic_store(result, (unint64_t *)&qword_1009D8BE8);
  }
  return result;
}

uint64_t sub_100007060(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007068(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007070(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007078(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007080(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007088(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007090(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007098(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000070F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007100(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007108(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007110(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007118(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007120(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007128(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007130(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007138(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007140(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007148(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007150(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007158(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007160(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007168(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007170(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007178(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007180(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007188(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007190(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007198(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000071F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007200(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007208(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007210(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007218(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007220(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007228(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007230(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007238(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007240(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007248(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007250(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007258(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007260(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007268(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007270(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007278(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007280(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007288(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007290(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007298(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000072F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007300(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007308(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007310(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007318(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007320(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007328(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007330(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007338(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007340(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007348(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007350(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007358(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007360(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007368(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007370(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007378(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007380(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007388(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007390(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007398(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073A8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000073F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007400(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007408(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007410(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007418(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007420(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007428(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007430(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007438(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007440(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007448(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100007450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  return Configurable.setting<A>(_:defaultValue:)(a1, a2, *v6, a6);
}

uint64_t _s13ConfigurationV25GenreRecommendationSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1000074A8 + 4 * byte_1007187E9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1000074DC + 4 * byte_1007187E4[v4]))();
}

uint64_t sub_1000074DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000074E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000074ECLL);
  return result;
}

uint64_t sub_1000074F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100007500);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100007504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000750C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100007534@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10000755C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000755C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10000759C
                                                            + 4 * asc_1007187C0[a1]))(0x72756769666E6F63, 0xED00006E6F697461);
}

unint64_t sub_10000759C()
{
  return 0xD000000000000013;
}

uint64_t sub_1000075B8()
{
  return 0x747369486B6F6F62;
}

uint64_t sub_1000075D8()
{
  return 0x495041616964656DLL;
}

unint64_t sub_1000075F0()
{
  return 0xD000000000000022;
}

uint64_t sub_100007610()
{
  return 1768055156;
}

uint64_t sub_100007620(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100007660();
  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

unint64_t sub_100007660()
{
  unint64_t result;

  result = qword_1009D8BE0;
  if (!qword_1009D8BE0)
  {
    result = swift_getWitnessTable(&unk_1007189F4, &_s13ConfigurationV16CollectionSourceON);
    atomic_store(result, (unint64_t *)&qword_1009D8BE0);
  }
  return result;
}

void sub_100007704(id a1)
{
  id v1;

  kdebug_trace(725353712, 70, 0, 0, 0);
  v1 = +[BSUITemplate manager](BSUITemplate, "manager");
  kdebug_trace(725353712, 71, 0, 0, 0);
}

void sub_10000775C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void (**v4)(void);

  v4 = (void (**)(void))objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  if (v4)
    v4[2]();
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_100007828(uint64_t a1)
{
  void *v1;
  _QWORD v2[5];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100063B74;
  v2[3] = &unk_1008E7338;
  v1 = *(void **)(a1 + 40);
  v2[4] = *(_QWORD *)(a1 + 32);
  v3 = v1;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

}

uint64_t sub_100007894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = _s5Books18PropertyValueActorV9ActorTypeCMa_0();
  v1 = swift_allocObject(v0, 112, 15);
  result = swift_defaultActor_initialize(v1);
  qword_1009DD230 = v1;
  return result;
}

uint64_t type metadata accessor for ReadingActivityDonor()
{
  return objc_opt_self(_TtC5Books20ReadingActivityDonor);
}

uint64_t sub_1000078F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR___BKContainerHost____lazy_storage___containerManager;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___BKContainerHost____lazy_storage___containerManager);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKContainerHost____lazy_storage___containerManager);
  }
  else
  {
    v3 = sub_100022424(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain(v3);
    swift_release(v4);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

_QWORD *initializeBufferWithCopyOfBuffer for BooksIntentSceneConfigurator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_unknownObjectRetain(v4);
  return a1;
}

uint64_t sub_100007A10(uint64_t a1)
{
  void *v1;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  objc_msgSend(v1, "signalConditionSatisfied:", 5);

  return kdebug_trace(725353704, 0, 0, 0, 0);
}

void sub_100007A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSDictionary v5;
  uint64_t v6;
  id v7;

  if (!a1)
  {
    v5.super.isa = 0;
    if (a2)
      goto LABEL_3;
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v5.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  if (!a2)
    goto LABEL_5;
LABEL_3:
  v6 = _convertErrorToNSError(_:)(a2);
LABEL_6:
  v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);

}

uint64_t sub_100007AF0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for Logger(0);
  sub_10001BFD8(v7, a2);
  sub_100048F64(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, a3, a4);
}

uint64_t sub_100007B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  uint64_t result;
  uint64_t v11;

  v0 = type metadata accessor for FigaroProvider(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v11 - v6;
  FigaroProvider.init()(v5);
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for ContextMenuProvider());
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v7, v0);
  v9 = sub_1000205F8((uint64_t)v4, v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  static ContextMenuProvider.shared = (uint64_t)v9;
  return result;
}

uint64_t sub_100007D04()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D3190);
  sub_100048F64(v0, (uint64_t)qword_1009D3190);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000025, 0x8000000100712CF0);
}

uint64_t sub_100007D80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

void sub_100007DE8(id a1)
{
  kdebug_trace(725353712, 10, 0, 0, 0);
  +[BKiAPController setup](BKiAPController, "setup");
  kdebug_trace(725353712, 11, 0, 0, 0);
}

uint64_t sub_100007E38(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100736550;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_100007EB8(id a1, SEL a2)
{
  _BYTE v2[24];
  ValueMetadata *v3;
  unint64_t v4;

  type metadata accessor for EventReporter(0, a2);
  v3 = &type metadata for LibraryAnalyticsDataProvider;
  v4 = sub_100066E74();
  static EventReporter.libraryAnalyticsDataProvider.setter(v2);
}

uint64_t sub_100007F00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[4] = v0;
  v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  v1[5] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[6] = v3;
  v1[7] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10002A048, 0, 0);
}

uint64_t sub_100007F60(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100723CD0;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100007FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for PropertyValueActor.ActorType();
  v1 = swift_allocObject(v0, 112, 15);
  result = swift_defaultActor_initialize(v1);
  qword_1009DAFB0 = v1;
  return result;
}

uint64_t sub_10000801C(uint64_t a1, objc_class *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  Swift::String v20;
  Swift::Int v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  void *v33;
  Class isa;
  id v35;
  objc_class *v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  JSValue v46;
  Swift::OpaquePointer_optional v47;

  v46.super.isa = a2;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v44 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for Collection(0);
  v4 = *(_QWORD *)(v43 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v43);
  v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  v9 = type metadata accessor for SuggestionsOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009EC408);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v39 - v17;
  sub_10001DB08((uint64_t)&v39 - v17);
  sub_10000B5E4((uint64_t)v18, (uint64_t)v16, &qword_1009EC408);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    sub_100010960((uint64_t)v16, &qword_1009EC408);
    v19 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
    v20._countAndFlagsBits = 0x80000001007D3DC0;
    v47.value._rawValue = 0;
    v47.is_nil = 108;
    v20._object = (void *)233;
    JSABridge.enqueueValueCall(_:arguments:f:l:)(v46, v47, v20, v21);

  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v40 = v9;
    v41 = v12;
    v22(v12, v16, v9);
    v23 = v8;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
    v39 = v8;
    v25 = v43;
    v24(v8, enum case for Collection.suggestions(_:), v43);
    v26 = type metadata accessor for TaskPriority(0);
    v27 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v44, 1, 1, v26);
    v28 = v42;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v42, v23, v25);
    v29 = *(unsigned __int8 *)(v4 + 80);
    v30 = (v29 + 40) & ~v29;
    v31 = (v5 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = (char *)swift_allocObject(&unk_100910FA8, v31 + 8, v29 | 7);
    *((_QWORD *)v32 + 2) = 0;
    *((_QWORD *)v32 + 3) = 0;
    v33 = v45;
    *((_QWORD *)v32 + 4) = v45;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v32[v30], v28, v25);
    isa = v46.super.isa;
    *(JSValue *)&v32[v31] = v46;
    v35 = v33;
    v36 = isa;
    v37 = sub_10053DC20(v27, (uint64_t)&unk_1009EC418, (uint64_t)v32);
    swift_release(v37);
    sub_100010960(v27, &qword_1009D3150);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v39, v25);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v40);
  }
  return sub_100010960((uint64_t)v18, &qword_1009EC408);
}

uint64_t sub_10000837C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100720A80;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for CookieStorageExperimentIDsHeaderValueProvider()
{
  return objc_opt_self(_TtC5Books45CookieStorageExperimentIDsHeaderValueProvider);
}

uint64_t sub_1000084B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100713EB8;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100008534(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100720440;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self(_TtC5Books8Assembly);
}

void sub_100008680(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  char v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "welcomePresenter"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000A3F8;
  v3[3] = &unk_1008E83C0;
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  objc_msgSend(v2, "welcomePresenterFinishOngoingModalTransitionAnimations:", v3);

}

uint64_t sub_1000086FC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EA7C8);
  sub_100048F64(v0, (uint64_t)qword_1009EA7C8);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001ELL, 0x800000010072C4D0);
}

void sub_10000883C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10006BBAC(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for YearInReviewEligibilityCriteria(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_10006C9DC();
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_1000088F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100724C78;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_100008980(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applicationWillEnterForeground:", *(_QWORD *)(a1 + 32));

}

void sub_1000089BC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applicationDidBecomeActive:", *(_QWORD *)(a1 + 32));

}

uint64_t sub_1000089F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100729578;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100008AD4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100712738;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BCCloudSyncVersionsAdaptor()
{
  return objc_opt_self(_TtC5Books26BCCloudSyncVersionsAdaptor);
}

uint64_t sub_100008B74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100735EA8;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_100008C8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E8840;
  if (!qword_1009E8840)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1009E8840);
  }
  return result;
}

void sub_100008CD4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  dispatch_time_t v4;
  _QWORD block[5];
  uint8_t buf[16];

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    v2 = sub_100036938();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Library Reload: Extended launch completed. Starting library reload in 1s.", buf, 2u);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    v4 = dispatch_time(0, 1000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001C4C14;
    block[3] = &unk_1008E7BE8;
    block[4] = *(_QWORD *)(a1 + 40);
    dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_100008DB0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100008DF0(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  char v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "welcomePresenter"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10001423C;
  v3[3] = &unk_1008E83C0;
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  objc_msgSend(v2, "welcomePresenterFinishOngoingModalTransitionAnimations:", v3);

}

uint64_t type metadata accessor for PaletteContainerView.ContainerView()
{
  return objc_opt_self(_TtCC5Books20PaletteContainerViewP33_B708909BBFE60AF0BC370E92243FB30413ContainerView);
}

unint64_t sub_100008E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D48E0;
  if (!qword_1009D48E0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1009D48E0);
  }
  return result;
}

id sub_100008ED4@<X0>(_QWORD *a1@<X8>)
{
  return sub_100552ACC((uint64_t (*)(_QWORD))type metadata accessor for YearInReviewEligibilityService, (uint64_t)&protocol witness table for YearInReviewEligibilityService, a1);
}

uint64_t sub_100008EE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_10071BFD8;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_100008F6C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSUbiquitousKeyValueStore), "defaultStore");
  qword_1009E7C38 = (uint64_t)result;
  return result;
}

void sub_100008FA4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  uint64_t v6;

  v4 = (objc_class *)type metadata accessor for ReadingActivityService();
  a2[3] = v4;
  a2[4] = &protocol witness table for ReadingActivityService;
  v5 = objc_allocWithZone(v4);
  ReadingActivityService.init(serviceCenter:)(a1);
  *a2 = v6;
}

void sub_100008FF4(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  char v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100008680;
  v3[3] = &unk_1008E83C0;
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 40);
  objc_msgSend(v2, "signalConditionSatisfied:blockID:notifyBlock:", 4, CFSTR("showMainViewController_launchWillDismiss"), v3);

}

uint64_t type metadata accessor for MescalSigner()
{
  return objc_opt_self(_TtC5Books12MescalSigner);
}

void sub_100009130(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    if (v3 < 0)
      v29 = *a1;
    else
      v29 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v29);
    v30 = a2;
    if (v4)
      goto LABEL_3;
LABEL_26:
    v6 = _swiftEmptyArrayStorage;
LABEL_27:
    swift_bridgeObjectRelease(v3);
    *v30 = v6;
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  v30 = a2;
  if (!v4)
    goto LABEL_26;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    v6 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v7 = *(id *)(v3 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "collectionID");
      if (v9)
      {
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

        v14 = objc_msgSend(v8, "title");
        if (!v14)
          goto LABEL_29;
        v15 = v14;
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v18 = v17;

        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_1005B2108(0, v6[2] + 1, 1, v6);
        v20 = v6[2];
        v19 = v6[3];
        if (v20 >= v19 >> 1)
          v6 = sub_1005B2108((_QWORD *)(v19 > 1), v20 + 1, 1, v6);
        v6[2] = v20 + 1;
        v21 = &v6[4 * v20];
        v21[4] = v11;
        v21[5] = v13;
        v21[6] = v16;
        v21[7] = v18;
      }
      else
      {
        if (qword_1009CE7E8 != -1)
          swift_once(&qword_1009CE7E8, sub_1005254D0);
        v22 = type metadata accessor for Logger(0);
        sub_100048F64(v22, (uint64_t)qword_1009E9EB0);
        v23 = v8;
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.error.getter(v24);
        if (os_log_type_enabled(v24, v25))
        {
          v26 = swift_slowAlloc(12, -1);
          v27 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v26 = 138412290;
          *(_QWORD *)(v26 + 4) = v23;
          *v27 = v23;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Collection %@ does not have an ID", (uint8_t *)v26, 0xCu);
          v28 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
          swift_arrayDestroy(v27, 1, v28);
          swift_slowDealloc(v27, -1, -1);
          swift_slowDealloc(v26, -1, -1);

        }
        else
        {

        }
      }
      if (v4 == ++v5)
        goto LABEL_27;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t type metadata accessor for BooksPersonalizationAssembly()
{
  return objc_opt_self(_TtC5Books28BooksPersonalizationAssembly);
}

uint64_t sub_100009500(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100716150;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100009584(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100010960(a1, &qword_1009ECA60);
  v3 = a2[3];
  v4 = a2[4];
  sub_10003F198(a2, v3);
  v5 = dispatch thunk of BooksFinishedStateProvider.state.getter(v3, v4);
  dispatch thunk of ObservableContainer.value.getter();
  return swift_release(v5);
}

void sub_1000095F0(id a1)
{
  id v1;

  kdebug_trace(725353712, 18, 0, 0, 0);
  v1 = +[BCCoverEffects sharedInstance](BCCoverEffects, "sharedInstance");
  kdebug_trace(725353712, 19, 0, 0, 0);
}

void sub_100009648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2 + 1;
  if (!v2)
  {
    v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "group"));
    dispatch_group_enter(v3);

  }
}

void sub_100009698(uint64_t a1)
{
  NSObject *v2;

  if (+[JSAOfflineCache runFromCache](JSAOfflineCache, "runFromCache"))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "workloopUserInitiatedQueue"));
    dispatch_async(v2, &stru_1008EEBA0);

  }
}

uint64_t sub_1000096FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100728D48;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_100009780()
{
  if (qword_1009F50F0 != -1)
    dispatch_once(&qword_1009F50F0, &stru_1008EC078);
  return (id)qword_1009F50E8;
}

void sub_100009804()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id Strong;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKMenuController_appKitBundle);
  if (v1)
    v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "frontMostUIWindow");
  else
    v2 = 0;
  v3 = v0 + OBJC_IVAR___BKMenuController_keyWindow;
  Strong = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKMenuController_keyWindow);
  swift_unknownObjectWeakAssign(v3, v2);
  sub_10004F054(Strong);

}

uint64_t sub_100009894(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_10072BDB8;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100009918(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 24);
    return 0;
  }
  return result;
}

void sub_100009984(void *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v4;
  id v5;
  id v6;
  id v7;

  v4 = (objc_class *)type metadata accessor for WidgetService();
  a2[3] = v4;
  a2[4] = &protocol witness table for WidgetService;
  v5 = objc_allocWithZone(v4);
  v6 = a1;
  v7 = sub_100013AF4(v6);

  *a2 = v7;
}

void sub_1000099E0(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[15];
  _QWORD v4[15];

  v3[0] = &off_10092EF58;
  v3[1] = &off_10092EF70;
  v4[0] = CFSTR("BKAppLaunchConditionLibraryDidInitialize");
  v4[1] = CFSTR("BKAppLaunchConditionDataSourceFetchDidInitiate");
  v3[2] = &off_10092EF88;
  v3[3] = &off_10092EFA0;
  v4[2] = CFSTR("BKAppLaunchConditionLaunching");
  v4[3] = CFSTR("BKAppLaunchConditionPrepareForLaunchDismissal");
  v3[4] = &off_10092EFB8;
  v3[5] = &off_10092EFD0;
  v4[4] = CFSTR("BKAppLaunchConditionLaunchWillDismiss");
  v4[5] = CFSTR("BKAppLaunchConditionLaunched");
  v3[6] = &off_10092EFE8;
  v3[7] = &off_10092F000;
  v4[6] = CFSTR("BKAppLaunchConditionInitialWindowSceneDidConnect");
  v4[7] = CFSTR("BKAppLaunchConditionPrimaryWindowSceneReadyInSupportedInterfaceOrientation");
  v3[8] = &off_10092F018;
  v3[9] = &off_10092F030;
  v4[8] = CFSTR("BKAppLaunchConditionInitialCarPlaySceneDidConnect");
  v4[9] = CFSTR("BKAppLaunchConditionExtendedLaunchComplete");
  v3[10] = &off_10092F048;
  v3[11] = &off_10092F060;
  v4[10] = CFSTR("BKAppLaunchConditionJSAppInitialized");
  v4[11] = CFSTR("BKAppLaunchConditionWelcomeItemsReady");
  v3[12] = &off_10092F078;
  v3[13] = &off_10092F090;
  v4[12] = CFSTR("BKAppLaunchConditionRootBarStandardItemsReady");
  v4[13] = CFSTR("BKAppLaunchConditionLibraryDidFinishReloading");
  v3[14] = &off_10092F0A8;
  v4[14] = CFSTR("BKAppLaunchConditionAEPluginPrewarmCompleted");
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 15));
  v2 = (void *)qword_1009F51A8;
  qword_1009F51A8 = v1;

}

unint64_t sub_100009B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009CEEB0;
  if (!qword_1009CEEB0)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009CEEB0);
  }
  return result;
}

void sub_100009BC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DD320)
  {
    v2 = type metadata accessor for Configuration(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DD320);
  }
}

uint64_t sub_100009C18()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EF140);
  sub_100048F64(v0, (uint64_t)qword_1009EF140);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000036, 0x80000001007D7620);
}

id sub_100009C98()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 10);
  qword_100A1E3D8 = (uint64_t)result;
  return result;
}

uint64_t sub_100009D1C(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v3 = swift_allocObject(&unk_100905518, 24, 7);
  *(_QWORD *)(v3 + 16) = a2;
  v4 = a2;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_100068DF8, v3);
  return swift_release(v3);
}

uint64_t sub_100009E04(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

void sub_100009E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 24) - 1;
  *(_QWORD *)(v1 + 24) = v2;
  if (!v2)
  {
    v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "group"));
    dispatch_group_leave(v3);

  }
}

uint64_t sub_100009E8C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_1007375D0;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100009F10()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EC298);
  sub_100048F64(v0, (uint64_t)qword_1009EC298);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000024, 0x80000001007D3E30);
}

uint64_t sub_100009FE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100734758;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10000A068()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EE820);
  sub_100048F64(v0, (uint64_t)qword_1009EE820);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000014, 0x8000000100731060);
}

uint64_t type metadata accessor for LightLevelControllerWrapper()
{
  return objc_opt_self(_TtC5Books27LightLevelControllerWrapper);
}

uint64_t sub_10000A104(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100726CD8;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MenuController()
{
  return objc_opt_self(BKMenuController);
}

uint64_t sub_10000A1A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100734FB0;
  v4[3] = "(";
  v4[4] = "(";
  v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10000A23C(uint64_t a1)
{
  BKLibraryOperationObserver *v2;
  uint64_t v3;
  void *v4;

  kdebug_trace(725353712, 34, 0, 0, 0);
  v2 = objc_alloc_init(BKLibraryOperationObserver);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 184);
  *(_QWORD *)(v3 + 184) = v2;

  return kdebug_trace(725353712, 35, 0, 0, 0);
}

uint64_t sub_10000A2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    v7 = sub_100444364;
  else
    v7 = sub_10000CDDC;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10000A344(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009DD3D4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AE34;
  return sub_100023248(a1);
}

void sub_10000A398(uint64_t a1)
{
  dispatch_time_t v2;
  NSObject *v3;

  v2 = dispatch_time(0, 2000000000);
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "workloopUtilityQueue"));
  dispatch_after(v2, v3, &stru_1008EED58);

}

void sub_10000A3F8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "welcomePresenter"));
  v3 = *(unsigned __int8 *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100011AC4;
  v4[3] = &unk_1008E72C0;
  v4[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "dismissWelcomeViewControllerAnimated:completion:", v3, v4);

}

uint64_t sub_10000A470(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_10070F8F0;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_10000A4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSDictionary v5;
  uint64_t v6;
  id v7;

  sub_100009E04(0, &qword_1009D4AD8, AMSDialogRequest_ptr);
  v5.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  if (a2)
    v6 = _convertErrorToNSError(_:)(a2);
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);

}

void sub_10000A590(id a1, BKSceneControlling *a2, BOOL *a3)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BKSceneControlling bk_window](a2, "bk_window", a3));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rootViewController"));
  objc_msgSend(v3, "bc_analyticsVisibilityUpdateSubtree");

}

unint64_t sub_10000A5D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9DA0;
  if (!qword_1009D9DA0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D9DA0);
  }
  return result;
}

unint64_t sub_10000A614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D9428;
  if (!qword_1009D9428)
  {
    v1 = objc_opt_self(NSUserDefaults);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009D9428);
  }
  return result;
}

id sub_10000A650()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LibraryCollectionsService(0)), "init");
  qword_100A1E8A8 = (uint64_t)result;
  return result;
}

void sub_10000A680(uint64_t a1, void *a2)
{
  id v3;
  BKNotificationOptInStatusController *v4;
  uint64_t v5;
  id v6;
  BKNotificationOptInStatusController *v7;
  uint64_t v8;
  void *v9;

  v3 = a2;
  v4 = [BKNotificationOptInStatusController alloc];
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v6 = objc_msgSend(v3, "authorizationStatus");

  v7 = -[BKNotificationOptInStatusController initWithCenter:status:](v4, "initWithCenter:status:", v5, v6);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(v8 + 24);
  *(_QWORD *)(v8 + 24) = v7;

}

void sub_10000A73C(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100063C5C;
  v3[3] = &unk_1008EAF10;
  v3[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "requestTabBarSceneController:", v3);

}

uint64_t sub_10000A7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1004590FC;
  else
    v3 = sub_1000416FC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10000A814(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[50];

  v4[0] = &unk_10071B8E0;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10071B8F8;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[21] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[22] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[24] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[25] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[26] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[27] = &unk_10071B910;
    v4[28] = &unk_10071B928;
    v4[29] = &unk_10071B928;
    v4[30] = &unk_10071B928;
    v4[31] = &unk_10071B928;
    v4[32] = &unk_10071B928;
    v4[33] = &unk_10071B928;
    v4[34] = &unk_10071B928;
    v4[35] = &unk_10071B928;
    v4[36] = &unk_10071B928;
    v4[37] = &unk_10071B928;
    v4[38] = &unk_10071B940;
    v4[39] = &unk_10071B940;
    v4[40] = &unk_10071B940;
    v4[41] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[42] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[43] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[44] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[45] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[46] = &unk_10071B958;
    v4[47] = &unk_10071B940;
    v4[48] = &unk_10071B940;
    v4[49] = &unk_10071B8E0;
    return swift_updateClassMetadata2(a1, 256, 50, v4, a1 + 80);
  }
  return result;
}

void sub_10000A930(uint64_t a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v1 = objc_alloc(*(Class *)(a1 + 32));
  v4 = (id)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
  v2 = objc_msgSend(v1, "_initWithConfiguration:", v4);
  v3 = (void *)qword_1009F5110;
  qword_1009F5110 = (uint64_t)v2;

}

uint64_t sub_10000A990(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100730670;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_10000AB68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_10000ABB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10002F2B0();

  }
}

uint64_t sub_10000AC04(void (*a1)(uint64_t *__return_ptr, _QWORD *, __n128), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27[2];
  void *v28;

  v28 = &_swiftEmptySetSingleton;
  swift_unknownObjectRetain(a5);
  v14 = 0;
  v15 = sub_100528D08(a6, a7, a8, (uint64_t)&v28, a1);
  v16 = swift_unknownObjectRelease(a5);
  if (__OFSUB__(a8 >> 1, a7))
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_1009CE7E8, sub_1005254D0);
LABEL_5:
    v19 = type metadata accessor for Logger(0);
    sub_100048F64(v19, (uint64_t)qword_1009E9EB0);
    swift_bridgeObjectRetain(v14);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v27[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain(v14);
      v26 = sub_100040F58((uint64_t)a3, v14, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v23 + 4, v23 + 12);
      swift_bridgeObjectRelease_n(v14, 3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
    goto LABEL_8;
  }
  if (*(_QWORD *)(v15 + 16) != (a8 >> 1) - a7)
  {
    v17 = a3(v16);
    if (v18)
    {
      a3 = (uint64_t (*)(uint64_t))v17;
      v14 = v18;
      if (qword_1009CE7E8 == -1)
        goto LABEL_5;
      goto LABEL_10;
    }
  }
LABEL_8:
  swift_bridgeObjectRelease(v28);
  return v15;
}

uint64_t sub_10000AE34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_10000AE7C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  char v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v2 = v1;
  v4 = *(void **)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  v10 = a1;
  if (!v4)
  {
    if (!a1)
    {

      v7 = v10;
      goto LABEL_8;
    }
LABEL_6:
    v8 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain(v8);
    sub_1000670A8(v4, v8);

    swift_bridgeObjectRelease(v8);
    return;
  }
  if (!a1)
    goto LABEL_6;
  sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  v5 = v4;
  v9 = v10;
  v6 = static NSObject.== infix(_:_:)(v5, v9);

  if ((v6 & 1) == 0)
    goto LABEL_6;

  v7 = v9;
LABEL_8:

}

void sub_10000AF6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "leave"))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_conditionSatisfied:invalidatingAssertion:", *(_QWORD *)(a1 + 56), 1));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
}

uint64_t sub_10000B044(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_1007328C0;
  v4[3] = "(";
  v4[4] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ExperimentIDsCookieParser()
{
  return objc_opt_self(_TtC5Books25ExperimentIDsCookieParser);
}

uint64_t type metadata accessor for ExperimentIDsHeaderValueFormatter()
{
  return objc_opt_self(_TtC5Books33ExperimentIDsHeaderValueFormatter);
}

uint64_t sub_10000B108()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1E770);
  sub_100048F64(v0, (uint64_t)qword_100A1E770);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001BLL, 0x800000010071EA10);
}

void sub_10000B1EC(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t DynamicType;
  Swift::String v19;
  void *object;
  char *v21;
  unint64_t v22;
  _QWORD v23[3];
  uint64_t v24;

  v4 = v3;
  sub_10002E418(a1, (uint64_t)v23);
  v8 = sub_10004CFD4(&qword_1009E8758);
  v9 = type metadata accessor for ReadingActivityService();
  if (swift_dynamicCast(&v21, v23, v8, v9, 6))
  {
    v10 = v21;
    sub_10003CB4C(v21, a2, a3);

  }
  else
  {
    sub_10002E418(a1, (uint64_t)v23);
    v21 = 0;
    v22 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v11 = v22;
    v12 = (char *)_typeName(_:qualified:)(*v4, 0);
    v14 = v13;
    swift_bridgeObjectRelease(v11);
    v21 = v12;
    v22 = v14;
    v15._object = (void *)0x80000001007D2550;
    v15._countAndFlagsBits = 0xD00000000000001ELL;
    String.append(_:)(v15);
    v16 = v24;
    v17 = sub_10003F198(v23, v24);
    DynamicType = swift_getDynamicType(v17, v16, 1);
    v19._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
    object = v19._object;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(object);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v21, v22, "Books/ServiceCenter.swift", 25, 2, 63, 0);
    __break(1u);
  }
}

void sub_10000B358(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) != UIBackgroundTaskInvalid)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v2, "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24));

    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = UIBackgroundTaskInvalid;
  }
}

uint64_t sub_10000B410()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009D2B70);
  sub_100048F64(v0, (uint64_t)qword_1009D2B70);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x65726F7453707041, 0xEE00776569766552);
}

_QWORD *sub_10000B490(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[3];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_10000B4D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009D3150);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000B518(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000B558(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10004CFD4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000B59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000B5E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10004CFD4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000B628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002C9B8(a1, a2);
}

uint64_t type metadata accessor for StoreBooksService()
{
  return objc_opt_self(_TtC5Books17StoreBooksService);
}

void sub_10000B65C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_10000B734(uint64_t a1)
{
  id v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BKDatabaseBackupFileManager mergeSyncSidecarFileName](BKDatabaseBackupFileManager, "mergeSyncSidecarFileName"));
  if (objc_msgSend(v3, "length"))
  {
    v2 = objc_msgSend(objc_alloc((Class)AEAnnotationSidecarConsumer), "initWithName:", v3);
    objc_msgSend(v2, "mergeIntoAnnotationProvider:completionBlock:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  }
}

uint64_t type metadata accessor for AMDCollectionService()
{
  return objc_opt_self(_TtC5Books20AMDCollectionService);
}

void sub_10000B7BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t type metadata accessor for PaidStorefrontAccessRequirement()
{
  return objc_opt_self(_TtC5Books31PaidStorefrontAccessRequirement);
}

uint64_t type metadata accessor for StoreBookTastesService()
{
  return objc_opt_self(_TtC5Books22StoreBookTastesService);
}

uint64_t sub_10000B870()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), "activeStoreAccount");
  v2 = v1;
  if (v1)

  return (*(uint64_t (**)(BOOL))(v0 + 8))(v2 != 0);
}

uint64_t sub_10000B8CC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DEA98);
  sub_100048F64(v0, (uint64_t)qword_1009DEA98);
  type metadata accessor for PPTConfig(0);
  v1 = static PPTConfig.os_log.getter();
  return Logger.init(_:)(v1);
}

void sub_10000B928(id a1)
{
  void *v1;
  uint64_t v2;

  kdebug_trace(725353712, 40, 0, 0, 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AVAudioSession sharedInstance](AVAudioSession, "sharedInstance"));
  v2 = 0;
  objc_msgSend(v1, "setCategory:error:", AVAudioSessionCategoryPlayback, &v2);

  kdebug_trace(725353712, 41, 0, 0, 0);
}

uint64_t type metadata accessor for AMDBookScorer()
{
  return objc_opt_self(_TtC5Books13AMDBookScorer);
}

void sub_10000B9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  if (a1)
  {
    v4 = a3 + 16;
    swift_beginAccess(a3 + 16, v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = (_BYTE *)Strong;
      v7 = sub_10004CFD4(&qword_1009DB390);
      v8 = sub_100030B34(&qword_1009DB398, &qword_1009DB390, (uint64_t)&protocol conformance descriptor for [A]);
      v6[OBJC_IVAR___BKSessionDonor_everUsedCarplay] = Collection.isNotEmpty.getter(v7, v8) & 1;
      objc_msgSend(v6, "propertyDidChange:propertyConfiguration:", v6, *(_QWORD *)&v6[OBJC_IVAR___BKSessionDonor_connectedToCarplayConfig], a1);

    }
  }
}

uint64_t sub_10000BBB8(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = "\b";
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 88);
}

void sub_10000BC14(uint64_t a1)
{
  id *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSSet *v12;
  NSObject *v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;

  v1 = (id *)(a1 + 32);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_persistedInfoURL"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithContentsOfURL:](NSData, "dataWithContentsOfURL:", v2));

  if (v3)
  {
    v32 = 0;
    v4 = objc_msgSend(objc_alloc((Class)NSKeyedUnarchiver), "initForReadingFromData:error:", v3, &v32);
    v5 = v32;
    v6 = v5;
    if (v4)
    {
      v7 = objc_opt_class(NSDictionary);
      v8 = objc_opt_class(NSDate);
      v9 = objc_opt_class(NSURL);
      v10 = objc_opt_class(BKUbiquityAsset);
      v11 = objc_opt_class(NSString);
      v12 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v7, v8, v9, v10, v11, objc_opt_class(NSNumber), 0);
      v13 = objc_claimAutoreleasedReturnValue(v12);
      v31 = v6;
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "decodeTopLevelObjectOfClasses:forKey:error:", v13, CFSTR("Root"), &v31));
      v15 = v31;

      if (v14)
      {
        v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("version")));
        v18 = -[NSObject unsignedIntegerValue](v17, "unsignedIntegerValue");
        if (v18 == (id)4)
        {
          v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("URLFromAssetID")));
          if (v19)
          {
            v20 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithDictionary:](NSMutableDictionary, "dictionaryWithDictionary:", v19));
            v21 = (void *)*((_QWORD *)*v1 + 7);
            *((_QWORD *)*v1 + 7) = v20;

          }
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("AssetFromAssetID")));
          if (v22)
          {
            v23 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithDictionary:](NSMutableDictionary, "dictionaryWithDictionary:", v22));
            v24 = (void *)*((_QWORD *)*v1 + 10);
            *((_QWORD *)*v1 + 10) = v23;

          }
          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("InsertionDateFromAssetID")));
          if (v25)
          {
            v26 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithDictionary:](NSMutableDictionary, "dictionaryWithDictionary:", v25));
            v27 = (void *)*((_QWORD *)*v1 + 11);
            *((_QWORD *)*v1 + 11) = v26;

          }
          objc_msgSend(*v1, "iq_populateAssetIDFromURLDictionary");

        }
        else
        {
          v30 = BKLibraryDataSourceUbiquityLog(v18);
          v19 = objc_claimAutoreleasedReturnValue(v30);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            sub_1006A08A4(v1, v19);
        }

      }
      else
      {
        v29 = BKLibraryDataSourceUbiquityLog(v16);
        v17 = objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          sub_1006A0810(v1, (uint64_t)v15, v17);
      }

    }
    else
    {
      v28 = BKLibraryDataSourceUbiquityLog(v5);
      v13 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        sub_1006A0810(v1, (uint64_t)v6, v13);
      v15 = v6;
    }

  }
}

id sub_10000C000()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), "dataType");
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000C060(id a1, int64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t v9[16];
  uint64_t v10;
  uint64_t v11;

  v10 = v2;
  v11 = v3;
  switch(a2)
  {
    case 0:
      v4 = BooksSiriLog(a1);
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006A45B0();
      goto LABEL_10;
    case 1:
      v6 = BooksSiriLog(a1);
      v5 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006A4584();
      goto LABEL_10;
    case 2:
      v7 = BooksSiriLog(a1);
      v5 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_100063BCC();
      goto LABEL_10;
    case 3:
      v8 = BooksSiriLog(a1);
      v5 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Siri is authorized", v9, 2u);
      }
LABEL_10:

      break;
    default:
      return;
  }
}

uint64_t sub_10000C150@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  _BYTE v10[40];
  __int128 v11;
  __int128 v12;

  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v11 = 0u;
    v12 = 0u;
LABEL_10:
    result = sub_100010960((uint64_t)&v11, (uint64_t *)&unk_1009D04E0);
    goto LABEL_11;
  }
  v3 = v2;
  v9[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BKRecentBooksProviderAssetsKey"));
  v9[1] = v4;
  AnyHashable.init<A>(_:)(v9, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v5 = sub_1000561E8((uint64_t)v10), (v6 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_1000569AC((uint64_t)v10);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_10;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009E9FC0);
  result = swift_dynamicCast(a1, &v11, (char *)&type metadata for Any + 8, v7, 6);
  if ((result & 1) == 0)
LABEL_11:
    *a1 = 0;
  return result;
}

void sub_10000C24C(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v6;
  unsigned int v7;
  id v8;

  v8 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "scene"));
  v7 = objc_msgSend(v6, "_isKeyWindowScene");

  if (v7)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a3 = 1;
  }

}

uint64_t type metadata accessor for UserPreferenceAccessRequirement()
{
  return objc_opt_self(_TtC5Books31UserPreferenceAccessRequirement);
}

uint64_t type metadata accessor for AccountAccessRequirement()
{
  return objc_opt_self(_TtC5Books24AccountAccessRequirement);
}

void sub_10000C384(char a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE v18[24];
  _BYTE v19[24];

  if ((a2 & 1) == 0)
  {
    v4 = a1 & 1;
    if (qword_1009CE220 != -1)
      swift_once(&qword_1009CE220, sub_10001360C);
    swift_beginAccess(&qword_1009DE790, v19, 0, 0);
    v5 = qword_1009DE790;
    v6 = *(_QWORD *)algn_1009DE798;
    v7 = byte_1009DE7A0;
    v8 = (void *)qword_1009DE7A8;
    swift_bridgeObjectRetain(*(_QWORD *)algn_1009DE798);
    v9 = v8;
    LODWORD(v5) = sub_100050860(v5, v6, v7, v9) & 1;

    swift_bridgeObjectRelease(v6);
    if ((v4 != 0) != (_DWORD)v5)
    {
      swift_beginAccess(&qword_1009DE790, v18, 33, 0);
      v10 = (void *)qword_1009DE7A8;
      v17 = v4;
      v11 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v17, &type metadata for Bool);
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setObject:forKey:", v11, v12);
      swift_endAccess(v18);
      swift_unknownObjectRelease(v11);

      v13 = a3 + OBJC_IVAR___BKWidgetService_onWidgetConfigurationChangeCallback;
      v14 = *(void (**)(uint64_t))(a3 + OBJC_IVAR___BKWidgetService_onWidgetConfigurationChangeCallback);
      if (v14)
      {
        v15 = *(_QWORD *)(v13 + 8);
        v16 = swift_retain(v15);
        v14(v16);
        sub_10002AD00((uint64_t)v14, v15);
      }
    }
  }
}

uint64_t sub_10000C4F4(uint64_t a1)
{
  void *v2;

  kdebug_trace(725353712, 106, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v2, "bootstrapSamplesCollectionIfNeeded");

  return kdebug_trace(725353712, 107, 0, 0, 0);
}

uint64_t sub_10000C55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  char v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_100021380(a1);
    sub_10002A3B4(a1);
    KeyPath = swift_getKeyPath(&unk_1007238E8);
    v7 = swift_getKeyPath(&unk_100723910);
    v8 = 1;
    return static Published.subscript.setter(&v8, v5, KeyPath, v7);
  }
  return result;
}

void sub_10000C5F0(uint64_t a1)
{
  void *v1;
  void *v2;
  double v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "upgradeViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "layer"));
  LODWORD(v3) = 0;
  objc_msgSend(v2, "setOpacity:", v3);

}

uint64_t sub_10000C64C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char v11[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (char *)result;
    if (v2)
    {
      v7 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarItem_identifier);
      v6 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarItem_identifier + 8);
      v8 = &v5[OBJC_IVAR___BKSessionDonor_currentTab];
      v9 = *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_currentTab + 8];
      *(_QWORD *)v8 = v7;
      *((_QWORD *)v8 + 1) = v6;
      swift_bridgeObjectRetain(v6);
    }
    else
    {
      v10 = (_QWORD *)(result + OBJC_IVAR___BKSessionDonor_currentTab);
      v9 = *(_QWORD *)(result + OBJC_IVAR___BKSessionDonor_currentTab + 8);
      *v10 = 0x6E776F6E6B6E75;
      v10[1] = 0xE700000000000000;
    }

    return swift_bridgeObjectRelease(v9);
  }
  return result;
}

void sub_10000C700(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 16));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(v5 + 16);
  *(_QWORD *)(v5 + 16) = 0;

}

unint64_t sub_10000C748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4((uint64_t *)&unk_1009D0A50);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10004CE80(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10000C858(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "analyticsController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "applicationTracker"));

  objc_msgSend(v2, "popOrientationData");
  if (objc_msgSend(v2, "optedIn"))
    objc_msgSend(v2, "pushOrientationDataFromFile:line:", CFSTR("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKAppAnalyticsManager.m"), 355);

}

uint64_t sub_10000C8D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100009E04(0, &qword_1009DB388, CRVehicle_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_10000C95C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_10004CFD4(&qword_1009CEEE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010960(a1, &qword_1009CEEE0);
  v7 = a2[3];
  v8 = a2[4];
  sub_10003F198(a2, v7);
  v9 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v7, v8);
  dispatch thunk of ObservableContainer.value.getter();
  swift_release(v9);
  v10 = type metadata accessor for ReadingHistory.State(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  return sub_100025B3C((uint64_t)v6, a1, &qword_1009CEEE0);
}

uint64_t sub_10000CA40(uint64_t a1)
{
  void *v2;

  kdebug_trace(725353712, 82, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v2, "migrateLibraryIfNeeded");

  return kdebug_trace(725353712, 83, 0, 0, 0);
}

uint64_t sub_10000CAA8(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v6 = (_QWORD *)swift_allocObject(&unk_10090C500, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  v7 = a1;
  swift_retain(a3);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10006B508, v6);
  return swift_release(v6);
}

uint64_t sub_10000CB3C(void **a1, uint64_t a2)
{
  void *v2;
  char *Strong;
  uint64_t v4;
  id v5;
  _BYTE v7[104];

  v2 = *a1;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4 = *(_QWORD *)&Strong[OBJC_IVAR___BKBookReaderInteractionCoordinator_interactionManager];
  swift_retain(v4);

  v5 = v2;
  sub_100066ED8(v2, (uint64_t)v7);
  sub_10004E558((uint64_t)v7);
  return swift_release(v4);
}

uint64_t sub_10000CBAC(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  uint64_t v8;
  id v9;
  id v10;

  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for String, (char *)&type metadata for Swift.AnyObject + 8, &protocol witness table for String);
  v9 = a4;
  v10 = a1;
  a5(v8, v9);

  return swift_bridgeObjectRelease(v8);
}

void sub_10000CC34(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  char v21[24];
  char v22[24];

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = sub_10004CFD4(&qword_1009E0FD8);
    v8 = NSKeyValueObservedChange.newValue.getter(v18, v7);
    if (LOBYTE(v18[0]) == 2 || (v18[0] & 1) == 0)
      goto LABEL_7;
    v9 = static os_log_type_t.info.getter(v8);
    sub_100009B88();
    v10 = (void *)static OS_os_log.readingActivity.getter();
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Clearing Reading Goals data", 27, 2, _swiftEmptyArrayStorage);

    v11 = &v6[OBJC_IVAR___BKReadingActivityService_historyModule];
    swift_beginAccess(&v6[OBJC_IVAR___BKReadingActivityService_historyModule], v21, 0, 0);
    if (*((_QWORD *)v11 + 3))
    {
      sub_10002E418((uint64_t)(v11 + 40), (uint64_t)v18);
      v12 = v19;
      v13 = v20;
      sub_10003F198(v18, v19);
      dispatch thunk of ReadingHistoryEventProcessor.clearData()(v12, v13);
      _s5Books15CurrentPageViewVwxx_0(v18);
      v14 = &v6[OBJC_IVAR___BKReadingActivityService_goalsModule];
      swift_beginAccess(&v6[OBJC_IVAR___BKReadingActivityService_goalsModule], &v17, 0, 0);
      if (*((_QWORD *)v14 + 3))
      {
        sub_10002E418((uint64_t)(v14 + 40), (uint64_t)v18);
        v15 = v19;
        v16 = v20;
        sub_10003F198(v18, v19);
        dispatch thunk of ReadingGoalsEventProcessor.clearData()(v15, v16);
        _s5Books15CurrentPageViewVwxx_0(v18);
        objc_msgSend(v3, "setBKReadingGoalsShouldClearDataKey:", 0);
LABEL_7:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10000CDDC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);

  v3 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_10000CE2C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100009E04(255, &qword_1009ED138, NSUbiquitousKeyValueStore_ptr);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for UnderThirteenAccessRequirement()
{
  return objc_opt_self(_TtC5Books30UnderThirteenAccessRequirement);
}

void sub_10000CF30(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100019968;
  v3[3] = &unk_1008E7590;
  v4 = *(id *)(a1 + 40);
  objc_msgSend(v2, "requestTabBarSceneController:", v3);

}

uint64_t sub_10000CFB4(uint64_t a1)
{
  void *v2;

  kdebug_trace(725353712, 90, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v2, "cleanupDefaultCollections");

  return kdebug_trace(725353712, 91, 0, 0, 0);
}

uint64_t sub_10000D01C()
{
  uint64_t v0;

  v0 = type metadata accessor for URL(0);
  sub_10001BFD8(v0, qword_1009E50F0);
  sub_100048F64(v0, (uint64_t)qword_1009E50F0);
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease(0xE000000000000000);
  return URL.init(fileURLWithPath:)(0xD000000000000039, 0x80000001007CB640);
}

id sub_10000D170(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "upgradeViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  objc_msgSend(v3, "removeFromSuperview");

  return objc_msgSend(*(id *)(a1 + 32), "setUpgradeViewController:", 0);
}

void sub_10000D1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  char *v6;
  char v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = &Strong[OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatus];
    *(_QWORD *)v6 = a1;
    v6[8] = 0;
    objc_msgSend(Strong, "propertyDidChange:propertyConfiguration:", Strong, *(_QWORD *)&Strong[OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatusConfig]);

  }
}

void sub_10000D244(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  _QWORD v3[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "appLaunchCoordinator"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000A73C;
  v3[3] = &unk_1008E77C8;
  v3[4] = WeakRetained;
  objc_msgSend(v2, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 128, CFSTR("_showMainViewControllerOrWelcomeScreen"), v3);

}

void sub_10000D2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t v8;
  _QWORD v9[4];
  _BYTE v10[24];
  _BYTE v11[48];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    if (*(_QWORD *)(a1 + 16))
    {
      sub_100316B8C(a1 + 32, (uint64_t)v11);
      v6 = sub_100316BC8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
      PropertyValue.rawValue.getter(v9, v6);
      sub_100316BC8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
      {
        v7 = v8 > 0;
        v5[OBJC_IVAR___BKSessionDonor_everUsedAppleWatchApp] = v7;
        if (v7 != sub_10002D7D4())
          dispatch thunk of Manager.submit(event:)(0xD000000000000011, 0x80000001007C0180);
      }
    }

  }
}

uint64_t sub_10000D3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_10000D400(uint64_t a1)
{
  void *v2;

  kdebug_trace(725353712, 108, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v2, "checkDatabaseIntegrity");

  return kdebug_trace(725353712, 109, 0, 0, 0);
}

uint64_t sub_10000D4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ContrastingLeadingTrailingColorsView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  swift_release(*(_QWORD *)(v4 + v9));
  swift_release(*(_QWORD *)(v12 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12 + *(int *)(v6 + 44), v5);
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_10000D560()
{
  uint64_t v0;

  sub_1001F2564(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1001F2564(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 120));
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10000D5B4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)type metadata accessor for REActionMenuView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v32 = *(_QWORD *)(v2 + 64);
  v33 = v0;
  v5 = (_QWORD *)(v0 + v4);
  v6 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v9 = (_QWORD *)((char *)v5 + v1[5]);
  if (swift_getEnumCaseMultiPayload(v9, v6) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v9, v10);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)((char *)v5 + v1[6]);
  v13 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (_QWORD *)((char *)v5 + v1[7]);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }
  v18 = (_QWORD *)((char *)v5 + v1[8]);
  v19 = sub_10004CFD4(&qword_1009D3A08);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
  }
  else
  {
    swift_release(*v18);
  }

  swift_release(*(_QWORD *)((char *)v5 + v1[10] + 32));
  swift_release(*(_QWORD *)((char *)v5 + v1[11] + 8));
  swift_release(*(_QWORD *)((char *)v5 + v1[12] + 40));
  swift_release(*(_QWORD *)((char *)v5 + v1[13] + 8));
  v21 = (char *)v5 + v1[14];
  v22 = type metadata accessor for AccessibilityTechnologies(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (!v24(v21, 1, v22))
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
  v25 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)&v21[*(int *)(v25 + 40)]);
  v26 = (char *)v5 + v1[15];
  if (!v24(v26, 1, v22))
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  swift_release(*(_QWORD *)&v26[*(int *)(v25 + 40)]);
  swift_release(*(_QWORD *)((char *)v5 + v1[16]));
  swift_release(*(_QWORD *)((char *)v5 + v1[17]));
  swift_weakDestroy((char *)v5 + v1[18]);
  swift_unknownObjectWeakDestroy((char *)v5 + v1[19]);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)v5 + v1[20]));
  swift_unknownObjectWeakDestroy((char *)v5 + v1[21]);
  v27 = (char *)v5 + v1[22];
  v28 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = (char *)v5 + v1[23];
  v30 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v5 + v1[25] + 8));
  return swift_deallocObject(v33, v4 + v32, v3 | 7);
}

uint64_t sub_10000D96C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectWeakDestroy(v0 + 56);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10000D9A0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for REMenuButtonView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v4, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v10 = (_QWORD *)((char *)v6 + v1[5]);
  if (swift_getEnumCaseMultiPayload(v10, v7) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)((char *)v6 + v1[6]);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  sub_1001F2564(*(_QWORD *)((char *)v6 + v1[7]), *((_BYTE *)v6 + v1[7] + 8));
  v16 = (_QWORD *)((char *)v6 + v1[8]);
  v17 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  v19 = v3 | 7;

  v20 = (char *)v6 + v1[10];
  v21 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  swift_unknownObjectWeakDestroy((char *)v6 + v1[12]);
  return swift_deallocObject(v0, v4 + v5, v19);
}

uint64_t sub_10000DBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for PageTurnView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v4 + v9;
  swift_unknownObjectWeakDestroy(v4 + v9);
  v12 = v4 + v9 + v6[10];
  v13 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v4 + v9 + v6[11];
  swift_weakDestroy(v14);
  swift_weakDestroy(v14 + 8);
  swift_weakDestroy(v14 + 16);
  swift_unknownObjectWeakDestroy(v14 + 24);
  swift_release(*(_QWORD *)(v4 + v9 + v6[12]));
  swift_release(*(_QWORD *)(v4 + v9 + v6[13]));

  v15 = (_QWORD *)(v4 + v9 + v6[15]);
  v16 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v11 + v6[16], v5);
  v19 = v11 + v6[21];
  v20 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_10000DD64()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  _s5Books15CurrentPageViewVwxx_0(v0 + 4);
  _s5Books15CurrentPageViewVwxx_0(v0 + 10);
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10000DD98()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_weakDestroy(v0 + 96);
  swift_weakDestroy(v0 + 104);
  swift_weakDestroy(v0 + 112);
  swift_unknownObjectWeakDestroy(v0 + 120);
  swift_weakDestroy(v0 + 136);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10000DE0C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = (int *)type metadata accessor for ThemeOptionsView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v28 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  v6 = (_QWORD *)(v0 + v4 + v1[8]);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }

  v9 = (_QWORD *)(v5 + v1[10]);
  v10 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v13 = (_QWORD *)(v5 + v1[11]);
  if (swift_getEnumCaseMultiPayload(v13, v10) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v13, v14);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v5 + v1[12]);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  v19 = v5 + v1[13];
  v20 = type metadata accessor for AccessibilityTechnologies(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (!v22(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v23 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v19 + *(int *)(v23 + 40)));
  v24 = v5 + v1[14];
  if (!v22(v24, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v20);
  swift_release(*(_QWORD *)(v24 + *(int *)(v23 + 40)));
  v25 = v5 + v1[15];
  if (!v22(v25, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
  swift_release(*(_QWORD *)(v25 + *(int *)(v23 + 40)));
  v26 = v5 + v1[16];
  if (!v22(v26, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v26, v20);
  swift_release(*(_QWORD *)(v26 + *(int *)(v23 + 40)));
  swift_release(*(_QWORD *)(v5 + v1[17] + 8));
  swift_release(*(_QWORD *)(v5 + v1[18] + 8));
  return swift_deallocObject(v0, v4 + v28, v3 | 7);
}

uint64_t sub_10000E14C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (int *)type metadata accessor for SampleHeaderView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  if (*(_QWORD *)(v0 + v4 + 48))
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v6 + 24));
  v7 = (_QWORD *)(v6 + v1[7]);
  v8 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v11 = (_QWORD *)(v6 + v1[8]);
  if (swift_getEnumCaseMultiPayload(v11, v8) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release(*v11);
  }
  v14 = (_QWORD *)(v6 + v1[9]);
  v15 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }

  v17 = (_QWORD *)(v6 + v1[11]);
  v18 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  v20 = v6 + v1[12];
  v21 = type metadata accessor for AccessibilityTechnologies(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v23 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v20 + *(int *)(v23 + 40)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000E3A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for RESliderView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  swift_release(*(_QWORD *)(v0 + v4 + 56));
  swift_release(*(_QWORD *)(v0 + v4 + 64));
  swift_release(*(_QWORD *)(v0 + v4 + 80));
  swift_release(*(_QWORD *)(v0 + v4 + 88));
  swift_release(*(_QWORD *)(v0 + v4 + 112));
  if (*(_QWORD *)(v0 + v4 + 120))
    swift_release(*(_QWORD *)(v6 + 128));
  v7 = v6 + v1[17];
  v8 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v6 + v1[18];
  swift_release(*(_QWORD *)(v9 + 16));
  swift_release(*(_QWORD *)(v9 + 32));
  swift_release(*(_QWORD *)(v6 + v1[19] + 8));
  swift_release(*(_QWORD *)(v6 + v1[20] + 24));
  v10 = v6 + v1[21];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = sub_10004CFD4(&qword_1009D9230);
  swift_release(*(_QWORD *)(v10 + *(int *)(v13 + 28)));
  swift_release(*(_QWORD *)(v6 + v1[22] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000E51C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000E550()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000E57C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_unknownObjectWeakDestroy(v0 + 72);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10000E5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10000E62C(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v1 + 24));

  swift_release(*(_QWORD *)(v1 + 80));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10000E674()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000E6B0()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10000E6EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000E718()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000E744()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = (int *)type metadata accessor for ReadingSettingsView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v4));
  v7 = v0 + v4 + v1[5];
  v8 = sub_10004CFD4(&qword_1009E1048);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6] + 8));

  swift_release(*(_QWORD *)(v0 + v4 + v1[10]));
  v9 = (_QWORD *)(v0 + v4 + v1[11]);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }

  v12 = (_QWORD *)(v6 + v1[13]);
  v13 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v16 = (_QWORD *)(v6 + v1[14]);
  if (swift_getEnumCaseMultiPayload(v16, v13) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    swift_release(*v16);
  }
  sub_1001F2564(*(_QWORD *)(v6 + v1[15]), *(_BYTE *)(v6 + v1[15] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[16]), *(_BYTE *)(v6 + v1[16] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[17]), *(_BYTE *)(v6 + v1[17] + 8));
  swift_release(*(_QWORD *)(v6 + v1[18] + 8));
  swift_release(*(_QWORD *)(v6 + v1[19] + 8));
  swift_release(*(_QWORD *)(v6 + v1[20] + 8));
  swift_release(*(_QWORD *)(v6 + v1[21] + 8));
  v19 = v6 + v1[22];
  v20 = sub_10004CFD4(&qword_1009E1050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v6 + v1[23];
  v22 = type metadata accessor for AccessibilityTechnologies(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v21 + *(int *)(v24 + 40)));
  swift_release(*(_QWORD *)(v6 + v1[24] + 16));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000EA48()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10000EA84()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000EAB0()
{
  uint64_t v0;

  sub_100450BF4(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_BYTE *)(v0 + 25));
  sub_1001F2564(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1001F2564(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));

  sub_1001F2564(*(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10000EB10(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10000EB48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = sub_10004CFD4(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 72) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 48));
  v8 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 64));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10000EBE0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 72))
    swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));

  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10000EC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4(&qword_1009E6780);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10000ECA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for ReadingLoupeButtonView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = v0 + v4 + 16;

  swift_unknownObjectWeakDestroy(v8);
  v9 = v7 + *(int *)(v1 + 28);
  v10 = sub_10004CFD4(&qword_1009D57E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + *(int *)(v1 + 32);
  v12 = type metadata accessor for ReadingLoupeVisibilityState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = sub_10004CFD4(&qword_1009E6B08);
  swift_release(*(_QWORD *)(v11 + *(int *)(v13 + 28)));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10000ED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for PopoverListHighlight(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (char *)(v4 + v9);
  if (*(_QWORD *)(v4 + v9 + 16))
    swift_release(*((_QWORD *)v11 + 3));
  swift_release(*((_QWORD *)v11 + 5));
  swift_release(*((_QWORD *)v11 + 10));
  v12 = &v11[*(int *)(v6 + 52)];
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*(_QWORD *)v12);
  }
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(&v11[*(int *)(v6 + 56)], v5);
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_10000EE70()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for ThemeOptionsContainerViewModifier(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;

  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v6 + v1[7]));
  swift_release(*(_QWORD *)(v6 + v1[8] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000EF54()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ModernSlider(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_release(*(_QWORD *)(v0 + v4 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 72));
  swift_release(*(_QWORD *)(v0 + v4 + 96));
  swift_release(*(_QWORD *)(v0 + v4 + 104));
  swift_release(*(_QWORD *)(v0 + v4 + 128));
  swift_release(*(_QWORD *)(v0 + v4 + 144));
  swift_release(*(_QWORD *)(v0 + v4 + 160));
  swift_release(*(_QWORD *)(v0 + v4 + 176));
  v7 = v0 + v4 + v1[17];
  v8 = sub_10004CFD4(qword_1009D8EC8);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + v4 + v1[18], v8);
  v9(v0 + v4 + v1[19], v8);
  v10 = v0 + v4 + v1[20];
  v11 = type metadata accessor for AccessibilityTechnologies(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v10 + *(int *)(v13 + 40)));
  swift_release(*(_QWORD *)(v6 + v1[22] + 8));
  swift_release(*(_QWORD *)(v6 + v1[23] + 8));
  v14 = v6 + v1[24];
  swift_release(*(_QWORD *)(v14 + 8));
  swift_release(*(_QWORD *)(v14 + 24));
  swift_release(*(_QWORD *)(v6 + v1[25] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000F118()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  swift_release(v0[19]);
  swift_release(v0[21]);
  swift_release(v0[23]);
  swift_release(v0[25]);
  swift_release(v0[27]);
  swift_release(v0[29]);
  swift_release(v0[31]);
  swift_release(v0[32]);
  swift_release(v0[33]);
  swift_release(v0[34]);
  swift_release(v0[35]);
  swift_release(v0[36]);
  swift_release(v0[37]);
  swift_release(v0[38]);
  swift_release(v0[39]);
  swift_release(v0[41]);
  return swift_deallocObject(v0, 336, 7);
}

uint64_t sub_10000F1F4()
{
  _QWORD *v0;

  _s5Books15CurrentPageViewVwxx_0(v0 + 2);
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[11]);
  swift_release(v0[14]);
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10000F230()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10000F25C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10000F2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Achievement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 2)
  {
    v6 = v0 + v4 + *(int *)(sub_10004CFD4(&qword_1009DD7F8) + 48);
    v7 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000F350()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10000F384()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000F3B0(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  sub_10029DB40(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
  if (*(_QWORD *)(v1 + 80))
    swift_release(*(_QWORD *)(v1 + 88));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10000F408()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = (int *)type metadata accessor for BuyButtonView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  if (*(_QWORD *)(v0 + v4 + 40))
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v6 + 16));
  v7 = (_QWORD *)(v6 + v1[6]);
  v8 = sub_10004CFD4(&qword_1009D26B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  swift_release(*v7);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v7[3]);
    swift_release(v7[6]);
    swift_release(v7[7]);
    swift_release(v7[8]);
    swift_release(v7[9]);
    v10 = v7[10];
    if (v10)
    {
      swift_release(v10);
      swift_release(v7[11]);
    }
    v11 = v7[12];
    if (v11)
    {
      swift_release(v11);
      swift_release(v7[13]);
    }
    v12 = v7[14];
    if (v12)
    {
      swift_release(v12);
      swift_release(v7[15]);
    }
    v13 = (char *)v7 + *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
    v14 = type metadata accessor for BlendMode(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  swift_release(*(_QWORD *)(v6 + v1[7] + 16));
  v16 = (_QWORD *)(v6 + v1[8]);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  v19 = (_QWORD *)(v6 + v1[9]);
  v20 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v19, v21);
  }
  else
  {
    swift_release(*v19);
  }
  sub_1001F2564(*(_QWORD *)(v6 + v1[10]), *(_BYTE *)(v6 + v1[10] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[11]), *(_BYTE *)(v6 + v1[11] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000F664()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 83, 7);
}

uint64_t sub_10000F6A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = (int *)type metadata accessor for RERootContainerView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[6]);
  v11 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v14 = (_QWORD *)(v6 + v1[7]);
  if (swift_getEnumCaseMultiPayload(v14, v11) == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass(0);
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v14, v15);
  }
  else
  {
    swift_release(*v14);
  }
  sub_1001F2564(*(_QWORD *)(v6 + v1[8]), *(_BYTE *)(v6 + v1[8] + 8));
  sub_1001F2564(*(_QWORD *)(v6 + v1[9]), *(_BYTE *)(v6 + v1[9] + 8));
  v17 = (_QWORD *)(v6 + v1[10]);
  v18 = sub_10004CFD4(&qword_1009F2C20);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  v20 = (_QWORD *)(v6 + v1[11]);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
  }
  else
  {
    swift_release(*v20);
  }
  swift_release(*(_QWORD *)(v6 + v1[12]));
  swift_release(*(_QWORD *)(v6 + v1[13]));
  swift_release(*(_QWORD *)(v6 + v1[14]));
  swift_release(*(_QWORD *)(v6 + v1[15] + 8));
  v23 = v6 + v1[16];
  v24 = type metadata accessor for AccessibilityTechnologies(0);
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  v26 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v23 + *(int *)(v26 + 40)));
  swift_weakDestroy(v6 + v1[17]);
  swift_unknownObjectWeakDestroy(v6 + v1[18]);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[21] + 8));
  v27 = v6 + v1[22];
  v28 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000F9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = _s23MultilineTextEditorViewVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  if (*(_QWORD *)(v0 + v4 + 40))
    swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 64));
  v7 = (_QWORD *)(v6 + *(int *)(v1 + 32));
  v8 = sub_10004CFD4(&qword_1009D57D8);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10000FAB8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v1 = (int *)type metadata accessor for AdjustGoalModalView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)((char *)v6 + v1[5]);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  swift_release(*v9);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v9[1]);
    v12 = (char *)v9 + *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
    v13 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = v3 | 7;
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  v15 = (char *)v6 + v1[7];
  swift_bridgeObjectRelease(*((_QWORD *)v15 + 1));
  swift_release(*((_QWORD *)v15 + 2));
  swift_unknownObjectRelease(*(_QWORD *)((char *)v6 + v1[8]));
  return swift_deallocObject(v0, v4 + v5, v14);
}

uint64_t sub_10000FC08()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (int *)type metadata accessor for ReportIssueView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 17) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  v8 = sub_10004CFD4(&qword_1009EA570);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for SizeConstants(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[7]);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  swift_release(*v10);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v10[1]);
    v13 = (char *)v10 + *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
    v14 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = v3 | 7;
  v16 = v6 + v1[8];
  swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8));
  swift_release(*(_QWORD *)(v16 + 16));
  v17 = v6 + v1[9];
  swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
  swift_release(*(_QWORD *)(v17 + 16));
  return swift_deallocObject(v0, v4 + v5, v15);
}

uint64_t sub_10000FD6C()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t type metadata accessor for AMDGenreRecommendationService()
{
  return objc_opt_self(_TtC5Books29AMDGenreRecommendationService);
}

void sub_10000FDC0(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE *v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_BYTE **)(Strong + OBJC_IVAR___BKReadingActivityService_readingActivityDonor);
    if (v6)
    {
      v6[OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApproved] = a1 & 1;
      objc_msgSend(v6, "propertyDidChange:propertyConfiguration:", v6, *(_QWORD *)&v6[OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApprovedConfig]);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10000FE50(id a1)
{
  kdebug_trace(725353712, 118, 0, 0, 0);
  +[BAEventReporter setupEventDataProvider](BAEventReporter, "setupEventDataProvider");
  kdebug_trace(725353712, 119, 0, 0, 0);
}

uint64_t type metadata accessor for EngagementCollectorEventStore()
{
  return objc_opt_self(_TtC5Books29EngagementCollectorEventStore);
}

uint64_t sub_10000FEC0(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v3 = type metadata accessor for Configuration(0);
  v2[3] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[4] = v4;
  v5 = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch(sub_100010AA8, 0, 0);
}

void sub_10000FF24(void *a1, uint64_t a2, uint64_t a3, char a4, SEL *a5)
{
  id v7;
  objc_super v8;
  _QWORD v9[3];
  char v10;

  v9[1] = 0;
  v9[2] = 0;
  v9[0] = a3;
  v10 = a4;
  v7 = a1;
  PassthroughSubject.send(_:)(v9);
  v8.receiver = v7;
  v8.super_class = (Class)type metadata accessor for TabBarController(0);
  objc_msgSendSuper2(&v8, *a5, a3);

}

void sub_10000FFA0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  _QWORD v4[4];
  __int128 v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t);
  id v13;

  v8 = 0;
  v9 = &v8;
  v10 = 0x3032000000;
  v11 = sub_10019FA5C;
  v12 = sub_10019FA6C;
  v13 = 0;
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000AF6C;
  v4[3] = &unk_1008EDED0;
  v5 = *(_OWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v6 = &v8;
  v7 = v3;
  dispatch_sync(v2, v4);

  objc_msgSend(*(id *)(a1 + 32), "_dispatchBlocks:", v9[5]);
  _Block_object_dispose(&v8, 8);

}

void sub_100010074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t type metadata accessor for StoreBookRatingsService()
{
  return objc_opt_self(_TtC5Books23StoreBookRatingsService);
}

uint64_t type metadata accessor for ODPGenreRecommendationService()
{
  return objc_opt_self(_TtC5Books29ODPGenreRecommendationService);
}

void sub_1000100CC(uint64_t a1)
{
  BKServiceCenter *v2;
  BKServiceCenterAppConfiguration *v3;

  kdebug_trace(725353712, 78, 0, 0, 0);
  v3 = objc_alloc_init(BKServiceCenterAppConfiguration);
  v2 = -[BKServiceCenter initWithAppConfiguration:]([BKServiceCenter alloc], "initWithAppConfiguration:", v3);
  objc_msgSend(*(id *)(a1 + 32), "setServiceCenter:", v2);

  kdebug_trace(725353712, 79, 0, 0, 0);
}

uint64_t sub_100010164(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  Swift::String v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t DynamicType;
  Swift::String v22;
  void *object;
  void *v24;
  unint64_t v25;
  _QWORD v26[3];
  uint64_t v27;

  v4 = v3;
  sub_10002E418(a1, (uint64_t)v26);
  v8 = sub_10004CFD4(&qword_1009E8758);
  v9 = type metadata accessor for WidgetService();
  if (swift_dynamicCast(&v24, v26, v8, v9, 6))
  {
    v10 = v24;
    v11 = swift_allocObject(&unk_10090F730, 24, 7);
    *(_QWORD *)(v11 + 16) = a3;
    v12 = a3;
    WidgetService.setupService(libraryManager:onWidgetConfigurationChangeCallback:)(a2, (uint64_t)sub_1005533D8, v11);

    return swift_release(v11);
  }
  else
  {
    sub_10002E418(a1, (uint64_t)v26);
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v14 = v25;
    v15 = _typeName(_:qualified:)(*v4, 0);
    v17 = v16;
    swift_bridgeObjectRelease(v14);
    v24 = (void *)v15;
    v25 = v17;
    v18._object = (void *)0x80000001007D2550;
    v18._countAndFlagsBits = 0xD00000000000001ELL;
    String.append(_:)(v18);
    v19 = v27;
    v20 = sub_10003F198(v26, v27);
    DynamicType = swift_getDynamicType(v20, v19, 1);
    v22._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
    object = v22._object;
    String.append(_:)(v22);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v24, v25, "Books/ServiceCenter.swift", 25, 2, 63, 0);
    __break(1u);
  }
  return result;
}

void sub_1000102F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  Swift::Int v23;
  int v24;
  unint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSURL *v44;
  void *v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  Class isa;
  unint64_t v50;
  uint64_t v51;
  Class v52;
  void *v53;
  id v54;
  _QWORD *v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  void *v58;
  id v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  _QWORD *v78;

  v64 = sub_10004CFD4(&qword_1009D5D90);
  v62 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v63 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for URL(0);
  v73 = *(_QWORD *)(v75 - 8);
  v6 = __chkstk_darwin(v75);
  v68 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v69 = (char *)&v57 - v8;
  v9 = *(_QWORD *)(a1 + 56);
  v70 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v71 = (unint64_t)(v10 + 63) >> 6;
  v74 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  v61 = _swiftEmptyDictionarySingleton;
  v67 = (unint64_t)"rei_bottom_page_tip";
  v60 = (char *)&type metadata for Any + 8;
  v65 = (unint64_t)"w_wtr_price_drop_settings";
  v66 = (unint64_t)"reading_now_below_wtr";
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_22;
    }
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v71)
      goto LABEL_38;
    v17 = *(_QWORD *)(v70 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v71)
        goto LABEL_38;
      v17 = *(_QWORD *)(v70 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v71)
          goto LABEL_38;
        v17 = *(_QWORD *)(v70 + 8 * v13);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_22:
    v19 = (uint64_t *)(*(_QWORD *)(v74 + 48) + 16 * v15);
    v20 = *v19;
    v21 = (void *)v19[1];
    swift_bridgeObjectRetain(v21);
    v22._countAndFlagsBits = v20;
    v22._object = v21;
    v23 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0710, v22);
    switch(v23)
    {
      case 0:
        v72 = 0;
        v25 = v67 | 0x8000000000000000;
        v24 = 1;
        goto LABEL_28;
      case 1:
        v24 = 0;
        v25 = v66 | 0x8000000000000000;
        v72 = 1;
        goto LABEL_28;
      case 2:
        v24 = 0;
        v25 = v65 | 0x8000000000000000;
        v72 = 2;
LABEL_28:
        v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v25);
        v28 = String._bridgeToObjectiveC()();
        v29 = objc_msgSend(v26, "URLForResource:withExtension:", v27, v28);

        if (v29)
        {
          v30 = v68;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

          v31 = v73;
          v32 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
          v33 = v30;
          v34 = v75;
          v32(v5, v33, v75);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v5, 0, 1, v34);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v34) == 1)
            goto LABEL_37;
          v32(v69, v5, v75);
          if (!v24)
            goto LABEL_35;
          if (qword_1009CDD80 != -1)
            swift_once(&qword_1009CDD80, sub_100270F74);
          v35 = v64;
          v36 = sub_100048F64(v64, (uint64_t)qword_1009D5CE0);
          v38 = v62;
          v37 = v63;
          v39 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
          v39(v63, v36, v35);
          UserDefault.wrappedValue.getter(&v77, v35);
          v40 = *(void (**)(char *, uint64_t))(v38 + 8);
          v40(v37, v35);
          if (v77 == 1)
          {
            (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v75);
            goto LABEL_5;
          }
          v41 = v63;
          v42 = v36;
          v43 = v64;
          v39(v63, v42, v64);
          v76 = 1;
          UserDefault.wrappedValue.setter(&v76, v43);
          v40(v41, v43);
LABEL_35:
          v59 = (id)objc_opt_self(AMSUIMessageRequest);
          URL._bridgeToObjectiveC()(v44);
          v58 = v45;
          v46 = v72;
          v47 = sub_1005A8ED0(v72);
          v48 = sub_1004ED564(v47);
          swift_bridgeObjectRelease(v47);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v48);
          v50 = sub_1005A922C(v46);
          v51 = sub_1004ED564(v50);
          swift_bridgeObjectRelease(v50);
          v52 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v51);
          v53 = v58;
          v54 = objc_msgSend(v59, "bk_fromJSONURL:localizedTexts:localizedActionTitles:", v58, isa, v52);

          v55 = v61;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v61);
          v78 = v55;
          sub_1002C3EE8((uint64_t)v54, v20, (uint64_t)v21, isUniquelyReferenced_nonNull_native);
          v61 = v78;
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(0x8000000000000000);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v75);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v5, 1, 1, v75);
LABEL_37:
          swift_bridgeObjectRelease(v21);
          sub_10000B518((uint64_t)v5);
        }
        break;
      default:
LABEL_5:
        swift_bridgeObjectRelease(v21);
        break;
    }
  }
  v18 = v16 + 3;
  if (v18 >= v71)
  {
LABEL_38:
    swift_release(v74);
    return;
  }
  v17 = *(_QWORD *)(v70 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v71)
      goto LABEL_38;
    v17 = *(_QWORD *)(v70 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_21;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_100010960(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10004CFD4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001099C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v0 = sub_10004CFD4(&qword_1009E0B70);
  sub_10001BFD8(v0, qword_1009E09C8);
  sub_100048F64(v0, (uint64_t)qword_1009E09C8);
  if (qword_1009CE820 != -1)
    swift_once(&qword_1009CE820, sub_100064DA0);
  v4 = 0;
  v5 = 1;
  v1 = (id)qword_100A1EC28;
  v2 = sub_10004CFD4(&qword_1009DC4B0);
  return UserDefault.init(_:defaults:defaultValue:)(0xD000000000000020, 0x80000001007C6E30, v1, &v4, v2);
}

uint64_t sub_100010A68(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100009E04(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100010AA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[6];
  v2 = v1[5];
  v3 = v1[6];
  sub_10003F198(v1 + 2, v2);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of ConfigurationServiceType.fetchConfiguration()[1]);
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_10000A7B0;
  return dispatch thunk of ConfigurationServiceType.fetchConfiguration()(v0[5], v2, v3);
}

void sub_100010B20(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

uint64_t sub_100010B60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_OWORD *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  double v13;
  _OWORD v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _BYTE v19[24];

  v10 = v5 + *a1;
  swift_beginAccess(v10, v19, 0, 0);
  sub_10000B5E4(v10, (uint64_t)&v16, a2);
  if (*((_QWORD *)&v17 + 1))
    return a3(&v16, a5);
  v12 = sub_100010960((uint64_t)&v16, a2);
  v18 = 0;
  v16 = 0u;
  v17 = 0u;
  v13 = __chkstk_darwin(v12);
  syncOnMain(_:)(a4, v13);
  result = sub_10000B5E4((uint64_t)&v16, (uint64_t)&v14, a2);
  if (v15)
  {
    a3(&v14, a5);
    sub_100010960((uint64_t)&v16, a2);
    sub_10002E418(a5, (uint64_t)&v16);
    swift_beginAccess(v10, &v14, 33, 0);
    sub_10000B558((uint64_t)&v16, v10, a2);
    return swift_endAccess(&v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100010D2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009D7440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100010D6C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = v1 + OBJC_IVAR___BKBookRecommendationProvider____lazy_storage___recommendationService;
  swift_beginAccess(v1 + OBJC_IVAR___BKBookRecommendationProvider____lazy_storage___recommendationService, v10, 0, 0);
  sub_10000B5E4(v3, (uint64_t)&v8, &qword_1009EC480);
  if (v9)
  {
    sub_100022840(&v8, a1);
  }
  else
  {
    sub_100010960((uint64_t)&v8, &qword_1009EC480);
    v4 = sub_100059BB4();
    v5 = (void *)static OS_dispatch_queue.main.getter(v4);
    v6 = sub_10004CFD4(&qword_1009EC488);
    OS_dispatch_queue.syncValue<A>(_:)(&v8, sub_100068BF4, 0, v6);

    if (v9)
    {
      sub_100022840(&v8, a1);
      sub_10002E418(a1, (uint64_t)&v8);
      swift_beginAccess(v3, v7, 33, 0);
      sub_10000B558((uint64_t)&v8, v3, &qword_1009EC480);
      swift_endAccess(v7);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100010E84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, void *);
  id v9;

  v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

uint64_t sub_100010EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  _QWORD *v30;
  uint64_t v32;
  _QWORD *v33;

  v2 = type metadata accessor for SaleOptions(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v32 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v32 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  if ((*(_BYTE *)(a1 + 33) & 1) == 0)
  {
    v16 = _swiftEmptyArrayStorage;
    if ((*(_BYTE *)(a1 + 34) & 1) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  static SaleOptions.free.getter(v13);
  v17 = sub_1000646D0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  v20 = v17;
  if (v19 >= v18 >> 1)
    v20 = sub_1000646D0(v18 > 1, v19 + 1, 1, v17);
  *(_QWORD *)(v20 + 16) = v19 + 1;
  v21 = v15;
  v16 = (_QWORD *)v20;
  v13 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v19, v21, v2);
  if ((*(_BYTE *)(a1 + 34) & 1) != 0)
  {
LABEL_7:
    static SaleOptions.paid.getter(v13);
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = (_QWORD *)sub_1000646D0(0, v16[2] + 1, 1, (unint64_t)v16);
    v23 = v16[2];
    v22 = v16[3];
    if (v23 >= v22 >> 1)
      v16 = (_QWORD *)sub_1000646D0(v22 > 1, v23 + 1, 1, (unint64_t)v16);
    v16[2] = v23 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v23, v12, v2);
  }
LABEL_12:
  v24 = sub_100008DB0(&qword_1009EC370, (uint64_t (*)(uint64_t))&type metadata accessor for SaleOptions, (uint64_t)&protocol conformance descriptor for SaleOptions);
  dispatch thunk of SetAlgebra.init()(v2, v24);
  v25 = v16[2];
  if (v25)
  {
    v26 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v33 = v16;
    v27 = (char *)v16 + v26;
    v28 = *(_QWORD *)(v3 + 72);
    v29 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    do
    {
      v29(v6, v27, v2);
      dispatch thunk of SetAlgebra.insert(_:)(v9, v6, v2, v24);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      v27 += v28;
      --v25;
    }
    while (v25);
    v30 = v33;
  }
  else
  {
    v30 = v16;
  }
  return swift_bridgeObjectRelease(v30);
}

void sub_1000111A8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  unint64_t v7;
  char **v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  uint64_t *v41;
  __n128 v42;
  _QWORD *v43;

  v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    if (v3 < 0)
      v35 = *a1;
    else
      v35 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v35);
    v41 = a2;
    if (v4)
      goto LABEL_3;
LABEL_27:
    v43 = _swiftEmptyArrayStorage;
LABEL_28:
    swift_bridgeObjectRelease(v3);

    v36 = v43;
    __chkstk_darwin(v37);
    v40[2] = v3;
    v39 = sub_10000AC04((void (*)(uint64_t *__return_ptr, _QWORD *, __n128))sub_1004196E0, 0, (uint64_t (*)(uint64_t))sub_100528B50, (uint64_t)v40, (uint64_t)v43, v38, 0, 1uLL);
    swift_bridgeObjectRelease(v36);
    *v41 = v39;
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = swift_bridgeObjectRetain(*a1);
  v41 = a2;
  if (!v4)
    goto LABEL_27;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v43 = _swiftEmptyArrayStorage;
    v7 = v3 & 0xC000000000000001;
    v8 = &selRef__teardownLocalViews;
    v5.n128_u64[0] = 138412290;
    v42 = v5;
    while (1)
    {
      if (v7)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      else
        v9 = *(id *)(v3 + 8 * v6 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, v8[397]);
      if (!v11)
        goto LABEL_19;
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      v16 = objc_msgSend(v10, "title");
      if (!v16)
        break;
      v17 = v16;
      v18 = v4;
      v19 = v3;
      v20 = v7;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v23 = v22;

      if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
        v43 = sub_1005B2234(0, v43[2] + 1, 1, v43);
      v25 = v43[2];
      v24 = v43[3];
      if (v25 >= v24 >> 1)
        v43 = sub_1005B2234((_QWORD *)(v24 > 1), v25 + 1, 1, v43);
      v26 = v43;
      v43[2] = v25 + 1;
      v27 = &v26[4 * v25];
      v27[4] = v13;
      v27[5] = v15;
      v27[6] = v21;
      v27[7] = v23;
      v7 = v20;
      v3 = v19;
      v4 = v18;
      v8 = &selRef__teardownLocalViews;
LABEL_7:
      if (v4 == ++v6)
        goto LABEL_28;
    }
    swift_bridgeObjectRelease(v15);
LABEL_19:
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v28 = type metadata accessor for Logger(0);
    sub_100048F64(v28, (uint64_t)qword_1009E9EB0);
    v29 = v10;
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc(12, -1);
      v33 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v32 = v42.n128_u32[0];
      *(_QWORD *)(v32 + 4) = v29;
      *v33 = v29;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Recently-opened asset %@ does not have an ID and/or title", (uint8_t *)v32, 0xCu);
      v34 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v33, 1, v34);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);

    }
    else
    {

    }
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_10001153C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v22[4];

  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_1008FF6E8, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = v0;
  if (v8 == 1)
  {
    sub_10000B4D8((uint64_t)v3);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v14);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v17;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v18 = swift_allocObject(&unk_1008FF710, 32, 7);
  *(_QWORD *)(v18 + 16) = &unk_1009DD610;
  *(_QWORD *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v22[0] = 0;
    v22[1] = 0;
    v19 = v22;
    v22[2] = v10;
    v22[3] = v11;
  }
  else
  {
    v19 = 0;
  }
  v20 = swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_1009DF3C0, v18);
  return swift_release(v20);
}

uint64_t sub_100011784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  id v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v17 - v9;
  result = static Capabilities.isInternalBuild.getter(v8);
  v12 = 0;
  if ((result & 1) != 0)
  {
    sub_100019494(v10);
    sub_10000B59C((uint64_t)v10, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
    {
      sub_10000B518((uint64_t)v10);
      v12 = 0;
      v10 = v7;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
      v13 = objc_allocWithZone((Class)NSBundle);
      URL._bridgeToObjectiveC()(v14);
      v16 = v15;
      v12 = objc_msgSend(v13, "initWithURL:", v15);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    result = sub_10000B518((uint64_t)v10);
  }
  qword_100A1E948 = (uint64_t)v12;
  return result;
}

void sub_1000118FC(uint64_t a1)
{
  void **v1;
  void *v2;
  NSDictionary v3;
  id v4;

  v2 = *v1;
  if (a1)
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setValue:forKey:", v3.super.isa, v4);
  swift_unknownObjectRelease(v3.super.isa);

}

uint64_t sub_10001199C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  __objc2_prot *v13;

  v13 = &OBJC_PROTOCOL___BKRootBarCoordinating;
  v3 = swift_dynamicCastObjCProtocolConditional(v1, 1, &v13);
  if (!v3
    || ((v5 = v3,
         ObjectType = swift_getObjectType(v1, v4),
         swift_conformsToProtocol2(ObjectType, &protocol descriptor for RootBarPublishing))
      ? (result = v5)
      : (result = 0),
        !result))
  {
    _StringGuts.grow(_:)(22);
    v8 = _typeName(_:qualified:)(a1, 0);
    v10 = v9;
    swift_bridgeObjectRelease(0xE000000000000000);
    v11._countAndFlagsBits = 0xD000000000000012;
    v11._object = (void *)0x80000001007C7880;
    String.append(_:)(v11);
    v12._object = (void *)0x8000000100722700;
    v12._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v12);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v8, v10, "Books/RootBarCoordinating.swift", 31, 2, 157, 0);
    __break(1u);
  }
  return result;
}

id sub_100011AC4(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v5[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingCriticalAlertAssertion"));
  objc_msgSend(v2, "invalidate");

  objc_msgSend(*(id *)(a1 + 32), "setPendingCriticalAlertAssertion:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "criticalAlertCoordinator"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100007A10;
  v5[3] = &unk_1008E72C0;
  v5[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v3, "invokeAfterCriticalAlertDismisses:", v5);

  return objc_msgSend(*(id *)(a1 + 32), "setWelcomePresenter:", 0);
}

uint64_t sub_100011B68(void *a1, uint64_t a2, void *a3, const void *a4)
{
  id v7;
  _BYTE v9[24];

  swift_beginAccess(a4, v9, 32, 0);
  swift_unknownObjectRetain(a3);
  v7 = a1;
  objc_setAssociatedObject(v7, a4, a3, 0);
  swift_endAccess(v9);

  return swift_unknownObjectRelease(a3);
}

void sub_100011C64(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  int v5;
  const char *v6;

  v2 = JSALog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 136446210;
    v6 = "-[BKJSAAppController setScriptDataSource:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v5, 0xCu);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v4, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), 0, CFSTR("BKJSAAppController.m"), 166);

}

void sub_100011D3C(id a1, uint64_t a2, void (*a3)(__n128), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(__n128);
  char *v68;
  __n128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  _QWORD v76[3];
  char v77[16];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[3];
  _QWORD v81[2];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v65 - v14;
  v16 = v13;
  v72 = v13;
  if (a2)
  {
    v73 = v9;
    v17 = swift_errorRetain(a2);
    static Logger.engagement.getter(v17);
    swift_errorRetain(a2);
    v18 = swift_errorRetain(a2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v71 = v12;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc(32, -1);
      v80[0] = v23;
      v75 = a1;
      *(_DWORD *)v22 = 136315138;
      v74 = (unint64_t)(v22 + 4);
      swift_getErrorValue(a2, v77, v76);
      v24 = Error.localizedDescription.getter(v76[1], v76[2]);
      v26 = v25;
      v78 = sub_100040F58(v24, v25, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v74, v22 + 12);
      swift_bridgeObjectRelease(v26);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed fetching request. %s", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      v27 = v72;
      swift_slowDealloc(v23, -1, -1);
      v28 = v22;
      v12 = v71;
      swift_slowDealloc(v28, -1, -1);

      swift_errorRelease(a2);
      v9 = v73;
      v16 = v27;
      v29 = v27;
      a1 = v75;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v29);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      v9 = v73;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v16);
    }
  }
  v81[0] = _swiftEmptyDictionarySingleton;
  if (!a1)
    goto LABEL_25;
  v30 = objc_msgSend(a1, "messageActions");
  if (!v30)
    goto LABEL_25;
  v31 = v30;
  v32 = sub_100009E04(0, &qword_1009DA238, AMSEngagementMessageEventServiceResponse_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  v67 = a3;
  v66 = a4;
  v65 = a2;
  if (!((unint64_t)v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
    v35 = v33;
    if (v34)
      goto LABEL_9;
LABEL_24:
    swift_bridgeObjectRelease_n(v35, 2);
    a3 = v67;
LABEL_25:
    swift_beginAccess(v81, v80, 0, 0);
    v63 = v81[0];
    v64 = swift_bridgeObjectRetain(v81[0]);
    a3(v64);
    swift_bridgeObjectRelease_n(v63, 2);
    return;
  }
  if (v33 < 0)
    v62 = v33;
  else
    v62 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v33);
  v34 = _CocoaArrayWrapper.endIndex.getter(v62);
  v35 = v33;
  if (!v34)
    goto LABEL_24;
LABEL_9:
  if (v34 >= 1)
  {
    v74 = v35 & 0xC000000000000001;
    v36 = swift_beginAccess(v81, &v78, 0, 0);
    v37 = 0;
    v38 = 0;
    v36.n128_u64[0] = 136315138;
    v69 = v36;
    v68 = (char *)&type metadata for Any + 8;
    v73 = v9;
    v70 = v35;
    v71 = v12;
    do
    {
      if (v74)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v35);
      else
        v39 = *(id *)(v35 + 8 * v37 + 32);
      v75 = v39;
      v40 = objc_msgSend(v39, "placements", v65, v66, v67);
      if (v40)
      {
        v41 = v40;
        v42 = sub_100009E04(0, &qword_1009DA240, AMSEngagementMessageRequest_ptr);
        v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v41, &type metadata for String, v42, &protocol witness table for String);

        __chkstk_darwin(v44);
        *(&v65 - 2) = (uint64_t)v81;
        sub_100315C20(v43, (void (*)(uint64_t, uint64_t, id))sub_100316B7C);
        v40 = (id)swift_bridgeObjectRelease(v43);
      }
      v45 = static Logger.engagement.getter(v40);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.default.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc(12, -1);
        v49 = swift_slowAlloc(32, -1);
        v80[0] = v49;
        *(_DWORD *)v48 = v69.n128_u32[0];
        v50 = v81[0];
        sub_100009E04(0, &qword_1009D4AD8, AMSDialogRequest_ptr);
        v51 = swift_bridgeObjectRetain(v50);
        v52 = Dictionary.description.getter(v51);
        v53 = v38;
        v54 = v34;
        v56 = v55;
        swift_bridgeObjectRelease(v50);
        v57 = v52;
        v58 = v73;
        v12 = v71;
        *(_QWORD *)(v48 + 4) = sub_100040F58(v57, v56, v80);
        v59 = v56;
        v34 = v54;
        v38 = v53;
        swift_bridgeObjectRelease(v59);
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "requests: %s", (uint8_t *)v48, 0xCu);
        swift_arrayDestroy(v49, 1, v68);
        v60 = v49;
        v35 = v70;
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v48, -1, -1);

        v9 = v58;
        v61 = *(void (**)(char *, uint64_t))(v58 + 8);
        v16 = v72;
        v61(v12, v72);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v16);
      }

      ++v37;
    }
    while (v34 != v37);
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_10001247C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Environment(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000124BC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootBarCoordinator"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootViewController"));
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKSceneHosting));

    objc_msgSend(v4, "updateAllAssetPresenterCloseStateTypes");
  }
}

uint64_t sub_10001253C(uint64_t a1, void (*a2)(__n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = type metadata accessor for CollectorError(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009DA248);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B5E4(a1, (uint64_t)v10, &qword_1009DA248);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v8);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
    v12 = sub_10003E1A0((unint64_t *)&unk_1009DA250, 255, (uint64_t (*)(uint64_t))&type metadata accessor for CollectorError, (uint64_t)&protocol conformance descriptor for CollectorError);
    v13 = swift_allocError(v4, v12, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v14, v7, v4);
    ((void (*)(_QWORD, uint64_t))a2)(0, v13);
    swift_errorRelease(v13);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v16 = *v10;
    v20 = _swiftEmptyDictionarySingleton;
    __chkstk_darwin(EnumCaseMultiPayload);
    *(&v19 - 2) = (uint64_t)&v20;
    sub_100315A74(v16, (void (*)(id, _BYTE *))sub_100316B84);
    swift_bridgeObjectRelease(v16);
    v17 = v20;
    v18 = swift_bridgeObjectRetain(v20);
    a2(v18);
    return swift_bridgeObjectRelease_n(v17, 2);
  }
}

void sub_100012724(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v2 = v1;
  v4 = &v1[OBJC_IVAR___BKRootBarCoordinator_sceneController];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR___BKRootBarCoordinator_sceneController]);
  if (!Strong
    || (v6 = (void *)Strong,
        sub_100009E04(0, &qword_1009D33A0, &off_1008E5360),
        v7 = a1,
        v8 = static NSObject.== infix(_:_:)(v7, v6),
        v7,
        v7,
        v6,
        (v8 & 1) == 0))
  {
    swift_unknownObjectWeakAssign(v4, a1);
    v9 = objc_msgSend(a1, "bk_window");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "traitCollection");

      if (v11)
      {
        v12 = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKRootBarCoordinator_rootViewController], "traitCollection");
        objc_msgSend(v2, "windowSceneTraitCollectionDidChangeFrom:to:", v12, v11);

      }
    }
  }
}

uint64_t sub_100012908(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v18;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v18 - v9;
  if ((a2 & 1) == 0)
  {
    v11 = static Logger.engagement.getter(v8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v12, v13))
    {
      v10 = v7;
      goto LABEL_8;
    }
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Engagement Collector updated local storage successfully", v14, 2u);
    v10 = v7;
    goto LABEL_6;
  }
  v15 = static Logger.engagement.getter(v8);
  v12 = Logger.logObject.getter(v15);
  v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v16))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v16, "Error while updating local storage for engagement collector", v14, 2u);
LABEL_6:
    swift_slowDealloc(v14, -1, -1);
  }
LABEL_8:

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

void sub_100012A8C()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048F64(v0, (uint64_t)qword_1009DEA98);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.info.getter(oslog);
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "actually finishedTest", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void sub_100012B58(uint64_t a1)
{
  void *v2;
  id v3;

  kdebug_trace(725353712, 98, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "priceManager"));

  objc_msgSend(v3, "invalidate:", 0);
  kdebug_trace(725353712, 99, 0, 0, 0);

}

void sub_100012D3C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  uint8_t v21[16];
  _QWORD v22[4];
  id v23;
  id v24;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_cleanLastKnownCurrentBookIfNecessary:", *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstObject"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
  if (objc_msgSend(v3, "isSupplementalContent"))
  {
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_1000962F4;
    v22[3] = &unk_1008E8398;
    v23 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v24 = v4;
    v5 = v23;
    objc_msgSend(v5, "performBlockOnWorkerQueue:", v22);

  }
  v6 = objc_msgSend(WeakRetained, "_shouldHandleCurrentBookNotification:", v4);
  if ((_DWORD)v6)
  {
    v7 = BCCurrentBookLog(v6);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "No book presented, setting up for new current book.", v21, 2u);
    }

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentBookAssetPresenter"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "minifiedAssetPresenterAssetID"));
    v11 = objc_msgSend(v10, "isEqualToString:", v4);

    if ((v11 & 1) == 0)
    {
      v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentBookAssetPresenter"));
      if (v12)
      {
        v13 = v12;
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentBookAssetPresenter"));
        if (objc_msgSend(v14, "minifiedAssetPresenterIsAudiobook"))
        {

        }
        else
        {
          v15 = +[BKSceneUtilities hasMultiWindowEnabled](BKSceneUtilities, "hasMultiWindowEnabled");

          if ((v15 & 1) == 0)
          {
            v16 = BCCurrentBookLog(v12);
            v17 = objc_claimAutoreleasedReturnValue(v16);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)v21 = 0;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Closing previous minified presenter as we are showing the cover.", v21, 2u);
            }

            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentBookAssetPresenter"));
            objc_msgSend(WeakRetained, "_closeMinifiedPresenter:animated:completion:", v18, 0, 0);

            v12 = objc_msgSend(WeakRetained, "setCurrentBookAssetPresenter:", 0);
          }
        }
      }
    }
    v19 = BCCurrentBookLog(v12);
    v20 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Presenting current book as cover. Current book is not considered active, the book is not local, or most recent book is not the last known current book.", v21, 2u);
    }

  }
  else
  {
    objc_msgSend(WeakRetained, "setIgnoredCurrentBookNotification:", *(_QWORD *)(a1 + 40));
  }

}

void sub_10001360C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v1 = objc_msgSend(v0, "userDefaults");

  qword_1009DE790 = 0xD000000000000019;
  *(_QWORD *)algn_1009DE798 = 0x80000001007C42B0;
  byte_1009DE7A0 = 0;
  qword_1009DE7A8 = (uint64_t)v1;
}

uint64_t sub_100013690(uint64_t result, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;

  v7 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v9 = *(id *)(a2 + 32);
    }
    v10 = v9;
    a4 = (_QWORD *)sub_100009E04(0, a3, a4);
    v11 = static NSObject.== infix(_:_:)(v10, v7);

    if ((v11 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      a3 = (unint64_t *)(i + 1);
      if (__OFADD__(i, 1))
        break;
      if (a3 == (unint64_t *)v8)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if (((unint64_t)a3 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if ((unint64_t)a3 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v13 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
      }
      v14 = v13;
      v15 = static NSObject.== infix(_:_:)(v13, v7);

      if ((v15 & 1) != 0)
        return (uint64_t)a3;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v16 = a2;
    else
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = swift_bridgeObjectRelease(a2);
  }
  return 0;
}

void sub_1000139C8(uint64_t a1)
{
  void *v2;
  id v3;

  kdebug_trace(725353712, 94, 0, 0, 0);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[BCBookReadingTimeTracker sharedInstance](BCBookReadingTimeTracker, "sharedInstance"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v3, "setLibraryDelegate:", v2);

  objc_msgSend(v3, "scrubRecents");
  kdebug_trace(725353712, 95, 0, 0, 0);

}

uint64_t sub_100013A64(uint64_t a1)
{
  void *v2;
  void *v3;

  kdebug_trace(725353712, 14, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationProvider sharedInstance](AEAnnotationProvider, "sharedInstance"));
  objc_msgSend(*(id *)(a1 + 32), "setSharedAnnotationProvider:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  objc_msgSend(v3, "setDelegate:", *(_QWORD *)(a1 + 32));

  return kdebug_trace(725353712, 15, 0, 0, 0);
}

id sub_100013AF4(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  objc_super v9;
  char v10;

  v3 = OBJC_IVAR___BKWidgetService__setupState;
  v10 = 0;
  v4 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = v1;
  *(_QWORD *)&v1[v3] = MutableObservableContainer.init(value:)(&v10);
  *(_QWORD *)&v5[OBJC_IVAR___BKWidgetService_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v5[OBJC_IVAR___BKWidgetService_libraryManager] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKWidgetService_widgetInfoManager] = 0;
  v6 = &v5[OBJC_IVAR___BKWidgetService_onWidgetConfigurationChangeCallback];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKWidgetService_serviceCenter] = a1;
  v7 = a1;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for WidgetService();
  return objc_msgSendSuper2(&v9, "init");
}

void sub_100013BD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  void *v7;
  id *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (id *)(Strong + OBJC_IVAR___BKEngagementManager_metadata);
    swift_beginAccess(Strong + OBJC_IVAR___BKEngagementManager_metadata, v13, 0, 0);
    v9 = *v8;

    Date.init()();
    v10 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
    v11 = (uint64_t)v9 + *a1;
    swift_beginAccess(v11, v12, 33, 0);
    sub_10006CD88((uint64_t)v5, v11);
    swift_endAccess(v12);

  }
}

void sub_100013CE0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  void *v10;
  BKATAsset *v11;
  void *v12;
  BKATAsset *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *j;
  uint64_t v24;
  void *v25;
  BKATAsset *v26;
  void *v27;
  BKATAsset *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  id obj;
  _QWORD v44[5];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _QWORD v49[5];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint8_t buf[4];
  id v55;
  __int16 v56;
  id v57;
  __int16 v58;
  id v59;
  __int16 v60;
  uint64_t v61;
  _BYTE v62[128];
  _BYTE v63[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetIDs"));
  objc_msgSend(*(id *)(a1 + 40), "unionSet:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "minusSet:", v2);
  objc_msgSend(*(id *)(a1 + 56), "unionSet:", v2);
  objc_msgSend(*(id *)(a1 + 56), "minusSet:", *(_QWORD *)(a1 + 64));
  objc_msgSend(v2, "unionSet:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v2, "minusSet:", *(_QWORD *)(a1 + 56));
  v42 = v2;
  objc_msgSend(*(id *)(a1 + 32), "setAtAssetIDs:", v2);
  if (objc_msgSend(*(id *)(a1 + 56), "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v4 = *(id *)(a1 + 56);
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v50, v63, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v51;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v51 != v7)
            objc_enumerationMutation(v4);
          v9 = *(_QWORD *)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)i);
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
          v11 = (BKATAsset *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", v9));

          if (!v11)
          {
            v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "objectForKeyedSubscript:", v9));
            v13 = [BKATAsset alloc];
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
            v11 = -[BKATAsset initWithATAsset:dataSourceIdentifier:](v13, "initWithATAsset:dataSourceIdentifier:", v12, v14);

          }
          objc_msgSend(v3, "addObject:", v11);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
          objc_msgSend(v15, "removeObjectForKey:", v9);

        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v50, v63, 16);
      }
      while (v6);
    }

    v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAirTrafficEndedHandler"));
    v17 = (void *)v16;
    if (v16)
      (*(void (**)(uint64_t, _QWORD))(v16 + 16))(v16, 0);

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    objc_msgSend(v18, "libraryDataSource:removedAssets:", *(_QWORD *)(a1 + 32), v3);

    v49[0] = _NSConcreteStackBlock;
    v49[1] = 3221225472;
    v49[2] = sub_1001B9278;
    v49[3] = &unk_1008EE780;
    v49[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v3, "enumerateObjectsUsingBlock:", v49);

  }
  if (objc_msgSend(*(id *)(a1 + 40), "count"))
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    obj = *(id *)(a1 + 40);
    v20 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v62, 16);
    if (v20)
    {
      v21 = v20;
      v22 = *(_QWORD *)v46;
      do
      {
        for (j = 0; j != v21; j = (char *)j + 1)
        {
          if (*(_QWORD *)v46 != v22)
            objc_enumerationMutation(obj);
          v24 = *(_QWORD *)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)j);
          v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "objectForKeyedSubscript:", v24));
          v26 = [BKATAsset alloc];
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
          v28 = -[BKATAsset initWithATAsset:dataSourceIdentifier:](v26, "initWithATAsset:dataSourceIdentifier:", v25, v27);

          v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
          -[BKATAsset setLastOpenDate:](v28, "setLastOpenDate:", v29);

          objc_msgSend(v19, "addObject:", v28);
          v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "atAssetsInFlight"));
          objc_msgSend(v30, "setObject:forKey:", v28, v24);

        }
        v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v62, 16);
      }
      while (v21);
    }

    v31 = *(void **)(a1 + 32);
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "atAssetsInFlight"));
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "allValues"));
    objc_msgSend(v31, "pushCoverForAssets:", v33);

    v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    objc_msgSend(v34, "libraryDataSource:addedAssets:", *(_QWORD *)(a1 + 32), v19);

  }
  v35 = BKATAssetLog();
  v36 = objc_claimAutoreleasedReturnValue(v35);
  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG))
  {
    v38 = objc_msgSend(v42, "count");
    v39 = objc_msgSend(*(id *)(a1 + 40), "count");
    v40 = objc_msgSend(*(id *)(a1 + 56), "count");
    v41 = *(_QWORD *)(a1 + 80);
    *(_DWORD *)buf = 134218754;
    v55 = v38;
    v56 = 2048;
    v57 = v39;
    v58 = 2048;
    v59 = v40;
    v60 = 2112;
    v61 = v41;
    _os_log_debug_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "Updated Assets: {total: %ld} -- {new: %ld} -- {removed: %ld} -- {assetsTypes: %@}", buf, 0x2Au);
  }

  if (objc_msgSend(*(id *)(a1 + 72), "count"))
  {
    v37 = *(void **)(a1 + 72);
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_1001B9424;
    v44[3] = &unk_1008EE7A8;
    v44[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v37, "enumerateKeysAndObjectsUsingBlock:", v44);
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "connectionEstablished") & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "setConnectionEstablished:", 1);

}

void sub_10001423C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  char v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "criticalAlertCoordinator"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "criticalAlertCoordinatorHoldPresentingCriticalAlertAssertion"));
  objc_msgSend(*(id *)(a1 + 32), "setPendingCriticalAlertAssertion:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100008FF4;
  v5[3] = &unk_1008E83C0;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  objc_msgSend(v4, "signalConditionSatisfied:blockID:notifyBlock:", 3, CFSTR("showMainViewController_prepLaunchDismissal"), v5);

}

void sub_1000142FC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[5];

  v2 = objc_alloc_init((Class)NSOperationQueue);
  objc_msgSend(v2, "setMaxConcurrentOperationCount:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKDatabaseBackupFileManager mergeSyncSidecarPath](BKDatabaseBackupFileManager, "mergeSyncSidecarPath"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[IMFileWatcher defaultWatcher](IMFileWatcher, "defaultWatcher"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001C6E90;
  v6[3] = &unk_1008EF030;
  v6[4] = *(_QWORD *)(a1 + 32);
  v5 = objc_msgSend(v4, "watchFileAtPath:queue:usingBlock:", v3, v2, v6);

}

uint64_t start(int a1, char **a2)
{
  void *v4;
  objc_class *v5;
  NSString *v6;
  NSString *v7;
  objc_class *v8;
  NSString *v9;
  NSString *v10;
  uint64_t v11;

  v4 = objc_autoreleasePoolPush();
  kdebug_trace(725353692, 0, 0, 0, 0);
  v5 = (objc_class *)objc_opt_class(BKApplication);
  v6 = NSStringFromClass(v5);
  v7 = (NSString *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (objc_class *)objc_opt_class(BKAppDelegate);
  v9 = NSStringFromClass(v8);
  v10 = (NSString *)objc_claimAutoreleasedReturnValue(v9);
  v11 = UIApplicationMain(a1, a2, v7, v10);

  kdebug_trace(725353696, 0, 0, 0, 0);
  objc_autoreleasePoolPop(v4);
  return v11;
}

void sub_100014490(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_1000144AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, void *, void *, uint64_t);
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;

  v10 = a2;
  v12 = *(void (**)(uint64_t, uint64_t, void *, void *, uint64_t))(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v13 = sub_100009E04(0, &qword_1009D0A90, BCMutableCloudData_ptr);
    v14 = sub_100064D00();
    v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v10, v13, v14);
  }
  if (a3)
    a3 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  swift_retain(v11);
  v15 = a4;
  v16 = a5;
  v12(v10, a3, a4, a5, a6);
  swift_release(v11);

  swift_bridgeObjectRelease(a3);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1000145A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[24];
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = v1 + OBJC_IVAR___BKContainerHost____lazy_storage___resolver;
  swift_beginAccess(v1 + OBJC_IVAR___BKContainerHost____lazy_storage___resolver, v9, 0, 0);
  sub_10000B5E4(v3, (uint64_t)&v7, (uint64_t *)&unk_1009E8B70);
  if (v8)
    return sub_100022840(&v7, (uint64_t)a1);
  sub_100010960((uint64_t)&v7, (uint64_t *)&unk_1009E8B70);
  v5 = sub_10001D778();
  Container.resolver.getter(a1);
  swift_release(v5);
  sub_10002E418((uint64_t)a1, (uint64_t)&v7);
  swift_beginAccess(v3, v6, 33, 0);
  sub_10006CA30((uint64_t)&v7, v3);
  return swift_endAccess(v6);
}

void sub_100014674(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  NSString v6;
  id v7;
  unsigned __int8 v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(a1, "objectForKeyedSubscript:", v6);

    if (v7)
    {
      v8 = objc_msgSend(v7, "toBool");

      v5[OBJC_IVAR___BKAudiobookController_supportsReportConcernInJS] = v8;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1000147F0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_100014888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Class isa;
  id v18;
  Class v19;
  _QWORD v20[3];
  _BYTE v21[8];
  _BYTE v22[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    if (a3)
    {
      v8 = swift_errorRetain(a3);
      v9 = static os_log_type_t.error.getter(v8);
      sub_100009B88();
      v10 = (void *)static OS_os_log.readingActivity.getter();
      v11 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v12 = swift_allocObject(v11, 72, 7);
      *(_OWORD *)(v12 + 16) = xmmword_10070CCA0;
      swift_getErrorValue(a3, v21, v20);
      v13 = Error.localizedDescription.getter(v20[1], v20[2]);
      v15 = v14;
      *(_QWORD *)(v12 + 56) = &type metadata for String;
      *(_QWORD *)(v12 + 64) = sub_10002BE50();
      *(_QWORD *)(v12 + 32) = v13;
      *(_QWORD *)(v12 + 40) = v15;
      os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v10, "Unable to fetch didSeeWelcomeExperienceCloudGlobalMetadataKey for reason: %{public}@", 84, 2, v12);

      swift_bridgeObjectRelease(v12);
      v16 = *(id *)&v7[OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience];
      isa = Bool._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v16, "updateValue:", isa);

      swift_errorRelease(a3);
    }
    else
    {
      v18 = *(id *)(Strong + OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience);
      v19 = Bool._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v18, "updateValue:", v19);

    }
  }
}

void sub_100014A4C(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  kdebug_trace(725353712, 36, 0, 0, 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BLLockFile iTunesSyncLockFilePath](BLLockFile, "iTunesSyncLockFilePath"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByDeletingLastPathComponent"));
  v4 = 0;
  objc_msgSend(v1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v3, 1, 0, &v4);

  kdebug_trace(725353712, 37, 0, 0, 0);
}

id sub_100014B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *ObjectType;
  id v5;
  uint64_t ObjCClassMetadata;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = objc_msgSend((id)objc_opt_self(BCAppKitBundleLoader), "appKitBundleClass");
  if (v5)
    ObjCClassMetadata = swift_getObjCClassMetadata(v5);
  else
    ObjCClassMetadata = 0;
  v7 = (char *)objc_allocWithZone(ObjectType);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR___BKAppGlobalActionHandler_delegate], 0);
  *(_QWORD *)&v7[OBJC_IVAR___BKAppGlobalActionHandler_sceneManager] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___BKAppGlobalActionHandler_appKitBundle] = ObjCClassMetadata;
  v12.receiver = v7;
  v12.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v12, "init");
  v10 = swift_getObjectType(v2, v9);
  swift_deallocPartialClassInstance(v2, v10, 32, 7);
  return v8;
}

void sub_100014C78(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v6 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 16));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0;

  v4 = objc_retainBlock(v6);
  v5 = v4;
  if (v4)
    (*((void (**)(id))v4 + 2))(v4);

}

void sub_100014CE0(id a1)
{
  NSArray *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v5 = (id)objc_claimAutoreleasedReturnValue(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastObject"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByAppendingPathComponent:", CFSTR("jalisco-artwork")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  objc_msgSend(v4, "removeItemAtPath:error:", v3, 0);

}

uint64_t sub_100014D70()
{
  void *v0;
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  id v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = objc_msgSend(v0, "rootViewController");
  if (!v1)
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048F64(v13, (uint64_t)qword_1009EF140);
    v2 = Logger.logObject.getter(v14);
    v18 = static os_log_type_t.debug.getter(v2, v15, v16, v17);
    if (os_log_type_enabled(v2, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v18, "no root VC", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    goto LABEL_23;
  }
  v2 = v1;
  v3 = type metadata accessor for MainToolbarController();
  if (swift_dynamicCastClass(v2, v3))
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100048F64(v4, (uint64_t)qword_1009EF140);
    v6 = Logger.logObject.getter(v5);
    v10 = static os_log_type_t.debug.getter(v6, v7, v8, v9);
    if (os_log_type_enabled(v6, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      v12 = "root VC is main toolbar controller";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v6, v10, v12, v11, 2u);
      swift_slowDealloc(v11, -1, -1);

      return 0;
    }
LABEL_22:

LABEL_23:
    return 0;
  }
  v20 = -[NSObject presentedViewController](v2, "presentedViewController");
  if (!v20)
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100048F64(v38, (uint64_t)qword_1009EF140);
    v6 = Logger.logObject.getter(v39);
    v10 = static os_log_type_t.debug.getter(v6, v40, v41, v42);
    if (os_log_type_enabled(v6, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      v12 = "no presented VC";
      goto LABEL_7;
    }
    goto LABEL_22;
  }
  v21 = v20;
  v22 = objc_opt_self(BKAssetPresentingViewController);
  v23 = swift_dynamicCastObjCClass(v21, v22);
  v24 = qword_1009CE9F8;
  if (!v23)
  {
    if (qword_1009CE9F8 != -1)
      swift_once(&qword_1009CE9F8, sub_100009C18);
    v44 = type metadata accessor for Logger(0);
    sub_100048F64(v44, (uint64_t)qword_1009EF140);
    v45 = v21;
    v46 = Logger.logObject.getter(v45);
    v50 = static os_log_type_t.debug.getter(v46, v47, v48, v49);
    if (os_log_type_enabled(v46, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v52 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v51 = 138412290;
      v55 = (uint64_t)v45;
      v53 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v51 + 4, v51 + 12);
      *v52 = v21;

      _os_log_impl((void *)&_mh_execute_header, v46, v50, "presented VC %@ is not a BKAssetPresentingVC", v51, 0xCu);
      v54 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v52, 1, v54);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v51, -1, -1);

      return 0;
    }

    goto LABEL_23;
  }
  v25 = v23;
  v26 = v21;
  if (v24 != -1)
    swift_once(&qword_1009CE9F8, sub_100009C18);
  v27 = type metadata accessor for Logger(0);
  sub_100048F64(v27, (uint64_t)qword_1009EF140);
  v28 = v26;
  v29 = Logger.logObject.getter(v28);
  v33 = static os_log_type_t.debug.getter(v29, v30, v31, v32);
  if (os_log_type_enabled(v29, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v34 = 138412290;
    v55 = v25;
    v36 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v34 + 4, v34 + 12);
    *v35 = v25;

    _os_log_impl((void *)&_mh_execute_header, v29, v33, "found BKAssetPresentingVC: %@", v34, 0xCu);
    v37 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v35, 1, v37);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

  }
  return v25;
}

uint64_t sub_1000152E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = sub_10004CFD4(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  v8 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);
  return swift_deallocObject(v1, v6, v7);
}

unint64_t sub_1000153D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE v12[176];

  v0 = type metadata accessor for BooksFinished.YearEntry(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v4, v12);
  *(_OWORD *)(inited + 16) = xmmword_100712B60;
  *(_QWORD *)(inited + 32) = 0x737465737361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v6 = BooksFinished.State.currentYearEntry.getter();
  v7 = BooksFinished.YearEntry.assets.getter(v6);
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  v8 = sub_10004CFD4(&qword_1009ECA80);
  v9 = _swiftEmptyArrayStorage;
  if (v7)
    v9 = (_QWORD *)v7;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0xD000000000000015;
  *(_QWORD *)(inited + 88) = 0x80000001007D4E80;
  *(_QWORD *)(inited + 96) = BooksFinished.State.afterCurrentYearCount.getter();
  *(_QWORD *)(inited + 120) = &type metadata for Int;
  *(_QWORD *)(inited + 128) = 0xD000000000000017;
  *(_QWORD *)(inited + 136) = 0x80000001007D4EA0;
  v10 = BooksFinished.State.priorToCurrentYearCount.getter();
  *(_QWORD *)(inited + 168) = &type metadata for Int;
  *(_QWORD *)(inited + 144) = v10;
  return sub_10003FB0C(inited);
}

_QWORD *sub_100015520(uint64_t a1)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[32];
  _QWORD *v14;

  v2 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  sub_100045E44(0, v2, 0);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_10004CD0C(i, (uint64_t)v13);
      if (!swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, &type metadata for String, 6))break;
      v5 = v11;
      v6 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_100045E44(0, v3[2] + 1, 1);
        v3 = v14;
      }
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_100045E44(v7 > 1, v8 + 1, 1);
        v3 = v14;
      }
      v3[2] = v8 + 1;
      v9 = &v3[2 * v8];
      v9[4] = v5;
      v9[5] = v6;
      if (!--v2)
        return v3;
    }
    v11 = 0;
    v12 = 0;
    swift_release(v3);
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  return v3;
}

uint64_t sub_1000156AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheManager);
  v3 = v2[3];
  v4 = v2[4];
  sub_10003F198(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v3, v4);
}

uint64_t sub_100015704(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = v2[16];
  v4 = v2[17];
  v5 = v2[5];
  ObjectType = swift_getObjectType(v2[4], a2);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v2 + 11, v3, v4, ObjectType, v5);
}

id sub_100015760(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t ObjCClassMetadata;
  id v12;
  id v13;
  uint64_t ObjectType;

  v3 = v2;
  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v6 = (void *)qword_100A1E8A8;
  v7 = (void *)objc_opt_self(ACAccountStore);
  v8 = v6;
  v9 = objc_msgSend(v7, "bu_sharedAccountStore");
  v10 = objc_msgSend((id)objc_opt_self(BCAppKitBundleLoader), "appKitBundleClass");
  if (v10)
    ObjCClassMetadata = swift_getObjCClassMetadata(v10);
  else
    ObjCClassMetadata = 0;
  v12 = objc_allocWithZone((Class)type metadata accessor for MenuController());
  v13 = sub_10001F794(a1, a2, v8, v9, ObjCClassMetadata);
  ObjectType = swift_getObjectType();
  swift_deallocPartialClassInstance(v3, ObjectType, 128, 7);
  return v13;
}

uint64_t sub_100015870(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v7 = (void *)result;
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    type metadata accessor for MainActor(0);
    v9 = v7;
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_10090D8E0, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v9;
    v12 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009EA090, (uint64_t)v11);

    return swift_release(v12);
  }
  return result;
}

uint64_t sub_100015988(uint64_t *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v2 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v3 = objc_msgSend(v2, "containerHost");
  sub_1000145A0(v8);

  v4 = v9;
  v5 = v10;
  sub_10003F198(v8, v9);
  v6 = sub_10004CFD4(a1);
  dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);

  return _s5Books15CurrentPageViewVwxx_0(v8);
}

id sub_100015A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *ObjectType;
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v7 = objc_msgSend((id)objc_opt_self(ACAccountStore), "bu_sharedAccountStore");
  v8 = type metadata accessor for AchievementsNotificationController();
  v9 = (char *)objc_allocWithZone(ObjectType);
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_fakePlayerViewController] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_nextFakePlayerType] = 0;
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_application] = a1;
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_sceneManager] = a2;
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_userDefaults] = v6;
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_accountStore] = v7;
  *(_QWORD *)&v9[OBJC_IVAR___BKAppInternalActionHandler_achievementsNotificationControllerType] = v8;
  v13.receiver = v9;
  v13.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v13, "init");
  v11 = swift_getObjectType();
  swift_deallocPartialClassInstance(v2, v11, 64, 7);
  return v10;
}

id sub_100015B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  void *object;
  unint64_t v10;
  void *v11;
  NSString v12;
  _QWORD v14[2];
  unint64_t v15;
  unint64_t v16;

  v2 = sub_10004CFD4(&qword_1009D5D90);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE360 != -1)
    swift_once(&qword_1009CE360, sub_1000663E8);
  v6 = sub_100048F64(v2, (uint64_t)qword_1009E09F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  UserDefault.wrappedValue.getter(&v15, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v15 & 1) != 0)
    return 0;
  v15 = 0xD000000000000012;
  v16 = 0x80000001007C6CC0;
  v14[1] = a1;
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10 = v16;
  if (qword_1009CE820 != -1)
    swift_once(&qword_1009CE820, sub_100064DA0);
  v11 = (void *)qword_100A1EC28;
  v12 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v11, "BOOLForKey:", v12, swift_bridgeObjectRelease(v10).n128_f64[0]);

  return v7;
}

uint64_t sub_100015D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001BFD8(v1, qword_1009E50D8);
  v4 = sub_100048F64(v0, (uint64_t)qword_1009E50D8);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "URLForResource:withExtension:", v6, v7);

  if (v8)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v8);

    v9 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
  }
  else
  {
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  }
  return sub_10006CE68((uint64_t)v3, v4);
}

id sub_100015E88(void *a1, void *a2, void *a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v3[OBJC_IVAR___BKAppAccountActionHandler____lazy_storage___isSignedIn] = 2;
  *(_QWORD *)&v3[OBJC_IVAR___BKAppAccountActionHandler_sceneManager] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___BKAppAccountActionHandler_accountController] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___BKAppAccountActionHandler_accountsProvider] = a3;
  v13.receiver = v3;
  v13.super_class = ObjectType;
  v8 = a1;
  v9 = a2;
  v10 = a3;
  v11 = objc_msgSendSuper2(&v13, "init");
  objc_msgSend(v10, "addObserver:accountTypes:", v11, 1, v13.receiver, v13.super_class);

  return v11;
}

uint64_t sub_100015F5C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v6 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v7 = objc_msgSend(v6, "containerHost");
  sub_1000145A0(v13);

  v8 = v14;
  v9 = v15;
  sub_10003F198(v13, v14);
  v10 = sub_10004CFD4(a2);
  dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);

  sub_10000B558((uint64_t)&v12, a1, a3);
  return _s5Books15CurrentPageViewVwxx_0(v13);
}

id sub_100016034(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v13;
  char v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_monitor] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_eligibilityProvider] = a2;
  v7 = objc_allocWithZone((Class)BSUIDynamicValue);
  v14 = 0;
  v8 = v3;
  swift_retain(a2);
  v9 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v14, &type metadata for Bool);
  v10 = objc_msgSend(v7, "initWithValue:", v9);
  swift_unknownObjectRelease(v9);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_isEligible] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_manager] = a1;
  v11 = a1;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, "init");
}

uint64_t sub_100016120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *(unsigned __int8 *)(a1 + 24);
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
    __asm { BR              X9 }
  return result;
}

_QWORD *sub_1000162CC(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  BKAppLaunchAssertionCoordinator *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v1 = result;
  v2 = result[4];
  if ((*(_QWORD *)(v2 + 8) & (1 << result[7])) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(result[5] + 8) + 24) = 0;
  }
  else
  {
    v3 = *(void **)(v2 + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:"));
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v4));
    v6 = *(_QWORD *)(v1[6] + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    v8 = *(void **)(*(_QWORD *)(v1[6] + 8) + 40);
    if (!v8)
    {
      v9 = -[BKAppLaunchAssertionCoordinator initWithCondition:]([BKAppLaunchAssertionCoordinator alloc], "initWithCondition:", v1[7]);
      v10 = *(_QWORD *)(v1[6] + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      v12 = *(_QWORD *)(*(_QWORD *)(v1[6] + 8) + 40);
      v13 = *(void **)(v1[4] + 40);
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v1[7]));
      objc_msgSend(v13, "setObject:forKeyedSubscript:", v12, v14);

      v8 = *(void **)(*(_QWORD *)(v1[6] + 8) + 40);
    }
    return _objc_msgSend(v8, "enter");
  }
  return result;
}

void sub_1000163E8()
{
  NSString *v0;
  Class v1;
  uint64_t ObjCClassMetadata;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;

  if (qword_1009CE580 != -1)
    swift_once(&qword_1009CE580, sub_100011784);
  if (qword_100A1E948)
  {
    v7 = (id)qword_100A1E948;
    objc_msgSend(v7, "load");
    v0 = (NSString *)String._bridgeToObjectiveC()();
    v1 = NSClassFromString(v0);

    if (v1)
    {
      ObjCClassMetadata = swift_getObjCClassMetadata(v1);
      v3 = sub_10000A5D8();
      v4 = swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v3, 0, 0, 0);
      v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");

      v8 = v5;
      v6 = sub_10004CFD4(&qword_1009E5108);
      swift_dynamicCast(&xmmword_100A1E950, &v8, v3, v6, 7);
    }
    else
    {
      qword_100A1E970 = 0;
      xmmword_100A1E950 = 0u;
      unk_100A1E960 = 0u;

    }
  }
  else
  {
    qword_100A1E970 = 0;
    xmmword_100A1E950 = 0u;
    unk_100A1E960 = 0u;
  }
}

uint64_t sub_10001653C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  result = a1[4];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a2[6];
  v9 = a2[7];
  v10 = result == a2[4] && a1[5] == a2[5];
  if (v10 || (v11 = ((uint64_t (*)(void))_stringCompareWithSmolCheck(_:_:expecting:))(), result = 0, (v11 & 1) != 0))
  {
    if (v6 == v8 && v7 == v9
      || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0), result = 0, (v12 & 1) != 0))
    {
      v13 = v2 - 1;
      if (v2 == 1)
        return 1;
      v14 = a2 + 11;
      v15 = a1 + 11;
      while (v13)
      {
        v16 = *(v15 - 3);
        v17 = *(v15 - 2);
        v18 = *(v15 - 1);
        v19 = *v15;
        v20 = *(v14 - 3);
        v21 = *(v14 - 2);
        v22 = *(v14 - 1);
        v23 = *v14;
        v24 = v16 == v20 && v17 == v21;
        if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v20, v21, 0) & 1) == 0)
          return 0;
        v25 = v18 == v22 && v19 == v23;
        if (!v25 && (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v22, v23, 0) & 1) == 0)
          return 0;
        v14 += 4;
        v15 += 4;
        result = 1;
        if (!--v13)
          return result;
      }
      __break(1u);
    }
  }
  return result;
}

_QWORD *sub_100016680()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _QWORD *result;
  uint64_t v19;

  v0 = sub_10004CFD4(&qword_1009E2840);
  inited = swift_initStackObject(v0, &v19);
  *(_OWORD *)(inited + 16) = xmmword_100723930;
  v2 = (void *)kBKCollectionDefaultAll;
  v3 = (void *)kBKCollectionDefaultIDWantToRead;
  *(_QWORD *)(inited + 32) = kBKCollectionDefaultAll;
  *(_QWORD *)(inited + 40) = v3;
  v4 = (void *)kBKCollectionDefaultIDFinished;
  v5 = (void *)kBKCollectionDefaultIDBooks;
  *(_QWORD *)(inited + 48) = kBKCollectionDefaultIDFinished;
  *(_QWORD *)(inited + 56) = v5;
  v6 = (void *)kBKCollectionDefaultIDAudiobooks;
  v7 = (void *)kBKCollectionDefaultIDPDFs;
  *(_QWORD *)(inited + 64) = kBKCollectionDefaultIDAudiobooks;
  *(_QWORD *)(inited + 72) = v7;
  v8 = (void *)kBKCollectionDefaultIDSamples;
  *(_QWORD *)(inited + 80) = kBKCollectionDefaultIDSamples;
  v9 = (void *)kBKCollectionDefaultIDDownloaded;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  result = sub_10006459C((_QWORD *)1, 8, 1, (_QWORD *)inited);
  result[2] = 8;
  result[11] = v17;
  return result;
}

void sub_1000167BC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *i;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  id v17;
  __int128 v18;
  void *v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  _BYTE v30[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "unzippedCounterpartCacheURL"));
  v25 = 0;
  v19 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v3, 0, 0, &v25));
  v5 = v25;

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v6 = v4;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v7)
  {
    v9 = v7;
    v10 = *(_QWORD *)v22;
    v11 = BCMetadataXattrAssetID;
    *(_QWORD *)&v8 = 141558274;
    v18 = v8;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v6);
        v13 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bu_extendedAttributeNamed:iCloudSyncable:", v11, 1, v18));
        if (objc_msgSend(v14, "length"))
        {
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "setObject:forKeyedSubscript:", v13, v14);
        }
        else
        {
          v15 = BKLibraryDataSourceUbiquityLog(0);
          v16 = objc_claimAutoreleasedReturnValue(v15);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v18;
            v27 = 1752392040;
            v28 = 2112;
            v29 = v13;
            _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "_loadCounterpartInfo: Missing assetID. url: %{mask.hash}@", buf, 0x16u);
          }

          v20 = v5;
          objc_msgSend(v19, "removeItemAtURL:error:", v13, &v20);
          v17 = v20;

          v5 = v17;
        }

      }
      v9 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

}

void sub_100016A00(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  _QWORD v6[5];
  uint8_t buf[16];

  v2 = BCCurrentBookLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Finished setting up recent books provider. Issuing a one time startup block to look at seeding and purging.", buf, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "appLaunchCoordinator"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000BAF48;
  v6[3] = &unk_1008E7458;
  v6[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v5, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("RecentBooksProvider BookReadingTimeTracker Init"), v6);

}

Swift::Int sub_100016C00(Swift::Int result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v22;
  uint64_t v23;

  v22 = (unint64_t *)result;
  v23 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v17 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v9)
      goto LABEL_24;
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v4;
    if (!v18)
    {
      v4 = v17 + 1;
      if (v17 + 1 >= v9)
        goto LABEL_24;
      v18 = *(_QWORD *)(v5 + 8 * v4);
      if (!v18)
      {
        v4 = v17 + 2;
        if (v17 + 2 >= v9)
          goto LABEL_24;
        v18 = *(_QWORD *)(v5 + 8 * v4);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v8 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v4 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v13 = *v12;
    v14 = (void *)v12[1];
    swift_bridgeObjectRetain(v14);
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    v16 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F06A8, v15);
    result = swift_bridgeObjectRelease(v14);
    if (v16 <= 2)
    {
      *(unint64_t *)((char *)v22 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        return sub_1000647E8(v22, a2, v23, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v9)
    goto LABEL_24;
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v4 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v18 = *(_QWORD *)(v5 + 8 * v4);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Int sub_100016DCC(Swift::Int result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v22;
  uint64_t v23;

  v22 = (unint64_t *)result;
  v23 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v17 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v9)
      goto LABEL_24;
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v4;
    if (!v18)
    {
      v4 = v17 + 1;
      if (v17 + 1 >= v9)
        goto LABEL_24;
      v18 = *(_QWORD *)(v5 + 8 * v4);
      if (!v18)
      {
        v4 = v17 + 2;
        if (v17 + 2 >= v9)
          goto LABEL_24;
        v18 = *(_QWORD *)(v5 + 8 * v4);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v8 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v4 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v13 = *v12;
    v14 = (void *)v12[1];
    swift_bridgeObjectRetain(v14);
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    v16 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F06A8, v15);
    result = swift_bridgeObjectRelease(v14);
    if (v16 >= 3)
    {
      *(unint64_t *)((char *)v22 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        return sub_1000647E8(v22, a2, v23, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v9)
    goto LABEL_24;
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v4 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v18 = *(_QWORD *)(v5 + 8 * v4);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_100016F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, _QWORD, uint64_t);
  uint64_t v8;
  _QWORD v9[9];
  char v10;

  v0 = type metadata accessor for Access(0);
  v9[1] = *(_QWORD *)(v0 - 8);
  v9[2] = v0;
  __chkstk_darwin(v0);
  v9[3] = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4((uint64_t *)&unk_1009DD550);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for Domain(0);
  __chkstk_darwin(v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v9[0] = v5;
  v7(v5, enum case for Domain.standard(_:), v8);
  v9[8] = _swiftEmptyArrayStorage;
  sub_100064540(0, 6, 0);
  v9[5] = "OnDevicePersonalization";
  v9[6] = "onfiguration.swift";
  v9[4] = "genre_recommendation_source";
  __asm { BR              X9 }
}

uint64_t sub_1000172B4(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;

  kdebug_trace(725353712, 38, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3 = objc_msgSend(v2, "newShowURLTransactionWithOriginatingSceneController:targetSceneDescriptor:", 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  objc_msgSend(v4, "setInitialUserTransaction:", v3);

  return kdebug_trace(725353712, 39, 0, 0, 0);
}

uint64_t sub_100017380()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v1 & 0x8000000000000000) != 0)
  {
    v5 = (void *)(v1 & 0x7FFFFFFFFFFFFFFFLL);
    v6 = *(void **)(v1 + OBJC_IVAR___BKSplitViewController_contentHostingController);
    KeyPath = swift_getKeyPath(&unk_100712E20);
    v8 = swift_getKeyPath(&unk_100712E48);
    v9 = v5;
    v10 = v6;
    static Published.subscript.getter(&v11, v10, KeyPath, v8);

    swift_release(KeyPath);
    swift_release(v8);
    return v11;
  }
  else
  {
    v2 = (id)v1;
    v3 = TabBarController.selectedItem.getter();

    return v3;
  }
}

uint64_t sub_100017444(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a1[5];
  v6 = a1[6];
  sub_10003F198(a1 + 2, v5);
  swift_retain(a1);
  v7 = a3(v5, v6);
  swift_release(a1);
  return v7;
}

void sub_100017604(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  const __CFString *v8;
  void *v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v5 = *(_QWORD *)(a1 + 32);
  v8 = CFSTR("sessionChange");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
  v9 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1));
  objc_msgSend(v4, "postNotificationName:object:userInfo:", CFSTR("BATrackerSessionChanged"), v5, v7);

}

uint64_t sub_1000178E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  aBlock[4] = sub_10006C0B8;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FDFB8;
  v12 = _Block_copy(aBlock);
  v13 = swift_release(v21);
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v16 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v2, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100017AFC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[5];

  v3 = a2;
  kdebug_trace(725353712, 67, 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  objc_msgSend(v4, "setShouldIgnoreCurrentBookNotifications:", 0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController lastKnownSuccessfullyOpenBookID](BKAssetPresentingViewController, "lastKnownSuccessfullyOpenBookID"));
  v6 = objc_msgSend(v5, "length");

  v7 = *(void **)(a1 + 32);
  if (v3)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "rootBarCoordinator"));
    objc_msgSend(v8, "selectWithIdentifier:isUserAction:", v3, 0);

LABEL_6:
    objc_msgSend(*(id *)(a1 + 32), "setInitialUserTransaction:", 0);
    objc_msgSend(*(id *)(a1 + 32), "_showMainViewController");
    goto LABEL_7;
  }
  if (!objc_msgSend(v7, "shouldOpenLastBook"))
    goto LABEL_6;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10019CB10;
  v12[3] = &unk_1008E77C8;
  v12[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v9, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 64, CFSTR("_showMainViewControllerOrWelcomeScreenNow"), v12);

  objc_msgSend(*(id *)(a1 + 32), "_showMainViewController");
  if (!v6)
    objc_msgSend(*(id *)(a1 + 32), "attemptToPresentStoreReview");
LABEL_7:
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(void **)(v10 + 120);
  *(_QWORD *)(v10 + 120) = 0;

}

void sub_100017C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  char *v4;
  char v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "propertyDidChange:propertyConfiguration:", Strong, *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books20ReadingActivityDonor_readingGoalsConfiguration]);

  }
}

uint64_t sub_100017CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[2];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - v5;
  v7 = type metadata accessor for JSONDecoder.DateDecodingStrategy(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RCDataContainer(0);
  v11 = (void *)static RCDataContainer.default.getter();
  v12 = RCDataContainer.configs.getter(v11);

  if (*(_QWORD *)(v12 + 16) && (v13 = sub_10004CE80(0x65526E4972616579, 0xEC00000077656976), (v14 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v27);
    swift_bridgeObjectRelease(v12);
    if (*((_QWORD *)&v28 + 1))
    {
      sub_10004CFC4(&v27, v29);
      v15 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
      v16 = JSONDecoder.init()();
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for JSONDecoder.DateDecodingStrategy.iso8601(_:), v7);
      dispatch thunk of JSONDecoder.dateDecodingStrategy.setter(v10);
      v17 = type metadata accessor for YearInReview.RemoteConfiguration(0);
      v18 = sub_100008DB0(&qword_1009EA9A8, type metadata accessor for YearInReview.RemoteConfiguration, (uint64_t)&unk_10072C670);
      JSONDecoder.decode<A>(_:withJSONObject:options:)(v17, v29, 0, v17, v18);
      _s5Books15CurrentPageViewVwxx_0(v29);
      swift_release(v16);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
    }
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
    swift_bridgeObjectRelease(v12);
  }
  v19 = sub_100010960((uint64_t)&v27, (uint64_t *)&unk_1009D04E0);
  v20 = static Logger.yearInReviewEligibleFrameFactory.getter(v19);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No remote config for year in review found", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v24 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
}

uint64_t sub_100018114(uint64_t a1)
{
  void *v2;
  _QWORD v4[5];

  kdebug_trace(725353712, 20, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "librarySetupQueue"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C2610;
  v4[3] = &unk_1008E72C0;
  v4[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "addOperationWithBlock:", v4);

  return kdebug_trace(725353712, 21, 0, 0, 0);
}

void sub_1000181C0(void *a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  unsigned int v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  void *v30;
  void **v31;
  void *v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  int v36;
  uint8_t *v37;
  uint8_t *v38;
  void *v39;
  _QWORD *v40;
  os_log_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  os_log_t v46;
  uint8_t *v47;
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  id v51;
  _BYTE v52[16];

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a3 + 16;
  if ((a2 & 1) != 0)
    goto LABEL_8;
  v15 = objc_msgSend(a1, "managedObjectContext");
  if (!v15)
  {
LABEL_7:
    sub_10031726C(a1, 0);
    goto LABEL_8;
  }
  v16 = v15;
  if ((objc_msgSend(v15, "hasChanges") & 1) == 0)
  {

    goto LABEL_7;
  }
  v51 = 0;
  v17 = objc_msgSend(v16, "save:", &v51);
  v18 = v51;
  if (v17)
  {
    v19 = v51;
    sub_10031726C(a1, 0);

  }
  else
  {
    v26 = v51;
    v27 = _convertNSErrorToError(_:)(v18);

    swift_willThrow(v28);
    swift_errorRelease(v27);
    swift_beginAccess(v14, v49, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v14);
    if (Strong)
    {
      v30 = (void *)Strong;
      v31 = (void **)(Strong + OBJC_IVAR___BKEngagementManager_analyticsHelper);
      swift_beginAccess(Strong + OBJC_IVAR___BKEngagementManager_analyticsHelper, v48, 0, 0);
      v32 = *v31;
      v47 = v32;

      if (!v32)
      {
LABEL_27:
        __break(1u);
        return;
      }
      v33 = v47;
      EngagementManagerAnalyticsHelper.registerSyncFromCloudKitError(_:)(a4);

    }
    static Logger.engagement.getter(Strong);
    swift_errorRetain(a4);
    v34 = swift_errorRetain(a4);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      HIDWORD(v44) = v36;
      v46 = v35;
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = (_QWORD *)swift_slowAlloc(8, -1);
      v47 = v37;
      *(_DWORD *)v37 = 138412290;
      v38 = v37 + 4;
      if (a4)
      {
        swift_errorRetain(a4);
        v39 = (void *)_swift_stdlib_bridgeErrorToNSError(a4);
        v51 = v39;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v38, v47 + 12);
      }
      else
      {
        v51 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v38, v47 + 12);
        v39 = 0;
      }
      v40 = v45;
      *v45 = v39;
      swift_errorRelease(a4);
      swift_errorRelease(a4);
      v41 = v46;
      v42 = v47;
      _os_log_impl((void *)&_mh_execute_header, v46, BYTE4(v44), "Error saving versions from cloud %@", v47, 0xCu);
      v43 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v40, 1, v43);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      sub_10031726C(a1, 0);
    }
    else
    {
      sub_10031726C(a1, 0);

      swift_errorRelease(a4);
      swift_errorRelease(a4);

    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_8:
  if ((a5 & 1) != 0)
  {
    swift_beginAccess(v14, &v51, 0, 0);
    v20 = swift_unknownObjectWeakLoadStrong(v14);
    if (!v20)
      return;
    v21 = (id)v20;
    _s5Books17EngagementManagerC21forceSyncFromCloudKityyF_0();
    goto LABEL_14;
  }
  swift_beginAccess(v14, &v51, 0, 0);
  v22 = swift_unknownObjectWeakLoadStrong(v14);
  if (!v22)
    return;
  v23 = (void *)v22;
  v24 = (id *)(v22 + OBJC_IVAR___BKEngagementManager_analyticsHelper);
  swift_beginAccess(v22 + OBJC_IVAR___BKEngagementManager_analyticsHelper, v50, 0, 0);
  v25 = *v24;
  v21 = *v24;

  if (!v25)
  {
    __break(1u);
    goto LABEL_27;
  }
  EngagementManagerAnalyticsHelper.registerSyncFromCloudKitSuccess()();
LABEL_14:

}

uint64_t sub_1000185B4(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[5];
  uint64_t v9;

  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v3 = swift_allocObject(&unk_1009051A8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, a1);
  v4 = swift_allocObject(&unk_100905540, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_100068DF0;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_1002FAC00;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100064AFC;
  v8[3] = &unk_100905558;
  v5 = _Block_copy(v8);
  v6 = v9;
  swift_retain(v4);
  swift_release(v6);
  objc_msgSend(v2, "performBlockInUIContext:", v5);

  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 111, 101, 68, 1);
  swift_release(v3);
  result = swift_release(v4);
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_100018708()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v1 = v0;
  v2 = *(void **)(v0 + 16);
  if (v2)
  {
    v3 = swift_allocObject(&unk_1009152C0, 24, 7);
    swift_weakInit(v3 + 16, v1);
    v4 = v2;
    swift_retain(v3);
    v2 = (void *)sub_1005C9A18((uint64_t)sub_1005C9920, v3);

    swift_release_n(v3, 2);
  }
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_assetPresenterTask);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_assetPresenterTask) = v2;
  swift_release(v5);
  v6 = *(void **)(v1 + 16);
  if (v6)
  {
    v7 = v6;
    v8 = (void *)sub_100014D70();

  }
  else
  {
    v8 = 0;
  }
  v9 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v8;
  v10 = v8;
  sub_1000187F4(v9);

}

void sub_1000187F4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v3 = *(void **)(v1 + 24);
  if (a1)
  {
    if (v3)
    {
      v4 = a1;
      sub_100009E04(0, &qword_1009EB330, &off_1008E5170);
      v5 = v3;
      v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

      if ((v4 & 1) != 0)
        return;
      v3 = *(void **)(v2 + 24);
    }
  }
  else if (!v3)
  {
    return;
  }
  v7 = qword_1009CE9F8;
  v8 = v3;
  if (v7 != -1)
    swift_once(&qword_1009CE9F8, sub_100009C18);
  v9 = type metadata accessor for Logger(0);
  sub_100048F64(v9, (uint64_t)qword_1009EF140);
  v10 = v8;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v24 = v14;
    *(_DWORD *)v13 = 136315138;
    if (v3)
    {
      v15 = objc_msgSend(v10, "description");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

    }
    else
    {
      v18 = 0xE600000000000000;
      v16 = 0x3E656E6F6E3CLL;
    }
    v23 = sub_100040F58(v16, v18, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4, v13 + 12);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Observing asset presenter: %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    v19 = *(void **)(v2 + 24);
    if (!v19)
      goto LABEL_16;
  }
  else
  {

    v19 = *(void **)(v2 + 24);
    if (!v19)
      goto LABEL_16;
  }
  v20 = swift_allocObject(&unk_1009152C0, 24, 7);
  swift_weakInit(v20 + 16, v2);
  v21 = v19;
  swift_retain(v20);
  v19 = (void *)sub_1005C9060((uint64_t)sub_1005C9C74, v20);

  swift_release_n(v20, 2);
LABEL_16:
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_viewControllerTask);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_viewControllerTask) = v19;
  swift_release(v22);
  sub_1005C8F1C();

}

void sub_100018AC4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  BKWelcomeScreenManager *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  v3 = a2;
  v4 = BCSceneLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "_setupWelcomeScreenWithPresenterIfNeeded: handleWelcomeItems", v14, 2u);
  }

  v6 = -[BKWelcomeScreenManager initWithItems:isRTL:]([BKWelcomeScreenManager alloc], "initWithItems:isRTL:", v3, *(unsigned __int8 *)(a1 + 48));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 120);
  *(_QWORD *)(v7 + 120) = v6;

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  if (objc_msgSend(v9, "launchedToTest"))
  {

LABEL_7:
    v12 = 0;
    goto LABEL_8;
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "welcomeScreenManager"));
  v11 = objc_msgSend(v10, "moreScreensComing");

  if ((v11 & 1) == 0)
    goto LABEL_7;
  v12 = 1;
LABEL_8:
  objc_msgSend(*(id *)(a1 + 32), "_setWelcomePresenterIfNoneExists:shouldPresent:", *(_QWORD *)(a1 + 40), v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "launchCoordinator"));
  objc_msgSend(v13, "signalConditionSatisfied:", 11);

}

void sub_100018BE4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSBundle *v5;
  void *v6;
  void *v7;
  id v8;

  kdebug_trace(725353712, 52, 0, 0, 0);
  v8 = (id)objc_claimAutoreleasedReturnValue(+[BRCConfigurationManager sharedInstance](BRCConfigurationManager, "sharedInstance"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v8, "setJsBridge:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BCRCDataContainer defaultContainer](BCRCDataContainer, "defaultContainer"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v3, "setBridge:", v4);

  objc_msgSend(v3, "setSessionHosting:", *(_QWORD *)(a1 + 32));
  v5 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(BRCConfigurationManager));
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "URLForResource:withExtension:", CFSTR("BooksDefaults"), CFSTR("json")));
  objc_msgSend(v8, "registerNamespace:withDefaults:forBundleID:", BRCBooksDefaultsNamespace, v7, BRCBundleID);
  kdebug_trace(725353712, 53, 0, 0, 0);

}

id sub_100018D34()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;
  char v4;
  id v5;
  NSString v6;
  id v7;
  id v9;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v1 = objc_msgSend(v0, "environment");

  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, &type metadata for String, &protocol witness table for String);
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRelease(v2);
    goto LABEL_6;
  }
  sub_10004CE80(0xD00000000000001BLL, 0x80000001007C0CD0);
  v4 = v3;
  swift_bridgeObjectRelease(v2);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    v9 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
    v10 = objc_msgSend(v9, "userDefaults");

    return v10;
  }
  v5 = objc_allocWithZone((Class)NSUserDefaults);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithSuiteName:", v6);

  if (v7)
    return v7;
  else
    return objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
}

void sub_100019088(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint8_t buf[4];
  const char *v12;
  __int16 v13;
  void *v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "primaryAnalyticsController"));

  v4 = JSALog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446466;
    v12 = "-[BKJSAAppController requestPrimaryAnalyticsControllerWithCompletionValue:]_block_invoke";
    v13 = 2112;
    v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "done %{public}s, result=%@", buf, 0x16u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v10 = v3;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
    objc_msgSend(v7, "enqueueValueCall:arguments:file:line:", v8, v9, CFSTR("BKJSAAppController.m"), 156);

  }
  else
  {
    objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", v8, 0, CFSTR("BKJSAAppController.m"), 156);
  }

}

void sub_1000191EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Class isa;
  uint64_t v13;

  v1 = v0;
  v2 = sub_100025354();
  v3 = static os_log_type_t.default.getter(v2);
  sub_100009B88();
  v4 = (void *)static OS_os_log.readingActivity.getter();
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v6 = swift_allocObject(v5, 112, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10070FC00;
  MutableObservableContainer.value.getter(&v13);
  v7 = v13;
  v8 = sub_10002BE50();
  v9 = 0x6C616974696E69;
  if (v7 == 2)
    v9 = 0x64657461647075;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = 0xE700000000000000;
  *(_QWORD *)(v6 + 96) = sub_10004CFD4(&qword_1009EC338);
  *(_QWORD *)(v6 + 104) = sub_1000653D8();
  *(_QWORD *)(v6 + 72) = v2;
  os_log(_:dso:log:_:_:)(v3, &_mh_execute_header, v4, "Showing %{public}s Goals: %{public}@", 36, 2, v6);

  v10 = swift_bridgeObjectRelease(v6);
  v11 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_booksFinishedGoal);
  ReadingGoals.State.booksFinishedGoal.getter(v10);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v11, "updateValue:", isa);

}

void sub_100019358(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  _QWORD v10[5];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "setupAEAssetFactory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  if (objc_msgSend(v2, "shouldOpenLastBook"))
  {

  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "primarySceneController"));
    v6 = objc_msgSend(v5, "willAttemptBookReopen");

    if (!v6)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "appLaunchCoordinator"));
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1001C2B10;
      v10[3] = &unk_1008E77C8;
      v10[4] = *(_QWORD *)(a1 + 32);
      objc_msgSend(v9, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 512, CFSTR("prewarm AEPluginRegistry sharedResources"), v10);

      return;
    }
  }
  v7 = BCCurrentBookLog(v3);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Will attempt to open previously open book.  Prewarming AEPlugingRegistry.", buf, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "_prewarmAEPluginRegistry");
}

uint64_t sub_100019494@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE570 != -1)
    swift_once(&qword_1009CE570, sub_100015D10);
  v9 = sub_100048F64(v2, (uint64_t)qword_1009E50D8);
  sub_10000B59C(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000B518((uint64_t)v4);
    v10 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    if (qword_1009CE578 != -1)
      swift_once(&qword_1009CE578, sub_10000D01C);
    v11 = sub_100048F64(v5, (uint64_t)qword_1009E50F0);
    URL.path.getter();
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    LOBYTE(v13) = objc_msgSend(v10, "fileExistsAtPath:", v14);

    if ((v13 & 1) == 0)
    {
      v16 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v16, 1, v5);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(a1, v11, v5);
  }
  else
  {
    v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v15(v8, v4, v5);
    v15(a1, v8, v5);
  }
  v16 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v16, 1, v5);
}

uint64_t sub_10001969C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v11);
  v16 = (char *)&v32 - v15;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR___BKEngagementManager_updateMetadataGeneration);
  v18 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + OBJC_IVAR___BKEngagementManager_updateMetadataGeneration) = v18;
    v33 = v8;
    v34 = result;
    v19 = result;
    v20 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v35 = v3;
    v21 = static OS_dispatch_queue.main.getter(v20);
    v36 = v6;
    v22 = (void *)v21;
    static DispatchTime.now()();
    + infix(_:_:)(v13, 30.0);
    v23 = *(void (**)(char *, uint64_t))(v10 + 8);
    v23(v13, v19);
    v24 = swift_allocObject(&unk_1008FC2B8, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16, v1);
    v25 = swift_allocObject(&unk_1008FC830, 32, 7);
    *(_QWORD *)(v25 + 16) = v24;
    *(_QWORD *)(v25 + 24) = v18;
    aBlock[4] = sub_100317304;
    v39 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008FC848;
    v26 = _Block_copy(aBlock);
    v27 = swift_release(v39);
    v28 = v33;
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v29 = sub_10003E1A0((unint64_t *)&qword_1009D48E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v30 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v31 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v2, v29);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v28, v5, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v36);
    return ((uint64_t (*)(char *, uint64_t))v23)(v16, v34);
  }
  return result;
}

void sub_100019968(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint8_t buf[4];
  const char *v14;
  __int16 v15;
  void *v16;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "rootBarCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hostingViewController"));

  if (!v4)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKJSAAppController.m", 142, "-[BKJSAAppController requestRootBarAnalyticsTrackerWithCompletionValue:]_block_invoke_2", "hostingViewController", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ba_effectiveAnalyticsTracker"));
  v6 = JSALog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446466;
    v14 = "-[BKJSAAppController requestRootBarAnalyticsTrackerWithCompletionValue:]_block_invoke_2";
    v15 = 2112;
    v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}s done, result=%@", buf, 0x16u);
  }

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 32);
  if (v5)
  {
    v12 = v5;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v12, 1));
    objc_msgSend(v9, "enqueueValueCall:arguments:file:line:", v10, v11, CFSTR("BKJSAAppController.m"), 145);

  }
  else
  {
    objc_msgSend(v8, "enqueueValueCall:arguments:file:line:", v10, 0, CFSTR("BKJSAAppController.m"), 145);
  }

}

id sub_100019B10(id a1)
{
  void *v1;
  id result;
  id v4;
  id v5;
  _BYTE v6[24];

  result = objc_msgSend(v1, "rootBarCoordinator");
  if (!result)
  {
    if (!a1)
      return result;
    goto LABEL_6;
  }
  v4 = result;
  result = (id)swift_unknownObjectRelease(result);
  if (!a1)
  {
LABEL_7:
    swift_beginAccess(&unk_100A1F099, v6, 32, 0);
    swift_unknownObjectRetain(a1);
    objc_setAssociatedObject(v1, &unk_100A1F099, a1, (void *)1);
    swift_endAccess(v6);
    swift_unknownObjectRelease(a1);
    v5 = objc_msgSend(v1, "_mainFlowControllerIfCreated");
    objc_msgSend(v5, "setRootBarCoordinator:", a1);

    return objc_msgSend(v1, "setupRootViewController");
  }
  if (v4 != a1)
  {
LABEL_6:
    objc_msgSend(a1, "willMoveTo:", v1);
    goto LABEL_7;
  }
  return result;
}

void _s5Books17EngagementManagerC21forceSyncFromCloudKityyF_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Logger.engagement.getter(v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Syncing from CloudKit...", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v11 = *(void **)&v1[OBJC_IVAR___BKEngagementManager_manager];
  v20 = sub_100009E04(0, &qword_1009DA348, BDSSecureEngagementData_ptr);
  v12 = v11;
  v13 = sub_10004CFD4((uint64_t *)&unk_1009DA350);
  v14 = String.init<A>(describing:)(&v20, v13);
  v16 = v15;
  v17 = swift_allocObject(&unk_1008FC768, 24, 7);
  *(_QWORD *)(v17 + 16) = v1;
  v18 = v1;
  dispatch thunk of Manager.cloudSyncVersions(dataType:completion:)(v14, v16, sub_10006A3C0, v17);
  swift_release(v17);
  swift_bridgeObjectRelease(v16);

}

uint64_t sub_100019DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v5 = (uint64_t *)(a1 + 16);
  v6 = static os_log_type_t.debug.getter(a1, a2, a3, a4);
  if (qword_1009CDD70 != -1)
    swift_once(&qword_1009CDD70, sub_10006A768);
  v7 = a2 + 16;
  v8 = (void *)qword_1009D5C98;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v10 = swift_allocObject(v9, 112, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070FC00;
  swift_beginAccess(v5, v29, 0, 0);
  v11 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v11 < 0)
      v23 = *v5;
    else
      v23 = v11 & 0xFFFFFFFFFFFFFF8;
    v24 = v8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = v8;
  }
  *(_QWORD *)(v10 + 56) = &type metadata for Int;
  *(_QWORD *)(v10 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v10 + 32) = v12;
  swift_beginAccess(v5, v28, 0, 0);
  v14 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v14 < 0)
      v25 = *v5;
    else
      v25 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v5);
    v15 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = sub_10002BE50();
  v17 = 115;
  if (v15 == 1)
    v17 = 0;
  v18 = 0xE100000000000000;
  *(_QWORD *)(v10 + 96) = &type metadata for String;
  *(_QWORD *)(v10 + 104) = v16;
  if (v15 == 1)
    v18 = 0xE000000000000000;
  *(_QWORD *)(v10 + 72) = v17;
  *(_QWORD *)(v10 + 80) = v18;
  os_log(_:dso:log:_:_:)(v6, &_mh_execute_header, v8, "Finished setting up %{public}d service%s", 40, 2, v10);

  swift_bridgeObjectRelease(v10);
  swift_beginAccess(v5, v27, 1, 0);
  v19 = *v5;
  *v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v19);
  swift_beginAccess(v7, &v26, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v21 = (void *)result;
    v22 = *(_QWORD *)(result + OBJC_IVAR___BKServiceCenter__setupState);
    swift_retain(v22);

    MutableObservableContainer.mutate(_:)(sub_10006B730, 0);
    return swift_release(v22);
  }
  return result;
}

uint64_t sub_100019FEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;

  v5 = sub_10004CFD4(&qword_1009EC4B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v9);
  v11 = sub_1000691F0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SuggestionsConfiguration.CodingKeys, &type metadata for SuggestionsConfiguration.CodingKeys, v11, v9, v10);
  if (v2)
    return _s5Books15CurrentPageViewVwxx_0(a1);
  LOBYTE(v36) = 0;
  v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v36, v5);
  v14 = v13;
  v35 = v12;
  LOBYTE(v36) = 1;
  v15 = swift_bridgeObjectRetain(v13);
  v16 = KeyedDecodingContainer.decode(_:forKey:)(&v36, v5, v15);
  v18 = v17;
  v33 = v16;
  v34 = v14;
  v38 = 2;
  sub_1000690C8();
  swift_bridgeObjectRetain(v18);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for SuggestionsConfiguration.MediaType, &v38, v5, &type metadata for SuggestionsConfiguration.MediaType);
  v32 = v18;
  LODWORD(v14) = v36;
  LOBYTE(v36) = 3;
  v31 = KeyedDecodingContainer.decode(_:forKey:)(&v36, v5);
  v37 = v14;
  LOBYTE(v36) = 4;
  v19 = KeyedDecodingContainer.decode(_:forKey:)(&v36, v5);
  LOBYTE(v36) = 5;
  LODWORD(v14) = KeyedDecodingContainer.decode(_:forKey:)(&v36, v5);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v38 = 6;
  sub_100065220(&qword_1009EC4A0, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v38, v5, v20);
  v30 = v14;
  v21 = v36;
  LOBYTE(v36) = 7;
  v22 = swift_bridgeObjectRetain(v21);
  v23 = KeyedDecodingContainer.decode(_:forKey:)(&v36, v5, v22);
  v31 &= 1u;
  v29 = v19 & 1;
  LOBYTE(v19) = v30 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  _s5Books15CurrentPageViewVwxx_0(a1);
  swift_bridgeObjectRelease(v21);
  v24 = v32;
  swift_bridgeObjectRelease(v32);
  v25 = v21;
  v26 = v34;
  result = swift_bridgeObjectRelease(v34);
  *(_QWORD *)a2 = v35;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v33;
  *(_QWORD *)(a2 + 24) = v24;
  *(_BYTE *)(a2 + 32) = v37;
  *(_BYTE *)(a2 + 33) = v31;
  *(_BYTE *)(a2 + 34) = v29;
  *(_BYTE *)(a2 + 35) = v19;
  *(_QWORD *)(a2 + 40) = v25;
  *(_QWORD *)(a2 + 48) = v23;
  return result;
}

uint64_t sub_10001A444()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t (*v21)(char *, _QWORD, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;

  v55 = sub_10004CFD4(&qword_1009DD510);
  v0 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Access(0);
  v45 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Domain(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Environment(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v54 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v53 = (char *)&v39 - v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v39 - v17;
  __chkstk_darwin(v16);
  v19 = *(void (**)(void))(v11 + 104);
  v43 = (char *)&v39 - v20;
  v46 = enum case for Environment.production(_:);
  v19();
  v21 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104);
  v44 = v9;
  v22 = v21(v9, enum case for Domain.standard(_:), v6);
  v23 = static Environment.allCases.getter(v22);
  v24 = v23;
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
    v41 = v3;
    v42 = v5;
    v56 = _swiftEmptyArrayStorage;
    sub_10006456C(0, v25, 0);
    v26 = *(unsigned __int8 *)(v11 + 80);
    v40 = v24;
    v27 = v24 + ((v26 + 32) & ~v26);
    v50 = *(_QWORD *)(v11 + 72);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v49 = enum case for Environment.devel(_:);
    v48 = enum case for Environment.qa(_:);
    v47 = enum case for Environment.staging(_:);
    v51 = v11;
    v52 = v2;
    while (1)
    {
      v28(v18, v27, v10);
      v29 = v53;
      v28(v53, (uint64_t)v18, v10);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v29, v10);
      if (v30 == v49)
      {
        v31 = 0xE500000000000000;
        v32 = 0x6C65766544;
      }
      else if (v30 == v48)
      {
        v31 = 0xE200000000000000;
        v32 = 16721;
      }
      else if (v30 == v47)
      {
        v31 = 0xE700000000000000;
        v32 = 0x676E6967617453;
      }
      else
      {
        if (v30 != v46)
        {
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E75, 0xEC00000065736163, "Books/Settings+Environment.swift", 32, 2, 50, 0);
          __break(1u);
          return result;
        }
        v31 = 0xEA00000000006E6FLL;
        v32 = 0x69746375646F7250;
      }
      v33 = v54;
      v28(v54, (uint64_t)v18, v10);
      Option.init(label:value:description:)(v32, v31, v33, 0, 0, v10);
      v11 = v51;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v10);
      v34 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native(v56) & 1) == 0)
      {
        sub_10006456C(0, v34[2] + 1, 1);
        v34 = v56;
      }
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
      {
        sub_10006456C(v35 > 1, v36 + 1, 1);
        v34 = v56;
      }
      v34[2] = v36 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v0 + 32))((unint64_t)v34+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v36, v52, v55);
      v27 += v50;
      if (!--v25)
      {
        swift_bridgeObjectRelease(v40);
        v3 = v41;
        v5 = v42;
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRelease(v23);
  v34 = _swiftEmptyArrayStorage;
LABEL_18:
  sub_10004CFD4(&qword_1009D8B40);
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v5, enum case for Access.public(_:), v3);
  v37 = sub_10001247C(&qword_1009D8B48, (uint64_t)&protocol conformance descriptor for Environment);
  result = Setting<>.init(_:defaultValue:domain:access:options:)(0xD000000000000013, 0x80000001007BD7F0, v43, v44, v5, v34, v37);
  qword_100A1E488 = result;
  return result;
}

void sub_10001A920(uint64_t a1)
{
  BKAppAccountActionHandler *v2;
  void *v3;
  BKAppAccountActionHandler *v4;
  uint64_t v5;
  void *v6;
  BKAppGlobalActionHandler *v7;
  void *v8;
  BKAppGlobalActionHandler *v9;
  uint64_t v10;
  void *v11;
  BKAppInternalActionHandler *v12;
  uint64_t v13;
  BKAppInternalActionHandler *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v2 = [BKAppAccountActionHandler alloc];
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v4 = -[BKAppAccountActionHandler initWithSceneManager:](v2, "initWithSceneManager:", v3);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(v5 + 200);
  *(_QWORD *)(v5 + 200) = v4;

  v7 = [BKAppGlobalActionHandler alloc];
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v9 = -[BKAppGlobalActionHandler initWithSceneManager:](v7, "initWithSceneManager:", v8);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(void **)(v10 + 208);
  *(_QWORD *)(v10 + 208) = v9;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 208), "setDelegate:");
  if (+[JSADevice isInternalBuild](JSADevice, "isInternalBuild"))
  {
    v12 = [BKAppInternalActionHandler alloc];
    v13 = *(_QWORD *)(a1 + 40);
    v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
    v14 = -[BKAppInternalActionHandler initWithApplication:sceneManager:](v12, "initWithApplication:sceneManager:", v13, v17);
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *(void **)(v15 + 216);
    *(_QWORD *)(v15 + 216) = v14;

  }
}

void sub_10001AA58(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char *Strong;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = *a1;
  v3 = a2 + 16;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v5 = *(_QWORD *)&Strong[OBJC_IVAR___BKBookReaderInteractionCoordinator_interactionManager];
  swift_retain(v5);

  swift_unknownObjectWeakAssign(v5 + 16, v2);
  swift_release(v5);
  v6 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v7 = *(_QWORD *)&v6[OBJC_IVAR___BKBookReaderInteractionCoordinator_interactionManager];
  swift_retain(v7);

  if (v2)
    v8 = objc_msgSend(v2, "viewIfLoaded");
  else
    v8 = 0;
  sub_10000AE7C(v8);
  swift_release(v7);
  v9 = (char *)swift_unknownObjectUnownedLoadStrong(v3);
  v10 = *(_QWORD *)&v9[OBJC_IVAR___BKBookReaderInteractionCoordinator_appIntentsInfoTracker];
  swift_retain(v10);

  v11 = (void *)swift_unknownObjectWeakLoadStrong(v10 + 16);
  swift_unknownObjectWeakAssign(v10 + 16, v2);
  v12 = v2;
  sub_100065CF0(v11);
  swift_release(v10);

}

id sub_10001AB7C(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  uint64_t v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v13[5];
  uint64_t v14;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books27LightLevelControllerWrapper_lightLevelController] = a1;
  v3 = v1;
  v4 = a1;
  LOBYTE(v13[0]) = objc_msgSend(v4, "isLowLight");
  v5 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Books27LightLevelControllerWrapper_isLowLightSubject] = CurrentValueSubject.init(_:)(v13);

  v6 = (objc_class *)type metadata accessor for LightLevelControllerWrapper();
  v15.receiver = v3;
  v15.super_class = v6;
  v7 = objc_msgSendSuper2(&v15, "init", v13[0]);
  v8 = swift_allocObject(&unk_100917568, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v13[4] = sub_1005FCC54;
  v14 = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1005FCA00;
  v13[3] = &unk_100917580;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v7;
  objc_msgSend(v4, "addObserver:changeHandler:", v11, v9, swift_release(v10).n128_f64[0]);

  _Block_release(v9);
  return v11;
}

void sub_10001ACD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;

  v1 = v0;
  v2 = swift_allocObject(&unk_100919D90, 24, 7);
  swift_weakInit(v2 + 16, v1);
  v3 = swift_allocObject(&unk_100919DB8, 32, 7);
  *(_QWORD *)(v3 + 16) = &unk_1009F29E0;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (objc_class *)type metadata accessor for UIAppIntentInteraction(0);
  v5 = objc_allocWithZone(v4);
  v6 = sub_100066D44();
  v7 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for BookReaderNavigatePagesIntent, &unk_1009F29F0, v3, &type metadata for BookReaderNavigatePagesIntent, v6);
  v8 = swift_allocObject(&unk_100919D90, 24, 7);
  swift_weakInit(v8 + 16, v1);
  v9 = swift_allocObject(&unk_100919DE0, 32, 7);
  *(_QWORD *)(v9 + 16) = &unk_1009F2A08;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = objc_allocWithZone(v4);
  v11 = sub_100483970();
  v12 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for BookReaderNavigatePageInBookIntent, &unk_1009F2A18, v9, &type metadata for BookReaderNavigatePageInBookIntent, v11);
  v13 = swift_allocObject(&unk_100919D90, 24, 7);
  swift_weakInit(v13 + 16, v1);
  v14 = swift_allocObject(&unk_100919E08, 32, 7);
  *(_QWORD *)(v14 + 16) = &unk_1009F2A30;
  *(_QWORD *)(v14 + 24) = v13;
  v15 = objc_allocWithZone(v4);
  v16 = sub_100066120();
  v17 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for BookReaderChangePageNavigationIntent, &unk_1009F2A40, v14, &type metadata for BookReaderChangePageNavigationIntent, v16);
  v18 = 0;
  if (*(_BYTE *)(v1 + 136) == 1)
  {
    v19 = swift_allocObject(&unk_100919D90, 24, 7);
    swift_weakInit(v19 + 16, v1);
    v20 = swift_allocObject(&unk_100919E30, 32, 7);
    *(_QWORD *)(v20 + 16) = &unk_1009F2A58;
    *(_QWORD *)(v20 + 24) = v19;
    v21 = objc_allocWithZone(v4);
    v22 = sub_100204890();
    v18 = UIAppIntentInteraction.init<A>(intent:perform:)(&type metadata for BookReaderChangeThemeIntent, &unk_1009F2A68, v20, &type metadata for BookReaderChangeThemeIntent, v22);
  }
  v23 = v7;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
  v25 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v25 >= v24 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
  v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
  specialized Array._endMutation()(v26);
  v27 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v28 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);
  v31 = v17;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  if (v18)
  {
    v35 = swift_unknownObjectRetain(v18);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v18);
    specialized Array._endMutation()(v38);
  }

  swift_unknownObjectRelease(v18);
  v39 = *(void **)(v1 + 24);
  v40 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = _swiftEmptyArrayStorage;
  v41 = v39;
  swift_bridgeObjectRetain(v40);
  sub_1000670A8(v39, v40);
  swift_bridgeObjectRelease_n(v40, 2);

}

char *sub_10001B0D4(void *a1)
{
  char *v1;
  CGFloat *v3;
  CGFloat left;
  CGFloat bottom;
  CGFloat right;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  objc_super v18;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books20PaletteContainerView_defaultHeight] = 0x4050000000000000;
  v3 = (CGFloat *)&v1[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets];
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  *v3 = UIEdgeInsetsZero.top;
  v3[1] = left;
  v3[2] = bottom;
  v3[3] = right;
  v7 = &v1[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration];
  *v7 = 4;
  *((_QWORD *)v7 + 1) = *(_QWORD *)&UIEdgeInsetsZero.top;
  *((CGFloat *)v7 + 2) = left;
  *((CGFloat *)v7 + 3) = bottom;
  *((CGFloat *)v7 + 4) = right;
  v8 = OBJC_IVAR____TtC5Books20PaletteContainerView_containerView;
  v9 = type metadata accessor for PaletteContainerView.ContainerView();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9));
  v11 = v1;
  *(_QWORD *)&v1[v8] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books20PaletteContainerView____lazy_storage___separator] = 0;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", a1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView] = v12;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for PaletteContainerView();
  v13 = (char *)objc_msgSendSuper2(&v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  v14 = OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView;
  v15 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView], "contentView");
  v16 = OBJC_IVAR____TtC5Books20PaletteContainerView_containerView;
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v13[OBJC_IVAR____TtC5Books20PaletteContainerView_containerView]);

  objc_msgSend(v13, "addSubview:", *(_QWORD *)&v13[v14]);
  swift_unknownObjectWeakAssign(*(_QWORD *)&v13[v16]+ OBJC_IVAR____TtCC5Books20PaletteContainerViewP33_B708909BBFE60AF0BC370E92243FB30413ContainerView_layoutDelegate, v13);

  return v13;
}

void sub_10001B274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSDictionary v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  id v11;
  unsigned int v12;
  uint64_t v13;
  id v14;
  void **v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];

  v3 = v2;
  if (a2)
  {
    v4 = a2;
  }
  else
  {
    v4 = RCDataContainer.configs.getter();
    a2 = 0;
  }
  swift_bridgeObjectRetain(a2);
  v5.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  static String._unconditionallyBridgeFromObjectiveC(_:)(BRCBooksDefaultsKeyPersonalizationLocalSignalSyncEnabled);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = -[objc_class valueForKeyPath:](v5.super.isa, "valueForKeyPath:", v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)(v9);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_100025B3C((uint64_t)&v18, (uint64_t)v20, (uint64_t *)&unk_1009D04E0);
  sub_10000B5E4((uint64_t)v20, (uint64_t)&v18, (uint64_t *)&unk_1009D04E0);
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_100010960((uint64_t)&v18, (uint64_t *)&unk_1009D04E0);
LABEL_14:
    if (*(_BYTE *)(v3 + OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled) == 1)
      *(_BYTE *)(v3 + OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled) = 0;
    goto LABEL_16;
  }
  v10 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  if ((swift_dynamicCast(&v17, &v18, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
    goto LABEL_14;
  v11 = v17;
  v12 = objc_msgSend(v17, "BOOLValue");

  v13 = OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled;
  if (v12 != *(unsigned __int8 *)(v3 + OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled))
  {
    *(_BYTE *)(v3 + OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled) = v12;
    if (v12)
    {
      _s5Books17EngagementManagerC21forceSyncFromCloudKityyF_0();
      if (*(_BYTE *)(v3 + v13) == 1)
      {
        v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EngagementManagerMetadata(0)), "init");
        v15 = (void **)(v3 + OBJC_IVAR___BKEngagementManager_metadata);
        swift_beginAccess(v3 + OBJC_IVAR___BKEngagementManager_metadata, &v18, 1, 0);
        v16 = *v15;
        *v15 = v14;

        sub_10001969C();
        sub_100010960((uint64_t)v20, (uint64_t *)&unk_1009D04E0);
        return;
      }
    }
  }
LABEL_16:
  sub_100010960((uint64_t)v20, (uint64_t *)&unk_1009D04E0);

}

void sub_10001B4BC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_engagementManager);
  *(_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService_engagementManager) = a1;

  v5 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_readingActivityDonor);
  if (v5)
  {
    v6 = *(void **)&a1[OBJC_IVAR___BKEngagementManager_manager];
    v7 = a1;
    v8 = v6;
    v9 = v5;
    Manager.register(donor:)(v9);

    v10 = swift_allocObject(&unk_100911B88, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v2);
    v11 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
    swift_retain(v10);
    v12 = String._bridgeToObjectiveC()();
    v13 = swift_allocObject(&unk_100911D60, 49, 7);
    *(_QWORD *)(v13 + 16) = 0xD00000000000002CLL;
    *(_QWORD *)(v13 + 24) = 0x80000001007D4100;
    *(_QWORD *)(v13 + 32) = sub_100069550;
    *(_QWORD *)(v13 + 40) = v10;
    *(_BYTE *)(v13 + 48) = 0;
    aBlock[4] = sub_100595874;
    v17 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100010E84;
    aBlock[3] = &unk_100911D78;
    v14 = _Block_copy(aBlock);
    v15 = v17;
    swift_retain(v10);
    swift_release(v15);
    objc_msgSend(v11, "fetchMetadataBoolForKey:completion:", v12, v14);
    _Block_release(v14);
    swift_release_n(v10, 2);

  }
  else
  {
    __break(1u);
  }
}

void sub_10001B6D4(void *a1, char a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  __int128 v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, void *, void *, uint64_t);
  void *v20;
  void (*v21)(void *, void *, void *, uint64_t, int);
  uint64_t v22;

  if ((a2 & 1) == 0)
  {
    v5 = (void *)objc_opt_self(BDSSecureManager);
    v6 = a1;
    v7 = objc_msgSend(v5, "sharedManager");
    v8 = objc_msgSend(v7, "engagementManager");

    v20 = (void *)type metadata accessor for CDCloudSyncVersions(0);
    v21 = (void (*)(void *, void *, void *, uint64_t, int))&protocol witness table for CDCloudSyncVersions;
    *(_QWORD *)&v18 = v6;
    v9 = type metadata accessor for CDCloudSyncVersionsAdaptor();
    v10 = swift_allocObject(v9, 56, 7);
    sub_100022840(&v18, v10 + 16);
    v11 = objc_allocWithZone((Class)BCMutableCloudSyncVersions);
    v12 = v6;
    v13 = objc_msgSend(v11, "initWithCloudSyncVersions:", v10, (_QWORD)v18);
    swift_release(v10);
    if (v13)
    {
      v14 = swift_allocObject(&unk_1008FC790, 24, 7);
      *(_QWORD *)(v14 + 16) = a3;
      v21 = sub_10006A3B8;
      v22 = v14;
      *(_QWORD *)&v18 = _NSConcreteStackBlock;
      *((_QWORD *)&v18 + 1) = 1107296256;
      v19 = sub_1000144AC;
      v20 = &unk_1008FC7A8;
      v15 = _Block_copy(&v18);
      v16 = v22;
      v17 = a3;
      swift_release(v16);
      objc_msgSend(v8, "getEngagementDataChangesSince:completion:", v13, v15);
      _Block_release(v15);

    }
    swift_unknownObjectRelease(v8);
    sub_10031726C(a1, 0);
  }
}

void sub_10001B874()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "userMarkedBookAsFinishedWithNotification:", BKLibraryAssetMarkedAsFinishedNotification, 0);

  v3 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v3, "addObserver:selector:name:object:", v0, "userPurchasedContentWithNotification:", BLDownloadQueuePurchaseSucceededNotification, 0);

  v4 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v4, "addObserver:selector:name:object:", v0, "userCustomizedReadingGolsWithNotification:", BCCustomizingReadingGoalsNotification, 0);

  v5 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v5, "addObserver:selector:name:object:", v0, "userDidRateContentWithNotification:", BSUICloudAssetRateContentNotification, 0);

  v6 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v6, "addObserver:selector:name:object:", v0, "userAddContentToWTRCollectionWithNotification:", BKLibraryAssetAddToWTRCollectionNotification, 0);

}

char *sub_10001B9F8()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKPalettePresentationInteraction_delegate], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKPalettePresentationInteraction_transitioningDelegate], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKPalettePresentationInteraction_presentedViewController], 0);
  *(_QWORD *)&v0[OBJC_IVAR___BKPalettePresentationInteraction_view] = 0;
  v0[OBJC_IVAR___BKPalettePresentationInteraction_isEnabled] = 1;
  v1 = OBJC_IVAR___BKPalettePresentationInteraction_tapGestureRecognizer;
  v2 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "init");
  *(_QWORD *)&v3[OBJC_IVAR___BKPalettePresentationInteraction_animationController] = 0;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PalettePresentationInteraction();
  v5 = (char *)objc_msgSendSuper2(&v12, "init");
  v6 = OBJC_IVAR___BKPalettePresentationInteraction_tapGestureRecognizer;
  v7 = *(void **)&v5[OBJC_IVAR___BKPalettePresentationInteraction_tapGestureRecognizer];
  v8 = v5;
  objc_msgSend(v7, "addTarget:action:", v8, "tapGestureRecognized:");
  objc_msgSend(*(id *)&v5[v6], "setDelegate:", v8);
  v9 = OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer;
  objc_msgSend(*(id *)&v8[OBJC_IVAR___BKPalettePresentationInteraction_panGestureRecognizer], "addTarget:action:", v8, "panGestureRecognized:");
  objc_msgSend(*(id *)&v8[v9], "setMaximumNumberOfTouches:", 1);
  objc_msgSend(*(id *)&v8[v9], "_setHysteresis:", 5.0);
  v10 = *(id *)&v8[v9];
  objc_msgSend(v10, "setDelegate:", v8);

  return v8;
}

void sub_10001BBB0(void *a1, uint64_t a2, void *a3, const void *a4)
{
  id v7;
  id v8;
  _BYTE v9[24];

  swift_beginAccess(a4, v9, 32, 0);
  v7 = a3;
  v8 = a1;
  objc_setAssociatedObject(v8, a4, v7, (void *)1);
  swift_endAccess(v9);

}

void sub_10001BE14(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootBarCoordinator"));
  v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "rootViewController"));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedFlowController"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "minibarContainerView"));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "superview"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "view"));

  if (v5 != v6)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v7 = objc_opt_class(UITabBarController);
    v8 = BUDynamicCast(v7, v13);
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v10 = v9;
    if (v9)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "view"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "tabBar"));
      objc_msgSend(v11, "insertSubview:belowSubview:", v4, v12);

    }
    else
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "view"));
      objc_msgSend(v11, "addSubview:", v4);
    }

  }
}

uint64_t sub_10001BF38(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  char v10;

  v7 = sub_10004CFD4(&qword_1009D5D90);
  sub_10001BFD8(v7, a2);
  sub_100048F64(v7, (uint64_t)a2);
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "bu_groupUserDefaults");
  v10 = 0;
  return UserDefault.init(_:defaults:defaultValue:)(a3, a4, v8, &v10, &type metadata for Bool);
}

uint64_t *sub_10001BFD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t type metadata accessor for AMSEngagementService()
{
  return objc_opt_self(_TtC5Books20AMSEngagementService);
}

uint64_t sub_10001C038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint8_t *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t);
  _BYTE v49[24];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004CFD4(&qword_1009E3A18);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009E3A20);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - v14;
  v17 = static Capabilities.isInternalBuild.getter(v16);
  v18 = &unk_1009E3000;
  if ((v17 & 1) == 0)
    goto LABEL_8;
  v19 = v1 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config, v49, 0, 0);
  sub_10000B5E4(v19, (uint64_t)v15, &qword_1009E3A20);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2);
  sub_100010960((uint64_t)v15, &qword_1009E3A20);
  v18 = (_QWORD *)&unk_1009E3000;
  if ((_DWORD)v19 != 1)
    goto LABEL_8;
  v20 = v1 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider__debugYearOverride;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v48(v9, v1 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider__debugYearOverride, v6);
  UserDefault.wrappedValue.getter(&v51, v6);
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v9, v6);
  v18 = (_QWORD *)&unk_1009E3000;
  if (v51)
  {
    v47 = v21;
    if (qword_1009CE4B8 != -1)
      swift_once(&qword_1009CE4B8, sub_10006C8FC);
    v22 = type metadata accessor for Logger(0);
    sub_100048F64(v22, (uint64_t)qword_1009E3880);
    swift_retain(v1);
    v24 = v1;
    v25 = Logger.logObject.getter(v23);
    v26 = static os_log_type_t.default.getter(v25);
    v27 = os_log_type_enabled(v25, v26);
    v28 = v48;
    if (v27)
    {
      v46 = v24;
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v29 = 134217984;
      v45 = v29 + 4;
      v28(v9, v20, v6);
      UserDefault.wrappedValue.getter(&v51, v6);
      v30 = v47;
      v47(v9, v6);
      v28 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v45, v29 + 12);
      swift_release(v46);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Using debug override year: %ld for activeYear", v29, 0xCu);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

      swift_release(v24);
      v30 = v47;
    }
    v28(v9, v20, v6);
    UserDefault.wrappedValue.getter(&v51, v6);
    v30(v9, v6);
    return v51;
  }
  else
  {
LABEL_8:
    v31 = v1 + v18[278];
    swift_beginAccess(v31, &v51, 0, 0);
    sub_10000B5E4(v31, (uint64_t)v12, &qword_1009E3A20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
    {
      sub_100010960((uint64_t)v12, &qword_1009E3A20);
      if (qword_1009CE4B8 != -1)
        swift_once(&qword_1009CE4B8, sub_10006C8FC);
      v32 = type metadata accessor for Logger(0);
      v33 = sub_100048F64(v32, (uint64_t)qword_1009E3880);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "No config provided for activeYear", v36, 2u);
        swift_slowDealloc(v36, -1, -1);
      }

      return 0;
    }
    else
    {
      sub_10002C960((uint64_t)v12, (uint64_t)v5, type metadata accessor for YearInReview.RemoteConfiguration);
      v37 = *v5;
      if (qword_1009CE4B8 != -1)
        swift_once(&qword_1009CE4B8, sub_10006C8FC);
      v38 = type metadata accessor for Logger(0);
      v39 = sub_100048F64(v38, (uint64_t)qword_1009E3880);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.default.getter(v40);
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v42 = 134217984;
        v50 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v42 + 4, v42 + 12);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Using config provided year: %ld for activeYear", v42, 0xCu);
        swift_slowDealloc(v42, -1, -1);
      }

      sub_10002C8F0((uint64_t)v5, type metadata accessor for YearInReview.RemoteConfiguration);
    }
  }
  return v37;
}

uint64_t sub_10001C5A0()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char *v24;
  _BYTE v25[16];

  if ((FrontmostApplicationTracker.isFrontmost.getter() & 1) != 0)
  {
    if (qword_1009CE928 != -1)
      swift_once(&qword_1009CE928, sub_10000A068);
    v1 = type metadata accessor for Logger(0);
    sub_100048F64(v1, (uint64_t)qword_1009EE820);
    v2 = v0;
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v5 = 138412290;
      v24 = v2;
      v7 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v5 + 4, v5 + 12);
      *v6 = v2;

      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%@: Application did become frontmost", v5, 0xCu);
      v8 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v6, 1, v8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

    }
    else
    {

    }
    swift_getObjectType();
    v17 = (uint64_t *)&v2[OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeFrontmost];
    swift_beginAccess(v17, &v24, 0, 0);
    v19 = *v17;
    v18 = v17[1];
    sub_10002ACF0(v19, v18);
    v20 = 0x80000001007D6D20;
    v21 = 0xD000000000000014;
  }
  else
  {
    if (qword_1009CE928 != -1)
      swift_once(&qword_1009CE928, sub_10000A068);
    v9 = type metadata accessor for Logger(0);
    sub_100048F64(v9, (uint64_t)qword_1009EE820);
    v10 = v0;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 138412290;
      v24 = v10;
      v15 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v13 + 4, v13 + 12);
      *v14 = v10;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%@: Application will resign frontmost", v13, 0xCu);
      v16 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v14, 1, v16);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    swift_getObjectType();
    v22 = (uint64_t *)&v10[OBJC_IVAR___BKAppLifecycleObserver_onWillResignFrontmost];
    swift_beginAccess(v22, &v24, 0, 0);
    v19 = *v22;
    v18 = v22[1];
    sub_10002ACF0(v19, v18);
    v21 = 0xD000000000000015;
    v20 = 0x80000001007D6D40;
  }
  sub_10002ABF0(v21, v20, v19, v18);
  return sub_10002AD00(v19, v18);
}

void sub_10001C968(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  char v25[24];

  v4 = v3;
  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
  v11 = *(_QWORD *)&v3[OBJC_IVAR___BKYearInReviewEligibilityService_eligibilityProvider];
  *(_QWORD *)&v3[OBJC_IVAR___BKYearInReviewEligibilityService_eligibilityProvider] = a1;
  swift_release(v11);
  v12 = *(_QWORD *)&v3[OBJC_IVAR___BKYearInReviewEligibilityService_notificationScheduler];
  *(_QWORD *)&v4[OBJC_IVAR___BKYearInReviewEligibilityService_notificationScheduler] = a2;
  swift_retain(a1);
  swift_release(v12);
  v13 = (id *)&v4[OBJC_IVAR___BKYearInReviewEligibilityService_topPicksObserver];
  swift_beginAccess(&v4[OBJC_IVAR___BKYearInReviewEligibilityService_topPicksObserver], v25, 1, 0);
  v14 = *v13;
  *v13 = a3;
  swift_retain(a2);

  static TaskPriority.low.getter(a3);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
  v16 = (_QWORD *)swift_allocObject(&unk_10090EBF0, 40, 7);
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v4;
  v17 = v4;
  v18 = sub_10053DC20((uint64_t)v10, (uint64_t)&unk_1009EA980, (uint64_t)v16);
  swift_release(v18);
  sub_100010960((uint64_t)v10, &qword_1009D3150);
  if (*v13)
  {
    v19 = *v13;
    sub_1000217BC();

  }
  v20 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v21 = (void *)static NSNotificationName.rcDataContainerConfigDidChange.getter(v20);
  objc_msgSend(v20, "addObserver:selector:name:object:", v17, "onConfigurationChange:", v21, 0);

  MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
  v22 = *(void **)&v17[OBJC_IVAR___BKYearInReviewEligibilityService_setupPromise];
  v23 = objc_msgSend(objc_allocWithZone((Class)NSObject), "init");
  objc_msgSend(v22, "finishWithResult:", v23);

}

id _s5Books22ReadingActivityServiceC19readingGoalsEnabledSbvg_0()
{
  id v0;
  id v1;
  NSString v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  unsigned int v9;

  v0 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v1 = objc_msgSend(v0, "userDefaults");

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  v4 = objc_msgSend((id)objc_opt_self(BRCConfigurationManager), "sharedInstance");
  static String._unconditionallyBridgeFromObjectiveC(_:)(BRCBooksDefaultsKeyReadingGoalsFeatureEnabled);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(v4, "valueForKey:fromNamespace:", v7, BRCBooksDefaultsNamespace);

  if (v8)
  {
    v9 = objc_msgSend(v8, "BOOLValue");

    return (id)(v9 & v3);
  }
  return v3;
}

id sub_10001CD2C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id result;
  uint64_t v13;
  id v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for PaletteContainerView();
  objc_msgSendSuper2(&v16, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView_containerView];
  v3 = objc_msgSend(v1, "contentView");
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  result = objc_msgSend(v2, "setFrame:", sub_10001D044(v5, v7, v9, v11, *(double *)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets], *(double *)&v0[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 8]));
  v13 = v0[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration];
  if ((_DWORD)v13 != 4)
  {
    v14 = objc_msgSend(v1, "contentView");
    objc_msgSend(v14, "bounds");

    v15 = objc_msgSend(v0, "traitCollection");
    objc_msgSend(v15, "displayScale");

    __asm { BR              X9 }
  }
  return result;
}

double sub_10001D044(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t type metadata accessor for PaletteContainerView()
{
  return objc_opt_self(_TtC5Books20PaletteContainerView);
}

void sub_10001D080(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectGraphHost"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadProgressCenter"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "jsaLibraryManager"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "serviceCenter"));
  objc_msgSend(v9, "resolveAsyncDependenciesWithLibraryItemStateProvider:downloadProgressCenter:assetActionHandler:figaroPageContextProvider:sceneManager:serviceCenter:", v2, v3, v5, v6, v7, v8);

}

_QWORD *_s5Books29ServiceCenterAppConfigurationC16serviceFactoriesSayAA03AnyB7Factory_pGvg_0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;

  v0 = type metadata accessor for ReadingActivityServiceFactory();
  v1 = (_QWORD *)swift_allocObject(v0, 64, 7);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  v1[5] = sub_10000A614();
  v1[6] = sub_100064D58();
  v1[2] = v3;
  v1[7] = objc_msgSend(v2, "standardUserDefaults");
  v4 = sub_10001D380(0, 1, 1, _swiftEmptyArrayStorage);
  v6 = v4[2];
  v5 = v4[3];
  v7 = v6 + 1;
  if (v6 >= v5 >> 1)
    v4 = sub_10001D380((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
  v4[2] = v7;
  v8 = &v4[2 * v6];
  v8[4] = v1;
  v8[5] = &off_1009124D0;
  v9 = type metadata accessor for WidgetServiceFactory();
  v10 = swift_allocObject(v9, 16, 7);
  v11 = v4[3];
  v12 = v6 + 2;
  if (v7 >= v11 >> 1)
    v4 = sub_10001D380((_QWORD *)(v11 > 1), v12, 1, v4);
  v4[2] = v12;
  v13 = &v4[2 * v7];
  v13[4] = v10;
  v13[5] = &off_100913CB8;
  v14 = type metadata accessor for YearInReviewEligibilityServiceFactory();
  v15 = swift_allocObject(v14, 16, 7);
  v17 = v4[2];
  v16 = v4[3];
  v18 = v17 + 1;
  if (v17 >= v16 >> 1)
    v4 = sub_10001D380((_QWORD *)(v16 > 1), v17 + 1, 1, v4);
  v4[2] = v18;
  v19 = &v4[2 * v17];
  v19[4] = v15;
  v19[5] = &off_1008F4878;
  v20 = type metadata accessor for PriceTrackingServiceFactory();
  v21 = swift_allocObject(v20, 16, 7);
  v22 = v4[3];
  v23 = v17 + 2;
  if (v18 >= v22 >> 1)
    v4 = sub_10001D380((_QWORD *)(v22 > 1), v23, 1, v4);
  v4[2] = v23;
  v24 = &v4[2 * v18];
  v24[4] = v21;
  v24[5] = &off_100910EA8;
  return v4;
}

_QWORD *sub_10001D380(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B0A0C(a1, a2, a3, a4, &qword_1009EE468, &qword_1009EE470);
}

void sub_10001D394(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v3 = *(void **)(v1 + 16);
  if (a1)
  {
    if (v3)
    {
      v4 = a1;
      sub_100009E04(0, (unint64_t *)&qword_1009D2490, UIWindow_ptr);
      v5 = v3;
      v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

      if ((v4 & 1) != 0)
        return;
      v3 = *(void **)(v2 + 16);
    }
  }
  else if (!v3)
  {
    return;
  }
  v7 = qword_1009CE9F8;
  v8 = v3;
  if (v7 != -1)
    swift_once(&qword_1009CE9F8, sub_100009C18);
  v9 = type metadata accessor for Logger(0);
  sub_100048F64(v9, (uint64_t)qword_1009EF140);
  v10 = v8;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v20 = v14;
    *(_DWORD *)v13 = 136315138;
    if (v3)
    {
      v15 = objc_msgSend(v10, "description");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

    }
    else
    {
      v18 = 0xE600000000000000;
      v16 = 0x3E656E6F6E3CLL;
    }
    v19 = sub_100040F58(v16, v18, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 4, v13 + 12);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Observing window: %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

  }
  sub_100018708();

}

uint64_t sub_10001D674()
{
  void **v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "dictionaryForKey:", v2);

  if (!v3)
    return 0;
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  return v4;
}

uint64_t sub_10001D778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for ContainerScope(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR___BKContainerHost____lazy_storage___container;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___BKContainerHost____lazy_storage___container);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + OBJC_IVAR___BKContainerHost____lazy_storage___container);
  }
  else
  {
    v9 = sub_1000078F0();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ContainerScope.application(_:), v2);
    v8 = ContainerManager.container(for:)(v5);
    swift_release(v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v10 = *(_QWORD *)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v8;
    swift_retain(v8);
    swift_release(v10);
    v7 = 0;
  }
  swift_retain(v7);
  return v8;
}

void sub_10001D874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  uint64_t Strong;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[3];
  char v26[24];

  v5 = sub_10004CFD4(&qword_1009D35C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v14 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) != 0)
  {
    swift_beginAccess(a2 + 16, v26, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v16 = (char *)Strong;
      if ((BUIsRunningTests() & 1) == 0)
      {
        swift_beginAccess(a3 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager__items, v25, 33, 0);
        v17 = sub_10004CFD4((uint64_t *)&unk_1009EE4E0);
        Published.projectedValue.getter(v17);
        swift_endAccess(v25);
        v18 = sub_100030B34((unint64_t *)&unk_1009EE4F0, &qword_1009D35C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v19 = Publisher.eraseToAnyPublisher()(v5, v18);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v25[0] = v19;
        v20 = swift_allocObject(&unk_1008F4A78, 24, 7);
        swift_unknownObjectWeakInit(v20 + 16, v16);
        v21 = sub_10004CFD4((uint64_t *)&unk_1009DCC80);
        v22 = sub_100030B34(&qword_1009D35D0, (uint64_t *)&unk_1009DCC80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
        v23 = Publisher<>.sink(receiveValue:)(sub_10004EB88, v20, v21, v22);
        swift_release(v20);
        swift_release(v25[0]);
        v24 = &v16[OBJC_IVAR___BKRootBarCoordinator_cancellables];
        swift_beginAccess(&v16[OBJC_IVAR___BKRootBarCoordinator_cancellables], v25, 33, 0);
        AnyCancellable.store(in:)(v24);
        swift_endAccess(v25);
        swift_release(v23);
        RootBarStandardItemsManager.loadFromCache()();
      }

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10001DB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  Class isa;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __n128 v40;
  __int128 v41;
  __n128 v42;
  char *v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v52 = a1;
  v1 = type metadata accessor for Book.MediaType(0);
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StoreInfo(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UserInfo(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SaleOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v49 - v15;
  v17 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v57 = 0;
  v19 = objc_msgSend(v17, "dataWithJSONObject:options:error:", isa, 0, &v57);

  v20 = (id)v57;
  if (v19)
  {
    v49 = v3;
    v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;

    v24 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    v25 = sub_10006CE24(v21, v23);
    v26 = JSONDecoder.init()(v25);
    v27 = sub_100068F78();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for SuggestionsConfiguration, v21, v23, &type metadata for SuggestionsConfiguration, v27);
    swift_release(v26);
    v57 = v53;
    v58 = v54;
    v59 = v55;
    v60 = v56;
    sub_100010EF4((uint64_t)&v57);
    v39 = v57;
    v40 = swift_bridgeObjectRetain(*((_QWORD *)&v57 + 1));
    UserInfo.init(treatmentID:)(v39, *((_QWORD *)&v39 + 1), v40);
    v41 = v58;
    v42 = swift_bridgeObjectRetain(*((_QWORD *)&v58 + 1));
    StoreInfo.init(countryCode:)(v41, *((_QWORD *)&v41 + 1), v42);
    v43 = v49;
    if ((_BYTE)v59)
      v44 = (unsigned int *)&enum case for Book.MediaType.audiobook(_:);
    else
      v44 = (unsigned int *)&enum case for Book.MediaType.ebook(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *v44, v51);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    v45 = v52;
    SuggestionsOptions.init(userInfo:storeInfo:mediaType:allGenresAllowed:allowedSales:explicitAllowed:excludedStoreIDs:maxRecommendationCount:)(v9, v6, v43, 0, v14, BYTE3(v59), &_swiftEmptySetSingleton, v60);
    sub_10005EE1C(v21, v23);
    sub_10000B490(&v57);
    sub_10005EE1C(v21, v23);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v46 = type metadata accessor for SuggestionsOptions(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
  }
  else
  {
    v28 = v20;
    v29 = _convertNSErrorToError(_:)(v20);

    swift_willThrow(v30);
    if (qword_1009CE8A8 != -1)
      swift_once(&qword_1009CE8A8, sub_100009F10);
    v31 = type metadata accessor for Logger(0);
    sub_100048F64(v31, (uint64_t)qword_1009EC298);
    swift_errorRetain(v29);
    v32 = swift_errorRetain(v29);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v35 = 138412290;
      swift_errorRetain(v29);
      v37 = _swift_stdlib_bridgeErrorToNSError(v29);
      *(_QWORD *)&v57 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, (char *)&v57 + 8, v35 + 4, v35 + 12);
      *v36 = v37;
      swift_errorRelease(v29);
      swift_errorRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to convert provided configuration dictionary to JSON: %@", v35, 0xCu);
      v38 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v36, 1, v38);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      swift_errorRelease(v29);
    }
    else
    {
      swift_errorRelease(v29);
      swift_errorRelease(v29);
      swift_errorRelease(v29);

    }
    v48 = type metadata accessor for SuggestionsOptions(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v52, 1, 1, v48);
  }
}

uint64_t sub_10001E1DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char *v3;
  id v4;
  id v5;
  id v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (char *)result;
    v4 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneManager");
    v5 = objc_msgSend(v4, "primarySceneController");

    v6 = objc_msgSend(v5, "rootBarCoordinator");
    if (v6)
    {
      ObjectType = swift_getObjectType();
      v8 = sub_10001199C(ObjectType);
      v10 = v9;
      swift_unknownObjectRetain(v8);
      swift_unknownObjectRelease(v6);
    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    v11 = (uint64_t *)&v3[OBJC_IVAR___BKSessionDonor_rootBarCoordinator];
    v12 = *(_QWORD *)&v3[OBJC_IVAR___BKSessionDonor_rootBarCoordinator];
    *v11 = v8;
    v11[1] = v10;
    swift_unknownObjectRelease(v12);
    v13 = *v11;
    if (*v11)
    {
      v14 = v11[1];
      v15 = swift_getObjectType();
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
      v16 = swift_allocObject(&unk_1008FDCD0, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16, v3);
      v17 = sub_10004CFD4((uint64_t *)&unk_1009DB470);
      v18 = sub_100030B34((unint64_t *)&unk_1009DCC70, (uint64_t *)&unk_1009DB470, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v13 = Publisher<>.sink(receiveValue:)(sub_10006C0B0, v16, v17, v18);
      swift_release(v16);
      swift_release(v20);
    }
    v19 = *(_QWORD *)&v3[OBJC_IVAR___BKSessionDonor_currentTabPublisherCancellable];
    *(_QWORD *)&v3[OBJC_IVAR___BKSessionDonor_currentTabPublisherCancellable] = v13;

    return swift_release(v19);
  }
  return result;
}

void sub_10001E3A4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(NSObject **)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v0, "_launchTestName");
  v11 = objc_msgSend(v1, "isRunningTest:", v10);

  if (!v11)
  {
    if (qword_1009CE248 != -1)
      swift_once(&qword_1009CE248, sub_10000B8CC);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_1009DEA98);
    v32 = Logger.logObject.getter(v18);
    v14 = static os_log_type_t.error.getter(v32);
    if (!os_log_type_enabled(v32, v14))
      goto LABEL_12;
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    v16 = "Not really running launch test";
    goto LABEL_11;
  }
  if ((byte_100A1E768 & 1) != 0)
  {
    if (qword_1009CE248 != -1)
      swift_once(&qword_1009CE248, sub_10000B8CC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100048F64(v12, (uint64_t)qword_1009DEA98);
    v32 = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.info.getter(v32);
    if (!os_log_type_enabled(v32, v14))
      goto LABEL_12;
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    v16 = "Ignoring duplicate extended launch completion. PPT kills us if we call finishedTest() now";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v32, v14, v16, v15, 2u);
    swift_slowDealloc(v15, -1, -1);
LABEL_12:

    return;
  }
  byte_100A1E768 = 1;
  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v31 = v6;
  v32 = v3;
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100048F64(v19, (uint64_t)qword_1009DEA98);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "finishedTest", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  aBlock[4] = sub_100012A8C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100900AB0;
  v26 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_100008E8C();
  v28 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v29 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v2, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v26);
  _Block_release(v26);

  ((void (*)(char *, uint64_t))v32[1].isa)(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
  v30 = objc_msgSend(v1, "_launchTestName");
  objc_msgSend(v1, "finishedTest:extraResults:", v30, 0);

}

void sub_10001E7FC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  void *v5;
  NSObject *v6;
  dispatch_time_t v7;
  uint64_t v8;
  NSObject *v9;
  _QWORD block[5];
  uint8_t v11[16];
  _QWORD v12[4];
  NSObject *v13;
  id v14;
  id buf[2];

  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 56));
  v2 = BKStoreLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BKStoreController: Suspending bagSnapshotAccessQueue for bag update", (uint8_t *)buf, 2u);
  }

  objc_initWeak(buf, *(id *)(a1 + 32));
  v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BUBag defaultBag](BUBag, "defaultBag"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100078F14;
  v12[3] = &unk_1008E74A0;
  objc_copyWeak(&v14, buf);
  v6 = v4;
  v13 = v6;
  objc_msgSend(v5, "createSnapshotWithCompletion:", v12);

  v7 = dispatch_time(0, 200000000);
  dispatch_group_wait(v6, v7);
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 56));
  v8 = BKStoreLog();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BKStoreController: Resuming bagSnapshotAccessQueue after bag update", v11, 2u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100078F80;
  block[3] = &unk_1008E72C0;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_group_notify(v6, (dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v14);
  objc_destroyWeak(buf);
}

void sub_10001E9D0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

char *sub_10001E9F8(uint64_t a1, void *a2)
{
  char *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  objc_super v22;

  v5 = &v2[OBJC_IVAR___BKAppLifecycleObserver_onWillEnterForeground];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v2[OBJC_IVAR___BKAppLifecycleObserver_onDidEnterBackground];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v2[OBJC_IVAR___BKAppLifecycleObserver_onWillResignActive];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v2[OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeActive];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v2[OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeFrontmost];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v2[OBJC_IVAR___BKAppLifecycleObserver_onWillResignFrontmost];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BKAppLifecycleObserver_coordinator] = a1;
  v11 = objc_allocWithZone((Class)type metadata accessor for FrontmostApplicationTracker(0));
  v12 = v2;
  swift_unknownObjectRetain(a1);
  v13 = a2;
  *(_QWORD *)&v12[OBJC_IVAR___BKAppLifecycleObserver_frontmostTracker] = FrontmostApplicationTracker.init(uiApplication:appKitBundle:)();

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for AppLifecycleObserver();
  v14 = objc_msgSendSuper2(&v22, "init");
  v15 = (void *)objc_opt_self(NSNotificationCenter);
  v16 = (char *)v14;
  v17 = objc_msgSend(v15, "defaultCenter");
  objc_msgSend(v17, "addObserver:selector:name:object:", v16, "applicationWillEnterForeground:", UIApplicationWillEnterForegroundNotification, v13);
  objc_msgSend(v17, "addObserver:selector:name:object:", v16, "applicationDidEnterBackground:", UIApplicationDidEnterBackgroundNotification, v13);
  objc_msgSend(v17, "addObserver:selector:name:object:", v16, "applicationDidBecomeActive:", UIApplicationDidBecomeActiveNotification, v13);
  objc_msgSend(v17, "addObserver:selector:name:object:", v16, "applicationWillResignActive:", UIApplicationWillResignActiveNotification, v13);
  v18 = *(void **)&v16[OBJC_IVAR___BKAppLifecycleObserver_frontmostTracker];
  v19 = swift_allocObject(&unk_1009142A0, 24, 7);
  swift_unknownObjectUnownedInit(v19 + 16, v16);
  v20 = v18;
  swift_retain(v19);
  FrontmostApplicationTracker.onFrontmostChanged.setter(sub_100069D74, v19);

  swift_release(v19);
  swift_unknownObjectRelease(a1);

  return v16;
}

id sub_10001EC4C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  char *v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  NSString v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  objc_class *ObjectType;
  _QWORD aBlock[5];
  uint64_t v30;
  objc_super v31;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_10004CFD4(&qword_1009E2848);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009DCC90);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC5Books25LibraryCollectionsService__defaultCollections];
  aBlock[0] = _swiftEmptyArrayStorage;
  v11 = v1;
  v12 = sub_10004CFD4(&qword_1009E2798);
  Published.init(initialValue:)(aBlock, v12);
  v13 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v13(v10, v9, v6);
  v14 = &v11[OBJC_IVAR____TtC5Books25LibraryCollectionsService__userCollections];
  aBlock[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(aBlock, v12);
  v13(v14, v9, v6);
  v15 = &v11[OBJC_IVAR____TtC5Books25LibraryCollectionsService__state];
  LOBYTE(aBlock[0]) = 0;
  Published.init(initialValue:)(aBlock, &type metadata for LibraryCollectionsServiceState);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v15, v5, v2);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books25LibraryCollectionsService_defaultCollectionsFRC] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books25LibraryCollectionsService_userCollectionsFRC] = 0;

  v31.receiver = v11;
  v31.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v31, "init");
  v17 = (void *)objc_opt_self(BKAppDelegate);
  v18 = v16;
  v19 = objc_msgSend(v17, "delegate");
  v20 = objc_msgSend(v19, "appLaunchCoordinator");

  v21 = String._bridgeToObjectiveC()();
  v22 = swift_allocObject(&unk_1009054C8, 24, 7);
  *(_QWORD *)(v22 + 16) = v18;
  aBlock[4] = sub_100068E00;
  v30 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004DCB4;
  aBlock[3] = &unk_1009054E0;
  v23 = _Block_copy(aBlock);
  v24 = v30;
  v25 = v18;
  swift_release(v24);
  objc_msgSend(v20, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 65, v21, v23);
  swift_unknownObjectRelease(v20);

  _Block_release(v23);
  return v25;
}

uint64_t sub_10001EF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *Strong;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009EA020);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009DE7C0);
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v31 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR___BKMenuController_appKitBundle);
  if (v14)
    v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(v14), "frontMostUIWindow");
  else
    v15 = 0;
  v16 = v0 + OBJC_IVAR___BKMenuController_keyWindow;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___BKMenuController_keyWindow);
  swift_unknownObjectWeakAssign(v16, v15);
  sub_10004F054(Strong);

  v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1009CE7F8 != -1)
    swift_once(&qword_1009CE7F8, sub_100064BFC);
  NSNotificationCenter.publisher(for:object:)(qword_1009E9ED0, 0);

  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(250);
  v34 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v19 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
  v20 = sub_100009E04(0, (unint64_t *)&unk_1009DE7F0, NSRunLoop_ptr);
  v21 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v22 = sub_100010A68((unint64_t *)&qword_1009DE800, (unint64_t *)&unk_1009DE7F0, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
  Publisher.debounce<A>(for:scheduler:options:)(v7, &v34, v4, v11, v20, v21, v22);
  sub_100010960((uint64_t)v4, &qword_1009EA020);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
  v23 = swift_allocObject(&unk_10090D840, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v1);
  v24 = sub_100030B34(&qword_1009DE810, &qword_1009DE7C0, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v25 = v33;
  v26 = Publisher<>.sink(receiveValue:)(sub_100528F24, v23, v33, v24);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v25);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_observeKeyWindowTask);
  *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_observeKeyWindowTask) = v26;
  swift_release(v27);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, v11);
}

uint64_t sub_10001F358()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1[16] = v0;
  v1[17] = *v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  v1[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for YearInReviewEligibilityCriteria.EligibilityCondition(0);
  v1[19] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[20] = v4;
  v1[21] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E0B70);
  v1[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[23] = v6;
  v1[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D5D90);
  v1[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[26] = v8;
  v1[27] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar(0);
  v1[28] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[29] = v10;
  v1[30] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E0B78);
  v1[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D7440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[32] = swift_task_alloc(v12);
  v1[33] = swift_task_alloc(v12);
  v13 = type metadata accessor for Date(0);
  v1[34] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v1[35] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[36] = swift_task_alloc(v15);
  v1[37] = swift_task_alloc(v15);
  v1[38] = swift_task_alloc(v15);
  v1[39] = swift_task_alloc(v15);
  v16 = sub_10004CFD4(&qword_1009E3A40);
  v1[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v1[41] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v1[42] = v18;
  v1[43] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009E3A20);
  v1[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  v1[45] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v1[46] = v21;
  v1[47] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10002CE20, 0, 0);
}

uint64_t sub_10001F5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  sub_10002E418(v0 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_goalsStateProvider, (uint64_t)v19);
  v2 = v20;
  v3 = v21;
  sub_10003F198(v19, v20);
  dispatch thunk of ReadingGoalsStateProvider.observable.getter(v16, v2, v3);
  v4 = v17;
  v5 = v18;
  sub_10003F198(v16, v17);
  v6 = swift_allocObject(&unk_10091B170, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v0);
  swift_retain(v6);
  dispatch thunk of ReadingGoalsStateObserving.addObserver(_:callback:)(v0, sub_100069AC0, v6, v4, v5);
  swift_release_n(v6, 2);
  _s5Books15CurrentPageViewVwxx_0(v16);
  _s5Books15CurrentPageViewVwxx_0(v19);
  sub_10002E418(v0 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_historyStateProvider, (uint64_t)v19);
  v7 = v20;
  v8 = v21;
  sub_10003F198(v19, v20);
  v9 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v7, v8);
  v10 = swift_allocObject(&unk_10091B170, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(v1, sub_100069AC0, v10);
  swift_release(v9);
  swift_release(v10);
  _s5Books15CurrentPageViewVwxx_0(v19);
  sub_10002E418(v1 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_booksFinishedStateProvider, (uint64_t)v19);
  v11 = v20;
  v12 = v21;
  sub_10003F198(v19, v20);
  v13 = dispatch thunk of BooksFinishedStateProvider.state.getter(v11, v12);
  v14 = swift_allocObject(&unk_10091B170, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v1);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(v1, sub_100069AC0, v14);
  swift_release(v13);
  swift_release(v14);
  return _s5Books15CurrentPageViewVwxx_0(v19);
}

id sub_10001F794(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  _BYTE *v5;
  id v11;
  id v12;
  id v13;
  id v14;
  NSString v15;
  uint64_t v16;
  void *v17;
  NSString v18;
  uint64_t v19;
  void *v20;
  void **v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  objc_super v28;

  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_observeSelectedItemTask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_observeKeyWindowTask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_observeRecentBooksProviderTask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_observeUserCollectionsTask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_retryKeyWindowTypeTask] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_keyWindowTypeRetryCount] = 0;
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKMenuController_keyWindow], 0);
  v5[OBJC_IVAR___BKMenuController_keyWindowType] = 0;
  v5[OBJC_IVAR___BKMenuController_bookshelfType] = 2;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_recentlyOpenedAssets] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_userCollections] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_appLaunchCoordinator] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_sceneManager] = a2;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_libraryCollectionsService] = a3;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_legacyAccountStore] = a4;
  *(_QWORD *)&v5[OBJC_IVAR___BKMenuController_appKitBundle] = a5;
  v28.receiver = v5;
  v28.super_class = (Class)type metadata accessor for MenuController();
  swift_unknownObjectRetain(a1);
  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = objc_msgSendSuper2(&v28, "init");
  sub_10002F574();
  sub_10001EF20();
  v15 = String._bridgeToObjectiveC()();
  v16 = swift_allocObject(&unk_10090D840, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v14);
  v26 = sub_10006B638;
  v27 = v16;
  v22 = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_1000147F0;
  v25 = &unk_10090D880;
  v17 = _Block_copy(&v22);
  swift_release(v27);
  objc_msgSend(a1, "appLaunchCoordinatorPerformWhenLaunched:block:", v15, v17);
  _Block_release(v17);

  v18 = String._bridgeToObjectiveC()();
  v19 = swift_allocObject(&unk_10090D840, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v14);
  v26 = sub_10006B640;
  v27 = v19;
  v22 = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_10004DCB4;
  v25 = &unk_10090D8A8;
  v20 = _Block_copy(&v22);
  swift_release(v27);
  objc_msgSend(a1, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 512, v18, v20);

  swift_unknownObjectRelease(a1);
  _Block_release(v20);

  return v14;
}

char *sub_10001FA8C(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  char *result;
  void *v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  char v28[56];
  objc_super v29;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Books23BooksFinishedDataSource_monitor] = 0;
  v6 = v2;
  v7 = objc_msgSend(a1, "readOnlyChildContext");
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Books23BooksFinishedDataSource_moc] = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v11 = objc_msgSend(a1, "sortDescriptorsForMode:collectionID:", 6, v10);

  v12 = sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  *(_QWORD *)&v6[OBJC_IVAR____TtC5Books23BooksFinishedDataSource_sortDescriptors] = v13;
  v29.receiver = v6;
  v29.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v29, "init");
  v15 = (void *)objc_opt_self(BKLibraryManager);
  v16 = v14;
  v17 = objc_msgSend(v15, "predicateFor_All_Marked_As_Finished_LibraryAssets");
  result = (char *)objc_msgSend(a1, "persistentStoreCoordinator");
  if (result)
  {
    v19 = result;
    KeyPath = swift_getKeyPath(&unk_1007327C0);
    v21 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    inited = swift_initStackObject(v21, v28);
    *(_OWORD *)(inited + 16) = xmmword_1007118D0;
    *(_QWORD *)(inited + 32) = swift_getKeyPath(&unk_1007327F8);
    *(_QWORD *)(inited + 40) = swift_getKeyPath(&unk_100732828);
    v23 = swift_getKeyPath(&unk_100732860);
    *(_QWORD *)(inited + 48) = v23;
    specialized Array._endMutation()(v23);
    v24 = sub_100026EA4(inited);
    swift_bridgeObjectRelease(inited);
    v25 = (char *)v16;
    v26 = sub_1003ACCE8(v19, v17, KeyPath, v24, v25);

    swift_release(KeyPath);
    v27 = *(void **)&v25[OBJC_IVAR____TtC5Books23BooksFinishedDataSource_monitor];
    *(_QWORD *)&v25[OBJC_IVAR____TtC5Books23BooksFinishedDataSource_monitor] = v26;

    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001FF14(uint64_t a1)
{
  BKAudiobookController *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  BKAudiobookController *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  _QWORD v19[5];
  id v20;

  v2 = [BKAudiobookController alloc];
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAudiobookPlayer sharedInstance](BKAudiobookPlayer, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKAudiobookSleepTimer defaultTimer](BKAudiobookSleepTimer, "defaultTimer"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BUBag defaultBag](BUBag, "defaultBag"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v7 = -[BKAudiobookController initWithPlayer:sleepTimer:bag:bridge:](v2, "initWithPlayer:sleepTimer:bag:bridge:", v3, v4, v5, v6);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(v8 + 224);
  *(_QWORD *)(v8 + 224) = v7;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 224), "setDelegate:");
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[JSAMetricsController shared](JSAMetricsController, "shared"));
  objc_msgSend(v10, "startSubmissionIfAllowed");

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "engagementManager"));
  objc_msgSend(v11, "reportAppOpenEvent");

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerHost"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "bridgedResolver"));

  v14 = objc_msgSend(v13, "resolveClass:", objc_opt_class(BKPersonalizationEventDonor));
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(NSObject **)(v16 + 320);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_10002E518;
  v19[3] = &unk_1008E7338;
  v19[4] = v16;
  v20 = v15;
  v18 = v15;
  dispatch_async(v17, v19);

}

char *sub_1000200C8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  _BYTE *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  NSString v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  Class isa;
  uint64_t v23;
  objc_super v24;

  v5[OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApproved] = 0;
  v10 = OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApprovedConfig;
  v11 = objc_allocWithZone((Class)type metadata accessor for CounterPropertyConfiguration(0, a2, a3));
  v12 = v5;
  *(_QWORD *)&v5[v10] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD00000000000001ALL, 0x80000001007DBBF0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v13 = objc_allocWithZone((Class)type metadata accessor for StatePropertyConfiguration(0));
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Books20ReadingActivityDonor_readingGoalsConfiguration] = StatePropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x47676E6964616572, 0xEC000000736C616FLL, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  sub_10002E418((uint64_t)a3, (uint64_t)&v12[OBJC_IVAR____TtC5Books20ReadingActivityDonor_goalsStateProvider]);
  sub_10002E418((uint64_t)a4, (uint64_t)&v12[OBJC_IVAR____TtC5Books20ReadingActivityDonor_historyStateProvider]);
  sub_10002E418((uint64_t)a5, (uint64_t)&v12[OBJC_IVAR____TtC5Books20ReadingActivityDonor_booksFinishedStateProvider]);

  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v24.receiver = v12;
  v24.super_class = (Class)type metadata accessor for ReadingActivityDonor();
  v15 = (char *)objc_msgSendSuper2(&v24, "initWithType:", v14);

  v16 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1007118F0;
  v18 = *(void **)&v15[OBJC_IVAR____TtC5Books20ReadingActivityDonor_readingGoalsConfiguration];
  *(_QWORD *)(v17 + 32) = v18;
  v23 = v17;
  specialized Array._endMutation()(v17);
  type metadata accessor for BasePropertyConfiguration(0);
  v19 = v15;
  v20 = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  objc_msgSend(v19, "setEventConfigurations:", isa);

  sub_10001F5A4();
  _s5Books15CurrentPageViewVwxx_0(a5);
  _s5Books15CurrentPageViewVwxx_0(a4);
  _s5Books15CurrentPageViewVwxx_0(a3);
  return v19;
}

id sub_1000205F8(uint64_t a1, char *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ActionItem;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t SampleActionItem;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ThisActionItem;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  objc_class *ObjectType;
  objc_super v64;
  _QWORD v65[6];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for FigaroProvider(0);
  v65[3] = v4;
  v65[4] = &protocol witness table for FigaroProvider;
  v5 = sub_1000257F8(v65);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v5, a1, v4);
  v61 = OBJC_IVAR___BKContextMenuProvider_swipeActionItems;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009DDFA0);
  v7 = swift_allocObject(v6, 176, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CC80;
  ThisActionItem = type metadata accessor for ReadThisActionItem(0);
  v53 = sub_100008DB0((unint64_t *)&unk_1009CEC80, type metadata accessor for ReadThisActionItem, (uint64_t)&unk_1007375E8);
  *(_QWORD *)(v7 + 32) = ThisActionItem;
  *(_QWORD *)(v7 + 40) = v53;
  v58 = type metadata accessor for MarkAsFinishedActionItem(0);
  v57 = sub_100008DB0((unint64_t *)&unk_1009DDFB0, type metadata accessor for MarkAsFinishedActionItem, (uint64_t)&unk_100729590);
  *(_QWORD *)(v7 + 48) = v58;
  *(_QWORD *)(v7 + 56) = v57;
  v56 = type metadata accessor for MarkAsStillReadingActionItem(0);
  v55 = sub_100008DB0((unint64_t *)&unk_1009CEC90, type metadata accessor for MarkAsStillReadingActionItem, (uint64_t)&unk_100734770);
  *(_QWORD *)(v7 + 64) = v56;
  *(_QWORD *)(v7 + 72) = v55;
  ActionItem = type metadata accessor for AddToWantToReadActionItem(0);
  v9 = sub_100008DB0((unint64_t *)&unk_1009DDFC0, type metadata accessor for AddToWantToReadActionItem, (uint64_t)&unk_100713ED0);
  *(_QWORD *)(v7 + 80) = ActionItem;
  *(_QWORD *)(v7 + 88) = v9;
  v60 = type metadata accessor for RemoveFromWantToReadActionItem(0);
  v59 = sub_100008DB0((unint64_t *)&unk_1009CECA0, type metadata accessor for RemoveFromWantToReadActionItem, (uint64_t)&unk_100726CF0);
  *(_QWORD *)(v7 + 96) = v60;
  *(_QWORD *)(v7 + 104) = v59;
  v10 = type metadata accessor for ExplicitDeclineActionItem(0);
  v11 = sub_100008DB0((unint64_t *)&unk_1009DDFD0, type metadata accessor for ExplicitDeclineActionItem, (uint64_t)&protocol conformance descriptor for ExplicitDeclineActionItem);
  *(_QWORD *)(v7 + 112) = v10;
  *(_QWORD *)(v7 + 120) = v11;
  v12 = type metadata accessor for AppShareActionItem(0);
  *(_QWORD *)(v7 + 128) = v12;
  *(_QWORD *)(v7 + 136) = &protocol witness table for ShareActionItem;
  v51 = type metadata accessor for ListenSampleActionItem(0);
  v50 = sub_100008DB0((unint64_t *)&unk_1009CECB0, type metadata accessor for ListenSampleActionItem, (uint64_t)&unk_1007329E8);
  *(_QWORD *)(v7 + 144) = v51;
  *(_QWORD *)(v7 + 152) = v50;
  SampleActionItem = type metadata accessor for ReadSampleActionItem(0);
  v52 = sub_100008DB0((unint64_t *)&unk_1009DDFE0, type metadata accessor for ReadSampleActionItem, (uint64_t)&unk_100736568);
  *(_QWORD *)(v7 + 160) = SampleActionItem;
  *(_QWORD *)(v7 + 168) = v52;
  *(_QWORD *)&a2[v61] = v7;
  v62 = OBJC_IVAR___BKContextMenuProvider_actionItems;
  v14 = swift_allocObject(v6, 496, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10070CC90;
  v15 = type metadata accessor for AddToCollectionActionItem(0);
  v16 = sub_100008DB0((unint64_t *)&unk_1009CECC0, type metadata accessor for AddToCollectionActionItem, (uint64_t)&unk_100712750);
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v16;
  *(_QWORD *)(v14 + 48) = ActionItem;
  *(_QWORD *)(v14 + 56) = v9;
  *(_QWORD *)(v14 + 64) = v12;
  *(_QWORD *)(v14 + 72) = &protocol witness table for ShareActionItem;
  v17 = type metadata accessor for CancelDownloadActionItem(0);
  v18 = sub_100008DB0((unint64_t *)&unk_1009DDFF0, type metadata accessor for CancelDownloadActionItem, (uint64_t)&unk_10072BDD0);
  *(_QWORD *)(v14 + 80) = v17;
  *(_QWORD *)(v14 + 88) = v18;
  v19 = sub_10006629C();
  *(_QWORD *)(v14 + 96) = &type metadata for CloseAudiobookMiniPlayerActionItem;
  *(_QWORD *)(v14 + 104) = v19;
  v20 = type metadata accessor for CopyLinkActionItem(0);
  v21 = sub_100008DB0((unint64_t *)&unk_1009DE000, type metadata accessor for CopyLinkActionItem, (uint64_t)&unk_100730688);
  *(_QWORD *)(v14 + 112) = v20;
  *(_QWORD *)(v14 + 120) = v21;
  v22 = type metadata accessor for DislikeActionItem(0);
  v23 = sub_100008DB0((unint64_t *)&unk_1009CECE0, type metadata accessor for DislikeActionItem, (uint64_t)&unk_1007328D8);
  *(_QWORD *)(v14 + 128) = v22;
  *(_QWORD *)(v14 + 136) = v23;
  v24 = type metadata accessor for DownloadActionItem(0);
  v25 = sub_100008DB0((unint64_t *)&unk_1009DE010, type metadata accessor for DownloadActionItem, (uint64_t)&unk_100720458);
  *(_QWORD *)(v14 + 144) = v24;
  *(_QWORD *)(v14 + 152) = v25;
  v26 = type metadata accessor for EditFinishedDateActionItem(0);
  v27 = sub_100008DB0((unint64_t *)&unk_1009CECF0, type metadata accessor for EditFinishedDateActionItem, (uint64_t)&unk_100735EC0);
  *(_QWORD *)(v14 + 160) = v26;
  *(_QWORD *)(v14 + 168) = v27;
  v28 = type metadata accessor for GetSampleActionItem(0);
  v29 = sub_100008DB0((unint64_t *)&unk_1009DE020, type metadata accessor for GetSampleActionItem, (uint64_t)&unk_10071CDF8);
  *(_QWORD *)(v14 + 176) = v28;
  *(_QWORD *)(v14 + 184) = v29;
  *(_QWORD *)(v14 + 192) = ThisActionItem;
  *(_QWORD *)(v14 + 200) = v53;
  *(_QWORD *)(v14 + 208) = v10;
  *(_QWORD *)(v14 + 216) = v11;
  v30 = type metadata accessor for GiftActionItem(0);
  v31 = sub_100008DB0((unint64_t *)&unk_1009CED00, type metadata accessor for GiftActionItem, (uint64_t)&unk_100720A98);
  *(_QWORD *)(v14 + 224) = v30;
  *(_QWORD *)(v14 + 232) = v31;
  v32 = type metadata accessor for MultipleGiftActionItem(0);
  v33 = sub_100008DB0((unint64_t *)&unk_1009DE030, type metadata accessor for MultipleGiftActionItem, (uint64_t)&unk_10072D1E8);
  *(_QWORD *)(v14 + 240) = v32;
  *(_QWORD *)(v14 + 248) = v33;
  *(_QWORD *)(v14 + 256) = type metadata accessor for LikeActionItem(0);
  *(_QWORD *)(v14 + 264) = &protocol witness table for LikeActionItem;
  *(_QWORD *)(v14 + 272) = v51;
  *(_QWORD *)(v14 + 280) = v50;
  *(_QWORD *)(v14 + 288) = v58;
  *(_QWORD *)(v14 + 296) = v57;
  *(_QWORD *)(v14 + 304) = v56;
  *(_QWORD *)(v14 + 312) = v55;
  v34 = type metadata accessor for OpenProductPageActionItem(0);
  v35 = sub_100008DB0((unint64_t *)&unk_1009CED10, type metadata accessor for OpenProductPageActionItem, (uint64_t)&unk_100728D60);
  *(_QWORD *)(v14 + 320) = v34;
  *(_QWORD *)(v14 + 328) = v35;
  *(_QWORD *)(v14 + 336) = type metadata accessor for RateAndReviewActionItem(0);
  *(_QWORD *)(v14 + 344) = &protocol witness table for RateAndReviewActionItem;
  *(_QWORD *)(v14 + 352) = SampleActionItem;
  *(_QWORD *)(v14 + 360) = v52;
  v36 = type metadata accessor for RemoveActionItem(0);
  v37 = sub_100008DB0((unint64_t *)&unk_1009DE040, type metadata accessor for RemoveActionItem, (uint64_t)&unk_100734FC8);
  *(_QWORD *)(v14 + 368) = v36;
  *(_QWORD *)(v14 + 376) = v37;
  v38 = type metadata accessor for RemoveFromContinueActionItem(0);
  v39 = sub_100008DB0((unint64_t *)&unk_1009CED20, type metadata accessor for RemoveFromContinueActionItem, (uint64_t)&unk_10071BFF0);
  *(_QWORD *)(v14 + 384) = v38;
  *(_QWORD *)(v14 + 392) = v39;
  *(_QWORD *)(v14 + 400) = v60;
  *(_QWORD *)(v14 + 408) = v59;
  v40 = type metadata accessor for RenameActionItem(0);
  v41 = sub_100008DB0((unint64_t *)&unk_1009DE050, type metadata accessor for RenameActionItem, (uint64_t)&unk_100716168);
  *(_QWORD *)(v14 + 416) = v40;
  *(_QWORD *)(v14 + 424) = v41;
  v42 = type metadata accessor for ReportAnIssueActionItem(0);
  v43 = sub_100008DB0((unint64_t *)&unk_1009CED30, type metadata accessor for ReportAnIssueActionItem, (uint64_t)&unk_10070F908);
  *(_QWORD *)(v14 + 432) = v42;
  *(_QWORD *)(v14 + 440) = v43;
  v44 = type metadata accessor for ViewSupplementalContentActionItem(0);
  v45 = sub_100008DB0((unint64_t *)&unk_1009DE060, type metadata accessor for ViewSupplementalContentActionItem, (uint64_t)&unk_100723CE8);
  *(_QWORD *)(v14 + 448) = v44;
  *(_QWORD *)(v14 + 456) = v45;
  *(_QWORD *)(v14 + 464) = type metadata accessor for SharedWithYouActionItem(0);
  *(_QWORD *)(v14 + 472) = &protocol witness table for SharedWithYouActionItem;
  v46 = type metadata accessor for InternalTapToRadarActionItem(0);
  v47 = sub_100008DB0((unint64_t *)&unk_1009CED40, type metadata accessor for InternalTapToRadarActionItem, (uint64_t)&unk_100735D60);
  *(_QWORD *)(v14 + 480) = v46;
  *(_QWORD *)(v14 + 488) = v47;
  *(_QWORD *)&a2[v62] = v14;
  sub_10002E418((uint64_t)v65, (uint64_t)&a2[OBJC_IVAR___BKContextMenuProvider_figaroProvider]);
  v64.receiver = a2;
  v64.super_class = ObjectType;
  v48 = objc_msgSendSuper2(&v64, "init");
  _s5Books15CurrentPageViewVwxx_0(v65);
  return v48;
}

uint64_t _s5Books25StandardItemsCacheManagerC12dataFromDiskSayAA11RootBarItemCGSgvg_0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if (qword_1009CE408 != -1)
    swift_once(&qword_1009CE408, sub_10006B6D0);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100048F64(v0, (uint64_t)qword_1009E1C98);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.info.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc(22, -1);
    v5 = swift_slowAlloc(64, -1);
    v14 = v5;
    *(_DWORD *)v4 = 136315394;
    v13 = sub_100040F58(0x6D6F724661746164, 0xEC0000006B736944, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v4 + 4, v4 + 12);
    *(_WORD *)(v4 + 12) = 2080;
    v13 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v4 + 14, v4 + 22);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s %s dataFromDisk start", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy(v5, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);
  }

  if (qword_1009CEBA8 != -1)
    swift_once(&qword_1009CEBA8, sub_100068CE4);
  v6 = qword_100A1F150;
  swift_bridgeObjectRetain(qword_100A1F150);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v14 = v11;
    *(_DWORD *)v10 = 136315394;
    v13 = sub_100040F58(0x6D6F724661746164, 0xEC0000006B736944, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10 + 4, v10 + 12);
    *(_WORD *)(v10 + 12) = 2080;
    v13 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10 + 14, v10 + 22);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s %s dataFromDisk end", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  return v6;
}

void sub_100021380(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v5;
  NSString v6;
  id v7;
  id v8;
  Class isa;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t KeyPath;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  _QWORD v36[3];
  char v37[16];
  id v38;

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Books25LibraryCollectionsService_defaultCollectionsFRC;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC5Books25LibraryCollectionsService_defaultCollectionsFRC])
  {
    v5 = objc_allocWithZone((Class)NSFetchRequest);
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "initWithEntityName:", v6);

    v8 = objc_msgSend((id)objc_opt_self(BKCollection), "predicateForSelectableDefaultCollections");
    objc_msgSend(v7, "setPredicate:", v8);

    objc_msgSend(v7, "setReturnsObjectsAsFaults:", 0);
    sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "setSortDescriptors:", isa);

    v10 = objc_msgSend(objc_allocWithZone((Class)NSFetchedResultsController), "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:", v7, a1, 0, 0);
    v38 = 0;
    v11 = objc_msgSend(v10, "performFetch:", &v38);
    v12 = v38;
    if (v11)
    {
      v13 = v38;
      v14 = objc_msgSend(v10, "fetchedObjects");
      if (v14)
      {
        v15 = v14;
        v16 = sub_100009E04(0, (unint64_t *)&qword_1009D7640, BKCollection_ptr);
        v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

        v18 = sub_10003354C(v17);
        swift_bridgeObjectRelease(v17);
        KeyPath = swift_getKeyPath(&unk_1007238A0);
        v20 = swift_getKeyPath(&unk_1007238C8);
        v38 = v18;
        static Published.subscript.setter(&v38, v2, KeyPath, v20);
      }
    }
    else
    {
      v21 = v38;
      v22 = _convertNSErrorToError(_:)(v12);

      swift_willThrow(v23);
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v24 = type metadata accessor for Logger(0);
      sub_100048F64(v24, (uint64_t)qword_1009E40B0);
      swift_errorRetain(v22);
      v25 = swift_errorRetain(v22);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.error.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(12, -1);
        v34 = (void *)swift_slowAlloc(32, -1);
        v38 = v34;
        *(_DWORD *)v28 = 136315138;
        swift_getErrorValue(v22, v37, v36);
        v29 = Error.localizedDescription.getter(v36[1], v36[2]);
        v31 = v30;
        v35 = sub_100040F58(v29, v30, (uint64_t *)&v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v28 + 4, v28 + 12);
        swift_bridgeObjectRelease(v31);
        swift_errorRelease(v22);
        swift_errorRelease(v22);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to fetch default collections: %s", v28, 0xCu);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v28, -1, -1);

        swift_errorRelease(v22);
      }
      else
      {
        swift_errorRelease(v22);
        swift_errorRelease(v22);
        swift_errorRelease(v22);

      }
    }
    v32 = *(void **)&v2[v3];
    *(_QWORD *)&v2[v3] = v10;
    v33 = v10;

    objc_msgSend(v33, "setDelegate:", v2);
  }
}

void sub_1000217BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *v33;
  uint64_t v34;
  char v35[56];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = &v35[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((sub_10002BF4C(1) & 1) != 0)
  {
    v5 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "predicateFor_All_Marked_As_Finished_LibraryAssets");
    v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_manager], "persistentStoreCoordinator");
    if (v6)
    {
      v7 = v6;
      KeyPath = swift_getKeyPath(&unk_100724EA8);
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      inited = swift_initStackObject(v9, v35);
      *(_OWORD *)(inited + 16) = xmmword_1007118D0;
      *(_QWORD *)(inited + 32) = swift_getKeyPath(&unk_100724EE0);
      *(_QWORD *)(inited + 40) = swift_getKeyPath(&unk_100724F10);
      v11 = swift_getKeyPath(&unk_100724F48);
      *(_QWORD *)(inited + 48) = v11;
      v34 = inited;
      specialized Array._endMutation()(v11);
      v12 = v34;
      v13 = v5;
      v14 = sub_100026EA4(v12);
      swift_bridgeObjectRelease(v12);
      v15 = v1;
      v16 = (void *)sub_1003ACCE8(v7, v13, KeyPath, v14, v15);

      swift_release(KeyPath);
      v17 = *(void **)&v15[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_monitor];
      *(_QWORD *)&v15[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_monitor] = v16;
      v18 = v16;

      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
      v20 = (_QWORD *)swift_allocObject(&unk_100906A38, 40, 7);
      v20[2] = 0;
      v20[3] = 0;
      v20[4] = v15;
      v21 = v15;
      v22 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009E39F0, (uint64_t)v20);
      swift_release(v22);
      if (qword_1009CE4C0 != -1)
        swift_once(&qword_1009CE4C0, sub_10006C8D8);
      v23 = type metadata accessor for Logger(0);
      v24 = sub_100048F64(v23, (uint64_t)qword_1009E3898);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Successfully setup monitor, observing for changes", v27, 2u);
        swift_slowDealloc(v27, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1009CE4C0 != -1)
      swift_once(&qword_1009CE4C0, sub_10006C8D8);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100048F64(v28, (uint64_t)qword_1009E3898);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "TopPicksCard is not active, disabling observation", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    v33 = *(void **)&v1[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_monitor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_monitor] = 0;

  }
}

void sub_100021B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_conditionSatisfied:invalidatingAssertion:", *(_QWORD *)(a1 + 48), 0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_100022424(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  objc_class *v4;
  id v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[5];

  v2 = sub_10004CFD4(&qword_1009E8B38);
  v3 = (_QWORD *)swift_allocObject(v2, 112, 7);
  *((_OWORD *)v3 + 1) = xmmword_10070FC00;
  v4 = (objc_class *)type metadata accessor for FrameworkAssembly(0);
  v5 = objc_msgSend(objc_allocWithZone(v4), "init");
  v3[7] = v4;
  v3[8] = sub_100008DB0(&qword_1009E8B40, (uint64_t (*)(uint64_t))&type metadata accessor for FrameworkAssembly, (uint64_t)&protocol conformance descriptor for FrameworkAssembly);
  v3[4] = v5;
  v6 = (objc_class *)type metadata accessor for FrameworkAssembly(0);
  v7 = objc_msgSend(objc_allocWithZone(v6), "init");
  v3[12] = v6;
  v8 = sub_100008DB0(&qword_1009E8B48, (uint64_t (*)(uint64_t))&type metadata accessor for FrameworkAssembly, (uint64_t)&protocol conformance descriptor for FrameworkAssembly);
  v3[13] = v8;
  v3[9] = v7;
  if ((static Capabilities.isInternalBuild.getter(v8) & 1) != 0)
  {
    if (qword_1009CE588 != -1)
      swift_once(&qword_1009CE588, sub_1000163E8);
    sub_10000B5E4((uint64_t)&xmmword_100A1E950, (uint64_t)&v23, &qword_1009E8B68);
    if (v24)
    {
      sub_100022840(&v23, (uint64_t)v25);
      sub_10002E418((uint64_t)v25, (uint64_t)&v23);
      v10 = v3[2];
      v9 = v3[3];
      if (v10 >= v9 >> 1)
        v3 = sub_10002282C((_QWORD *)(v9 > 1), v10 + 1, 1, v3);
      v3[2] = v10 + 1;
      sub_100022840(&v23, (uint64_t)&v3[5 * v10 + 4]);
      _s5Books15CurrentPageViewVwxx_0(v25);
    }
    else
    {
      sub_100010960((uint64_t)&v23, &qword_1009E8B68);
    }
  }
  v11 = sub_10004CFD4(&qword_1009E8B50);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10070FC00;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR___BKContainerHost_launchCoordinator);
  v14 = type metadata accessor for Assembly();
  v15 = swift_allocObject(v14, 24, 7);
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 64) = sub_100008DB0(&qword_1009E8B58, (uint64_t (*)(uint64_t))type metadata accessor for Assembly, (uint64_t)&unk_10072B828);
  *(_QWORD *)(v12 + 32) = v15;
  v16 = type metadata accessor for BooksPersonalizationAssembly();
  v17 = swift_allocObject(v16, 16, 7);
  *(_QWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 104) = sub_100008DB0(&qword_1009E8B60, (uint64_t (*)(uint64_t))type metadata accessor for BooksPersonalizationAssembly, (uint64_t)&unk_100725150);
  *(_QWORD *)(v12 + 72) = v17;
  v18 = type metadata accessor for SingletonPool(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = swift_unknownObjectRetain(v13);
  v20 = SingletonPool.init()(v19);
  v21 = type metadata accessor for ContainerManager(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  return ContainerManager.init(singletonPool:bundleAssemblies:assemblies:)(v20, v3, v12);
}

_QWORD *sub_100022700(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10004CFD4(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
      v15 = j__malloc_size_0(v14);
      v14[2] = v11;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v11 + 4])
          memmove(v16, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v16 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1005B3268(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10002282C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100022700(a1, a2, a3, a4, &qword_1009E8B38, &qword_1009E5108);
}

uint64_t sub_100022840(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100022858(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10004CFD4(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(_QWORD *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23, v25);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100022A64(0, v11, v24, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_100022A64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100022B7C(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[5];
  uint64_t v26;

  v3 = (void *)objc_opt_self(BKLibraryProvider);
  v4 = objc_msgSend(v3, "recentlyEngagedAssetsProvider:", 10);
  v5 = OBJC_IVAR___BKSessionDonor_recentBooksProvider;
  v6 = *(void **)&v1[OBJC_IVAR___BKSessionDonor_recentBooksProvider];
  *(_QWORD *)&v1[OBJC_IVAR___BKSessionDonor_recentBooksProvider] = v4;

  v7 = *(void **)&v1[v5];
  if (v7)
    objc_msgSend(v7, "setDelegate:", v1);
  v8 = objc_msgSend(v3, "mySamplesLibraryProvider:", -1);
  v9 = OBJC_IVAR___BKSessionDonor_sampleBooksProvider;
  v10 = *(void **)&v1[OBJC_IVAR___BKSessionDonor_sampleBooksProvider];
  *(_QWORD *)&v1[OBJC_IVAR___BKSessionDonor_sampleBooksProvider] = v8;

  v11 = *(void **)&v1[v9];
  if (v11)
    objc_msgSend(v11, "setDelegate:", v1);
  v12 = objc_msgSend(v3, "storeAssetProvider:", -1);
  v13 = OBJC_IVAR___BKSessionDonor_storeBooksProvider;
  v14 = *(void **)&v1[OBJC_IVAR___BKSessionDonor_storeBooksProvider];
  *(_QWORD *)&v1[OBJC_IVAR___BKSessionDonor_storeBooksProvider] = v12;

  v15 = *(void **)&v1[v13];
  if (v15)
    objc_msgSend(v15, "setDelegate:", v1);
  swift_unknownObjectWeakAssign(&v1[OBJC_IVAR___BKSessionDonor_manager], a1);
  sub_100024E50(a1);
  v16 = objc_msgSend((id)objc_opt_self(BCBookReadingTimeTracker), "sharedInstance");
  objc_msgSend(v16, "addSessionObserver:", v1);

  sub_1000178E4();
  sub_10005D9A0();
  v17 = objc_msgSend(objc_allocWithZone((Class)CARSessionStatus), "init");
  v18 = OBJC_IVAR___BKSessionDonor_carSessionStatus;
  v19 = *(void **)&v1[OBJC_IVAR___BKSessionDonor_carSessionStatus];
  *(_QWORD *)&v1[OBJC_IVAR___BKSessionDonor_carSessionStatus] = v17;

  v20 = *(void **)&v1[v18];
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v21, "addSessionObserver:", v1);
    objc_msgSend(v1, "propertyDidChange:propertyConfiguration:", v1, *(_QWORD *)&v1[OBJC_IVAR___BKSessionDonor_connectedToCarplayConfig]);

  }
  v22 = objc_msgSend(objc_allocWithZone((Class)CRPairedVehicleManager), "init");
  v23 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v1);
  v25[4] = sub_10032F0FC;
  v26 = v23;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  v25[2] = sub_10000C8D0;
  v25[3] = &unk_1008FDF68;
  v24 = _Block_copy(v25);
  swift_release(v26);
  objc_msgSend(v22, "fetchPairedVehiclesWithCompletion:", v24);
  _Block_release(v24);

}

void sub_100022E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  Class isa;
  void *v33;
  Class v34;
  void *v35;
  unint64_t v36;
  Class v37;
  void *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  Class v44;
  void *v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  Class v52;
  _BYTE v53[4];
  unsigned int v54;
  _BYTE *v55;
  uint64_t v56;
  char v57[56];

  v1 = v0;
  v2 = type metadata accessor for BooksFinished.YearEntry(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v55 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v4);
  v8 = &v53[-v7];
  v9 = __chkstk_darwin(v6);
  v11 = &v53[-v10];
  v54 = static os_log_type_t.default.getter(v9);
  sub_100009B88();
  v12 = (void *)static OS_os_log.readingActivity.getter();
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v14 = swift_allocObject(v13, 152, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100712B60;
  MutableObservableContainer.value.getter(&v56);
  v15 = v56;
  v16 = sub_10002BE50();
  v17 = 0x6C616974696E69;
  if (v15 == 2)
    v17 = 0x64657461647075;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = v17;
  *(_QWORD *)(v14 + 40) = 0xE700000000000000;
  v18 = BooksFinished.State.allTimeCount.getter();
  *(_QWORD *)(v14 + 96) = &type metadata for Int;
  *(_QWORD *)(v14 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 72) = v18;
  v19 = ((uint64_t (*)(void))BooksFinished.State.currentYearEntry.getter)();
  v20 = BooksFinished.YearEntry.assets.getter(v19);
  v21 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v22 = v2;
  v23 = v2;
  v24 = v21;
  v21(v11, v23);
  if (v20)
  {
    v25 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v25 = 0;
  }
  *(_QWORD *)(v14 + 136) = &type metadata for Int;
  *(_QWORD *)(v14 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 112) = v25;
  os_log(_:dso:log:_:_:)(v54, &_mh_execute_header, v12, "Showing %{public}s Books Finished: All time: %{public}d, this year: %{public}d", 78, 2, v14);

  v26 = swift_bridgeObjectRelease(v14);
  v27 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_finishedAssetYear);
  v28 = BooksFinished.State.currentYearEntry.getter(v26);
  BooksFinished.YearEntry.year.getter(v28);
  v29 = v22;
  v30 = v22;
  v31 = v24;
  v24(v8, v30);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v27, "updateValue:", isa);

  v33 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_finishedAssetAllTimeCount);
  BooksFinished.State.allTimeCount.getter();
  v34 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v33, "updateValue:", v34);

  v35 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_finishedAssetsData);
  v36 = sub_1000153D0();
  v37 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v36);
  objc_msgSend(v35, "updateValue:", v37);

  v38 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_finishedAssets);
  v39 = v55;
  v41 = BooksFinished.State.currentYearEntry.getter(v40);
  v42 = (_QWORD *)BooksFinished.YearEntry.assets.getter(v41);
  v31(v39, v29);
  if (!v42)
    v42 = _swiftEmptyArrayStorage;
  v43 = sub_1000644D0((uint64_t)v42);
  swift_bridgeObjectRelease(v42);
  sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  v44 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v43);
  objc_msgSend(v38, "updateArray:", v44);

  v45 = *(void **)(v1 + OBJC_IVAR___BKReadingActivityService_finishedAssetCountByYear);
  v46 = sub_10004CFD4(&qword_1009DDD38);
  inited = swift_initStackObject(v46, v57);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v48 = BooksFinished.State.currentYearEntry.getter(inited);
  v49 = BooksFinished.YearEntry.year.getter(v48);
  v31(v8, v29);
  v56 = v49;
  *(_QWORD *)(inited + 32) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  *(_QWORD *)(inited + 40) = v50;
  *(_QWORD *)(inited + 48) = BooksFinished.State.allTimeCount.getter();
  v51 = sub_10000C748(inited);
  v52 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v51);
  objc_msgSend(v45, "updateValue:", v52);

}

uint64_t sub_100023248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009DD3D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v3);
  v2[11] = swift_task_alloc(v3);
  if (qword_1009CE1B8 != -1)
    swift_once(&qword_1009CE1B8, sub_100007894);
  return swift_task_switch(sub_1000251C8, qword_1009DD230, 0);
}

uint64_t sub_1000232E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for Scope(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = ProxyContainer.public.getter(v4);
  v8 = sub_10004CFD4(&qword_1009E3D90);
  v9 = RegistrationContainer.register<A>(_:name:factory:)(v8, 0, 0, sub_1000657E4, 0, v8);
  swift_release(v7);
  v10 = enum case for Scope.singleton(_:);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v11(v6, enum case for Scope.singleton(_:), v2);
  v12 = Definition.inScope(_:)(v6);
  swift_release(v12);
  swift_release(v9);
  v13 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v14 = v13(v6, v2);
  v15 = ProxyContainer.public.getter(v14);
  v16 = sub_10004CFD4(&qword_1009E3D98);
  v17 = RegistrationContainer.register<A>(_:name:factory:)(v16, 0, 0, sub_100065A34, 0, v16);
  swift_release(v15);
  v11(v6, v10, v2);
  v18 = Definition.inScope(_:)(v6);
  swift_release(v18);
  swift_release(v17);
  v19 = v13(v6, v2);
  v20 = ProxyContainer.public.getter(v19);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009E9D80);
  v22 = RegistrationContainer.register<A>(_:name:factory:)(v21, 0, 0, sub_1000656BC, 0, v21);
  swift_release(v20);
  v11(v6, v10, v2);
  v23 = Definition.inScope(_:)(v6);
  swift_release(v23);
  swift_release(v22);
  v24 = v13(v6, v2);
  v25 = ProxyContainer.public.getter(v24);
  v26 = sub_10004CFD4(&qword_1009E3D88);
  v27 = RegistrationContainer.register<A>(_:name:factory:)(v26, 0, 0, sub_10006590C, 0, v26);
  swift_release(v25);
  v11(v6, v10, v2);
  v28 = Definition.inScope(_:)(v6);
  swift_release(v28);
  swift_release(v27);
  v29 = v13(v6, v2);
  v30 = ProxyContainer.public.getter(v29);
  v31 = type metadata accessor for PersonalizationEventDonor();
  v32 = RegistrationContainer.register<A>(_:name:factory:)(v31, 0, 0, sub_100065698, 0, v31);
  swift_release(v30);
  v11(v6, v10, v2);
  v33 = Definition.inScope(_:)(v6);
  swift_release(v33);
  swift_release(v32);
  v34 = v13(v6, v2);
  v35 = *(_QWORD *)(v1 + 16);
  v36 = ProxyContainer.private.getter(v34);
  v37 = sub_10004CFD4(&qword_1009E9D90);
  v38 = swift_allocObject(&unk_10090D4E8, 24, 7);
  *(_QWORD *)(v38 + 16) = v35;
  swift_unknownObjectRetain(v35);
  v39 = RegistrationContainer.register<A>(_:name:factory:)(v37, 0, 0, sub_100065690, v38, v37);
  swift_release(v36);
  swift_release(v38);
  v11(v6, v10, v2);
  v40 = Definition.inScope(_:)(v6);
  swift_release(v40);
  swift_release(v39);
  return v13(v6, v2);
}

uint64_t type metadata accessor for ContainerHost()
{
  return objc_opt_self(BKContainerHost);
}

void sub_10002373C(void *a1, void *a2, char *a3, id a4, void *a5)
{
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  NSObject *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  NSObject *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  id v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  _QWORD *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  uint64_t v89;
  os_log_type_t v90;
  os_log_type_t v91;
  uint64_t v92;
  NSObject *v93;
  char *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t aBlock[5];
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  __int128 v109;
  uint64_t v110;
  _BYTE v111[16];
  __int128 v112;
  _BYTE v113[16];
  __int128 v114;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = &_dispatch_main_q;
  v12 = &_dispatch_main_q;
  v13 = v10;
  v14 = &_dispatch_main_q;
  if (v13 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v11 = v13;
  }

  if (a1)
  {
    v15 = a1;
    v16 = objc_msgSend(a5, "contentNavigationController");
    if (v16 && (v17 = v16, v16, v17 == a4))
    {
      v96 = a3;
      v38 = objc_msgSend(v15, "navigationItem");
      RootBarItem.title.getter(&v103);
      v39 = v104;
      v114 = v105;
      sub_100210D88((uint64_t)&v114);
      sub_100025B3C((uint64_t)&v106, (uint64_t)v113, &qword_1009D2A80);
      sub_100210D88((uint64_t)v113);
      v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39);
      objc_msgSend(v38, "setTitle:", v40);

      objc_msgSend(v38, "setLargeTitleDisplayMode:", 1);
      if (qword_1009CE750 != -1)
        swift_once(&qword_1009CE750, sub_10006BB90);
      v41 = type metadata accessor for Logger(0);
      sub_100048F64(v41, (uint64_t)qword_1009E8770);
      v42 = a2;
      v43 = v38;
      v44 = v42;
      v45 = v43;
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.default.getter();
      v99 = a5;
      v93 = v45;
      if (os_log_type_enabled(v46, v47))
      {
        type = v47;
        v48 = swift_slowAlloc(32, -1);
        v89 = swift_slowAlloc(96, -1);
        aBlock[0] = v89;
        *(_DWORD *)v48 = 136315650;
        log = v46;
        v107 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v48 + 4, v48 + 12);
        *(_WORD *)(v48 + 12) = 2080;
        v49 = v45;
        v50 = -[NSObject description](v49, "description");
        v51 = v15;
        v52 = a4;
        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        v55 = v54;

        v56 = v53;
        a4 = v52;
        v15 = v51;
        v107 = sub_100040F58(v56, v55, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v48 + 14, v48 + 22);

        swift_bridgeObjectRelease(v55);
        *(_WORD *)(v48 + 22) = 2082;
        RootBarItem.title.getter(&v107);
        v57 = v107;
        v58 = v108;
        v112 = v109;
        sub_100210D88((uint64_t)&v112);
        sub_100025B3C((uint64_t)&v110, (uint64_t)v111, &qword_1009D2A80);
        sub_100210D88((uint64_t)v111);
        v102 = sub_100040F58(v57, v58, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v48 + 24, v48 + 32);

        swift_bridgeObjectRelease(v58);
        v45 = log;
        _os_log_impl((void *)&_mh_execute_header, log, type, "%s: Updating navigationItem: %s content VC for %{public}s", (uint8_t *)v48, 0x20u);
        swift_arrayDestroy(v89, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1, -1);
        swift_slowDealloc(v48, -1, -1);
      }
      else
      {

      }
      v59 = objc_msgSend(a4, "transitionCoordinator");
      v60 = v44;
      v61 = v15;
      v62 = v60;
      v63 = v61;
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.default.getter();
      v66 = os_log_type_enabled(v64, v65);
      if (v59)
      {
        if (v66)
        {
          v67 = swift_slowAlloc(32, -1);
          v90 = v65;
          v68 = (_QWORD *)swift_slowAlloc(16, -1);
          v85 = swift_slowAlloc(32, -1);
          aBlock[0] = v85;
          *(_DWORD *)v67 = 136315650;
          v102 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v67 + 4, v67 + 12);
          *(_WORD *)(v67 + 12) = 2112;
          v102 = (uint64_t)v63;
          v69 = v63;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v67 + 14, v67 + 22);
          *v68 = a1;

          *(_WORD *)(v67 + 22) = 2114;
          v102 = (uint64_t)v62;
          v70 = v62;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v67 + 24, v67 + 32);
          v68[1] = v62;

          _os_log_impl((void *)&_mh_execute_header, v64, v90, "%s: Updating nav stack alongside transition with content VC %@ for %{public}@", (uint8_t *)v67, 0x20u);
          v71 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
          swift_arrayDestroy(v68, 2, v71);
          swift_slowDealloc(v68, -1, -1);
          swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v85, -1, -1);
          swift_slowDealloc(v67, -1, -1);

        }
        else
        {

        }
        v77 = (_QWORD *)swift_allocObject(&unk_10090C528, 56, 7);
        v77[2] = v96;
        v77[3] = a4;
        v77[4] = v63;
        v77[5] = v62;
        v77[6] = v99;
        aBlock[4] = (uint64_t)sub_1004F7D8C;
        v101 = v77;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1004D7C0C;
        aBlock[3] = (uint64_t)&unk_10090C540;
        v78 = _Block_copy(aBlock);
        v79 = v101;
        v80 = v62;
        v81 = v63;
        v82 = v96;
        v83 = a4;
        v84 = v99;
        swift_release(v79);
        objc_msgSend(v59, "animateAlongsideTransition:completion:", 0, v78);

        _Block_release(v78);
        swift_unknownObjectRelease(v59);
      }
      else
      {
        if (v66)
        {
          v72 = swift_slowAlloc(32, -1);
          v91 = v65;
          v73 = (_QWORD *)swift_slowAlloc(16, -1);
          loga = (os_log_t)swift_slowAlloc(32, -1);
          aBlock[0] = (uint64_t)loga;
          *(_DWORD *)v72 = 136315650;
          v102 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v72 + 4, v72 + 12);
          *(_WORD *)(v72 + 12) = 2112;
          v102 = (uint64_t)v63;
          v74 = v63;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v72 + 14, v72 + 22);
          *v73 = a1;

          *(_WORD *)(v72 + 22) = 2114;
          v102 = (uint64_t)v62;
          v75 = v62;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v72 + 24, v72 + 32);
          v73[1] = v62;

          _os_log_impl((void *)&_mh_execute_header, v64, v91, "%s: Updating nav stack with content VC %@ for %{public}@", (uint8_t *)v72, 0x20u);
          v76 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
          swift_arrayDestroy(v73, 2, v76);
          swift_slowDealloc(v73, -1, -1);
          swift_arrayDestroy(loga, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(loga, -1, -1);
          swift_slowDealloc(v72, -1, -1);

        }
        else
        {

        }
        sub_100025E00((uint64_t)v96, a4, v63, v62, v99);

      }
    }
    else
    {
      if (qword_1009CE750 != -1)
        swift_once(&qword_1009CE750, sub_10006BB90);
      v18 = type metadata accessor for Logger(0);
      sub_100048F64(v18, (uint64_t)qword_1009E8770);
      v19 = a2;
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v97 = a4;
        v22 = swift_slowAlloc(22, -1);
        v94 = a3;
        v23 = (_QWORD *)swift_slowAlloc(8, -1);
        v92 = swift_slowAlloc(32, -1);
        v107 = v92;
        *(_DWORD *)v22 = 136315394;
        v103 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, &v107);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v22 + 4, v22 + 12);
        *(_WORD *)(v22 + 12) = 2114;
        v103 = (uint64_t)v19;
        v24 = v15;
        v25 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v22 + 14, v22 + 22);
        *v23 = v19;

        v15 = v24;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: Skipping updating content VC for %{public}@ because the active UI is no longer tab bar", (uint8_t *)v22, 0x16u);
        v26 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v23, 1, v26);
        v27 = v23;
        a3 = v94;
        swift_slowDealloc(v27, -1, -1);
        swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v92, -1, -1);
        v28 = v22;
        a4 = v97;
        swift_slowDealloc(v28, -1, -1);

      }
      else
      {

      }
      objc_msgSend(*(id *)&a3[OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController], "removeObject:", a4);

    }
  }
  else
  {
    if (qword_1009CE750 != -1)
      swift_once(&qword_1009CE750, sub_10006BB90);
    v29 = type metadata accessor for Logger(0);
    sub_100048F64(v29, (uint64_t)qword_1009E8770);
    v30 = a2;
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v98 = a4;
      v33 = swift_slowAlloc(22, -1);
      v34 = (_QWORD *)swift_slowAlloc(8, -1);
      v95 = swift_slowAlloc(32, -1);
      v107 = v95;
      *(_DWORD *)v33 = 136315394;
      v103 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v33 + 4, v33 + 12);
      *(_WORD *)(v33 + 12) = 2114;
      v103 = (uint64_t)v30;
      v35 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v33 + 14, v33 + 22);
      *v34 = v30;

      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s: Did not get a contentViewController for %{public}@, bailing out with spinner", (uint8_t *)v33, 0x16u);
      v36 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v34, 1, v36);
      swift_slowDealloc(v34, -1, -1);
      swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1, -1);
      v37 = v33;
      a4 = v98;
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

    }
    objc_msgSend(*(id *)&a3[OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController], "removeObject:", a4);
  }
}

char *sub_10002444C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSString v14;
  objc_class *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  char *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t MetatypeMetadata;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint8_t *v37;
  uint64_t v39;
  id v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_super v46;
  uint64_t v47;
  uint64_t v48;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v7 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v4[OBJC_IVAR___BKPersonalizationEventDonor_libraryAssetProvider];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKPersonalizationEventDonor_cachedEnagagementPropertyValues] = _swiftEmptyDictionarySingleton;
  v11 = &v4[OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedPropertyTimestamp];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKPersonalizationEventDonor_lastCreatedIdentifierUniquenessIndex] = 0;
  v12 = OBJC_IVAR___BKPersonalizationEventDonor_config;
  v13 = v4;
  *(_QWORD *)&v4[v12] = sub_10003FB0C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v13[OBJC_IVAR___BKPersonalizationEventDonor_booksPersonalizationSectionIDs] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v13[OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer] = 0;
  *(_QWORD *)&v13[OBJC_IVAR___BKPersonalizationEventDonor_defaultMaxCount] = 2000;
  *(_QWORD *)&v13[OBJC_IVAR___BKPersonalizationEventDonor_defaultAgeToExpire] = 0x417E133800000000;
  *(_QWORD *)&v13[OBJC_IVAR___BKPersonalizationEventDonor____lazy_storage___dateFormatter] = 0;
  v13[OBJC_IVAR___BKPersonalizationEventDonor_finishingBookAutomatically] = 2;
  *(_QWORD *)&v13[OBJC_IVAR___BKPersonalizationEventDonor_sectionLinks] = _swiftEmptyDictionarySingleton;

  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v15 = (objc_class *)type metadata accessor for PersonalizationEventDonor();
  v46.receiver = v13;
  v46.super_class = v15;
  v16 = (char *)objc_msgSendSuper2(&v46, "initWithType:", v14);

  v17 = OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer;
  v18 = *(void **)&v16[OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer];
  *(_QWORD *)&v16[OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer] = a3;
  v19 = v16;
  v44 = (uint64_t)a3;
  v20 = a3;

  v21 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v22 = v19;
  v23 = (void *)static NSNotificationName.rcDataContainerConfigDidChange.getter(v22);
  objc_msgSend(v21, "addObserver:selector:name:object:", v22, "configurationDidChange:", v23, *(_QWORD *)&v16[v17]);

  v24 = qword_1009CE498;
  v25 = v22;
  if (v24 != -1)
    swift_once(&qword_1009CE498, sub_100064C98);
  objc_msgSend(v21, "addObserver:selector:name:object:", v25, "finishedBook:", static NSNotificationName.markedAsFinished, 0);

  v27 = static Logger.engagement.getter(v26);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc(12, -1);
    v40 = v20;
    v31 = (uint8_t *)v30;
    v32 = swift_slowAlloc(32, -1);
    v45 = v32;
    *(_DWORD *)v31 = 136315138;
    v47 = ObjectType;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v34 = String.init<A>(describing:)(&v47, MetatypeMetadata);
    v36 = v35;
    v47 = sub_100040F58(v34, v35, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Initializing %s enabled=false", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    v37 = v31;
    v20 = v40;
    swift_slowDealloc(v37, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
  sub_100036C54(v44, 0);

  return v25;
}

uint64_t _s5Books17EngagementManagerC19fetchDialogRequests3for10completionyShySSG_ySDySSSo16AMSDialogRequestCG_s5Error_pSgtcSgtF_0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  Class isa;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  if (a2)
  {
    v5 = result;
    v6 = (void *)objc_opt_self(NSUserDefaults);
    swift_retain(a3);
    v7 = objc_msgSend(v6, "standardUserDefaults");
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "BOOLForKey:", v8);

    if (v9)
    {
      if (qword_1009CEA70 != -1)
        swift_once(&qword_1009CEA70, sub_10061C078);
      v10 = swift_allocObject(&unk_1008FC5B0, 32, 7);
      *(_QWORD *)(v10 + 16) = a2;
      *(_QWORD *)(v10 + 24) = a3;
      swift_retain(a3);
      _s5Books23BKMessagesDebugProviderC19fetchDialogRequests3for10completionyShySSG_ySDySSSo16AMSDialogRequestCG_s5Error_pSgtcSgtF_0(v5, (void (*)(_QWORD *, _QWORD))sub_10004DE04, v10);
      sub_10002AD00(a2, a3);
      return swift_release(v10);
    }
    else
    {
      if (qword_1009CE8C8 != -1)
        swift_once(&qword_1009CE8C8, sub_1000697A4);
      swift_bridgeObjectRetain(v5);
      v12 = sub_100024BAC(v11, (uint64_t (*)(char *, unint64_t, uint64_t))sub_100016C00);
      swift_bridgeObjectRetain(v5);
      v14 = sub_100024BAC(v13, (uint64_t (*)(char *, unint64_t, uint64_t))sub_100016DCC);
      sub_1000102F8(v12);
      v16 = v15;
      v17 = (_QWORD *)swift_allocObject(&unk_1008FC538, 40, 7);
      v17[2] = v16;
      v17[3] = a2;
      v17[4] = a3;
      v18 = (void *)objc_opt_self(BUBag);
      swift_retain(a3);
      v19 = objc_msgSend(v18, "defaultBag");
      v20 = objc_msgSend(objc_allocWithZone((Class)AMSEngagement), "initWithBag:", v19);

      v21 = objc_allocWithZone((Class)AMSEngagementMessageEvent);
      swift_bridgeObjectRetain(v14);
      v22 = String._bridgeToObjectiveC()();
      isa = Set._bridgeToObjectiveC()().super.isa;
      swift_release(v14);
      v24 = objc_msgSend(v21, "initWithServiceType:placements:", v22, isa);

      v25 = objc_msgSend(v20, "enqueueMessageEvent:", v24);
      v26 = swift_allocObject(&unk_1008FC560, 32, 7);
      *(_QWORD *)(v26 + 16) = sub_10006A014;
      *(_QWORD *)(v26 + 24) = v17;
      aBlock[4] = sub_10006A00C;
      v30 = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000B7BC;
      aBlock[3] = &unk_1008FC578;
      v27 = _Block_copy(aBlock);
      v28 = v30;
      swift_retain(v17);
      swift_release(v28);
      objc_msgSend(v25, "addFinishBlock:", v27);
      _Block_release(v27);

      sub_10002AD00(a2, a3);
      swift_release(v14);
      swift_release(v12);
      return swift_release(v17);
    }
  }
  return result;
}

uint64_t sub_100024BAC(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v4 = isStackAllocationSafe;
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = v5 & 0x3F;
  v7 = (1 << v5) + 63;
  v8 = v7 >> 6;
  v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = a2((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v4);
    v11 = swift_release(v4);
    if (v2)
      swift_willThrow(v11);
  }
  else
  {
    v12 = (void *)swift_slowAlloc(v9, -1);
    bzero(v12, v9);
    v10 = a2((char *)v12, v8, v4);
    swift_release(v4);
    swift_slowDealloc(v12, -1, -1);
  }
  return v10;
}

_QWORD *sub_100024D14(uint64_t a1, uint64_t *a2)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_1000644E8(0, v2, 0);
    v6 = (uint64_t *)(a1 + 32);
    v3 = _swiftEmptyArrayStorage;
    do
    {
      v7 = *v6;
      v14 = v7;
      swift_bridgeObjectRetain_n(v7, 2);
      v8 = sub_10004CFD4(a2);
      v9 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
      swift_dynamicCast(&v15, &v14, v8, v9, 7);
      v10 = v15;
      swift_bridgeObjectRelease(v7);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_1000644E8(0, v3[2] + 1, 1);
        v3 = v16;
      }
      v12 = v3[2];
      v11 = v3[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000644E8(v11 > 1, v12 + 1, 1);
        v3 = v16;
      }
      v3[2] = v12 + 1;
      v3[v12 + 4] = v10;
      ++v6;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_100024E50(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_sampleButtonUsedConfig);
  v5 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v2);
  swift_retain(v5);
  Manager.getProperties(config:assetIDs:completion:)(v4, 0, sub_10006BFA8, v5);
  swift_release_n(v5, 2);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_previewButtonUsedConfig);
  v7 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v2);
  swift_retain(v7);
  Manager.getProperties(config:assetIDs:completion:)(v6, 0, sub_10006C090, v7);
  swift_release_n(v7, 2);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_addToWTRButtonUsedConfig);
  v9 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v2);
  swift_retain(v9);
  Manager.getProperties(config:assetIDs:completion:)(v8, 0, sub_10006C070, v9);
  swift_release_n(v9, 2);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_everUsedAppleWatchAppConfig);
  v11 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v2);
  v12 = swift_allocObject(&unk_1008FDE38, 32, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = a1;
  swift_retain(v11);
  v13 = a1;
  Manager.getProperties(config:assetIDs:completion:)(v10, 0, sub_10006C068, v12);
  swift_release(v11);
  swift_release(v12);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_everUsedCarplayAppConfig);
  v15 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v2);
  swift_retain(v15);
  Manager.getProperties(config:assetIDs:completion:)(v14, 0, sub_10006C048, v15);
  swift_release_n(v15, 2);
  v16 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_everUsedReadingScrubberAppConfig);
  v17 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v2);
  swift_retain(v17);
  Manager.getProperties(config:assetIDs:completion:)(v16, 0, sub_10006C028, v17);
  swift_release_n(v17, 2);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmarkAppConfig);
  v19 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v2);
  swift_retain(v19);
  Manager.getProperties(config:assetIDs:completion:)(v18, 0, sub_10006C008, v19);
  swift_release_n(v19, 2);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButtonAppConfig);
  v21 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v2);
  swift_retain(v21);
  Manager.getProperties(config:assetIDs:completion:)(v20, 0, sub_10006BFE8, v21);
  swift_release_n(v21, 2);
  v22 = *(_QWORD *)(v2 + OBJC_IVAR___BKSessionDonor_notificationSettingsVisitedConfig);
  v23 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v2);
  swift_retain(v23);
  Manager.getProperties(config:assetIDs:completion:)(v22, 0, sub_10006BFC8, v23);
  return swift_release_n(v23, 2);
}

uint64_t sub_1000251C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_cachedConfiguration;
  swift_beginAccess(v2, v0 + 16, 0, 0);
  sub_10002530C(v2, v1);
  v3 = type metadata accessor for Configuration(0);
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 64);
    sub_100010960(*(_QWORD *)(v0 + 88), &qword_1009DD3D8);
    sub_1003642A0(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
    swift_beginAccess(v2, v0 + 40, 33, 0);
    sub_10006C920(v5, v2);
    swift_endAccess(v0 + 40);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v4 + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88), v3);
  }
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002530C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100025354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  double v27;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  double v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  double v48;
  char *v49;
  double v50;
  _QWORD v51[4];
  _OWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;

  v1 = type metadata accessor for Mirror(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ReadingGoals.State(0);
  *((_QWORD *)&v55 + 1) = v5;
  v6 = sub_1000257F8(&v53);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v6, v0, v5);
  v7 = Mirror.init(reflecting:)(&v53);
  v8 = Mirror.children.getter(v7);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10 = dispatch thunk of _AnySequenceBox._makeIterator()(v9);
  swift_release(v8);
  v11 = swift_retain(v10);
  dispatch thunk of _AnyIteratorBoxBase.next()(v52, v11);
  sub_100025B3C((uint64_t)v52, (uint64_t)&v53, (uint64_t *)&unk_1009ECAB8);
  if (!v56)
  {
    v12 = _swiftEmptyDictionarySingleton;
LABEL_38:
    swift_release_n(v10, 2);
    return (uint64_t)v12;
  }
  v12 = _swiftEmptyDictionarySingleton;
  v13 = (char *)&type metadata for Any + 8;
  while (1)
  {
    v14 = v54;
    if (v54)
      break;
    v15 = &v55;
LABEL_5:
    v16 = _s5Books15CurrentPageViewVwxx_0(v15);
    dispatch thunk of _AnyIteratorBoxBase.next()(v52, v16);
    sub_100025B3C((uint64_t)v52, (uint64_t)&v53, (uint64_t *)&unk_1009ECAB8);
    if (!v56)
      goto LABEL_38;
  }
  v17 = v53;
  sub_10004CFC4(&v55, v52);
  sub_10004CD0C((uint64_t)v52, (uint64_t)v51);
  if ((swift_dynamicCast(&v50, v51, v13, &type metadata for Int, 6) & 1) == 0)
  {
    sub_10004CD0C((uint64_t)v52, (uint64_t)v51);
    if ((swift_dynamicCast(&v50, v51, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) == 0)
    {
      v37 = v14;
LABEL_36:
      swift_bridgeObjectRelease(v37);
      v15 = v52;
      goto LABEL_5;
    }
    v27 = v50;
    if ((~*(_QWORD *)&v50 & 0x7FF0000000000000) == 0)
      goto LABEL_40;
    if (v50 <= -9.22337204e18)
      goto LABEL_41;
    v49 = v13;
    if (v50 >= 9.22337204e18)
      goto LABEL_43;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    v51[0] = v12;
    v30 = sub_10004CE80(v17, v14);
    v31 = v12[2];
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      goto LABEL_44;
    v34 = v29;
    if (v12[3] >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1002C0448();
    }
    else
    {
      sub_100025834(v33, isUniquelyReferenced_nonNull_native);
      v35 = sub_10004CE80(v17, v14);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_46;
      v30 = v35;
    }
    v43 = (uint64_t)v27;
    v12 = (_QWORD *)v51[0];
    if ((v34 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v51[0] + 56) + 8 * v30) = v43;
    }
    else
    {
      *(_QWORD *)(v51[0] + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v44 = (uint64_t *)(v12[6] + 16 * v30);
      *v44 = v17;
      v44[1] = v14;
      *(_QWORD *)(v12[7] + 8 * v30) = v43;
      v45 = v12[2];
      v41 = __OFADD__(v45, 1);
      v46 = v45 + 1;
      if (v41)
        goto LABEL_45;
      v12[2] = v46;
      swift_bridgeObjectRetain(v14);
    }
    v13 = v49;
LABEL_35:
    swift_bridgeObjectRelease(v14);
    v37 = 0x8000000000000000;
    goto LABEL_36;
  }
  v48 = v50;
  v49 = v13;
  v18 = swift_isUniquelyReferenced_nonNull_native(v12);
  v51[0] = v12;
  v20 = sub_10004CE80(v17, v14);
  v21 = v12[2];
  v22 = (v19 & 1) == 0;
  v23 = v21 + v22;
  if (!__OFADD__(v21, v22))
  {
    v24 = v19;
    if (v12[3] >= v23)
    {
      if ((v18 & 1) == 0)
        sub_1002C0448();
    }
    else
    {
      sub_100025834(v23, v18);
      v25 = sub_10004CE80(v17, v14);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_46;
      v20 = v25;
    }
    v38 = v48;
    v12 = (_QWORD *)v51[0];
    if ((v24 & 1) != 0)
    {
      *(double *)(*(_QWORD *)(v51[0] + 56) + 8 * v20) = v48;
    }
    else
    {
      *(_QWORD *)(v51[0] + 8 * (v20 >> 6) + 64) |= 1 << v20;
      v39 = (uint64_t *)(v12[6] + 16 * v20);
      *v39 = v17;
      v39[1] = v14;
      *(double *)(v12[7] + 8 * v20) = v38;
      v40 = v12[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_42;
      v12[2] = v42;
      swift_bridgeObjectRetain(v14);
    }
    v13 = v49;
    goto LABEL_35;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

_QWORD *sub_1000257F8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

Swift::Int sub_100025834(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D0A50);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v14 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v14 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_100025B3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10004CFD4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100025B80(int64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  char v10;
  uint64_t Strong;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Bool v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *a1;
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *(_QWORD *)v7 = static OS_dispatch_queue.main.getter(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v10 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_beginAccess(a2 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return;
  a2 = (char *)Strong;
  if ((unint64_t)v8 >> 62)
  {
LABEL_17:
    if (v8 < 0)
      v24 = v8;
    else
      v24 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v8);
    if (v25)
      goto LABEL_5;
    goto LABEL_14;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    v12 = *(char **)&a2[OBJC_IVAR___BKRootBarCoordinator_splitViewController];
    if (v12)
    {
      v13 = *(void **)&v12[OBJC_IVAR___BKSplitViewController_contentHostingController];
      v14 = v12;
      v15 = v13;
      _s5Books33SplitViewContentHostingControllerC16setStandardItems_8animatedySayAA11RootBarItemCG_SbtF_0(v8);

    }
    v16 = *(void **)&a2[OBJC_IVAR___BKRootBarCoordinator_tabBarController];
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v17, "viewControllers");
      if (v18)
      {
        v19 = v18;
        v20 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
        v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

        if ((unint64_t)v21 >> 62)
        {
          if (v21 < 0)
            v26 = v21;
          else
            v26 = v21 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v21);
          v22 = _CocoaArrayWrapper.endIndex.getter(v26);
          swift_bridgeObjectRelease(v21);
        }
        else
        {
          v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v21);
        v23 = v22 != 0;
      }
      else
      {
        v23 = 0;
      }
      TabBarController.setStandardItems(_:animated:)((Swift::OpaquePointer)v8, v23);

    }
  }
LABEL_14:

}

unint64_t sub_100025DC8(uint64_t a1)
{
  return sub_10004CD48(a1, &qword_1009D04F8, &qword_1009D0500, (uint64_t (*)(uint64_t *, unint64_t))sub_10004CFC4);
}

uint64_t sub_100025DE4(uint64_t a1)
{
  uint64_t v1;

  return sub_100025DEC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100025DEC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_100025E00(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  id v46;
  uint64_t v47;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = &_dispatch_main_q;
  v12 = &_dispatch_main_q;
  v13 = v10;
  v14 = &_dispatch_main_q;
  if (v13 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v11 = v13;
  }

  objc_msgSend(*(id *)(a1 + OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController), "removeObject:", a2);
  v15 = objc_msgSend(a2, "viewControllers");
  v16 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  v54 = v17;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v22 = v17;
    else
      v22 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v17);
    v18 = &qword_1009CE000;
    if (v23)
      goto LABEL_5;
  }
  else
  {
    v18 = &qword_1009CE000;
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      v19 = a3;
      v54 = v17;
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v17)
        || v17 < 0
        || (v17 & 0x4000000000000000) != 0)
      {
        v17 = sub_100064598(v17);
        v54 = v17;
      }
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        v20 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 0x20);
        *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x20) = v19;

        goto LABEL_22;
      }
      __break(1u);
      goto LABEL_29;
    }
  }
  if (v18[234] != -1)
LABEL_29:
    swift_once(&qword_1009CE750, sub_10006BB90);
  v24 = type metadata accessor for Logger(0);
  sub_100048F64(v24, (uint64_t)qword_1009E8770);
  v25 = a4;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc(22, -1);
    v49 = (_QWORD *)swift_slowAlloc(8, -1);
    v50 = swift_slowAlloc(32, -1);
    v53 = v50;
    *(_DWORD *)v28 = 136315394;
    v52 = sub_100040F58(0xD000000000000017, 0x80000001007BC630, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v28 + 4, v28 + 12);
    *(_WORD *)(v28 + 12) = 2114;
    v52 = (uint64_t)v25;
    v29 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v28 + 14, v28 + 22);
    *v49 = v25;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s: Nav stack is empty for %{public}@", (uint8_t *)v28, 0x16u);
    v30 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v49, 1, v30);
    swift_slowDealloc(v49, -1, -1);
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
  v31 = a3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  v18 = &qword_1009CE000;
LABEL_22:
  specialized Array._endMutation()(v21);
  v34 = v54;
  swift_bridgeObjectRetain(v54);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34);
  objc_msgSend(a2, "setViewControllers:", isa);

  objc_msgSend(a5, "didUpdateContentViewController");
  if (v18[234] != -1)
    swift_once(&qword_1009CE750, sub_10006BB90);
  v36 = type metadata accessor for Logger(0);
  sub_100048F64(v36, (uint64_t)qword_1009E8770);
  v37 = a3;
  v38 = a4;
  v39 = v37;
  v40 = v38;
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc(32, -1);
    v44 = (_QWORD *)swift_slowAlloc(16, -1);
    v51 = swift_slowAlloc(32, -1);
    v53 = v51;
    *(_DWORD *)v43 = 136315650;
    v52 = sub_100040F58(0xD000000000000017, 0x80000001007BC630, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v43 + 4, v43 + 12);
    *(_WORD *)(v43 + 12) = 2112;
    v52 = (uint64_t)v39;
    v45 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v43 + 14, v43 + 22);
    *v44 = v39;

    *(_WORD *)(v43 + 22) = 2114;
    v52 = (uint64_t)v40;
    v46 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v43 + 24, v43 + 32);
    v44[1] = v40;

    _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s: Created content VC %@ for %{public}@", (uint8_t *)v43, 0x20u);
    v47 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v44, 2, v47);
    swift_slowDealloc(v44, -1, -1);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v43, -1, -1);
  }
  else
  {

  }
  return swift_bridgeObjectRelease(v54);
}

void sub_100026478(void *a1, void *a2, void *a3, uint64_t a4, int a5, char *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  id *v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  void *v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61[3];

  v59 = a5;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.engagement.getter(v13);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v16 = a3;
  swift_errorRetain(a4);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  v17 = v16;
  v18 = swift_errorRetain(a4);
  v19 = Logger.logObject.getter(v18);
  v58 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, (os_log_type_t)v58))
  {
    v54 = v19;
    v55 = v12;
    v57 = v17;
    v51 = a6;
    v20 = swift_slowAlloc(48, -1);
    v21 = swift_slowAlloc(16, -1);
    v53 = swift_slowAlloc(64, -1);
    v61[0] = v53;
    *(_DWORD *)v20 = 136316162;
    if (a1)
      v22 = a1;
    else
      v22 = &_swiftEmptySetSingleton;
    v56 = a3;
    if (!a1 && ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      {
        sub_1001E0B78((uint64_t)_swiftEmptyArrayStorage);
        v22 = v49;
      }
      else
      {
        v22 = &_swiftEmptySetSingleton;
      }
    }
    v52 = (_QWORD *)v21;
    v50 = v11;
    v23 = sub_100009E04(0, &qword_1009D0A90, BCMutableCloudData_ptr);
    v24 = sub_100064D00();
    v25 = swift_bridgeObjectRetain(a1);
    v26 = Set.description.getter(v22, v23, v24, v25);
    v28 = v27;
    swift_bridgeObjectRelease(v22);
    v60 = sub_100040F58(v26, v28, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease_n(a1, 2);
    *(_WORD *)(v20 + 12) = 2080;
    if (a2)
      v29 = a2;
    else
      v29 = &_swiftEmptySetSingleton;
    v30 = swift_bridgeObjectRetain(a2);
    v31 = Set.description.getter(v29, &type metadata for AnyHashable, &protocol witness table for AnyHashable, v30);
    v33 = v32;
    swift_bridgeObjectRelease(v29);
    v60 = sub_100040F58(v31, v33, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v20 + 14, v20 + 22);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease_n(a2, 2);
    *(_WORD *)(v20 + 22) = 2112;
    a3 = v56;
    if (v56)
    {
      v34 = v57;
      v60 = (uint64_t)v57;
      v35 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v20 + 24, v20 + 32);
      a6 = v51;
    }
    else
    {
      v60 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v20 + 24, v20 + 32);
      a6 = v51;
      v34 = v57;
    }
    v36 = v52;
    *v52 = a3;

    *(_WORD *)(v20 + 32) = 2112;
    if (a4)
    {
      swift_errorRetain(a4);
      v37 = _swift_stdlib_bridgeErrorToNSError(a4);
      v60 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v20 + 34, v20 + 42);
    }
    else
    {
      v60 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61, v20 + 34, v20 + 42);
      v37 = 0;
    }
    v38 = v50;
    v36[1] = v37;
    swift_errorRelease(a4);
    swift_errorRelease(a4);
    *(_WORD *)(v20 + 42) = 1024;
    LODWORD(v60) = v59 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 4, v20 + 44, v20 + 48);
    v39 = v54;
    _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v58, "updated: %s removed: %s) currentSyncVersions:%@ error=%@ fetchAgain=%{BOOL}d", (uint8_t *)v20, 0x30u);
    v40 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v36, 2, v40);
    swift_slowDealloc(v36, -1, -1);
    v41 = v53;
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v38);
    v17 = v57;
  }
  else
  {
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease_n(a2, 2);

    swift_errorRelease(a4);
    swift_errorRelease(a4);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  v42 = (id *)&a6[OBJC_IVAR___BKEngagementManager_analyticsHelper];
  swift_beginAccess(&a6[OBJC_IVAR___BKEngagementManager_analyticsHelper], v61, 0, 0);
  if (!*v42)
    __break(1u);
  v43 = *v42;
  EngagementManagerAnalyticsHelper.registerSyncFromCloudKitError(_:)(a4);

  v44 = *(void **)&a6[OBJC_IVAR___BKEngagementManager_manager];
  v45 = swift_allocObject(&unk_1008FC7E0, 49, 7);
  *(_QWORD *)(v45 + 16) = a1;
  *(_QWORD *)(v45 + 24) = a6;
  *(_QWORD *)(v45 + 32) = a3;
  *(_QWORD *)(v45 + 40) = a4;
  *(_BYTE *)(v45 + 48) = v59 & 1;
  swift_bridgeObjectRetain(a1);
  v46 = v17;
  swift_errorRetain(a4);
  v47 = v44;
  v48 = a6;
  Manager.getAllConfigurations(completion:)(sub_10006A3A8, v45);
  swift_release(v45);

}

void sub_100026AE4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  _QWORD aBlock[5];
  _QWORD *v28;

  v10 = v7;
  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), *a4, a1);
  aBlock[0] = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v14 = sub_10004CFD4(&qword_1009DF300);
  String.init<A>(describing:)(aBlock, v14);
  v16 = v15;
  v17 = objc_allocWithZone((Class)NSFetchRequest);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v19 = objc_msgSend(v17, "initWithEntityName:", v18);

  objc_msgSend(v19, "setPredicate:", v13);
  v20 = *(void **)(v10 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_moc);
  v21 = swift_allocObject(&unk_100915428, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v10);
  v22 = (_QWORD *)swift_allocObject(a5, 48, 7);
  v22[2] = v21;
  v22[3] = a2;
  v22[4] = a3;
  v22[5] = v19;
  aBlock[4] = a6;
  v28 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = a7;
  v23 = _Block_copy(aBlock);
  v24 = v28;
  swift_retain(a3);
  v25 = v19;
  swift_release(v24);
  objc_msgSend(v20, "performBlock:", v23);
  _Block_release(v23);

}

uint64_t sub_100026CBC(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _BYTE v13[24];

  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v8 = (void *)result;
    v9 = *(void **)(result + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_moc);
    v10 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v11 = v9;
    v12 = NSManagedObjectContext.count<A>(for:)(a4, v10);

    swift_errorRetain(0);
    a2(v12, 0, 0);
    swift_errorRelease(0);

    return swift_errorRelease(0);
  }
  return result;
}

uint64_t sub_100026EA4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = sub_10004CFD4(&qword_1009DF308);
  result = Set.init(minimumCapacity:)(v3, v4, &protocol witness table for AnyKeyPath);
  v6 = result;
  v13 = result;
  if (v2)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    result = swift_bridgeObjectRelease(a1);
    if (!v7)
      return v6;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return v6;
  }
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v10 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain(v10);
      }
      sub_100026FE8(&v12, v10);
      swift_release(v12);
    }
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100026FE8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v30 = a2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8, v7);
    swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v28 = v9;
      swift_unknownObjectRetain(v9);
      v10 = sub_10004CFD4(&qword_1009DF308);
      swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v29;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v22 = sub_10060CA08(v7, result + 1);
    v29 = v22;
    v23 = *(_QWORD *)(v22 + 16);
    if (*(_QWORD *)(v22 + 24) <= v23)
    {
      v26 = v23 + 1;
      swift_retain(a2);
      sub_10060D2E0(v26);
      v24 = v29;
    }
    else
    {
      v24 = v22;
      swift_retain(a2);
    }
    sub_10060E138(a2, v24);
    v27 = *v3;
    *v3 = v24;
    swift_bridgeObjectRelease(v27);
    *a1 = a2;
    return 1;
  }
  v12 = *(_QWORD *)(v6 + 40);
  swift_bridgeObjectRetain(*v2);
  v13 = sub_10004CFD4(&qword_1009DF308);
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, &protocol witness table for AnyKeyPath);
  v15 = -1 << *(_BYTE *)(v6 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v19 = v30;
    v29 = *v2;
    *v2 = 0x8000000000000000;
    v20 = swift_retain(v19);
    sub_100027280(v20, v16, isUniquelyReferenced_nonNull_native);
    v21 = *v2;
    *v2 = v29;
    swift_bridgeObjectRelease(v21);
    *a1 = v19;
    return 1;
  }
  v17 = ~v15;
  while (1)
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v29, &v30, v13, &protocol witness table for AnyKeyPath) & 1) != 0)
      break;
    v16 = (v16 + 1) & v17;
    if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      goto LABEL_11;
  }
  swift_release(a2);
  swift_bridgeObjectRelease(v6);
  v25 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v16);
  *a1 = v25;
  swift_retain(v25);
  return 0;
}

uint64_t sub_100027280(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = result;
  v19 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060D2E0(v9);
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_10060F428();
      goto LABEL_12;
    }
    sub_10060FFB0(v9);
  }
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v4 = sub_10004CFD4(&qword_1009DF308);
  result = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v4, &protocol witness table for AnyKeyPath);
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = result & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      result = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v19, v4, &protocol witness table for AnyKeyPath);
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (!v16)
  {
    *(_QWORD *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
  return result;
}

void sub_1000274A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  char v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_10004CFD4(&qword_1009EAE50);
    ObservableContainer.Event.currentValue.getter(v5);
    if (v7 == 2)
    {
      v6 = sub_100027528();
      dispatch_group_leave(v6);

    }
  }
}

NSObject *sub_100027528()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  dispatch_group_t v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___BKServiceCenter____lazy_storage___group;
  v2 = *(void **)(v0 + OBJC_IVAR___BKServiceCenter____lazy_storage___group);
  if (v2)
  {
    v3 = *(NSObject **)(v0 + OBJC_IVAR___BKServiceCenter____lazy_storage___group);
  }
  else
  {
    v4 = dispatch_group_create();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1000275F0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  _BYTE v60[24];
  __int128 v61;
  uint64_t v62;
  _UNKNOWN **v63;
  uint64_t v64[5];

  v58 = a1;
  v59 = a2;
  v2 = sub_10004CFD4(&qword_1009E3A20);
  v3 = __chkstk_darwin(v2);
  v57 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v55 - v6;
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v55 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v55 - v11;
  sub_100017CBC((uint64_t)&v55 - v11);
  if (qword_1009CDCB8 != -1)
    swift_once(&qword_1009CDCB8, sub_100007D04);
  v13 = type metadata accessor for Logger(0);
  sub_100048F64(v13, (uint64_t)qword_1009D3190);
  v14 = (uint64_t)v12;
  v15 = sub_100027BD0((uint64_t)v12, (uint64_t)v10);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v64[0] = v19;
    *(_DWORD *)v18 = 136315138;
    sub_100027BD0((uint64_t)v10, (uint64_t)v7);
    v20 = type metadata accessor for YearInReview.RemoteConfiguration(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v7, 1, v20) == 1)
    {
      sub_100027C60((uint64_t)v7);
      v21 = 0;
      v22 = 0;
    }
    else
    {
      v23 = sub_10006BC9C();
      v21 = ReflectedStringConvertible.description.getter(v20, v23);
      v22 = v24;
      sub_100027C24((uint64_t)v7);
    }
    v25 = Optional<A>.description.getter(v21, v22);
    v27 = v26;
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)&v61 = sub_100040F58(v25, v27, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, (char *)&v61 + 8, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v27);
    sub_100027C60((uint64_t)v10);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Creating service with remote config: %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    sub_100027C60((uint64_t)v10);
  }

  v28 = objc_msgSend(v59, "readOnlyChildContext");
  v29 = v14;
  v30 = v14;
  v55 = v14;
  v31 = v57;
  sub_100027BD0(v30, v57);
  v32 = type metadata accessor for YearInReviewEntryEligibilityProvider(0);
  v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v34 = v33 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config;
  v35 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v36(v34, 1, 1, v35);
  v37 = v28;
  v56 = v37;
  static YearInReviewEligibilityCriteria.default.getter();
  v38 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v64[0] = 2023;
  UserDefault.init(_:defaults:defaultValue:)(0x6775626544526959, 0xEC00000072616559, v38, v64, &type metadata for Int);
  *(_QWORD *)(v33 + 16) = v37;
  v39 = v33 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config;
  swift_beginAccess(v33 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config, v64, 33, 0);
  sub_100027CA0(v31, v39);
  swift_endAccess(v64);
  v40 = (void *)objc_opt_self(UNUserNotificationCenter);
  swift_retain(v33);
  v41 = objc_msgSend(v40, "currentNotificationCenter");
  sub_100027BD0(v29, v31);
  v64[3] = v32;
  v64[4] = (uint64_t)&off_100906A08;
  v64[0] = v33;
  v62 = sub_100009E04(0, &qword_1009D32E0, UNUserNotificationCenter_ptr);
  v63 = &off_1008F4858;
  *(_QWORD *)&v61 = v41;
  v42 = type metadata accessor for YearInReviewNotificationScheduler(0);
  v43 = (_QWORD *)swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v44 = sub_100063750((uint64_t)v64, v32);
  __chkstk_darwin(v44);
  v46 = (uint64_t *)((char *)&v55 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v47 + 16))(v46);
  v48 = *v46;
  v43[5] = v32;
  v43[6] = &off_100906A08;
  v43[2] = v48;
  v36((uint64_t)v43 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config, 1, 1, v35);
  *(_QWORD *)((char *)v43 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_experienceSeenObserver) = 0;
  sub_100022840(&v61, (uint64_t)(v43 + 7));
  v49 = (uint64_t)v43 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config;
  swift_beginAccess((char *)v43 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config, v60, 33, 0);
  swift_retain(v33);
  v50 = v41;
  sub_100027CA0(v31, v49);
  swift_endAccess(v60);
  _s5Books15CurrentPageViewVwxx_0(v64);
  swift_release(v33);

  v51 = objc_allocWithZone((Class)type metadata accessor for TopPicksCardConditionObserver());
  swift_retain(v33);
  v52 = v59;
  v53 = sub_100016034(v52, v33);

  swift_release(v33);
  sub_10001C968(v33, (uint64_t)v43, v53);

  swift_release(v33);
  swift_release(v43);

  return sub_100027C60(v55);
}

uint64_t sub_100027BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E3A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100027C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005418A0);
}

uint64_t sub_100027C24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100027C60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E3A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100027CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E3A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100027CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t Strong;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  _BYTE *v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE v46[24];

  v3 = sub_10004CFD4(&qword_1009ECA20);
  __chkstk_darwin(v3);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10004CFD4(&qword_1009CEEE0);
  v7 = __chkstk_darwin(v6);
  v45 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v11 = &v41[-v10];
  __chkstk_darwin(v9);
  v13 = &v41[-v12];
  v14 = type metadata accessor for ReadingHistory.State(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v44 = &v41[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v19 = &v41[-v18];
  a2 += 16;
  v20 = sub_10004CFD4(&qword_1009ECA28);
  ObservableContainer.Event.currentValue.getter(v20);
  swift_beginAccess(a2, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v22 = (void *)Strong;
    sub_100030BB8((uint64_t)v19);

  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16))(v13, v19, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v23 = type metadata accessor for ReadingGoalsAnalytics(0);
  v24 = static ReadingGoalsAnalytics.shared.getter(v23);
  v25 = dispatch thunk of ReadingGoalsAnalytics.historyState.getter();
  v26 = swift_release(v24);
  Atomic.value.getter(v26);
  swift_release(v25);
  v27 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_10000B5E4((uint64_t)v13, (uint64_t)v5, &qword_1009CEEE0);
  sub_10000B5E4((uint64_t)v11, v27, &qword_1009CEEE0);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v28((uint64_t)v5, 1, v14) != 1)
  {
    v29 = v45;
    sub_10000B5E4((uint64_t)v5, (uint64_t)v45, &qword_1009CEEE0);
    if (v28(v27, 1, v14) != 1)
    {
      v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 32);
      v43 = v23;
      v32 = v44;
      v31(v44, v27, v14);
      v33 = sub_100008DB0((unint64_t *)&unk_1009ECA30, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistory.State, (uint64_t)&protocol conformance descriptor for ReadingHistory.State);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v32, v14, v33);
      v34 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
      v34(v32, v14);
      sub_100010960((uint64_t)v11, &qword_1009CEEE0);
      sub_100010960((uint64_t)v13, &qword_1009CEEE0);
      v34(v29, v14);
      v30 = sub_100010960((uint64_t)v5, &qword_1009CEEE0);
      if ((v42 & 1) != 0)
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v19, v14);
LABEL_10:
      v35 = static ReadingGoalsAnalytics.shared.getter(v30);
      v36 = dispatch thunk of ReadingGoalsAnalytics.historyState.getter();
      v37 = swift_release(v35);
      __chkstk_darwin(v37);
      *(_QWORD *)&v41[-16] = v19;
      Atomic.mutate(_:)(sub_1005976EC);
      v38 = swift_release(v36);
      v39 = static ReadingGoalsAnalytics.shared.getter(v38);
      dispatch thunk of ReadingGoalsAnalytics.reportGoalStateIfNeeded(_:)(0);
      swift_release(v39);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v19, v14);
    }
    sub_100010960((uint64_t)v11, &qword_1009CEEE0);
    sub_100010960((uint64_t)v13, &qword_1009CEEE0);
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v29, v14);
LABEL_8:
    v30 = sub_100010960((uint64_t)v5, &qword_1009ECA20);
    goto LABEL_10;
  }
  sub_100010960((uint64_t)v11, &qword_1009CEEE0);
  sub_100010960((uint64_t)v13, &qword_1009CEEE0);
  if (v28(v27, 1, v14) != 1)
    goto LABEL_8;
  sub_100010960((uint64_t)v5, &qword_1009CEEE0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v19, v14);
}

uint64_t sub_10002811C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];

  v3 = sub_10004CFD4(&qword_1009ECA88);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009ECA90);
  v7 = __chkstk_darwin(v6);
  v43 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v40 = (uint64_t)&v39 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v39 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v39 - v14;
  v16 = type metadata accessor for ReadingGoals.State(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ReadingGoals.StateChange(0);
  v44 = *(_QWORD *)(v20 - 8);
  v45 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  v23 = sub_10004CFD4(&qword_1009ECA98);
  ObservableContainer.Event.currentValue.getter(v23);
  swift_beginAccess(a2, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v25 = (void *)Strong;
    ((void (*)(void))ReadingGoals.StateChange.state.getter)();
    sub_1000191EC();

    Strong = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  ReadingGoals.StateChange.state.getter(Strong);
  v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
  v42(v15, 0, 1, v16);
  v41 = type metadata accessor for ReadingGoalsAnalytics(0);
  v26 = static ReadingGoalsAnalytics.shared.getter(v41);
  dispatch thunk of ReadingGoalsAnalytics.goalsState.getter();
  swift_release(v26);
  v27 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_10000B5E4((uint64_t)v15, (uint64_t)v5, &qword_1009ECA90);
  sub_10000B5E4((uint64_t)v13, v27, &qword_1009ECA90);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v28((uint64_t)v5, 1, v16) != 1)
  {
    v29 = v40;
    sub_10000B5E4((uint64_t)v5, v40, &qword_1009ECA90);
    if (v28(v27, 1, v16) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v19, v27, v16);
      v31 = sub_100008DB0((unint64_t *)&unk_1009ECAA0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingGoals.State, (uint64_t)&protocol conformance descriptor for ReadingGoals.State);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v29, v19, v16, v31);
      v33 = *(void (**)(char *, uint64_t))(v17 + 8);
      v33(v19, v16);
      sub_100010960((uint64_t)v13, &qword_1009ECA90);
      sub_100010960((uint64_t)v15, &qword_1009ECA90);
      v33((char *)v29, v16);
      v30 = sub_100010960((uint64_t)v5, &qword_1009ECA90);
      if ((v32 & 1) != 0)
        return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v22, v45);
LABEL_10:
      v34 = static ReadingGoalsAnalytics.shared.getter(v30);
      v35 = v43;
      ReadingGoals.StateChange.state.getter(v34);
      v42(v35, 0, 1, v16);
      dispatch thunk of ReadingGoalsAnalytics.goalsState.setter(v35);
      v36 = swift_release(v34);
      v37 = static ReadingGoalsAnalytics.shared.getter(v36);
      dispatch thunk of ReadingGoalsAnalytics.reportGoalStateIfNeeded(_:)(0);
      swift_release(v37);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v22, v45);
    }
    sub_100010960((uint64_t)v13, &qword_1009ECA90);
    sub_100010960((uint64_t)v15, &qword_1009ECA90);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v29, v16);
LABEL_8:
    v30 = sub_100010960((uint64_t)v5, &qword_1009ECA88);
    goto LABEL_10;
  }
  sub_100010960((uint64_t)v13, &qword_1009ECA90);
  sub_100010960((uint64_t)v15, &qword_1009ECA90);
  if (v28(v27, 1, v16) != 1)
    goto LABEL_8;
  sub_100010960((uint64_t)v5, &qword_1009ECA90);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v22, v45);
}

uint64_t sub_100028574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];

  v47 = a2;
  v2 = sub_10004CFD4(&qword_1009ECA58);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009ECA60);
  v6 = __chkstk_darwin(v5);
  v46 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v43 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v43 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = type metadata accessor for BooksFinished.State(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v45 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - v20;
  v22 = sub_10004CFD4(&qword_1009ECA68);
  ObservableContainer.Event.currentValue.getter(v22);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v15, 1, v16) == 1)
    return sub_100010960((uint64_t)v15, &qword_1009ECA60);
  v25 = v47 + 16;
  v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v44(v21, v15, v16);
  swift_beginAccess(v25, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v25);
  if (Strong)
  {
    v27 = (void *)Strong;
    sub_100022E08();

  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v21, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  v47 = type metadata accessor for ReadingGoalsAnalytics(0);
  v28 = ((uint64_t (*)(void))static ReadingGoalsAnalytics.shared.getter)();
  v29 = dispatch thunk of ReadingGoalsAnalytics.booksState.getter();
  v30 = swift_release(v28);
  Atomic.value.getter(v30);
  swift_release(v29);
  v31 = (uint64_t)&v4[*(int *)(v2 + 48)];
  sub_10000B5E4((uint64_t)v13, (uint64_t)v4, &qword_1009ECA60);
  sub_10000B5E4((uint64_t)v10, v31, &qword_1009ECA60);
  if (v23(v4, 1, v16) != 1)
  {
    v32 = v46;
    sub_10000B5E4((uint64_t)v4, v46, &qword_1009ECA60);
    if (v23((char *)v31, 1, v16) != 1)
    {
      v34 = v45;
      v44(v45, (char *)v31, v16);
      v35 = sub_100008DB0((unint64_t *)&unk_1009ECA70, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFinished.State, (uint64_t)&protocol conformance descriptor for BooksFinished.State);
      v36 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v34, v16, v35);
      v37 = *(void (**)(char *, uint64_t))(v17 + 8);
      v37(v34, v16);
      sub_100010960((uint64_t)v10, &qword_1009ECA60);
      sub_100010960((uint64_t)v13, &qword_1009ECA60);
      v37((char *)v32, v16);
      v33 = sub_100010960((uint64_t)v4, &qword_1009ECA60);
      if ((v36 & 1) != 0)
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
LABEL_12:
      v38 = static ReadingGoalsAnalytics.shared.getter(v33);
      v39 = dispatch thunk of ReadingGoalsAnalytics.booksState.getter();
      v40 = swift_release(v38);
      __chkstk_darwin(v40);
      *(&v43 - 2) = (uint64_t)v21;
      Atomic.mutate(_:)(sub_100597714);
      v41 = swift_release(v39);
      v42 = static ReadingGoalsAnalytics.shared.getter(v41);
      dispatch thunk of ReadingGoalsAnalytics.reportGoalStateIfNeeded(_:)(0);
      swift_release(v42);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    }
    sub_100010960((uint64_t)v10, &qword_1009ECA60);
    sub_100010960((uint64_t)v13, &qword_1009ECA60);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v32, v16);
LABEL_10:
    v33 = sub_100010960((uint64_t)v4, &qword_1009ECA58);
    goto LABEL_12;
  }
  sub_100010960((uint64_t)v10, &qword_1009ECA60);
  sub_100010960((uint64_t)v13, &qword_1009ECA60);
  if (v23((char *)v31, 1, v16) != 1)
    goto LABEL_10;
  sub_100010960((uint64_t)v4, &qword_1009ECA60);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
}

uint64_t sub_100028A00()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char v26;
  void (*v28)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v50;
  void (*v51)(_BYTE *, uint64_t);
  _BYTE v52[12];
  int v53;
  uint64_t v54;
  int v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;

  v1 = sub_10004CFD4(&qword_1009D7440);
  v2 = __chkstk_darwin(v1);
  v4 = &v52[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v52[-v5];
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v9);
  v14 = &v52[-v13];
  v15 = __chkstk_darwin(v12);
  v17 = &v52[-v16];
  __chkstk_darwin(v15);
  v57 = &v52[-v18];
  v19 = *(_QWORD *)&v0[OBJC_IVAR___BKAppStoreReviewManager_remoteConfig];
  if ((sub_10002903C(0xD00000000000001DLL, 0x80000001007B7580, v19) & 1) == 0)
    goto LABEL_4;
  v56 = v11;
  sub_100211940((uint64_t)v6);
  v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  if (v20(v6, 1, v7) == 1)
  {
    sub_100010960((uint64_t)v6, &qword_1009D7440);
LABEL_4:
    if (qword_1009CDC80 != -1)
      swift_once(&qword_1009CDC80, sub_10000B410);
    v21 = type metadata accessor for Logger(0);
    sub_100048F64(v21, (uint64_t)qword_1009D2B70);
    v22 = v0;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v25 = 67109120;
      LOBYTE(v59) = sub_10002903C(0xD00000000000001DLL, 0x80000001007B7580, v19) & 1;
      LODWORD(v59) = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, (char *)&v59 + 4, v25 + 4, v25 + 8);

      _os_log_impl((void *)&_mh_execute_header, v23, v24, "feature disabled %{BOOL}d", v25, 8u);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

    }
    v26 = 0;
    return v26 & 1;
  }
  v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v29 = v57;
  v28(v57, v6, v7);
  sub_100211940((uint64_t)v4);
  if (v20(v4, 1, v7) == 1)
  {
    sub_100010960((uint64_t)v4, &qword_1009D7440);
    if (qword_1009CDC80 != -1)
      swift_once(&qword_1009CDC80, sub_10000B410);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100048F64(v30, (uint64_t)qword_1009D2B70);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "AppStore review never shown before", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v29, v7);
    v26 = 1;
  }
  else
  {
    v28(v17, v4, v7);
    v35 = swift_unknownObjectWeakInit(&v59, v0);
    v55 = sub_100211BC4(v35);
    swift_unknownObjectWeakDestroy(&v59);
    if (qword_1009CDC80 != -1)
      swift_once(&qword_1009CDC80, sub_10000B410);
    v36 = type metadata accessor for Logger(0);
    sub_100048F64(v36, (uint64_t)qword_1009D2B70);
    v37 = v0;
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter(v38);
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc(18, -1);
      v54 = swift_slowAlloc(32, -1);
      v59 = v54;
      *(_DWORD *)v41 = 136315394;
      v42 = sub_1002134FC();
      if (v43)
      {
        v44 = v43;
      }
      else
      {
        v42 = 0x6E776F6E6B6E753CLL;
        v44 = 0xE90000000000003ELL;
      }
      v53 = v40;
      v58 = sub_100040F58(v42, v44, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v41 + 4, v41 + 12);

      swift_bridgeObjectRelease(v44);
      *(_WORD *)(v41 + 12) = 1024;
      v45 = v55;
      LODWORD(v58) = v55 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, (char *)&v58 + 4, v41 + 14, v41 + 18);
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v53, "should attempt to present store view for location %s -- %{BOOL}d", (uint8_t *)v41, 0x12u);
      v46 = v54;
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      v47 = v41;
      v29 = v57;
      swift_slowDealloc(v47, -1, -1);

      v48 = v56;
    }
    else
    {

      v48 = v56;
      v45 = v55;
    }
    v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
    v49(v14, v29, v7);
    v49(v48, v17, v7);
    if ((v45 & 1) != 0)
      v26 = static Date.> infix(_:_:)(v14, v48);
    else
      v26 = 0;
    v50 = v48;
    v51 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v51(v50, v7);
    v51(v14, v7);
    v51(v17, v7);
    v51(v29, v7);
  }
  return v26 & 1;
}

uint64_t sub_10002903C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  Class isa;
  NSString v8;
  id v9;
  int v10;
  char v11;
  char v12;
  unsigned __int8 v14;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v6 = RCDataContainer.configs.getter(a1);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = -[objc_class valueForKeyPath:](isa, "valueForKeyPath:", v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)(v9);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_10004C7B4((uint64_t)v15, (uint64_t)v16);
  if (!v17)
  {
    sub_100010960((uint64_t)v16, (uint64_t *)&unk_1009D04E0);
    goto LABEL_8;
  }
  if (!swift_dynamicCast(&v14, v16, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_8:
    v10 = 0;
    goto LABEL_9;
  }
  v10 = v14;
LABEL_9:
  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001007B7580)
  {
    v11 = v10;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD00000000000001DLL, 0x80000001007B7580, 0);
    v11 = v12 & v10;
    if ((v12 & 1) == 0 && ((v10 ^ 1) & 1) == 0)
      v11 = sub_10002903C(0xD00000000000001DLL, 0x80000001007B7580, a3);
  }
  return v11 & 1;
}

uint64_t sub_1000291DC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;

  v2 = v1;
  v60 = a1;
  v56 = sub_10004CFD4(&qword_1009EA988);
  v3 = __chkstk_darwin(v56);
  v54 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v50 - v5;
  v57 = sub_10004CFD4(&qword_1009EA990);
  v7 = __chkstk_darwin(v57);
  v59 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v55 = (char *)&v50 - v10;
  __chkstk_darwin(v9);
  v58 = (uint64_t)&v50 - v11;
  v12 = sub_10004CFD4(&qword_1009E0B78);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009D7440);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v50 - v19;
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v53 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v61 = (char *)&v50 - v26;
  __chkstk_darwin(v25);
  v28 = (char *)&v50 - v27;
  sub_10000B5E4(v2, (uint64_t)v14, &qword_1009E0B78);
  sub_100025B3C((uint64_t)v14, (uint64_t)v20, &qword_1009D7440);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v29(v20, 1, v21) == 1)
  {
    v30 = (uint64_t)v20;
LABEL_5:
    sub_100010960(v30, &qword_1009D7440);
    v33 = 0;
    return v33 & 1;
  }
  v31 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v31(v28, v20, v21);
  v32 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  sub_10000B5E4(v2 + *(int *)(v32 + 20), (uint64_t)v14, &qword_1009E0B78);
  sub_100025B3C((uint64_t)v14, (uint64_t)v18, &qword_1009D7440);
  if (v29(v18, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
    v30 = (uint64_t)v18;
    goto LABEL_5;
  }
  v34 = v61;
  v31(v61, v18, v21);
  v52 = sub_100008DB0(&qword_1009EA998, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v28, v34, v21);
  if ((result & 1) != 0)
  {
    v36 = v56;
    v37 = &v6[*(int *)(v56 + 48)];
    v38 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v51 = v28;
    v38(v6, v28, v21);
    v38(v37, v34, v21);
    v39 = v54;
    v40 = &v54[*(int *)(v36 + 48)];
    v38(v54, v6, v21);
    v38(v40, v37, v21);
    v41 = v55;
    v31(v55, v39, v21);
    v42 = *(void (**)(char *, uint64_t))(v22 + 8);
    v42(v40, v21);
    v43 = &v39[*(int *)(v36 + 48)];
    v31(v39, v6, v21);
    v31(v43, v37, v21);
    v44 = v57;
    v31(&v41[*(int *)(v57 + 36)], v43, v21);
    v42(v39, v21);
    v45 = (uint64_t)v41;
    v46 = v58;
    sub_100025B3C(v45, v58, &qword_1009EA990);
    v47 = v60;
    LOBYTE(v43) = dispatch thunk of static Comparable.>= infix(_:_:)(v60, v46, v21, v52);
    v48 = v53;
    v38(v53, v47, v21);
    v49 = v59;
    sub_10000B5E4(v46, v59, &qword_1009EA990);
    if ((v43 & 1) != 0)
      v33 = dispatch thunk of static Comparable.<= infix(_:_:)(v48, v49 + *(int *)(v44 + 36), v21);
    else
      v33 = 0;
    sub_100010960(v49, &qword_1009EA990);
    v42(v48, v21);
    sub_100010960(v46, &qword_1009EA990);
    v42(v61, v21);
    v42(v51, v21);
    return v33 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000296D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  char v36;
  char v37;
  char v38;

  v31 = a2;
  v3 = sub_10004CFD4(&qword_1009E3A40);
  v4 = __chkstk_darwin(v3);
  v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - v6;
  v33 = sub_10004CFD4(&qword_1009EA9B0);
  v8 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = a1[3];
  v15 = a1[4];
  sub_10003F198(a1, v14);
  v16 = sub_10006BF00();
  v34 = v10;
  v17 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for YearInReview.RemoteConfiguration.CodingKeys, &type metadata for YearInReview.RemoteConfiguration.CodingKeys, v16, v14, v15);
  if (v17)
    return _s5Books15CurrentPageViewVwxx_0(a1);
  v19 = v8;
  v21 = (uint64_t)v32;
  v20 = v33;
  v38 = 0;
  v22 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v33, v18);
  v35 = v13;
  *v13 = v22;
  v23 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v37 = 1;
  v24 = (uint64_t)v7;
  v25 = v23;
  v30 = sub_100008DB0(&qword_1009EA9C0, type metadata accessor for YearInReview.RemoteConfiguration.DateRange, (uint64_t)&unk_10072C5D0);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v23, &v37, v20, v23);
  sub_100025B3C(v24, (uint64_t)v35 + *(int *)(v11 + 20), &qword_1009E3A40);
  v36 = 2;
  v26 = v34;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v25, &v36, v20, v25);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v20);
  v27 = *(int *)(v11 + 24);
  v28 = (uint64_t)v35;
  sub_100025B3C(v21, (uint64_t)v35 + v27, &qword_1009E3A40);
  sub_10002CD84(v28, v31, type metadata accessor for YearInReview.RemoteConfiguration);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return sub_10002C8F0(v28, type metadata accessor for YearInReview.RemoteConfiguration);
}

void sub_1000299B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7)
      goto LABEL_24;
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_24;
      v17 = *(_QWORD *)(v3 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_24;
        v17 = *(_QWORD *)(v3 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v7)
            goto LABEL_24;
          v17 = *(_QWORD *)(v3 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_100029B48(v12, v13);
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
  }
  v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v17 = *(_QWORD *)(v3 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_100029B48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v22, a1, a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100029E98();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_100029CD4(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

unint64_t sub_100029CD4(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v21, *(_QWORD *)(v3 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v21, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_100029E98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10004CFD4(&qword_1009EBDF0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_10002A048()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  Class isa;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;

  v1 = sub_10001C038();
  if ((v2 & 1) != 0)
  {
    if (qword_1009CE4B8 != -1)
      swift_once(&qword_1009CE4B8, sub_10006C8FC);
    v29 = type metadata accessor for Logger(0);
    v30 = sub_100048F64(v29, (uint64_t)qword_1009E3880);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "No config provided for fetchFinishedAssetCount", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v3 = v1;
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = (void *)objc_opt_self(BKLibraryManager);
    v9 = objc_msgSend(v8, "predicateFor_All_Marked_As_Finished_LibraryAssets_In_Year:", v3);
    *(_QWORD *)(v0 + 64) = v9;
    v10 = objc_msgSend(v8, "predicateForAllStoreLibraryAssets");
    *(_QWORD *)(v0 + 72) = v10;
    *(_QWORD *)(v0 + 16) = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v11 = sub_10004CFD4(&qword_1009DF300);
    String.init<A>(describing:)(v0 + 16, v11);
    v13 = v12;
    v14 = objc_allocWithZone((Class)NSFetchRequest);
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v14, "initWithEntityName:", v15, swift_bridgeObjectRelease(v13).n128_f64[0]);
    *(_QWORD *)(v0 + 80) = v16;

    v17 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v18 = swift_allocObject(v17, 48, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1007118C0;
    *(_QWORD *)(v18 + 32) = v9;
    *(_QWORD *)(v18 + 40) = v10;
    v34 = v18;
    specialized Array._endMutation()(v18);
    sub_100009E04(0, &qword_1009E3A10, NSPredicate_ptr);
    v19 = v9;
    v20 = v10;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v34);
    v22 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "andPredicateWithSubpredicates:", isa);

    objc_msgSend(v16, "setPredicate:", v22);
    v23 = *(void **)(v6 + 16);
    v24 = swift_allocObject(&unk_100906A60, 32, 7);
    *(_QWORD *)(v0 + 88) = v24;
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = v16;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
    v25 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
    v23;
    v26 = v16;
    v27 = (_QWORD *)swift_task_alloc(v25);
    *(_QWORD *)(v0 + 96) = v27;
    *v27 = v0;
    v27[1] = sub_10000A2B0;
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 24, *(_QWORD *)(v0 + 56), sub_100066060, v24, &type metadata for Int);
  }
}

void sub_10002A3B4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  id v5;
  NSString v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  Class isa;
  id v16;
  unsigned int v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t KeyPath;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[3];
  char v44[16];
  id v45;

  v2 = OBJC_IVAR____TtC5Books25LibraryCollectionsService_userCollectionsFRC;
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC5Books25LibraryCollectionsService_userCollectionsFRC])
  {
    v3 = v1;
    v5 = objc_allocWithZone((Class)NSFetchRequest);
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "initWithEntityName:", v6);

    v8 = objc_msgSend((id)objc_opt_self(BKCollection), "predicateForNonDeletedUserCollections");
    objc_msgSend(v7, "setPredicate:", v8);

    objc_msgSend(v7, "setReturnsObjectsAsFaults:", 0);
    v9 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1007118F0;
    v11 = objc_allocWithZone((Class)NSSortDescriptor);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "initWithKey:ascending:", v12, 1);

    *(_QWORD *)(v10 + 32) = v13;
    specialized Array._endMutation()(v14);
    sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v7, "setSortDescriptors:", isa);

    v16 = objc_msgSend(objc_allocWithZone((Class)NSFetchedResultsController), "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:", v7, a1, 0, 0);
    v45 = 0;
    v17 = objc_msgSend(v16, "performFetch:", &v45);
    v18 = v45;
    if (v17)
    {
      v19 = v45;
      v20 = objc_msgSend(v16, "fetchedObjects");
      if (v20)
      {
        v21 = v20;
        v22 = sub_100009E04(0, (unint64_t *)&qword_1009D7640, BKCollection_ptr);
        v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

        v24 = v3;
        v25 = sub_10041CB48(v23);
        swift_bridgeObjectRelease(v23);

        KeyPath = swift_getKeyPath(&unk_100723850);
        v27 = swift_getKeyPath(&unk_100723878);
        v45 = v25;
        static Published.subscript.setter(&v45, v24, KeyPath, v27);
      }
    }
    else
    {
      v28 = v45;
      v29 = _convertNSErrorToError(_:)(v18);

      swift_willThrow(v30);
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v31 = type metadata accessor for Logger(0);
      sub_100048F64(v31, (uint64_t)qword_1009E40B0);
      swift_errorRetain(v29);
      v32 = swift_errorRetain(v29);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter(v33);
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v41 = (void *)swift_slowAlloc(32, -1);
        v45 = v41;
        *(_DWORD *)v35 = 136315138;
        swift_getErrorValue(v29, v44, v43);
        v36 = Error.localizedDescription.getter(v43[1], v43[2]);
        v38 = v37;
        v42 = sub_100040F58(v36, v37, (uint64_t *)&v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v35 + 4, v35 + 12);
        swift_bridgeObjectRelease(v38);
        swift_errorRelease(v29);
        swift_errorRelease(v29);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Unable to fetch user collections: %s", v35, 0xCu);
        swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v35, -1, -1);

        swift_errorRelease(v29);
      }
      else
      {
        swift_errorRelease(v29);
        swift_errorRelease(v29);
        swift_errorRelease(v29);

      }
    }
    v39 = *(void **)&v3[v2];
    *(_QWORD *)&v3[v2] = v16;
    v40 = v16;

    objc_msgSend(v40, "setDelegate:", v3);
  }
}

uint64_t sub_10002A93C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4();

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10002A9D8(uint64_t a1, const char *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  if (qword_1009CE928 != -1)
    swift_once(&qword_1009CE928, sub_10000A068);
  v10 = type metadata accessor for Logger(0);
  sub_100048F64(v10, (uint64_t)qword_1009EE820);
  v11 = v5;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = a5;
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v24 = v11;
    v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v14 + 4, v14 + 12);
    *v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, a2, v14, 0xCu);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v15, 1, v17);
    v18 = v15;
    a5 = v23;
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  swift_getObjectType();
  v19 = (uint64_t *)&v11[*a3];
  swift_beginAccess(v19, &v24, 0, 0);
  v21 = *v19;
  v20 = v19[1];
  sub_10002ACF0(v21, v20);
  sub_10002ABF0(a4, a5, v21, v20);
  return sub_10002AD00(v21, v20);
}

void sub_10002ABF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  NSString v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  if (a3)
  {
    swift_retain(a4);
    v7 = String._bridgeToObjectiveC()();
    v8 = swift_allocObject(&unk_100914250, 32, 7);
    *(_QWORD *)(v8 + 16) = a3;
    *(_QWORD *)(v8 + 24) = a4;
    v11[4] = sub_10004DE04;
    v12 = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10004DCB4;
    v11[3] = &unk_100914268;
    v9 = _Block_copy(v11);
    v10 = v12;
    swift_retain(a4);
    swift_release(v10);
    objc_msgSend(v4, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 1, v7, v9);
    _Block_release(v9);

    sub_10002AD00(a3, a4);
  }
}

uint64_t sub_10002ACF0(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10002AD00(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

char *sub_10002AD10(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  objc_class *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  char *v51;
  char *v52;
  char *v53;
  id v54;
  NSString v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  char *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  Class isa;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  uint64_t v102;
  objc_super v103;

  v4 = (uint64_t *)&v2[OBJC_IVAR___BKSessionDonor_sessionIdentifier];
  v5 = v2;
  v6 = static String.random(length:)(32);
  v8 = v7;
  *v4 = v6;
  v4[1] = v7;
  Date.init()(v6);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKSessionDonor_manager], 0);
  v9 = OBJC_IVAR___BKSessionDonor_sampleButtonUsedConfig;
  v12 = (objc_class *)type metadata accessor for CounterPropertyConfiguration(0, v10, v11);
  v13 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v9] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000010, 0x80000001007BFEB0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v14 = OBJC_IVAR___BKSessionDonor_previewButtonUsedConfig;
  v15 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v14] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000011, 0x80000001007BFED0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v16 = OBJC_IVAR___BKSessionDonor_addToWTRButtonUsedConfig;
  v17 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v16] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000012, 0x80000001007BFEF0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v18 = OBJC_IVAR___BKSessionDonor_notificationSettingsVisitedConfig;
  v19 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v18] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD00000000000001BLL, 0x80000001007BFF50, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v20 = OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatusConfig;
  v21 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v20] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD00000000000001FLL, 0x80000001007BFE90, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v22 = OBJC_IVAR___BKSessionDonor_isPairedToWatchConfig;
  v23 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v22] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x6465726961507369, 0xEF68637461576F54, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v24 = OBJC_IVAR___BKSessionDonor_everUsedAppleWatchAppConfig;
  v25 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v24] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000015, 0x80000001007BFF10, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v26 = OBJC_IVAR___BKSessionDonor_everUsedCarplayAppConfig;
  v27 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v26] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000012, 0x80000001007BFF30, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v28 = OBJC_IVAR___BKSessionDonor_everUsedReadingScrubberAppConfig;
  v29 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v28] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000017, 0x80000001007BFF80, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v30 = OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmarkAppConfig;
  v31 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v30] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD00000000000001BLL, 0x80000001007BFFA0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v32 = OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButtonAppConfig;
  v33 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v32] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000021, 0x80000001007BFFC0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v34 = OBJC_IVAR___BKSessionDonor_readingSessionInProgressConfig;
  v35 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v34] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000012, 0x80000001007C01C0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v36 = OBJC_IVAR___BKSessionDonor_listeningSessionInProgressConfig;
  v37 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v36] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000014, 0x80000001007C01E0, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v38 = OBJC_IVAR___BKSessionDonor_connectedToCarplayConfig;
  v39 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v38] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0xD000000000000012, 0x80000001007C0200, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v40 = OBJC_IVAR___BKSessionDonor_everUsedCarplayConfig;
  v41 = objc_allocWithZone(v12);
  *(_QWORD *)&v5[v40] = CounterPropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x6465735572657665, 0xEF79616C70726143, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v42 = OBJC_IVAR___BKSessionDonor_currentTabConfig;
  v43 = (objc_class *)type metadata accessor for StatePropertyConfiguration(0);
  v44 = objc_allocWithZone(v43);
  *(_QWORD *)&v5[v42] = StatePropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x54746E6572727563, 0xEA00000000006261, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v45 = OBJC_IVAR___BKSessionDonor_recentBooksConfig;
  v46 = objc_allocWithZone(v43);
  *(_QWORD *)&v5[v45] = StatePropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x6F42746E65636572, 0xEB00000000736B6FLL, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v47 = OBJC_IVAR___BKSessionDonor_sampleBooksConfig;
  v48 = objc_allocWithZone(v43);
  *(_QWORD *)&v5[v47] = StatePropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x6F42656C706D6173, 0xEB00000000736B6FLL, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  v49 = OBJC_IVAR___BKSessionDonor_storeBooksConfig;
  v50 = objc_allocWithZone(v43);
  *(_QWORD *)&v5[v49] = StatePropertyConfiguration.init(eventName:ageToExpire:shouldBeCached:shouldBeSynced:)(0x6F6F4265726F7473, 0xEA0000000000736BLL, 0x7FFFFFFFFFFFFFFFLL, 1, 0);
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_productPageViewed] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_purchases] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_readingSessions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_listeningSessions] = _swiftEmptyArrayStorage;
  v51 = &v5[OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatus];
  *(_QWORD *)v51 = 0;
  v51[8] = 1;
  v5[OBJC_IVAR___BKSessionDonor_sampleButtonUsed] = 0;
  v5[OBJC_IVAR___BKSessionDonor_previewButtonUsed] = 0;
  v5[OBJC_IVAR___BKSessionDonor_addToWTRButtonUsed] = 0;
  v5[OBJC_IVAR___BKSessionDonor_everUsedAppleWatchApp] = 0;
  v5[OBJC_IVAR___BKSessionDonor_everUsedCarplayApp] = 0;
  v5[OBJC_IVAR___BKSessionDonor_notificationSettingsVisited] = 0;
  v5[OBJC_IVAR___BKSessionDonor_everUsedCarplay] = 0;
  v5[OBJC_IVAR___BKSessionDonor_everUsedReadingScrubber] = 0;
  v5[OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmark] = 0;
  v5[OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_recentBooksProvider] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_sampleBooksProvider] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_storeBooksProvider] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_recentBooks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_sampleBooks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_storeBooks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_readingSessionInProgress] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_listeningSessionInProgress] = &_swiftEmptySetSingleton;
  v52 = &v5[OBJC_IVAR___BKSessionDonor_rootBarCoordinator];
  *(_QWORD *)v52 = 0;
  *((_QWORD *)v52 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_currentTabPublisherCancellable] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_carSessionStatus] = 0;
  v53 = &v5[OBJC_IVAR___BKSessionDonor_currentTab];
  *(_QWORD *)v53 = 0x6E776F6E6B6E75;
  *((_QWORD *)v53 + 1) = 0xE700000000000000;
  v54 = objc_allocWithZone((Class)type metadata accessor for CollectionPropertyConfiguration(0));
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)&v5[OBJC_IVAR___BKSessionDonor_sessionConfiguration] = CollectionPropertyConfiguration.init(eventName:identifier:ageToExpire:countLimit:shouldBeCached:shouldBeSynced:)(0x6E6F6973736573, 0xE700000000000000, v6, v8, 172800, 30, 1, 0);

  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v103.receiver = v5;
  v103.super_class = (Class)type metadata accessor for SessionDonor(0);
  v56 = (char *)objc_msgSendSuper2(&v103, "initWithType:", v55);

  v57 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v58 = swift_allocObject(v57, 192, 7);
  *(_OWORD *)(v58 + 16) = xmmword_10071B8A0;
  v59 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_sessionConfiguration];
  *(_QWORD *)(v58 + 32) = v59;
  v60 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_sampleButtonUsedConfig];
  *(_QWORD *)(v58 + 40) = v60;
  v61 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_previewButtonUsedConfig];
  *(_QWORD *)(v58 + 48) = v61;
  v62 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_addToWTRButtonUsedConfig];
  *(_QWORD *)(v58 + 56) = v62;
  v63 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_isPairedToWatchConfig];
  *(_QWORD *)(v58 + 64) = v63;
  v64 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_everUsedAppleWatchAppConfig];
  *(_QWORD *)(v58 + 72) = v64;
  v65 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_everUsedCarplayAppConfig];
  *(_QWORD *)(v58 + 80) = v65;
  v66 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_everUsedReadingScrubberAppConfig];
  *(_QWORD *)(v58 + 88) = v66;
  v90 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmarkAppConfig];
  *(_QWORD *)(v58 + 96) = v90;
  v91 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButtonAppConfig];
  *(_QWORD *)(v58 + 104) = v91;
  v92 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_readingSessionInProgressConfig];
  *(_QWORD *)(v58 + 112) = v92;
  v93 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_listeningSessionInProgressConfig];
  *(_QWORD *)(v58 + 120) = v93;
  v94 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_connectedToCarplayConfig];
  *(_QWORD *)(v58 + 128) = v94;
  v95 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_currentTabConfig];
  *(_QWORD *)(v58 + 136) = v95;
  v96 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_sampleBooksConfig];
  *(_QWORD *)(v58 + 144) = v96;
  v97 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_recentBooksConfig];
  *(_QWORD *)(v58 + 152) = v97;
  v98 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_storeBooksConfig];
  *(_QWORD *)(v58 + 160) = v98;
  v99 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_notificationSettingsVisitedConfig];
  *(_QWORD *)(v58 + 168) = v99;
  v100 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_everUsedCarplayConfig];
  *(_QWORD *)(v58 + 176) = v100;
  v101 = *(void **)&v56[OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatusConfig];
  v102 = v58;
  *(_QWORD *)(v58 + 184) = v101;
  specialized Array._endMutation()(v58);
  type metadata accessor for BasePropertyConfiguration(0);
  v67 = v56;
  v68 = v59;
  v69 = v60;
  v70 = v61;
  v71 = v62;
  v72 = v63;
  v73 = v64;
  v74 = v65;
  v75 = v66;
  v76 = v90;
  v77 = v91;
  v78 = v92;
  v79 = v93;
  v80 = v94;
  v81 = v95;
  v82 = v96;
  v83 = v97;
  v84 = v98;
  v85 = v99;
  v86 = v100;
  v87 = v101;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v102);
  objc_msgSend(v67, "setEventConfigurations:", isa);

  return v67;
}

uint64_t sub_10002B704(const char *a1)
{
  _QWORD *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *__return_ptr, const char *, uint64_t, _QWORD);
  uint64_t v10;
  _QWORD *v11;
  uint64_t DynamicType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  const char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _BYTE v58[24];
  __int128 v59;
  _OWORD v60[2];
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;

  v2 = _s5Books29ServiceCenterAppConfigurationC16serviceFactoriesSayAA03AnyB7Factory_pGvg_0();
  v52 = v2[2];
  if (!v52)
    return swift_bridgeObjectRelease(v2);
  v3 = &a1[OBJC_IVAR___BKServiceCenter_services];
  swift_bridgeObjectRetain(v2);
  v5 = 0;
  v49 = a1;
  v50 = v4;
  v51 = (char *)v3;
  while (1)
  {
    v53 = *(_OWORD *)(v4 + 16 * v5 + 32);
    v7 = *(_QWORD *)(v4 + 16 * v5 + 32);
    ObjectType = swift_getObjectType();
    v9 = *(void (**)(_QWORD *__return_ptr, const char *, uint64_t, _QWORD))(*((_QWORD *)&v53 + 1) + 8);
    swift_unknownObjectRetain(v7);
    v9(v62, a1, ObjectType, *((_QWORD *)&v53 + 1));
    v10 = v63;
    v11 = sub_10003F198(v62, v63);
    DynamicType = swift_getDynamicType(v11, v10, 1);
    v13 = v64;
    v17 = static os_log_type_t.debug.getter(DynamicType, v14, v15, v16);
    if (qword_1009CDD70 != -1)
      swift_once(&qword_1009CDD70, sub_10006A768);
    v18 = (void *)qword_1009D5C98;
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v20 = swift_allocObject(v19, 72, 7);
    *(_OWORD *)(v20 + 16) = xmmword_10070CCA0;
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    v22 = v18;
    v23 = v21(DynamicType, v13);
    v25 = v24;
    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 64) = sub_10002BE50();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v25;
    os_log(_:dso:log:_:_:)(v17, &_mh_execute_header, v22, "Registering service: %s", v49);

    swift_bridgeObjectRelease(v20);
    v26 = v21(DynamicType, v13);
    v28 = v27;
    v59 = v53;
    sub_10002E418((uint64_t)v62, (uint64_t)v60);
    swift_beginAccess(v51, v58, 33, 0);
    v54 = v59;
    v55 = v60[0];
    v56 = v60[1];
    v57 = v61;
    swift_unknownObjectRetain(v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v51);
    v30 = *(_QWORD **)v51;
    *(_QWORD *)v51 = 0x8000000000000000;
    v32 = sub_10004CE80(v26, v28);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v30[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v39 = v30;
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1002C14CC();
        v39 = v30;
        if ((v36 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_10002BB00(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_10004CE80(v26, v28);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_22;
      v32 = v37;
      v39 = v30;
      if ((v36 & 1) != 0)
      {
LABEL_3:
        sub_1004EBEB4((uint64_t)&v54, v39[7] + 56 * v32);
        goto LABEL_4;
      }
    }
    v39[(v32 >> 6) + 8] |= 1 << v32;
    v40 = (uint64_t *)(v39[6] + 16 * v32);
    *v40 = v26;
    v40[1] = v28;
    v41 = v39[7] + 56 * v32;
    v42 = v54;
    v43 = v55;
    v44 = v56;
    *(_QWORD *)(v41 + 48) = v57;
    *(_OWORD *)(v41 + 16) = v43;
    *(_OWORD *)(v41 + 32) = v44;
    *(_OWORD *)v41 = v42;
    v45 = v39[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_21;
    v39[2] = v47;
    swift_bridgeObjectRetain(v28);
LABEL_4:
    ++v5;
    v6 = *(_QWORD *)v51;
    *(_QWORD *)v51 = v39;
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v6);
    swift_endAccess(v58);
    _s5Books15CurrentPageViewVwxx_0(v62);
    swift_unknownObjectRelease(v7);
    a1 = v49;
    v4 = v50;
    if (v52 == v5)
      return swift_bridgeObjectRelease_n(v50, 2);
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_10002BAD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = sub_10004CFD4(a3);
  return String.init<A>(describing:)(&v5, v3);
}

Swift::Int sub_10002BB00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char v44;
  _QWORD v45[9];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D7B50);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v43 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v42 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_25;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v23 >= v42)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v43 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_37;
      v25 = *(_QWORD *)(v43 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_37:
          swift_release(v5);
          if ((v44 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v25 = *(_QWORD *)(v43 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_46;
            if (v14 >= v42)
              goto LABEL_37;
            v25 = *(_QWORD *)(v43 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_24;
          }
        }
        v14 = v26;
      }
    }
LABEL_24:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_25:
    v27 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v5 + 56) + 56 * v22;
    if ((v44 & 1) != 0)
    {
      v31 = *(_OWORD *)v30;
      v32 = *(_OWORD *)(v30 + 16);
      v33 = *(_OWORD *)(v30 + 32);
      v49 = *(_QWORD *)(v30 + 48);
      v47 = v32;
      v48 = v33;
      v46 = v31;
    }
    else
    {
      sub_10000B5E4(v30, (uint64_t)&v46, &qword_1009D7B58);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v45, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v45, v29, v28);
    result = Hasher._finalize()();
    v34 = -1 << *(_BYTE *)(v8 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v12 + 8 * (v35 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v12 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v12 + 8 * v36);
      }
      while (v40 == -1);
      v15 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
    *v16 = v29;
    v16[1] = v28;
    v17 = *(_QWORD *)(v8 + 56) + 56 * v15;
    v18 = v46;
    v19 = v47;
    v20 = v48;
    *(_QWORD *)(v17 + 48) = v49;
    *(_OWORD *)(v17 + 16) = v19;
    *(_OWORD *)(v17 + 32) = v20;
    *(_OWORD *)v17 = v18;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v24 = (_QWORD *)(v5 + 64);
  if ((v44 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v41 = 1 << *(_BYTE *)(v5 + 32);
  if (v41 >= 64)
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v41;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

unint64_t sub_10002BE50()
{
  unint64_t result;

  result = qword_1009D81B0;
  if (!qword_1009D81B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1009D81B0);
  }
  return result;
}

uint64_t static Service.identifier.getter()
{
  uint64_t MetatypeMetadata;
  uint64_t v2;

  MetatypeMetadata = swift_getMetatypeMetadata();
  return String.init<A>(describing:)(&v2, MetatypeMetadata);
}

uint64_t sub_10002BEC0(uint64_t a1, uint64_t a2)
{
  return sub_10002BAD0(a1, a2, &qword_1009E8718);
}

uint64_t sub_10002BECC(uint64_t a1, uint64_t a2)
{
  return sub_10002BAD0(a1, a2, &qword_1009F0760);
}

uint64_t sub_10002BF0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0(&qword_1009EAA20, type metadata accessor for YearInReview.RemoteConfiguration.DateRange, (uint64_t)&unk_10072C580);
  return ReflectedStringConvertible.description.getter(a1, v2);
}

uint64_t sub_10002BF4C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  BOOL v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[28];
  int v94;
  uint64_t v95;
  _BYTE v96[24];

  v2 = v1;
  v92 = a1 & 1;
  v87 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v86 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E3A40);
  v6 = __chkstk_darwin(v5);
  v85 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v84 = (uint64_t)&v79 - v8;
  v9 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v90 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v83 = (uint64_t)&v79 - v13;
  v14 = type metadata accessor for YearInReview.RemoteConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10004CFD4(&qword_1009E3A18);
  v18 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v88 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009E3A20);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v79 - v25;
  v27 = static Capabilities.isInternalBuild.getter(v24);
  v28 = &unk_1009E3000;
  if ((v27 & 1) == 0)
    goto LABEL_9;
  v82 = v12;
  v29 = v17;
  v30 = v2 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config, v93, 0, 0);
  sub_10000B5E4(v30, (uint64_t)v26, &qword_1009E3A20);
  LODWORD(v30) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v26, 1, v14);
  sub_100010960((uint64_t)v26, &qword_1009E3A20);
  v28 = (_QWORD *)&unk_1009E3000;
  v31 = (_DWORD)v30 == 1;
  v17 = v29;
  v12 = v82;
  if (!v31)
    goto LABEL_9;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v33 = v88;
  v34 = v89;
  v80 = v2 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider__debugYearOverride;
  v81 = v32;
  ((void (*)(char *))v32)(v88);
  UserDefault.wrappedValue.getter(&v95, v34);
  v35 = *(void (**)(char *, uint64_t))(v18 + 8);
  v35(v33, v34);
  v28 = (_QWORD *)&unk_1009E3000;
  if (!v95)
  {
LABEL_9:
    v43 = v2 + v28[278];
    swift_beginAccess(v43, &v95, 0, 0);
    sub_10000B5E4(v43, (uint64_t)v23, &qword_1009E3A20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v23, 1, v14) == 1)
    {
      sub_100010960((uint64_t)v23, &qword_1009E3A20);
      if (qword_1009CE4B8 != -1)
        swift_once(&qword_1009CE4B8, sub_10006C8FC);
      v44 = type metadata accessor for Logger(0);
      v45 = sub_100048F64(v44, (uint64_t)qword_1009E3880);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.default.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "No config provided for isActive", v48, 2u);
        swift_slowDealloc(v48, -1, -1);
      }

      goto LABEL_28;
    }
    sub_10002C960((uint64_t)v23, (uint64_t)v17, type metadata accessor for YearInReview.RemoteConfiguration);
    if ((_DWORD)v92)
    {
      v56 = v85;
      sub_10000B5E4((uint64_t)&v17[*(int *)(v14 + 24)], v85, &qword_1009E3A40);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v56, 1, v91) == 1)
      {
        sub_100010960(v56, &qword_1009E3A40);
        if (qword_1009CE4B8 != -1)
          swift_once(&qword_1009CE4B8, sub_10006C8FC);
        v57 = type metadata accessor for Logger(0);
        v58 = sub_100048F64(v57, (uint64_t)qword_1009E3880);
        v52 = Logger.logObject.getter(v58);
        v53 = static os_log_type_t.default.getter(v52);
        if (!os_log_type_enabled(v52, v53))
          goto LABEL_27;
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        v55 = "No configuration for topPicksCard entry point provided.";
        goto LABEL_26;
      }
      v71 = sub_10002C960(v56, (uint64_t)v12, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      v72 = v86;
      static Date.now.getter(v71);
      v59 = sub_1000291DC(v72);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v72, v87);
      if (qword_1009CE4B8 != -1)
        swift_once(&qword_1009CE4B8, sub_10006C8FC);
      v73 = type metadata accessor for Logger(0);
      v74 = sub_100048F64(v73, (uint64_t)qword_1009E3880);
      v75 = Logger.logObject.getter(v74);
      v76 = static os_log_type_t.default.getter(v75);
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v77 = 67109120;
        v94 = v59 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v77 + 4, v77 + 8);
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "topPicksCard isValidRange: %{BOOL}d", v77, 8u);
        swift_slowDealloc(v77, -1, -1);
      }

      v70 = (uint64_t)v12;
    }
    else
    {
      v49 = v84;
      sub_10000B5E4((uint64_t)&v17[*(int *)(v14 + 20)], v84, &qword_1009E3A40);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v49, 1, v91) == 1)
      {
        sub_100010960(v49, &qword_1009E3A40);
        if (qword_1009CE4B8 != -1)
          swift_once(&qword_1009CE4B8, sub_10006C8FC);
        v50 = type metadata accessor for Logger(0);
        v51 = sub_100048F64(v50, (uint64_t)qword_1009E3880);
        v52 = Logger.logObject.getter(v51);
        v53 = static os_log_type_t.default.getter(v52);
        if (!os_log_type_enabled(v52, v53))
          goto LABEL_27;
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        v55 = "No configuration for notification entry point provided.";
LABEL_26:
        _os_log_impl((void *)&_mh_execute_header, v52, v53, v55, v54, 2u);
        swift_slowDealloc(v54, -1, -1);
LABEL_27:

        sub_10002C8F0((uint64_t)v17, type metadata accessor for YearInReview.RemoteConfiguration);
LABEL_28:
        v59 = 0;
        return v59 & 1;
      }
      v60 = v49;
      v61 = v3;
      v62 = v83;
      v63 = sub_10002C960(v60, v83, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      v64 = v86;
      static Date.now.getter(v63);
      v59 = sub_1000291DC(v64);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v87);
      if (qword_1009CE4B8 != -1)
        swift_once(&qword_1009CE4B8, sub_10006C8FC);
      v65 = type metadata accessor for Logger(0);
      v66 = sub_100048F64(v65, (uint64_t)qword_1009E3880);
      v67 = Logger.logObject.getter(v66);
      v68 = static os_log_type_t.default.getter(v67);
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v69 = 67109120;
        v94 = v59 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v69 + 4, v69 + 8);
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "notification isValidRange: %{BOOL}d", v69, 8u);
        swift_slowDealloc(v69, -1, -1);
      }

      v70 = v62;
    }
    sub_10002C8F0(v70, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    sub_10002C8F0((uint64_t)v17, type metadata accessor for YearInReview.RemoteConfiguration);
    return v59 & 1;
  }
  if (qword_1009CE4B8 != -1)
    swift_once(&qword_1009CE4B8, sub_10006C8FC);
  v36 = type metadata accessor for Logger(0);
  sub_100048F64(v36, (uint64_t)qword_1009E3880);
  v37 = swift_retain(v2);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc(22, -1);
    *(_DWORD *)v40 = 134218240;
    v95 = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v40 + 4, v40 + 12);
    *(_WORD *)(v40 + 12) = 2048;
    v41 = v88;
    v42 = v89;
    v81(v88, v80, v89);
    UserDefault.wrappedValue.getter(&v95, v42);
    v35(v41, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v40 + 14, v40 + 22);
    swift_release(v2);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "entryPoint: %ld is active with override year: %ld", (uint8_t *)v40, 0x16u);
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

    swift_release(v2);
  }
  v59 = 1;
  return v59 & 1;
}

uint64_t sub_10002C8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100541850);
}

uint64_t sub_10002C8F0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002C92C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_10002C960(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for YearInReview.RemoteConfiguration(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009EA888, (uint64_t)&nominal type descriptor for YearInReview.RemoteConfiguration);
}

uint64_t sub_10002C9B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  char v36;
  char v37;

  v29 = a2;
  v32 = sub_10004CFD4(&qword_1009E0B78);
  v3 = __chkstk_darwin(v32);
  v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - v5;
  v33 = sub_10004CFD4(&qword_1009EA9D8);
  v6 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v14 = (uint64_t)&v11[*(int *)(v9 + 20)];
  v13((char *)v14, 1, 1, v12);
  v16 = a1[3];
  v15 = a1[4];
  sub_10003F198(a1, v16);
  v17 = sub_10002CDDC();
  v18 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys, &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys, v17, v16, v15);
  if (v18)
  {
    _s5Books15CurrentPageViewVwxx_0(a1);
    sub_100010960((uint64_t)v11, &qword_1009E0B78);
    return sub_100010960(v14, &qword_1009E0B78);
  }
  else
  {
    v34 = a1;
    v28 = v9;
    v19 = (uint64_t)v30;
    v20 = v14;
    v37 = 0;
    sub_10002CD00();
    v21 = (uint64_t)v31;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v32, &v37, v33, v32);
    sub_10002CCB8(v21, (uint64_t)v11);
    v36 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v32, &v36, v33, v32);
    sub_10002CCB8(v19, v20);
    v35 = 2;
    v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v35, v33);
    LOBYTE(v21) = v23;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v33);
    v24 = v29;
    v25 = &v11[*(int *)(v28 + 24)];
    *(_QWORD *)v25 = v22;
    v25[8] = v21 & 1;
    sub_10002CD84((uint64_t)v11, v24, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    _s5Books15CurrentPageViewVwxx_0(v34);
    return sub_10002C8F0((uint64_t)v11, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  }
}

uint64_t sub_10002CCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10002CD00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EA9E8;
  if (!qword_1009EA9E8)
  {
    v1 = sub_100030B74(&qword_1009E0B78);
    sub_10006CD04(&qword_1009EA9F0, &qword_1009EA9F8, (uint64_t)&protocol conformance descriptor for Date, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EA9E8);
  }
  return result;
}

uint64_t sub_10002CD84(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for YearInReview.RemoteConfiguration.DateRange(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009EA928, (uint64_t)&nominal type descriptor for YearInReview.RemoteConfiguration.DateRange);
}

unint64_t sub_10002CDDC()
{
  unint64_t result;

  result = qword_1009EA9E0;
  if (!qword_1009EA9E0)
  {
    result = swift_getWitnessTable(&unk_10072C8A8, &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EA9E0);
  }
  return result;
}

uint64_t sub_10002CE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  unsigned int v128;
  uint64_t v129;
  __int128 v130;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_10000B5E4(v4, v3, &qword_1009E3A20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 352);
    v6 = &qword_1009E3A20;
LABEL_5:
    sub_100010960(v5, v6);
    if (qword_1009CE358 != -1)
      swift_once(&qword_1009CE358, sub_1003D9104);
    v14 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 200);
    v16 = sub_100048F64(v15, (uint64_t)qword_1009E09E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
    UserDefault.wrappedValue.getter((_QWORD *)(v0 + 75), v15);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    if ((*(_BYTE *)(v0 + 75) & 1) == 0)
    {
      v18 = *(_QWORD *)(v0 + 144);
      v127 = *(_OWORD *)(v0 + 128);
      static TaskPriority.low.getter(v17);
      v19 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
      v20 = swift_allocObject(&unk_100902FD8, 48, 7);
      *(_QWORD *)(v20 + 16) = 0;
      *(_QWORD *)(v20 + 24) = 0;
      *(_OWORD *)(v20 + 32) = v127;
      swift_retain(v127);
      v21 = sub_10053DC20(v18, (uint64_t)&unk_1009E0B88, v20);
      swift_release(v21);
      sub_100010960(v18, &qword_1009D3150);
    }
    v128 = 0;
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(v0 + 376);
  v8 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 320);
  sub_10002C960(*(_QWORD *)(v0 + 352), v7, type metadata accessor for YearInReview.RemoteConfiguration);
  sub_10000B5E4(v7 + *(int *)(v8 + 20), v11, &qword_1009E3A40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v12 = *(_QWORD *)(v0 + 320);
    sub_10002C8F0(*(_QWORD *)(v0 + 376), type metadata accessor for YearInReview.RemoteConfiguration);
    v6 = &qword_1009E3A40;
    v5 = v12;
    goto LABEL_5;
  }
  v32 = *(_QWORD *)(v0 + 344);
  v33 = *(_QWORD *)(v0 + 272);
  v34 = *(_QWORD *)(v0 + 280);
  v35 = *(_QWORD *)(v0 + 264);
  v36 = *(_QWORD *)(v0 + 248);
  sub_10002C960(*(_QWORD *)(v0 + 320), v32, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  sub_10000B5E4(v32, v36, &qword_1009E0B78);
  sub_10002D974(v36, v35);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v37(v35, 1, v33) == 1)
  {
    v38 = (uint64_t *)(v0 + 264);
LABEL_15:
    v45 = *(_QWORD *)(v0 + 376);
    v46 = *(_QWORD *)(v0 + 344);
    sub_100010960(*v38, &qword_1009D7440);
    v47 = sub_1003DB614();
    v129 = swift_allocError(&type metadata for YearInReviewNotificationScheduler.SchedulerError, v47, 0, 0);
    *v48 = 0;
    swift_willThrow(v129);
    sub_10002C8F0(v46, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    sub_10002C8F0(v45, type metadata accessor for YearInReview.RemoteConfiguration);
    v50 = *(_QWORD *)(v0 + 344);
    v49 = *(_QWORD *)(v0 + 352);
    v52 = *(_QWORD *)(v0 + 312);
    v51 = *(_QWORD *)(v0 + 320);
    v54 = *(_QWORD *)(v0 + 296);
    v53 = *(_QWORD *)(v0 + 304);
    v55 = *(_QWORD *)(v0 + 288);
    v57 = *(_QWORD *)(v0 + 256);
    v56 = *(_QWORD *)(v0 + 264);
    v116 = *(_QWORD *)(v0 + 248);
    v118 = *(_QWORD *)(v0 + 240);
    v120 = *(_QWORD *)(v0 + 216);
    v122 = *(_QWORD *)(v0 + 192);
    v124 = *(_QWORD *)(v0 + 168);
    v126 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v116);
    swift_task_dealloc(v118);
    swift_task_dealloc(v120);
    swift_task_dealloc(v122);
    swift_task_dealloc(v124);
    swift_task_dealloc(v126);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v39 = *(_QWORD *)(v0 + 344);
  v40 = *(_QWORD *)(v0 + 328);
  v41 = *(_QWORD *)(v0 + 272);
  v42 = *(_QWORD *)(v0 + 256);
  v43 = *(_QWORD *)(v0 + 248);
  v44 = *(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 280) + 32);
  v44(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 264), v41);
  sub_10000B5E4(v39 + *(int *)(v40 + 20), v43, &qword_1009E0B78);
  sub_10002D974(v43, v42);
  if (v37(v42, 1, v41) == 1)
  {
    v38 = (uint64_t *)(v0 + 256);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 272));
    goto LABEL_15;
  }
  v58 = *(_QWORD *)(v0 + 344);
  v59 = *(_QWORD *)(v0 + 328);
  v60 = *(_QWORD *)(v0 + 312);
  v62 = *(_QWORD *)(v0 + 280);
  v61 = *(_QWORD *)(v0 + 288);
  v63 = *(_QWORD *)(v0 + 272);
  v64 = ((uint64_t (*)(_QWORD, _QWORD, uint64_t))v44)(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 256), v63);
  v65 = v58 + *(int *)(v59 + 24);
  v66 = *(_QWORD *)v65;
  v67 = *(unsigned __int8 *)(v65 + 8);
  static Date.now.getter(v64);
  LOBYTE(v60) = static Date.< infix(_:_:)(v61, v60);
  v68 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
  *(_QWORD *)(v0 + 384) = v68;
  v69 = v68(v61, v63);
  if ((v60 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 16))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 272));
  }
  else
  {
    v70 = *(_QWORD *)(v0 + 288);
    v71 = *(_QWORD *)(v0 + 272);
    v73 = *(_QWORD *)(v0 + 232);
    v72 = *(_QWORD *)(v0 + 240);
    if (v67)
      v66 = 3600;
    v74 = *(_QWORD *)(v0 + 224);
    v75 = static Date.now.getter(v69);
    static Calendar.current.getter(v75);
    Date.addSeconds(_:calendar:)(v66, v72);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
    v68(v70, v71);
  }
  v76 = *(uint64_t **)(v0 + 376);
  v77 = *v76;
  *(_QWORD *)(v0 + 392) = *v76;
  if ((sub_100015B78(v77) & 1) != 0)
  {
    if (qword_1009CE358 != -1)
      swift_once(&qword_1009CE358, sub_1003D9104);
    v79 = *(_QWORD *)(v0 + 208);
    v78 = *(_QWORD *)(v0 + 216);
    v80 = *(_QWORD *)(v0 + 200);
    v81 = sub_100048F64(v80, (uint64_t)qword_1009E09E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v78, v81, v80);
    UserDefault.wrappedValue.getter((_QWORD *)(v0 + 76), v80);
    v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
    if ((*(_BYTE *)(v0 + 76) & 1) == 0)
    {
      v83 = *(_QWORD *)(v0 + 144);
      v130 = *(_OWORD *)(v0 + 128);
      static TaskPriority.low.getter(v82);
      v84 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 0, 1, v84);
      v85 = swift_allocObject(&unk_100903000, 48, 7);
      *(_QWORD *)(v85 + 16) = 0;
      *(_QWORD *)(v85 + 24) = 0;
      *(_OWORD *)(v85 + 32) = v130;
      swift_retain(v130);
      v86 = sub_10053DC20(v83, (uint64_t)&unk_1009E0BA0, v85);
      swift_release(v86);
      sub_100010960(v83, &qword_1009D3150);
    }
    v87 = *(_QWORD *)(v0 + 376);
    v88 = *(_QWORD *)(v0 + 344);
    v90 = *(_QWORD *)(v0 + 304);
    v89 = *(_QWORD *)(v0 + 312);
    v91 = *(_QWORD *)(v0 + 272);
    v68(*(_QWORD *)(v0 + 296), v91);
    v68(v90, v91);
    v68(v89, v91);
    sub_10002C8F0(v88, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    sub_10002C8F0(v87, type metadata accessor for YearInReview.RemoteConfiguration);
    v92 = 1;
    goto LABEL_38;
  }
  if (qword_1009CE368 != -1)
    swift_once(&qword_1009CE368, sub_10006640C);
  v94 = *(_QWORD *)(v0 + 208);
  v93 = *(_QWORD *)(v0 + 216);
  v95 = *(_QWORD *)(v0 + 200);
  v96 = sub_100048F64(v95, (uint64_t)qword_1009E0A10);
  v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16);
  *(_QWORD *)(v0 + 400) = v97;
  v97(v93, v96, v95);
  UserDefault.wrappedValue.getter((_QWORD *)(v0 + 73), v95);
  v98 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  *(_QWORD *)(v0 + 408) = v98;
  v98(v93, v95);
  if ((*(_BYTE *)(v0 + 73) & 1) == 0)
  {
    if (qword_1009CE350 != -1)
      swift_once(&qword_1009CE350, sub_10001099C);
    v100 = *(_QWORD *)(v0 + 184);
    v99 = *(_QWORD *)(v0 + 192);
    v101 = *(_QWORD *)(v0 + 176);
    v102 = sub_100048F64(v101, (uint64_t)qword_1009E09C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v99, v102, v101);
    UserDefault.wrappedValue.getter((_QWORD *)(v0 + 80), v101);
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
    if ((*(_BYTE *)(v0 + 88) & 1) == 0 && v77 == *(_QWORD *)(v0 + 80))
    {
      v103 = *(_QWORD *)(v0 + 376);
      v104 = *(_QWORD *)(v0 + 344);
      v106 = *(_QWORD *)(v0 + 304);
      v105 = *(_QWORD *)(v0 + 312);
      v107 = *(_QWORD *)(v0 + 296);
      v108 = *(_QWORD *)(v0 + 272);
      sub_1003DA0F4(v77);
      v68(v107, v108);
      v68(v106, v108);
      v68(v105, v108);
      sub_10002C8F0(v104, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      sub_10002C8F0(v103, type metadata accessor for YearInReview.RemoteConfiguration);
      v92 = 2;
LABEL_38:
      v128 = v92;
LABEL_10:
      v23 = *(_QWORD *)(v0 + 344);
      v22 = *(_QWORD *)(v0 + 352);
      v25 = *(_QWORD *)(v0 + 312);
      v24 = *(_QWORD *)(v0 + 320);
      v27 = *(_QWORD *)(v0 + 296);
      v26 = *(_QWORD *)(v0 + 304);
      v28 = *(_QWORD *)(v0 + 288);
      v30 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 264);
      v115 = *(_QWORD *)(v0 + 248);
      v117 = *(_QWORD *)(v0 + 240);
      v119 = *(_QWORD *)(v0 + 216);
      v121 = *(_QWORD *)(v0 + 192);
      v123 = *(_QWORD *)(v0 + 168);
      v125 = *(_QWORD *)(v0 + 144);
      swift_task_dealloc(*(_QWORD *)(v0 + 376));
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v115);
      swift_task_dealloc(v117);
      swift_task_dealloc(v119);
      swift_task_dealloc(v121);
      swift_task_dealloc(v123);
      swift_task_dealloc(v125);
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(v128);
    }
  }
  if ((static Date.< infix(_:_:)(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304)) & 1) == 0)
  {
    v110 = *(_QWORD *)(v0 + 376);
    v111 = *(_QWORD *)(v0 + 344);
    v113 = *(_QWORD *)(v0 + 304);
    v112 = *(_QWORD *)(v0 + 312);
    v114 = *(_QWORD *)(v0 + 272);
    v68(*(_QWORD *)(v0 + 296), v114);
    v68(v113, v114);
    v68(v112, v114);
    sub_10002C8F0(v111, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
    sub_10002C8F0(v110, type metadata accessor for YearInReview.RemoteConfiguration);
    v92 = 3;
    goto LABEL_38;
  }
  sub_10003F198((_QWORD *)(*(_QWORD *)(v0 + 128) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 128) + 40));
  v109 = (_QWORD *)swift_task_alloc(dword_1009E3A2C);
  *(_QWORD *)(v0 + 416) = v109;
  *v109 = v0;
  v109[1] = sub_1003D91E0;
  return sub_100444458(2);
}

BOOL sub_10002D7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  NSString v8;
  id v9;
  _BOOL8 v10;
  uint64_t v12;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(NMSyncDefaults), "sharedDefaults");
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "lastLocalPlaybackDateForBundleID:", v8);

  if (v9)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v9);

    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    v10 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) != 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
    v10 = 0;
  }
  sub_100010960((uint64_t)v6, &qword_1009D7440);
  return v10;
}

uint64_t sub_10002D974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D7440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10002D9BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10002DA14(v2);

  }
}

void sub_10002DA14(uint64_t a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR___BKRootBarCoordinator_rootViewController], "viewIfLoaded");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = objc_msgSend(v5, "windowScene");

      if (v6)
      {
        if (a1)
        {
          v7 = objc_msgSend(v1, "currentTitleForRootBarItem:", a1);
          static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
          v9 = v8;

          v10 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v9);
        }
        else
        {
          v10 = 0;
        }
        objc_msgSend(v6, "setTitle:", v10);

      }
    }
  }
}

uint64_t sub_10002DB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v21[6];
  _BYTE v22[8];
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;

  v3 = (uint64_t *)(a1 + OBJC_IVAR___BKRootBarItem_titleOverride);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
  if ((*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind) & 0x8000000000000000) != 0)
  {
    if (!v4)
    {
      v14 = (uint64_t *)(a1 + OBJC_IVAR___BKRootBarItem_identifier);
      v16 = *v14;
      v15 = (void *)v14[1];
      swift_bridgeObjectRetain(v15);
      _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v16, (unint64_t)v15);
      v18 = v17;
      swift_bridgeObjectRelease(v17);
      if (v18)
      {
        swift_bridgeObjectRelease(v15);
        v19 = 14;
      }
      else
      {
        v25._countAndFlagsBits = v16;
        v25._object = v15;
        v19 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v25);
        if (v19 == 16)
          v19 = 15;
      }
      sub_100047B64(v19, v21);
      v13 = v21[1];
      v12 = v21[2];
      goto LABEL_15;
    }
LABEL_6:
    v11 = 0;
    v12 = *v3;
    v13 = v4;
    goto LABEL_17;
  }
  if (v4)
    goto LABEL_6;
  v5 = (uint64_t *)(a1 + OBJC_IVAR___BKRootBarItem_identifier);
  v7 = *v5;
  v6 = (void *)v5[1];
  swift_bridgeObjectRetain(v6);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v7, (unint64_t)v6);
  v9 = v8;
  swift_bridgeObjectRelease(v8);
  if (v9)
  {
    swift_bridgeObjectRelease(v6);
    v10 = 14;
  }
  else
  {
    v24._countAndFlagsBits = v7;
    v24._object = v6;
    v10 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v24);
    if (v10 == 16)
      v10 = 15;
  }
  sub_100047B64(v10, v21);
  v12 = v21[0];
  v13 = v21[3];
LABEL_15:
  v11 = v21[5];
  sub_1002215B0((uint64_t)v21, (uint64_t)v22);
  if (!v23)
    return 0;
  v4 = 0;
LABEL_17:
  swift_bridgeObjectRetain_n(v4, 2);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v13);
  return v12;
}

void sub_10002DD38(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  _OWORD v24[4];
  uint64_t v25;
  __int128 v26;
  _OWORD v27[3];
  uint64_t v28;
  void *v29;

  v29 = a5;
  v21 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v12 = 0;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v14);
    v16 = *v15;
    v17 = v15[1];
    sub_10000B5E4(*(_QWORD *)(a1 + 56) + 56 * v14, (uint64_t)v27, &qword_1009D7B58);
    *(_QWORD *)&v26 = v16;
    *((_QWORD *)&v26 + 1) = v17;
    v24[2] = v27[1];
    v24[3] = v27[2];
    v25 = v28;
    v24[0] = v26;
    v24[1] = v27[0];
    swift_bridgeObjectRetain(v17);
    sub_10002E1A0((uint64_t)v24, a2, a3, a4, v29);
    sub_100010960((uint64_t)v24, &qword_1009EAE48);
    if (v5)
      goto LABEL_24;
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v12);
  if (v19)
  {
LABEL_19:
    v11 = (v19 - 1) & v19;
    v14 = __clz(__rbit64(v19)) + (v12 << 6);
    goto LABEL_5;
  }
  v20 = v12 + 1;
  if (v12 + 1 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v12 + 2;
  if (v12 + 2 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v12 + 3;
  if (v12 + 3 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v12 + 4;
  if (v12 + 4 >= v22)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
  {
LABEL_18:
    v12 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v12 >= v22)
      goto LABEL_24;
    v19 = *(_QWORD *)(v21 + 8 * v12);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_10002DF54(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  v14 = a3(0);
  v7 = a1;
  v8 = sub_10004CFD4(a4);
  v9 = String.init<A>(describing:)(&v14, v8);
  v11 = v10;
  v12 = (void *)sub_10002DFD8(v9, v10, a3);
  swift_bridgeObjectRelease(v11);
  if (v12)
  {

    v13 = v12;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002DFD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  __int128 v21;
  __int128 v22[2];

  v7 = (uint64_t *)(v3 + OBJC_IVAR___BKServiceCenter_services);
  swift_beginAccess(v7, v20, 32, 0);
  v8 = *v7;
  if (!*(_QWORD *)(v8 + 16))
  {
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    v16 = 0u;
LABEL_9:
    sub_1004EBE74((uint64_t)&v16);
    swift_endAccess(v20);
    return 0;
  }
  swift_bridgeObjectRetain(a2);
  v9 = sub_10004CE80(a1, a2);
  if ((v10 & 1) != 0)
  {
    sub_10002E158(*(_QWORD *)(v8 + 56) + 56 * v9, (uint64_t)&v16);
  }
  else
  {
    v19 = 0;
    v17 = 0u;
    v18 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease(a2);
  v11 = v16;
  if (!(_QWORD)v16)
    goto LABEL_9;
  v12 = *((_QWORD *)&v16 + 1);
  v21 = v16;
  sub_100022840(&v17, (uint64_t)v22);
  swift_endAccess(v20);
  *(_QWORD *)&v16 = v11;
  *((_QWORD *)&v16 + 1) = v12;
  sub_100022840(v22, (uint64_t)&v17);
  swift_unknownObjectRelease(v11);
  v13 = sub_10004CFD4(&qword_1009E8758);
  v14 = a3(0);
  if (swift_dynamicCast(v20, &v17, v13, v14, 6))
    return v20[0];
  return 0;
}

uint64_t type metadata accessor for ReadingActivityService()
{
  return objc_opt_self(BKReadingActivityService);
}

uint64_t sub_10002E158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D7B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002E1A0(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, void *a5)
{
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v32;
  __int128 v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36[2];
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v9 = sub_100027528();
  dispatch_group_enter(v9);

  sub_10002E418(a1 + 32, (uint64_t)v36);
  sub_100022840(v36, (uint64_t)v38);
  v10 = v39;
  v11 = v40;
  sub_10003F198(v38, v39);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v13 = swift_allocObject(&unk_10090F600, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a2);
  v14 = dispatch thunk of ObservableContainer.observe(callback:)(sub_10004E038, v13);
  swift_release(v12);
  swift_release(v13);
  v15 = swift_retain(v14);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
  specialized Array._endMutation()(v18);
  v19 = sub_10002E45C();
  v20 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v34 = *(_QWORD *)a1;
  *((_QWORD *)&v34 + 1) = v20;
  v35 = *(_OWORD *)(a1 + 16);
  v29 = v35;
  sub_10002E418(a1 + 32, (uint64_t)v36);
  sub_10002E418((uint64_t)v38, (uint64_t)v33);
  v21 = swift_allocObject(&unk_10090F810, 144, 7);
  v22 = v36[1];
  *(_OWORD *)(v21 + 48) = v36[0];
  *(_OWORD *)(v21 + 64) = v22;
  *(_QWORD *)(v21 + 80) = v37;
  v23 = v35;
  *(_OWORD *)(v21 + 16) = v34;
  *(_OWORD *)(v21 + 32) = v23;
  sub_100022840(v33, v21 + 88);
  *(_QWORD *)(v21 + 128) = a4;
  *(_QWORD *)(v21 + 136) = a5;
  aBlock[4] = sub_100015704;
  v32 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_10090F828;
  v24 = _Block_copy(aBlock);
  v25 = v32;
  swift_bridgeObjectRetain(v20);
  swift_unknownObjectRetain(v29);
  v26 = a4;
  v27 = a5;
  swift_release(v25);
  objc_msgSend(v19, "addOperationWithBlock:", v24);
  _Block_release(v24);
  swift_release(v14);

  return _s5Books15CurrentPageViewVwxx_0(v38);
}

uint64_t sub_10002E418(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_10002E45C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR___BKServiceCenter____lazy_storage___serviceQueue;
  v2 = *(void **)(v0 + OBJC_IVAR___BKServiceCenter____lazy_storage___serviceQueue);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___BKServiceCenter____lazy_storage___serviceQueue);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
    objc_msgSend(v4, "setQualityOfService:", 25);
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setName:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_10002E518(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "engagementManager"));
  objc_msgSend(v2, "setupSessionDonor");

  v3 = *(void **)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v3, "setupWithLibraryManager:", v4);

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "engagementManager"));
  objc_msgSend(v5, "setupPersonalizationEventDonor:", *(_QWORD *)(a1 + 40));

}

uint64_t BKAppDelegate.engagementManager.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  swift_beginAccess(&unk_100A1E4F9, v6, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_100A1E4F9);
  swift_endAccess(v6);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10004C7B4((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    v2 = type metadata accessor for EngagementManager();
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, v2, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10004A7B8((uint64_t)v6);
    return 0;
  }
}

uint64_t type metadata accessor for EngagementManager()
{
  return objc_opt_self(BKEngagementManager);
}

void sub_10002EDDC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_10002EEEC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;

  v6 = a2;
  v7 = a4;
  if (v7)
  {
    v8 = JSALog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_1006A12D8((uint64_t)v7, v9);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else if (objc_msgSend(v6, "count"))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[BUBag defaultBag](BUBag, "defaultBag"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "countryCode"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1001183BC;
    v12[3] = &unk_1008EB3C8;
    v13 = v6;
    v14 = *(id *)(a1 + 32);
    objc_msgSend(v11, "valueWithCompletion:", v12);

  }
}

void sub_10002F010(id *a1, void *a2)
{
  id v3;
  id WeakRetained;
  uint64_t v5;
  NSObject *v6;
  _QWORD *v7;
  id v8;
  void *v9;
  _QWORD v10[4];
  _QWORD *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  uint8_t buf[4];
  id v17;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    v5 = JSALog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v17 = objc_msgSend(v3, "count");
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Loaded %lu tabs from bag...", buf, 0xCu);
    }

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10011833C;
    v12[3] = &unk_1008EB378;
    objc_copyWeak(&v15, a1 + 6);
    v13 = v3;
    v14 = a1[4];
    v7 = objc_retainBlock(v12);
    if (v7)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *))v7[2])(v7);
      }
      else
      {
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472;
        v10[2] = sub_1001183B0;
        v10[3] = &unk_1008E7818;
        v11 = v7;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

      }
    }

    objc_destroyWeak(&v15);
  }
  else
  {
    v8 = objc_retainBlock(a1[5]);
    v9 = v8;
    if (v8)
      (*((void (**)(id))v8 + 2))(v8);

  }
}

void sub_10002F1F4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10002F2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EA030);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F638();
  v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKMenuController_sceneManager), "primarySceneController");
  v10 = objc_msgSend(v9, "rootBarCoordinator");

  if (v10)
  {
    ObjectType = swift_getObjectType();
    v12 = sub_10001199C(ObjectType);
    v27 = v6;
    v14 = v13;
    swift_unknownObjectRetain(v12);
    swift_unknownObjectRelease(v10);
    v15 = swift_getObjectType();
    v29 = v12;
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    swift_unknownObjectRelease(v12);
    v29 = v16;
    v17 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v28 = (id)static OS_dispatch_queue.main.getter(v17);
    v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009DB470);
    v20 = sub_100030B34((unint64_t *)&unk_1009DCC70, (uint64_t *)&unk_1009DB470, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v21 = sub_100010A68((unint64_t *)&qword_1009D4E00, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    Publisher.receive<A>(on:options:)(&v28, v4, v19, v17, v20, v21);
    sub_100010960((uint64_t)v4, (uint64_t *)&unk_1009D4AE0);

    swift_release(v29);
    v22 = swift_allocObject(&unk_10090D840, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16, v1);
    v23 = sub_100030B34((unint64_t *)&unk_1009EA038, &qword_1009EA030, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v10 = (id)Publisher<>.sink(receiveValue:)(sub_10004EE5C, v22, v5, v23);
    swift_release(v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
  }
  v24 = *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_observeSelectedItemTask);
  *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_observeSelectedItemTask) = v10;
  return swift_release(v24);
}

uint64_t sub_10002F574()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009E9FA8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E9FB0);
  v30 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10004CFD4(&qword_1009E9FB8);
  v33 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v32 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(CFSTR("BKRecentBooksProviderDidChangeNotification"), 0);

  v16 = sub_10004CFD4((uint64_t *)&unk_1009E9FC0);
  v17 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  Publisher.compactMap<A>(_:)(sub_10000C150, 0, v12, v16, v17);
  v18 = sub_10004CFD4((uint64_t *)&unk_1009E9FD0);
  Publishers.CompactMap.map<A>(_:)(sub_1000111A8, 0, v3, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v35 = (id)static OS_dispatch_queue.main.getter(v19);
  v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v2, 1, 1, v20);
  v21 = sub_100030B34((unint64_t *)&unk_1009E9FE0, &qword_1009E9FB0, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v22 = sub_100010A68((unint64_t *)&qword_1009D4E00, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v35, v2, v7, v19, v21, v22);
  sub_100010960((uint64_t)v2, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  v23 = swift_allocObject(&unk_10090D840, 24, 7);
  v24 = v34;
  swift_unknownObjectWeakInit(v23 + 16, v34);
  v25 = sub_100030B34((unint64_t *)&unk_1009E9FF0, &qword_1009E9FB8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v26 = v31;
  v27 = Publisher<>.sink(receiveValue:)(sub_10006B68C, v23, v31, v25);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v26);
  v28 = *(_QWORD *)(v24 + OBJC_IVAR___BKMenuController_observeRecentBooksProviderTask);
  *(_QWORD *)(v24 + OBJC_IVAR___BKMenuController_observeRecentBooksProviderTask) = v27;
  swift_release(v28);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v12);
}

double sub_10002F93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46[3];

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v1);
  v43 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009DCC60);
  v39 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009EA048);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - v11;
  v40 = sub_10004CFD4(&qword_1009EA050);
  v42 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009EA058);
  v16 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  v45 = v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(*(_QWORD *)(v0 + OBJC_IVAR___BKMenuController_libraryCollectionsService)+ OBJC_IVAR____TtC5Books25LibraryCollectionsService__userCollections, v46, 33, 0);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009DCC90);
  Published.projectedValue.getter(v19);
  swift_endAccess(v46);
  v20 = sub_10004CFD4(&qword_1009D7308);
  v21 = sub_100030B34(&qword_1009EA060, (uint64_t *)&unk_1009DCC60, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher.map<A>(_:)(sub_100009130, 0, v3, v20, v21);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v3);
  Publishers.Map.map<A>(_:)(sub_10006B5EC, 0, v6, v20);
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v9, v6);
  v23 = sub_100030B34(&qword_1009EA068, &qword_1009EA048, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v24 = sub_100065370();
  Publisher<>.removeDuplicates()(v6, v23, v24);
  v22(v12, v6);
  v25 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v46[0] = (id)static OS_dispatch_queue.main.getter(v25);
  v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v27 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v43, 1, 1, v26);
  v28 = sub_100030B34(&qword_1009EA078, &qword_1009EA050, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v29 = sub_100010A68((unint64_t *)&qword_1009D4E00, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v30 = v40;
  Publisher.receive<A>(on:options:)(v46, v27, v40, v25, v28, v29);
  sub_100010960(v27, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v30);
  v31 = swift_allocObject(&unk_10090D840, 24, 7);
  v32 = v41;
  swift_unknownObjectWeakInit(v31 + 16);
  v33 = sub_100030B34(&qword_1009EA080, &qword_1009EA058, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v34 = v44;
  v35 = Publisher<>.sink(receiveValue:)(sub_10006B5E4, v31, v44, v33);
  v36 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v18, v34, v36);
  v37 = *(_QWORD *)(v32 + OBJC_IVAR___BKMenuController_observeUserCollectionsTask);
  *(_QWORD *)(v32 + OBJC_IVAR___BKMenuController_observeUserCollectionsTask) = v35;
  *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  return result;
}

uint64_t sub_10002FD70(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  _BYTE *v29;
  char *v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t);
  char v33;
  void (*v34)(char *, uint64_t);
  char v35;
  id v36;
  uint64_t v37;
  char *v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _UNKNOWN **v47;
  objc_class *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  NSString v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t result;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  id v95;
  uint64_t v96;
  char *v97;
  id v98;
  void *v99;
  id v100;
  void *v101;
  char *v102;
  void *v103;
  char *v104;
  id v105;
  unint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  void (*v115)(char *, _QWORD *);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD aBlock[5];
  uint64_t v138;
  char v139[24];
  char v140[24];
  objc_super v141;

  v135 = a2;
  v136 = a3;
  v128 = sub_10004CFD4(&qword_1009D33A8);
  v126 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v125 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10004CFD4(&qword_1009D33B0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v127 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D33B8);
  v132 = *(_QWORD *)(v7 - 8);
  v133 = v7;
  __chkstk_darwin(v7);
  v131 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_10004CFD4(&qword_1009D33C0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = (_QWORD *)sub_10004CFD4(&qword_1009D7940);
  v123 = (char *)*(v124 - 1);
  v10 = __chkstk_darwin(v124);
  v118 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v122 = (char *)&v118 - v12;
  v13 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR___BKRootBarCoordinator_miniPlayerInteraction;
  v18 = objc_allocWithZone((Class)type metadata accessor for PalettePresentationInteraction());
  v19 = v3;
  *(_QWORD *)&v3[v17] = objc_msgSend(v18, "init");
  v20 = &v19[OBJC_IVAR___BKRootBarCoordinator_sceneController];
  swift_unknownObjectWeakInit(&v19[OBJC_IVAR___BKRootBarCoordinator_sceneController], 0);
  v21 = &v19[OBJC_IVAR___BKRootBarCoordinator_presentersProvider];
  swift_unknownObjectWeakInit(&v19[OBJC_IVAR___BKRootBarCoordinator_presentersProvider], 0);
  v22 = OBJC_IVAR___BKRootBarCoordinator_tabBarController;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_tabBarController] = 0;
  v23 = OBJC_IVAR___BKRootBarCoordinator_splitViewController;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_splitViewController] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_fullPlayerViewController] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_miniPlayerViewController] = 0;
  v19[OBJC_IVAR___BKRootBarCoordinator_undockingMiniPlayer] = 0;
  v19[OBJC_IVAR___BKRootBarCoordinator_isMiniPlayerHidden] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_miniPlayerPaletteInteraction] = 0;
  v134 = a1;
  v24 = objc_msgSend(a1, "bk_window");
  if (!v24)
    goto LABEL_18;
  v25 = v24;
  v26 = objc_msgSend(v24, "traitCollection");

  if (!v26)
    goto LABEL_18;
  swift_unknownObjectWeakAssign(v20, v134);
  swift_unknownObjectWeakAssign(v21, v135);
  v27 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
  v28 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StandardItemsCacheManager()), "init");
  v29 = objc_allocWithZone((Class)type metadata accessor for RootBarStandardItemsManager(0));
  v30 = sub_10021ECA8((uint64_t)v27, 0, (uint64_t)v28, v29);
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_standardItemsManager] = v30;
  v31 = v30;
  if (objc_msgSend(v26, "userInterfaceIdiom") == (id)1)
  {
    v32 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 104);
    v32(v16, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v13);
    v33 = isFeatureEnabled(_:)(v16);
    v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v34(v16, v13);
    if ((v33 & 1) == 0)
    {
      v32(v16, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v13);
      v35 = isFeatureEnabled(_:)(v16);
      v34(v16, v13);
      if ((v35 & 1) == 0)
      {
        v90 = (char *)objc_allocWithZone((Class)type metadata accessor for SplitViewController(0));
        v91 = v31;
        v92 = v136;
        v93 = swift_unknownObjectRetain(v136);
        v94 = sub_100220EC0(v93, v91, v90);

        v95 = objc_allocWithZone((Class)type metadata accessor for TabBarController(0));
        v96 = swift_unknownObjectRetain(v92);
        v97 = TabBarController.init(viewControllerProvider:)(v96);
        v98 = objc_msgSend(v97, "view");
        if (v98)
        {
          v99 = v98;
          v100 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
          objc_msgSend(v99, "setBackgroundColor:", v100);

          objc_msgSend(v94, "setViewController:forColumn:", v97, 3);
          v101 = *(void **)&v19[v23];
          *(_QWORD *)&v19[v23] = v94;
          v102 = v94;

          v103 = *(void **)&v19[v22];
          *(_QWORD *)&v19[v22] = v97;
          v104 = v97;

          *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_rootViewController] = v102;
          v41 = v102;
          v105 = objc_msgSend(v26, "horizontalSizeClass");
          v106 = (unint64_t)v94 | 0x8000000000000000;
          if (v105 == (id)2)
          {
            v107 = v41;
          }
          else
          {
            v106 = (unint64_t)v97;
            v107 = v104;
          }
          *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind] = v106;
          v108 = v107;
          swift_beginAccess(*(_QWORD *)&v41[OBJC_IVAR___BKSplitViewController_contentHostingController]+ OBJC_IVAR___BKSplitViewContentHostingController__selectedItem, aBlock, 33, 0);
          v109 = sub_10004CFD4(&qword_1009D33C8);
          v110 = v122;
          Published.projectedValue.getter(v109);
          swift_endAccess(aBlock);
          swift_beginAccess(&v104[OBJC_IVAR___BKTabBarController__cachedSelectedItem], aBlock, 33, 0);
          v111 = v118;
          Published.projectedValue.getter(v109);
          swift_endAccess(aBlock);
          v112 = sub_100030B34(&qword_1009D33D0, &qword_1009D7940, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
          v113 = v119;
          v114 = v124;
          Publisher.merge(with:)(v111, v124, v112);
          v115 = (void (*)(char *, _QWORD *))*((_QWORD *)v123 + 1);
          v115(v111, v114);
          v115(v110, v114);
          v116 = sub_100030B34(&qword_1009D3400, &qword_1009D33C0, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
          v117 = v121;
          v46 = Publisher.eraseToAnyPublisher()(v121, v116);

          (*(void (**)(char *, uint64_t))(v120 + 8))(v113, v117);
          v47 = &off_100919830;
          goto LABEL_7;
        }
        __break(1u);
LABEL_18:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x80000001007B80A0, "Books/RootBarCoordinator.swift", 30, 2, 39, 0);
        __break(1u);
        return result;
      }
    }
  }
  v36 = objc_allocWithZone((Class)type metadata accessor for TabBarController(0));
  v37 = swift_unknownObjectRetain(v136);
  v38 = TabBarController.init(viewControllerProvider:)(v37);
  v39 = *(void **)&v19[v22];
  *(_QWORD *)&v19[v22] = v38;
  v40 = v38;

  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_rootViewController] = v40;
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind] = v38;
  swift_beginAccess(&v40[OBJC_IVAR___BKTabBarController__cachedSelectedItem], aBlock, 33, 0);
  v41 = v40;
  v42 = sub_10004CFD4(&qword_1009D33C8);
  v43 = v122;
  Published.projectedValue.getter(v42);
  swift_endAccess(aBlock);
  v44 = sub_100030B34(&qword_1009D33D0, &qword_1009D7940, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v45 = v124;
  v46 = Publisher.eraseToAnyPublisher()(v124, v44);

  (*((void (**)(char *, _QWORD *))v123 + 1))(v43, v45);
  v47 = &protocol witness table for TabBarController;
LABEL_7:
  *(_QWORD *)&v19[OBJC_IVAR___BKRootBarCoordinator_selectedItemPublisher] = v46;

  v48 = (objc_class *)type metadata accessor for RootBarCoordinator();
  v141.receiver = v19;
  v141.super_class = v48;
  v49 = (char *)objc_msgSendSuper2(&v141, "init");
  v50 = *(_QWORD *)&v49[OBJC_IVAR___BKRootBarCoordinator_splitViewController];
  if (v50)
  {
    v51 = *(_QWORD *)(v50 + OBJC_IVAR___BKSplitViewController_contentHostingController)
        + OBJC_IVAR___BKSplitViewContentHostingController_rootBarCoordinator;
    swift_beginAccess(v51, v140, 1, 0);
    swift_unknownObjectWeakAssign(v51, v49);
  }
  v123 = v31;
  v124 = v26;
  v52 = *(_QWORD *)&v49[OBJC_IVAR___BKRootBarCoordinator_tabBarController];
  if (v52)
  {
    v53 = v52 + OBJC_IVAR___BKTabBarController__rootBarCoordinator;
    swift_beginAccess(v52 + OBJC_IVAR___BKTabBarController__rootBarCoordinator, v139, 1, 0);
    swift_unknownObjectWeakAssign(v53, v49);
  }
  v54 = OBJC_IVAR___BKRootBarCoordinator_selectedItemPublisher;
  aBlock[0] = *(_QWORD *)&v49[OBJC_IVAR___BKRootBarCoordinator_selectedItemPublisher];
  v55 = aBlock[0];
  v56 = swift_allocObject(&unk_1008F4A78, 24, 7);
  swift_unknownObjectWeakInit(v56 + 16, v49);
  v57 = v49;
  swift_retain(v55);
  v58 = sub_10004CFD4((uint64_t *)&unk_1009DB470);
  v59 = sub_100030B34((unint64_t *)&unk_1009DCC70, (uint64_t *)&unk_1009DB470, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v60 = Publisher<>.sink(receiveValue:)(sub_10004EB90, v56, v58, v59);
  swift_release(v56);
  swift_release(aBlock[0]);
  v61 = &v57[OBJC_IVAR___BKRootBarCoordinator_cancellables];
  swift_beginAccess(&v57[OBJC_IVAR___BKRootBarCoordinator_cancellables], aBlock, 33, 0);
  AnyCancellable.store(in:)(v61);
  swift_endAccess(aBlock);
  swift_release(v60);
  v62 = *(_QWORD *)&v49[v54];
  aBlock[0] = v62;
  v63 = type metadata accessor for RootBarItem();
  swift_retain(v62);
  v64 = v125;
  Publisher.compactMap<A>(_:)(sub_10004EB98, 0, v58, v63, v59);
  swift_release(v62);
  v65 = sub_100030B34(&qword_1009D33D8, &qword_1009D33A8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v66 = v127;
  v67 = v128;
  Publisher.removeDuplicates(by:)(sub_10004EE1C, 0, v128, v65);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v64, v67);
  v68 = sub_100030B34(&qword_1009D33E0, &qword_1009D33B0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v69 = v130;
  v70 = v131;
  Publisher.dropFirst(_:)(1, v130, v68);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v66, v69);
  v71 = swift_allocObject(&unk_1008F4AA0, 24, 7);
  *(_QWORD *)(v71 + 16) = v57;
  v72 = sub_100030B34(&qword_1009D33E8, &qword_1009D33B8, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v73 = v57;
  v74 = v133;
  v75 = Publisher<>.sink(receiveValue:)(sub_100221678, v71, v133, v72);
  swift_release(v71);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v70, v74);
  swift_beginAccess(v61, aBlock, 33, 0);
  AnyCancellable.store(in:)(v61);
  swift_endAccess(aBlock);
  swift_release(v75);
  swift_getObjectType();
  aBlock[0] = v41;
  aBlock[0] = ((uint64_t (__cdecl *)())v47[1])();
  v76 = swift_allocObject(&unk_1008F4A78, 24, 7);
  swift_unknownObjectWeakInit(v76 + 16, v73);
  v77 = sub_10004CFD4(&qword_1009D33F0);
  v78 = sub_100030B34(&qword_1009D33F8, &qword_1009D33F0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v79 = Publisher<>.sink(receiveValue:)(sub_10004EE14, v76, v77, v78);
  swift_release(v76);
  swift_release(aBlock[0]);
  swift_beginAccess(v61, aBlock, 33, 0);
  AnyCancellable.store(in:)(v61);
  swift_endAccess(aBlock);
  swift_release(v79);
  v80 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v81 = objc_msgSend(v80, "appLaunchCoordinator");

  v82 = String._bridgeToObjectiveC()();
  v83 = swift_allocObject(&unk_1008F4A78, 24, 7);
  swift_unknownObjectWeakInit(v83 + 16, v73);
  v84 = swift_allocObject(&unk_1008F4AC8, 32, 7);
  v85 = v123;
  *(_QWORD *)(v84 + 16) = v83;
  *(_QWORD *)(v84 + 24) = v85;
  aBlock[4] = sub_100069E7C;
  v138 = v84;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004DCB4;
  aBlock[3] = &unk_1008F4AE0;
  v86 = _Block_copy(aBlock);
  v87 = v138;
  v88 = v85;
  swift_release(v87);
  objc_msgSend(v81, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 65, v82, v86);

  swift_unknownObjectRelease(v135);
  swift_unknownObjectRelease(v136);
  _Block_release(v86);

  swift_unknownObjectRelease(v81);
  return (uint64_t)v73;
}

uint64_t sub_100030B34(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100030B74(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100030B74(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100030BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t inited;
  char *v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  Class isa;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  Class v79;
  void *v80;
  _QWORD *v81;
  Class v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  Class v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  Class v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, unint64_t, uint64_t);
  void (*v109)(char *, uint64_t);
  char v110[136];
  _QWORD *v111;

  v2 = sub_10004CFD4(&qword_1009CEEE0);
  __chkstk_darwin(v2);
  v104 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for Date(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EC930);
  __chkstk_darwin(v5);
  v102 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for ReadingHistory.Day(0);
  v101 = *(_QWORD *)(v105 - 8);
  v7 = __chkstk_darwin(v105);
  v103 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v100 = (char *)&v95 - v9;
  v10 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ReadingHistory.DayEntry(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = a1;
  v18 = ReadingHistory.State.readingHistory.getter(v15);
  v19 = v18;
  v20 = *(_QWORD *)(v18 + 16);
  if (v20)
  {
    v99 = v12;
    v111 = _swiftEmptyArrayStorage;
    sub_100064514(0, v20, 0);
    v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v95 = v19;
    v22 = v19 + v21;
    v109 = *(void (**)(char *, uint64_t))(v14 + 72);
    v108 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v23 = v14;
    do
    {
      v108(v17, v22, v13);
      v24 = sub_1000314CC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v25 = v111;
      if ((swift_isUniquelyReferenced_nonNull_native(v111) & 1) == 0)
      {
        sub_100064514(0, v25[2] + 1, 1);
        v25 = v111;
      }
      v27 = v25[2];
      v26 = v25[3];
      if (v27 >= v26 >> 1)
      {
        sub_100064514(v26 > 1, v27 + 1, 1);
        v25 = v111;
      }
      v25[2] = v27 + 1;
      v25[v27 + 4] = v24;
      v22 += (unint64_t)v109;
      --v20;
      v14 = v23;
    }
    while (v20);
    swift_bridgeObjectRelease(v95);
    v12 = v99;
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    v25 = _swiftEmptyArrayStorage;
  }
  v28 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = JSONEncoder.init()();
  v111 = v25;
  v30 = sub_10004CFD4(&qword_1009D6FD8);
  v31 = sub_100065280();
  v32 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v111, v30, v31);
  v34 = v33;
  v35 = swift_release(v29);
  static String.Encoding.utf8.getter(v35);
  v108 = (void (*)(char *, unint64_t, uint64_t))String.init(data:encoding:)(v32, v34, v12);
  v37 = v36;
  v38 = sub_10005EE1C(v32, v34);
  LODWORD(v99) = static os_log_type_t.default.getter(v38);
  sub_100009B88();
  v39 = (void *)static OS_os_log.readingActivity.getter();
  v40 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v41 = swift_allocObject(v40, 152, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100712B60;
  v42 = v106;
  MutableObservableContainer.value.getter(&v111);
  LODWORD(v29) = v111;
  v43 = sub_10002BE50();
  v44 = v43;
  v45 = 0x6C616974696E69;
  if ((_DWORD)v29 == 2)
    v45 = 0x64657461647075;
  *(_QWORD *)(v41 + 56) = &type metadata for String;
  *(_QWORD *)(v41 + 64) = v43;
  *(_QWORD *)(v41 + 32) = v45;
  *(_QWORD *)(v41 + 40) = 0xE700000000000000;
  v46 = v100;
  v47 = ((uint64_t (*)(void))ReadingHistory.State.today.getter)();
  v48 = ReadingHistory.Day.readingTime.getter(v47);
  v109 = *(void (**)(char *, uint64_t))(v101 + 8);
  v109(v46, v105);
  *(_QWORD *)(v41 + 96) = &type metadata for Int;
  *(_QWORD *)(v41 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v41 + 72) = v48;
  *(_QWORD *)(v41 + 136) = &type metadata for String;
  *(_QWORD *)(v41 + 144) = v44;
  v49 = 0x29726F72726528;
  if (v37)
  {
    v49 = (uint64_t)v108;
    v50 = v37;
  }
  else
  {
    v50 = 0xE700000000000000;
  }
  *(_QWORD *)(v41 + 112) = v49;
  *(_QWORD *)(v41 + 120) = v50;
  os_log(_:dso:log:_:_:)(v99, &_mh_execute_header, v39, "Showing %{public}s Today's time read: %{public}d, history: %@", 61, 2, v41, v95);

  v51 = swift_bridgeObjectRelease(v41);
  v52 = *(void **)(v42 + OBJC_IVAR___BKReadingActivityService_allTimeRecordStreakData);
  v53 = (uint64_t)v102;
  ReadingHistory.State.longestStreak.getter(v51);
  v54 = type metadata accessor for ReadingHistory.Streak(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
  {
    sub_100010960(v53, &qword_1009EC930);
    v56 = 0;
  }
  else
  {
    v57 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v58 = v53;
    inited = swift_initStackObject(v57, v110);
    *(_OWORD *)(inited + 16) = xmmword_10070FC00;
    *(_QWORD *)(inited + 32) = 0x65746144646E65;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    v60 = v96;
    v61 = ReadingHistory.Streak.endDate.getter();
    v62 = Date.timeIntervalSince1970.getter(v61);
    v63 = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v60, v98);
    *(double *)(inited + 48) = v62;
    *(_QWORD *)(inited + 72) = &type metadata for Double;
    *(_QWORD *)(inited + 80) = 0x6874676E656CLL;
    *(_QWORD *)(inited + 88) = 0xE600000000000000;
    v64 = ReadingHistory.Streak.length.getter(v63);
    *(_QWORD *)(inited + 120) = &type metadata for Int;
    *(_QWORD *)(inited + 96) = v64;
    v65 = sub_10003FB0C(inited);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v58, v54);
    v111 = (_QWORD *)v65;
    v66 = sub_10004CFD4(&qword_1009D3090);
    v56 = _bridgeAnythingToObjectiveC<A>(_:)(&v111, v66);
    sub_100010960((uint64_t)&v111, &qword_1009D3090);
  }
  objc_msgSend(v52, "updateValue:", v56);
  v67 = swift_unknownObjectRelease(v56);
  v68 = v106;
  v69 = *(void **)(v106 + OBJC_IVAR___BKReadingActivityService_readingTimeToday);
  v70 = v103;
  v71 = v107;
  v72 = ReadingHistory.State.today.getter(v67);
  ReadingHistory.Day.readingTime.getter(v72);
  v73 = v105;
  v74 = v109;
  v109(v70, v105);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v69, "updateValue:", isa);

  v76 = *(void **)(v68 + OBJC_IVAR___BKReadingActivityService_readingIndicatorTimeToday);
  v78 = ReadingHistory.State.today.getter(v77);
  ReadingHistory.Day.readingTime.getter(v78);
  v74(v70, v73);
  v79 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v76, "updateValue:", v79);

  v80 = *(void **)(v68 + OBJC_IVAR___BKReadingActivityService_readingHistory);
  v81 = sub_1000644DC((uint64_t)v25);
  swift_bridgeObjectRelease(v25);
  sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  v82 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v81);
  objc_msgSend(v80, "updateArray:", v82);

  v83 = *(void **)(v68 + OBJC_IVAR___BKReadingActivityService_dailyGoal);
  v85 = ReadingHistory.State.today.getter(v84);
  ReadingHistory.Day.goal.getter(v85);
  v74(v70, v73);
  v86 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v83, "updateValue:", v86);

  v87 = *(void **)(v68 + OBJC_IVAR___BKReadingActivityService_isDailyGoalCompleted);
  v89 = ReadingHistory.State.today.getter(v88);
  ReadingHistory.Day.isStreakDay.getter(v89);
  v74(v70, v73);
  v90 = Bool._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v87, "updateValue:", v90);

  v91 = type metadata accessor for ReadingHistory.State(0);
  v92 = *(_QWORD *)(v91 - 8);
  v93 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v104, v71, v91);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v93, 0, 1, v91);
  CurrentValueSubject.send(_:)(v93);
  return sub_100010960(v93, &qword_1009CEEE0);
}

unint64_t sub_1000314CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[168];

  v0 = type metadata accessor for ReadingHistory.Day(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v23[-v5 - 8];
  v7 = sub_10004CFD4(&qword_1009ECA50);
  inited = swift_initStackObject(v7, v23);
  *(_OWORD *)(inited + 16) = xmmword_1007147F0;
  *(_QWORD *)(inited + 32) = 1702125924;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = ReadingHistory.DayEntry.date.getter();
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = 0x64616552656D6974;
  *(_QWORD *)(inited + 72) = 0xEF73646E6F636553;
  v10 = ReadingHistory.DayEntry.day.getter();
  v11 = ReadingHistory.Day.readingTime.getter(v10);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v6, v0);
  v22 = v11;
  *(_QWORD *)(inited + 80) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  *(_QWORD *)(inited + 88) = v13;
  *(_QWORD *)(inited + 96) = 0xD000000000000012;
  *(_QWORD *)(inited + 104) = 0x80000001007D4E10;
  v14 = ReadingHistory.DayEntry.day.getter();
  v15 = ReadingHistory.Day.goal.getter(v14);
  v12(v6, v0);
  v22 = v15;
  *(_QWORD *)(inited + 112) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  *(_QWORD *)(inited + 120) = v16;
  *(_QWORD *)(inited + 128) = 0x6B61657274537369;
  *(_QWORD *)(inited + 136) = 0xEB00000000796144;
  v17 = ReadingHistory.DayEntry.day.getter();
  v18 = ReadingHistory.Day.isStreakDay.getter(v17);
  v12(v4, v0);
  v19 = 1702195828;
  if ((v18 & 1) == 0)
    v19 = 0x65736C6166;
  v20 = 0xE500000000000000;
  if ((v18 & 1) != 0)
    v20 = 0xE400000000000000;
  *(_QWORD *)(inited + 144) = v19;
  *(_QWORD *)(inited + 152) = v20;
  return sub_1000316DC(inited);
}

unint64_t sub_1000316DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4((uint64_t *)&unk_1009D7A30);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_10004CE80(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000317FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *);
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t (*v191)(char *, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(char *, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t (*v214)(char *, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  unsigned int v387;
  void (*v388)(char *);
  uint64_t v389;
  void (*v390)(char *, uint64_t);
  uint64_t v391;
  uint64_t (*v392)(char *, uint64_t);
  unsigned int v393;
  void (*v394)(char *, uint64_t, uint64_t);
  _QWORD v395[3];
  uint64_t v396;
  uint64_t v397;

  v2 = type metadata accessor for CallbackScope(0);
  v383 = *(_QWORD *)(v2 - 8);
  v384 = v2;
  __chkstk_darwin(v2);
  v382 = (char *)&v373 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Scorer(0);
  v380 = *(_QWORD *)(v4 - 8);
  v381 = v4;
  __chkstk_darwin(v4);
  v379 = (char *)&v373 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v378 = type metadata accessor for GenreRecommendationSource(0);
  v377 = *(_QWORD *)(v378 - 8);
  __chkstk_darwin(v378);
  v376 = (char *)&v373 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CollectionSource(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v385 = (char *)&v373 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Scope(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v373 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = ProxyContainer.public.getter(v12);
  v16 = sub_10004CFD4(&qword_1009E3C78);
  v17 = RegistrationContainer.register<A>(_:name:factory:)(v16, 0, 0, sub_10006C1F8, 0, v16);
  swift_release(v15);
  v18 = *(void (**)(char *))(v11 + 104);
  v19 = enum case for Scope.singleton(_:);
  v18(v14);
  v20 = v18;
  v21 = Definition.inScope(_:)(v14);
  swift_release(v21);
  swift_release(v17);
  v22 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v23 = v22(v14, v10);
  v24 = v22;
  v25 = ProxyContainer.public.getter(v23);
  v26 = sub_10004CFD4(&qword_1009E3C80);
  v27 = RegistrationContainer.register<A>(_:name:factory:)(v26, 0, 0, sub_100449BF0, 0, v26);
  swift_release(v25);
  v393 = v19;
  v394 = (void (*)(char *, uint64_t, uint64_t))v20;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v14, v19, v10);
  v28 = Definition.inScope(_:)(v14);
  swift_release(v28);
  swift_release(v27);
  v29 = v24(v14, v10);
  v392 = v24;
  v30 = ProxyContainer.public.getter(v29);
  v31 = sub_10004CFD4(&qword_1009E3C88);
  v32 = RegistrationContainer.register<A>(_:name:factory:)(v31, 0, 0, sub_100449C04, 0, v31);
  swift_release(v30);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v14, v19, v10);
  v33 = Definition.inScope(_:)(v14);
  swift_release(v33);
  swift_release(v32);
  v34 = v24(v14, v10);
  v389 = a1;
  v35 = ProxyContainer.public.getter(v34);
  v36 = sub_10004CFD4(&qword_1009E3C90);
  v387 = enum case for CollectionSource.mediaAPI(_:);
  v37 = v8;
  v388 = *(void (**)(char *))(v8 + 104);
  v38 = v385;
  v388(v385);
  v386 = sub_10003E1A0(&qword_1009E3C98, 255, (uint64_t (*)(uint64_t))&type metadata accessor for CollectionSource, (uint64_t)&protocol conformance descriptor for CollectionSource);
  v39 = RawRepresentable<>.containerName.getter(v7, v386);
  v41 = v40;
  v390 = *(void (**)(char *, uint64_t))(v37 + 8);
  v390(v38, v7);
  v42 = RegistrationContainer.register<A>(_:name:factory:)(v36, v39, v41, sub_100449C20, 0, v36);
  swift_bridgeObjectRelease(v41);
  swift_release(v35);
  v391 = v10;
  v394(v14, v393, v10);
  v43 = Definition.inScope(_:)(v14);
  swift_release(v43);
  swift_release(v42);
  v44 = v392(v14, v10);
  v45 = ProxyContainer.public.getter(v44);
  v46 = sub_10004CFD4(&qword_1009E3CA0);
  v47 = v387;
  v48 = (void (*)(char *, uint64_t, uint64_t))v388;
  ((void (*)(char *, _QWORD, uint64_t))v388)(v38, v387, v7);
  v374 = v7;
  v49 = v386;
  v50 = RawRepresentable<>.containerName.getter(v7, v386);
  v52 = v51;
  v390(v38, v7);
  v53 = RegistrationContainer.register<A>(_:name:factory:)(v46, v50, v52, sub_100449CD4, 0, v46);
  swift_bridgeObjectRelease(v52);
  swift_release(v45);
  v54 = v391;
  v394(v14, v393, v391);
  v55 = Definition.inScope(_:)(v14);
  swift_release(v55);
  swift_release(v53);
  v56 = v392;
  v57 = v392(v14, v54);
  v58 = ProxyContainer.public.getter(v57);
  v59 = sub_10004CFD4(&qword_1009E3CA8);
  v60 = v47;
  v61 = v374;
  v48(v38, v60, v374);
  v62 = v38;
  v63 = RawRepresentable<>.containerName.getter(v61, v49);
  v65 = v64;
  v390(v38, v61);
  v66 = RegistrationContainer.register<A>(_:name:factory:)(v59, v63, v65, sub_100449CF0, 0, v59);
  swift_bridgeObjectRelease(v65);
  swift_release(v58);
  v67 = v393;
  v68 = v391;
  v394(v14, v393, v391);
  v69 = Definition.inScope(_:)(v14);
  swift_release(v69);
  swift_release(v66);
  v70 = v56(v14, v68);
  v71 = ProxyContainer.public.getter(v70);
  v72 = sub_10004CFD4(&qword_1009E3CB0);
  v73 = v61;
  ((void (*)(char *, _QWORD, uint64_t))v388)(v62, v387, v61);
  v74 = v61;
  v75 = v386;
  v76 = RawRepresentable<>.containerName.getter(v74, v386);
  v78 = v77;
  v390(v62, v73);
  v79 = RegistrationContainer.register<A>(_:name:factory:)(v72, v76, v78, sub_100449D0C, 0, v72);
  swift_bridgeObjectRelease(v78);
  swift_release(v71);
  v80 = v391;
  v394(v14, v67, v391);
  v81 = Definition.inScope(_:)(v14);
  swift_release(v81);
  swift_release(v79);
  v82 = v392;
  v83 = v392(v14, v80);
  v84 = ProxyContainer.public.getter(v83);
  v85 = sub_10004CFD4(&qword_1009E3CB8);
  v86 = v385;
  ((void (*)(char *, _QWORD, uint64_t))v388)(v385, v387, v73);
  v87 = v73;
  v88 = v73;
  v89 = v86;
  v90 = RawRepresentable<>.containerName.getter(v87, v75);
  v92 = v91;
  v390(v86, v88);
  v93 = RegistrationContainer.register<A>(_:name:factory:)(v85, v90, v92, sub_100449D28, 0, v85);
  swift_bridgeObjectRelease(v92);
  swift_release(v84);
  v94 = v393;
  v95 = v391;
  v96 = v394;
  v394(v14, v393, v391);
  v97 = Definition.inScope(_:)(v14);
  swift_release(v97);
  swift_release(v93);
  v98 = v82(v14, v95);
  v99 = ProxyContainer.public.getter(v98);
  v100 = sub_10004CFD4(&qword_1009E3CC0);
  v101 = RegistrationContainer.register<A>(_:name:factory:)(v100, 0, 0, sub_100449D44, 0, v100);
  swift_release(v99);
  v96(v14, v94, v95);
  v102 = Definition.inScope(_:)(v14);
  swift_release(v102);
  swift_release(v101);
  v103 = v82(v14, v95);
  v104 = ProxyContainer.public.getter(v103);
  v105 = sub_10004CFD4(&qword_1009E3CC8);
  ((void (*)(char *, _QWORD, uint64_t))v388)(v89, enum case for CollectionSource.appleMediaDiscovery(_:), v88);
  v106 = RawRepresentable<>.containerName.getter(v88, v386);
  v108 = v107;
  v390(v89, v88);
  v109 = RegistrationContainer.register<A>(_:name:factory:)(v105, v106, v108, sub_100449D60, 0, v105);
  swift_bridgeObjectRelease(v108);
  swift_release(v104);
  v110 = v393;
  v111 = v95;
  v112 = v95;
  v113 = v394;
  v394(v14, v393, v112);
  v114 = Definition.inScope(_:)(v14);
  swift_release(v114);
  swift_release(v109);
  v115 = v82(v14, v111);
  v116 = ProxyContainer.public.getter(v115);
  v117 = sub_10004CFD4(&qword_1009E3CD0);
  v118 = RegistrationContainer.register<A>(_:name:factory:)(v117, 0, 0, sub_100449D7C, 0, v117);
  swift_release(v116);
  v113(v14, v110, v111);
  v119 = Definition.inScope(_:)(v14);
  swift_release(v119);
  swift_release(v118);
  v120 = v82(v14, v111);
  v121 = ProxyContainer.public.getter(v120);
  v122 = sub_10004CFD4(&qword_1009E3CD8);
  v123 = RegistrationContainer.register<A>(_:name:factory:)(v122, 0, 0, sub_100449D98, 0, v122);
  swift_release(v121);
  v113(v14, v110, v111);
  v124 = Definition.inScope(_:)(v14);
  swift_release(v124);
  swift_release(v123);
  v125 = v82(v14, v111);
  v126 = ProxyContainer.public.getter(v125);
  v127 = sub_10004CFD4(&qword_1009E3CE0);
  v128 = RegistrationContainer.register<A>(_:name:factory:)(v127, 0, 0, sub_100449DB4, 0, v127);
  swift_release(v126);
  v113(v14, v110, v111);
  v129 = Definition.inScope(_:)(v14);
  swift_release(v129);
  swift_release(v128);
  v130 = v82(v14, v111);
  v131 = ProxyContainer.public.getter(v130);
  v132 = sub_10004CFD4(&qword_1009E3CE8);
  v133 = RegistrationContainer.register<A>(_:name:factory:)(v132, 0, 0, sub_100449DD0, 0, v132);
  swift_release(v131);
  v113(v14, v110, v111);
  v134 = Definition.inScope(_:)(v14);
  swift_release(v134);
  swift_release(v133);
  v135 = v82(v14, v111);
  v136 = ProxyContainer.public.getter(v135);
  v137 = sub_10004CFD4(&qword_1009E3CF0);
  v138 = RegistrationContainer.register<A>(_:name:factory:)(v137, 0, 0, sub_100449E84, 0, v137);
  swift_release(v136);
  v113(v14, v110, v111);
  v139 = Definition.inScope(_:)(v14);
  swift_release(v139);
  swift_release(v138);
  v140 = v82(v14, v111);
  v141 = ProxyContainer.public.getter(v140);
  v142 = type metadata accessor for Environment(0);
  v143 = v375;
  swift_retain(v375);
  v144 = RegistrationContainer.register<A>(_:name:factory:)(v142, 0, 0, sub_10044B27C, v143, v142);
  swift_release(v144);
  swift_release(v141);
  v145 = swift_release(v143);
  v146 = ProxyContainer.public.getter(v145);
  v147 = type metadata accessor for EnvironmentType(0);
  v148 = RegistrationContainer.register<A>(_:name:factory:)(v147, 0, 0, sub_10044A050, 0, v147);
  swift_release(v148);
  v149 = swift_release(v146);
  v150 = ProxyContainer.public.getter(v149);
  v395[0] = type metadata accessor for EnvironmentOverride(0);
  v151 = sub_10004CFD4(&qword_1009E3CF8);
  v152 = String.init<A>(describing:)(v395, v151);
  v154 = v153;
  swift_retain(v143);
  v155 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for String, v152, v154, sub_10044B284, v143, &type metadata for String);
  swift_release(v155);
  swift_release(v150);
  swift_bridgeObjectRelease(v154);
  v156 = swift_release(v143);
  v157 = ProxyContainer.public.getter(v156);
  v395[0] = type metadata accessor for UseV2AndMetadata(0);
  v158 = sub_10004CFD4(&qword_1009E3D00);
  v159 = String.init<A>(describing:)(v395, v158);
  v161 = v160;
  swift_retain(v143);
  v162 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for Bool, v159, v161, sub_10044B28C, v143, &type metadata for Bool);
  swift_release(v162);
  swift_release(v157);
  swift_bridgeObjectRelease(v161);
  v163 = swift_release(v143);
  v164 = ProxyContainer.public.getter(v163);
  v165 = sub_10004CFD4(&qword_1009E3D08);
  v166 = v377;
  v390 = *(void (**)(char *, uint64_t))(v377 + 104);
  v167 = v376;
  v168 = v378;
  ((void (*)(char *, _QWORD, uint64_t))v390)(v376, enum case for GenreRecommendationSource.appleMediaDiscovery(_:), v378);
  v169 = sub_10003E1A0(&qword_1009E3D10, 255, (uint64_t (*)(uint64_t))&type metadata accessor for GenreRecommendationSource, (uint64_t)&protocol conformance descriptor for GenreRecommendationSource);
  v170 = RawRepresentable<>.containerName.getter(v168, v169);
  v172 = v171;
  v173 = *(void (**)(char *, uint64_t))(v166 + 8);
  v173(v167, v168);
  v174 = RegistrationContainer.register<A>(_:name:factory:)(v165, v170, v172, sub_10044A370, 0, v165);
  swift_bridgeObjectRelease(v172);
  swift_release(v164);
  v175 = v393;
  v176 = v391;
  v177 = v394;
  v394(v14, v393, v391);
  v178 = Definition.inScope(_:)(v14);
  swift_release(v178);
  swift_release(v174);
  v179 = v392(v14, v176);
  v180 = ProxyContainer.public.getter(v179);
  v181 = v167;
  ((void (*)(char *, _QWORD, uint64_t))v390)(v167, enum case for GenreRecommendationSource.onDevicePersonalization(_:), v168);
  v182 = v168;
  v183 = v168;
  v184 = v181;
  v185 = RawRepresentable<>.containerName.getter(v182, v169);
  v187 = v186;
  v173(v184, v183);
  v188 = RegistrationContainer.register<A>(_:name:factory:)(v165, v185, v187, sub_10044A38C, 0, v165);
  swift_bridgeObjectRelease(v187);
  swift_release(v180);
  v189 = v391;
  v177(v14, v175, v391);
  v190 = Definition.inScope(_:)(v14);
  swift_release(v190);
  swift_release(v188);
  v191 = v392;
  v192 = v392(v14, v189);
  v193 = ProxyContainer.public.getter(v192);
  v194 = sub_10004CFD4(&qword_1009E3D18);
  v195 = RegistrationContainer.register<A>(_:name:factory:)(v194, 0, 0, sub_10044A3A8, 0, v194);
  swift_release(v193);
  v177(v14, v175, v189);
  v196 = Definition.inScope(_:)(v14);
  swift_release(v196);
  swift_release(v195);
  v197 = v189;
  v198 = v191(v14, v189);
  v199 = ProxyContainer.public.getter(v198);
  v200 = sub_10004CFD4(&qword_1009E3D20);
  v201 = v379;
  v202 = v380;
  v203 = v381;
  (*(void (**)(char *, _QWORD, uint64_t))(v380 + 104))(v379, enum case for Scorer.appleMediaDiscovery(_:), v381);
  v204 = sub_10003E1A0(&qword_1009E3D28, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Scorer, (uint64_t)&protocol conformance descriptor for Scorer);
  v205 = RawRepresentable<>.containerName.getter(v203, v204);
  v207 = v206;
  (*(void (**)(char *, uint64_t))(v202 + 8))(v201, v203);
  v208 = RegistrationContainer.register<A>(_:name:factory:)(v200, v205, v207, sub_10044A3C4, 0, v200);
  swift_bridgeObjectRelease(v207);
  swift_release(v199);
  v209 = v393;
  v210 = v394;
  v394(v14, v393, v197);
  v211 = Definition.inScope(_:)(v14);
  swift_release(v211);
  swift_release(v208);
  v212 = v197;
  v213 = v197;
  v214 = v392;
  v215 = v392(v14, v212);
  v216 = ProxyContainer.public.getter(v215);
  v217 = type metadata accessor for MCatalogService(0);
  v218 = RegistrationContainer.register<A>(_:name:factory:)(v217, 0, 0, &j___s14BookFoundation15MCatalogServiceV0A4CoreE7defaultACvgZ, 0, v217);
  swift_release(v218);
  v219 = swift_release(v216);
  v220 = ProxyContainer.public.getter(v219);
  v221 = sub_10004CFD4((uint64_t *)&unk_1009E3D30);
  v222 = RegistrationContainer.register<A>(_:name:factory:)(v221, 0, 0, sub_10044A3E4, 0, v221);
  swift_release(v220);
  v210(v14, v209, v213);
  v223 = Definition.inScope(_:)(v14);
  swift_release(v223);
  swift_release(v222);
  v224 = v214(v14, v213);
  v225 = ProxyContainer.public.getter(v224);
  v226 = sub_10004CFD4(&qword_1009DECA8);
  v227 = RegistrationContainer.register<A>(_:name:factory:)(v226, 0, 0, sub_10044A400, 0, v226);
  swift_release(v225);
  v210(v14, v209, v213);
  v228 = Definition.inScope(_:)(v14);
  swift_release(v228);
  swift_release(v227);
  v229 = v214(v14, v213);
  v230 = ProxyContainer.private.getter(v229);
  v231 = sub_10004CFD4(&qword_1009E3D40);
  v232 = RegistrationContainer.register<A>(_:name:factory:)(v231, 0, 0, sub_10044A414, 0, v231);
  swift_release(v232);
  v233 = swift_release(v230);
  v234 = ProxyContainer.private.getter(v233);
  v235 = type metadata accessor for AccountAccessRequirement();
  v236 = RegistrationContainer.register<A>(_:name:factory:)(v235, 0, 0, sub_10044A428, 0, v235);
  swift_release(v234);
  v210(v14, v209, v213);
  v237 = Definition.inScope(_:)(v14);
  swift_release(v237);
  swift_release(v236);
  v238 = v214(v14, v213);
  v239 = ProxyContainer.private.getter(v238);
  v240 = type metadata accessor for ExperimentIDsCookieParser();
  v241 = RegistrationContainer.register<A>(_:name:factory:)(v240, 0, 0, sub_10044A43C, 0, v240);
  swift_release(v239);
  v210(v14, v209, v213);
  v242 = Definition.inScope(_:)(v14);
  swift_release(v242);
  swift_release(v241);
  v243 = v214(v14, v213);
  v244 = ProxyContainer.private.getter(v243);
  v245 = type metadata accessor for GenreRecommendationManager();
  v246 = RegistrationContainer.register<A>(_:name:factory:)(v245, 0, 0, sub_10044A45C, 0, v245);
  swift_release(v244);
  v210(v14, v209, v213);
  v247 = Definition.inScope(_:)(v14);
  swift_release(v247);
  swift_release(v246);
  v248 = v214(v14, v213);
  v249 = ProxyContainer.private.getter(v248);
  v250 = type metadata accessor for ExperimentIDsHeaderValueFormatter();
  v251 = RegistrationContainer.register<A>(_:name:factory:)(v250, 0, 0, sub_10044A610, 0, v250);
  swift_release(v249);
  v210(v14, v209, v213);
  v252 = Definition.inScope(_:)(v14);
  swift_release(v252);
  swift_release(v251);
  v253 = v214(v14, v213);
  v254 = ProxyContainer.private.getter(v253);
  v255 = type metadata accessor for PaidStorefrontAccessRequirement();
  v256 = RegistrationContainer.register<A>(_:name:factory:)(v255, 0, 0, sub_10044A630, 0, v255);
  swift_release(v254);
  v210(v14, v209, v213);
  v257 = Definition.inScope(_:)(v14);
  swift_release(v257);
  swift_release(v256);
  v258 = v214(v14, v213);
  v259 = ProxyContainer.private.getter(v258);
  v260 = sub_10004CFD4(&qword_1009E3D48);
  v261 = RegistrationContainer.register<A>(_:name:factory:)(v260, 0, 0, sub_10044A6AC, 0, v260);
  swift_release(v261);
  v262 = swift_release(v259);
  v263 = ProxyContainer.private.getter(v262);
  v264 = type metadata accessor for AMSEngagementService();
  v265 = RegistrationContainer.register<A>(_:name:factory:)(v264, 0, 0, sub_10044A70C, 0, v264);
  swift_release(v263);
  v210(v14, v209, v213);
  v266 = Definition.inScope(_:)(v14);
  swift_release(v266);
  swift_release(v265);
  v267 = v214(v14, v213);
  v268 = ProxyContainer.private.getter(v267);
  v269 = type metadata accessor for AMDBookScorer();
  v270 = RegistrationContainer.register<A>(_:name:factory:)(v269, 0, 0, sub_10044A720, 0, v269);
  swift_release(v268);
  v210(v14, v209, v213);
  v271 = Definition.inScope(_:)(v14);
  swift_release(v271);
  swift_release(v270);
  v272 = v214(v14, v213);
  v273 = ProxyContainer.private.getter(v272);
  v274 = type metadata accessor for AMDCollectionService();
  v275 = RegistrationContainer.register<A>(_:name:factory:)(v274, 0, 0, sub_10044A72C, 0, v274);
  swift_release(v273);
  v210(v14, v209, v213);
  v276 = Definition.inScope(_:)(v14);
  swift_release(v276);
  swift_release(v275);
  v277 = v214(v14, v213);
  v278 = ProxyContainer.private.getter(v277);
  v279 = type metadata accessor for AMDGenreRecommendationService();
  v280 = RegistrationContainer.register<A>(_:name:factory:)(v279, 0, 0, sub_10044A738, 0, v279);
  swift_release(v278);
  v210(v14, v209, v213);
  v281 = Definition.inScope(_:)(v14);
  swift_release(v281);
  swift_release(v280);
  v282 = v214(v14, v213);
  v283 = ProxyContainer.private.getter(v282);
  v284 = sub_100009E04(0, &qword_1009E3D50, JSACookieStorage_ptr);
  v285 = RegistrationContainer.register<A>(_:name:factory:)(v284, 0, 0, sub_10044A7FC, 0, v284);
  swift_release(v285);
  v286 = swift_release(v283);
  v287 = ProxyContainer.private.getter(v286);
  v288 = type metadata accessor for MediaAPIMetadataService(0);
  v289 = RegistrationContainer.register<A>(_:name:factory:)(v288, 0, 0, sub_10044A834, 0, v288);
  swift_release(v287);
  v210(v14, v209, v213);
  v290 = Definition.inScope(_:)(v14);
  swift_release(v290);
  swift_release(v289);
  v291 = v214(v14, v213);
  v292 = ProxyContainer.private.getter(v291);
  v293 = type metadata accessor for MediaAPIBooksByAuthorsService(0);
  v294 = RegistrationContainer.register<A>(_:name:factory:)(v293, 0, 0, sub_10044A984, 0, v293);
  swift_release(v292);
  v210(v14, v209, v213);
  v295 = Definition.inScope(_:)(v14);
  swift_release(v295);
  swift_release(v294);
  v296 = v214(v14, v213);
  v297 = ProxyContainer.private.getter(v296);
  v298 = type metadata accessor for MetadataCache(0);
  v299 = RegistrationContainer.register<A>(_:name:factory:)(v298, 0, 0, sub_10044AA7C, 0, v298);
  swift_release(v297);
  v210(v14, v209, v213);
  v300 = Definition.inScope(_:)(v14);
  swift_release(v300);
  swift_release(v299);
  v301 = v214(v14, v213);
  v302 = ProxyContainer.private.getter(v301);
  v303 = sub_100009E04(0, &qword_1009E3D58, BUBag_ptr);
  v304 = RegistrationContainer.register<A>(_:name:factory:)(v303, 0, 0, sub_10044AB6C, 0, v303);
  swift_release(v304);
  v305 = swift_release(v302);
  v306 = ProxyContainer.private.getter(v305);
  v307 = type metadata accessor for ODPGenreRecommendationService();
  v308 = RegistrationContainer.register<A>(_:name:factory:)(v307, 0, 0, sub_10044ABB0, 0, v307);
  swift_release(v306);
  v210(v14, v209, v213);
  v309 = Definition.inScope(_:)(v14);
  swift_release(v309);
  swift_release(v308);
  v310 = v214(v14, v213);
  v311 = ProxyContainer.private.getter(v310);
  v312 = type metadata accessor for MergedPersonalizationConfigurationService();
  v313 = RegistrationContainer.register<A>(_:name:factory:)(v312, 0, 0, sub_10044ABC4, 0, v312);
  swift_release(v311);
  v210(v14, v209, v213);
  v314 = Definition.inScope(_:)(v14);
  swift_release(v314);
  swift_release(v313);
  v315 = v214(v14, v213);
  v316 = ProxyContainer.private.getter(v315);
  v317 = type metadata accessor for PersonalizationConfigurationService(0);
  v318 = RegistrationContainer.register<A>(_:name:factory:)(v317, 0, 0, sub_10044AC78, 0, v317);
  swift_release(v316);
  v210(v14, v209, v213);
  v319 = Definition.inScope(_:)(v14);
  swift_release(v319);
  swift_release(v318);
  v320 = v214(v14, v213);
  v321 = ProxyContainer.private.getter(v320);
  v322 = type metadata accessor for RCDataContainer(0);
  v323 = RegistrationContainer.register<A>(_:name:factory:)(v322, 0, 0, variable initialization expression of AppStoreReviewManager.remoteConfig, 0, v322);
  swift_release(v321);
  v210(v14, v209, v213);
  v324 = Definition.inScope(_:)(v14);
  swift_release(v324);
  swift_release(v323);
  v325 = v214(v14, v213);
  v326 = ProxyContainer.private.getter(v325);
  v327 = type metadata accessor for MediaAPICollectionService();
  v328 = RegistrationContainer.register<A>(_:name:factory:)(v327, 0, 0, sub_10044ACEC, 0, v327);
  swift_release(v326);
  v210(v14, v209, v213);
  v329 = Definition.inScope(_:)(v14);
  swift_release(v329);
  swift_release(v328);
  v330 = v214(v14, v213);
  v331 = ProxyContainer.private.getter(v330);
  v332 = type metadata accessor for StoreBooksService();
  v333 = RegistrationContainer.register<A>(_:name:factory:)(v332, 0, 0, sub_10044AD00, 0, v332);
  swift_release(v331);
  v210(v14, v209, v213);
  v334 = Definition.inScope(_:)(v14);
  swift_release(v334);
  swift_release(v333);
  v335 = v214(v14, v213);
  v336 = ProxyContainer.private.getter(v335);
  v337 = type metadata accessor for EditionStringFlatteningService();
  v338 = RegistrationContainer.register<A>(_:name:factory:)(v337, 0, 0, sub_10044AD14, 0, v337);
  swift_release(v336);
  v210(v14, v209, v213);
  v339 = Definition.inScope(_:)(v14);
  swift_release(v339);
  swift_release(v338);
  v340 = v214(v14, v213);
  v341 = ProxyContainer.private.getter(v340);
  v342 = type metadata accessor for StoreBookRatingsService();
  v343 = RegistrationContainer.register<A>(_:name:factory:)(v342, 0, 0, sub_10044AD34, 0, v342);
  swift_release(v341);
  v210(v14, v209, v213);
  v344 = Definition.inScope(_:)(v14);
  swift_release(v344);
  swift_release(v343);
  v345 = v214(v14, v213);
  v346 = ProxyContainer.private.getter(v345);
  v347 = type metadata accessor for StoreBookTastesService();
  v348 = RegistrationContainer.register<A>(_:name:factory:)(v347, 0, 0, sub_10044AD48, 0, v347);
  swift_release(v346);
  v210(v14, v209, v213);
  v349 = Definition.inScope(_:)(v14);
  swift_release(v349);
  swift_release(v348);
  v350 = v214(v14, v213);
  v351 = ProxyContainer.private.getter(v350);
  v352 = type metadata accessor for EngagementCollectorEventStore();
  v353 = RegistrationContainer.register<A>(_:name:factory:)(v352, 0, 0, sub_10044ADD8, 0, v352);
  swift_release(v351);
  v210(v14, v209, v213);
  v354 = Definition.inScope(_:)(v14);
  swift_release(v354);
  swift_release(v353);
  v355 = v214(v14, v213);
  v356 = ProxyContainer.private.getter(v355);
  v357 = type metadata accessor for UnderThirteenAccessRequirement();
  v358 = RegistrationContainer.register<A>(_:name:factory:)(v357, 0, 0, sub_10044AE48, 0, v357);
  swift_release(v356);
  v210(v14, v209, v213);
  v359 = Definition.inScope(_:)(v14);
  swift_release(v359);
  swift_release(v358);
  v360 = v214(v14, v213);
  v361 = ProxyContainer.private.getter(v360);
  v362 = type metadata accessor for UserPreferenceAccessRequirement();
  v363 = RegistrationContainer.register<A>(_:name:factory:)(v362, 0, 0, sub_10044AE5C, 0, v362);
  swift_release(v361);
  v210(v14, v209, v213);
  v364 = Definition.inScope(_:)(v14);
  swift_release(v364);
  swift_release(v363);
  v365 = v214(v14, v213);
  ProxyContainer.callback.getter(v395, v365);
  v366 = v396;
  v367 = v397;
  sub_10003F198(v395, v396);
  v368 = sub_10004CFD4(&qword_1009E3D60);
  v370 = v382;
  v369 = v383;
  v371 = v384;
  (*(void (**)(char *, _QWORD, uint64_t))(v383 + 104))(v382, enum case for CallbackScope.any(_:), v384);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v368, v370, sub_10044AEF0, 0, v368, v366, v367);
  (*(void (**)(char *, uint64_t))(v369 + 8))(v370, v371);
  return _s5Books15CurrentPageViewVwxx_0(v395);
}

_QWORD *sub_10003354C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t i;
  id v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *result;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_25:
    if (v1 < 0)
      v26 = v1;
    else
      v26 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v2)
      goto LABEL_3;
LABEL_29:
    swift_bridgeObjectRelease(v1);
    v27 = sub_100016680();
    v28 = v27;
    v29 = v27[2];
    if (v29)
    {
      swift_bridgeObjectRetain(v27);
      for (i = 0; i != v29; ++i)
      {
        if (_swiftEmptyDictionarySingleton[2])
        {
          v31 = (id)v28[i + 4];
          v32 = sub_100033914(v31);
          if ((v33 & 1) != 0)
          {
            v34 = *(id *)(_swiftEmptyDictionarySingleton[7] + 8 * v32);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
            v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v36 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v37 >= v36 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
            v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v34);
            specialized Array._endMutation()(v38);
          }
          else
          {

          }
        }
      }
      swift_bridgeObjectRelease(v28);
    }
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
    return _swiftEmptyArrayStorage;
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v2)
    goto LABEL_29;
LABEL_3:
  v42 = v1 & 0xC000000000000001;
  v3 = 4;
  v41 = v1;
  while (1)
  {
    if (v42)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, v1);
    else
      v6 = *(id *)(v1 + 8 * v3);
    v7 = v6;
    v8 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v1 = v2;
    v9 = objc_msgSend(v6, "collectionID");
    if (!v9)
      break;
    v10 = v9;
    v11 = v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v14 = sub_100033914(v10);
    v15 = _swiftEmptyDictionarySingleton[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      goto LABEL_23;
    v18 = v13;
    if (_swiftEmptyDictionarySingleton[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1002C0D9C();
        if ((v18 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_100033A8C(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_100033914(v10);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_41;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_4:
        v4 = _swiftEmptyDictionarySingleton[7];

        *(_QWORD *)(v4 + 8 * v14) = v11;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v14 >> 6) + 8] |= 1 << v14;
    v21 = 8 * v14;
    *(_QWORD *)(_swiftEmptyDictionarySingleton[6] + v21) = v10;
    *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + v21) = v11;
    v22 = _swiftEmptyDictionarySingleton[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_24;
    _swiftEmptyDictionarySingleton[2] = v24;
    v25 = v10;
LABEL_5:

    swift_bridgeObjectRelease(0x8000000000000000);
    ++v3;
    v2 = v1;
    v5 = v8 == v1;
    v1 = v41;
    if (v5)
      goto LABEL_29;
  }
  __break(1u);
LABEL_41:
  type metadata accessor for BCDefaultCollectionID(0);
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v40);
  __break(1u);
  return result;
}

unint64_t sub_100033888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_100033918(a1, v7);
}

unint64_t sub_100033918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_100033A8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  uint64_t v43;
  char v44;
  _QWORD v45[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009DDE30);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v43 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v41 = v3;
  v42 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v25 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v26 = v25 | (v14 << 6);
      goto LABEL_34;
    }
    v27 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v27 >= v42)
      break;
    v28 = (_QWORD *)(v5 + 64);
    v29 = *(_QWORD *)(v43 + 8 * v27);
    ++v14;
    if (!v29)
    {
      v14 = v27 + 1;
      if (v27 + 1 >= v42)
        goto LABEL_36;
      v29 = *(_QWORD *)(v43 + 8 * v14);
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v42)
        {
LABEL_36:
          swift_release(v5);
          v3 = v41;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v29 = *(_QWORD *)(v43 + 8 * v30);
        if (!v29)
        {
          while (1)
          {
            v14 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_45;
            if (v14 >= v42)
              goto LABEL_36;
            v29 = *(_QWORD *)(v43 + 8 * v14);
            ++v30;
            if (v29)
              goto LABEL_33;
          }
        }
        v14 = v30;
      }
    }
LABEL_33:
    v11 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_34:
    v35 = 8 * v26;
    v36 = *(void **)(*(_QWORD *)(v5 + 48) + v35);
    v37 = *(void **)(*(_QWORD *)(v5 + 56) + v35);
    if ((v44 & 1) == 0)
    {
      v38 = v36;
      v39 = v37;
    }
    v15 = *(_QWORD *)(v8 + 40);
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v18 = v17;
    Hasher.init(_seed:)(v45, v15);
    String.hash(into:)(v45, v16, v18);
    v19 = Hasher._finalize()();
    result = swift_bridgeObjectRelease(v18);
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v33 = v22 == v32;
        if (v22 == v32)
          v22 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v34 == -1);
      v23 = __clz(__rbit64(~v34)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v24 = 8 * v23;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v24) = v36;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v24) = v37;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v41;
  v28 = (_QWORD *)(v5 + 64);
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v28, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

void sub_100033DB8(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  os_signpost_id_t v5;
  uint64_t v6;
  qos_class_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  os_signpost_id_t v15;
  uint64_t v16;
  qos_class_t v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  qos_class_t v21;
  __int16 v22;
  uint64_t v23;

  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = qos_class_self();
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(_QWORD *)(v8 + 32) + 1;
    *(_QWORD *)(v8 + 32) = v9;
    v18 = 138412802;
    v19 = v6;
    v20 = 1024;
    v21 = v7;
    v22 = 2048;
    v23 = v9;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_BEGIN, v5, "Launch Queue", "name: %@, qos: 0x%x, seq: %ld", (uint8_t *)&v18, 0x1Cu);
  }

  v10 = objc_retainBlock(*(id *)(a1 + 40));
  v11 = v10;
  if (v10)
    (*((void (**)(id))v10 + 2))(v10);

  v12 = *(id *)(*(_QWORD *)(a1 + 32) + 16);
  v13 = v12;
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(v14 + 24);
  if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    v16 = *(_QWORD *)(v14 + 8);
    v17 = qos_class_self();
    v18 = 138412546;
    v19 = v16;
    v20 = 1024;
    v21 = v17;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_END, v15, "Launch Queue", "name: %@, qos: 0x%x", (uint8_t *)&v18, 0x12u);
  }

}

unint64_t sub_100033F5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E3A00;
  if (!qword_1009E3A00)
  {
    v1 = objc_opt_self(BKLibraryAsset);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009E3A00);
  }
  return result;
}

void sub_100033F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v2, v3);
    v5 = sub_10004CFD4(&qword_1009DF308);
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v35, v4, v5, &protocol witness table for AnyKeyPath);
    v1 = v35[0];
    v33 = v35[1];
    v7 = v35[2];
    v8 = v35[3];
    v9 = v35[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v32 = _swiftEmptyArrayStorage;
  v13 = (unint64_t)(v7 + 64) >> 6;
LABEL_11:
  v14 = v8;
  v15 = v9;
  while (1)
  {
    if (v1 < 0)
    {
      v24 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
      if (!v24)
        goto LABEL_42;
      v25 = v24;
      v34 = v24;
      swift_unknownObjectRetain(v24);
      v26 = sub_10004CFD4(&qword_1009DF308);
      swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
      v17 = v36;
      swift_unknownObjectRelease(v25);
      v8 = v14;
      v9 = v15;
      if (!v17)
        goto LABEL_42;
      goto LABEL_14;
    }
    if (!v15)
      break;
    v9 = (v15 - 1) & v15;
    v16 = __clz(__rbit64(v15)) | (v14 << 6);
    v8 = v14;
LABEL_13:
    v17 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    v18 = swift_retain(v17);
    if (!v17)
      goto LABEL_42;
LABEL_14:
    v19 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v18);
    v21 = v20;
    swift_release(v17);
    v14 = v8;
    v15 = v9;
    if (v21)
    {
      v28 = v32;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100043ED0(0, v32[2] + 1, 1, v32);
        v28 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100043ED0((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
        v28 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v28[2] = v30 + 1;
      v32 = v28;
      v31 = &v28[2 * v30];
      v31[4] = v19;
      v31[5] = v21;
      goto LABEL_11;
    }
  }
  v8 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v8 >= v13)
      goto LABEL_42;
    v22 = *(_QWORD *)(v33 + 8 * v8);
    if (!v22)
    {
      v23 = v14 + 2;
      if (v14 + 2 >= v13)
        goto LABEL_42;
      v22 = *(_QWORD *)(v33 + 8 * v23);
      if (v22)
        goto LABEL_26;
      v23 = v14 + 3;
      if (v14 + 3 >= v13)
        goto LABEL_42;
      v22 = *(_QWORD *)(v33 + 8 * v23);
      if (v22)
        goto LABEL_26;
      v23 = v14 + 4;
      if (v14 + 4 >= v13)
        goto LABEL_42;
      v22 = *(_QWORD *)(v33 + 8 * v23);
      if (v22)
      {
LABEL_26:
        v8 = v23;
      }
      else
      {
        v8 = v14 + 5;
        if (v14 + 5 >= v13)
          goto LABEL_42;
        v22 = *(_QWORD *)(v33 + 8 * v8);
        if (!v22)
        {
          v27 = v14 + 6;
          while (v13 != v27)
          {
            v22 = *(_QWORD *)(v33 + 8 * v27++);
            if (v22)
            {
              v8 = v27 - 1;
              goto LABEL_27;
            }
          }
LABEL_42:
          sub_100299C3C(v1);
          return;
        }
      }
    }
LABEL_27:
    v9 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v8 << 6);
    goto LABEL_13;
  }
  __break(1u);
}

id sub_1000342B8(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  char *v29;
  objc_super v30;
  _QWORD *v31;

  v5 = swift_unknownObjectWeakInit(&v2[OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager], 0);
  swift_unknownObjectWeakAssign(v5, a1);
  v6 = v2;
  v7 = objc_msgSend(a2, "eventConfigurations");
  v8 = type metadata accessor for BasePropertyConfiguration(0);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v22 = v9;
    else
      v22 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v9);
    if (v10)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v9);
    v13 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_16;
LABEL_3:
  v31 = _swiftEmptyArrayStorage;
  result = (id)sub_100045E44(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
    return result;
  }
  v29 = v6;
  v12 = 0;
  v13 = v31;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
    else
      v14 = *(id *)(v9 + 8 * v12 + 32);
    v15 = v14;
    v16 = BasePropertyConfiguration.eventName.getter();
    v18 = v17;

    v31 = v13;
    v20 = v13[2];
    v19 = v13[3];
    if (v20 >= v19 >> 1)
    {
      sub_100045E44(v19 > 1, v20 + 1, 1);
      v13 = v31;
    }
    ++v12;
    v13[2] = v20 + 1;
    v21 = &v13[2 * v20];
    v21[4] = v16;
    v21[5] = v18;
  }
  while (v10 != v12);
  swift_bridgeObjectRelease(v9);
  v6 = v29;
LABEL_17:
  v23 = sub_10003455C((uint64_t)v13);
  swift_bridgeObjectRelease(v13);
  v24 = OBJC_IVAR___BKEngagementManagerAnalyticsHelper_allProperties;
  *(_QWORD *)&v6[OBJC_IVAR___BKEngagementManagerAnalyticsHelper_allProperties] = v23;
  v25 = sub_10003455C((uint64_t)&off_1008F03E8);
  swift_arrayDestroy(&unk_1008F0408, 2, &type metadata for String);
  *(_QWORD *)&v6[OBJC_IVAR___BKEngagementManagerAnalyticsHelper_sampleCapableProperties] = v25;
  v26 = *(_QWORD *)&v6[v24];
  if (*(_QWORD *)(v25 + 16) <= *(_QWORD *)(v26 + 16) >> 3)
  {
    v31 = *(_QWORD **)&v6[v24];
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v25);
    sub_1000299B4(v25);
    swift_bridgeObjectRelease(v25);
    v28 = v31;
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v6[v24]);
    swift_bridgeObjectRetain(v25);
    v28 = sub_10057B9F4(v27, v26);
    swift_bridgeObjectRelease(v25);
  }
  *(_QWORD *)&v6[OBJC_IVAR___BKEngagementManagerAnalyticsHelper_standardProperties] = v28;

  v30.receiver = v6;
  v30.super_class = (Class)type metadata accessor for EngagementManagerAnalyticsHelper();
  return objc_msgSendSuper2(&v30, "init");
}

uint64_t sub_10003455C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_1000345F0(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1000345F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_10003479C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_10003479C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10060D004(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100029E98();
      goto LABEL_22;
    }
    sub_10060FD04(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

uint64_t sub_100034934(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  kdebug_trace(725353712, 92, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "collectionController"));
  objc_msgSend(v3, "setEnableCloudMerge:", 1);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetDetailsManager"));
  objc_msgSend(v6, "setAnnotationProvider:", v4);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetDetailsManager"));
  objc_msgSend(v8, "setEnableCloudMerge:", 1);

  return kdebug_trace(725353712, 93, 0, 0, 0);
}

void sub_100034A24(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_signpost_id_t v7;
  NSObject *v8;
  NSObject *v9;
  unint64_t v10;
  BKAssetMetadataCache *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  NSObject *v17;
  BKAssetCoverImageHelper *v18;
  void *v19;
  void *v20;
  BKAssetCoverImageHelper *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  NSObject *v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  NSObject *v36;
  NSObject *v37;
  NSObject *v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  NSObject *v42;
  NSObject *v43;
  void *v44;
  void *v45;
  void *v46;
  NSObject *v47;
  NSObject *v48;
  NSObject *v49;
  NSObject *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  NSObject *v55;
  NSObject *v56;
  NSObject *v57;
  NSObject *v58;
  BKLibraryDataSourcePlistImporting *v59;
  void *v60;
  id v61;
  id v62;
  NSObject *v63;
  NSObject *v64;
  NSObject *v65;
  NSObject *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  NSObject *v73;
  NSObject *v74;
  NSObject *v75;
  NSObject *v76;
  void *v77;
  void *v78;
  void *v79;
  NSObject *v80;
  NSObject *v81;
  NSObject *v82;
  NSObject *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  NSObject *v88;
  NSObject *v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  id v94;
  NSObject *v95;
  NSObject *v96;
  id v97;
  NSObject *v98;
  NSObject *v99;
  BKBookletMigrationManager *v100;
  NSObject *v101;
  NSObject *v102;
  BKLibraryDataSourceUbiquityiOS *v103;
  void *v104;
  void *v105;
  void *v106;
  BKLibraryDataSourceUbiquityiOS *v107;
  NSObject *v108;
  NSObject *v109;
  NSObject *v110;
  NSObject *v111;
  BKUbiquitousDocumentsController *v112;
  void *v113;
  BKUbiquitousDocumentsController *v114;
  void *v115;
  void *v116;
  NSObject *v117;
  NSObject *v118;
  NSObject *v119;
  NSObject *v120;
  BKLibraryDataSourceJaliscoPreorders *v121;
  id v122;
  NSObject *v123;
  NSObject *v124;
  NSObject *v125;
  NSObject *v126;
  NSObject *v127;
  NSObject *v128;
  NSObject *v129;
  NSObject *v130;
  id v131;
  NSObject *v132;
  NSObject *v133;
  NSObject *v134;
  NSObject *v135;
  void *v136;
  void *v137;
  NSObject *v138;
  NSObject *v139;
  NSObject *v140;
  NSObject *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  BKLibraryItemStateProvider *v146;
  void *v147;
  BKLibraryItemStateProvider *v148;
  void *v149;
  void *v150;
  NSObject *v151;
  NSObject *v152;
  NSObject *v153;
  NSObject *v154;
  NSObject *v155;
  NSObject *v156;
  NSObject *v157;
  NSObject *v158;
  void *v159;
  void *v160;
  NSObject *v161;
  NSObject *v162;
  NSObject *v163;
  NSObject *v164;
  void *v165;
  NSObject *v166;
  NSObject *v167;
  NSObject *v168;
  NSObject *v169;
  BKStoreController *v170;
  void *v171;
  BKStoreController *v172;
  NSObject *v173;
  NSObject *v174;
  NSObject *v175;
  NSObject *v176;
  NSObject *v177;
  NSObject *v178;
  id v179;
  NSObject *v180;
  id v181;
  id v182;
  BKLibraryDataSourceSeries *v183;
  id v184;
  id v185;
  void *v186;
  void *v187;
  id v188;
  void *v189;
  BKLibraryDataSourceJaliscoPurchases *v190;
  void *v191;
  id v192;
  BKLibraryDataSourceATAsset *v193;
  BKLibraryDataSourcePlistImporting *v194;
  BKLibraryDataSourceBLDownload *v195;
  os_signpost_id_t spid;
  _QWORD v197[5];
  _QWORD v198[4];
  id v199;
  _QWORD v200[4];
  id v201;
  id v202;
  id v203;
  id v204;
  id location;
  _QWORD v206[5];
  _QWORD v207[4];
  id v208;
  id v209;
  id v210;
  id v211;
  _QWORD v212[4];
  id v213;
  id v214;
  _QWORD block[5];
  BKLibraryDataSourcePlistImporting *v216;
  _QWORD v217[4];
  id v218;
  _QWORD v219[14];
  uint8_t buf[4];
  void *v221;
  _QWORD v222[2];

  v2 = sub_100036938();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Began setting up library", buf, 2u);
  }

  v4 = kdebug_trace(725353712, 24, 0, 0, 0);
  v5 = BCSignpostLibraryDataSource(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_signpost_id_generate(v6);
  v8 = v6;
  v9 = v8;
  spid = v7;
  v10 = v7 - 1;
  if (v10 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Asset Metadata Cache", "", buf, 2u);
  }

  v11 = objc_opt_new(BKAssetMetadataCache);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(void **)(v12 + 32);
  *(_QWORD *)(v12 + 32) = v11;

  v14 = v9;
  v15 = v14;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v17 = v15;
  }
  else
  {
    if (os_signpost_enabled(v14))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_INTERVAL_END, spid, "Asset Metadata Cache", "", buf, 2u);
    }

    v16 = v15;
    if (os_signpost_enabled(v16))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Cover Image Helper", "", buf, 2u);
    }
  }

  v18 = [BKAssetCoverImageHelper alloc];
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[QLThumbnailGenerator sharedGenerator](QLThumbnailGenerator, "sharedGenerator"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[AEPluginRegistry sharedInstance](AEPluginRegistry, "sharedInstance"));
  v21 = -[BKAssetCoverImageHelper initWithThumbnailGenerator:pluginRegistry:](v18, "initWithThumbnailGenerator:pluginRegistry:", v19, v20);
  v22 = *(_QWORD *)(a1 + 32);
  v23 = *(void **)(v22 + 40);
  *(_QWORD *)(v22 + 40) = v21;

  v24 = v15;
  v25 = v24;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v27 = v25;
  }
  else
  {
    if (os_signpost_enabled(v24))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, OS_SIGNPOST_INTERVAL_END, spid, "Cover Image Helper", "", buf, 2u);
    }

    v26 = v25;
    if (os_signpost_enabled(v26))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, OS_SIGNPOST_INTERVAL_BEGIN, spid, "BLDownload", "", buf, 2u);
    }
  }

  v195 = objc_alloc_init(BKLibraryDataSourceBLDownload);
  v28 = v25;
  v29 = v28;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v31 = v29;
  }
  else
  {
    if (os_signpost_enabled(v28))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v29, OS_SIGNPOST_INTERVAL_END, spid, "BLDownload", "", buf, 2u);
    }

    v30 = v29;
    if (os_signpost_enabled(v30))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v30, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Air Traffic", "", buf, 2u);
    }
  }

  v193 = objc_opt_new(BKLibraryDataSourceATAsset);
  objc_msgSend(*(id *)(a1 + 32), "setAirTrafficController:", v193);
  v32 = v29;
  v33 = v32;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v35 = v33;
  }
  else
  {
    if (os_signpost_enabled(v32))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v33, OS_SIGNPOST_INTERVAL_END, spid, "Air Traffic", "", buf, 2u);
    }

    v34 = v33;
    if (os_signpost_enabled(v34))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v34, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Cloud Audiobooks", "", buf, 2u);
    }
  }

  v191 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourceMediaLibraryCloud cloudAudiobooksDataSource](BKLibraryDataSourceMediaLibraryCloud, "cloudAudiobooksDataSource"));
  v36 = v33;
  v37 = v36;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v39 = v37;
  }
  else
  {
    if (os_signpost_enabled(v36))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v37, OS_SIGNPOST_INTERVAL_END, spid, "Cloud Audiobooks", "", buf, 2u);
    }

    v38 = v37;
    if (os_signpost_enabled(v38))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v38, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Local Audiobooks", "", buf, 2u);
    }
  }

  v187 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourceMediaLibraryLocal localAudiobooksDataSource](BKLibraryDataSourceMediaLibraryLocal, "localAudiobooksDataSource"));
  v40 = v37;
  v41 = v40;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v43 = v41;
  }
  else
  {
    if (os_signpost_enabled(v40))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v41, OS_SIGNPOST_INTERVAL_END, spid, "Local Audiobooks", "", buf, 2u);
    }

    v42 = v41;
    if (os_signpost_enabled(v42))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v42, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Managed", "", buf, 2u);
    }
  }

  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageHelper"));
  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v186 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourcePlist managedBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:](BKLibraryDataSourcePlist, "managedBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:", v44, v45, v46));

  v47 = v41;
  v48 = v47;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v50 = v48;
  }
  else
  {
    if (os_signpost_enabled(v47))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v48, OS_SIGNPOST_INTERVAL_END, spid, "Managed", "", buf, 2u);
    }

    v49 = v48;
    if (os_signpost_enabled(v49))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v49, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Untethered", "", buf, 2u);
    }
  }

  v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageHelper"));
  v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v54 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourcePlist untetheredBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:](BKLibraryDataSourcePlistUntetheredBooks, "untetheredBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:", v51, v52, v53));

  objc_msgSend(v54, "setDidWritePlistHandler:", &stru_1008EEC00);
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 232), v54);
  v55 = v48;
  v56 = v55;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v58 = v56;
  }
  else
  {
    if (os_signpost_enabled(v55))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v56, OS_SIGNPOST_INTERVAL_END, spid, "Untethered", "", buf, 2u);
    }

    v57 = v56;
    if (os_signpost_enabled(v57))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Importing", "", buf, 2u);
    }
  }

  v59 = [BKLibraryDataSourcePlistImporting alloc];
  v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v194 = -[BKLibraryDataSourcePlistImporting initWithMetadataCache:importingDelegate:](v59, "initWithMetadataCache:importingDelegate:", v60, v54);

  -[BKLibraryDataSourcePlistImporting setPlistWriter:](v194, "setPlistWriter:", v54);
  v217[0] = _NSConcreteStackBlock;
  v217[1] = 3221225472;
  v217[2] = sub_1001C2700;
  v217[3] = &unk_1008E72C0;
  v61 = v54;
  v218 = v61;
  -[BKLibraryDataSourcePlistImporting setReloadCounterpartHandler:](v194, "setReloadCounterpartHandler:", v217);
  if (!-[BKLibraryDataSourcePlistImporting hasCleanedUpImportedFiles](v194, "hasCleanedUpImportedFiles"))
  {
    v62 = &_dispatch_main_q;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001C2708;
    block[3] = &unk_1008E7338;
    block[4] = *(_QWORD *)(a1 + 32);
    v216 = v194;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
  v63 = v56;
  v64 = v63;
  if (v10 > 0xFFFFFFFFFFFFFFFDLL)
  {

    v66 = v64;
  }
  else
  {
    if (os_signpost_enabled(v63))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v64, OS_SIGNPOST_INTERVAL_END, spid, "Importing", "", buf, 2u);
    }

    v65 = v64;
    if (os_signpost_enabled(v65))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v65, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Sample", "", buf, 2u);
    }
  }

  v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageHelper"));
  v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v70 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourcePlist sampleBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:](BKLibraryDataSourcePlist, "sampleBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:", v67, v68, v69));

  objc_msgSend(v70, "setDidWritePlistHandler:", &stru_1008EEC00);
  v212[0] = _NSConcreteStackBlock;
  v212[1] = 3221225472;
  v212[2] = sub_1001C279C;
  v212[3] = &unk_1008EEC28;
  v71 = v61;
  v213 = v71;
  v72 = v70;
  v214 = v72;
  -[BKLibraryDataSourceBLDownload setGenerationChangeHandler:](v195, "setGenerationChangeHandler:", v212);
  v73 = v64;
  v74 = v73;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v76 = v74;
  }
  else
  {
    if (os_signpost_enabled(v73))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v74, OS_SIGNPOST_INTERVAL_END, spid, "Sample", "", buf, 2u);
    }

    v75 = v74;
    if (os_signpost_enabled(v75))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v75, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Stashed Sample", "", buf, 2u);
    }
  }

  v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageHelper"));
  v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v189 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourcePlist stashedSampleBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:](BKLibraryDataSourcePlist, "stashedSampleBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:", v77, v78, v79));

  v80 = v74;
  v81 = v80;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v83 = v81;
  }
  else
  {
    if (os_signpost_enabled(v80))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v81, OS_SIGNPOST_INTERVAL_END, spid, "Stashed Sample", "", buf, 2u);
    }

    v82 = v81;
    if (os_signpost_enabled(v82))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v82, OS_SIGNPOST_INTERVAL_BEGIN, spid, "iTunes Synced", "", buf, 2u);
    }
  }

  v84 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageHelper"));
  v86 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v87 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryDataSourcePlist iTunesSyncedBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:](BKLibraryDataSourcePlist, "iTunesSyncedBooksPlistDataSourceWithAssetMetadataProvider:coverImageHelper:assetMetadataCache:", v84, v85, v86));

  objc_msgSend(v87, "setDidWritePlistHandler:", &stru_1008EEC00);
  v88 = v81;
  v89 = v88;
  if (v10 < 0xFFFFFFFFFFFFFFFELL && os_signpost_enabled(v88))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v89, OS_SIGNPOST_INTERVAL_END, spid, "iTunes Synced", "", buf, 2u);
  }

  -[BKLibraryDataSourceBLDownload setITunesSyncedBooksPlistCleaner:](v195, "setITunesSyncedBooksPlistCleaner:", v87);
  v207[0] = _NSConcreteStackBlock;
  v207[1] = 3221225472;
  v207[2] = sub_1001C27D0;
  v207[3] = &unk_1008E7B70;
  v90 = v71;
  v208 = v90;
  v91 = v72;
  v209 = v91;
  v185 = v189;
  v210 = v185;
  v92 = v87;
  v211 = v92;
  -[BKLibraryDataSourceBLDownload setReloadCounterpartHandler:](v195, "setReloadCounterpartHandler:", v207);
  v206[0] = _NSConcreteStackBlock;
  v206[1] = 3221225472;
  v206[2] = sub_1001C2808;
  v206[3] = &unk_1008EB480;
  v206[4] = *(_QWORD *)(a1 + 32);
  -[BKLibraryDataSourceBLDownload setDidLoadSupplementalAssetHandler:](v195, "setDidLoadSupplementalAssetHandler:", v206);
  v222[0] = v90;
  v222[1] = v92;
  v93 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v222, 2));
  -[BKLibraryDataSourceBLDownload setRestoreControllers:](v195, "setRestoreControllers:", v93);

  objc_initWeak(&location, *(id *)(a1 + 32));
  v200[0] = _NSConcreteStackBlock;
  v200[1] = 3221225472;
  v200[2] = sub_1001C283C;
  v200[3] = &unk_1008EEC50;
  v188 = v92;
  v201 = v188;
  v94 = v90;
  v202 = v94;
  v184 = v91;
  v203 = v184;
  objc_copyWeak(&v204, &location);
  -[BKLibraryDataSourceATAsset setDataSourceAirTrafficEndedHandler:](v193, "setDataSourceAirTrafficEndedHandler:", v200);
  v95 = v89;
  v96 = v95;
  if (v10 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v95))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v96, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Jalisco Purchases", "", buf, 2u);
  }

  v190 = objc_opt_new(BKLibraryDataSourceJaliscoPurchases);
  v97 = &_os_log_default;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v221 = v190;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Initializing jaliscoPurchasesDataSource %@", buf, 0xCu);
  }

  -[BKLibraryDataSourceJalisco setPlistWriter:](v190, "setPlistWriter:", v188);
  v98 = v96;
  v99 = v98;
  if (v10 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v98))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v99, OS_SIGNPOST_INTERVAL_END, spid, "Jalisco Purchases", "", buf, 2u);
  }

  v192 = v191;
  v100 = -[BKBookletMigrationManager initWithPurchaseItemMigrationController:]([BKBookletMigrationManager alloc], "initWithPurchaseItemMigrationController:", v192);
  objc_msgSend(*(id *)(a1 + 32), "setBookletMigrationManager:", v100);

  v101 = v99;
  v102 = v101;
  if (v10 < 0xFFFFFFFFFFFFFFFELL && os_signpost_enabled(v101))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v102, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Ubiquity", "", buf, 2u);
  }

  v103 = [BKLibraryDataSourceUbiquityiOS alloc];
  v104 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  v105 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetMetadataCache"));
  v106 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageHelper"));
  v107 = -[BKLibraryDataSourceUbiquityiOS initWithUbiquityStatusMonitor:assetMetadataCache:coverImageHelper:imageSource:](v103, "initWithUbiquityStatusMonitor:assetMetadataCache:coverImageHelper:imageSource:", v104, v105, v106, 0);

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 240), v107);
  v108 = v102;
  v109 = v108;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v111 = v109;
  }
  else
  {
    if (os_signpost_enabled(v108))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v109, OS_SIGNPOST_INTERVAL_END, spid, "Ubiquity", "", buf, 2u);
    }

    v110 = v109;
    if (os_signpost_enabled(v110))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v110, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Ubiquitous Documents Controller", "", buf, 2u);
    }
  }

  v112 = [BKUbiquitousDocumentsController alloc];
  v113 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  v114 = -[BKUbiquitousDocumentsController initWithUbiquityStatusMonitor:ubiquitousBooksPlistHost:ubiquityEligibleBooksProvider:](v112, "initWithUbiquityStatusMonitor:ubiquitousBooksPlistHost:ubiquityEligibleBooksProvider:", v113, v107, v94);
  objc_msgSend(*(id *)(a1 + 32), "setUbiquitousDocumentsController:", v114);

  v115 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquitousDocumentsController"));
  -[BKLibraryDataSourceUbiquityiOS setUploadReporter:](v107, "setUploadReporter:", v115);

  v116 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquitousDocumentsController"));
  -[BKLibraryDataSourceUbiquityiOS addMetadataQueryHandlingObserver:](v107, "addMetadataQueryHandlingObserver:", v116);

  v117 = v109;
  v118 = v117;
  if (v10 < 0xFFFFFFFFFFFFFFFELL && os_signpost_enabled(v117))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v118, OS_SIGNPOST_INTERVAL_END, spid, "Ubiquitous Documents Controller", "", buf, 2u);
  }

  v198[0] = _NSConcreteStackBlock;
  v198[1] = 3221225472;
  v198[2] = sub_1001C2968;
  v198[3] = &unk_1008EEC78;
  v182 = v94;
  v199 = v182;
  -[BKLibraryDataSourceUbiquityiOS setMadeUbiquitousNotifyBlock:](v107, "setMadeUbiquitousNotifyBlock:", v198);
  v119 = v118;
  v120 = v119;
  if (v10 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v119))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v120, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Jalisco Preorders", "", buf, 2u);
  }

  v121 = objc_opt_new(BKLibraryDataSourceJaliscoPreorders);
  v122 = &_os_log_default;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v221 = v121;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Initializing jaliscoPreordersDataSource %@", buf, 0xCu);
  }

  -[BKLibraryDataSourceJalisco setShouldReloadAfterAssetAdded:](v121, "setShouldReloadAfterAssetAdded:", 1);
  v123 = v120;
  v124 = v123;
  if (v10 > 0xFFFFFFFFFFFFFFFDLL)
  {

    v126 = v124;
  }
  else
  {
    if (os_signpost_enabled(v123))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v124, OS_SIGNPOST_INTERVAL_END, spid, "Jalisco Preorders", "", buf, 2u);
    }

    v125 = v124;
    if (os_signpost_enabled(v125))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v125, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Series", "", buf, 2u);
    }
  }

  v183 = objc_alloc_init(BKLibraryDataSourceSeries);
  v127 = v124;
  v128 = v127;
  if (v10 > 0xFFFFFFFFFFFFFFFDLL)
  {

    v130 = v128;
  }
  else
  {
    if (os_signpost_enabled(v127))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v128, OS_SIGNPOST_INTERVAL_END, spid, "Series", "", buf, 2u);
    }

    v129 = v128;
    if (os_signpost_enabled(v129))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v129, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Performance", "", buf, 2u);
    }
  }

  v131 = objc_msgSend(objc_alloc((Class)BKLibraryDataSourcePerformance), "initWithResource:forceRandomBooks:", CFSTR("Performance-1"), 0);
  v132 = v128;
  v133 = v132;
  if (v10 > 0xFFFFFFFFFFFFFFFDLL)
  {

    v135 = v133;
  }
  else
  {
    if (os_signpost_enabled(v132))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v133, OS_SIGNPOST_INTERVAL_END, spid, "Performance", "", buf, 2u);
    }

    v134 = v133;
    if (os_signpost_enabled(v134))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v134, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Rank", "", buf, 2u);
    }
  }

  -[BKLibraryDataSourcePlistImporting setRank:](v194, "setRank:", 200);
  -[BKLibraryDataSourceBLDownload setRank:](v195, "setRank:", 205);
  -[BKLibraryDataSourceATAsset setRank:](v193, "setRank:", 220);
  objc_msgSend(v187, "setRank:", 240);
  objc_msgSend(v186, "setRank:", 250);
  objc_msgSend(v182, "setRank:", 260);
  objc_msgSend(v188, "setRank:", 270);
  -[BKLibraryDataSourceUbiquityiOS setRank:](v107, "setRank:", 380);
  -[BKLibraryDataSourceJalisco setRank:](v190, "setRank:", 385);
  objc_msgSend(v192, "setRank:", 386);
  objc_msgSend(v184, "setRank:", 390);
  objc_msgSend(v185, "setRank:", 392);
  -[BKLibraryDataSourceJalisco setRank:](v121, "setRank:", 395);
  objc_msgSend(v131, "setRank:", 398);
  -[BKLibraryDataSourceSeries setRank:](v183, "setRank:", 400);
  v219[0] = v107;
  v219[1] = v193;
  v219[2] = v183;
  v219[3] = v190;
  v219[4] = v121;
  v219[5] = v188;
  v219[6] = v182;
  v219[7] = v186;
  v219[8] = v192;
  v219[9] = v187;
  v219[10] = v195;
  v219[11] = v194;
  v219[12] = v184;
  v219[13] = v185;
  v136 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v219, 14));
  v137 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", v136));

  if (objc_msgSend(v131, "isEnabled"))
    objc_msgSend(v137, "addObject:", v131);
  v138 = v133;
  v139 = v138;
  if (v10 > 0xFFFFFFFFFFFFFFFDLL)
  {

    v141 = v139;
  }
  else
  {
    if (os_signpost_enabled(v138))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v139, OS_SIGNPOST_INTERVAL_END, spid, "Rank", "", buf, 2u);
    }

    v140 = v139;
    if (os_signpost_enabled(v140))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v140, OS_SIGNPOST_INTERVAL_BEGIN, spid, "BKLibraryManager Init", "", buf, 2u);
    }
  }

  v142 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager managerWithDataSources:](BKLibraryManager, "managerWithDataSources:", v137));
  objc_msgSend(*(id *)(a1 + 32), "setLibraryManager:", v142);

  v143 = *(void **)(a1 + 32);
  v144 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v143, "libraryManager"));
  objc_msgSend(v144, "setDelegate:", v143);

  v145 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v145, "setUIManagerProviderForAddingToWantToReadBlock:", &stru_1008EECB8);

  v146 = [BKLibraryItemStateProvider alloc];
  v147 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v148 = -[BKLibraryItemStateProvider initWithLibraryManager:](v146, "initWithLibraryManager:", v147);
  objc_msgSend(*(id *)(a1 + 32), "setLibraryItemStateProvider:", v148);

  v149 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
  BSUISetLibraryItemStateProvider();

  v150 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryItemStateProvider"));
  BSUISetLibraryItemStateUpdater();

  v151 = v139;
  v152 = v151;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v154 = v152;
  }
  else
  {
    if (os_signpost_enabled(v151))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v152, OS_SIGNPOST_INTERVAL_END, spid, "BKLibraryManager Init", "", buf, 2u);
    }

    v153 = v152;
    if (os_signpost_enabled(v153))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v153, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Audiobook Platform Config", "", buf, 2u);
    }
  }

  +[AEAudiobookPlatformConfiguration configureForPlatform](AEAudiobookPlatformConfiguration, "configureForPlatform");
  v155 = v152;
  v156 = v155;
  if (v10 > 0xFFFFFFFFFFFFFFFDLL)
  {

    v158 = v156;
  }
  else
  {
    if (os_signpost_enabled(v155))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v156, OS_SIGNPOST_INTERVAL_END, spid, "Audiobook Platform Config", "", buf, 2u);
    }

    v157 = v156;
    if (os_signpost_enabled(v157))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v157, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Now Playing Adaptor", "", buf, 2u);
    }
  }

  v159 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v160 = (void *)objc_claimAutoreleasedReturnValue(+[BKAudiobookNowPlayingAdaptor sharedInstance](BKAudiobookNowPlayingAdaptor, "sharedInstance"));
  objc_msgSend(v160, "setGenericCoverProvider:", v159);

  v161 = v156;
  v162 = v161;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v164 = v162;
  }
  else
  {
    if (os_signpost_enabled(v161))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v162, OS_SIGNPOST_INTERVAL_END, spid, "Now Playing Adaptor", "", buf, 2u);
    }

    v163 = v162;
    if (os_signpost_enabled(v163))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v163, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Audiobook Analytics Recorder", "", buf, 2u);
    }
  }

  v165 = (void *)objc_claimAutoreleasedReturnValue(+[AEAudiobookAnalyticsRecorder sharedRecorder](AEAudiobookAnalyticsRecorder, "sharedRecorder"));
  objc_msgSend(v165, "startRecordingAnalyticsWithSessionHost:", *(_QWORD *)(a1 + 32));

  v166 = v162;
  v167 = v166;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v169 = v167;
  }
  else
  {
    if (os_signpost_enabled(v166))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v167, OS_SIGNPOST_INTERVAL_END, spid, "Audiobook Analytics Recorder", "", buf, 2u);
    }

    v168 = v167;
    if (os_signpost_enabled(v168))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v168, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Store Controller", "", buf, 2u);
    }
  }

  v170 = [BKStoreController alloc];
  v171 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  v172 = -[BKStoreController initWithLibrary:downloadQueueManager:](v170, "initWithLibrary:downloadQueueManager:", v171, v195);
  objc_msgSend(*(id *)(a1 + 32), "setStoreController:", v172);

  v173 = v167;
  v174 = v173;
  if (v10 >= 0xFFFFFFFFFFFFFFFELL)
  {

    v176 = v174;
  }
  else
  {
    if (os_signpost_enabled(v173))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v174, OS_SIGNPOST_INTERVAL_END, spid, "Store Controller", "", buf, 2u);
    }

    v175 = v174;
    if (os_signpost_enabled(v175))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v175, OS_SIGNPOST_INTERVAL_BEGIN, spid, "Cover Cache", "", buf, 2u);
    }
  }

  objc_msgSend(*(id *)(a1 + 32), "_createCoverCache");
  v177 = v174;
  v178 = v177;
  if (v10 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v177))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v178, OS_SIGNPOST_INTERVAL_END, spid, "Cover Cache", "", buf, 2u);
  }

  v179 = sub_100036938();
  v180 = objc_claimAutoreleasedReturnValue(v179);
  if (os_log_type_enabled(v180, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v180, OS_LOG_TYPE_DEFAULT, "Signaling library did initialize", buf, 2u);
  }

  v181 = &_dispatch_main_q;
  v197[0] = _NSConcreteStackBlock;
  v197[1] = 3221225472;
  v197[2] = sub_1001C29B0;
  v197[3] = &unk_1008E72C0;
  v197[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v197);

  kdebug_trace(725353712, 25, 0, 0, 0);
  objc_destroyWeak(&v204);

  objc_destroyWeak(&location);
}

void sub_1000368B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id a42)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a42);
  _Unwind_Resume(a1);
}

id sub_100036938()
{
  if (qword_1009F5248 != -1)
    dispatch_once(&qword_1009F5248, &stru_1008EF2D8);
  return (id)qword_1009F5240;
}

uint64_t sub_1000369B8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void PersonalizationEventDonor.configurationDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[5];
  __int128 v19;
  __int128 v20;

  v1 = v0;
  Notification.object.getter(v18);
  if (!v18[3])
  {
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D04E0);
    goto LABEL_8;
  }
  v2 = type metadata accessor for RCDataContainer(0);
  if ((swift_dynamicCast(&v19, v18, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_8:
    v5 = *(void **)(v0 + OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer);
    goto LABEL_9;
  }
  v3 = (void *)v19;
  v4 = OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer;
  v5 = *(void **)(v0 + OBJC_IVAR___BKPersonalizationEventDonor_remoteConfigurationContainer);
  if (!(_QWORD)v19)
  {
LABEL_9:
    if (v5)
      return;
    v9 = 0;
LABEL_11:
    v10 = v9;
    v11 = Notification.userInfo.getter();
    if (v11)
    {
      v12 = v11;
      type metadata accessor for RCDataContainer(0);
      *(_QWORD *)&v19 = static RCDataContainer.changeNotificationConfigValue.getter();
      *((_QWORD *)&v19 + 1) = v13;
      AnyHashable.init<A>(_:)(&v19, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v12 + 16) && (v14 = sub_1000561E8((uint64_t)v18), (v15 & 1) != 0))
      {
        sub_10004CD0C(*(_QWORD *)(v12 + 56) + 32 * v14, (uint64_t)&v19);
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      swift_bridgeObjectRelease(v12);
      sub_1000569AC((uint64_t)v18);
      if (*((_QWORD *)&v20 + 1))
      {
        v16 = sub_10004CFD4(&qword_1009D3090);
        if (swift_dynamicCast(v18, &v19, (char *)&type metadata for Any + 8, v16, 6))
          v17 = v18[0];
        else
          v17 = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    sub_100010960((uint64_t)&v19, (uint64_t *)&unk_1009D04E0);
    v17 = 0;
LABEL_22:
    sub_100036C54((uint64_t)v9, v17);

    swift_bridgeObjectRelease(v17);
    return;
  }
  if (!v5)
  {

    return;
  }
  v6 = v5;
  v7 = v3;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) != 0)
  {
    v9 = *(void **)(v1 + v4);
    goto LABEL_11;
  }
}

void sub_100036C54(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  NSDictionary v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t MetatypeMetadata;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _UNKNOWN **v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int64_t v84;
  int64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  int64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t i;
  uint64_t v103;
  unint64_t v104;
  char v105;
  _QWORD *v106;
  Class v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int64_t v111;
  id v112;
  Class isa;
  uint64_t v114;
  uint64_t ObjectType;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  void (**v119)(char *, id);
  _QWORD *v120;
  uint64_t v121;
  __int128 v122;
  _OWORD v123[2];
  __int128 v124;
  __int128 v125;
  _QWORD *v126;
  _BYTE v127[40];
  uint64_t v128;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v7 = __chkstk_darwin(v6);
  v116 = (uint64_t)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v108 - v10;
  __chkstk_darwin(v9);
  v117 = (uint64_t)&v108 - v12;
  v13 = (_QWORD *)type metadata accessor for Logger(0);
  v119 = (void (**)(char *, id))*(v13 - 1);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2;
  if (a2)
    goto LABEL_4;
  if (a1)
  {
    v17 = RCDataContainer.configs.getter(v14);
LABEL_4:
    swift_bridgeObjectRetain(a2);
    goto LABEL_5;
  }
  v17 = sub_10003FB0C((uint64_t)_swiftEmptyArrayStorage);
LABEL_5:
  v18.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  static String._unconditionallyBridgeFromObjectiveC(_:)(BRCBooksDefaultsKeyPersonalizationLocalSignalCollectionEnabled);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v22 = -[objc_class valueForKeyPath:](v18.super.isa, "valueForKeyPath:", v21);

  if (v22)
  {
    _bridgeAnyObjectToAny(_:)(v22);
    swift_unknownObjectRelease(v22);
  }
  else
  {
    v124 = 0u;
    v125 = 0u;
  }
  sub_100025B3C((uint64_t)&v124, (uint64_t)v127, (uint64_t *)&unk_1009D04E0);
  sub_10000B5E4((uint64_t)v127, (uint64_t)&v124, (uint64_t *)&unk_1009D04E0);
  if (*((_QWORD *)&v125 + 1))
  {
    v23 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
    if ((swift_dynamicCast(&v122, &v124, (char *)&type metadata for Any + 8, v23, 6) & 1) != 0)
    {
      v24 = (void *)v122;
      v25 = objc_msgSend((id)v122, "BOOLValue");

      goto LABEL_13;
    }
  }
  else
  {
    sub_100010960((uint64_t)&v124, (uint64_t *)&unk_1009D04E0);
  }
  v25 = 0;
LABEL_13:
  static String._unconditionallyBridgeFromObjectiveC(_:)(BRCBooksDefaultsKeyPersonalizationLocalSignalPurge);
  v27 = v26;
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  v29 = -[objc_class valueForKeyPath:](v18.super.isa, "valueForKeyPath:", v28);

  if (v29)
  {
    _bridgeAnyObjectToAny(_:)(v29);
    swift_unknownObjectRelease(v29);
  }
  else
  {
    v122 = 0u;
    v123[0] = 0u;
  }
  sub_100025B3C((uint64_t)&v122, (uint64_t)&v124, (uint64_t *)&unk_1009D04E0);
  if (*((_QWORD *)&v125 + 1))
  {
    v30 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    if (swift_dynamicCast(&v120, &v124, (char *)&type metadata for Any + 8, v30, 6))
    {
      v31 = v120;
      goto LABEL_21;
    }
  }
  else
  {
    sub_100010960((uint64_t)&v124, (uint64_t *)&unk_1009D04E0);
  }
  v31 = _swiftEmptyArrayStorage;
LABEL_21:
  v118 = v31;
  v32 = OBJC_IVAR___BKPersonalizationEventDonor_config;
  *(_QWORD *)&v124 = *(_QWORD *)&v3[OBJC_IVAR___BKPersonalizationEventDonor_config];
  v33 = sub_10004CFD4(&qword_1009D3090);
  v34 = sub_100030B34(&qword_1009E29F8, &qword_1009D3090, (uint64_t)&protocol conformance descriptor for [A : B]);
  v35 = Collection.isNotEmpty.getter(v33, v34);
  if (v25 == (v35 & 1))
  {
    sub_100010960((uint64_t)v127, (uint64_t *)&unk_1009D04E0);

    swift_bridgeObjectRelease(v118);
    return;
  }
  v112 = v13;
  isa = v18.super.isa;
  v36 = static Logger.engagement.getter(v35);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter(v37);
  v39 = os_log_type_enabled(v37, v38);
  v114 = v33;
  v110 = v11;
  v111 = v32;
  if (v39)
  {
    v40 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v122 = v41;
    *(_DWORD *)v40 = 136315394;
    v109 = v16;
    *(_QWORD *)&v124 = ObjectType;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v43 = String.init<A>(describing:)(&v124, MetatypeMetadata);
    v45 = v44;
    *(_QWORD *)&v124 = sub_100040F58(v43, v44, (uint64_t *)&v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, (char *)&v124 + 8, v40 + 4, v40 + 12);
    swift_bridgeObjectRelease(v45);
    *(_WORD *)(v40 + 12) = 2082;
    if (v25)
      v46 = 1702195828;
    else
      v46 = 0x65736C6166;
    if (v25)
      v47 = 0xE400000000000000;
    else
      v47 = 0xE500000000000000;
    *(_QWORD *)&v124 = sub_100040F58(v46, v47, (uint64_t *)&v122);
    v48 = v117;
    v32 = v111;
    v33 = v114;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, (char *)&v124 + 8, v40 + 14, v40 + 22);
    swift_bridgeObjectRelease(v47);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Updating %s enabled=%{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    v119[1](v109, v112);
  }
  else
  {

    v119[1](v16, v112);
    v48 = v117;
  }
  if (!v25)
  {
    v53 = sub_10003FB0C((uint64_t)_swiftEmptyArrayStorage);
    v54 = *(_QWORD *)&v3[v32];
    *(_QWORD *)&v3[v32] = v53;
    swift_bridgeObjectRelease(v54);
    v55 = *(_QWORD *)&v3[OBJC_IVAR___BKPersonalizationEventDonor_booksPersonalizationSectionIDs];
    *(_QWORD *)&v3[OBJC_IVAR___BKPersonalizationEventDonor_booksPersonalizationSectionIDs] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v55);
LABEL_50:
    v126 = _swiftEmptyArrayStorage;
    v112 = v3;
    v79 = *(_QWORD *)&v3[v32];
    v80 = v79 + 64;
    v81 = 1 << *(_BYTE *)(v79 + 32);
    v82 = -1;
    if (v81 < 64)
      v82 = ~(-1 << v81);
    v83 = v82 & *(_QWORD *)(v79 + 64);
    v84 = (unint64_t)(v81 + 63) >> 6;
    v119 = (void (**)(char *, id))v123;
    v109 = (char *)(v84 - 1);
    swift_bridgeObjectRetain(v79);
    v85 = 0;
    v111 = v84 - 5;
    v110 = (char *)(v79 + 104);
    v117 = (uint64_t)"setupCollections";
    v116 = v79 + 64;
    ObjectType = v84;
    while (!v83)
    {
      v91 = v85 + 1;
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        goto LABEL_101;
      }
      if (v91 >= v84)
      {
        v93 = (char *)v85;
      }
      else
      {
        v92 = *(_QWORD *)(v80 + 8 * v91);
        if (v92)
          goto LABEL_60;
        v93 = (char *)(v85 + 1);
        if (v85 + 2 < v84)
        {
          v92 = *(_QWORD *)(v80 + 8 * (v85 + 2));
          if (v92)
          {
            v91 = v85 + 2;
            goto LABEL_60;
          }
          v93 = (char *)(v85 + 2);
          if (v85 + 3 < v84)
          {
            v92 = *(_QWORD *)(v80 + 8 * (v85 + 3));
            if (v92)
            {
              v91 = v85 + 3;
LABEL_60:
              v83 = (v92 - 1) & v92;
              v87 = __clz(__rbit64(v92)) + (v91 << 6);
              v85 = v91;
LABEL_56:
              v88 = *(_QWORD *)(v79 + 56);
              v89 = (_QWORD *)(*(_QWORD *)(v79 + 48) + 16 * v87);
              v90 = v89[1];
              *(_QWORD *)&v122 = *v89;
              *((_QWORD *)&v122 + 1) = v90;
              sub_10004CD0C(v88 + 32 * v87, (uint64_t)v119);
              swift_bridgeObjectRetain(v90);
              goto LABEL_63;
            }
            v91 = v85 + 4;
            v93 = (char *)(v85 + 3);
            if (v85 + 4 < v84)
            {
              v92 = *(_QWORD *)(v80 + 8 * v91);
              if (v92)
                goto LABEL_60;
              while (v111 != v85)
              {
                v92 = *(_QWORD *)&v110[8 * v85++];
                if (v92)
                {
                  v91 = v85 + 4;
                  goto LABEL_60;
                }
              }
              v93 = v109;
            }
          }
        }
      }
      v83 = 0;
      memset(v123, 0, sizeof(v123));
      v85 = (int64_t)v93;
      v122 = 0u;
LABEL_63:
      sub_100025B3C((uint64_t)&v122, (uint64_t)&v124, &qword_1009E2A00);
      if (!*((_QWORD *)&v124 + 1))
      {
        swift_bridgeObjectRelease(v118);
        swift_release(v79);
        swift_beginAccess(&v126, &v124, 0, 0);
        v106 = v126;
        type metadata accessor for BasePropertyConfiguration(0);
        v107 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v106);
        objc_msgSend(v112, "setEventConfigurations:", v107);

        sub_100010960((uint64_t)v127, (uint64_t *)&unk_1009D04E0);
        return;
      }
      swift_bridgeObjectRelease(*((_QWORD *)&v124 + 1));
      sub_10004CFC4(&v125, &v122);
      if ((swift_dynamicCast(&v120, &v122, (char *)&type metadata for Any + 8, v33, 6) & 1) != 0)
      {
        v94 = (uint64_t)v120;
        if (v120[2]
          && (v95 = sub_10004CE80(0xD000000000000013, v117 | 0x8000000000000000), (v96 & 1) != 0)
          && (sub_10004CD0C(*(_QWORD *)(v94 + 56) + 32 * v95, (uint64_t)&v122),
              (swift_dynamicCast(&v120, &v122, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0))
        {
          swift_bridgeObjectRelease(v121);
          sub_10004C8E4(v94, (uint64_t)v118, &v126);
          swift_bridgeObjectRelease(v94);
        }
        else
        {
          if (*(_QWORD *)(v94 + 16) && (v97 = sub_10004CE80(1702060387, 0xE400000000000000), (v98 & 1) != 0))
          {
            sub_10004CD0C(*(_QWORD *)(v94 + 56) + 32 * v97, (uint64_t)&v122);
          }
          else
          {
            v122 = 0u;
            v123[0] = 0u;
          }
          swift_bridgeObjectRelease(v94);
          if (*((_QWORD *)&v123[0] + 1))
          {
            v99 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
            if ((swift_dynamicCast(&v120, &v122, (char *)&type metadata for Any + 8, v99, 6) & 1) != 0)
            {
              v100 = v120;
              v101 = v120[2];
              if (v101)
              {
                for (i = 0; i != v101; ++i)
                {
                  v103 = v100[i + 4];
                  if (*(_QWORD *)(v103 + 16))
                  {
                    swift_bridgeObjectRetain(v100[i + 4]);
                    v104 = sub_10004CE80(0xD000000000000013, 0x80000001007C8DC0);
                    if ((v105 & 1) != 0)
                    {
                      sub_10004CD0C(*(_QWORD *)(v103 + 56) + 32 * v104, (uint64_t)&v122);
                      if ((swift_dynamicCast(&v120, &v122, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
                      {
                        swift_bridgeObjectRelease(v121);
                        sub_10004C8E4(v103, (uint64_t)v118, &v126);
                      }
                    }
                    swift_bridgeObjectRelease(v103);
                  }
                }
                swift_bridgeObjectRelease(v100);
                v33 = v114;
              }
              else
              {
                swift_bridgeObjectRelease(v120);
              }
              v80 = v116;
              v84 = ObjectType;
            }
          }
          else
          {
            sub_100010960((uint64_t)&v122, (uint64_t *)&unk_1009D04E0);
          }
        }
      }
    }
    v86 = __clz(__rbit64(v83));
    v83 &= v83 - 1;
    v87 = v86 | (v85 << 6);
    goto LABEL_56;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(BRCBooksDefaultsKeyPersonalizationBooksPersonalizationSections);
  v50 = v49;
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v50);
  v52 = -[objc_class valueForKeyPath:](isa, "valueForKeyPath:", v51);

  if (v52)
  {
    _bridgeAnyObjectToAny(_:)(v52);
    swift_unknownObjectRelease(v52);
  }
  else
  {
    v122 = 0u;
    v123[0] = 0u;
  }
  sub_100025B3C((uint64_t)&v122, (uint64_t)&v124, (uint64_t *)&unk_1009D04E0);
  if (*((_QWORD *)&v125 + 1))
  {
    v56 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    if (swift_dynamicCast(&v120, &v124, (char *)&type metadata for Any + 8, v56, 6))
    {
      v57 = (_UNKNOWN **)v120;
      goto LABEL_43;
    }
  }
  else
  {
    sub_100010960((uint64_t)&v124, (uint64_t *)&unk_1009D04E0);
  }
  v57 = &off_1008F0BC0;
LABEL_43:
  v58 = *(_QWORD *)&v3[OBJC_IVAR___BKPersonalizationEventDonor_booksPersonalizationSectionIDs];
  *(_QWORD *)&v3[OBJC_IVAR___BKPersonalizationEventDonor_booksPersonalizationSectionIDs] = v57;
  swift_bridgeObjectRelease(v58);
  v59 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  *(_QWORD *)&v124 = swift_getObjectType();
  v60 = sub_10004CFD4(&qword_1009E2A08);
  String.init<A>(describing:)(&v124, v60);
  v62 = v61;
  v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v62);
  v64 = String._bridgeToObjectiveC()();
  v65 = objc_msgSend(v59, "URLForResource:withExtension:", v63, v64);

  if (v65)
  {
    v66 = (uint64_t)v110;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v65);

    v67 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 0, 1, v67);
  }
  else
  {
    v67 = type metadata accessor for URL(0);
    v66 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v110, 1, 1, v67);
  }
  sub_100025B3C(v66, v48, (uint64_t *)&unk_1009D23D0);
  v68 = v48;
  v69 = v116;
  sub_10000B5E4(v48, v116, (uint64_t *)&unk_1009D23D0);
  type metadata accessor for URL(0);
  v70 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v69, 1, v67) == 1)
  {
LABEL_101:
    __break(1u);
  }
  else
  {
    v71 = objc_allocWithZone((Class)NSDictionary);
    v72 = v116;
    URL._bridgeToObjectiveC()((NSURL *)&v128);
    v74 = v73;
    v75 = objc_msgSend(v71, "initWithContentsOfURL:", v73);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v72, v67);
    if (v75)
    {
      *(_QWORD *)&v124 = 0;
      static Dictionary._forceBridgeFromObjectiveC(_:result:)(v75, &v124, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
      v76 = v124;
      if ((_QWORD)v124)
      {

        v77 = v111;
        v78 = *(_QWORD *)&v3[v111];
        *(_QWORD *)&v3[v111] = v76;
        v32 = v77;
        swift_bridgeObjectRelease(v78);
        sub_100010960(v68, (uint64_t *)&unk_1009D23D0);
        goto LABEL_50;
      }
      goto LABEL_103;
    }
  }
  __break(1u);
LABEL_103:
  __break(1u);
}

uint64_t sub_100037A10(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Params;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  __n128 v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  unint64_t v97;
  int64_t v98;
  unint64_t v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void **v114;
  char *v115;
  char *v116;
  uint64_t Strong;
  uint64_t v118;
  void *v119;
  void **v120;
  void *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  void *v131;
  id *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  Swift::String v157;
  Swift::String v158;
  void *object;
  Swift::String v160;
  uint64_t v161;
  void *v162;
  Swift::String v163;
  id v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  char v191;
  unint64_t v192;
  uint64_t v193;
  _BOOL8 v194;
  uint64_t v195;
  char v196;
  unint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  char *v202;
  char *v203;
  uint64_t (*v204)(char *, char *, uint64_t);
  uint64_t v205;
  NSObject *v206;
  os_log_type_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t (*v214)(char *, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(char *, uint64_t);
  uint64_t v220;
  uint64_t (*v221)(char *, uint64_t);
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  NSObject *v228;
  os_log_type_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  void (*v236)(char *, uint64_t);
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t *v241;
  uint64_t v242;
  BOOL v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  char *v257;
  uint64_t v258;
  char *v259;
  void (*v260)(char *, uint64_t);
  Class isa;
  void (*v262)(char *, uint64_t);
  id v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char v268;
  unint64_t v269;
  uint64_t v270;
  _BOOL8 v271;
  uint64_t v272;
  char v273;
  _QWORD *v274;
  unint64_t v275;
  char v276;
  _QWORD *v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  int v290;
  void (*v291)(uint64_t, uint64_t);
  uint64_t v292;
  void (*v293)(char *, uint64_t);
  uint64_t v294;
  uint64_t v295;
  float v296;
  uint64_t v297;
  char v298;
  unint64_t v299;
  uint64_t v300;
  _BOOL8 v301;
  uint64_t v302;
  char v303;
  unint64_t v304;
  char v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(char *, uint64_t);
  uint64_t v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  float v316;
  char v317;
  _QWORD *v318;
  uint64_t v319;
  char v320;
  char v321;
  char *v322;
  void (*v323)(char *, uint64_t);
  uint64_t v324;
  uint64_t v325;
  char *v326;
  int v327;
  unint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  id v331;
  uint64_t v332;
  uint64_t v333;
  NSObject *v334;
  os_log_type_t v335;
  uint8_t *v336;
  uint8_t *v337;
  uint64_t v338;
  void (*v339)(char *, uint64_t);
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t (*v344)(char *, char *, uint64_t);
  uint64_t (*v345)(char *, char *, uint64_t);
  uint64_t v346;
  char v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  unint64_t v352;
  void (*v353)(char *, uint64_t);
  uint64_t v354;
  uint64_t v355;
  char v356;
  uint64_t v357;
  char v358;
  unint64_t v359;
  uint64_t v360;
  _BOOL8 v361;
  uint64_t v362;
  char v363;
  unint64_t v364;
  char v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  _QWORD *v369;
  uint64_t v370;
  char v371;
  unint64_t v372;
  uint64_t v373;
  _BOOL8 v374;
  uint64_t v375;
  char v376;
  unint64_t v377;
  char v378;
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  NSObject *v388;
  os_log_type_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  unint64_t v397;
  unint64_t v398;
  char *v399;
  uint64_t v400;
  void (*v401)(char *, uint64_t);
  uint64_t v402;
  unint64_t v403;
  unint64_t v404;
  uint64_t v405;
  id v406;
  id v407;
  void (*v408)(char *, uint64_t);
  void *v409;
  uint64_t v410;
  void *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  id v418;
  id v419;
  uint64_t result;
  int v421;
  char *v422;
  char *v423;
  int v424;
  int v425;
  uint64_t v426;
  __n128 v427;
  int v428;
  __n128 v429;
  uint64_t v430;
  void *v431;
  int v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  int v439;
  int v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  __n128 v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  int v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  char *v461;
  char *v462;
  uint64_t v463;
  int64_t v464;
  int v465;
  char *v466;
  uint64_t v467;
  unint64_t v468;
  uint64_t v469;
  uint64_t v470;
  char *v471;
  char *v472;
  uint64_t v473;
  char *v474;
  char *v475;
  char *v476;
  uint64_t v477;
  uint64_t v478;
  int v479;
  char *v480;
  uint64_t v481;
  id v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  char *v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  char *v490;
  uint64_t v491;
  int64_t v492;
  uint64_t v493;
  char *v494;
  _QWORD *v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  char *v499;
  uint64_t v500;
  uint64_t (*v501)(char *, uint64_t, uint64_t);
  uint64_t v502;
  id v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  uint64_t (*v507)(char *, char *, uint64_t);
  char *v508;
  uint64_t v509;
  char *v510;
  uint64_t v511;
  char *v512;
  uint64_t v513;
  char *v514;
  char *v515;
  uint64_t v516;
  _QWORD *v517;
  _OWORD v518[2];
  uint64_t v519;
  uint64_t v520;
  unint64_t v521;
  uint64_t v522;
  char v523[24];
  char v524[24];
  char v525[32];
  __int128 v526;
  __int128 v527;
  uint64_t v528;
  _QWORD v529[7];

  v431 = a4;
  v505 = a3;
  v511 = a2;
  v9 = 0;
  v10 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v10);
  v457 = (char *)&v422 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v488 = sub_10004CFD4(&qword_1009DA368);
  v487 = *(_QWORD *)(v488 - 8);
  __chkstk_darwin(v488);
  v497 = (uint64_t)&v422 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PBPropertyBookImpressionParam(0);
  v437 = *(_QWORD *)(v13 - 8);
  v438 = v13;
  __chkstk_darwin(v13);
  v436 = (char *)&v422 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MarkedAsFinishedMechanism(0);
  v442 = *(_QWORD *)(v15 - 8);
  v443 = v15;
  __chkstk_darwin(v15);
  v441 = (char *)&v422 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  v448 = *(_QWORD *)(v17 - 8);
  v449 = v17;
  __chkstk_darwin(v17);
  v447 = (char *)&v422 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PBPropertySingleFloatParam(0);
  v477 = *(_QWORD *)(v19 - 8);
  v478 = v19;
  __chkstk_darwin(v19);
  v476 = (char *)&v422 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Params = type metadata accessor for PBPropertyBookReadParams(0);
  v452 = *(_QWORD *)(Params - 8);
  v453 = Params;
  __chkstk_darwin(Params);
  v451 = (char *)&v422 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009DA370);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v422 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v28 = (char *)&v422 - v27;
  v516 = type metadata accessor for Date(0);
  v509 = *(_QWORD *)(v516 - 8);
  v29 = __chkstk_darwin(v516);
  v515 = (char *)&v422 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v499 = (char *)&v422 - v31;
  v513 = type metadata accessor for Google_Protobuf_Timestamp(0);
  v498 = *(_QWORD *)(v513 - 8);
  __chkstk_darwin(v513);
  v512 = (char *)&v422 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v504 = type metadata accessor for PBPropertyValue(0);
  v502 = *(_QWORD *)(v504 - 8);
  __chkstk_darwin(v504);
  v34 = (char *)&v422 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v484 = type metadata accessor for Logger(0);
  v483 = *(_QWORD *)(v484 - 8);
  v35 = __chkstk_darwin(v484);
  v475 = (char *)&v422 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v486 = (char *)&v422 - v38;
  v39 = __chkstk_darwin(v37);
  v435 = (char *)&v422 - v40;
  v41 = __chkstk_darwin(v39);
  v461 = (char *)&v422 - v42;
  __chkstk_darwin(v41);
  v423 = (char *)&v422 - v43;
  v44 = type metadata accessor for PBPropertyConfiguration(0);
  v458 = *(_QWORD *)(v44 - 8);
  v459 = v44;
  v45 = __chkstk_darwin(v44);
  v434 = (char *)&v422 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __chkstk_darwin(v45);
  v433 = (char *)&v422 - v48;
  v49 = __chkstk_darwin(v47);
  v506 = (char *)&v422 - v50;
  __chkstk_darwin(v49);
  v466 = (char *)&v422 - v51;
  v52 = type metadata accessor for PBPropertyBundle(0);
  v53 = *(_QWORD *)(v52 - 8);
  v469 = v52;
  v470 = v53;
  __chkstk_darwin(v52);
  v474 = (char *)&v422 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for PBPropertyTimeSlice(0);
  v485 = *(_QWORD *)(v55 - 8);
  v56 = __chkstk_darwin(v55);
  v460 = (char *)&v422 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v480 = (char *)&v422 - v58;
  v59 = type metadata accessor for BinaryDecodingOptions(0);
  __chkstk_darwin(v59);
  v472 = (char *)&v422 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10004CFD4(&qword_1009DA378);
  v62 = __chkstk_darwin(v61);
  v471 = (char *)&v422 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __chkstk_darwin(v62);
  v490 = (char *)&v422 - v65;
  __chkstk_darwin(v64);
  v510 = (char *)&v422 - v66;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v86 = a1;
    else
      v86 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v67 = _CocoaArrayWrapper.endIndex.getter(v86);
  }
  else
  {
    v67 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v494 = v26;
  v508 = v28;
  v514 = v34;
  v481 = v55;
  v426 = a5;
  v425 = a6;
  v493 = 0;
  if (!v67)
  {
    v495 = _swiftEmptyDictionarySingleton;
    v28 = v490;
    goto LABEL_11;
  }
  if (v67 >= 1)
  {
    v68 = 0;
    v495 = _swiftEmptyDictionarySingleton;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v69 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v68, a1);
      }
      else
      {
        v69 = *(void **)(a1 + 8 * v68 + 32);
        swift_unknownObjectRetain(v69);
      }
      ++v68;
      swift_getObjectType();
      v70 = objc_msgSend(v69, "eventName");
      v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v73 = v72;

      v74 = v495;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v495);
      v529[0] = v74;
      sub_10003A160((uint64_t)v69, v71, v73, isUniquelyReferenced_nonNull_native, v529);
      v495 = (_QWORD *)v529[0];
      swift_bridgeObjectRelease(0x8000000000000000);
      swift_bridgeObjectRelease(v73);
      v34 = v514;
      v28 = v490;
    }
    while (v67 != v68);
LABEL_11:
    swift_bridgeObjectRelease(a1);
    a6 = (uint64_t)v510;
    if (v511)
    {
      v76 = v511;
      v9 = v506;
      if ((v511 & 0xC000000000000001) == 0)
        goto LABEL_27;
LABEL_16:
      if (v76 < 0)
        v77 = v76;
      else
        v77 = v76 & 0xFFFFFFFFFFFFFF8;
      v78 = swift_bridgeObjectRetain(v511);
      v79 = __CocoaSet.makeIterator()(v77, v78);
      v80 = sub_100009E04(0, &qword_1009D0A90, BCMutableCloudData_ptr);
      v81 = sub_100064D00();
      v82 = Set.Iterator.init(_cocoa:)(v529, v79, v80, v81);
      v76 = v529[0];
      v467 = v529[1];
      v84 = v529[2];
      v492 = v529[3];
      v85 = v529[4];
      goto LABEL_31;
    }
    v9 = v506;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_15;
    goto LABEL_25;
  }
  __break(1u);
LABEL_25:
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1001E0B78((uint64_t)_swiftEmptyArrayStorage);
    v76 = v87;
    if ((v87 & 0xC000000000000001) != 0)
      goto LABEL_16;
    goto LABEL_27;
  }
LABEL_15:
  v76 = (uint64_t)&_swiftEmptySetSingleton;
  if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0)
    goto LABEL_16;
LABEL_27:
  v88 = -1 << *(_BYTE *)(v76 + 32);
  v89 = *(_QWORD *)(v76 + 56);
  v467 = v76 + 56;
  v84 = ~v88;
  v90 = -v88;
  if (v90 < 64)
    v91 = ~(-1 << v90);
  else
    v91 = -1;
  v85 = v91 & v89;
  v83 = swift_bridgeObjectRetain(v511);
  v492 = 0;
LABEL_31:
  v463 = v76 & 0x7FFFFFFFFFFFFFFFLL;
  v430 = v84;
  v464 = (unint64_t)(v84 + 64) >> 6;
  v489 = enum case for PBPropertyValue.OneOf_Params.noParams(_:);
  v479 = enum case for PBPropertyValue.OneOf_Params.floatParam(_:);
  v465 = enum case for PBPropertyValue.OneOf_Params.bookReadParams(_:);
  v450 = enum case for PBPropertyValue.OneOf_Params.markedAsFinishedParam(_:);
  v440 = enum case for PBPropertyValue.OneOf_Params.bookImpressionParam(_:);
  v422 = (char *)&type metadata for Any + 8;
  v439 = enum case for MarkedAsFinishedMechanism.UNRECOGNIZED(_:);
  v432 = enum case for MarkedAsFinishedMechanism.unknown(_:);
  v83.n128_u64[0] = 136315394;
  v429 = v83;
  v83.n128_u64[0] = 136315138;
  v427 = v83;
  v462 = (char *)&type metadata for Swift.AnyObject + 8;
  v428 = enum case for MarkedAsFinishedMechanism.manually(_:);
  v83.n128_u64[0] = 138412290;
  v446 = v83;
  v424 = enum case for MarkedAsFinishedMechanism.automatically(_:);
  v473 = v76;
  v92 = v492;
  if ((v76 & 0x8000000000000000) == 0)
    goto LABEL_35;
LABEL_32:
  v93 = __CocoaSet.Iterator.next()(v82);
  if (!v93)
    goto LABEL_195;
  v94 = v93;
  *(_QWORD *)&v518[0] = v93;
  v95 = sub_100009E04(0, &qword_1009D0A90, BCMutableCloudData_ptr);
  swift_unknownObjectRetain(v94);
  swift_dynamicCast(&v526, v518, v462, v95, 7);
  v96 = (id)v526;
  swift_unknownObjectRelease(v94);
  v492 = v92;
  v491 = v85;
  a6 = (uint64_t)v510;
  if (!v96)
  {
LABEL_195:
    sub_100299C3C(v76);
    v409 = v431;
    if (v431)
    {
      v410 = v505;
      v411 = *(void **)(v505 + OBJC_IVAR___BKEngagementManager_manager);
      v412 = type metadata accessor for BCCloudSyncVersionsAdaptor();
      v413 = swift_allocObject(v412, 24, 7);
      *(_QWORD *)(v413 + 16) = v409;
      *((_QWORD *)&v527 + 1) = v412;
      v528 = sub_10003E1A0((unint64_t *)&unk_1009DA380, v414, (uint64_t (*)(uint64_t))type metadata accessor for BCCloudSyncVersionsAdaptor, (uint64_t)&unk_10071A2F8);
      *(_QWORD *)&v526 = v413;
      v415 = swift_allocObject(&unk_1008FC2B8, 24, 7);
      swift_unknownObjectWeakInit(v415 + 16, v410);
      v416 = swift_allocObject(&unk_1008FC808, 33, 7);
      v417 = v426;
      *(_QWORD *)(v416 + 16) = v415;
      *(_QWORD *)(v416 + 24) = v417;
      *(_BYTE *)(v416 + 32) = v425 & 1;
      v418 = v409;
      v419 = v411;
      swift_retain(v415);
      swift_errorRetain(v417);
      dispatch thunk of Manager.updateCloudVersion(cloudSyncVersions:completion:)(&v526, sub_10006A398, v416);

      swift_release(v416);
      swift_release(v415);
      _s5Books15CurrentPageViewVwxx_0(&v526);
    }
    return swift_bridgeObjectRelease(v495);
  }
  while (1)
  {
    v101 = objc_opt_self(BDSMutableSecureEngagementData);
    v102 = swift_dynamicCastObjCClass(v96, v101);
    if (!v102)
    {

      v92 = v492;
      v85 = v491;
      if (v76 < 0)
        goto LABEL_32;
      goto LABEL_35;
    }
    v103 = (void *)v102;
    v104 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v485 + 56);
    v105 = v481;
    v104(a6, 1, 1, v481);
    v482 = v96;
    v106 = objc_msgSend(v103, "value");
    v107 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v109 = v108;

    v528 = 0;
    v526 = 0u;
    v527 = 0u;
    v110 = v472;
    BinaryDecodingOptions.init()();
    v111 = sub_10003E1A0(&qword_1009DA318, 255, (uint64_t (*)(uint64_t))&type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
    v112 = v107;
    v113 = v493;
    Message.init(serializedData:extensions:partial:options:)(v112, v109, &v526, 0, v110, v105, v111);
    v493 = v113;
    if (v113)
    {
      v114 = (void **)(v505 + OBJC_IVAR___BKEngagementManager_analyticsHelper);
      swift_beginAccess(v505 + OBJC_IVAR___BKEngagementManager_analyticsHelper, v525, 0, 0);
      v115 = (char *)*v114;
      if (!*v114)
        goto LABEL_210;
      v116 = &v115[OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager];
      Strong = swift_unknownObjectWeakLoadStrong(&v115[OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager]);
      v76 = v473;
      v118 = v493;
      if (Strong)
      {
        v119 = (void *)Strong;
        v120 = (void **)(Strong + OBJC_IVAR___BKEngagementManager_metadata);
        swift_beginAccess(Strong + OBJC_IVAR___BKEngagementManager_metadata, v524, 0, 0);
        v121 = *v120;
        swift_errorRetain(v118);
        swift_errorRetain(v118);
        v122 = v115;
        v123 = v121;

        v124 = &v123[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError];
        swift_beginAccess(&v123[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError], v523, 1, 0);
        v125 = *(_QWORD *)v124;
        *(_QWORD *)v124 = v118;
        swift_errorRetain(v118);
        swift_errorRelease(v125);

      }
      else
      {
        swift_errorRetain(v493);
        swift_errorRetain(v118);
        v129 = v115;
      }
      v130 = swift_unknownObjectWeakLoadStrong(v116);
      if (v130)
      {
        v131 = (void *)v130;
        v132 = (id *)(v130 + OBJC_IVAR___BKEngagementManager_metadata);
        swift_beginAccess(v130 + OBJC_IVAR___BKEngagementManager_metadata, &v522, 0, 0);
        v133 = (char *)*v132;

        v134 = (uint64_t)v457;
        Date.init()();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v509 + 56))(v134, 0, 1, v516);
        v135 = (uint64_t)&v133[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp];
        swift_beginAccess(&v133[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp], &v526, 33, 0);
        sub_10006CD88(v134, v135);
        swift_endAccess(&v526);
        swift_errorRelease(v118);

      }
      else
      {
        swift_errorRelease(v118);
      }
      swift_errorRelease(v118);

      static Logger.engagement.getter(v136);
      swift_errorRetain(v118);
      v137 = swift_errorRetain(v118);
      v138 = Logger.logObject.getter(v137);
      v139 = static os_log_type_t.error.getter(v138);
      if (os_log_type_enabled(v138, v139))
      {
        v140 = swift_slowAlloc(12, -1);
        v141 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v140 = v446.n128_u32[0];
        swift_errorRetain(v118);
        v142 = _swift_stdlib_bridgeErrorToNSError(v118);
        *(_QWORD *)(v140 + 4) = v142;
        *v141 = v142;
        swift_errorRelease(v118);
        swift_errorRelease(v118);
        _os_log_impl((void *)&_mh_execute_header, v138, v139, "Error while deserializing property time slice %@", (uint8_t *)v140, 0xCu);
        v143 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v141, 1, v143);
        swift_slowDealloc(v141, -1, -1);
        swift_slowDealloc(v140, -1, -1);

        swift_errorRelease(v118);
      }
      else
      {
        swift_errorRelease(v118);
        swift_errorRelease(v118);
        swift_errorRelease(v118);

      }
      v9 = v506;
      v126 = v485;
      v127 = v480;
      a6 = (uint64_t)v510;
      (*(void (**)(char *, uint64_t))(v483 + 8))(v475, v484);
      v493 = 0;
      v128 = (uint64_t)v471;
      v105 = v481;
    }
    else
    {
      sub_100010960(a6, &qword_1009DA378);
      v104((uint64_t)v28, 0, 1, v105);
      sub_100025B3C((uint64_t)v28, a6, &qword_1009DA378);
      v126 = v485;
      v127 = v480;
      v128 = (uint64_t)v471;
      v76 = v473;
    }
    sub_10000B5E4(a6, v128, &qword_1009DA378);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v128, 1, v105) == 1)
    {
      sub_100010960(a6, &qword_1009DA378);
      v144 = v482;

      v82 = (_QWORD *)sub_100010960(v128, &qword_1009DA378);
      v92 = v492;
      v85 = v491;
      v28 = v490;
      if (v76 < 0)
        goto LABEL_32;
      goto LABEL_35;
    }
    v146 = v481;
    v147 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 32))(v127, v128, v481);
    v520 = 0;
    v521 = 0xE000000000000000;
    v148 = PBPropertyTimeSlice.propertyBundles.getter(v147);
    v456 = *(_QWORD *)(v148 + 16);
    if (v456)
      break;
    v383 = swift_bridgeObjectRelease(v148);
    v165 = v460;
LABEL_190:
    v384 = v423;
    static Logger.engagement.getter(v383);
    v385 = (*(uint64_t (**)(char *, char *, uint64_t))(v126 + 16))(v165, v127, v146);
    v386 = v165;
    v387 = v126;
    v388 = Logger.logObject.getter(v385);
    v389 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v388, v389))
    {
      v390 = swift_slowAlloc(22, -1);
      v511 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v526 = v511;
      *(_DWORD *)v390 = v429.n128_u32[0];
      v391 = v512;
      v392 = PBPropertyTimeSlice.startOfTimeSlice.getter();
      v393 = v499;
      Google_Protobuf_Timestamp.date.getter(v392);
      (*(void (**)(char *, uint64_t))(v498 + 8))(v391, v513);
      v394 = sub_10003E1A0(&qword_1009E1D40, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v395 = v516;
      v396 = dispatch thunk of CustomStringConvertible.description.getter(v516, v394);
      v398 = v397;
      v399 = v393;
      v76 = v473;
      v400 = v481;
      (*(void (**)(char *, uint64_t))(v509 + 8))(v399, v395);
      *(_QWORD *)(v390 + 4) = sub_100040F58(v396, v398, (uint64_t *)&v526);
      swift_bridgeObjectRelease(v398);
      v401 = *(void (**)(char *, uint64_t))(v485 + 8);
      v401(v386, v400);
      *(_WORD *)(v390 + 12) = 2080;
      swift_beginAccess(&v520, &v519, 0, 0);
      v402 = v520;
      v403 = v521;
      swift_bridgeObjectRetain(v521);
      *(_QWORD *)(v390 + 14) = sub_100040F58(v402, v403, (uint64_t *)&v526);
      v404 = v403;
      a6 = (uint64_t)v510;
      swift_bridgeObjectRelease(v404);
      _os_log_impl((void *)&_mh_execute_header, v388, v389, "syncFromCloudKit(%s) downloaded %s", (uint8_t *)v390, 0x16u);
      v405 = v511;
      swift_arrayDestroy(v511, 2, v422);
      swift_slowDealloc(v405, -1, -1);
      swift_slowDealloc(v390, -1, -1);
      v406 = v482;

      (*(void (**)(char *, uint64_t))(v483 + 8))(v423, v484);
      v401(v480, v400);
      v34 = v514;
    }
    else
    {
      v407 = v482;

      v408 = *(void (**)(char *, uint64_t))(v387 + 8);
      v408(v386, v146);

      (*(void (**)(char *, uint64_t))(v483 + 8))(v384, v484);
      v408(v480, v146);
    }
    sub_100010960(a6, &qword_1009DA378);
    v82 = (_QWORD *)swift_bridgeObjectRelease(v521);
    v9 = v506;
    v28 = v490;
    v85 = v491;
    v92 = v492;
    if (v76 < 0)
      goto LABEL_32;
LABEL_35:
    if (v85)
    {
      v491 = (v85 - 1) & v85;
      v97 = __clz(__rbit64(v85)) | (v92 << 6);
      v492 = v92;
    }
    else
    {
      v98 = v92 + 1;
      if (__OFADD__(v92, 1))
        goto LABEL_202;
      if (v98 >= v464)
        goto LABEL_195;
      v99 = *(_QWORD *)(v467 + 8 * v98);
      if (!v99)
      {
        v100 = v92 + 2;
        if (v92 + 2 >= v464)
          goto LABEL_195;
        v99 = *(_QWORD *)(v467 + 8 * v100);
        if (v99)
          goto LABEL_44;
        v100 = v92 + 3;
        if (v92 + 3 >= v464)
          goto LABEL_195;
        v99 = *(_QWORD *)(v467 + 8 * v100);
        if (v99)
        {
LABEL_44:
          v98 = v100;
        }
        else
        {
          v98 = v92 + 4;
          if (v92 + 4 >= v464)
            goto LABEL_195;
          v99 = *(_QWORD *)(v467 + 8 * v98);
          if (!v99)
          {
            v145 = v92 + 5;
            while (v464 != v145)
            {
              v99 = *(_QWORD *)(v467 + 8 * v145++);
              if (v99)
              {
                v98 = v145 - 1;
                goto LABEL_45;
              }
            }
            goto LABEL_195;
          }
        }
      }
LABEL_45:
      v491 = (v99 - 1) & v99;
      v492 = v98;
      v97 = __clz(__rbit64(v99)) + (v98 << 6);
    }
    v96 = *(id *)(*(_QWORD *)(v76 + 48) + 8 * v97);
    if (!v96)
      goto LABEL_195;
  }
  v149 = 0;
  v150 = *(unsigned __int8 *)(v470 + 80);
  v454 = v148;
  v455 = v148 + ((v150 + 32) & ~v150);
  v444 = OBJC_IVAR___BKEngagementManager_manager;
  v151 = v461;
  while (1)
  {
    if (v149 >= *(_QWORD *)(v148 + 16))
      goto LABEL_201;
    v166 = *(_QWORD *)(v470 + 72);
    v468 = v149;
    v167 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v470 + 16))(v474, v455 + v166 * v149, v469);
    v168 = PBPropertyBundle.configuration.getter(v167);
    v169 = PBPropertyConfiguration.eventName.getter(v168);
    v171 = v170;
    if (v495[2])
    {
      v172 = sub_10004CE80(v169, v170);
      if ((v173 & 1) != 0)
      {
        v152 = *(id *)(v495[7] + 8 * v172);
        swift_unknownObjectRetain(v152);
        swift_bridgeObjectRelease(v171);
        goto LABEL_100;
      }
    }
    v174 = swift_bridgeObjectRelease(v171);
    v175 = v466;
    v176 = PBPropertyConfiguration.recordType.getter(v174);
    v177 = PropertyType.init(rawValue:)(v176);
    if ((v178 & 1) == 0)
      break;
    static Logger.engagement.getter(v177);
    v199 = v458;
    v200 = v459;
    v201 = *(void (**)(char *, char *, uint64_t))(v458 + 16);
    v201(v9, v175, v459);
    v202 = v433;
    v203 = v175;
    v204 = (uint64_t (*)(char *, char *, uint64_t))v201;
    v205 = ((uint64_t (*)(char *, char *, uint64_t))v201)(v433, v203, v200);
    v206 = Logger.logObject.getter(v205);
    v207 = static os_log_type_t.error.getter(v206);
    if (os_log_type_enabled(v206, v207))
    {
      v208 = swift_slowAlloc(22, -1);
      v209 = swift_slowAlloc(32, -1);
      v507 = (uint64_t (*)(char *, char *, uint64_t))v201;
      v210 = v209;
      *(_QWORD *)&v526 = v209;
      *(_DWORD *)v208 = v429.n128_u32[0];
      v211 = PBPropertyConfiguration.eventName.getter(v209);
      v213 = v212;
      *(_QWORD *)(v208 + 4) = sub_100040F58(v211, v212, (uint64_t *)&v526);
      swift_bridgeObjectRelease(v213);
      v214 = *(uint64_t (**)(char *, uint64_t))(v199 + 8);
      v215 = v214(v9, v200);
      *(_WORD *)(v208 + 12) = 2048;
      v216 = PBPropertyConfiguration.recordType.getter(v215);
      v511 = (uint64_t)v214;
      v214(v202, v200);
      *(_QWORD *)(v208 + 14) = v216;
      _os_log_impl((void *)&_mh_execute_header, v206, v207, "Seeing a configuration %s in the cloud that has unknown record type %lld", (uint8_t *)v208, 0x16u);
      swift_arrayDestroy(v210, 1, (char *)&type metadata for Any + 8);
      v217 = v210;
      v204 = v507;
      swift_slowDealloc(v217, -1, -1);
      v218 = v208;
      v151 = v461;
      swift_slowDealloc(v218, -1, -1);
    }
    else
    {
      v219 = *(void (**)(char *, uint64_t))(v199 + 8);
      v219(v202, v200);
      v511 = (uint64_t)v219;
      v219(v9, v200);
    }

    v220 = v200;
    v221 = *(uint64_t (**)(char *, uint64_t))(v483 + 8);
    v222 = v221(v151, v484);
    v224 = v434;
    v223 = v435;
    static Logger.engagement.getter(v222);
    v225 = v466;
    v226 = v204(v224, v466, v220);
    v227 = v223;
    v228 = Logger.logObject.getter(v226);
    v229 = static os_log_type_t.error.getter(v228);
    if (os_log_type_enabled(v228, v229))
    {
      v230 = swift_slowAlloc(12, -1);
      v231 = swift_slowAlloc(32, -1);
      v507 = (uint64_t (*)(char *, char *, uint64_t))v221;
      v232 = v231;
      *(_QWORD *)&v526 = v231;
      *(_DWORD *)v230 = v427.n128_u32[0];
      v233 = PBPropertyConfiguration.eventName.getter(v231);
      v235 = v234;
      *(_QWORD *)(v230 + 4) = sub_100040F58(v233, v234, (uint64_t *)&v526);
      swift_bridgeObjectRelease(v235);
      v236 = (void (*)(char *, uint64_t))v511;
      ((void (*)(char *, uint64_t))v511)(v224, v220);
      _os_log_impl((void *)&_mh_execute_header, v228, v229, "Seeing a configuration %s in the cloud that is not available locally", (uint8_t *)v230, 0xCu);
      swift_arrayDestroy(v232, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v232, -1, -1);
      v237 = v230;
      v151 = v461;
      swift_slowDealloc(v237, -1, -1);

      ((void (*)(char *, uint64_t))v507)(v227, v484);
    }
    else
    {

      v236 = (void (*)(char *, uint64_t))v511;
      ((void (*)(char *, uint64_t))v511)(v224, v220);
      v221(v227, v484);
    }
    v236(v225, v220);
    (*(void (**)(char *, uint64_t))(v470 + 8))(v474, v469);
    v34 = v514;
    v9 = v506;
    v165 = v460;
    a6 = (uint64_t)v510;
LABEL_76:
    v149 = v468 + 1;
    v126 = v485;
    v127 = v480;
    v148 = v454;
    if (v468 + 1 == v456)
    {
      v383 = swift_bridgeObjectRelease(v454);
      v146 = v481;
      v76 = v473;
      goto LABEL_190;
    }
  }
  v179 = v177;
  v180 = PBPropertyConfiguration.eventName.getter(v177);
  v182 = v181;
  v183 = PBPropertyConfiguration.ageToExpire.getter();
  v184 = PBPropertyConfiguration.countLimit.getter();
  v185 = objc_allocWithZone((Class)type metadata accessor for BasePropertyConfiguration(0));
  LOBYTE(v421) = 1;
  v152 = (id)BasePropertyConfiguration.init(eventName:recordType:identifier:ageToExpire:countLimit:shouldBeCached:shouldBeSynced:)(v180, v182, v179, 0, 0, v183, v184, 1, v421);
  v186 = PBPropertyConfiguration.eventName.getter(v152);
  v188 = v187;
  v189 = v495;
  v190 = swift_isUniquelyReferenced_nonNull_native(v495);
  *(_QWORD *)&v526 = v189;
  v192 = sub_10004CE80(v186, v188);
  v193 = v189[2];
  v194 = (v191 & 1) == 0;
  v195 = v193 + v194;
  if (__OFADD__(v193, v194))
    goto LABEL_205;
  v196 = v191;
  if (v189[3] >= v195)
  {
    if ((v190 & 1) == 0)
      sub_1002C0294();
  }
  else
  {
    sub_10003A2BC(v195, v190);
    v197 = sub_10004CE80(v186, v188);
    if ((v196 & 1) != (v198 & 1))
      goto LABEL_211;
    v192 = v197;
  }
  v238 = v493;
  v239 = (_QWORD *)v526;
  v495 = (_QWORD *)v526;
  if ((v196 & 1) != 0)
  {
    v240 = *(_QWORD *)(v526 + 56);
    swift_unknownObjectRelease(*(_QWORD *)(v240 + 8 * v192));
    *(_QWORD *)(v240 + 8 * v192) = v152;
  }
  else
  {
    *(_QWORD *)(v526 + 8 * (v192 >> 6) + 64) |= 1 << v192;
    v241 = (uint64_t *)(v239[6] + 16 * v192);
    *v241 = v186;
    v241[1] = v188;
    *(_QWORD *)(v239[7] + 8 * v192) = v152;
    v242 = v239[2];
    v243 = __OFADD__(v242, 1);
    v244 = v242 + 1;
    if (v243)
      goto LABEL_208;
    v239[2] = v244;
    swift_bridgeObjectRetain(v188);
  }
  v493 = v238;
  swift_bridgeObjectRelease(0x8000000000000000);
  swift_bridgeObjectRelease(v188);
  v9 = v506;
  a6 = (uint64_t)v510;
LABEL_100:
  v245 = swift_unknownObjectRetain(v152);
  v246 = PBPropertyBundle.propertyValues.getter(v245);
  v247 = *(_QWORD *)(v246 + 16);
  v248 = v504;
  if (!v247)
  {
    swift_bridgeObjectRelease(v246);
    v251 = _swiftEmptyArrayStorage;
LABEL_75:
    v153 = objc_msgSend(v152, "eventName", v422);
    v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(v153);
    v156 = v155;

    *(_QWORD *)&v526 = v154;
    *((_QWORD *)&v526 + 1) = v156;
    v157._countAndFlagsBits = 40;
    v157._object = (void *)0xE100000000000000;
    String.append(_:)(v157);
    *(_QWORD *)&v518[0] = v251[2];
    v158._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v158._object;
    String.append(_:)(v158);
    swift_bridgeObjectRelease(object);
    v160._countAndFlagsBits = 8233;
    v160._object = (void *)0xE200000000000000;
    String.append(_:)(v160);
    v162 = (void *)*((_QWORD *)&v526 + 1);
    v161 = v526;
    swift_beginAccess(&v520, &v526, 33, 0);
    v163._countAndFlagsBits = v161;
    v163._object = v162;
    String.append(_:)(v163);
    swift_endAccess(&v526);
    swift_bridgeObjectRelease(v162);
    v164 = *(id *)(v505 + v444);
    dispatch thunk of Manager.restoreFromSync(configuration:properties:)(v152, v251);
    swift_bridgeObjectRelease(v251);

    swift_unknownObjectRelease_n(v152, 2);
    (*(void (**)(char *, uint64_t))(v458 + 8))(v466, v459);
    (*(void (**)(char *, uint64_t))(v470 + 8))(v474, v469);
    v165 = v460;
    v151 = v461;
    goto LABEL_76;
  }
  v503 = v152;
  v249 = *(unsigned __int8 *)(v502 + 80);
  v445 = v246;
  v250 = v246 + ((v249 + 32) & ~v249);
  v500 = *(_QWORD *)(v502 + 72);
  v501 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v502 + 16);
  v251 = _swiftEmptyArrayStorage;
  while (1)
  {
    v511 = (uint64_t)v251;
    v252 = v501(v34, v250, v248);
    v253 = PBPropertyValue.assetID.getter(v252);
    if (v253)
    {
      *(_QWORD *)&v526 = PBPropertyValue.assetID.getter(v253);
      v507 = (uint64_t (*)(char *, char *, uint64_t))dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
      v255 = v254;
    }
    else
    {
      v507 = 0;
      v255 = 0;
    }
    v256 = sub_10030DBB0();
    v257 = v512;
    v258 = ((uint64_t (*)(void))PBPropertyValue.createdAt.getter)();
    v259 = v499;
    Google_Protobuf_Timestamp.date.getter(v258);
    v260 = *(void (**)(char *, uint64_t))(v498 + 8);
    v260(v257, v513);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v262 = *(void (**)(char *, uint64_t))(v509 + 8);
    v262(v259, v516);
    v263 = objc_msgSend(v256, "stringFromDate:", isa);

    v264 = static String._unconditionallyBridgeFromObjectiveC(_:)(v263);
    v266 = v265;

    *((_QWORD *)&v527 + 1) = &type metadata for String;
    *(_QWORD *)&v526 = v264;
    *((_QWORD *)&v526 + 1) = v266;
    sub_10004CFC4(&v526, v518);
    v267 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v517 = _swiftEmptyDictionarySingleton;
    v269 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070);
    v270 = _swiftEmptyDictionarySingleton[2];
    v271 = (v268 & 1) == 0;
    v272 = v270 + v271;
    if (__OFADD__(v270, v271))
      break;
    v273 = v268;
    if (_swiftEmptyDictionarySingleton[3] >= v272)
    {
      if ((v267 & 1) != 0)
      {
        v274 = _swiftEmptyDictionarySingleton;
        if ((v268 & 1) != 0)
          goto LABEL_112;
      }
      else
      {
        sub_1002BFAC8();
        v274 = v517;
        if ((v273 & 1) != 0)
          goto LABEL_112;
      }
    }
    else
    {
      sub_10037A77C(v272, v267);
      v274 = v517;
      v275 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070);
      if ((v273 & 1) != (v276 & 1))
        goto LABEL_211;
      v269 = v275;
      if ((v273 & 1) != 0)
      {
LABEL_112:
        v277 = (_QWORD *)(v274[7] + 32 * v269);
        _s5Books15CurrentPageViewVwxx_0(v277);
        sub_10004CFC4(v518, v277);
        goto LABEL_117;
      }
    }
    v274[(v269 >> 6) + 8] |= 1 << v269;
    v278 = (_QWORD *)(v274[6] + 16 * v269);
    *v278 = 0x6D617473656D6974;
    v278[1] = 0xE900000000000070;
    sub_10004CFC4(v518, (_OWORD *)(v274[7] + 32 * v269));
    v279 = v274[2];
    v243 = __OFADD__(v279, 1);
    v280 = v279 + 1;
    if (v243)
      goto LABEL_199;
    v274[2] = v280;
LABEL_117:
    v281 = swift_bridgeObjectRelease(0x8000000000000000);
    v282 = v512;
    v283 = v514;
    v284 = PBPropertyValue.createdAt.getter(v281);
    Google_Protobuf_Timestamp.date.getter(v284);
    v285 = ((uint64_t (*)(char *, uint64_t))v260)(v282, v513);
    v34 = v283;
    v286 = (uint64_t)v508;
    PBPropertyValue.params.getter(v285);
    v287 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
    v288 = *(_QWORD *)(v287 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v288 + 48))(v286, 1, v287) == 1)
      goto LABEL_141;
    v289 = (uint64_t)v494;
    sub_10000B5E4(v286, (uint64_t)v494, &qword_1009DA370);
    v290 = (*(uint64_t (**)(uint64_t, uint64_t))(v288 + 88))(v289, v287);
    if (v290 == v489)
    {
      v291 = *(void (**)(uint64_t, uint64_t))(v288 + 8);
      v292 = v289;
      goto LABEL_120;
    }
    if (v290 != v479)
    {
      if (v290 == v465)
      {
        v309 = *(void (**)(char *, uint64_t))(v288 + 96);
        v310 = (uint64_t)v494;
        v309(v494, v287);
        v312 = v451;
        v311 = v452;
        v313 = v310;
        v314 = v453;
        v315 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v452 + 32))(v451, v313, v453);
        v316 = PBPropertyBookReadParams.progress.getter(v315);
        *((_QWORD *)&v527 + 1) = &type metadata for Float;
        *(float *)&v526 = v316;
        sub_10004CFC4(&v526, v518);
        v317 = swift_isUniquelyReferenced_nonNull_native(v274);
        v517 = v274;
        sub_1002C3A2C(v518, 0x73736572676F7270, 0xE800000000000000, v317);
        v318 = v517;
        v319 = swift_bridgeObjectRelease(0x8000000000000000);
        v320 = PBPropertyBookReadParams.isSample.getter(v319);
        *((_QWORD *)&v527 + 1) = &type metadata for Bool;
        LOBYTE(v526) = v320 & 1;
        sub_10004CFC4(&v526, v518);
        v321 = swift_isUniquelyReferenced_nonNull_native(v318);
        v517 = v318;
        sub_1002C3A2C(v518, 0x656C706D61537369, 0xE800000000000000, v321);
        v274 = v517;
        swift_bridgeObjectRelease(0x8000000000000000);
        v322 = v312;
        v286 = (uint64_t)v508;
        (*(void (**)(char *, uint64_t))(v311 + 8))(v322, v314);
        goto LABEL_121;
      }
      if (v290 == v450)
      {
        v323 = *(void (**)(char *, uint64_t))(v288 + 96);
        v324 = (uint64_t)v494;
        v323(v494, v287);
        v325 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v448 + 32))(v447, v324, v449);
        v326 = v441;
        PBPropertyMarkedAsFinishedParam.value.getter(v325);
        v327 = (*(uint64_t (**)(char *, uint64_t))(v442 + 88))(v326, v443);
        v328 = 0xE700000000000000;
        v329 = 0x6E776F6E6B6E75;
        if (v327 != v439 && v327 != v432)
        {
          if (v327 == v428)
          {
            v328 = 0xE800000000000000;
            v329 = 0x796C6C61756E616DLL;
          }
          else if (v327 == v424)
          {
            v328 = 0xED0000796C6C6163;
            v329 = 0x6974616D6F747561;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v442 + 8))(v441, v443);
            v328 = 0xE700000000000000;
            v329 = 0x6E776F6E6B6E75;
          }
        }
        *((_QWORD *)&v527 + 1) = &type metadata for String;
        *(_QWORD *)&v526 = v329;
        *((_QWORD *)&v526 + 1) = v328;
        sub_10004CFC4(&v526, v518);
        v370 = swift_isUniquelyReferenced_nonNull_native(v274);
        v517 = v274;
        v372 = sub_10004CE80(0x73696E616863656DLL, 0xE90000000000006DLL);
        v373 = v274[2];
        v374 = (v371 & 1) == 0;
        v375 = v373 + v374;
        if (__OFADD__(v373, v374))
          goto LABEL_204;
        v376 = v371;
        if (v274[3] >= v375)
        {
          if ((v370 & 1) != 0)
          {
            v34 = v514;
            if ((v371 & 1) == 0)
              goto LABEL_173;
          }
          else
          {
            sub_1002BFAC8();
            v274 = v517;
            v34 = v514;
            if ((v376 & 1) == 0)
              goto LABEL_173;
          }
        }
        else
        {
          sub_10037A77C(v375, v370);
          v274 = v517;
          v377 = sub_10004CE80(0x73696E616863656DLL, 0xE90000000000006DLL);
          if ((v376 & 1) != (v378 & 1))
            goto LABEL_211;
          v372 = v377;
          v34 = v514;
          if ((v376 & 1) == 0)
          {
LABEL_173:
            v274[(v372 >> 6) + 8] |= 1 << v372;
            v379 = (_QWORD *)(v274[6] + 16 * v372);
            *v379 = 0x73696E616863656DLL;
            v379[1] = 0xE90000000000006DLL;
            sub_10004CFC4(v518, (_OWORD *)(v274[7] + 32 * v372));
            v380 = v274[2];
            v243 = __OFADD__(v380, 1);
            v381 = v380 + 1;
            if (v243)
              goto LABEL_207;
            v274[2] = v381;
            goto LABEL_178;
          }
        }
        v382 = (_QWORD *)(v274[7] + 32 * v372);
        _s5Books15CurrentPageViewVwxx_0(v382);
        sub_10004CFC4(v518, v382);
LABEL_178:
        swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(char *, uint64_t))(v448 + 8))(v447, v449);
        goto LABEL_140;
      }
      if (v290 != v440)
      {
        v291 = *(void (**)(uint64_t, uint64_t))(v288 + 8);
        v292 = (uint64_t)v494;
LABEL_120:
        v291(v292, v287);
LABEL_121:
        v34 = v514;
        goto LABEL_141;
      }
      v353 = *(void (**)(char *, uint64_t))(v288 + 96);
      v354 = (uint64_t)v494;
      v353(v494, v287);
      v355 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v437 + 32))(v436, v354, v438);
      v356 = PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.getter(v355);
      *((_QWORD *)&v527 + 1) = &type metadata for Bool;
      LOBYTE(v526) = v356 & 1;
      sub_10004CFC4(&v526, v518);
      v357 = swift_isUniquelyReferenced_nonNull_native(v274);
      v517 = v274;
      v359 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65);
      v360 = v274[2];
      v361 = (v358 & 1) == 0;
      v362 = v360 + v361;
      if (__OFADD__(v360, v361))
        goto LABEL_206;
      v363 = v358;
      if (v274[3] >= v362)
      {
        if ((v357 & 1) != 0)
        {
          v34 = v514;
          if ((v358 & 1) == 0)
            goto LABEL_159;
        }
        else
        {
          sub_1002BFAC8();
          v274 = v517;
          v34 = v514;
          if ((v363 & 1) == 0)
            goto LABEL_159;
        }
      }
      else
      {
        sub_10037A77C(v362, v357);
        v274 = v517;
        v364 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65);
        if ((v363 & 1) != (v365 & 1))
          goto LABEL_211;
        v359 = v364;
        v34 = v514;
        if ((v363 & 1) == 0)
        {
LABEL_159:
          v274[(v359 >> 6) + 8] |= 1 << v359;
          v366 = v274[6] + 16 * v359;
          strcpy((char *)v366, "weRecommended");
          *(_WORD *)(v366 + 14) = -4864;
          sub_10004CFC4(v518, (_OWORD *)(v274[7] + 32 * v359));
          v367 = v274[2];
          v243 = __OFADD__(v367, 1);
          v368 = v367 + 1;
          if (v243)
            goto LABEL_209;
          v274[2] = v368;
          goto LABEL_167;
        }
      }
      v369 = (_QWORD *)(v274[7] + 32 * v359);
      _s5Books15CurrentPageViewVwxx_0(v369);
      sub_10004CFC4(v518, v369);
LABEL_167:
      swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(char *, uint64_t))(v437 + 8))(v436, v438);
      goto LABEL_140;
    }
    v293 = *(void (**)(char *, uint64_t))(v288 + 96);
    v294 = (uint64_t)v494;
    v293(v494, v287);
    v295 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v477 + 32))(v476, v294, v478);
    v296 = PBPropertySingleFloatParam.value.getter(v295);
    *((_QWORD *)&v527 + 1) = &type metadata for Float;
    *(float *)&v526 = v296;
    sub_10004CFC4(&v526, v518);
    v297 = swift_isUniquelyReferenced_nonNull_native(v274);
    v517 = v274;
    v299 = sub_10004CE80(0x676E69746172, 0xE600000000000000);
    v300 = v274[2];
    v301 = (v298 & 1) == 0;
    v302 = v300 + v301;
    if (__OFADD__(v300, v301))
      goto LABEL_200;
    v303 = v298;
    if (v274[3] >= v302)
    {
      if ((v297 & 1) != 0)
      {
        v34 = v514;
        if ((v298 & 1) == 0)
          goto LABEL_127;
      }
      else
      {
        sub_1002BFAC8();
        v274 = v517;
        v34 = v514;
        if ((v303 & 1) == 0)
          goto LABEL_127;
      }
    }
    else
    {
      sub_10037A77C(v302, v297);
      v274 = v517;
      v304 = sub_10004CE80(0x676E69746172, 0xE600000000000000);
      if ((v303 & 1) != (v305 & 1))
        goto LABEL_211;
      v299 = v304;
      v34 = v514;
      if ((v303 & 1) == 0)
      {
LABEL_127:
        v274[(v299 >> 6) + 8] |= 1 << v299;
        v306 = (_QWORD *)(v274[6] + 16 * v299);
        *v306 = 0x676E69746172;
        v306[1] = 0xE600000000000000;
        sub_10004CFC4(v518, (_OWORD *)(v274[7] + 32 * v299));
        v307 = v274[2];
        v243 = __OFADD__(v307, 1);
        v308 = v307 + 1;
        if (v243)
          goto LABEL_203;
        v274[2] = v308;
        goto LABEL_139;
      }
    }
    v330 = (_QWORD *)(v274[7] + 32 * v299);
    _s5Books15CurrentPageViewVwxx_0(v330);
    sub_10004CFC4(v518, v330);
LABEL_139:
    swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(char *, uint64_t))(v477 + 8))(v476, v478);
LABEL_140:
    v286 = (uint64_t)v508;
LABEL_141:
    a6 = (uint64_t)v510;
    sub_100010960(v286, &qword_1009DA370);
    v331 = objc_msgSend(v503, "recordType");
    if (v331 == (id)2)
    {
      v496 = v250;
      v338 = v247;
      v339 = v262;
      v341 = ((uint64_t (*)(void))PBPropertyValue.identifier.getter)();
      v343 = v348;
      sub_100056604((uint64_t)v274);
      v346 = v349;
      swift_bridgeObjectRelease(v274);
      v347 = 2;
      v345 = v507;
      goto LABEL_148;
    }
    if (v331 == (id)1)
    {
      v496 = v250;
      v338 = v247;
      v339 = v262;
      v340 = swift_bridgeObjectRelease(v255);
      v341 = PBPropertyValue.identifier.getter(v340);
      v343 = v342;
      sub_100056604((uint64_t)v274);
      v345 = (uint64_t (*)(char *, char *, uint64_t))v344;
      swift_bridgeObjectRelease(v274);
      v255 = 0;
      v346 = 0;
      v347 = 1;
LABEL_148:
      v350 = v497 + *(int *)(v488 + 48);
      (*(void (**)(void))(v509 + 16))();
      *(_QWORD *)v350 = v341;
      *(_QWORD *)(v350 + 8) = v343;
      *(_QWORD *)(v350 + 16) = v345;
      *(_QWORD *)(v350 + 24) = v255;
      *(_QWORD *)(v350 + 32) = v346;
      *(_BYTE *)(v350 + 40) = v347;
      v251 = (_QWORD *)v511;
      if ((swift_isUniquelyReferenced_nonNull_native(v511) & 1) == 0)
        v251 = (_QWORD *)sub_1005B0F14(0, v251[2] + 1, 1, (unint64_t)v251);
      a6 = (uint64_t)v510;
      v262 = v339;
      v352 = v251[2];
      v351 = v251[3];
      v34 = v514;
      v247 = v338;
      if (v352 >= v351 >> 1)
        v251 = (_QWORD *)sub_1005B0F14(v351 > 1, v352 + 1, 1, (unint64_t)v251);
      v250 = v496;
      v251[2] = v352 + 1;
      sub_100025B3C(v497, (uint64_t)v251+ ((*(unsigned __int8 *)(v487 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v487 + 80))+ *(_QWORD *)(v487 + 72) * v352, &qword_1009DA368);
      goto LABEL_104;
    }
    if (v331)
    {
      swift_bridgeObjectRelease(v274);
      swift_bridgeObjectRelease(v255);
    }
    else
    {
      swift_bridgeObjectRelease(v274);
      v332 = swift_bridgeObjectRelease(v255);
      v333 = static Logger.engagement.getter(v332);
      v334 = Logger.logObject.getter(v333);
      v335 = static os_log_type_t.error.getter(v334);
      if (os_log_type_enabled(v334, v335))
      {
        v336 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v336 = 0;
        _os_log_impl((void *)&_mh_execute_header, v334, v335, "Counter properties are not supported for sync at present", v336, 2u);
        v337 = v336;
        a6 = (uint64_t)v510;
        swift_slowDealloc(v337, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v483 + 8))(v486, v484);
    }
    v251 = (_QWORD *)v511;
LABEL_104:
    v262(v515, v516);
    v248 = v504;
    (*(void (**)(char *, uint64_t))(v502 + 8))(v34, v504);
    v250 += v500;
    --v247;
    v9 = v506;
    if (!v247)
    {
      swift_bridgeObjectRelease(v445);
      v152 = v503;
      goto LABEL_75;
    }
  }
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10003A160(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v10 = (_QWORD *)*a5;
  v12 = sub_10004CE80(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002C0294();
LABEL_7:
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_unknownObjectRelease(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_10003A2BC(v15, a4 & 1);
  v20 = sub_10004CE80(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

Swift::Int sub_10003A2BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D7BF8);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v14 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v14 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_unknownObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

void sub_10003A6DC(id **a1)
{
  id *v1;
  float64x2_t *v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;

  v1 = *a1;
  v2 = (float64x2_t *)((char *)(*a1)[5] + (_QWORD)(*a1)[4]);
  v4 = *(float64x2_t *)*a1;
  v3 = *((float64x2_t *)*a1 + 1);
  v5 = *v2;
  v6 = v2[1];
  *v2 = v4;
  v2[1] = v3;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v4, v5), (int32x4_t)vceqq_f64(v3, v6))), 0xFuLL))) & 1) == 0)objc_msgSend(v1[4], "setNeedsLayout");
  free(v1);
}

void (*sub_10003A744(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_OWORD *)(v1 + v4);
  v6 = v5[1];
  *(_OWORD *)v3 = *v5;
  *((_OWORD *)v3 + 1) = v6;
  return sub_10003A6DC;
}

id MiniPlayerHostingTabBarController.mutableChildViewControllers.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Class isa;
  id v7;
  objc_super v9;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems) == 1)
  {
    v1 = objc_msgSend(v0, "_viewControllersInTabBar");
    v2 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

    v4 = sub_10003AC78(v3);
    swift_bridgeObjectRelease(v3);
    v5 = objc_allocWithZone((Class)NSMutableArray);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v7 = objc_msgSend(v5, "initWithArray:", isa);

  }
  else
  {
    v9.receiver = v0;
    v9.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
    return objc_msgSendSuper2(&v9, "mutableChildViewControllers");
  }
  return v7;
}

uint64_t type metadata accessor for MiniPlayerHostingTabBarController()
{
  return objc_opt_self(_TtC5Books33MiniPlayerHostingTabBarController);
}

uint64_t sub_10003AA28(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  _OWORD v20[2];
  _QWORD *v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v21 = _swiftEmptyArrayStorage;
  result = sub_10003AC8C(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v10 = sub_100009E04(0, a2, a3);
        swift_dynamicCast(v20, &v19, v10, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_10003AC8C(0, v7[2] + 1, 1);
          v7 = v21;
        }
        v12 = v7[2];
        v11 = v7[3];
        if (v12 >= v11 >> 1)
        {
          sub_10003AC8C(v11 > 1, v12 + 1, 1);
          v7 = v21;
        }
        v7[2] = v12 + 1;
        sub_10004CFC4(v20, &v7[4 * v12 + 4]);
      }
    }
    else
    {
      v13 = (id *)(a1 + 32);
      v14 = sub_100009E04(0, a2, a3);
      do
      {
        v19 = *v13;
        v15 = v19;
        swift_dynamicCast(v20, &v19, v14, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_10003AC8C(0, v7[2] + 1, 1);
          v7 = v21;
        }
        v17 = v7[2];
        v16 = v7[3];
        if (v17 >= v16 >> 1)
        {
          sub_10003AC8C(v16 > 1, v17 + 1, 1);
          v7 = v21;
        }
        v7[2] = v17 + 1;
        sub_10004CFC4(v20, &v7[4 * v17 + 4]);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003AC78(uint64_t a1)
{
  return sub_10003AA28(a1, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
}

uint64_t sub_10003AC8C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10003ACA8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10003ACA8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009D4B80);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_10003B13C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, void (**a5)(_QWORD, _QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  void *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  objc_class *v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  char v164[24];
  _BYTE v165[40];
  char v166;

  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v11 = &v164[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = swift_allocObject(&unk_1008FDE88, 24, 7);
  *(_QWORD *)(v12 + 16) = a5;
  v13 = _Block_copy(a5);
  v14 = static Context.updateLocalStorage.getter(v13);
  v16 = v15;
  if (!a3)
  {
    swift_bridgeObjectRelease(v15);
    goto LABEL_15;
  }
  if (v14 == a2 && v15 == a3)
  {
    v17 = swift_bridgeObjectRelease(v15);
    goto LABEL_7;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v14, v15, 0);
  v17 = swift_bridgeObjectRelease(v16);
  if ((v18 & 1) == 0)
  {
LABEL_15:
    memset(v165, 0, sizeof(v165));
    v166 = -1;
    v31 = (objc_class *)type metadata accessor for BMPropertyValue(0);
LABEL_20:
    v34 = objc_allocWithZone(v31);
    v163 = (id)BMPropertyValue.init(with:)(v165);
    ((void (**)(_QWORD, id))a5)[2](a5, v163);
    swift_release(v12);

    return;
  }
LABEL_7:
  v19 = BasePropertyConfiguration.eventName.getter(v17);
  v21 = v20;
  v22 = BasePropertyConfiguration.eventName.getter(v19);
  if (v22 == v19 && v23 == v21)
  {
    swift_bridgeObjectRelease(v21);
    goto LABEL_17;
  }
  v25 = v23;
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v19, v21, 0);
  v27 = swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_sampleButtonUsed;
LABEL_18:
    v33 = a4[v32];
LABEL_19:
    *(_QWORD *)v165 = v33;
    v31 = (objc_class *)type metadata accessor for BMPropertyValue(0);
    memset(&v165[8], 0, 32);
    v166 = 0;
    goto LABEL_20;
  }
  v28 = BasePropertyConfiguration.eventName.getter(v27);
  v30 = v29;
  if (v28 == v19 && v29 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_22:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_previewButtonUsed;
    goto LABEL_18;
  }
  v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v19, v21, 0);
  v36 = swift_bridgeObjectRelease(v30);
  if ((v35 & 1) != 0)
    goto LABEL_22;
  v37 = BasePropertyConfiguration.eventName.getter(v36);
  v39 = v38;
  if (v37 == v19 && v38 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_27:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_addToWTRButtonUsed;
    goto LABEL_18;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v19, v21, 0);
  v41 = swift_bridgeObjectRelease(v39);
  if ((v40 & 1) != 0)
    goto LABEL_27;
  v42 = BasePropertyConfiguration.eventName.getter(v41);
  v44 = v43;
  if (v42 == v19 && v43 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_32:
    swift_bridgeObjectRelease(v21);
    v47 = OBJC_IVAR___BKSessionDonor_everUsedAppleWatchApp;
    v48 = (a4[OBJC_IVAR___BKSessionDonor_everUsedAppleWatchApp] & 1) != 0 || sub_10002D7D4();
    a4[v47] = v48;
    v33 = v48;
    goto LABEL_19;
  }
  v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v19, v21, 0);
  v46 = swift_bridgeObjectRelease(v44);
  if ((v45 & 1) != 0)
    goto LABEL_32;
  v49 = BasePropertyConfiguration.eventName.getter(v46);
  v51 = v50;
  if (v49 == v19 && v50 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_40:
    swift_bridgeObjectRelease(v21);
    v54 = objc_msgSend((id)objc_opt_self(NRPairedDeviceRegistry), "sharedInstance");
    if (v54)
    {
      v55 = v54;
      v56 = objc_msgSend(v54, "isPaired");

      v33 = v56;
      goto LABEL_19;
    }
    _Block_release(a5);
    __break(1u);
    goto LABEL_92;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v50, v19, v21, 0);
  v53 = swift_bridgeObjectRelease(v51);
  if ((v52 & 1) != 0)
    goto LABEL_40;
  v57 = BasePropertyConfiguration.eventName.getter(v53);
  v59 = v58;
  if (v57 == v19 && v58 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_46:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_everUsedCarplayApp;
    goto LABEL_18;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v19, v21, 0);
  v61 = swift_bridgeObjectRelease(v59);
  if ((v60 & 1) != 0)
    goto LABEL_46;
  v62 = BasePropertyConfiguration.eventName.getter(v61);
  v64 = v63;
  if (v62 == v19 && v63 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_51:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_everUsedReadingScrubber;
    goto LABEL_18;
  }
  v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v63, v19, v21, 0);
  v66 = swift_bridgeObjectRelease(v64);
  if ((v65 & 1) != 0)
    goto LABEL_51;
  v67 = BasePropertyConfiguration.eventName.getter(v66);
  v69 = v68;
  if (v67 == v19 && v68 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_56:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmark;
    goto LABEL_18;
  }
  v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, v19, v21, 0);
  v71 = swift_bridgeObjectRelease(v69);
  if ((v70 & 1) != 0)
    goto LABEL_56;
  v72 = BasePropertyConfiguration.eventName.getter(v71);
  v74 = v73;
  if (v72 == v19 && v73 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_61:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButton;
    goto LABEL_18;
  }
  v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v19, v21, 0);
  v76 = swift_bridgeObjectRelease(v74);
  if ((v75 & 1) != 0)
    goto LABEL_61;
  v77 = BasePropertyConfiguration.eventName.getter(v76);
  v79 = v78;
  if (v77 == v19 && v78 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_66:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_notificationSettingsVisited;
    goto LABEL_18;
  }
  v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, v19, v21, 0);
  v81 = swift_bridgeObjectRelease(v79);
  if ((v80 & 1) != 0)
    goto LABEL_66;
  v82 = BasePropertyConfiguration.eventName.getter(v81);
  v84 = v83;
  if (v82 == v19 && v83 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_71:
    swift_bridgeObjectRelease(v21);
    v87 = OBJC_IVAR___BKSessionDonor_readingSessionInProgress;
LABEL_72:
    v88 = &a4[v87];
    swift_beginAccess(&a4[v87], v164, 0, 0);
    *(_QWORD *)v165 = *(_QWORD *)(*(_QWORD *)v88 + 16);
    v89 = (objc_class *)type metadata accessor for BMPropertyValue(0);
    memset(&v165[8], 0, 32);
    v166 = 0;
    v90 = objc_allocWithZone(v89);
    v91 = (void *)BMPropertyValue.init(with:)(v165);
    ((void (**)(_QWORD, void *))a5)[2](a5, v91);
    swift_release(v12);

    return;
  }
  v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v83, v19, v21, 0);
  v86 = swift_bridgeObjectRelease(v84);
  if ((v85 & 1) != 0)
    goto LABEL_71;
  v92 = BasePropertyConfiguration.eventName.getter(v86);
  v94 = v93;
  if (v92 == v19 && v93 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_77:
    swift_bridgeObjectRelease(v21);
    v87 = OBJC_IVAR___BKSessionDonor_listeningSessionInProgress;
    goto LABEL_72;
  }
  v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v93, v19, v21, 0);
  v96 = swift_bridgeObjectRelease(v94);
  if ((v95 & 1) != 0)
    goto LABEL_77;
  v97 = BasePropertyConfiguration.eventName.getter(v96);
  v99 = v98;
  if (v97 == v19 && v98 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_82:
    swift_bridgeObjectRelease(v21);
    v33 = objc_msgSend(a4, "isCarPlayConnected");
    goto LABEL_19;
  }
  v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v98, v19, v21, 0);
  v101 = swift_bridgeObjectRelease(v99);
  if ((v100 & 1) != 0)
    goto LABEL_82;
  v102 = BasePropertyConfiguration.eventName.getter(v101);
  v104 = v103;
  if (v102 == v19 && v103 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_87:
    swift_bridgeObjectRelease(v21);
    v32 = OBJC_IVAR___BKSessionDonor_everUsedCarplay;
    goto LABEL_18;
  }
  v105 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v103, v19, v21, 0);
  v106 = swift_bridgeObjectRelease(v104);
  if ((v105 & 1) != 0)
    goto LABEL_87;
  v107 = BasePropertyConfiguration.eventName.getter(v106);
  v51 = v108;
  if (v107 == v19 && v108 == v21)
  {
    swift_bridgeObjectRelease(v21);
    goto LABEL_93;
  }
LABEL_92:
  v109 = _stringCompareWithSmolCheck(_:_:expecting:)(v107, v51, v19, v21, 0);
  v110 = swift_bridgeObjectRelease(v51);
  if ((v109 & 1) != 0)
  {
LABEL_93:
    swift_bridgeObjectRelease(v21);
    if ((a4[OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatus + 8] & 1) != 0)
      v33 = -1;
    else
      v33 = *(_QWORD *)&a4[OBJC_IVAR___BKSessionDonor_notificationAuthorizationStatus];
    goto LABEL_19;
  }
  v111 = BasePropertyConfiguration.eventName.getter(v110);
  v113 = v112;
  if (v111 == v19 && v112 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_100:
    swift_bridgeObjectRelease(v21);
    v116 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v11, 1, 1, v116);
    v117 = qword_1009CDEB8;
    swift_retain(v12);
    v118 = a4;
    if (v117 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v119 = qword_1009DAFB0;
    v120 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v121 = (_QWORD *)swift_allocObject(&unk_1008FDF50, 56, 7);
    v121[2] = v119;
    v121[3] = v120;
    v121[4] = sub_100025DE4;
    v121[5] = v12;
    v121[6] = v118;
    swift_retain(v119);
    v122 = &unk_1009DB438;
LABEL_103:
    v123 = sub_10030C02C((uint64_t)v11, (uint64_t)v122, (uint64_t)v121);
    swift_release(v12);
    swift_release(v123);
    return;
  }
  v114 = _stringCompareWithSmolCheck(_:_:expecting:)(v111, v112, v19, v21, 0);
  v115 = swift_bridgeObjectRelease(v113);
  if ((v114 & 1) != 0)
    goto LABEL_100;
  v124 = BasePropertyConfiguration.eventName.getter(v115);
  v126 = v125;
  if (v124 == v19 && v125 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_108:
    swift_bridgeObjectRelease(v21);
    v129 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v11, 1, 1, v129);
    v130 = qword_1009CDEB8;
    swift_retain(v12);
    v131 = a4;
    if (v130 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v132 = qword_1009DAFB0;
    v133 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v121 = (_QWORD *)swift_allocObject(&unk_1008FDF28, 56, 7);
    v121[2] = v132;
    v121[3] = v133;
    v121[4] = sub_100025DE4;
    v121[5] = v12;
    v121[6] = v131;
    swift_retain(v132);
    v122 = &unk_1009DB428;
    goto LABEL_103;
  }
  v127 = _stringCompareWithSmolCheck(_:_:expecting:)(v124, v125, v19, v21, 0);
  v128 = swift_bridgeObjectRelease(v126);
  if ((v127 & 1) != 0)
    goto LABEL_108;
  v134 = BasePropertyConfiguration.eventName.getter(v128);
  v136 = v135;
  if (v134 == v19 && v135 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_115:
    swift_bridgeObjectRelease(v21);
    v139 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v11, 1, 1, v139);
    v140 = qword_1009CDEB8;
    swift_retain(v12);
    v141 = a4;
    if (v140 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v142 = qword_1009DAFB0;
    v143 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v121 = (_QWORD *)swift_allocObject(&unk_1008FDF00, 56, 7);
    v121[2] = v142;
    v121[3] = v143;
    v121[4] = sub_100025DE4;
    v121[5] = v12;
    v121[6] = v141;
    swift_retain(v142);
    v122 = &unk_1009DB418;
    goto LABEL_103;
  }
  v137 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v135, v19, v21, 0);
  v138 = swift_bridgeObjectRelease(v136);
  if ((v137 & 1) != 0)
    goto LABEL_115;
  v144 = BasePropertyConfiguration.eventName.getter(v138);
  v146 = v145;
  if (v144 == v19 && v145 == v21)
  {
    swift_bridgeObjectRelease(v21);
LABEL_122:
    swift_bridgeObjectRelease(v21);
    v149 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v11, 1, 1, v149);
    v150 = qword_1009CDEB8;
    swift_retain(v12);
    v151 = a4;
    if (v150 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v152 = qword_1009DAFB0;
    v153 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v121 = (_QWORD *)swift_allocObject(&unk_1008FDED8, 56, 7);
    v121[2] = v152;
    v121[3] = v153;
    v121[4] = sub_100025DE4;
    v121[5] = v12;
    v121[6] = v151;
    swift_retain(v152);
    v122 = &unk_1009DB408;
    goto LABEL_103;
  }
  v147 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v145, v19, v21, 0);
  v148 = swift_bridgeObjectRelease(v146);
  if ((v147 & 1) != 0)
    goto LABEL_122;
  v154 = BasePropertyConfiguration.eventName.getter(v148);
  v156 = v155;
  if (v154 == v19 && v155 == v21)
  {
    swift_bridgeObjectRelease_n(v21, 2);
LABEL_129:
    v158 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v11, 1, 1, v158);
    v159 = qword_1009CDEB8;
    swift_retain(v12);
    v160 = a4;
    if (v159 != -1)
      swift_once(&qword_1009CDEB8, sub_100007FE0);
    v161 = qword_1009DAFB0;
    v162 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
    v121 = (_QWORD *)swift_allocObject(&unk_1008FDEB0, 56, 7);
    v121[2] = v161;
    v121[3] = v162;
    v121[4] = sub_100025DE4;
    v121[5] = v12;
    v121[6] = v160;
    swift_retain(v161);
    v122 = &unk_1009DB3F8;
    goto LABEL_103;
  }
  v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v154, v155, v19, v21, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v156);
  if ((v157 & 1) != 0)
    goto LABEL_129;
  swift_release(v12);
}

BOOL sub_10003C018(id a1, BKAppLaunchBlock *a2, unint64_t a3, BOOL *a4)
{
  BKAppLaunchBlock *v4;
  BOOL v5;

  v4 = a2;
  v5 = (-[BKAppLaunchBlock conditionMask](v4, "conditionMask") & 8) != 0
    && (-[BKAppLaunchBlock flags](v4, "flags") & 1) == 0;

  return v5;
}

BOOL sub_10003C060(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  id v10;
  void *v11;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;

  v3 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = (unint64_t)objc_msgSend(v3, "conditionMask") & v4;
  v6 = objc_msgSend(v3, "conditionMask");
  if ((id)v5 == v6)
  {
    v7 = BCIMLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "blockID"));
      v10 = sub_10003C724(*(_QWORD *)(a1 + 40));
      v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      v13 = 138543618;
      v14 = v9;
      v15 = 2114;
      v16 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "BKAppLaunchCoordinator: Running #blockID:'%{public}@' because condition:'%{public}@' satisfied", (uint8_t *)&v13, 0x16u);

    }
  }

  return v5 == (_QWORD)v6;
}

_QWORD *sub_10003C188(_QWORD *result)
{
  _QWORD *v1;
  BKAppLaunchBlock *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  id v9;
  void *v10;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;

  *(_BYTE *)(*(_QWORD *)(result[7] + 8) + 24) = (result[9] & ~*(_QWORD *)(result[4] + 8)) == 0;
  if (!*(_BYTE *)(*(_QWORD *)(result[7] + 8) + 24))
  {
    v1 = result;
    v2 = objc_opt_new(BKAppLaunchBlock);
    v3 = *(_QWORD *)(v1[8] + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

    objc_msgSend(*(id *)(*(_QWORD *)(v1[8] + 8) + 40), "setBlock:", v1[6]);
    objc_msgSend(*(id *)(*(_QWORD *)(v1[8] + 8) + 40), "setConditionMask:", v1[9]);
    v5 = objc_msgSend(*(id *)(*(_QWORD *)(v1[8] + 8) + 40), "setFlags:", v1[10]);
    if (v1[5])
      v5 = objc_msgSend(*(id *)(*(_QWORD *)(v1[8] + 8) + 40), "setBlockID:");
    v6 = BCIMLog(v5);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(v1[8] + 8) + 40), "blockID"));
      v9 = sub_10003C724(*(_QWORD *)(v1[4] + 8));
      v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      v11 = 138543618;
      v12 = v8;
      v13 = 2114;
      v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BKAppLaunchCoordinator: Deferring performing #blockID:'%{public}@' currentConditionMask:%{public}@", (uint8_t *)&v11, 0x16u);

    }
    return objc_msgSend(*(id *)(v1[4] + 32), "addObject:", *(_QWORD *)(*(_QWORD *)(v1[8] + 8) + 40));
  }
  return result;
}

id sub_10003C724(unint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  BOOL v10;
  void *v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  if (a1)
  {
    v3 = 0;
    do
    {
      if ((a1 & 1) != 0)
      {
        v4 = sub_10003C830(v3);
        v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "substringFromIndex:", 20));
        v7 = v6;
        if (v6)
        {
          v8 = v6;
        }
        else
        {
          v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v3));
          v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "stringValue"));

        }
        objc_msgSend(v2, "addObject:", v8);

      }
      ++v3;
      v10 = a1 >= 2;
      a1 >>= 1;
    }
    while (v10);
  }
  if (objc_msgSend(v2, "count"))
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "componentsJoinedByString:", CFSTR(" | ")));
  else
    v11 = 0;

  return v11;
}

id sub_10003C830(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (qword_1009F51B0 != -1)
    dispatch_once(&qword_1009F51B0, &stru_1008EDE80);
  v2 = (void *)qword_1009F51A8;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v3));

  return v4;
}

void sub_10003CA5C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;
  void *v7;
  id v8;
  NSObject *v9;

  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assetID"));
  if (!v7)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "storeID"));
    if (!v7)
      goto LABEL_7;
  }
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", v7) & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v7);
LABEL_7:
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "toDictionary"));
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v9);
    goto LABEL_8;
  }
  v8 = sub_100053348();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    sub_1006A0CC4();
LABEL_8:

  if (*(_QWORD *)(a1 + 56) && (unint64_t)objc_msgSend(*(id *)(a1 + 40), "count") >= *(_QWORD *)(a1 + 56))
    *a4 = 1;

}

uint64_t sub_10003CB4C(char *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  void *v80;
  uint64_t v81;
  void *v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[5];
  _QWORD v91[5];
  _QWORD v92[5];
  _QWORD v93[3];
  uint64_t v94;
  void *v95;
  _QWORD v96[5];
  _QWORD v97[5];
  _QWORD v98[5];
  _QWORD v99[5];
  _QWORD v100[3];
  uint64_t v101;
  void *v102;
  _QWORD v103[5];
  _QWORD v104[5];
  _QWORD v105[3];
  uint64_t v106;
  void *v107;
  _QWORD v108[5];
  _QWORD v109[5];
  _QWORD v110[5];
  _QWORD v111[5];
  _QWORD v112[6];

  v82 = (void *)a3;
  v83 = a1;
  v80 = a2;
  v4 = type metadata accessor for ReadingHistoryDataStore.Config(0);
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  v5 = __chkstk_darwin(v4);
  v75 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v87 = (char *)&v70 - v7;
  v85 = type metadata accessor for Date(0);
  v79 = *(char **)(v85 - 8);
  __chkstk_darwin(v85);
  v71 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = (_QWORD *)type metadata accessor for Calendar.Component(0);
  v74 = *(v77 - 1);
  __chkstk_darwin(v77);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Calendar.Identifier(0);
  v11 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = (_QWORD *)type metadata accessor for Calendar(0);
  v72 = (_QWORD *)*(v76 - 1);
  __chkstk_darwin(v76);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(NSUbiquitousKeyValueStore), "defaultStore");
  v112[3] = sub_100009E04(0, &qword_1009ED138, NSUbiquitousKeyValueStore_ptr);
  v112[4] = sub_10000CE2C(&qword_1009ED218, (uint64_t)&protocol conformance descriptor for NSUbiquitousKeyValueStore);
  v112[0] = v16;
  sub_10002E418(v3 + 16, (uint64_t)v105);
  sub_10002E418((uint64_t)v112, (uint64_t)v100);
  v17 = type metadata accessor for ReadingGoalsDataStore(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = ReadingGoalsDataStore.init(localStore:syncStore:)(v105, v100);
  v107 = &protocol witness table for ReadingGoalsDataStore;
  v106 = v17;
  v105[0] = v18;
  v19 = type metadata accessor for ReadingGoalsController(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v81 = v18;
  swift_retain(v18);
  v20 = ReadingGoalsController.init(dataSource:)(v105);
  v84 = v111;
  v78 = v19;
  v110[3] = v19;
  v110[0] = v20;
  v111[3] = v19;
  v111[4] = &protocol witness table for ReadingGoalsController;
  v110[4] = &protocol witness table for ReadingGoalsController;
  v111[0] = v20;
  v86 = v20;
  v21 = (objc_class *)type metadata accessor for BooksFinishedDataSource();
  v22 = objc_allocWithZone(v21);
  swift_retain_n(v20, 2);
  v80 = v80;
  v23 = sub_10001FA8C(v80);
  v106 = (uint64_t)v21;
  v24 = sub_100008DB0(&qword_1009ED220, (uint64_t (*)(uint64_t))type metadata accessor for BooksFinishedDataSource, (uint64_t)&protocol conformance descriptor for BooksFinishedDataSource);
  v107 = (void *)v24;
  v105[0] = v23;
  v25 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Calendar.Identifier.gregorian(_:), v70);
  v26 = v23;
  Calendar.init(identifier:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v25);
  v27 = v74;
  v28 = (uint64_t)v77;
  v29 = (*(uint64_t (**)(char *, _QWORD, _QWORD *))(v74 + 104))(v10, enum case for Calendar.Component.year(_:), v77);
  v30 = v71;
  Date.init()(v29);
  v31 = Calendar.component(_:from:)(v10, v30);
  (*((void (**)(char *, uint64_t))v79 + 1))(v30, v85);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  ((void (*)(char *, _QWORD *))v72[1])(v15, v76);
  v32 = type metadata accessor for BooksFinishedController(0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = BooksFinishedController.init(dataSource:currentYear:)(v105, v31);
  v76 = v108;
  v77 = v109;
  v106 = v32;
  v105[0] = v33;
  v108[3] = v32;
  v108[4] = &protocol witness table for BooksFinishedController;
  v107 = &protocol witness table for BooksFinishedController;
  v108[0] = v33;
  v34 = v33;
  v85 = v33;
  v109[4] = v24;
  v109[3] = v21;
  v109[0] = v26;
  v35 = type metadata accessor for ReadingHistoryAppFileSyncManager(0);
  swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  swift_retain_n(v34, 2);
  v79 = v26;
  v36 = ReadingHistoryAppFileSyncManager.init()();
  v37 = v87;
  ReadingHistoryDataStore.Config.init(dataPruningEnabled:historicalMonthsToKeep:)(1, 14);
  sub_10002E418((uint64_t)v110, (uint64_t)v100);
  sub_10002E418((uint64_t)v84, (uint64_t)v103);
  v94 = v35;
  v95 = (void *)sub_100008DB0(&qword_1009ED228, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryAppFileSyncManager, (uint64_t)&protocol conformance descriptor for ReadingHistoryAppFileSyncManager);
  v93[0] = v36;
  v38 = v75;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v75, v37, v89);
  v39 = (void *)v73[7];
  v40 = objc_allocWithZone((Class)BDSOSTransactionProvider);
  swift_retain(v36);
  v41 = v39;
  v42 = objc_msgSend(v40, "init");
  v43 = type metadata accessor for ReadingHistoryDataStore(0);
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  v44 = ReadingHistoryDataStore.init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(v100, v93, v42, v38, v41, j___s10Foundation4DateVACycfC, 0);
  _s5Books15CurrentPageViewVwxx_0(v103);
  ReadingHistoryDataStore.observeSignificantDateChange(_:)(UIApplicationSignificantTimeChangeNotification);
  v101 = v35;
  v102 = (void *)sub_100008DB0(&qword_1009ED230, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryAppFileSyncManager, (uint64_t)&protocol conformance descriptor for ReadingHistoryAppFileSyncManager);
  v100[0] = v36;
  swift_retain(v36);
  ReadingHistoryDataStore.updateCollector.setter(v100);
  v74 = v36;
  ReadingHistoryAppFileSyncManager.startObserving()();
  v101 = v43;
  v102 = &protocol witness table for ReadingHistoryDataStore;
  v100[0] = v44;
  v45 = (void *)objc_opt_self(NSUserDefaults);
  swift_retain_n(v36, 2);
  swift_retain(v44);
  v46 = objc_msgSend(v45, "standardUserDefaults");
  v47 = type metadata accessor for ReadingHistoryController(0);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v48 = ReadingHistoryController.init(dataSource:userDefaults:currentTimeProvider:)(v100, v46, j___s10Foundation4DateVACycfC, 0);
  v72 = v103;
  v73 = v104;
  v101 = v47;
  v100[0] = v48;
  v103[3] = v47;
  v103[4] = &protocol witness table for ReadingHistoryController;
  v102 = &protocol witness table for ReadingHistoryController;
  v103[0] = v48;
  v104[4] = &protocol witness table for ReadingHistoryDataStore;
  v104[3] = v43;
  v104[0] = v44;
  v49 = (void *)objc_opt_self(BSUITemplate);
  swift_retain_n(v48, 2);
  swift_retain(v44);
  v50 = objc_msgSend(v49, "manager");
  v51 = objc_msgSend(v50, "dynamicRegistry");

  v52 = (void *)dispatch thunk of ReadingHistoryController.readingTimeTodayProvider.getter();
  type metadata accessor for ReadingTimeToday(0);
  static ReadingTimeToday.kind.getter();
  v54 = v53;
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v54);
  objc_msgSend(v51, "registerProgressProvider:forKind:", v52, v55);

  v56 = swift_allocObject(&unk_1009124F8, 24, 7);
  v57 = v83;
  swift_unknownObjectWeakInit(v56 + 16, v83);
  v58 = swift_allocObject(&unk_100912520, 32, 7);
  *(_QWORD *)(v58 + 16) = v56;
  *(_QWORD *)(v58 + 24) = v48;
  v94 = v43;
  v95 = &protocol witness table for ReadingHistoryDataStore;
  v93[0] = v44;
  v90[3] = v78;
  v90[4] = &protocol witness table for ReadingGoalsController;
  v60 = v85;
  v59 = v86;
  v90[0] = v86;
  v98[3] = v32;
  v98[4] = &protocol witness table for BooksFinishedController;
  v98[0] = v85;
  v61 = type metadata accessor for ReadingAchievementsController(0);
  swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  swift_retain_n(v48, 2);
  swift_retain(v59);
  swift_retain(v60);
  v78 = v44;
  swift_retain(v44);
  swift_retain(v58);
  v75 = (char *)v58;
  v71 = (char *)v48;
  v62 = ReadingAchievementsController.init(dataSource:goalsStateProvider:booksStateProvider:notifier:pendingReadingTimeProvider:currentTimeProvider:)(v93, v90, v98, sub_10059A620, v58, &j___s8BookCore24ReadingHistoryControllerC07pendingC4Time5untilSd10Foundation4DateV_tF, v48, j___s10Foundation4DateVACycfC, 0);
  sub_10002E418((uint64_t)v110, (uint64_t)v98);
  sub_10002E418((uint64_t)v84, (uint64_t)v99);
  sub_10002E418((uint64_t)v105, (uint64_t)v93);
  sub_10002E418((uint64_t)v76, (uint64_t)v96);
  sub_10002E418((uint64_t)v77, (uint64_t)v97);
  sub_10002E418((uint64_t)v100, (uint64_t)v90);
  sub_10002E418((uint64_t)v72, (uint64_t)v91);
  sub_10002E418((uint64_t)v73, (uint64_t)v92);
  v63 = objc_msgSend((id)objc_opt_self(BCBookReadingTimeTracker), "sharedInstance");
  v69 = v57;
  v64 = v82;
  v65 = v74;
  v84 = (_QWORD *)v62;
  sub_10003D630((uint64_t)v80, (uint64_t)v98, (uint64_t)v99, (uint64_t)v93, (uint64_t)v96, (uint64_t)v97, (uint64_t)v90, (uint64_t)v91, (uint64_t)v92, v62, v63, (void (*)(_QWORD))&j___s8BookCore32ReadingHistoryAppFileSyncManagerC011enableCloudG0Sbvs, v74, (uint64_t)sub_100599FB4, 0, (uint64_t)v82, v69);

  swift_release(v65);
  _s5Books15CurrentPageViewVwxx_0(v92);
  _s5Books15CurrentPageViewVwxx_0(v91);
  _s5Books15CurrentPageViewVwxx_0(v90);
  _s5Books15CurrentPageViewVwxx_0(v97);
  _s5Books15CurrentPageViewVwxx_0(v96);
  _s5Books15CurrentPageViewVwxx_0(v93);
  _s5Books15CurrentPageViewVwxx_0(v99);
  _s5Books15CurrentPageViewVwxx_0(v98);
  v66 = (char *)objc_msgSend(v64, "engagementManager");
  if (v66)
  {
    v67 = v66;
    sub_10001B4BC(v66);
    swift_release(v81);
    swift_release(v86);

    swift_release(v85);
    swift_release(v78);
    swift_release(v71);
    swift_release(v75);

    swift_release(v84);
    swift_release_n(v65, 2);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
    swift_release(v84);
    swift_release(v75);
    swift_release(v71);
    swift_release(v78);
    swift_release(v85);

    swift_release(v86);
    swift_release(v81);
    swift_release_n(v65, 2);
  }
  sub_100010960((uint64_t)v100, &qword_1009ECAF8);
  sub_100010960((uint64_t)v105, &qword_1009ECAF0);
  sub_100010960((uint64_t)v110, &qword_1009ECB08);
  return _s5Books15CurrentPageViewVwxx_0(v112);
}

void sub_10003D630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void (*a12)(_QWORD), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void *v81;
  NSString v82;
  uint64_t v83;
  void *v84;
  char *v85;
  id v86;
  char *v87;
  void *v88;
  id v89;
  id v90;
  NSString v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  char *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  _BYTE *v111;
  void (*v112)(_QWORD);
  uint64_t v113;
  _BYTE *v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  _QWORD v120[5];
  _QWORD v121[5];
  _QWORD v122[5];
  _QWORD v123[5];
  _QWORD v124[5];
  _QWORD v125[5];
  id v126[3];
  void *v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  _QWORD v129[5];
  _QWORD v130[5];
  _QWORD v131[5];
  _QWORD v132[5];
  uint64_t v133;
  _BYTE v134[40];
  uint64_t v135;
  uint64_t v136;
  _BYTE v137[40];
  _BYTE v138[40];
  _BYTE v139[40];
  _QWORD v140[3];
  uint64_t v141;
  uint64_t v142;
  _BYTE v143[40];
  _BYTE v144[40];
  _QWORD v145[3];
  uint64_t v146;
  uint64_t v147;
  _BYTE v148[40];
  _BYTE v149[40];
  _QWORD v150[3];
  uint64_t v151;
  uint64_t v152;
  _BYTE v153[48];

  v113 = a8;
  v102 = a7;
  v105 = (_BYTE *)a1;
  v110 = a16;
  v104 = a15;
  v103 = a14;
  v117 = a13;
  v112 = a12;
  v109 = a11;
  v108 = a10;
  v22 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v22);
  v101 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4(&qword_1009ECA90);
  __chkstk_darwin(v24);
  v107 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E418(a2, (uint64_t)v150);
  v111 = v153;
  sub_10002E418(a3, (uint64_t)v153);
  v114 = v149;
  sub_10002E418(a4, (uint64_t)v145);
  v115 = v148;
  sub_10002E418(a5, (uint64_t)v148);
  sub_10002E418(a6, (uint64_t)v149);
  sub_10002E418(v102, (uint64_t)v140);
  v116 = v143;
  sub_10002E418(v113, (uint64_t)v143);
  v106 = v144;
  sub_10002E418(a9, (uint64_t)v144);
  v26 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService__setupState];
  v109 = v109;
  v113 = v26;
  MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
  v27 = &a17[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler];
  v28 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler];
  v29 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler + 8];
  v30 = v117;
  *(_QWORD *)v27 = a12;
  *((_QWORD *)v27 + 1) = v30;
  sub_10002AD00(v28, v29);
  v31 = &a17[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler];
  v32 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler];
  v33 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler + 8];
  v34 = v104;
  *(_QWORD *)v31 = v103;
  *((_QWORD *)v31 + 1) = v34;
  swift_retain(v30);
  sub_10002AD00(v32, v33);
  v35 = *(void **)&a17[OBJC_IVAR___BKReadingActivityService_libraryManager];
  v36 = v105;
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_libraryManager] = v105;
  swift_retain(v34);

  sub_10002E418((uint64_t)v150, (uint64_t)v137);
  sub_10002E418((uint64_t)v153, (uint64_t)v138);
  v37 = (uint64_t)&a17[OBJC_IVAR___BKReadingActivityService_goalsModule];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_goalsModule], v134, 33, 0);
  v38 = v36;
  sub_10000B558((uint64_t)v137, v37, &qword_1009ECAC8);
  swift_endAccess(v134);
  sub_10002E418((uint64_t)v140, (uint64_t)v137);
  sub_10002E418((uint64_t)v143, (uint64_t)v138);
  v105 = v139;
  sub_10002E418((uint64_t)v144, (uint64_t)v139);
  v39 = (uint64_t)&a17[OBJC_IVAR___BKReadingActivityService_historyModule];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_historyModule], v134, 33, 0);
  sub_10000B558((uint64_t)v137, v39, &qword_1009ECAD8);
  swift_endAccess(v134);
  sub_10002E418((uint64_t)v145, (uint64_t)v137);
  sub_10002E418((uint64_t)v148, (uint64_t)v138);
  v40 = (uint64_t)v114;
  sub_10002E418((uint64_t)v114, (uint64_t)v139);
  v41 = (uint64_t)&a17[OBJC_IVAR___BKReadingActivityService_booksFinishedModule];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_booksFinishedModule], v134, 33, 0);
  sub_10000B558((uint64_t)v137, v41, &qword_1009ECAD0);
  swift_endAccess(v134);
  v42 = *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_achievementsController];
  v43 = v108;
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_achievementsController] = v108;
  swift_release(v42);
  type metadata accessor for ReadingGoalsAnalytics(0);
  v44 = swift_retain(v43);
  v45 = static ReadingGoalsAnalytics.shared.getter(v44);
  v46 = v151;
  v47 = v152;
  sub_10003F198(v150, v151);
  v48 = v107;
  dispatch thunk of ReadingGoalsStateProvider.state.getter(v46, v47);
  v49 = type metadata accessor for ReadingGoals.State(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  dispatch thunk of ReadingGoalsAnalytics.goalsState.setter(v48);
  v50 = swift_release(v45);
  v51 = static ReadingGoalsAnalytics.shared.getter(v50);
  v52 = dispatch thunk of ReadingGoalsAnalytics.booksState.getter();
  swift_release(v51);
  sub_10002E418((uint64_t)v145, (uint64_t)v137);
  sub_10002E418((uint64_t)v115, (uint64_t)v138);
  sub_10002E418(v40, (uint64_t)v105);
  v119 = v137;
  Atomic.mutate(_:)(sub_1000696D4);
  swift_release(v52);
  v53 = sub_100010960((uint64_t)v137, &qword_1009ECAF0);
  v54 = static ReadingGoalsAnalytics.shared.getter(v53);
  v55 = dispatch thunk of ReadingGoalsAnalytics.historyState.getter();
  swift_release(v54);
  sub_10002E418((uint64_t)v140, (uint64_t)v134);
  sub_10002E418((uint64_t)v116, (uint64_t)&v135);
  v56 = (uint64_t)v106;
  sub_10002E418((uint64_t)v106, (uint64_t)&v136);
  v118 = v134;
  Atomic.mutate(_:)(sub_1000696F4);
  swift_release(v55);
  v57 = sub_100010960((uint64_t)v134, &qword_1009ECAF8);
  v58 = static ReadingGoalsAnalytics.shared.getter(v57);
  v59 = swift_unknownObjectRetain(v110);
  dispatch thunk of ReadingGoalsAnalytics.analyticsSessionHosting.setter(v59);
  v60 = swift_release(v58);
  v61 = v109;
  v62 = static ReadingGoalsAnalytics.shared.getter(v60);
  dispatch thunk of ReadingGoalsAnalytics.reportGoalStateIfNeeded(_:)(0);
  swift_release(v62);
  objc_msgSend(v61, "addSessionObserver:", a17);
  v63 = v151;
  v64 = v152;
  sub_10003F198(v150, v151);
  dispatch thunk of ReadingGoalsStateProvider.observable.getter(v126, v63, v64);
  v65 = v127;
  v66 = v128;
  sub_10003F198(v126, (uint64_t)v127);
  v67 = swift_allocObject(&unk_1009124F8, 24, 7);
  swift_unknownObjectWeakInit(v67 + 16, a17);
  swift_retain(v67);
  dispatch thunk of ReadingGoalsStateObserving.addObserver(_:callback:)(a17, sub_1000696EC, v67, v65, v66);
  swift_release_n(v67, 2);
  _s5Books15CurrentPageViewVwxx_0(v126);
  v68 = v146;
  v69 = v147;
  sub_10003F198(v145, v146);
  v70 = dispatch thunk of BooksFinishedStateProvider.state.getter(v68, v69);
  v71 = swift_allocObject(&unk_1009124F8, 24, 7);
  swift_unknownObjectWeakInit(v71 + 16, a17);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(a17, sub_1000696DC, v71);
  swift_release(v70);
  swift_release(v71);
  v72 = v141;
  v73 = v142;
  sub_10003F198(v140, v141);
  v74 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v72, v73);
  v75 = swift_allocObject(&unk_1009124F8, 24, 7);
  swift_unknownObjectWeakInit(v75 + 16, a17);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(a17, sub_1000696E4, v75);
  swift_release(v74);
  swift_release(v75);
  v126[0] = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  KeyPath = swift_getKeyPath(&unk_10072F7B8);
  v77 = swift_allocObject(&unk_1009124F8, 24, 7);
  swift_unknownObjectWeakInit(v77 + 16, a17);
  v78 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 5, sub_1000696CC, v77, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v77);

  v79 = *(void **)&a17[OBJC_IVAR___BKReadingActivityService_clearDataObservation];
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_clearDataObservation] = v78;

  v80 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v81 = off_1009EC808;
  swift_bridgeObjectRetain(off_1009EC808);
  v82 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v81);
  v83 = swift_allocObject(&unk_1009124F8, 24, 7);
  swift_unknownObjectWeakInit(v83 + 16, a17);
  v128 = sub_1000696FC;
  v129[0] = v83;
  v126[0] = _NSConcreteStackBlock;
  v126[1] = (id)1107296256;
  v126[2] = sub_100010E84;
  v127 = &unk_100912538;
  v84 = _Block_copy(v126);
  swift_release(v129[0]);
  objc_msgSend(v80, "fetchMetadataBoolForKey:completion:", v82, v84);
  _Block_release(v84);

  v85 = &a17[OBJC_IVAR___BKReadingActivityService_enableCloudSync];
  swift_beginAccess(&a17[OBJC_IVAR___BKReadingActivityService_enableCloudSync], &v133, 0, 0);
  v112(*v85);
  sub_10002E418((uint64_t)v150, (uint64_t)v131);
  sub_10002E418((uint64_t)v111, (uint64_t)v132);
  sub_10002E418((uint64_t)v140, (uint64_t)v126);
  sub_10002E418((uint64_t)v116, (uint64_t)v129);
  sub_10002E418(v56, (uint64_t)v130);
  sub_10002E418((uint64_t)v145, (uint64_t)v123);
  sub_10002E418((uint64_t)v115, (uint64_t)v124);
  sub_10002E418((uint64_t)v114, (uint64_t)v125);
  sub_10002E418((uint64_t)v131, (uint64_t)v122);
  sub_10002E418((uint64_t)v126, (uint64_t)v121);
  sub_10002E418((uint64_t)v123, (uint64_t)v120);
  v86 = objc_allocWithZone((Class)type metadata accessor for ReadingActivityDonor());
  v87 = sub_1000200C8(0xD000000000000014, 0x80000001007D5100, v122, v121, v120);
  _s5Books15CurrentPageViewVwxx_0(v123);
  _s5Books15CurrentPageViewVwxx_0(v126);
  _s5Books15CurrentPageViewVwxx_0(v131);
  _s5Books15CurrentPageViewVwxx_0(v125);
  _s5Books15CurrentPageViewVwxx_0(v124);
  _s5Books15CurrentPageViewVwxx_0(v130);
  _s5Books15CurrentPageViewVwxx_0(v129);
  _s5Books15CurrentPageViewVwxx_0(v132);
  v88 = *(void **)&a17[OBJC_IVAR___BKReadingActivityService_readingActivityDonor];
  *(_QWORD *)&a17[OBJC_IVAR___BKReadingActivityService_readingActivityDonor] = v87;

  v89 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v90 = objc_msgSend(v89, "userDefaults");

  v91 = objc_msgSend((id)objc_opt_self(BDSReadingHistoryMigrationInfo), "dataHasBeenMovedUserDefaultsKey");
  if (!v91)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v93 = v92;
    v91 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v93);
  }
  v94 = objc_msgSend(v90, "BOOLForKey:", v91);

  if ((v94 & 1) == 0)
  {
    v95 = type metadata accessor for TaskPriority(0);
    v96 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v101, 1, 1, v95);
    v97 = (_QWORD *)swift_allocObject(&unk_100912570, 40, 7);
    v97[2] = 0;
    v97[3] = 0;
    v97[4] = a17;
    v98 = a17;
    v99 = sub_10030C02C(v96, (uint64_t)&unk_1009ECB00, (uint64_t)v97);
    swift_release(v99);
  }
  MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
  sub_100010960((uint64_t)v140, &qword_1009ECAF8);
  sub_100010960((uint64_t)v145, &qword_1009ECAF0);
  sub_100010960((uint64_t)v150, &qword_1009ECB08);

}

uint64_t sub_10003E124@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = a1[3];
  v8 = a1[4];
  sub_10003F198(a1, v7);
  v9 = a2(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
  if (result)
  {
    a4[3] = v9;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003E1A0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MediaAPICollectionService()
{
  return objc_opt_self(_TtC5Books25MediaAPICollectionService);
}

void sub_10003E200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t inited;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  void (*v118)(_QWORD *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  char *v134;
  uint64_t (*v135)(_QWORD *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  Class isa;
  id v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  id v176;
  void *v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  void (*v185)(_QWORD *, uint64_t);
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  char *v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  __int128 v205;
  void (*v206)(char *, unint64_t, _QWORD *);
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  _QWORD *v215;
  _QWORD v216[3];
  uint64_t v217;
  uint64_t v218;
  _QWORD v219[3];
  uint64_t v220;
  uint64_t v221;
  _QWORD v222[3];
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD v226[3];
  uint64_t v227;
  uint64_t v228;
  char v229;
  _BYTE v230[32];
  uint64_t v231;
  char v232;

  v203 = a4;
  v215 = (_QWORD *)type metadata accessor for ReadingHistory.DayEntry(0);
  v209 = *(v215 - 1);
  __chkstk_darwin(v215);
  v208 = (char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v200 = (char *)&v179 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for ReadingHistory.Day(0);
  v211 = *(_QWORD *)(v214 - 8);
  v12 = __chkstk_darwin(v214);
  v213 = (char *)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v212 = (char *)&v179 - v15;
  __chkstk_darwin(v14);
  v210 = (char *)&v179 - v16;
  v17 = sub_10004CFD4(&qword_1009EC930);
  __chkstk_darwin(v17);
  v195 = (char *)&v179 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for BooksFinished.YearEntry(0);
  v188 = *(_QWORD *)(v19 - 8);
  v189 = v19;
  __chkstk_darwin(v19);
  v187 = (char *)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009ECA60);
  __chkstk_darwin(v21);
  v190 = (uint64_t *)((char *)&v179 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for BooksFinished.State(0);
  v191 = *(_QWORD *)(v23 - 8);
  v192 = v23;
  __chkstk_darwin(v23);
  v186 = (char *)&v179 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ReadingGoals.State(0);
  v198 = *(_QWORD *)(v25 - 8);
  v199 = v25;
  __chkstk_darwin(v25);
  v27 = (char *)&v179 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for ReadingHistory.State(0);
  v28 = *(_QWORD *)(v204 - 8);
  v29 = __chkstk_darwin(v204);
  v197 = (uint64_t *)((char *)&v179 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = __chkstk_darwin(v29);
  v196 = (uint64_t *)((char *)&v179 - v32);
  v33 = __chkstk_darwin(v31);
  v194 = (uint64_t *)((char *)&v179 - v34);
  v35 = __chkstk_darwin(v33);
  v193 = (uint64_t *)((char *)&v179 - v36);
  v37 = __chkstk_darwin(v35);
  v202 = (uint64_t *)((char *)&v179 - v38);
  v231 = 0;
  memset(v230, 0, sizeof(v230));
  v232 = -1;
  v39 = static Context.updateLocalStorage.getter(v37);
  v41 = v40;
  if (!a3)
  {
    swift_bridgeObjectRelease(v40);
    goto LABEL_10;
  }
  if (v39 != a2 || v40 != a3)
  {
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v39, v40, 0);
    v42 = swift_bridgeObjectRelease(v41);
    if ((v43 & 1) != 0)
      goto LABEL_7;
LABEL_10:
    v51 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
    v215 = (_QWORD *)BMPropertyValue.init(with:)(v230);
    (*(void (**)(uint64_t, _QWORD *))(a5 + 16))(a5, v215);

    return;
  }
  v42 = swift_bridgeObjectRelease(v40);
LABEL_7:
  v182 = v10;
  v44 = BasePropertyConfiguration.eventName.getter(v42);
  v46 = v45;
  v47 = v203;
  v49 = BasePropertyConfiguration.eventName.getter(v44);
  v50 = v48;
  v184 = a5;
  if (v44 == v49 && v46 == v48)
  {
    swift_bridgeObjectRelease_n(v46, 2);
LABEL_12:
    v181 = v9;
    v201 = v47 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_historyStateProvider;
    sub_10002E418(v47 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_historyStateProvider, (uint64_t)v226);
    v54 = v227;
    v55 = v228;
    sub_10003F198(v226, v227);
    v56 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v54, v55);
    v57 = v202;
    dispatch thunk of ObservableContainer.value.getter(v202, v56);
    v58 = swift_release(v56);
    v59 = ReadingHistory.State.readingHistory.getter(v58);
    v185 = *(void (**)(_QWORD *, uint64_t))(v28 + 8);
    v185(v57, v204);
    _s5Books15CurrentPageViewVwxx_0(v226);
    if (*(_QWORD *)(v59 + 16) >= 0x64uLL)
      v60 = 100;
    else
      v60 = *(_QWORD *)(v59 + 16);
    v183 = v27;
    if (v60)
    {
      v226[0] = _swiftEmptyArrayStorage;
      v61 = v209;
      v62 = (*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80);
      v180 = v59;
      v63 = v59 + v62;
      sub_10003F1DC(0, v60, 0);
      v64 = *(_QWORD *)(v61 + 72);
      v206 = *(void (**)(char *, unint64_t, _QWORD *))(v61 + 16);
      v207 = v64;
      v205 = xmmword_1007147F0;
      v65 = v208;
      do
      {
        v206(v65, v63, v215);
        v66 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
        inited = swift_initStackObject(v66, &v225);
        *(_OWORD *)(inited + 16) = v205;
        *(_QWORD *)(inited + 32) = 0x64616552656D6974;
        *(_QWORD *)(inited + 40) = 0xE800000000000000;
        v68 = v210;
        v69 = ((uint64_t (*)(void))ReadingHistory.DayEntry.day.getter)();
        v70 = ReadingHistory.Day.readingTime.getter(v69);
        v71 = *(uint64_t (**)(char *, uint64_t))(v211 + 8);
        v72 = v68;
        v73 = v214;
        v74 = v71(v72, v214);
        *(_QWORD *)(inited + 48) = v70;
        *(_QWORD *)(inited + 72) = &type metadata for Int;
        *(_QWORD *)(inited + 80) = 1702125924;
        *(_QWORD *)(inited + 88) = 0xE400000000000000;
        *(_QWORD *)(inited + 96) = ReadingHistory.DayEntry.date.getter(v74);
        *(_QWORD *)(inited + 104) = v75;
        *(_QWORD *)(inited + 120) = &type metadata for String;
        *(_QWORD *)(inited + 128) = 0x47676E6964616572;
        *(_QWORD *)(inited + 136) = 0xEB000000006C616FLL;
        v76 = v212;
        v77 = ((uint64_t (*)(void))ReadingHistory.DayEntry.day.getter)();
        v78 = ReadingHistory.Day.goal.getter(v77);
        v79 = v71(v76, v73);
        *(_QWORD *)(inited + 144) = v78;
        *(_QWORD *)(inited + 168) = &type metadata for Int;
        *(_QWORD *)(inited + 176) = 0x6B61657274537369;
        *(_QWORD *)(inited + 184) = 0xEB00000000796144;
        v80 = v213;
        v81 = ReadingHistory.DayEntry.day.getter(v79);
        LOBYTE(v78) = ReadingHistory.Day.isStreakDay.getter(v81);
        v71(v80, v73);
        *(_QWORD *)(inited + 216) = &type metadata for Bool;
        *(_BYTE *)(inited + 192) = v78 & 1;
        v82 = sub_10003FB0C(inited);
        (*(void (**)(char *, _QWORD *))(v209 + 8))(v65, v215);
        v83 = (_QWORD *)v226[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v226[0]) & 1) == 0)
        {
          sub_10003F1DC(0, v83[2] + 1, 1);
          v83 = (_QWORD *)v226[0];
        }
        v85 = v83[2];
        v84 = v83[3];
        if (v85 >= v84 >> 1)
        {
          sub_10003F1DC(v84 > 1, v85 + 1, 1);
          v83 = (_QWORD *)v226[0];
        }
        v83[2] = v85 + 1;
        v83[v85 + 4] = v82;
        v63 += v207;
        --v60;
      }
      while (v60);
      swift_bridgeObjectRelease(v180);
    }
    else
    {
      swift_bridgeObjectRelease(v59);
      v83 = _swiftEmptyArrayStorage;
    }
    v86 = v203;
    sub_10002E418(v203 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_goalsStateProvider, (uint64_t)v226);
    v87 = v227;
    v88 = v228;
    sub_10003F198(v226, v227);
    dispatch thunk of ReadingGoalsStateProvider.state.getter(v87, v88);
    _s5Books15CurrentPageViewVwxx_0(v226);
    sub_10002E418(v86 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_booksFinishedStateProvider, (uint64_t)v226);
    v89 = v227;
    v90 = v228;
    sub_10003F198(v226, v227);
    v91 = dispatch thunk of BooksFinishedStateProvider.state.getter(v89, v90);
    v92 = v190;
    dispatch thunk of ObservableContainer.value.getter(v190, v91);
    swift_release(v91);
    v94 = v191;
    v93 = v192;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v191 + 48))(v92, 1, v192) == 1)
    {
      sub_100010960((uint64_t)v92, &qword_1009ECA60);
      _s5Books15CurrentPageViewVwxx_0(v226);
      v209 = 0;
      v95 = (uint64_t)v195;
    }
    else
    {
      v96 = v186;
      (*(void (**)(char *, _QWORD *, uint64_t))(v94 + 32))(v186, v92, v93);
      v97 = _s5Books15CurrentPageViewVwxx_0(v226);
      v98 = v187;
      v99 = BooksFinished.State.currentYearEntry.getter(v97);
      v100 = BooksFinished.YearEntry.assets.getter(v99);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v98, v189);
      v95 = (uint64_t)v195;
      if (v100)
      {
        v209 = *(_QWORD *)(v100 + 16);
        swift_bridgeObjectRelease(v100);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v93);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v93);
        v209 = 0;
      }
    }
    v215 = objc_msgSend(objc_allocWithZone((Class)NSISO8601DateFormatter), "init");
    v107 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v108 = swift_allocObject(v107, 512, 7);
    *(_OWORD *)(v108 + 16) = xmmword_100735070;
    *(_QWORD *)(v108 + 32) = 0xD000000000000013;
    *(_QWORD *)(v108 + 40) = 0x80000001007DBC60;
    v109 = v201;
    sub_10002E418(v201, (uint64_t)v226);
    v110 = v227;
    v111 = v228;
    sub_10003F198(v226, v227);
    v112 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v110, v111);
    v113 = v193;
    dispatch thunk of ObservableContainer.value.getter(v193, v112);
    v114 = swift_release(v112);
    v115 = ReadingHistory.State.currentStreak.getter(v114);
    v116 = v113;
    v117 = v204;
    v118 = v185;
    v185(v116, v204);
    *(_QWORD *)(v108 + 48) = v115;
    *(_QWORD *)(v108 + 72) = &type metadata for Int;
    *(_QWORD *)(v108 + 80) = 0xD000000000000013;
    *(_QWORD *)(v108 + 88) = 0x80000001007D49A0;
    sub_10002E418(v109, (uint64_t)v222);
    v119 = v223;
    v120 = v224;
    sub_10003F198(v222, v223);
    v121 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v119, v120);
    v122 = v194;
    dispatch thunk of ObservableContainer.value.getter(v194, v121);
    v123 = swift_release(v121);
    ReadingHistory.State.longestStreak.getter(v123);
    v118(v122, v117);
    v124 = type metadata accessor for ReadingHistory.Streak(0);
    v125 = *(_QWORD *)(v124 - 8);
    v126 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v95, 1, v124);
    if ((_DWORD)v126 == 1)
    {
      _s5Books15CurrentPageViewVwxx_0(v222);
      sub_100010960(v95, &qword_1009EC930);
      v127 = 0;
    }
    else
    {
      v127 = ReadingHistory.Streak.length.getter(v126);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v95, v124);
      _s5Books15CurrentPageViewVwxx_0(v222);
    }
    *(_QWORD *)(v108 + 96) = v127;
    *(_QWORD *)(v108 + 120) = &type metadata for Int;
    *(_QWORD *)(v108 + 128) = 0xD000000000000010;
    *(_QWORD *)(v108 + 136) = 0x80000001007D49D0;
    v128 = v201;
    sub_10002E418(v201, (uint64_t)v222);
    v129 = v223;
    v130 = v224;
    sub_10003F198(v222, v223);
    v131 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v129, v130);
    v132 = v202;
    dispatch thunk of ObservableContainer.value.getter(v202, v131);
    v133 = swift_release(v131);
    v134 = v210;
    ReadingHistory.State.today.getter(v133);
    v135 = (uint64_t (*)(_QWORD *, uint64_t))v185;
    v136 = ((uint64_t (*)(_QWORD *, uint64_t))v185)(v132, v204);
    LOBYTE(v131) = ReadingHistory.Day.isStreakDay.getter(v136);
    v211 = *(_QWORD *)(v211 + 8);
    v137 = v214;
    ((void (*)(char *, uint64_t))v211)(v134, v214);
    *(_BYTE *)(v108 + 144) = v131 & 1;
    *(_QWORD *)(v108 + 168) = &type metadata for Bool;
    strcpy((char *)(v108 + 176), "readingHistory");
    *(_BYTE *)(v108 + 191) = -18;
    v138 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
    *(_QWORD *)(v108 + 192) = v83;
    *(_QWORD *)(v108 + 216) = v138;
    strcpy((char *)(v108 + 224), "timeReadToday");
    *(_WORD *)(v108 + 238) = -4864;
    sub_10002E418(v128, (uint64_t)v219);
    v139 = v220;
    v140 = v221;
    sub_10003F198(v219, v220);
    v141 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v139, v140);
    v142 = v196;
    dispatch thunk of ObservableContainer.value.getter(v196, v141);
    v143 = swift_release(v141);
    v144 = v212;
    ReadingHistory.State.today.getter(v143);
    v145 = v204;
    v146 = v135(v142, v204);
    v147 = ReadingHistory.Day.readingTime.getter(v146);
    v148 = (void (*)(char *, uint64_t))v211;
    v149 = ((uint64_t (*)(char *, uint64_t))v211)(v144, v137);
    *(_QWORD *)(v108 + 240) = v147;
    *(_QWORD *)(v108 + 264) = &type metadata for Int;
    *(_QWORD *)(v108 + 272) = 0x47676E6964616572;
    *(_QWORD *)(v108 + 280) = 0xEB000000006C616FLL;
    v150 = v183;
    *(double *)(v108 + 288) = ReadingGoals.State.streakDayGoal.getter(v149);
    *(_QWORD *)(v108 + 312) = &type metadata for Double;
    *(_QWORD *)(v108 + 320) = 0xD000000000000017;
    *(_QWORD *)(v108 + 328) = 0x80000001007DBC80;
    v152 = ReadingGoals.State.booksFinishedGoal.getter(v151);
    *(_QWORD *)(v108 + 336) = v152;
    *(_QWORD *)(v108 + 360) = &type metadata for Int;
    *(_QWORD *)(v108 + 368) = 0xD000000000000018;
    v153 = v209;
    *(_QWORD *)(v108 + 376) = 0x80000001007DBCA0;
    *(_QWORD *)(v108 + 384) = v153;
    *(_QWORD *)(v108 + 408) = &type metadata for Int;
    *(_QWORD *)(v108 + 416) = 0xD000000000000013;
    *(_QWORD *)(v108 + 424) = 0x80000001007DBCC0;
    v154 = ReadingGoals.State.streakDayGoal.getter(v152);
    sub_10002E418(v201, (uint64_t)v216);
    v155 = v217;
    v156 = v218;
    sub_10003F198(v216, v217);
    v157 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v155, v156);
    v158 = v197;
    dispatch thunk of ObservableContainer.value.getter(v197, v157);
    v159 = swift_release(v157);
    v160 = v213;
    ReadingHistory.State.today.getter(v159);
    v161 = v135(v158, v145);
    v162 = ReadingHistory.Day.readingTime.getter(v161);
    v148(v160, v214);
    v163 = _s5Books15CurrentPageViewVwxx_0(v216);
    *(double *)(v108 + 432) = v154 - (double)v162;
    *(_QWORD *)(v108 + 456) = &type metadata for Double;
    *(_QWORD *)(v108 + 464) = 1702125924;
    *(_QWORD *)(v108 + 472) = 0xE400000000000000;
    v164 = v200;
    Date.init()(v163);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v182 + 8))(v164, v181);
    v166 = v215;
    v167 = objc_msgSend(v215, "stringFromDate:", isa);

    v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
    v170 = v169;

    *(_QWORD *)(v108 + 504) = &type metadata for String;
    *(_QWORD *)(v108 + 480) = v168;
    *(_QWORD *)(v108 + 488) = v170;
    _s5Books15CurrentPageViewVwxx_0(v219);
    _s5Books15CurrentPageViewVwxx_0(v222);
    _s5Books15CurrentPageViewVwxx_0(v226);
    v171 = sub_10003FB0C(v108);
    sub_100056604(v171);
    v173 = v172;
    swift_bridgeObjectRelease(v171);

    (*(void (**)(char *, uint64_t))(v198 + 8))(v150, v199);
    v174 = 0;
    v175 = 1;
    goto LABEL_36;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v49, v48, 0);
  swift_bridgeObjectRelease(v46);
  v53 = swift_bridgeObjectRelease(v50);
  if ((v52 & 1) != 0)
    goto LABEL_12;
  v101 = BasePropertyConfiguration.eventName.getter(v53);
  v103 = v102;
  v105 = BasePropertyConfiguration.eventName.getter(v101);
  v106 = v104;
  if (v101 == v105 && v103 == v104)
  {
    swift_bridgeObjectRelease_n(v103, 2);
  }
  else
  {
    v178 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, v103, v105, v104, 0);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v106);
    if ((v178 & 1) == 0)
    {
      v174 = 0;
      v173 = 0;
      v175 = -1;
      goto LABEL_36;
    }
  }
  v173 = 0;
  v175 = 0;
  v174 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC5Books20ReadingActivityDonor_coachingPermissionApproved);
LABEL_36:
  v226[0] = v174;
  v226[1] = 0;
  v227 = 0;
  v228 = 0;
  v226[2] = v173;
  v229 = v175;
  v176 = objc_allocWithZone((Class)type metadata accessor for BMPropertyValue(0));
  sub_10003F394(v174, 0, v173, 0, 0, v175);
  v177 = (void *)BMPropertyValue.init(with:)(v226);
  (*(void (**)(uint64_t, void *))(v184 + 16))(v184, v177);

  sub_10003F3A8(v174, 0, v173, 0, 0, v175);
}

_QWORD *sub_10003F198(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t _s5Books15CurrentPageViewVwxx_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10003F1DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003F208(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD5A8, &qword_1009D3090);
  *v3 = result;
  return result;
}

uint64_t sub_10003F208(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10004CFD4(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size_0(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    sub_10004CFD4(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10003F394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1)
    return sub_10004AD60(a1, a2, a3, a4, a5, a6);
  return a1;
}

uint64_t sub_10003F3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1)
    return sub_10004ADC0(a1, a2, a3, a4, a5, a6);
  return a1;
}

_QWORD *sub_10003F3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v15;
  id v16;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v5 = _swiftEmptyArrayStorage;
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
         : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v16 = v7;
      sub_10003F570(&v16, &v15);
      if (v2)
      {
        swift_bridgeObjectRelease(v5);
        swift_bridgeObjectRelease(a1);

        return v5;
      }

      v10 = v15;
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_10003FB28(0, v5[2] + 1, 1, v5);
        v12 = v5[2];
        v11 = v5[3];
        if (v12 >= v11 >> 1)
          v5 = sub_10003FB28((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
        v5[2] = v12 + 1;
        v5[v12 + 4] = v10;
      }
      if (v9 == v4)
      {
        swift_bridgeObjectRelease(a1);
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_10003F570@<X0>(id *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  unsigned int v21;
  uint64_t v22;
  uint8_t *v23;
  NSObject *v24;
  NSObject *v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject **v28;
  Class isa;
  unsigned int v30;
  unsigned int v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint8_t *v57;
  unsigned int v58;
  NSObject **v59;
  unint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = objc_msgSend(*a1, "assetID");
  if (v10)
  {
    v11 = v10;
    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = objc_msgSend(v9, "title");
    if (v14)
    {
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v53 = v17;
      v54 = v16;

    }
    else
    {
      v53 = 0xE000000000000000;
      v54 = 0;
    }
    isa = (Class)objc_msgSend(v9, "readingProgress");
    if (!isa)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
      isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    }
    v30 = objc_msgSend(v9, "isFinished");
    if ((objc_msgSend(v9, "isSample") & 1) != 0)
      v31 = 1;
    else
      v31 = objc_msgSend(v9, "isNonLocalSample");
    v58 = objc_msgSend(v9, "isLocal");
    LODWORD(v57) = objc_msgSend(v9, "isNew");
    v32 = objc_msgSend(v9, "seriesID");
    v60 = a2;
    LODWORD(v59) = v31;
    if (v32)
    {
      v33 = v32;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v51 = v35;
      v52 = v34;

    }
    else
    {
      v51 = 0xE000000000000000;
      v52 = 0;
    }
    v36 = 0x6E776F6E6B6E75;
    v37 = objc_msgSend(v9, "contentType", v51, v52);
    v61 = v2;
    LODWORD(v56) = v30;
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend((id)objc_opt_self(NSString), "stringForBCContentType:", objc_msgSend(v38, "integerValue"));
      if (v39)
      {
        v40 = v39;
        v41 = objc_msgSend(v39, "lowercaseString");
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v43 = v42;

LABEL_22:
        v45 = v55;
        v46 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
        inited = swift_initStackObject(v46, &v62);
        *(_OWORD *)(inited + 16) = xmmword_10070CC80;
        *(_QWORD *)(inited + 32) = 0x44497465737361;
        *(_QWORD *)(inited + 40) = 0xE700000000000000;
        *(_QWORD *)(inited + 48) = v45;
        *(_QWORD *)(inited + 56) = v13;
        *(_QWORD *)(inited + 72) = &type metadata for String;
        *(_QWORD *)(inited + 80) = 0x656C746974;
        v48 = v54;
        *(_QWORD *)(inited + 88) = 0xE500000000000000;
        *(_QWORD *)(inited + 96) = v48;
        *(_QWORD *)(inited + 104) = v53;
        *(_QWORD *)(inited + 120) = &type metadata for String;
        *(_QWORD *)(inited + 128) = 0x50676E6964616572;
        *(_QWORD *)(inited + 136) = 0xEF73736572676F72;
        v49 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
        *(_QWORD *)(inited + 144) = isa;
        *(_QWORD *)(inited + 168) = v49;
        *(_QWORD *)(inited + 176) = 0x6873696E69467369;
        *(_QWORD *)(inited + 184) = 0xEA00000000006465;
        *(_BYTE *)(inited + 192) = (_BYTE)v56;
        *(_QWORD *)(inited + 216) = &type metadata for Bool;
        *(_QWORD *)(inited + 224) = 0x656C706D61537369;
        *(_QWORD *)(inited + 232) = 0xE800000000000000;
        *(_BYTE *)(inited + 240) = (_BYTE)v59;
        *(_QWORD *)(inited + 264) = &type metadata for Bool;
        *(_QWORD *)(inited + 272) = 0x6C61636F4C7369;
        *(_QWORD *)(inited + 280) = 0xE700000000000000;
        *(_BYTE *)(inited + 288) = v58;
        *(_QWORD *)(inited + 312) = &type metadata for Bool;
        *(_QWORD *)(inited + 320) = 0x77654E7369;
        *(_QWORD *)(inited + 328) = 0xE500000000000000;
        *(_BYTE *)(inited + 336) = (_BYTE)v57;
        *(_QWORD *)(inited + 360) = &type metadata for Bool;
        *(_QWORD *)(inited + 368) = 0x4449736569726573;
        v50 = v52;
        *(_QWORD *)(inited + 376) = 0xE800000000000000;
        *(_QWORD *)(inited + 384) = v50;
        *(_QWORD *)(inited + 392) = v51;
        *(_QWORD *)(inited + 408) = &type metadata for String;
        *(_QWORD *)(inited + 416) = 0x54746E65746E6F63;
        *(_QWORD *)(inited + 456) = &type metadata for String;
        *(_QWORD *)(inited + 424) = 0xEB00000000657079;
        *(_QWORD *)(inited + 432) = v36;
        *(_QWORD *)(inited + 440) = v43;
        result = sub_10003FB0C(inited);
        a2 = v60;
        goto LABEL_23;
      }

    }
    v43 = 0xE700000000000000;
    goto LABEL_22;
  }
  static Logger.engagement.getter(0);
  v18 = v9;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter(v19);
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v61 = v2;
    v22 = swift_slowAlloc(12, -1);
    v58 = v21;
    v23 = (uint8_t *)v22;
    v59 = (NSObject **)swift_slowAlloc(8, -1);
    v57 = v23;
    *(_DWORD *)v23 = 138412290;
    v56 = v23 + 4;
    v63 = v18;
    v24 = v18;
    v60 = a2;
    v25 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56, v23 + 12);
    *v59 = v18;

    a2 = v60;
    v26 = v57;
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v58, "We found a corrupted asset %@", v57, 0xCu);
    v27 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    v28 = v59;
    swift_arrayDestroy(v59, 1, v27);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {

    v19 = v18;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = 0;
LABEL_23:
  *a2 = result;
  return result;
}

unint64_t sub_10003FB0C(uint64_t a1)
{
  return sub_10004CD48(a1, &qword_1009D0A40, &qword_1009D0A48, (uint64_t (*)(uint64_t *, unint64_t))sub_10004CFC4);
}

_QWORD *sub_10003FB28(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1005B19E4(a1, a2, a3, a4, &qword_1009DD5A8, &qword_1009D3090);
}

uint64_t sub_10003FB3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 8 * a1 + 32;
    v8 = a3 + 8 * v5;
    if (v7 >= v8 || v7 + 8 * v5 <= a3)
    {
      sub_10004CFD4(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

void sub_10003FC40()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  unsigned int v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint8_t *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  os_log_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint8_t *v72;
  os_log_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[4];
  uint64_t v78[4];

  v0 = type metadata accessor for DispatchPredicate(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (uint64_t *)((char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v3 = static OS_dispatch_queue.main.getter(v4);
  (*(void (**)(_QWORD *, _QWORD, unint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.notOnQueue(_:), v0);
  v5 = _dispatchPreconditionTest(_:)(v3);
  (*(void (**)(_QWORD *, unint64_t))(v1 + 8))(v3, v0);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_51:
    swift_once(&qword_1009CE408, sub_10006B6D0);
    goto LABEL_6;
  }
  v6 = sub_100041598(0);
  v0 = v7;
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    goto LABEL_13;
  v1 = v6;
  if (qword_1009CE408 != -1)
    goto LABEL_51;
LABEL_6:
  v9 = type metadata accessor for Logger(0);
  sub_100048F64(v9, (uint64_t)qword_1009E1C98);
  v10 = swift_bridgeObjectRetain_n(v0, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(32, -1);
    v14 = swift_slowAlloc(96, -1);
    v78[0] = v14;
    *(_DWORD *)v13 = 136315650;
    v76 = sub_100040F58(0xD000000000000012, 0x80000001007DC810, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v13 + 4, v13 + 12);
    *(_WORD *)(v13 + 12) = 2080;
    v76 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v13 + 14, v13 + 22);
    *(_WORD *)(v13 + 22) = 2082;
    swift_bridgeObjectRetain(v0);
    v76 = sub_100040F58(v1, v0, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v13 + 24, v13 + 32);
    swift_bridgeObjectRelease_n(v0, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s %s Reading from disk at %{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy(v14, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v0, 2);
  }
  v15 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "fileExistsAtPath:", v16);

  if (!v17)
  {
    swift_bridgeObjectRetain(v0);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.info.getter(v25);
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      v27 = swift_slowAlloc(32, -1);
      v28 = swift_slowAlloc(96, -1);
      v78[0] = v28;
      *(_DWORD *)v27 = 136315650;
      v76 = sub_100040F58(0xD000000000000012, 0x80000001007DC810, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v27 + 4, v27 + 12);
      *(_WORD *)(v27 + 12) = 2080;
      v76 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v27 + 14, v27 + 22);
      *(_WORD *)(v27 + 22) = 2082;
      swift_bridgeObjectRetain(v0);
      v76 = sub_100040F58(v1, v0, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v27 + 24, v27 + 32);
      swift_bridgeObjectRelease_n(v0, 3);
      _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v26, "%s %s No cache for RootBarStandardItems at %{public}s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy(v28, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v0, 2);
    }
    return;
  }
  v18 = objc_allocWithZone((Class)NSData);
  swift_bridgeObjectRetain(v0);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v0);
  v20 = objc_msgSend(v18, "initWithContentsOfFile:", v19);

  if (!v20)
    goto LABEL_13;
  v21 = v20;
  v22 = NSData.startIndex.getter();
  v23 = NSData.endIndex.getter();

  if (v22 == v23)
  {

LABEL_13:
    swift_bridgeObjectRelease(v0);
    return;
  }
  sub_100009E04(0, &qword_1009F49C0, NSKeyedUnarchiver_ptr);
  v29 = sub_10004CFD4(&qword_1009F49C8);
  v30 = swift_allocObject(v29, 56, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100712B60;
  *(_QWORD *)(v30 + 32) = type metadata accessor for RootBarItem();
  *(_QWORD *)(v30 + 40) = sub_100009E04(0, (unint64_t *)&unk_1009F49D0, NSArray_ptr);
  *(_QWORD *)(v30 + 48) = sub_100009E04(0, (unint64_t *)&qword_1009E9020, NSString_ptr);
  v31 = v21;
  v32 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v34 = v33;

  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v78, v30, v32, v34);
  sub_10005EE1C(v32, v34);
  swift_bridgeObjectRelease(v30);
  sub_10004AA7C((uint64_t)v78, (uint64_t)&v76);
  if (!v77[2])
  {
    sub_10004A7B8((uint64_t)&v76);
    goto LABEL_26;
  }
  v35 = sub_10004CFD4(&qword_1009E8800);
  if ((swift_dynamicCast(&v75, &v76, (char *)&type metadata for Any + 8, v35, 6) & 1) == 0)
  {
LABEL_26:
    swift_bridgeObjectRetain(v0);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc(32, -1);
      v47 = swift_slowAlloc(96, -1);
      v76 = v47;
      *(_DWORD *)v46 = 136315650;
      v75 = sub_100040F58(0xD000000000000012, 0x80000001007DC810, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v46 + 4, v46 + 12);
      *(_WORD *)(v46 + 12) = 2080;
      v75 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v46 + 14, v46 + 22);
      *(_WORD *)(v46 + 22) = 2082;
      swift_bridgeObjectRetain(v0);
      v75 = sub_100040F58(v1, v0, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v46 + 24, v46 + 32);
      swift_bridgeObjectRelease_n(v0, 3);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s %s Error casting cached RootBarStandardItems at %{public}s", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v0, 2);
    }

    sub_10004A7B8((uint64_t)v78);
    return;
  }
  v36 = v75;
  swift_bridgeObjectRetain_n(v75, 4);
  swift_bridgeObjectRetain(v0);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.info.getter(v38);
  if (!os_log_type_enabled(v38, (os_log_type_t)v39))
  {

    swift_bridgeObjectRelease_n(v0, 2);
    swift_bridgeObjectRelease_n(v36, 4);
LABEL_49:
    sub_10004A7B8((uint64_t)v78);
    return;
  }
  v73 = v38;
  v74 = v31;
  v40 = swift_slowAlloc(52, -1);
  v70 = swift_slowAlloc(128, -1);
  v76 = v70;
  *(_DWORD *)v40 = 136316162;
  v75 = sub_100040F58(0xD000000000000012, 0x80000001007DC810, &v76);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v40 + 4, v40 + 12);
  *(_WORD *)(v40 + 12) = 2080;
  v75 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, &v76);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v40 + 14, v40 + 22);
  *(_WORD *)(v40 + 22) = 2048;
  v71 = v39;
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0)
      v68 = v36;
    else
      v68 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v41 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease(v36);
  }
  else
  {
    v41 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v36);
  v75 = v41;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v40 + 24, v40 + 32);
  swift_bridgeObjectRelease(v36);
  *(_WORD *)(v40 + 32) = 2082;
  swift_bridgeObjectRetain(v0);
  v75 = sub_100040F58(v1, v0, &v76);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v40 + 34, v40 + 42);
  swift_bridgeObjectRelease_n(v0, 3);
  *(_WORD *)(v40 + 42) = 2082;
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0)
      v48 = v36;
    else
      v48 = v36 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    v42 = _CocoaArrayWrapper.endIndex.getter(v48);
  }
  else
  {
    v42 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v36);
  }
  v72 = (uint8_t *)v40;
  if (!v42)
  {
    v50 = _swiftEmptyArrayStorage;
LABEL_48:
    swift_bridgeObjectRelease(v36);
    v60 = v72;
    v75 = (uint64_t)v50;
    v61 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    v62 = sub_100044F44();
    v63 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v61, v62);
    v65 = v64;
    swift_bridgeObjectRelease(v50);
    v75 = sub_100040F58(v63, v65, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v60 + 44, v60 + 52);
    swift_bridgeObjectRelease_n(v36, 2);
    swift_bridgeObjectRelease(v65);
    v66 = v73;
    _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v71, "%s %s Found %ld Cached RootBarStandardItems at %{public}s: %{public}s", v60, 0x34u);
    v67 = v70;
    swift_arrayDestroy(v70, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    swift_slowDealloc(v60, -1, -1);

    goto LABEL_49;
  }
  if (v42 >= 1)
  {
    v49 = 0;
    v50 = _swiftEmptyArrayStorage;
    do
    {
      if ((v36 & 0xC000000000000001) != 0)
        v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v36);
      else
        v51 = *(id *)(v36 + 8 * v49 + 32);
      v52 = v51;
      v53 = objc_msgSend(v51, "description");
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v56 = v55;

      if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
        v50 = sub_100043ED0(0, v50[2] + 1, 1, v50);
      v58 = v50[2];
      v57 = v50[3];
      if (v58 >= v57 >> 1)
        v50 = sub_100043ED0((_QWORD *)(v57 > 1), v58 + 1, 1, v50);
      ++v49;
      v50[2] = v58 + 1;
      v59 = &v50[2 * v58];
      v59[4] = v54;
      v59[5] = v56;
    }
    while (v42 != v49);
    goto LABEL_48;
  }
  __break(1u);
}

void _s5Books25StandardItemsCacheManagerC10saveToDiskyySayAA11RootBarItemCGF_0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  void (**v4)(_QWORD *, _QWORD, _QWORD *);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Class isa;
  id v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v4 = (void (**)(_QWORD *, _QWORD, _QWORD *))*(v3 - 1);
  __chkstk_darwin(v3);
  v6 = (id *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter(v7);
  v4[13](v6, enum case for DispatchPredicate.notOnQueue(_:), v3);
  v8 = _dispatchPreconditionTest(_:)(v6);
  ((void (*)(_QWORD *, _QWORD *))v4[1])(v6, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once(&qword_1009CE408, sub_10006B6D0);
    goto LABEL_7;
  }
  v9 = sub_100041598(1);
  v6 = (_QWORD *)v10;
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease(v10);
    return;
  }
  v1 = v9;
  v3 = objc_msgSend(objc_allocWithZone((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
  type metadata accessor for RootBarItem();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "encodeObject:forKey:", isa, NSKeyedArchiveRootObjectKey);

  objc_msgSend(v3, "finishEncoding");
  v13 = objc_msgSend(v3, "encodedData");
  if (!v13)
  {
    __break(1u);
    return;
  }
  v4 = (void (**)(_QWORD *, _QWORD, _QWORD *))v13;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "writeToFile:atomically:", v14, 1);

  if (qword_1009CE408 != -1)
    goto LABEL_12;
LABEL_7:
  v15 = type metadata accessor for Logger(0);
  sub_100048F64(v15, (uint64_t)qword_1009E1C98);
  swift_bridgeObjectRetain_n(a1, 2);
  swift_bridgeObjectRetain(v6);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.info.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(42, -1);
    v25 = swift_slowAlloc(128, -1);
    v27 = v25;
    *(_DWORD *)v19 = 136315906;
    v26 = sub_100040F58(0x69446F5465766173, 0xEE00293A5F286B73, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v19 + 4, v19 + 12);
    *(_WORD *)(v19 + 12) = 2080;
    v26 = sub_100040F58(0xD000000000000019, 0x8000000100738ED0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v19 + 14, v19 + 22);
    v24 = v4;
    *(_WORD *)(v19 + 22) = 2082;
    swift_bridgeObjectRetain(v6);
    v26 = sub_100040F58(v1, (unint64_t)v6, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v19 + 24, v19 + 32);
    swift_bridgeObjectRelease_n(v6, 3);
    *(_WORD *)(v19 + 32) = 2082;
    sub_100043D10(a1);
    v21 = v20;
    v26 = sub_100040F58(v22, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v19 + 34, v19 + 42);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s %s Saved RootBarStandardItems to cache at %{public}s: %{public}s", (uint8_t *)v19, 0x2Au);
    v23 = v25;
    swift_arrayDestroy(v25, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease_n(v6, 2);
  }
}

uint64_t sub_100040F58(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100041028(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10004CD0C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10004CD0C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  _s5Books15CurrentPageViewVwxx_0(v12);
  return v7;
}

uint64_t sub_100041028(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1000411E0(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000411E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100041274(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_10004144C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10004144C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_100041274(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1000413E8(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_1000413E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D7C40);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size_0(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10004144C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D7C40);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100041598(char a1)
{
  uint64_t v2;
  NSArray *v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  NSString v12;
  id v13;

  v2 = type metadata accessor for OfflineCache(0);
  if ((a1 & 1) != 0)
  {
    if ((static OfflineCache.generateCache.getter(v2) & 1) == 0)
      goto LABEL_3;
LABEL_6:
    v6 = static OfflineCache.cachePath.getter();
    v5 = v7;
    goto LABEL_8;
  }
  if ((static OfflineCache.runFromCache.getter(v2) & 1) != 0)
    goto LABEL_6;
LABEL_3:
  v3 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v4 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4[2])
  {
    v6 = v4[4];
    v5 = v4[5];
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
    v6 = 0;
    v5 = 0xE000000000000000;
  }
LABEL_8:
  v8 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v8 = v6 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    v9 = objc_allocWithZone((Class)NSString);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    v11 = objc_msgSend(v9, "initWithString:", v10);

    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "stringByAppendingPathComponent:", v12);

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  }
  return v6;
}

uint64_t sub_1000416FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  sub_10004175C(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004175C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t (*v53)(char *, _QWORD, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;

  v71 = a1;
  v1 = sub_10004CFD4(&qword_1009DD3E0);
  __chkstk_darwin(v1);
  v70 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009DD3E8);
  __chkstk_darwin(v3);
  v69 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009DD3F0);
  v6 = __chkstk_darwin(v5);
  v68 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v67 = (char *)&v64 - v8;
  v9 = sub_10004CFD4(&qword_1009DD3F8);
  __chkstk_darwin(v9);
  v66 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009DD400);
  __chkstk_darwin(v11);
  v75 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009DD408);
  __chkstk_darwin(v13);
  v74 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009DD410);
  __chkstk_darwin(v15);
  v72 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Configuration.CollectionsConfiguration(0);
  v17 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009DD418);
  __chkstk_darwin(v20);
  v73 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4(&qword_1009DD420);
  __chkstk_darwin(v22);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Configuration.GenreRecommendationConfiguration(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10004CFD4(&qword_1009DD428);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration.genreRecommendationConfiguration.getter(v30);
  sub_100041D08();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v33 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v32, 0, 1, v25);
  Configuration.seedBasedRecommendationConfiguration.getter(v33);
  v34 = type metadata accessor for Configuration.SeedBasedRecommendationConfiguration(0);
  v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v24, 0, 1, v34);
  Configuration.collectionsConfiguration.getter(v35);
  v36 = v73;
  sub_100041F60(v73);
  v37 = v65;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v65);
  v38 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v36, 0, 1, v37);
  v39 = v72;
  Configuration.scorersConfiguration.getter(v38);
  v40 = type metadata accessor for Configuration.ScorersConfiguration(0);
  v41 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
  v65 = Configuration.profileGenreDenylistForGenres.getter(v41);
  v64 = Configuration.profileGenreDenylistForBooks.getter();
  v42 = v74;
  Configuration.mediaTypeMethod.getter();
  v43 = type metadata accessor for Configuration.MediaTypeMethod(0);
  v44 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
  v45 = v75;
  Configuration.mediaTypesRecommendationServiceConfiguration.getter(v44);
  v46 = type metadata accessor for Configuration.MediaTypesRecommendationServiceConfiguration(0);
  v47 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
  v48 = v66;
  Configuration.booksClusteringServiceConfiguration.getter(v47);
  v49 = type metadata accessor for Configuration.BooksClusteringServiceConfiguration(0);
  v50 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  v51 = v67;
  Configuration.ebookConfiguration.getter(v50);
  v52 = type metadata accessor for Configuration.MediaTypeConfiguration(0);
  v53 = *(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v54 = v51;
  v55 = v53(v51, 0, 1, v52);
  v56 = v68;
  Configuration.audiobookConfiguration.getter(v55);
  v57 = v56;
  v53(v56, 0, 1, v52);
  v58 = type metadata accessor for Configuration.PersonalizationMetadataServiceConfiguration(0);
  v59 = v69;
  v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v69, 1, 1, v58);
  v61 = v70;
  Configuration.tabiConfiguration.getter(v60);
  v62 = type metadata accessor for TabiConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
  return Configuration.init(genreRecommendationConfiguration:seedBasedRecommendationConfiguration:collectionsConfiguration:scorersConfiguration:profileGenreDenylistForGenres:profileGenreDenylistForBooks:indefiniteAuthorIDs:mediaTypeMethod:mediaTypesRecommendationServiceConfiguration:booksClusteringServiceConfiguration:ebookConfiguration:audiobookConfiguration:personalizationMetadataServiceConfiguration:tabiConfiguration:)(v32, v24, v73, v72, v65, v64, 0, v74, v75, v48, v54, v57, v59, v61);
}

void sub_100041D08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *v0;
  v2 = sub_10004CFD4(&qword_1009E4738);
  __chkstk_darwin(v2);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009E4740);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for Configuration.GenreRecommendationConfiguration.Source(0);
  __chkstk_darwin(v4);
  if (qword_1009CDE48 != -1)
    swift_once(&qword_1009CDE48, sub_100016F98);
  v5 = qword_100A1E4A0;
  v6 = sub_100042CE4();
  Configurable.setting<A>(_:)(v5, v1, v6);
  __asm { BR              X10 }
}

uint64_t sub_100041F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t);
  uint64_t (*v97)(uint64_t, uint64_t);
  uint64_t (*v98)(uint64_t, uint64_t);
  char *v99;
  uint64_t (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t);
  uint64_t (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;

  v113 = a1;
  v1 = sub_10004CFD4(&qword_1009E46E0);
  __chkstk_darwin(v1);
  v112 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009E46E8);
  __chkstk_darwin(v3);
  v111 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E46F0);
  __chkstk_darwin(v5);
  v110 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E46F8);
  __chkstk_darwin(v7);
  v109 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009E4700);
  __chkstk_darwin(v9);
  v129 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E4708);
  __chkstk_darwin(v11);
  v127 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009E4710);
  __chkstk_darwin(v13);
  v125 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009E4718);
  __chkstk_darwin(v15);
  v122 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v128 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for Configuration.CollectionsConfiguration.SuggestionsConfiguration(0);
  v126 = *(_QWORD *)(v104 - 8);
  v18 = __chkstk_darwin(v104);
  v101 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v102 = (uint64_t)&v93 - v20;
  v117 = type metadata accessor for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration(0);
  v124 = *(_QWORD *)(v117 - 8);
  v21 = __chkstk_darwin(v117);
  v99 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v123 = (uint64_t)&v93 - v23;
  v135 = type metadata accessor for Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration(0);
  v121 = *(_QWORD *)(v135 - 8);
  v24 = __chkstk_darwin(v135);
  v96 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24);
  v115 = (uint64_t)&v93 - v26;
  v134 = type metadata accessor for Configuration.CollectionsConfiguration.ForYouConfiguration(0);
  v118 = *(_QWORD *)(v134 - 8);
  v27 = __chkstk_darwin(v134);
  v97 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  v131 = (uint64_t)&v93 - v29;
  v132 = type metadata accessor for Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration(0);
  v116 = *(_QWORD *)(v132 - 8);
  v30 = __chkstk_darwin(v132);
  v32 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v133 = (char *)&v93 - v33;
  v130 = type metadata accessor for Configuration.CollectionsConfiguration.BooksConfiguration(0);
  v95 = *(_QWORD *)(v130 - 8);
  v34 = v95;
  v35 = __chkstk_darwin(v130);
  v37 = (char *)&v93 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v39 = (char *)&v93 - v38;
  v119 = (char *)&v93 - v38;
  v40 = type metadata accessor for Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration(0);
  v41 = *(_QWORD *)(v40 - 8);
  v114 = v40;
  v94 = v41;
  v42 = __chkstk_darwin(v40);
  v44 = (char *)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v42);
  v47 = (char *)&v93 - v46;
  v120 = (char *)&v93 - v46;
  Configuration.CollectionsConfiguration.booksBySuggestedAuthorsConfiguration.getter(v45);
  sub_100043AB4((uint64_t)v47);
  v105 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  v48 = v105(v44, v40);
  Configuration.CollectionsConfiguration.booksConfiguration.getter(v48);
  sub_1000438B4((uint64_t)v39);
  v103 = *(uint64_t (**)(char *, uint64_t))(v34 + 8);
  v49 = v103(v37, v130);
  Configuration.CollectionsConfiguration.booksYouMightLikeConfiguration.getter(v49);
  sub_1000429AC((uint64_t)v32, (void (*)(uint64_t))&Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.source.getter, (unsigned int *)&enum case for CollectionType.booksYouMightLike(_:), (void (*)(uint64_t))&Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.rescorer.getter, (uint64_t)&Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.init(source:rescorer:), (uint64_t)v133);
  v100 = *(uint64_t (**)(char *, uint64_t))(v116 + 8);
  v50 = v100(v32, v132);
  v51 = (uint64_t)v97;
  Configuration.CollectionsConfiguration.forYouConfiguration.getter(v50);
  sub_1000429AC(v51, (void (*)(uint64_t))&Configuration.CollectionsConfiguration.ForYouConfiguration.source.getter, (unsigned int *)&enum case for CollectionType.forYou(_:), (void (*)(uint64_t))&Configuration.CollectionsConfiguration.ForYouConfiguration.rescorer.getter, (uint64_t)&Configuration.CollectionsConfiguration.ForYouConfiguration.init(source:rescorer:), v131);
  v98 = *(uint64_t (**)(uint64_t, uint64_t))(v118 + 8);
  v52 = v98(v51, v134);
  v53 = (uint64_t)v96;
  Configuration.CollectionsConfiguration.mangaYouMightLikeConfiguration.getter(v52);
  v54 = v115;
  sub_1000429AC(v53, (void (*)(uint64_t))&Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.source.getter, (unsigned int *)&enum case for CollectionType.mangaYouMightLike(_:), (void (*)(uint64_t))&Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.rescorer.getter, (uint64_t)&Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.init(source:rescorer:), v115);
  v97 = *(uint64_t (**)(uint64_t, uint64_t))(v121 + 8);
  v55 = v97(v53, v135);
  v56 = (uint64_t)v99;
  Configuration.CollectionsConfiguration.moreFromYourAuthorsConfiguration.getter(v55);
  sub_10045918C(v56, v123);
  v96 = *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8);
  v57 = v117;
  v58 = v96(v56, v117);
  v59 = (uint64_t)v101;
  Configuration.CollectionsConfiguration.suggestionsConfiguration.getter(v58);
  v60 = v102;
  sub_1000429AC(v59, (void (*)(uint64_t))&Configuration.CollectionsConfiguration.SuggestionsConfiguration.source.getter, (unsigned int *)&enum case for CollectionType.suggestions(_:), (void (*)(uint64_t))&Configuration.CollectionsConfiguration.SuggestionsConfiguration.rescorer.getter, (uint64_t)&Configuration.CollectionsConfiguration.SuggestionsConfiguration.init(source:rescorer:), v102);
  v106 = *(uint64_t (**)(uint64_t, uint64_t))(v126 + 8);
  v61 = v104;
  v62 = v106(v59, v104);
  Configuration.CollectionsConfiguration.postHydrationFilteringConfiguration.getter(v62);
  v63 = v94;
  v64 = v122;
  v65 = v114;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v122, v120, v114);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v64, 0, 1, v65);
  v66 = v95;
  v67 = v125;
  v68 = v130;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v125, v119, v130);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v67, 0, 1, v68);
  v69 = v116;
  v70 = v127;
  v71 = v132;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v127, v133, v132);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v71);
  v72 = v118;
  v73 = v129;
  v74 = v134;
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v129, v131, v134);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v73, 0, 1, v74);
  v75 = v121;
  v76 = v109;
  v77 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v109, v54, v135);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v77);
  v79 = v123;
  v78 = v124;
  v80 = v110;
  v81 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v124 + 16))(v110, v123, v57);
  v82 = v80;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v80, 0, 1, v81);
  v83 = v126;
  v84 = v111;
  v85 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v111, v60, v61);
  v86 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56);
  v87 = v61;
  v86(v84, 0, 1, v61);
  v88 = v107;
  v89 = v112;
  v90 = v128;
  v91 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v112, v128, v108);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v91);
  Configuration.CollectionsConfiguration.init(booksBySuggestedAuthorsConfiguration:booksConfiguration:booksYouMightLikeConfiguration:forYouConfiguration:mangaYouMightLikeConfiguration:moreFromYourAuthorsConfiguration:suggestionsConfiguration:postHydrationFilteringConfiguration:)(v122, v125, v127, v129, v76, v82, v84, v89);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v90, v91);
  v106(v85, v87);
  v96(v79, v117);
  v97(v115, v135);
  v98(v131, v134);
  v100(v133, v132);
  v103(v119, v130);
  return v105(v120, v114);
}

void sub_1000429AC(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, unsigned int *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[7];
  char *v36;
  void (*v37)(uint64_t);
  char *v38;
  void (*v39)(uint64_t);
  uint64_t v40;

  v35[5] = a5;
  v35[6] = a1;
  v37 = a2;
  v35[4] = a6;
  v8 = *v6;
  v39 = a4;
  v40 = v8;
  v9 = type metadata accessor for Scorer(0);
  v35[2] = *(_QWORD *)(v9 - 8);
  v35[3] = v9;
  __chkstk_darwin(v9);
  v38 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E4720);
  __chkstk_darwin(v11);
  v35[1] = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CollectionType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v36 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)v35 - v17;
  v19 = type metadata accessor for Configuration.CollectionsConfiguration.Source(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009E4728);
  v24 = __chkstk_darwin(v23);
  v26 = (void (*)(uint64_t))((char *)v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37(v24);
  v27 = *a3;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v28(v18, v27, v13);
  sub_100042D28((uint64_t)v22, (uint64_t)v26);
  v29 = v18;
  v30 = (uint64_t)v36;
  v35[0] = *(_QWORD *)(v14 + 8);
  ((void (*)(char *, uint64_t))v35[0])(v29, v13);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v31 = *(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v37 = v26;
  v32 = v31((char *)v26, 0, 1, v19);
  v39(v32);
  v28((char *)v30, v27, v13);
  v33 = sub_100043FDC(v30);
  v34 = sub_100042CE4();
  Configurable.setting<A>(_:)(v33, v40, v34);
  swift_release(v33);
  __asm { BR              X10 }
}

uint64_t sub_100042C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v5 = *(_QWORD *)(v3 - 184);
  v4 = *(_QWORD *)(v3 - 176);
  v6 = *(_QWORD *)(v3 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v0, v6);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 - 152);
  v8 = *(_QWORD *)(v3 - 128);
  (*(void (**)(uint64_t, uint64_t))(v3 - 192))(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v6);
  return v7(v8, v5);
}

unint64_t sub_100042CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E4730;
  if (!qword_1009E4730)
  {
    v1 = type metadata accessor for MergedPersonalizationConfigurationService();
    result = swift_getWitnessTable(&unk_100725AD4, v1);
    atomic_store(result, (unint64_t *)&qword_1009E4730);
  }
  return result;
}

uint64_t sub_100042D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *v2;
  v6 = sub_100042E60();
  if (v6)
  {
    v7 = v6;
    v8 = sub_100042CE4();
    Configurable.setting<A>(_:)(v7, v5, v8);
    swift_release(v7);
    __asm { BR              X10 }
  }
  v9 = type metadata accessor for Configuration.CollectionsConfiguration.Source(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
}

void sub_100042DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for Configuration.CollectionsConfiguration.Source.appleMediaDiscovery(_:);
  v2 = type metadata accessor for Configuration.CollectionsConfiguration.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
  JUMPOUT(0x100042E48);
}

uint64_t sub_100042E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  char *v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  char v28;

  v0 = sub_10004CFD4(&qword_1009D8B68);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for Access(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (char *)type metadata accessor for Domain(0);
  v5 = *((_QWORD *)v26 - 1);
  v6 = __chkstk_darwin(v26);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = CollectionType.supportedSources.getter(v6);
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease(v9);
  if (!v10)
    return 0;
  v22 = v2;
  v23 = v1;
  v24 = v4;
  v11 = sub_1000435FC();
  v21 = v12;
  v28 = 0;
  v13 = (*(uint64_t (**)(char *, _QWORD, char *))(v5 + 104))(v8, enum case for Domain.standard(_:), v26);
  v14 = CollectionType.supportedSources.getter(v13);
  v15 = sub_1000431BC(v14);
  swift_bridgeObjectRelease(v14);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v20[1] = v11;
    v20[2] = v8;
    v27 = _swiftEmptyArrayStorage;
    sub_100043868(0, v16, 0);
    v25 = "ed_authors_scorer";
    v26 = "onfiguration.swift";
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v15);
  sub_10004CFD4(&qword_1009D8B70);
  v18 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, enum case for Access.public(_:), v23);
  v19 = sub_100043824();
  return Setting<>.init(_:defaultValue:domain:access:options:)(v11, v21, &v28, v8, v18, _swiftEmptyArrayStorage, v19);
}

uint64_t sub_1000431BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  int v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;

  v2 = type metadata accessor for CollectionSource(0);
  v3 = __chkstk_darwin(v2);
  v27 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v19 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_18:
    v28 = &off_1008F0338;
    sub_1000434B4((uint64_t)v9);
    return (uint64_t)v28;
  }
  v28 = _swiftEmptyArrayStorage;
  v24 = v5;
  sub_100043490(0, v8, 0);
  v10 = v24;
  v11 = a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  v26 = *(_QWORD *)(v24 + 72);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v25 = enum case for CollectionSource.appleMediaDiscovery(_:);
  v23 = enum case for CollectionSource.mediaAPI(_:);
  v22 = enum case for CollectionSource.bookHistory(_:);
  v21 = enum case for CollectionSource.bookHistoryThenAppleMediaDiscovery(_:);
  v20 = enum case for CollectionSource.tabi(_:);
  while (1)
  {
    v12(v7, v11, v2);
    v13 = v27;
    v12(v27, (uint64_t)v7, v2);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v2);
    if (v14 != v25)
      break;
    v15 = 1;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v2);
    v9 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
    {
      sub_100043490(0, v9[2] + 1, 1);
      v10 = v24;
      v9 = v28;
    }
    v17 = v9[2];
    v16 = v9[3];
    if (v17 >= v16 >> 1)
    {
      sub_100043490(v16 > 1, v17 + 1, 1);
      v10 = v24;
      v9 = v28;
    }
    v9[2] = v17 + 1;
    *((_BYTE *)v9 + v17 + 32) = v15;
    v11 += v26;
    if (!--v8)
      goto LABEL_18;
  }
  if (v14 == v23)
  {
    v15 = 3;
    goto LABEL_13;
  }
  if (v14 == v22)
  {
    v15 = 2;
    goto LABEL_13;
  }
  if (v14 == v21)
  {
    v15 = 4;
    goto LABEL_13;
  }
  if (v14 == v20)
  {
    v15 = 5;
    goto LABEL_13;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E75, 0xEC00000065736163, "Books/Settings+Configuration.swift", 34, 2, 201, 0);
  __break(1u);
  return result;
}

uint64_t sub_100043490(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100044784(a1, a2, a3, *v3, &qword_1009DD540);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000434B4(uint64_t a1)
{
  _QWORD *v1;
  size_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100044E48(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (char *)v3 + v9 + 32;
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000435FC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = 0xD00000000000001BLL;
  v2 = type metadata accessor for CollectionType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v0, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for CollectionType.books(_:))
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001007BDA10, "Books/Settings+Configuration.swift", 34, 2, 145, 0);
    goto LABEL_14;
  }
  if (v6 == enum case for CollectionType.booksBySuggestedAuthors(_:))
    return 0xD000000000000021;
  if (v6 != enum case for CollectionType.booksYouMightLike(_:))
  {
    if (v6 == enum case for CollectionType.forYou(_:))
    {
      return 0x5F756F795F726F66;
    }
    else if (v6 != enum case for CollectionType.mangaYouMightLike(_:))
    {
      if (v6 == enum case for CollectionType.moreFromYourAuthors(_:))
      {
        return 0xD00000000000001DLL;
      }
      else
      {
        if (v6 != enum case for CollectionType.suggestions(_:))
        {
          while (1)
          {
            _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E75, 0xEC00000065736163, "Books/Settings+Configuration.swift", 34, 2, 159, 0);
LABEL_14:
            __break(1u);
          }
        }
        return 0xD000000000000012;
      }
    }
  }
  return v1;
}

unint64_t sub_100043824()
{
  unint64_t result;

  result = qword_1009D8B78;
  if (!qword_1009D8B78)
  {
    result = swift_getWitnessTable(&unk_100718BC8, &_s13ConfigurationV16CollectionSourceON);
    atomic_store(result, (unint64_t *)&qword_1009D8B78);
  }
  return result;
}

uint64_t sub_100043868(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000448CC(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1009DD530, &qword_1009D8B68);
  *v3 = result;
  return result;
}

uint64_t type metadata accessor for MergedPersonalizationConfigurationService()
{
  return objc_opt_self(_TtC5Books41MergedPersonalizationConfigurationService);
}

void sub_1000438B4(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[2];
  uint64_t v12;

  v11[1] = a1;
  v12 = *v1;
  v2 = type metadata accessor for CollectionType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Scorer(0);
  __chkstk_darwin(v6);
  v7 = sub_10004CFD4(&qword_1009E4720);
  v8 = __chkstk_darwin(v7);
  Configuration.CollectionsConfiguration.BooksConfiguration.rescorer.getter(v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for CollectionType.books(_:), v2);
  v9 = sub_100043FDC((uint64_t)v5);
  v10 = sub_100042CE4();
  Configurable.setting<A>(_:)(v9, v12, v10);
  swift_release(v9);
  __asm { BR              X10 }
}

uint64_t sub_100043A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v2);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v2);
  return ((uint64_t (*)(uint64_t))Configuration.CollectionsConfiguration.BooksConfiguration.init(rescorer:))(v5);
}

void sub_100043AB4(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = *v1;
  v2 = type metadata accessor for CollectionType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Scorer(0);
  __chkstk_darwin(v6);
  v7 = sub_10004CFD4(&qword_1009E4720);
  __chkstk_darwin(v7);
  v8 = sub_10004CFD4(&qword_1009E4728);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Configuration.CollectionsConfiguration.Source(0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.rescorer.getter(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for CollectionType.booksBySuggestedAuthors(_:), v2);
  v13 = sub_100043FDC((uint64_t)v5);
  v14 = sub_100042CE4();
  Configurable.setting<A>(_:)(v13, v16, v14);
  swift_release(v13);
  __asm { BR              X10 }
}

uint64_t sub_100043C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.init(source:rescorer:))(v5, v4);
}

void sub_100043D10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_18:
    v4 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    v15 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    v16 = sub_100044F44();
    BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v15, v16);
    swift_bridgeObjectRelease(v4);
    return;
  }
  if (a1 < 0)
    v14 = a1;
  else
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v2)
    goto LABEL_18;
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
      else
        v5 = *(id *)(a1 + 8 * v3 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, "description");
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_100043ED0(0, v4[2] + 1, 1, v4);
      v12 = v4[2];
      v11 = v4[3];
      if (v12 >= v11 >> 1)
        v4 = sub_100043ED0((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
      ++v3;
      v4[2] = v12 + 1;
      v13 = &v4[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
    }
    while (v2 != v3);
    goto LABEL_19;
  }
  __break(1u);
}

_QWORD *sub_100043ED0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100044E54(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100043FDC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  int v24;
  char v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t result;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;

  v38 = sub_10004CFD4(&qword_1009DD520);
  v51 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Access(0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v43 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Scorer(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v50 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)v37 - v10;
  v12 = type metadata accessor for Domain(0);
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Scorer.allCases.getter(v13);
  v17 = v16;
  v18 = *(_QWORD *)(v16 + 16);
  v44 = v15;
  if (v18)
  {
    v37[1] = a1;
    v37[2] = v3;
    v53 = _swiftEmptyArrayStorage;
    v47 = v7;
    sub_100044760(0, v18, 0);
    v19 = v47;
    v20 = *(unsigned __int8 *)(v47 + 80);
    v37[0] = v17;
    v21 = v17 + ((v20 + 32) & ~v20);
    v49 = *(_QWORD *)(v47 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    LODWORD(v48) = enum case for Scorer.appleMediaDiscovery(_:);
    v46 = enum case for Scorer.identity(_:);
    v45 = enum case for Scorer.tabi(_:);
    while (1)
    {
      v22(v11, v21, v6);
      v23 = v50;
      v22(v50, (uint64_t)v11, v6);
      v24 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v23, v6);
      if (v24 == (_DWORD)v48)
      {
        v25 = 1;
      }
      else if (v24 == v46)
      {
        v25 = 2;
      }
      else
      {
        if (v24 != v45)
        {
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E75, 0xEC00000065736163, "Books/Settings+Configuration.swift", 34, 2, 124, 0);
          __break(1u);
          return result;
        }
        v25 = 3;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v6);
      v26 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native(v53) & 1) == 0)
      {
        sub_100044760(0, v26[2] + 1, 1);
        v19 = v47;
        v26 = v53;
      }
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
      {
        sub_100044760(v27 > 1, v28 + 1, 1);
        v19 = v47;
        v26 = v53;
      }
      v26[2] = v28 + 1;
      *((_BYTE *)v26 + v28 + 32) = v25;
      v21 += v49;
      if (!--v18)
      {
        swift_bridgeObjectRelease(v37[0]);
        v15 = v44;
        goto LABEL_16;
      }
    }
  }
  swift_bridgeObjectRelease(v16);
  v26 = _swiftEmptyArrayStorage;
LABEL_16:
  v53 = &off_1008F0360;
  sub_100044AC0((uint64_t)v26);
  v29 = v53;
  v30 = sub_100044C04();
  v32 = v31;
  v52 = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v15, enum case for Domain.standard(_:), v40);
  v33 = v29[2];
  if (v33)
  {
    v48 = v32;
    v49 = v30;
    v53 = _swiftEmptyArrayStorage;
    sub_100044734(0, v33, 0);
    v50 = "onfiguration.swift";
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v29);
  sub_10004CFD4(&qword_1009D8B58);
  v34 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v43, enum case for Access.public(_:), v42);
  v35 = sub_100044E04();
  return Setting<>.init(_:defaultValue:domain:access:options:)(v30, v32, &v52, v15, v34, _swiftEmptyArrayStorage, v35);
}

_QWORD *sub_10004455C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_10004CFD4(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = j__malloc_size_0(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100044650(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

char *sub_100044650(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100044734(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000448CC(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD518, &qword_1009DD520);
  *v3 = result;
  return result;
}

uint64_t sub_100044760(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100044784(a1, a2, a3, *v3, &qword_1009DD528);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100044784(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10004CFD4(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v9] || v14 >= &v15[v9])
  {
    memcpy(v14, v15, v9);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000448CC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10004CFD4(a5);
  v14 = *(_QWORD *)(sub_10004CFD4(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10004CFD4(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24, v25);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100044AB4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10004455C(a1, a2, a3, a4, &qword_1009DD528);
}

uint64_t sub_100044AC0(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100044AB4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100044C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t result;
  int v7;
  uint64_t v8;

  v1 = type metadata accessor for CollectionType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v5 == enum case for CollectionType.books(_:))
    return 0x63735F736B6F6F62;
  v7 = v5;
  result = 0xD00000000000001BLL;
  if (v7 == enum case for CollectionType.booksBySuggestedAuthors(_:))
    return 0xD000000000000021;
  if (v7 != enum case for CollectionType.booksYouMightLike(_:))
  {
    if (v7 == enum case for CollectionType.forYou(_:))
    {
      return 0x5F756F795F726F66;
    }
    else if (v7 != enum case for CollectionType.mangaYouMightLike(_:))
    {
      if (v7 == enum case for CollectionType.moreFromYourAuthors(_:))
      {
        return 0xD00000000000001DLL;
      }
      else if (v7 == enum case for CollectionType.suggestions(_:))
      {
        return 0xD000000000000012;
      }
      else
      {
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E75, 0xEC00000065736163, "Books/Settings+Configuration.swift", 34, 2, 180, 0);
        __break(1u);
      }
    }
  }
  return result;
}

unint64_t sub_100044E04()
{
  unint64_t result;

  result = qword_1009D8B60;
  if (!qword_1009D8B60)
  {
    result = swift_getWitnessTable(&unk_100718BE4, &_s13ConfigurationV16CollectionScorerON);
    atomic_store(result, (unint64_t *)&qword_1009D8B60);
  }
  return result;
}

_QWORD *sub_100044E48(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10004455C(a1, a2, a3, a4, &qword_1009DD540);
}

uint64_t sub_100044E54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_100044F44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D8840;
  if (!qword_1009D8840)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009E8850);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009D8840);
  }
  return result;
}

Swift::Void __swiftcall TabBarController.setStandardItems(_:animated:)(Swift::OpaquePointer _, Swift::Bool animated)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  os_log_type_t v64;
  uint8_t *v66;
  os_log_t log;
  NSObject *loga;
  unint64_t v70;
  _QWORD *v71;
  char v72[16];
  _QWORD *v73;
  void *v74;

  v3 = v2;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v4 = (void *)static OS_dispatch_queue.main.getter();
  v5 = &_dispatch_main_q;
  v6 = &_dispatch_main_q;
  v7 = v4;
  v8 = &_dispatch_main_q;
  if (v7 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v5 = v7;
  }

  v74 = &_swiftEmptyDictionarySingleton;
  v9 = OBJC_IVAR___BKTabBarController_items;
  v10 = *(_QWORD *)&v3[OBJC_IVAR___BKTabBarController_items];
  if ((unint64_t)v10 >> 62)
    goto LABEL_46;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)&v3[OBJC_IVAR___BKTabBarController_items]);
  while (v11)
  {
    v61 = v9;
    v63 = v3;
    v70 = v10 & 0xC000000000000001;
    v12 = &_swiftEmptyDictionarySingleton;
    v9 = 4;
    log = (os_log_t)v10;
    while (1)
    {
      v15 = v70
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v10)
          : (char *)*(id *)(v10 + 8 * v9);
      v16 = v15;
      v3 = (char *)(v9 - 3);
      if (__OFADD__(v9 - 4, 1))
        break;
      v10 = v11;
      v17 = *(_QWORD *)&v15[OBJC_IVAR___BKRootBarItem_identifier];
      v18 = *(_QWORD *)&v15[OBJC_IVAR___BKRootBarItem_identifier + 8];
      swift_bridgeObjectRetain(v18);
      v19 = v16;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      v73 = v12;
      v22 = sub_10004CE80(v17, v18);
      v23 = v12[2];
      v24 = (v21 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        goto LABEL_44;
      v26 = v21;
      if (v12[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v12 = v73;
          if ((v21 & 1) != 0)
            goto LABEL_6;
        }
        else
        {
          sub_1002BFAE4();
          v12 = v73;
          if ((v26 & 1) != 0)
            goto LABEL_6;
        }
      }
      else
      {
        sub_100045E38(v25, isUniquelyReferenced_nonNull_native);
        v27 = sub_10004CE80(v17, v18);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_56;
        v22 = v27;
        v12 = v73;
        if ((v26 & 1) != 0)
        {
LABEL_6:
          v13 = v12[7];

          *(_QWORD *)(v13 + 8 * v22) = v19;
          goto LABEL_7;
        }
      }
      v12[(v22 >> 6) + 8] |= 1 << v22;
      v29 = (uint64_t *)(v12[6] + 16 * v22);
      *v29 = v17;
      v29[1] = v18;
      *(_QWORD *)(v12[7] + 8 * v22) = v19;
      v30 = v12[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_45;
      v12[2] = v32;
      swift_bridgeObjectRetain(v18);
LABEL_7:

      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(0x8000000000000000);
      ++v9;
      v11 = v10;
      v14 = v3 == (char *)v10;
      v10 = (uint64_t)log;
      if (v14)
      {
        v74 = v12;
        v9 = v61;
        v3 = v63;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    if (v10 < 0)
      v59 = v10;
    else
      v59 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v10, 2);
    v11 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_bridgeObjectRelease(v10);
  }
LABEL_24:
  swift_bridgeObjectRelease(v10);
  v33 = sub_1004EBEFC((unint64_t)_._rawValue, (uint64_t *)&v74);
  v34 = *(_QWORD *)&v3[v9];
  *(_QWORD *)&v3[v9] = v33;
  swift_bridgeObjectRelease(v34);
  if (qword_1009CE750 != -1)
    swift_once(&qword_1009CE750, sub_10006BB90);
  v35 = type metadata accessor for Logger(0);
  sub_100048F64(v35, (uint64_t)qword_1009E8770);
  v36 = v3;
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v37, v38))
  {

LABEL_42:
    sub_100045FC8(animated);
    swift_bridgeObjectRelease(v74);
    return;
  }
  v39 = swift_slowAlloc(18, -1);
  v40 = swift_slowAlloc(32, -1);
  v73 = (_QWORD *)v40;
  *(_DWORD *)v39 = 67109378;
  LODWORD(v71) = animated;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, (char *)&v71 + 4, v39 + 4, v39 + 8);
  *(_WORD *)(v39 + 8) = 2082;
  v41 = *(_QWORD *)&v3[v9];
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v60 = v41;
    else
      v60 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v41);
    v42 = _CocoaArrayWrapper.endIndex.getter(v60);
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v41);
  }
  loga = v37;
  v66 = (uint8_t *)v39;
  v64 = v38;
  v62 = v40;
  if (!v42)
  {
    swift_bridgeObjectRelease(v41);
    v44 = _swiftEmptyArrayStorage;
LABEL_41:
    v71 = v44;
    v54 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    v55 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
    v56 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v54, v55);
    v58 = v57;
    swift_bridgeObjectRelease(v44);
    v71 = (_QWORD *)sub_100040F58(v56, v58, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v66 + 10, v66 + 18);

    swift_bridgeObjectRelease(v58);
    _os_log_impl((void *)&_mh_execute_header, loga, v64, "Asked to set RootBarItems (animated=%{BOOL}d to: %{public}s", v66, 0x12u);
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v66, -1, -1);

    goto LABEL_42;
  }
  v71 = _swiftEmptyArrayStorage;
  sub_100045E44(0, v42 & ~(v42 >> 63), 0);
  if ((v42 & 0x8000000000000000) == 0)
  {
    v43 = 0;
    v44 = v71;
    do
    {
      if ((v41 & 0xC000000000000001) != 0)
        v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v41);
      else
        v45 = *(id *)(v41 + 8 * v43 + 32);
      v46 = v45;
      v47 = objc_msgSend(v45, "description");
      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v50 = v49;

      v71 = v44;
      v52 = v44[2];
      v51 = v44[3];
      if (v52 >= v51 >> 1)
      {
        sub_100045E44(v51 > 1, v52 + 1, 1);
        v44 = v71;
      }
      ++v43;
      v44[2] = v52 + 1;
      v53 = &v44[2 * v52];
      v53[4] = v48;
      v53[5] = v50;
    }
    while (v42 != v43);
    swift_bridgeObjectRelease(v41);
    goto LABEL_41;
  }
  __break(1u);
LABEL_56:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

id sub_1000455D8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t RootBarItem.description.getter()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t ObjectType;
  Swift::String v5;
  void *object;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  Swift::String v47;
  void *v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  Swift::String v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v58;
  _QWORD v59[2];

  v1 = (void *)0xE000000000000000;
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  v2._countAndFlagsBits = 60;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  ObjectType = swift_getObjectType(v0, v3);
  v5._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 8250;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v58 = v0;
  _print_unlocked<A, B>(_:_:)(&v58, v59, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v8._countAndFlagsBits = 1029990688;
  v8._object = (void *)0xE400000000000000;
  String.append(_:)(v8);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v10 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_identifier + 8);
  swift_bridgeObjectRetain(v10);
  v11._countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12 = v59[1];
  if (*(_BYTE *)(v0 + OBJC_IVAR___BKRootBarItem_isPlaceholder))
    v13 = 0x6563616C50736920;
  else
    v13 = 0;
  if (*(_BYTE *)(v0 + OBJC_IVAR___BKRootBarItem_isPlaceholder))
    v14 = (void *)0xEE007265646C6F68;
  else
    v14 = (void *)0xE000000000000000;
  swift_bridgeObjectRetain(v59[1]);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v14);
  v17 = v59[0];
  v16 = v59[1];
  v18 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_url + 8);
  if (v18)
  {
    v19 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_url);
    v59[0] = 0x3D6C727520;
    v59[1] = 0xE500000000000000;
    swift_bridgeObjectRetain(v18);
    v20._countAndFlagsBits = v19;
    v20._object = v18;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(v18);
    v18 = (void *)v59[0];
    v1 = (void *)v59[1];
  }
  v59[0] = v17;
  v59[1] = v16;
  swift_bridgeObjectRetain(v16);
  v21._countAndFlagsBits = (uint64_t)v18;
  v21._object = v1;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v1);
  v23 = v59[0];
  v22 = v59[1];
  v24 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
  v25 = (void *)0xE000000000000000;
  if (v24)
  {
    v26 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_titleOverride);
    v59[0] = 0;
    v59[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v59[1]);
    v59[0] = 0x764F656C74697420;
    v59[1] = 0xEF3D656469727265;
    swift_bridgeObjectRetain(v24);
    v27._countAndFlagsBits = v26;
    v27._object = v24;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(v24);
    v24 = (void *)v59[0];
    v25 = (void *)v59[1];
  }
  v59[0] = v23;
  v59[1] = v22;
  swift_bridgeObjectRetain(v22);
  v28._countAndFlagsBits = (uint64_t)v24;
  v28._object = v25;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v25);
  v30 = v59[0];
  v29 = v59[1];
  v31 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_iconNameOverride + 8);
  v32 = (void *)0xE000000000000000;
  if (v31)
  {
    v33 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_iconNameOverride);
    v59[0] = 0;
    v59[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v59[1]);
    v59[0] = 0xD000000000000012;
    v59[1] = 0x80000001007D0060;
    swift_bridgeObjectRetain(v31);
    v34._countAndFlagsBits = v33;
    v34._object = v31;
    String.append(_:)(v34);
    swift_bridgeObjectRelease(v31);
    v31 = (void *)v59[0];
    v32 = (void *)v59[1];
  }
  v59[0] = v30;
  v59[1] = v29;
  swift_bridgeObjectRetain(v29);
  v35._countAndFlagsBits = (uint64_t)v31;
  v35._object = v32;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v32);
  v37 = v59[0];
  v36 = v59[1];
  v38 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_selectedIconNameOverride + 8);
  v39 = (void *)0xE000000000000000;
  if (v38)
  {
    v40 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_selectedIconNameOverride);
    v59[0] = 0;
    v59[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(v59[1]);
    v59[0] = 0xD00000000000001ALL;
    v59[1] = 0x80000001007D0040;
    swift_bridgeObjectRetain(v38);
    v41._countAndFlagsBits = v40;
    v41._object = v38;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(v38);
    v38 = (void *)v59[0];
    v39 = (void *)v59[1];
  }
  v59[0] = v37;
  v59[1] = v36;
  swift_bridgeObjectRetain(v36);
  v42._countAndFlagsBits = (uint64_t)v38;
  v42._object = v39;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v39);
  v44 = v59[0];
  v43 = v59[1];
  v45 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_countryCode + 8);
  if (v45)
  {
    v46 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_countryCode);
    strcpy((char *)v59, " countryCode=");
    HIWORD(v59[1]) = -4864;
    swift_bridgeObjectRetain(v45);
    v47._countAndFlagsBits = v46;
    v47._object = v45;
    String.append(_:)(v47);
    swift_bridgeObjectRelease(v45);
    v49 = v59[0];
    v48 = (void *)v59[1];
  }
  else
  {
    v49 = 0;
    v48 = (void *)0xE000000000000000;
  }
  v59[0] = v44;
  v59[1] = v43;
  swift_bridgeObjectRetain(v43);
  v50._countAndFlagsBits = v49;
  v50._object = v48;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v48);
  v51 = v59[1];
  if (*(_BYTE *)(v0 + OBJC_IVAR___BKRootBarItem_editNameOnSelect))
    v52 = 0xD000000000000011;
  else
    v52 = 0;
  if (*(_BYTE *)(v0 + OBJC_IVAR___BKRootBarItem_editNameOnSelect))
    v53 = (void *)0x80000001007D0020;
  else
    v53 = (void *)0xE000000000000000;
  swift_bridgeObjectRetain(v59[1]);
  v54._countAndFlagsBits = v52;
  v54._object = v53;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v53);
  v55 = v59[1];
  swift_bridgeObjectRetain(v59[1]);
  v56._countAndFlagsBits = 62;
  v56._object = (void *)0xE100000000000000;
  String.append(_:)(v56);
  swift_bridgeObjectRelease(v55);
  return v59[0];
}

Swift::Int sub_100045B30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(a3);
  v40 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v39 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v37 = v4;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain(v6);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_36;
      v25 = *(_QWORD *)(v39 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_36:
          swift_release(v6);
          v4 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v15 >= v38)
              goto LABEL_36;
            v25 = *(_QWORD *)(v39 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v15 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      v35 = v34;
    }
    Hasher.init(_seed:)(v41, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v41, v33, v32);
    result = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

Swift::Int sub_100045E38(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, &qword_1009D7B80);
}

uint64_t sub_100045E44(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100045E60(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100045E60(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100045FC8(int a1)
{
  _DWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  int64_t v11;
  id v12;
  id v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  NSObject *v20;
  NSObject *v21;
  char *v22;
  void *v23;
  BOOL v24;
  unint64_t v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  void (*v29)(char *, _QWORD, uint64_t);
  char *v30;
  char v31;
  char *v32;
  char v33;
  NSObject *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  NSObject *v39;
  uint64_t v40;
  NSObject *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  void *v52;
  NSObject *v53;
  os_log_type_t v54;
  _QWORD *v55;
  void *v56;
  _QWORD *v57;
  uint64_t v58;
  NSObject *v59;
  id v60;
  id v61;
  NSObject *v62;
  NSObject *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  char v71;
  char *v72;
  char v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  id v79;
  uint64_t v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  char v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  Class isa;
  id v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  uint64_t v112;
  _DWORD *v113;
  unint64_t v114;
  __int128 v115;
  unint64_t v116;
  int64_t v117;
  char *v118;
  char *v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  unint64_t v124;
  unsigned int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;

  v2 = v1;
  HIDWORD(v104) = a1;
  v3 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v127 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v6 = (void *)static OS_dispatch_queue.main.getter();
  v7 = &_dispatch_main_q;
  v8 = &_dispatch_main_q;
  v9 = v6;
  v10 = &_dispatch_main_q;
  if (v9 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v7 = v9;
  }

  AriadneTrace_AppLaunchMilestone_PopulateTabsStart();
  v105 = OBJC_IVAR___BKTabBarController_isPopulatingItems;
  *((_BYTE *)v2 + OBJC_IVAR___BKTabBarController_isPopulatingItems) = 1;
  v11 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
  v12 = objc_msgSend(v2, "bk_rootBarCoordinator");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "hostingViewController");

    swift_unknownObjectRelease(v13);
    LODWORD(v15) = v14 == v2;
  }
  else
  {
    LODWORD(v15) = 0;
  }
  v128 = (uint64_t)_swiftEmptyArrayStorage;
  v16 = *(_QWORD *)((char *)v2 + OBJC_IVAR___BKTabBarController_items);
  if ((unint64_t)v16 >> 62)
    goto LABEL_101;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)((char *)v2 + OBJC_IVAR___BKTabBarController_items));
LABEL_8:
  v106 = (unint64_t)v11 >> 62;
  if (v17)
  {
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v93 = v11;
      else
        v93 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v126 = _CocoaArrayWrapper.endIndex.getter(v93);
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v126 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v111 = 0;
    v19 = 0;
    v114 = v16 & 0xC000000000000001;
    v108 = v16 & 0xFFFFFFFFFFFFFF8;
    v107 = v16 + 32;
    v124 = v11 & 0xC000000000000001;
    v125 = enum case for BooksUIKitFeatureFlag.floatingTabBar(_:);
    v123 = enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:);
    *(_QWORD *)&v18 = 138543618;
    v115 = v18;
    v121 = v3;
    v122 = v4;
    v112 = v17;
    v113 = v2;
    v110 = v15;
    v117 = v11;
    v109 = v16;
    while (1)
    {
      if (v114)
      {
        v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v16);
      }
      else
      {
        if (v19 >= *(_QWORD *)(v108 + 16))
          goto LABEL_100;
        v22 = (char *)*(id *)(v107 + 8 * v19);
      }
      v23 = v22;
      v24 = __OFADD__(v19, 1);
      v25 = v19 + 1;
      if (v24)
        goto LABEL_99;
      v116 = v25;
      v120 = v22;
      if (v126)
        break;
LABEL_60:
      if ((v15 & 1) != 0)
      {
        v2 = v113;
        v59 = sub_100046B44(v23);
      }
      else
      {
        v59 = 0;
        v2 = v113;
      }
      v60 = objc_msgSend(objc_allocWithZone((Class)BSUIRootBarWrapperViewController), "initWithContentNavigationController:", v59);
      v61 = v23;
      v62 = v60;
      sub_100504BBC(v23);

      v21 = 0;
      v111 = 1;
LABEL_64:

      v63 = v62;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
      v65 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v64 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v65 >= v64 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
      v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
      specialized Array._endMutation()(v66);
      if (!(_DWORD)v15)
        goto LABEL_12;
      v67 = v128;
      if ((unint64_t)v128 >> 62)
      {
        if (v128 < 0)
          v88 = v128;
        else
          v88 = v128 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v128);
        v89 = _CocoaArrayWrapper.endIndex.getter(v88);
        swift_bridgeObjectRelease(v67);
        v69 = (id)(v89 - 1);
        if (__OFSUB__(v89, 1))
        {
LABEL_89:
          __break(1u);
LABEL_90:
          swift_bridgeObjectRelease(v16);
          if ((v111 & 1) == 0)
          {
            v90 = v128;
            goto LABEL_93;
          }
LABEL_117:
          if (v106)
          {
            if (v11 < 0)
              v103 = v11;
            else
              v103 = v11 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v11);
            v97 = _CocoaArrayWrapper.endIndex.getter(v103);
            swift_bridgeObjectRelease(v11);
          }
          else
          {
            v97 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease(v11);
          v98 = (v97 != 0) & BYTE4(v104);
          v99 = v128;
          sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
          swift_bridgeObjectRetain(v99);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v99);
          objc_msgSend(v2, "setViewControllers:animated:", isa, v98);

          goto LABEL_120;
        }
      }
      else
      {
        v68 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFF8) + 0x10);
        v69 = (id)(v68 - 1);
        if (__OFSUB__(v68, 1))
          goto LABEL_89;
      }
      if (v69 == objc_msgSend(v2, "selectedIndex"))
      {
        sub_100049E28(v120, v63);
        v20 = v63;
      }
      else
      {
LABEL_12:
        v20 = v21;
        v21 = v63;
      }

      v19 = v116;
      if (v116 == v112)
        goto LABEL_90;
    }
    v118 = &v22[OBJC_IVAR___BKRootBarItem_identifier];
    v119 = &v22[OBJC_IVAR___BKRootBarItem_url];
    swift_bridgeObjectRetain(v11);
    v16 = 4;
    while (1)
    {
      if (v124)
        v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v11);
      else
        v28 = *(id *)(v11 + 8 * v16);
      v27 = v28;
      v15 = v16 - 3;
      if (__OFADD__(v16 - 4, 1))
      {
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        if (v16 < 0)
          v92 = v16;
        else
          v92 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v92);
        goto LABEL_8;
      }
      v29 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
      v30 = v127;
      v29(v127, v125, v3);
      v31 = isFeatureEnabled(_:)(v30);
      v2 = *(_DWORD **)(v4 + 8);
      ((void (*)(char *, uint64_t))v2)(v30, v3);
      if ((v31 & 1) != 0
        || (v32 = v127,
            v29(v127, v123, v3),
            v33 = isFeatureEnabled(_:)(v32),
            ((void (*)(char *, uint64_t))v2)(v32, v3),
            (v33 & 1) != 0))
      {
        v34 = -[NSObject _uip_tabElement](v27, "_uip_tabElement");
        if (!v34)
          goto LABEL_23;
        v35 = v34;
        v36 = type metadata accessor for ExtendedUITabBarElement();
        v37 = swift_dynamicCastClass(v35, v36);
        if (v37)
        {
          v38 = &OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_rootBarItem;
LABEL_36:
          v41 = v35;
          v42 = *(void **)(v37 + *v38);
          v35 = v42;

          if (!v42)
          {
            v3 = v121;
            goto LABEL_23;
          }
          v43 = *(uint64_t *)((char *)&v35->isa + OBJC_IVAR___BKRootBarItem_identifier);
          v44 = *(uint64_t *)((char *)&v35[1].isa + OBJC_IVAR___BKRootBarItem_identifier);
          v45 = *((_QWORD *)v118 + 1);
          v46 = v43 == *(_QWORD *)v118 && v44 == v45;
          if (v46 || (_stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, *(_QWORD *)v118, v45, 0) & 1) != 0)
          {
            v47 = (Class *)((char *)&v35->isa + OBJC_IVAR___BKRootBarItem_url);
            v48 = *(uint64_t *)((char *)&v35[1].isa + OBJC_IVAR___BKRootBarItem_url);
            v49 = *((_QWORD *)v119 + 1);
            if (v48)
            {
              if (v49)
              {
                v50 = *v47 == *(_QWORD *)v119 && v48 == v49;
                if (v50 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v47, v48, *(_QWORD *)v119, v49, 0) & 1) != 0)
                {
LABEL_71:
                  swift_bridgeObjectRelease(v11);

                  v70 = v127;
                  v3 = v121;
                  v29(v127, v125, v121);
                  v59 = v27;
                  v71 = isFeatureEnabled(_:)(v70);
                  ((void (*)(char *, uint64_t))v2)(v70, v3);
                  if ((v71 & 1) != 0
                    || (v72 = v127,
                        v29(v127, v123, v3),
                        v73 = isFeatureEnabled(_:)(v72),
                        ((void (*)(char *, uint64_t))v2)(v72, v3),
                        (v73 & 1) != 0))
                  {
                    v74 = -[NSObject _uip_tabElement](v59, "_uip_tabElement");
                    v2 = v113;
                    LODWORD(v15) = v110;
                    v16 = v109;
                    if (v74)
                    {
                      v75 = v74;
                      v76 = type metadata accessor for ExtendedUITabBarElement();
                      v77 = swift_dynamicCastClass(v75, v76);
                      if (v77)
                      {
                        v78 = &OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_rootBarItem;
                        goto LABEL_79;
                      }
LABEL_82:

                    }
                  }
                  else
                  {
                    v79 = -[NSObject tabBarItem](v59, "tabBarItem");
                    v2 = v113;
                    LODWORD(v15) = v110;
                    v16 = v109;
                    if (v79)
                    {
                      v75 = v79;
                      v80 = type metadata accessor for ExtendedTabBarItem();
                      v77 = swift_dynamicCastClass(v75, v80);
                      if (!v77)
                        goto LABEL_82;
                      v78 = &OBJC_IVAR____TtC5Books18ExtendedTabBarItem_rootBarItem;
LABEL_79:
                      v81 = *(void **)(v77 + *v78);
                      v82 = v81;

                      if (v81)
                      {
                        type metadata accessor for RootBarItem();
                        v83 = v120;
                        v84 = v82;
                        v85 = static NSObject.== infix(_:_:)(v84, v83);

                        if ((v85 & 1) != 0)
                        {
                          v62 = v59;
                          v21 = v59;
                          goto LABEL_64;
                        }
                      }
                    }
                  }
                  v86 = v120;
                  v87 = v120;
                  v62 = v59;
                  sub_100504BBC(v86);
                  v21 = v59;
                  goto LABEL_64;
                }
              }
            }
            else if (!v49)
            {
              goto LABEL_71;
            }
            if (qword_1009CE750 != -1)
              swift_once(&qword_1009CE750, sub_10006BB90);
            v51 = type metadata accessor for Logger(0);
            sub_100048F64(v51, (uint64_t)qword_1009E8770);
            v52 = v120;
            v53 = v120;
            v26 = v35;
            v35 = Logger.logObject.getter(v26);
            v54 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v35, v54))
            {
              v2 = (_DWORD *)swift_slowAlloc(22, -1);
              v55 = (_QWORD *)swift_slowAlloc(16, -1);
              v56 = v52;
              v57 = v55;
              *v2 = v115;
              *(_QWORD *)(v2 + 1) = v26;
              *((_WORD *)v2 + 6) = 2114;
              *(_QWORD *)((char *)v2 + 14) = v53;
              *v55 = v42;
              v55[1] = v56;

              _os_log_impl((void *)&_mh_execute_header, v35, v54, "Replacing VC for BKRootBarItem due to URL change: %{public}@ => %{public}@", (uint8_t *)v2, 0x16u);
              v58 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
              swift_arrayDestroy(v57, 2, v58);
              swift_slowDealloc(v57, -1, -1);
              swift_slowDealloc(v2, -1, -1);
            }
            else
            {

              v27 = v53;
              v35 = v26;
            }
            v3 = v121;

            v11 = v117;
          }
          else
          {
            v26 = v27;
            v3 = v121;
          }
          goto LABEL_22;
        }
      }
      else
      {
        v39 = -[NSObject tabBarItem](v27, "tabBarItem");
        if (!v39)
          goto LABEL_23;
        v35 = v39;
        v40 = type metadata accessor for ExtendedTabBarItem();
        v37 = swift_dynamicCastClass(v35, v40);
        if (v37)
        {
          v38 = &OBJC_IVAR____TtC5Books18ExtendedTabBarItem_rootBarItem;
          goto LABEL_36;
        }
      }
      v26 = v27;
LABEL_22:

      v27 = v35;
      v4 = v122;
LABEL_23:

      ++v16;
      if (v15 == v126)
      {
        swift_bridgeObjectRelease(v11);
        LODWORD(v15) = v110;
        v16 = v109;
        v23 = v120;
        goto LABEL_60;
      }
    }
  }
  swift_bridgeObjectRelease(v16);
  v90 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_93:
  if ((unint64_t)v90 >> 62)
  {
    if (v90 < 0)
      v94 = v90;
    else
      v94 = v90 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v90);
    v91 = _CocoaArrayWrapper.endIndex.getter(v94);
    swift_bridgeObjectRelease(v90);
  }
  else
  {
    v91 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v106)
  {
    if (v11 < 0)
      v95 = v11;
    else
      v95 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v96 = _CocoaArrayWrapper.endIndex.getter(v95);
    swift_bridgeObjectRelease(v11);
    if (v91 != v96)
      goto LABEL_117;
  }
  else if (v91 != *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_117;
  }
  swift_bridgeObjectRelease(v11);
LABEL_120:
  *((_BYTE *)v2 + v105) = 0;
  v101 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1009CE748 != -1)
    swift_once(&qword_1009CE748, sub_100064CCC);
  objc_msgSend(v101, "postNotificationName:object:", static NSNotificationName.rootBarReady, v2);

  AriadneTrace_AppLaunchMilestone_PopulateTabsEnd();
  if ((_DWORD)v15)
    sub_100049A90();
  return swift_bridgeObjectRelease(v128);
}

uint64_t type metadata accessor for ExtendedTabBarItem()
{
  return objc_opt_self(_TtC5Books18ExtendedTabBarItem);
}

id sub_100046B44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *Strong;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  Class isa;
  id result;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];

  v2 = v1;
  v4 = type metadata accessor for AutomationSemantics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v8 = (void *)static OS_dispatch_queue.main.getter();
  v9 = &_dispatch_main_q;
  v10 = &_dispatch_main_q;
  v11 = v8;
  v12 = &_dispatch_main_q;
  if (v11 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v9 = v11;
  }

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___BKTabBarController_viewControllerProvider);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "navigationControllerForItem:", a1);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)BSUINavigationController), "init");
  }
  v16 = sub_1004F73FC();
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v18 = swift_allocObject(v17, 40, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v18 + 32) = v16;
  *(_QWORD *)&v29[0] = v18;
  specialized Array._endMutation()(v18);
  v19 = *(_QWORD *)&v29[0];
  sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v20 = v15;
  v21 = v16;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v19);
  objc_msgSend(v20, "setViewControllers:", isa);

  result = objc_msgSend(v20, "view");
  if (result)
  {
    v24 = result;
    v25 = objc_msgSend(a1, "automationID");
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    memset(v29, 0, sizeof(v29));
    static AutomationSemantics.page(name:id:)(v26, v28, v29);
    swift_bridgeObjectRelease(v28);
    sub_100010960((uint64_t)v29, (uint64_t *)&unk_1009D04E0);
    UIView.setAutomationSemantics(_:)(v7);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s5Books20RootBarItemsProviderC7tabType3for13BookAnalytics010BridgedTabG0OSS_tFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v7;
  Swift::String v8;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(a2);
    return 2;
  }
  else
  {
    v8._countAndFlagsBits = a1;
    v8._object = a2;
    v7 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v8);
    if (v7 > 0xEu)
      return 0;
    else
      return qword_1007234D8[(char)v7];
  }
}

char *RootBarItem.toTabBarItem()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  BOOL v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  NSString v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  NSString v23;
  id v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  void *v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v37;
  NSString v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[4];
  uint64_t v44[2];
  __int128 v45;
  uint64_t v46;
  _QWORD v47[6];
  _QWORD v48[6];
  uint64_t v49;
  uint64_t v50;
  char v51[8];
  uint64_t v52;
  _BYTE v53[16];
  __int128 v54;

  v1 = type metadata accessor for AutomationSemantics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_identifier];
  v6 = *(void **)&v0[OBJC_IVAR___BKRootBarItem_identifier + 8];
  v7 = v5 == 0x686372616573 && v6 == (void *)0xE600000000000000;
  if (v7
    || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_identifier], *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_identifier + 8], 0x686372616573, 0xE600000000000000, 0) & 1) != 0)
  {
    v8 = type metadata accessor for ExtendedTabBarItem();
    v9 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "initWithTabBarSystemItem:tag:", 8, 0);
  }
  else
  {
    RootBarItem.title.getter(v44);
    v54 = v45;
    sub_100210D88((uint64_t)&v54);
    sub_100025B3C((uint64_t)&v46, (uint64_t)v53, &qword_1009D2A80);
    sub_100210D88((uint64_t)v53);
    v10 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
    v41 = v2;
    v42 = v1;
    if (v10)
    {
      v11 = 0;
      v12 = v10;
      v13 = v10;
    }
    else
    {
      sub_100047674(v5, v6, *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_countryCode], *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_countryCode + 8], (uint64_t)v47);
      v40 = v47[1];
      v12 = v47[3];
      v11 = v47[5];
      sub_100025B3C((uint64_t)v47, (uint64_t)v51, (uint64_t *)&unk_1009D7970);
      if (v52)
      {
        v13 = v40;
      }
      else
      {
        v11 = 0;
        v12 = 0xE000000000000000;
        v13 = 0xE000000000000000;
      }
    }
    swift_bridgeObjectRetain_n(v10, 2);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRetain(v13);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v15 = (void *)objc_opt_self(UIImage);
    v16 = objc_msgSend(v15, "_systemImageNamed:", v14);

    if (v16
      || (swift_bridgeObjectRetain(v13),
          v17 = String._bridgeToObjectiveC()(),
          swift_bridgeObjectRelease(v13),
          v16 = objc_msgSend(v15, "imageNamed:", v17),
          v17,
          v16))
    {
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      v37 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v15, "systemImageNamed:", v37);
      swift_bridgeObjectRelease(v13);

    }
    v18 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_selectedIconNameOverride + 8];
    if (v18)
    {
      v19 = 0;
      v20 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_selectedIconNameOverride + 8];
      v21 = v20;
    }
    else
    {
      sub_100047674(v5, v6, *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_countryCode], *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_countryCode + 8], (uint64_t)v48);
      v20 = v48[1];
      v22 = v48[3];
      v19 = v48[5];
      sub_100025B3C((uint64_t)v48, (uint64_t)&v49, (uint64_t *)&unk_1009D7970);
      if (v50)
      {
        v18 = v22;
      }
      else
      {
        v19 = 0;
        v18 = 0xE000000000000000;
      }
      if (!v50)
        v20 = 0xE000000000000000;
      v21 = 0;
    }
    swift_bridgeObjectRetain_n(v21, 2);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRetain(v20);
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v24 = objc_msgSend(v15, "_systemImageNamed:", v23);

    if (v24
      || (swift_bridgeObjectRetain(v20),
          v25 = String._bridgeToObjectiveC()(),
          swift_bridgeObjectRelease(v20),
          v24 = objc_msgSend(v15, "imageNamed:", v25),
          v25,
          v24))
    {
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v38 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend(v15, "systemImageNamed:", v38);
      swift_bridgeObjectRelease(v20);

    }
    v2 = v41;
    v1 = v42;
    v26 = type metadata accessor for ExtendedTabBarItem();
    v27 = v44[1];
    v28 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v26));
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v9 = (char *)objc_msgSend(v28, "initWithTitle:image:selectedImage:", v29, v16, v24);

  }
  v30 = *(void **)&v9[OBJC_IVAR____TtC5Books18ExtendedTabBarItem_rootBarItem];
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Books18ExtendedTabBarItem_rootBarItem] = v0;
  v31 = v0;

  objc_msgSend(v9, "setSpringLoaded:", 1);
  v32 = objc_msgSend(v31, "automationID");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v43[3] = &type metadata for String;
  v43[0] = v33;
  v43[1] = v35;
  static AutomationSemantics.tabBar(tabName:)(v43);
  _s5Books15CurrentPageViewVwxx_0(v43);
  UITabBarItem.setAutomationSemantics(_:)(v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_100047674@<X0>(uint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  __int128 v8;
  int64x2_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64x2_t v15;
  __int128 v16;
  unint64_t v17;
  int64x2_t v18;
  __int128 v19;
  uint64_t v20;
  Swift::String v21;

  v6 = result;
  if (a4)
  {
    if (a3 == 28778 && a4 == 0xE200000000000000
      || (result = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 28778, 0xE200000000000000, 0),
          (result & 1) != 0))
    {
      *((_QWORD *)&v8 + 1) = 0;
      *(_QWORD *)&v8 = 0x80000001007C2AD0;
      v9 = vdupq_n_s64(0xD000000000000017);
      v9.i64[0] = 0x80000001007C2AB0;
      if (v6 == 0x7972617262696CLL && a2 == (void *)0xE700000000000000)
      {
        v10 = 0;
        v11 = 0xD00000000000001CLL;
        goto LABEL_16;
      }
      v15 = v9;
      v16 = v8;
      result = _stringCompareWithSmolCheck(_:_:expecting:)(v6, a2, 0x7972617262696CLL, 0xE700000000000000, 0);
      if ((result & 1) != 0)
      {
        v10 = 0;
        v11 = 0xD00000000000001CLL;
        v9 = v15;
        v8 = v16;
        goto LABEL_16;
      }
    }
  }
  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v6, (unint64_t)a2);
  v13 = v12;
  swift_bridgeObjectRelease(v12);
  if (v13)
  {
    swift_bridgeObjectRelease(a2);
    v14 = 14;
  }
  else
  {
    v21._countAndFlagsBits = v6;
    v21._object = a2;
    LODWORD(v14) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v21);
    if (v14 == 16)
      v14 = 15;
    else
      v14 = v14;
  }
  result = sub_100047804(v14, (uint64_t)&v17);
  v11 = v17;
  v9 = v18;
  v8 = v19;
  v10 = v20;
LABEL_16:
  *(_QWORD *)a5 = v11;
  *(int64x2_t *)(a5 + 8) = v9;
  *(_OWORD *)(a5 + 24) = v8;
  *(_QWORD *)(a5 + 40) = v10;
  return result;
}

uint64_t sub_100047804@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int64x2_t v3;
  unint64_t v4;
  const char *v5;

  switch((char)result)
  {
    case 0:
      v3 = (int64x2_t)xmmword_1007235D0;
      v2 = 0xE400000000000000;
      v4 = 0x6C69662E656D6F68;
      break;
    case 1:
      v3 = (int64x2_t)xmmword_1007235C0;
      v2 = 0xE300000000000000;
      v4 = 0x6C6C69662E676162;
      break;
    case 2:
    case 9:
      v2 = 0xEA00000000007365;
      v3 = (int64x2_t)xmmword_100723580;
      v4 = 0x6E6F687064616568;
      break;
    case 3:
      v3 = (int64x2_t)xmmword_1007235B0;
      v2 = 0xE500000000000000;
      v4 = 0x69662E61676E616DLL;
      break;
    case 4:
      v3 = (int64x2_t)xmmword_1007235A0;
      v2 = 0xEF7373616C67676ELL;
      v4 = 0x697966696E67616DLL;
      break;
    case 5:
      v3 = vdupq_n_s64(0x65762E736B6F6F62uLL);
      v3.i64[0] = 0x80000001007C87A0;
      v4 = 0xD000000000000013;
      v2 = 0xEE006C6163697472;
      break;
    case 6:
      v3 = vdupq_n_s64(0xD000000000000014);
      v2 = 0x80000001007B4AA0;
      v3.i64[0] = 0x80000001007B4AA0;
      v4 = 0xD000000000000014;
      break;
    case 7:
      v4 = 0xD000000000000010;
      v3 = vdupq_n_s64(0xD000000000000010);
      v5 = "checkmark.circle";
      goto LABEL_15;
    case 8:
      v3 = (int64x2_t)xmmword_100723590;
      v2 = 0xE400000000000000;
      v4 = 1802465122;
      break;
    case 10:
      v3 = (int64x2_t)xmmword_100723570;
      v2 = 0xE800000000000000;
      v4 = 0x747865742E636F64;
      break;
    case 11:
      v3 = (int64x2_t)xmmword_100723560;
      v2 = 0xE700000000000000;
      v4 = 0x73656C706D6173;
      break;
    case 12:
      v4 = 0xD000000000000015;
      v3 = vdupq_n_s64(0xD000000000000015);
      v5 = "icloud.and.arrow.down";
LABEL_15:
      v2 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      v3.i64[0] = v2;
      break;
    case 13:
      v3 = (int64x2_t)xmmword_100723550;
      v2 = 0xE400000000000000;
      v4 = 1937075312;
      break;
    default:
      v4 = 0;
      v2 = 0;
      v3 = 0uLL;
      break;
  }
  *(_QWORD *)a2 = v4;
  *(int64x2_t *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 24) = v2;
  return result;
}

uint64_t RootBarItem.title.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t result;
  uint64_t v17[6];
  _BYTE v18[8];
  uint64_t v19;
  Swift::String v20;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BKRootBarItem_titleOverride);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
  if (v4)
  {
    v5 = 0;
    v6 = 0;
    v7 = *v3;
    v8 = v4;
    v9 = *v3;
    v10 = v4;
  }
  else
  {
    v12 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_identifier);
    v11 = *(void **)(v1 + OBJC_IVAR___BKRootBarItem_identifier + 8);
    swift_bridgeObjectRetain(v11);
    _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v12, (unint64_t)v11);
    v14 = v13;
    swift_bridgeObjectRelease(v13);
    if (v14)
    {
      swift_bridgeObjectRelease(v11);
      v15 = 14;
    }
    else
    {
      v20._countAndFlagsBits = v12;
      v20._object = v11;
      v15 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v20);
      if (v15 == 16)
        v15 = 15;
    }
    sub_100047B64(v15, v17);
    v9 = v17[0];
    v10 = v17[1];
    v7 = v17[2];
    v8 = v17[3];
    v5 = v17[4];
    v6 = v17[5];
    sub_100025B3C((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_1009D7970);
    if (!v19)
    {
      v5 = 0;
      v6 = 0;
      v7 = 0;
      v8 = 0xE000000000000000;
      v9 = 0;
      v10 = 0xE000000000000000;
    }
  }
  result = swift_bridgeObjectRetain_n(v4, 2);
  *a1 = v9;
  a1[1] = v10;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v5;
  a1[5] = v6;
  return result;
}

uint64_t sub_100047B64@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  char *v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t ObjCClassFromMetadata;
  id v62;
  void (*v63)(char *, _QWORD, uint64_t);
  char v64;
  void (*v65)(char *, uint64_t);
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  const char *v99;
  char *v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  id v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v3 = a1;
  v4 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v140 = *(_QWORD *)(v8 - 8);
  v141 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v133 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v15);
  v22 = (char *)&v133 - v21;
  switch(v3)
  {
    case 0:
      v23 = v19;
      v24 = v20;
      String.LocalizationValue.init(stringLiteral:)(1701670728, 0xE400000000000000);
      v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 16))(v17, v22, v23);
      static Locale.current.getter(v25);
      v26 = String.init(localized:defaultValue:table:bundle:locale:comment:)("HomeNavigationTitle", 19, 2, v17, 0, 0, 0, v13, "Title of Home tab/sidebar item", 30, 2);
      goto LABEL_16;
    case 1:
      v58 = v19;
      v139 = v19;
      v29 = v20;
      v59 = String.LocalizationValue.init(stringLiteral:)(0x6F7453206B6F6F42, 0xEA00000000006572);
      static Locale.current.getter(v59);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v58);
      v60 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v60);
      v62 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v34 = v140;
      v35 = v141;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v11, v13, v141);
      v36 = "Book Store tab/sidebar item";
      goto LABEL_21;
    case 2:
      v138 = v20;
      v139 = v19;
      v63 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
      v63(v7, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v4);
      v64 = isFeatureEnabled(_:)(v7);
      v65 = *(void (**)(char *, uint64_t))(v5 + 8);
      v65(v7, v4);
      if ((v64 & 1) != 0
        || (v63(v7, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v4),
            v66 = isFeatureEnabled(_:)(v7),
            v65(v7, v4),
            (v66 & 1) != 0))
      {
        v67 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEF65726F7453206BLL);
        static Locale.current.getter(v67);
        v68 = v138;
        v137 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
        v137(v17, v22, v139);
        v69 = type metadata accessor for BundleFinder();
        v70 = swift_getObjCClassFromMetadata(v69);
        v136 = v70;
        v135 = (id)objc_opt_self(NSBundle);
        v71 = objc_msgSend(v135, "bundleForClass:", v70);
        v73 = v140;
        v72 = v141;
        v134 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
        v134(v11, v13, v141);
        v54 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v71, v11, "Audiobook Store floating tab item", 33, 2);
        v55 = v74;
        v140 = *(_QWORD *)(v73 + 8);
        ((void (*)(char *, uint64_t))v140)(v13, v72);
        v75 = *(void (**)(char *, uint64_t))(v68 + 8);
        v76 = v139;
        v75(v22, v139);
        v77 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEA0000000000736BLL);
        static Locale.current.getter(v77);
        v137(v17, v22, v76);
        v78 = objc_msgSend(v135, "bundleForClass:", v136);
        v134(v11, v13, v72);
        v79 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v78, v11, "Audiobook Store tab item", 24, 2);
        v81 = v80;
        ((void (*)(char *, uint64_t))v140)(v13, v72);
        v75(v22, v139);
        result = swift_bridgeObjectRetain(v55);
LABEL_24:
        v56 = v54;
        v57 = v55;
      }
      else
      {
        v123 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEA0000000000736BLL);
        static Locale.current.getter(v123);
        v137 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
        v137(v17, v22, v139);
        v124 = type metadata accessor for BundleFinder();
        v125 = swift_getObjCClassFromMetadata(v124);
        v136 = v125;
        v135 = (id)objc_opt_self(NSBundle);
        v126 = objc_msgSend(v135, "bundleForClass:", v125);
        v127 = v140;
        v93 = v141;
        v134 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
        v134(v11, v13, v141);
        v54 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v126, v11, "Audiobook Store tab item", 24, 2);
        v55 = v128;
        v140 = *(_QWORD *)(v127 + 8);
        ((void (*)(char *, uint64_t))v140)(v13, v93);
        v129 = v139;
        v138 = *(_QWORD *)(v138 + 8);
        ((void (*)(char *, uint64_t))v138)(v22, v139);
        v130 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEF65726F7453206BLL);
        static Locale.current.getter(v130);
        v137(v17, v22, v129);
        v131 = objc_msgSend(v135, "bundleForClass:", v136);
        v134(v11, v13, v93);
        v99 = "Audiobooks sidebar item";
        v100 = v17;
        v101 = v131;
        v102 = v11;
        v103 = 23;
LABEL_27:
        v56 = String.init(localized:table:bundle:locale:comment:)(v100, 0, 0, v101, v102, v99, v103, 2);
        v57 = v132;
        ((void (*)(char *, uint64_t))v140)(v13, v93);
        result = ((uint64_t (*)(char *, uint64_t))v138)(v22, v139);
LABEL_28:
        v79 = 0;
        v81 = 0;
      }
      *a2 = v54;
      a2[1] = v55;
      a2[2] = v56;
      a2[3] = v57;
      a2[4] = v79;
      a2[5] = v81;
      return result;
    case 3:
      v82 = v19;
      v139 = v19;
      v29 = v20;
      v83 = String.LocalizationValue.init(stringLiteral:)(0x74532061676E614DLL, 0xEB0000000065726FLL);
      static Locale.current.getter(v83);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v82);
      v84 = type metadata accessor for BundleFinder();
      v85 = swift_getObjCClassFromMetadata(v84);
      v86 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v85);
      v34 = v140;
      v35 = v141;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v11, v13, v141);
      v36 = "Manga Store sidebar item";
      v37 = v17;
      v38 = v86;
      v39 = v11;
      v40 = 24;
      goto LABEL_22;
    case 4:
      v28 = v19;
      v139 = v19;
      v29 = v20;
      v30 = String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
      static Locale.current.getter(v30);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v28);
      v31 = type metadata accessor for BundleFinder();
      v32 = swift_getObjCClassFromMetadata(v31);
      v33 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v32);
      v34 = v140;
      v35 = v141;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v11, v13, v141);
      v36 = "Search tab/sidebar item";
      v37 = v17;
      v38 = v33;
      v39 = v11;
      v40 = 23;
      goto LABEL_22;
    case 5:
      v87 = v19;
      v138 = v20;
      v139 = v19;
      v88 = v20;
      v89 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
      static Locale.current.getter(v89);
      v137 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
      v137(v17, v22, v87);
      v90 = type metadata accessor for BundleFinder();
      v91 = swift_getObjCClassFromMetadata(v90);
      v136 = v91;
      v135 = (id)objc_opt_self(NSBundle);
      v92 = objc_msgSend(v135, "bundleForClass:", v91);
      v94 = v140;
      v93 = v141;
      v134 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
      v134(v11, v13, v141);
      v54 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v92, v11, "Library tab item", 16, 2);
      v55 = v95;
      v140 = *(_QWORD *)(v94 + 8);
      ((void (*)(char *, uint64_t))v140)(v13, v93);
      v96 = v139;
      v138 = *(_QWORD *)(v138 + 8);
      ((void (*)(char *, uint64_t))v138)(v22, v139);
      v97 = String.LocalizationValue.init(stringLiteral:)(7105601, 0xE300000000000000);
      static Locale.current.getter(v97);
      v137(v17, v22, v96);
      v98 = objc_msgSend(v135, "bundleForClass:", v136);
      v134(v11, v13, v93);
      v99 = "Library sidebar item";
      v100 = v17;
      v101 = v98;
      v102 = v11;
      v103 = 20;
      goto LABEL_27;
    case 6:
      v104 = v19;
      v139 = v19;
      v29 = v20;
      v105 = String.LocalizationValue.init(stringLiteral:)(0x206F7420746E6157, 0xEC00000064616552);
      static Locale.current.getter(v105);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v104);
      v106 = type metadata accessor for BundleFinder();
      v107 = swift_getObjCClassFromMetadata(v106);
      v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v107);
      goto LABEL_19;
    case 7:
      v23 = v19;
      v24 = v20;
      String.LocalizationValue.init(stringLiteral:)(0x64656873696E6946, 0xE800000000000000);
      v108 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 16))(v17, v22, v23);
      static Locale.current.getter(v108);
      v26 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Finished_Sidebar", 16, 2, v17, 0, 0, 0, v13, "Library sidebar item", 20, 2);
LABEL_16:
      v54 = v26;
      v55 = v27;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
      goto LABEL_23;
    case 8:
      v109 = v19;
      v139 = v19;
      v29 = v20;
      v110 = String.LocalizationValue.init(stringLiteral:)(0x736B6F6F42, 0xE500000000000000);
      static Locale.current.getter(v110);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v109);
      v111 = type metadata accessor for BundleFinder();
      v112 = swift_getObjCClassFromMetadata(v111);
      v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v112);
      goto LABEL_19;
    case 9:
      v41 = v19;
      v139 = v19;
      v29 = v20;
      v42 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xEA0000000000736BLL);
      static Locale.current.getter(v42);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v41);
      v43 = type metadata accessor for BundleFinder();
      v44 = swift_getObjCClassFromMetadata(v43);
      v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v44);
      goto LABEL_19;
    case 10:
      v113 = v19;
      v139 = v19;
      v29 = v20;
      v114 = String.LocalizationValue.init(stringLiteral:)(1933984848, 0xE400000000000000);
      static Locale.current.getter(v114);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v113);
      v115 = type metadata accessor for BundleFinder();
      v116 = swift_getObjCClassFromMetadata(v115);
      v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v116);
      goto LABEL_19;
    case 11:
      v46 = v19;
      v139 = v19;
      v29 = v20;
      v47 = String.LocalizationValue.init(stringLiteral:)(0x6C706D615320794DLL, 0xEA00000000007365);
      static Locale.current.getter(v47);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v46);
      v48 = type metadata accessor for BundleFinder();
      v49 = swift_getObjCClassFromMetadata(v48);
      v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v49);
      goto LABEL_19;
    case 12:
      v50 = v19;
      v139 = v19;
      v29 = v20;
      v51 = String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xEA00000000006465);
      static Locale.current.getter(v51);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v50);
      v52 = type metadata accessor for BundleFinder();
      v53 = swift_getObjCClassFromMetadata(v52);
      v45 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v53);
LABEL_19:
      v117 = v45;
      v34 = v140;
      v35 = v141;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v11, v13, v141);
      v36 = "Library sidebar item";
      v37 = v17;
      v38 = v117;
      v39 = v11;
      v40 = 20;
      goto LABEL_22;
    case 13:
      v118 = v19;
      v139 = v19;
      v29 = v20;
      v119 = String.LocalizationValue.init(stringLiteral:)(0x6C6C6F432077654ELL, 0xEE006E6F69746365);
      static Locale.current.getter(v119);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v22, v118);
      v120 = type metadata accessor for BundleFinder();
      v121 = swift_getObjCClassFromMetadata(v120);
      v62 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v121);
      v34 = v140;
      v35 = v141;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v11, v13, v141);
      v36 = "New Collection sidebar item";
LABEL_21:
      v37 = v17;
      v38 = v62;
      v39 = v11;
      v40 = 27;
LABEL_22:
      v54 = String.init(localized:table:bundle:locale:comment:)(v37, 0, 0, v38, v39, v36, v40, 2);
      v55 = v122;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v139);
LABEL_23:
      result = swift_bridgeObjectRetain(v55);
      v79 = 0;
      v81 = 0;
      goto LABEL_24;
    default:
      v54 = 0;
      v55 = 0;
      v56 = 0;
      v57 = 0;
      goto LABEL_28;
  }
}

uint64_t sub_100048A4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100048A8C + 4 * byte_10072336E[a1]))(0x6F6F626F69647561, 0xEE0065726F74536BLL);
}

uint64_t sub_100048A8C()
{
  return 1701670760;
}

uint64_t sub_100048A9C()
{
  return 0x726F74536B6F6F62;
}

uint64_t sub_100048AB8()
{
  return 0x61676E616DLL;
}

uint64_t sub_100048ACC()
{
  return 0x686372616573;
}

uint64_t sub_100048AE0()
{
  return 0x417972617262696CLL;
}

unint64_t sub_100048AFC()
{
  return 0xD000000000000011;
}

unint64_t sub_100048BAC()
{
  return 0xD000000000000014;
}

void sub_100048BC4()
{
  JUMPOUT(0x100048BD8);
}

uint64_t sub_100048BE4()
{
  return 0x6E776F6E6B6E75;
}

uint64_t _s5Books20RootBarItemsProviderC19isLibraryCollection3forSbSS_tFZ_0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  char v12;
  Swift::String v13;

  swift_bridgeObjectRetain(a2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(a1, (unint64_t)a2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(a2);
    v6 = 14;
  }
  else
  {
    v13._countAndFlagsBits = a1;
    v13._object = a2;
    v10 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v13);
    if (v10 > 0x10u || ((0x1E01Fu >> v10) & 1) == 0)
      return 1;
    v6 = byte_1007234C4[(char)v10];
  }
  v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v6);
  v9 = v8;
  if (v7 == 0x6D6F74737563 && v8 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x6D6F74737563, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v9);
  return v12 & 1;
}

unint64_t _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008EF7A0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0x10)
    return 16;
  else
    return v3;
}

uint64_t _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v19 = a1;
  v20 = a2;
  v17 = 0x3A6D6F74737563;
  v18 = 0xE700000000000000;
  v4 = sub_100048F7C();
  v5 = sub_100048FC0();
  if ((BidirectionalCollection<>.starts<A>(with:)(&v17, &type metadata for String, &type metadata for String, v4, v5) & 1) != 0)
  {
    v19 = a1;
    v20 = a2;
    swift_bridgeObjectRetain(a2);
    v6 = String.count.getter(0x3A6D6F74737563, 0xE700000000000000);
    sub_100404EB4(v6);
    return v19;
  }
  else
  {
    if (qword_1009CE408 != -1)
      swift_once(&qword_1009CE408, sub_10006B6D0);
    v8 = type metadata accessor for Logger(0);
    sub_100048F64(v8, (uint64_t)qword_1009E1C98);
    v9 = swift_bridgeObjectRetain_n(a2, 2);
    v10 = Logger.logObject.getter(v9);
    v14 = static os_log_type_t.debug.getter(v10, v11, v12, v13);
    if (os_log_type_enabled(v10, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v19 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain(a2);
      v17 = sub_100040F58(a1, a2, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v10, v14, "Can't extract collectionID from identifier: %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return 0;
  }
}

uint64_t sub_100048F64(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_100048F7C()
{
  unint64_t result;

  result = qword_1009D4800;
  if (!qword_1009D4800)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1009D4800);
  }
  return result;
}

unint64_t sub_100048FC0()
{
  unint64_t result;

  result = qword_1009D7C08;
  if (!qword_1009D7C08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1009D7C08);
  }
  return result;
}

uint64_t RootBarItemsProvider.ItemKind.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100049030 + 4 * byte_100723350[a1]))(1701670760, 0xE400000000000000);
}

uint64_t sub_100049030()
{
  return 0x736B6F6F62;
}

uint64_t sub_100049044()
{
  return 0x6F6F626F69647561;
}

uint64_t sub_100049060()
{
  return 0x61676E616DLL;
}

uint64_t sub_100049074()
{
  return 0x686372616573;
}

uint64_t sub_100049088()
{
  return 0x7972617262696CLL;
}

unint64_t sub_1000490A0()
{
  return 0xD000000000000011;
}

uint64_t sub_100049154()
{
  return 0x656C6C6F4377656ELL;
}

uint64_t sub_100049178()
{
  return 0x6D6F74737563;
}

uint64_t sub_10004918C()
{
  return 0x6E776F6E6B6E75;
}

unint64_t MiniPlayerHostingTabBarController.tabViewControllers.getter()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  _BYTE v20[24];

  v1 = objc_msgSend(v0, "viewControllers");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v5 = (id *)&v0[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
  swift_beginAccess(v5, v20, 0, 0);
  if (!*v5)
    return v4;
  v6 = *v5;
  v7 = sub_1004EC1D8((uint64_t)v6, v4, (uint64_t)&qword_1009D8D70, UIViewController_ptr);

  if ((v7 & 1) == 0)
  {
LABEL_26:

    return v4;
  }
  if (!((unint64_t)v4 >> 62))
  {
    v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v6;
    swift_bridgeObjectRetain(v4);
    if (v8)
      goto LABEL_8;
LABEL_19:

    swift_bridgeObjectRelease(v4);
    goto LABEL_20;
  }
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  v13 = v6;
  swift_bridgeObjectRetain(v4);
  v8 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v8)
    goto LABEL_19;
LABEL_8:
  result = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_29:
    v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(result, v4);

    swift_unknownObjectRelease(v11);
LABEL_13:
    swift_bridgeObjectRelease(v4);
    if ((id)v11 == v6)
    {
LABEL_25:
      v19 = sub_1004F712C(v4, v6);
      swift_bridgeObjectRelease(v4);
      v4 = (uint64_t)v19;
      goto LABEL_26;
    }
LABEL_20:
    if (qword_1009CE750 != -1)
      swift_once(&qword_1009CE750, sub_10006BB90);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048F64(v14, (uint64_t)qword_1009E8770);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "miniPlayerViewController should always be the last child of the tab bar controller", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    goto LABEL_25;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(_QWORD *)(v4 + 8 * result + 32);

    goto LABEL_13;
  }
  __break(1u);
  return result;
}

_QWORD *_s5Books20RootBarItemsProviderC08standardD7FromBag4with11countryCodeSayAA0bC4ItemCGSayypG_SSSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _BYTE v16[32];
  uint64_t v17;
  _QWORD v18[4];

  v4 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v7 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v8 = _swiftEmptyArrayStorage;
    do
    {
      sub_10004CD0C(v7, (uint64_t)v18);
      sub_10004CD0C((uint64_t)v18, (uint64_t)v16);
      v9 = sub_10004CFD4(&qword_1009D3090);
      if ((swift_dynamicCast(&v17, v16, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
        v17 = 0;
      _s5Books15CurrentPageViewVwxx_0(v18);
      v10 = v17;
      if (v17)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10003FB28(0, v8[2] + 1, 1, v8);
        v12 = v8[2];
        v11 = v8[3];
        if (v12 >= v11 >> 1)
          v8 = sub_10003FB28((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
        v8[2] = v12 + 1;
        v8[v12 + 4] = v10;
      }
      v7 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(a1);
    v4 = a2;
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain(a3);
  v13 = sub_1000495E0((uint64_t)v8, v4, a3);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(a3);
  return v13;
}

_QWORD *sub_1000495E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  result = _swiftEmptyArrayStorage;
  v18 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v6; ++i)
    {
      v11 = *(_QWORD *)(a1 + 8 * i + 32);
      v17 = v11;
      swift_bridgeObjectRetain(v11);
      sub_100049720(&v17, a2, a3, &v16);
      if (v3)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v11);
        return (_QWORD *)swift_bridgeObjectRelease(v18);
      }
      v12 = swift_bridgeObjectRelease(v11);
      v13 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v10);
      }
    }
    swift_bridgeObjectRelease(a1);
    return (_QWORD *)v18;
  }
  return result;
}

id sub_100049720@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  id result;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  _BYTE v45[32];
  unint64_t v46;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v8 = sub_10004CE80(25705, 0xE200000000000000);
    if ((v9 & 1) != 0)
    {
      sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)v45);
      if ((swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v11 = v43;
        v10 = v44;
        if (a3)
        {
          if (a2 == 28778 && a3 == 0xE200000000000000
            || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 28778, 0xE200000000000000, 0),
                v13 = 0,
                (v12 & 1) != 0))
          {
            if (v11 == 0x7972617262696CLL && v10 == 0xE700000000000000)
              v13 = 1;
            else
              v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, 0x7972617262696CLL, 0xE700000000000000, 0);
          }
        }
        else
        {
          v13 = 0;
        }
        v42 = v13;
        if (*(_QWORD *)(v5 + 16) && (v15 = sub_10004CE80(7107189, 0xE300000000000000), (v16 & 1) != 0))
        {
          sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v15, (uint64_t)v45);
          v17 = swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if (v17)
            v18 = v43;
          else
            v18 = 0;
          if (v17)
            v19 = v44;
          else
            v19 = 0;
          v40 = v19;
          v41 = v18;
          if (!*(_QWORD *)(v5 + 16))
            goto LABEL_34;
        }
        else
        {
          v40 = 0;
          v41 = 0;
          if (!*(_QWORD *)(v5 + 16))
            goto LABEL_34;
        }
        v20 = sub_10004CE80(0x656C746974, 0xE500000000000000);
        if ((v21 & 1) != 0)
        {
          sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v45);
          v22 = swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if (v22)
            v23 = v43;
          else
            v23 = 0;
          if (v22)
            v24 = v44;
          else
            v24 = 0;
          v38 = v24;
          v39 = v23;
LABEL_35:
          v25 = *(_QWORD *)(v5 + 16);
          v46 = v10;
          if (v25 && (v26 = sub_10004CE80(0x656D614E6E6F6369, 0xE800000000000000), (v27 & 1) != 0))
          {
            sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v26, (uint64_t)v45);
            v28 = swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
            v29 = v43;
            if (!v28)
              v29 = 0;
            v37 = v29;
            if (v28)
              v30 = v44;
            else
              v30 = 0;
            if (!*(_QWORD *)(v5 + 16))
              goto LABEL_54;
          }
          else
          {
            v37 = 0;
            v30 = 0;
            if (!*(_QWORD *)(v5 + 16))
              goto LABEL_54;
          }
          v31 = sub_10004CE80(0xD000000000000010, 0x80000001007C8A00);
          if ((v32 & 1) != 0)
          {
            sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v31, (uint64_t)v45);
            v33 = swift_dynamicCast(&v43, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6);
            if (v33)
              v34 = v43;
            else
              v34 = 0;
            if (v33)
              v35 = v44;
            else
              v35 = 0;
            if ((v42 & 1) != 0)
              goto LABEL_55;
            goto LABEL_53;
          }
LABEL_54:
          v34 = 0;
          v35 = 0;
          if ((v42 & 1) != 0)
          {
LABEL_55:
            swift_bridgeObjectRetain(a3);
            goto LABEL_56;
          }
LABEL_53:
          a2 = 0;
          a3 = 0;
LABEL_56:
          v36 = objc_allocWithZone((Class)type metadata accessor for RootBarItem());
          result = RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(v11, v46, 0, v41, v40, v39, v38, v37, v30, v34, v35, a2, a3, 0);
          goto LABEL_12;
        }
LABEL_34:
        v38 = 0;
        v39 = 0;
        goto LABEL_35;
      }
    }
  }
  result = 0;
LABEL_12:
  *a4 = result;
  return result;
}

void sub_100049A90()
{
  void *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;

  v1 = TabBarController.selectedItem.getter();
  KeyPath = swift_getKeyPath(&unk_10072A868);
  v3 = swift_getKeyPath(&unk_10072A890);
  v18 = v1;
  v4 = v0;
  static Published.subscript.setter(&v18, v4, KeyPath, v3);
  v5 = sub_10004C404();
  if (v5
    && (v6 = v5,
        v7 = objc_msgSend(v5, "navigationBar"),
        v6,
        v8 = objc_msgSend(v7, "_backdropViewLayerGroupName"),
        v7,
        v8))
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0;
  }
  v12 = objc_msgSend(v4, "tabBar");
  if (v11)
  {
    swift_bridgeObjectRetain(v11);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v12, "_setBackdropGroupName:", v13);

  v14 = sub_1004F0F80();
  v16 = v15;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 48))(v9, v11, ObjectType, v16);

  sub_1004F22A0();
}

uint64_t TabBarController.selectedItem.getter()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v2 = (void *)static OS_dispatch_queue.main.getter();
  v3 = &_dispatch_main_q;
  v4 = &_dispatch_main_q;
  v5 = v2;
  v6 = &_dispatch_main_q;
  v7 = &_dispatch_main_q;
  if (v5 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v7 = v5;
  }

  v8 = objc_msgSend(v1, "selectedIndex");
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = &_dispatch_main_q;
  v11 = v9;
  v12 = &_dispatch_main_q;
  v13 = &_dispatch_main_q;
  if (v11 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v13 = v11;
  }

  v14 = OBJC_IVAR___BKTabBarController_items;
  v15 = *(_QWORD *)&v1[OBJC_IVAR___BKTabBarController_items];
  v24 = v8;
  v25 = v15;
  v16 = sub_10004CFD4(&qword_1009E8800);
  v17 = sub_100030B34(&qword_1009E8808, &qword_1009E8800, (uint64_t)&protocol conformance descriptor for [A]);
  Collection.subscript.getter(&v26, &v24, v16, v17);
  result = v26;
  if (!v26)
  {
    v19 = (void *)static OS_dispatch_queue.main.getter();
    v20 = &_dispatch_main_q;
    v21 = v19;
    v22 = &_dispatch_main_q;
    if (v21 == &_dispatch_main_q)
    {
      +[NSThread isMainThread](NSThread, "isMainThread");
      v3 = v21;
    }

    v23 = *(_QWORD *)&v1[v14];
    v24 = 0;
    v25 = v23;
    Collection.subscript.getter(&v26, &v24, v16, v17);
    return v26;
  }
  return result;
}

void sub_100049E28(void *a1, void *a2)
{
  char *v2;
  void *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unsigned int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t Strong;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  id v54;
  id v55;
  char *v56;
  id v57;
  id v58;
  id v59;
  char *v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t aBlock[5];
  uint64_t v74;

  v4 = v2;
  v7 = objc_opt_self(BSUIRootBarWrapperViewController);
  v8 = swift_dynamicCastObjCClass(a2, v7);
  if (!v8)
    return;
  v9 = (void *)v8;
  v71 = a2;
  v10 = objc_msgSend(v9, "contentNavigationController");
  if (!v10)
  {
LABEL_28:

    return;
  }
  v11 = v10;
  v12 = OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController;
  v13 = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController], "containsObject:", v10);
  v14 = objc_msgSend(v11, "viewControllers");
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!((unint64_t)v16 >> 62))
  {
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease(v16);
    v3 = 0;
    if ((v13 & 1) != 0)
    {
      LODWORD(v4) = 0;
      v3 = 0;
      goto LABEL_18;
    }
    goto LABEL_22;
  }
  if (v16 < 0)
    v19 = v16;
  else
    v19 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v16);
  if (!v20)
    goto LABEL_16;
LABEL_5:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_40;
    }
    v17 = *(id *)(v16 + 32);
  }
  v3 = v17;
  swift_bridgeObjectRelease(v16);
  v18 = objc_opt_self(BSUIPlaceholderViewController);
  if (!swift_dynamicCastObjCClass(v3, v18))
  {
    LODWORD(v4) = 1;
    goto LABEL_19;
  }
  if ((v13 & 1) != 0)
  {
    LODWORD(v4) = 0;
LABEL_18:
    v13 = 1;
LABEL_19:
    if (qword_1009CE750 == -1)
    {
LABEL_20:
      v21 = type metadata accessor for Logger(0);
      sub_100048F64(v21, (uint64_t)qword_1009E8770);
      v22 = a1;
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc(34, -1);
        v68 = v3;
        v26 = (_QWORD *)swift_slowAlloc(8, -1);
        v67 = swift_slowAlloc(32, -1);
        aBlock[0] = v67;
        *(_DWORD *)v25 = 136315906;
        v72 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock, v25 + 4, v25 + 12);
        *(_WORD *)(v25 + 12) = 2114;
        v72 = (uint64_t)v22;
        v27 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock, v25 + 14, v25 + 22);
        *v26 = v22;

        *(_WORD *)(v25 + 22) = 1024;
        LODWORD(v72) = v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, (char *)&v72 + 4, v25 + 24, v25 + 28);
        *(_WORD *)(v25 + 28) = 1024;
        LODWORD(v72) = (_DWORD)v4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, (char *)&v72 + 4, v25 + 30, v25 + 34);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Skipping creating content VC for %{public}@. isCreatingVC: %{BOOL}d, hasValidVC: %{BOOL}d", (uint8_t *)v25, 0x22u);
        v28 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v26, 1, v28);
        swift_slowDealloc(v26, -1, -1);
        swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v25, -1, -1);

        return;
      }

      goto LABEL_28;
    }
LABEL_40:
    swift_once(&qword_1009CE750, sub_10006BB90);
    goto LABEL_20;
  }
LABEL_22:
  v70 = v11;
  if (qword_1009CE750 != -1)
    swift_once(&qword_1009CE750, sub_10006BB90);
  v29 = type metadata accessor for Logger(0);
  sub_100048F64(v29, (uint64_t)qword_1009E8770);
  v30 = v3;
  v31 = a1;
  v32 = v30;
  v33 = v31;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter();
  v69 = v32;
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc(32, -1);
    v65 = (_QWORD *)swift_slowAlloc(16, -1);
    v66 = swift_slowAlloc(32, -1);
    aBlock[0] = v66;
    *(_DWORD *)v36 = 136315650;
    v72 = sub_100040F58(0xD000000000000024, 0x80000001007CFA90, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock, v36 + 4, v36 + 12);
    *(_WORD *)(v36 + 12) = 2114;
    if (v3)
    {
      v72 = (uint64_t)v32;
      v37 = v32;
    }
    else
    {
      v72 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock, v36 + 14, v36 + 22);
    *v65 = v3;

    *(_WORD *)(v36 + 22) = 2114;
    v72 = (uint64_t)v33;
    v38 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock, v36 + 24, v36 + 32);
    v65[1] = v33;

    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: Creating content VC to replace %{public}@ for %{public}@", (uint8_t *)v36, 0x20u);
    v39 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v65, 2, v39);
    swift_slowDealloc(v65, -1, -1);
    swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

  }
  objc_msgSend(*(id *)&v4[v12], "addObject:", v70);
  v40 = (_QWORD *)swift_allocObject(&unk_10090C488, 48, 7);
  v40[2] = v33;
  v40[3] = v4;
  v40[4] = v70;
  v40[5] = v9;
  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR___BKTabBarController_viewControllerProvider]);
  if (Strong)
  {
    v42 = (void *)Strong;
    v43 = swift_allocObject(&unk_10090C4B0, 32, 7);
    *(_QWORD *)(v43 + 16) = sub_10006ADD0;
    *(_QWORD *)(v43 + 24) = v40;
    aBlock[4] = (uint64_t)sub_10006B530;
    v74 = v43;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10000B65C;
    aBlock[3] = (uint64_t)&unk_10090C4C8;
    v44 = _Block_copy(aBlock);
    v45 = v74;
    v46 = v71;
    v47 = v33;
    v48 = v4;
    v49 = v70;
    v50 = v46;
    v51 = v47;
    v52 = v48;
    v53 = v49;
    swift_retain(v40);
    swift_release(v45);
    objc_msgSend(v42, "viewControllerForItem:completion:", v51, v44);
    _Block_release(v44);

    swift_release(v40);
    swift_unknownObjectRelease(v42);
  }
  else
  {
    v54 = v71;
    v55 = v33;
    v56 = v4;
    v57 = v70;
    v58 = v54;
    v59 = v55;
    v60 = v56;
    v61 = v57;
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "viewControllerProvider is missing in TabBarController", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
    }

    sub_10002373C(0, v59, v60, v61, v9);
    swift_release(v40);
  }
}

uint64_t sub_10004A7B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RootBarItem.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  _BYTE *v34;
  _BYTE v35[24];
  uint64_t v36;

  sub_10004AA7C(a1, (uint64_t)v35);
  if (!v36)
  {
    sub_10004A7B8((uint64_t)v35);
    goto LABEL_11;
  }
  v2 = type metadata accessor for RootBarItem();
  if ((swift_dynamicCast(&v34, v35, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
  {
    v3 = v34;
    v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_identifier);
    v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_identifier + 8);
    v6 = *(_QWORD *)&v34[OBJC_IVAR___BKRootBarItem_identifier];
    v7 = *(_QWORD *)&v34[OBJC_IVAR___BKRootBarItem_identifier + 8];
    v8 = v4 == v6 && v5 == v7;
    if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0) & 1) == 0
      || *(unsigned __int8 *)(v1 + OBJC_IVAR___BKRootBarItem_isPlaceholder) != v3[OBJC_IVAR___BKRootBarItem_isPlaceholder])
    {
      goto LABEL_9;
    }
    v11 = (_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_url);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_url + 8);
    v13 = &v3[OBJC_IVAR___BKRootBarItem_url];
    v14 = *(_QWORD *)&v3[OBJC_IVAR___BKRootBarItem_url + 8];
    if (v12)
    {
      if (!v14)
        goto LABEL_9;
      v15 = *v11 == *v13 && v12 == v14;
      if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, *v13, v14, 0) & 1) == 0)
        goto LABEL_9;
    }
    else if (v14)
    {
      goto LABEL_9;
    }
    v16 = (_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_titleOverride);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
    v18 = &v3[OBJC_IVAR___BKRootBarItem_titleOverride];
    v19 = *(_QWORD *)&v3[OBJC_IVAR___BKRootBarItem_titleOverride + 8];
    if (v17)
    {
      if (!v19
        || (*v16 != *v18 || v17 != v19)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, *v18, v19, 0) & 1) == 0)
      {
        goto LABEL_9;
      }
    }
    else if (v19)
    {
      goto LABEL_9;
    }
    v20 = (_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_iconNameOverride);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_iconNameOverride + 8);
    v22 = &v3[OBJC_IVAR___BKRootBarItem_iconNameOverride];
    v23 = *(_QWORD *)&v3[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
    if (v21)
    {
      if (!v23
        || (*v20 != *v22 || v21 != v23)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, *v22, v23, 0) & 1) == 0)
      {
        goto LABEL_9;
      }
    }
    else if (v23)
    {
      goto LABEL_9;
    }
    v24 = (_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_selectedIconNameOverride);
    v25 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_selectedIconNameOverride + 8);
    v26 = &v3[OBJC_IVAR___BKRootBarItem_selectedIconNameOverride];
    v27 = *(_QWORD *)&v3[OBJC_IVAR___BKRootBarItem_selectedIconNameOverride + 8];
    if (v25)
    {
      if (!v27
        || (*v24 != *v26 || v25 != v27)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(*v24, v25, *v26, v27, 0) & 1) == 0)
      {
        goto LABEL_9;
      }
    }
    else if (v27)
    {
      goto LABEL_9;
    }
    v28 = (_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_countryCode);
    v29 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_countryCode + 8);
    v30 = &v3[OBJC_IVAR___BKRootBarItem_countryCode];
    v31 = *(_QWORD *)&v3[OBJC_IVAR___BKRootBarItem_countryCode + 8];
    if (v29)
    {
      if (v31
        && (*v28 == *v30 && v29 == v31
         || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, *v30, v31, 0) & 1) != 0))
      {
        goto LABEL_50;
      }
    }
    else if (!v31)
    {
LABEL_50:
      v32 = *(_BYTE *)(v1 + OBJC_IVAR___BKRootBarItem_editNameOnSelect);
      v33 = v3[OBJC_IVAR___BKRootBarItem_editNameOnSelect];

      v9 = v32 ^ v33 ^ 1;
      return v9 & 1;
    }
LABEL_9:

  }
LABEL_11:
  v9 = 0;
  return v9 & 1;
}

uint64_t type metadata accessor for RootBarItem()
{
  return objc_opt_self(BKRootBarItem);
}

uint64_t sub_10004AA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004AAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[3];
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  sub_10004AA7C(a2, (uint64_t)aBlock);
  v10 = v24;
  if (v24)
  {
    v11 = sub_10003F198(aBlock, (uint64_t)v24);
    v12 = *(v10 - 1);
    __chkstk_darwin(v11);
    v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v10);
    (*(void (**)(char *, _QWORD *))(v12 + 8))(v14, v10);
    _s5Books15CurrentPageViewVwxx_0(aBlock);
  }
  else
  {
    v15 = 0;
  }
  v25 = a4;
  v26 = a5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1005FF1EC;
  v24 = &unk_1009177B8;
  v16 = _Block_copy(aBlock);
  v17 = v26;
  swift_retain(a5);
  swift_release(v17);
  v18 = objc_msgSend(v5, "addObserverForName:object:queue:usingBlock:", a1, v15, a3, v16);
  _Block_release(v16);
  swift_unknownObjectRelease(v15);
  v19 = swift_allocObject(&unk_1009177F0, 32, 7);
  *(_QWORD *)(v19 + 16) = v5;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = v5;
  return AnyCancellable.init(_:)(sub_1005FF2BC, v19);
}

void sub_10004AC88(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t Strong;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[24];
  _BYTE v12[48];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (_BYTE *)Strong;
    if (*(_QWORD *)(a1 + 16))
    {
      sub_100316B8C(a1 + 32, (uint64_t)v12);
      v8 = sub_100316BC8((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
      PropertyValue.rawValue.getter(v10, v8);
      sub_100316BC8((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
        v7[*a3] = v9 > 0;
    }

  }
}

uint64_t sub_10004AD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t result;

  v6 = a2;
  if (a6 == 1)
  {
    a5 = a2;
    v6 = a3;
  }
  else
  {
    if (a6 != 2)
      return result;
    swift_bridgeObjectRetain(a4);
  }
  swift_bridgeObjectRetain(a5);
  return swift_bridgeObjectRetain(v6);
}

uint64_t sub_10004ADC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 1)
  {
    a4 = a2;
  }
  else
  {
    if (a6 != 2)
      return result;
    swift_bridgeObjectRelease(a5);
    a3 = a2;
  }
  swift_bridgeObjectRelease(a3);
  return swift_bridgeObjectRelease(a4);
}

void sub_10004B1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004BB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id TabBarController.childForStatusBarHidden.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  v1 = (void *)objc_opt_self(BKAppDelegate);
  v2 = objc_msgSend(v1, "delegate");
  v3 = objc_msgSend(v2, "appLaunchCoordinator");

  LODWORD(v2) = objc_msgSend(v3, "appLaunchCoordinatorIsConditionSatisfied:", 0);
  swift_unknownObjectRelease(v3);
  if ((_DWORD)v2)
  {
    v4 = objc_msgSend(v1, "delegate");
    v5 = objc_msgSend(v4, "sceneManager");

    v6 = objc_msgSend(v5, "mainFlowController");
    v7 = objc_msgSend(v6, "viewControllerForStatusBarHidden");

  }
  else
  {
    v9.receiver = v0;
    v9.super_class = (Class)type metadata accessor for TabBarController(0);
    return objc_msgSendSuper2(&v9, "childViewControllerForStatusBarHidden");
  }
  return v7;
}

void sub_10004C180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_10004C25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10004C36C()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  objc_super v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarCoordinator_activeRootBarKind);
  if ((v1 & 0x8000000000000000) != 0)
  {
    v5.receiver = *(id *)(*(_QWORD *)(v1 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                        + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
    v5.super_class = (Class)type metadata accessor for MainContentViewController();
    return objc_msgSendSuper2(&v5, "contentNavigationController");
  }
  else
  {
    v2 = (id)v1;
    v3 = sub_10004C404();

    return v3;
  }
}

id sub_10004C404()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  uint64_t v21;

  v1 = v0;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v2 = (void *)static OS_dispatch_queue.main.getter();
  v3 = &_dispatch_main_q;
  v4 = &_dispatch_main_q;
  v5 = v2;
  v6 = &_dispatch_main_q;
  if (v5 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v3 = v5;
  }

  v7 = objc_msgSend(v1, "selectedViewController");
  if (v7)
  {
    v8 = v7;
    v9 = objc_opt_self(BSUIRootBarWrapperViewController);
    v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
    if (v10)
    {
      v11 = objc_msgSend(v10, "contentNavigationController");

      return v11;
    }

  }
  v12 = objc_msgSend(v1, "selectedIndex");
  if (v12 != (id)_s5Books17REActionMenuStateC9pageCountSivpfi_0())
  {
    if (qword_1009CE750 != -1)
      swift_once(&qword_1009CE750, sub_10006BB90);
    v13 = type metadata accessor for Logger(0);
    sub_100048F64(v13, (uint64_t)qword_1009E8770);
    v14 = v1;
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(22, -1);
      v18 = swift_slowAlloc(32, -1);
      v21 = v18;
      *(_DWORD *)v17 = 136446466;
      v20 = (id)sub_100040F58(0xD00000000000001CLL, 0x80000001007B3F90, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v17 + 4, v17 + 12);
      *(_WORD *)(v17 + 12) = 2048;
      v20 = objc_msgSend(v14, "selectedIndex");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v17 + 14, v17 + 22);

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s RootBarItem at %ld doesn't have a navigation controller", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

    }
  }
  return 0;
}

uint64_t sub_10004C6D8(const void *a1, uint64_t *a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  swift_beginAccess(a1, v10, 32, 0);
  v5 = objc_getAssociatedObject(v2, a1);
  swift_endAccess(v10);
  if (v5)
  {
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_10004C7B4((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v6 = sub_10004CFD4(a2);
    if (swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, v6, 6))
      return v8;
    else
      return 0;
  }
  else
  {
    sub_10004A7B8((uint64_t)v10);
    return 0;
  }
}

uint64_t sub_10004C7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t BKMainFlowController.rootBarCoordinator.getter()
{
  return sub_10004C6D8(&unk_100A1F103, &qword_1009F28D8);
}

void sub_10004C810(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  _BOOL8 v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = *(void **)(a1 + 32);
  v6 = !v5 || !objc_msgSend(v5, "containsIndex:", a3) || *(_QWORD *)(a1 + 40) == a3;
  kdebug_trace(725353724, 0, 0, 0, 0);
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "block"));
  v8 = (void *)v7;
  if (v7)
    (*(void (**)(uint64_t, _BOOL8, _QWORD))(v7 + 16))(v7, v6, 0);

  kdebug_trace(725353724, 1, 0, 0, 0);
}

uint64_t sub_10004C8D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10004C8E4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v7;
  char v8;
  id v9;
  double v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  double v16;
  double v17;
  id v18;
  char v19;
  uint64_t v20;
  double v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  double v31;
  id v32;
  __int128 v33;
  __int128 v34;

  if (!*(_QWORD *)(a1 + 16))
    return;
  v7 = sub_10004CE80(0xD000000000000013, 0x80000001007C8DC0);
  if ((v8 & 1) == 0)
    return;
  sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v33);
  if ((swift_dynamicCast(&v31, &v33, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return;
  v10 = v31;
  v9 = v32;
  v11 = *(void **)(a2 + 16);
  if (!v11)
  {
LABEL_16:
    v33 = 0u;
    v34 = 0u;
    sub_100010960((uint64_t)&v33, (uint64_t *)&unk_1009D04E0);
    v33 = 0u;
    v34 = 0u;
    v20 = 2000;
LABEL_17:
    sub_100010960((uint64_t)&v33, (uint64_t *)&unk_1009D04E0);
LABEL_18:
    v21 = 31536000.0;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain(a2);
  v3 = 0;
  while (1)
  {
    v12 = *(_QWORD *)(a2 + 8 * v3 + 32);
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_7;
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 8 * v3 + 32));
    v13 = sub_10004CE80(0x6D614E746E657665, 0xE900000000000065);
    if ((v14 & 1) != 0)
    {
      sub_10004CD0C(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v33);
      if ((swift_dynamicCast(&v31, &v33, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        break;
    }
    swift_bridgeObjectRelease(v12);
LABEL_7:
    if (v11 == (void *)++v3)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_16;
    }
  }
  v15 = v32;
  if (*(_QWORD *)&v31 == *(_QWORD *)&v10 && v32 == v9)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v9);
    goto LABEL_27;
  }
  v16 = v10;
  v17 = v10;
  v18 = v9;
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v31, v32, *(_QWORD *)&v17, v9, 0);
  swift_bridgeObjectRelease(v15);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease(v12);
    v9 = v18;
    v10 = v16;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease(a2);
  v9 = v18;
  v10 = v16;
LABEL_27:
  v3 = (unint64_t)&type metadata for Any;
  if (!*(_QWORD *)(v12 + 16))
  {
    v33 = 0u;
    v34 = 0u;
LABEL_35:
    sub_100010960((uint64_t)&v33, (uint64_t *)&unk_1009D04E0);
    goto LABEL_36;
  }
  swift_bridgeObjectRetain(v12);
  v27 = sub_10004CE80(0x746E756F4378616DLL, 0xE800000000000000);
  if ((v28 & 1) != 0)
  {
    sub_10004CD0C(*(_QWORD *)(v12 + 56) + 32 * v27, (uint64_t)&v33);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  swift_bridgeObjectRelease(v12);
  if (!*((_QWORD *)&v34 + 1))
    goto LABEL_35;
  if (!swift_dynamicCast(&v31, &v33, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
  {
LABEL_36:
    v20 = 2000;
    goto LABEL_37;
  }
  v20 = *(_QWORD *)&v31;
LABEL_37:
  if (*(_QWORD *)(v12 + 16) && (v29 = sub_10004CE80(0x65674178616DLL, 0xE600000000000000), (v30 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v12 + 56) + 32 * v29, (uint64_t)&v33);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  swift_bridgeObjectRelease(v12);
  if (!*((_QWORD *)&v34 + 1))
    goto LABEL_17;
  if ((swift_dynamicCast(&v31, &v33, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) == 0)
    goto LABEL_18;
  v21 = v31;
LABEL_19:
  v22 = *(_QWORD *)&v21;
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  v22 = 0xC3E0000000000001;
  if (v21 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v22 = 0x43E0000000000000;
  if (v21 < 9.22337204e18)
  {
    v23 = (uint64_t)v21;
    v24 = objc_allocWithZone((Class)type metadata accessor for CollectionPropertyConfiguration(0));
    v25 = (void *)CollectionPropertyConfiguration.init(eventName:identifier:ageToExpire:countLimit:shouldBeCached:shouldBeSynced:)(*(_QWORD *)&v10, v9, 0, 0xE000000000000000, v23, v20, 1, 1);
    swift_beginAccess(a3, &v33, 33, 0);
    v9 = v25;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
    v3 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v3 < v22 >> 1)
      goto LABEL_23;
    goto LABEL_47;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v3 + 1, 1);
LABEL_23:
  v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v9);
  specialized Array._endMutation()(v26);
  swift_endAccess(&v33);

}

uint64_t sub_10004CD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_10004CD48(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = _swiftEmptyDictionarySingleton;
LABEL_9:
    v21 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v21);
    return (unint64_t)v9;
  }
  sub_10004CFD4(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_9;
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10000B5E4(v12, (uint64_t)&v22, a3);
    v13 = v22;
    v14 = v23;
    result = sub_10004CE80(v22, v23);
    if ((v16 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = (uint64_t *)(v9[6] + 16 * result);
    *v17 = v13;
    v17[1] = v14;
    result = a4(&v24, v9[7] + 32 * result);
    v18 = v9[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_12;
    v9[2] = v20;
    v12 += 48;
    if (!--v10)
    {
      swift_release(v9);
      v21 = a1;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10004CE80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10004CEE4(a1, a2, v5);
}

unint64_t sub_10004CEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

_OWORD *sub_10004CFC4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10004CFD4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for TabBarController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E88E8;
  if (!qword_1009E88E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TabBarController);
  return result;
}

uint64_t sub_10004DCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_10004DCF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10004DCFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10004DD08(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(id, void *);
  void *v6;
  void (**v7)(id, void *);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bk_window"));

  if (!v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
    objc_msgSend(v4, "setupPlaceholderWindow");

  }
  v5 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v5)
  {
    v7 = v5;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
    v7[2](v7, v6);

    v5 = v7;
  }

}

void sub_10004DDB0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

uint64_t sub_10004DE04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004DE24()
{
  uint64_t v0;

  return sub_1005BAD2C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10004DE2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t getEnumTagSinglePayload for PaletteContainerView.SeparatorConfiguration.Position(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_10004DED0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10004DF0C + 4 * byte_1007187CA[*v0]))();
}

void sub_10004DF0C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001007B1E00;
}

void sub_10004DF2C(_QWORD *a1@<X8>)
{
  *a1 = 0x797469746E656469;
  a1[1] = 0xE800000000000000;
}

void sub_10004DF48(_QWORD *a1@<X8>)
{
  *a1 = 1768055156;
  a1[1] = 0xE400000000000000;
}

uint64_t getEnumTagSinglePayload for AMDCollectionService.Errors(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

BOOL sub_10004DFF4(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

BOOL sub_10004E024(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_10004E038(uint64_t a1)
{
  uint64_t v1;

  sub_1000274A4(a1, v1);
}

uint64_t _s5Books12YearInReviewO19RemoteConfigurationV9DateRangeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10004E08C + 4 * byte_10072C4CB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10004E0C0 + 4 * byte_10072C4C6[v4]))();
}

uint64_t sub_10004E0C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004E0C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004E0D0);
  return result;
}

uint64_t sub_10004E0DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004E0E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10004E0E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004E0F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for LibraryCollectionsService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E2780;
  if (!qword_1009E2780)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryCollectionsService);
  return result;
}

uint64_t sub_10004E138()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65746144646E65;
  if (*v0 != 1)
    v1 = 0x4F65676E61526E69;
  if (*v0)
    return v1;
  else
    return 0x7461447472617473;
}

uint64_t sub_10004E1A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6163696669746F6ELL;
  if (*v0 != 1)
    v1 = 0x736B636950706F74;
  if (*v0)
    return v1;
  else
    return 1918985593;
}

void sub_10004E208(uint64_t a1)
{

}

void sub_10004E210(uint64_t a1)
{

}

void sub_10004E218(uint64_t a1)
{

}

void sub_10004E220(uint64_t a1)
{

}

void sub_10004E228(uint64_t a1)
{

}

void sub_10004E230(uint64_t a1)
{

}

void sub_10004E238(uint64_t a1)
{

}

void sub_10004E240(uint64_t a1)
{

}

void sub_10004E248(uint64_t a1)
{

}

void sub_10004E250(uint64_t a1)
{

}

void sub_10004E258(uint64_t a1)
{

}

void sub_10004E260(uint64_t a1)
{

}

void sub_10004E268(uint64_t a1)
{

}

void sub_10004E270(uint64_t a1)
{

}

void sub_10004E278(uint64_t a1)
{

}

void sub_10004E280(uint64_t a1)
{

}

void sub_10004E288(uint64_t a1)
{

}

void sub_10004E290(uint64_t a1)
{

}

void sub_10004E298(uint64_t a1)
{

}

void sub_10004E2A0(uint64_t a1)
{

}

void sub_10004E2A8(uint64_t a1)
{

}

void sub_10004E2B0(uint64_t a1)
{

}

void sub_10004E2B8(uint64_t a1)
{

}

void sub_10004E2C0(uint64_t a1)
{

}

void sub_10004E2C8(uint64_t a1)
{

}

void sub_10004E2D0(uint64_t a1)
{

}

void sub_10004E2D8(uint64_t a1)
{

}

void sub_10004E2E0(uint64_t a1)
{

}

void sub_10004E2E8(uint64_t a1)
{

}

void sub_10004E2F0(uint64_t a1)
{

}

void sub_10004E2F8(uint64_t a1)
{

}

void sub_10004E300(uint64_t a1)
{

}

void sub_10004E308(uint64_t a1)
{

}

uint64_t sub_10004E310(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E320(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E330(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E340(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E350(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E360(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E370(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E380(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E390(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E3A0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E3B0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E3C0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E3D0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

id sub_10004E3E0(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_10004E408(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E418(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E428(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E438(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E448(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E458(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E468(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E478(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E488(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E498(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E4A8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E4B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E4C8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E4D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

id sub_10004E4E8(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_10004E510(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E520(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E530(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E540(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10004E558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[2];
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v3 = *(_QWORD *)(v1 + 48);
  v92 = v3;
  v93 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 88);
  v91 = v4;
  v94 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  v7 = *(_QWORD *)(v1 + 120);
  v8 = *(_QWORD *)(v1 + 128);
  v9 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(a1 + 48);
  v10 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 120) = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)a1;
  v12 = *(_QWORD *)(v1 + 56);
  v13 = *(_QWORD *)(v1 + 64);
  *(_OWORD *)(v1 + 56) = v11;
  v14 = *(_QWORD *)(v1 + 72);
  v15 = *(_QWORD *)(v1 + 80);
  v71 = *(unsigned __int8 *)(v1 + 136);
  *(_BYTE *)(v1 + 136) = *(_BYTE *)(a1 + 96);
  *(_OWORD *)(v1 + 72) = v9;
  sub_10004E9D0(v93, v3, v12, v13, v14, v15, v4, v94, v5, v6, v7, v8);
  v77 = (_QWORD *)a1;
  sub_10004E97C((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
  v85 = v8;
  v86 = v7;
  v64 = v8;
  v84 = v6;
  v90 = v5;
  v16 = v12;
  v17 = v12;
  v18 = v13;
  v19 = v13;
  v20 = v14;
  v21 = v15;
  sub_10006BAF8(v93, v92, v17, v19, v14, v15, v91, v94, v5, v6, v7, v64);
  v22 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 48);
  v25 = *(_QWORD *)(v1 + 56);
  v24 = *(_QWORD *)(v1 + 64);
  v27 = *(_QWORD *)(v1 + 72);
  v26 = *(_QWORD *)(v1 + 80);
  v28 = *(_QWORD *)(v1 + 88);
  v29 = *(_QWORD *)(v1 + 96);
  v30 = *(_QWORD *)(v1 + 104);
  v31 = *(_QWORD *)(v1 + 112);
  v32 = *(_QWORD *)(v1 + 120);
  v33 = *(_QWORD *)(v1 + 128);
  v34 = *(unsigned __int8 *)(v1 + 136);
  v88 = v16;
  v89 = v20;
  v87 = v18;
  if (!v92)
  {
    if (!v23)
    {
      sub_10004E9D0(v22, 0, v25, v24, v27, v26, v28, v29, v30, v31, v32, v33);
      v61 = v71 == v34;
      v50 = v6;
      v48 = v85;
      v49 = v7;
      if (v61)
        goto LABEL_9;
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (!v23)
  {
LABEL_7:
    v95 = v93;
    v96 = v92;
    v97 = v16;
    v98 = v18;
    v99 = v20;
    v100 = v21;
    v76 = v21;
    v101 = v91;
    v102 = v94;
    v50 = v6;
    v48 = v85;
    v103 = v90;
    v104 = v6;
    v105 = v7;
    v106 = v85;
    v107 = v22;
    v108 = v23;
    v109 = v25;
    v110 = v24;
    v81 = v28;
    v83 = v27;
    v111 = v27;
    v112 = v26;
    v113 = v28;
    v114 = v29;
    v115 = v30;
    v116 = v31;
    v117 = v32;
    v118 = v33;
    v51 = v16;
    v52 = v18;
    v79 = v26;
    v53 = v21;
    v70 = v24;
    v72 = v29;
    v74 = v25;
    v54 = v22;
    v55 = v23;
    v56 = v30;
    v57 = v31;
    v58 = v32;
    sub_10004E9D0(v93, v92, v51, v52, v20, v53, v91, v94, v90, v6, v86, v85);
    v63 = v57;
    v59 = v55;
    v21 = v76;
    v49 = v86;
    sub_10004E9D0(v54, v59, v74, v70, v83, v79, v81, v72, v56, v63, v58, v33);
    sub_1006535B4((uint64_t)&v95);
LABEL_8:
    sub_10001ACD4();
    goto LABEL_9;
  }
  v65 = *(unsigned __int8 *)(v1 + 136);
  v119[0] = v93;
  v119[1] = v92;
  v120 = v16 & 1;
  v121 = v18;
  v122 = v20;
  v35 = v20;
  v123 = v21;
  v124 = v91;
  v75 = v21;
  v125 = v94;
  v126 = v5;
  v127 = v6;
  v128 = v7;
  v129 = v85;
  v95 = v22;
  v96 = v23;
  LOBYTE(v97) = v25 & 1;
  v98 = v24;
  v99 = v27;
  v80 = v28;
  v82 = v27;
  v100 = v26;
  v101 = v28;
  v102 = v29;
  v103 = v30;
  v104 = v31;
  v105 = v32;
  v106 = v33;
  v36 = v16;
  v37 = v18;
  v78 = v26;
  v38 = v21;
  v39 = v29;
  v40 = v24;
  v41 = v25;
  v73 = v25;
  v42 = v22;
  v67 = v22;
  v68 = v23;
  v43 = v23;
  v44 = v30;
  v66 = v30;
  v45 = v31;
  v46 = v32;
  sub_10004E9D0(v93, v92, v36, v37, v35, v38, v91, v94, v90, v84, v7, v85);
  v62 = v44;
  v47 = v39;
  sub_10004E9D0(v42, v43, v41, v40, v82, v78, v80, v39, v62, v45, v46, v33);
  v69 = sub_1001FAC00(v119, &v95);
  v48 = v85;
  v49 = v7;
  v50 = v84;
  v21 = v75;
  sub_10006BAF8(v93, v92, v88, v87, v89, v75, v91, v94, v90, v84, v7, v85);
  sub_10006BAF8(v67, v68, v73, v40, v82, v78, v80, v47, v66, v45, v46, v33);
  if ((v69 & 1) == 0 || ((v71 ^ v65) & 1) != 0)
    goto LABEL_8;
LABEL_9:
  sub_10004E97C(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006BAF8);
  return sub_10006BAF8(v93, v92, v88, v87, v89, v21, v91, v94, v90, v50, v49, v48);
}

_QWORD *sub_10004E97C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

uint64_t sub_10004E9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a2);
    swift_retain(a4);
    swift_retain(a5);
    swift_retain(a6);
    swift_retain(a7);
    swift_retain(a8);
    swift_retain(a9);
    return swift_retain(a10);
  }
  return result;
}

uint64_t sub_10004EA68()
{
  unsigned __int8 *v0;

  return sub_10004EA70(*v0);
}

uint64_t sub_10004EA70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10004EAAC
                                                            + 4 * asc_10072DF00[a1]))(0x6E656D7461657274, 0xEB00000000444974);
}

uint64_t sub_10004EAAC()
{
  return 0x444965726F7473;
}

uint64_t sub_10004EAC4()
{
  return 0x707954616964656DLL;
}

unint64_t sub_10004EAE0()
{
  return 0xD000000000000012;
}

void sub_10004EB88(int64_t *a1)
{
  char *v1;

  sub_100025B80(a1, v1);
}

void sub_10004EB90(uint64_t *a1)
{
  uint64_t v1;

  sub_10002D9BC(a1, v1);
}

id sub_10004EB98@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

ValueMetadata *type metadata accessor for MenuController.UserCollection()
{
  return &type metadata for MenuController.UserCollection;
}

uint64_t type metadata accessor for AsyncResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncResolver);
}

ValueMetadata *_s13ConfigurationV16CollectionSourceOMa()
{
  return &_s13ConfigurationV16CollectionSourceON;
}

ValueMetadata *_s13ConfigurationV16CollectionScorerOMa()
{
  return &_s13ConfigurationV16CollectionScorerON;
}

const char *sub_10004EBF4()
{
  return "notFinished";
}

const char *sub_10004EC00()
{
  return "isFinished";
}

const char *sub_10004EC0C()
{
  return "dateFinished";
}

const char *sub_10004EC18()
{
  return "assetID";
}

void type metadata accessor for BCDefaultCollectionID(uint64_t a1)
{
  sub_10004EC48(a1, &qword_1009D0130, (uint64_t)&unk_1008F14C8);
}

void sub_10004EC48(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SuggestionsConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10004ECE4 + 4 * byte_10072DF2A[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10004ED18 + 4 * byte_10072DF25[v4]))();
}

uint64_t sub_10004ED18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004ED20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004ED28);
  return result;
}

uint64_t sub_10004ED34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004ED3CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_10004ED40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004ED48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for BookThemeSetting(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_10004EE14(uint64_t a1)
{
  uint64_t v1;

  return sub_100016120(a1, v1);
}

uint64_t sub_10004EE1C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BKRootBarItem_identifier);
  v4 = v3[1];
  v5 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarItem_identifier);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR___BKRootBarItem_identifier + 8);
  if (*v3 == v5 && v4 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(*v3, v4, v5, v6, 0);
}

void sub_10004EE5C(uint64_t a1)
{
  uint64_t v1;

  sub_10004F004(a1, v1);
}

ValueMetadata *type metadata accessor for MenuController.RecentlyOpenedAsset()
{
  return &type metadata for MenuController.RecentlyOpenedAsset;
}

uint64_t sub_10004EE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100542178);
}

uint64_t sub_10004EE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100542138);
}

ValueMetadata *_s13ConfigurationV25GenreRecommendationSourceOMa()
{
  return &_s13ConfigurationV25GenreRecommendationSourceON;
}

ValueMetadata *type metadata accessor for LibraryCollectionsServiceState()
{
  return &type metadata for LibraryCollectionsServiceState;
}

ValueMetadata *type metadata accessor for ServiceSetupState()
{
  return &type metadata for ServiceSetupState;
}

ValueMetadata *type metadata accessor for RootBarRootViewControllerEvent()
{
  return &type metadata for RootBarRootViewControllerEvent;
}

void sub_10004F004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10004F638();

  }
}

void sub_10004F054(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  void *Strong;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = &v2[OBJC_IVAR___BKMenuController_keyWindow];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR___BKMenuController_keyWindow]);
  v6 = Strong;
  if (a1)
  {
    if (Strong)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009D2490, UIWindow_ptr);
      v7 = a1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        goto LABEL_13;
    }
  }
  else
  {
    if (!Strong)
      goto LABEL_13;

  }
  if (qword_1009CE7E8 != -1)
    swift_once(&qword_1009CE7E8, sub_1005254D0);
  v9 = type metadata accessor for Logger(0);
  sub_100048F64(v9, (uint64_t)qword_1009E9EB0);
  v10 = v2;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v20 = v14;
    *(_DWORD *)v13 = 136315138;
    v19 = swift_unknownObjectWeakLoadStrong(v4);
    v15 = sub_10004CFD4((uint64_t *)&unk_1009EA010);
    v16 = String.init<A>(describing:)(&v19, v15);
    v18 = v17;
    v19 = sub_100040F58(v16, v17, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v18);

    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

  }
  sub_100527D0C();
LABEL_13:
  sub_10004F638();
}

void sub_10004F290(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  unsigned __int8 *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = OBJC_IVAR___BKMenuController_bookshelfType;
  v4 = v1[OBJC_IVAR___BKMenuController_bookshelfType];
  if (a1 == 2)
  {
    if (v4 == 2)
      return;
  }
  else if (v4 != 2 && ((v4 ^ a1) & 1) == 0)
  {
    return;
  }
  if (qword_1009CE7E8 != -1)
    swift_once(&qword_1009CE7E8, sub_1005254D0);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009E9EB0);
  v7 = v1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_DWORD *)v10 = 136315138;
    v18 = v11;
    LOBYTE(v17) = v2[v3];
    v12 = sub_10004CFD4(&qword_1009EA028);
    v13 = String.init<A>(describing:)(&v17, v12);
    v15 = v14;
    v17 = sub_100040F58(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);

    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {

  }
  v16 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
  objc_msgSend(v16, "setNeedsRebuild");

}

void sub_10004F5B4(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(void);
  void (**v5)(void);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootBarCoordinator"));

  if (v2)
  {
    v5 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootBarCoordinator"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "rootViewController"));
    objc_msgSend(v3, "im_finishOngoingModalTransitionAnimations:", *(_QWORD *)(a1 + 40));

LABEL_5:
    v4 = v5;
    goto LABEL_6;
  }
  v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v5 = v4;
    v4[2]();
    goto LABEL_5;
  }
LABEL_6:

}

void sub_10004F638()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  id v9;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKMenuController_sceneManager), "primarySceneController");
  v2 = objc_msgSend(v1, "rootBarCoordinator");

  if (!v2)
    goto LABEL_8;
  v3 = objc_msgSend(v2, "selectedNavigationController");
  swift_unknownObjectRelease(v2);
  if (!v3)
    goto LABEL_8;
  v9 = objc_msgSend(v3, "visibleViewController");

  if (!v9)
    goto LABEL_8;
  v4 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
  v5 = (void *)swift_dynamicCastObjCClass(v9, v4);
  if (!v5)
  {

LABEL_8:
    v8 = *(_BYTE *)(v0 + OBJC_IVAR___BKMenuController_bookshelfType);
    *(_BYTE *)(v0 + OBJC_IVAR___BKMenuController_bookshelfType) = 2;
    sub_10004F290(v8);
    return;
  }
  v6 = objc_msgSend(v5, "isSeriesCollection");
  v7 = *(_BYTE *)(v0 + OBJC_IVAR___BKMenuController_bookshelfType);
  if (v6)
    *(_BYTE *)(v0 + OBJC_IVAR___BKMenuController_bookshelfType) = 1;
  else
    *(_BYTE *)(v0 + OBJC_IVAR___BKMenuController_bookshelfType) = 0;
  sub_10004F290(v7);

}

uint64_t BKSceneController.rootBarCoordinator.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  swift_beginAccess(&unk_100A1F099, v6, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_100A1F099);
  swift_endAccess(v6);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10004C7B4((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    v2 = sub_10004CFD4(&qword_1009F28D8);
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, v2, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10004A7B8((uint64_t)v6);
    return 0;
  }
}

uint64_t sub_100050860(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  NSString v6;
  id v7;
  uint64_t v8;
  _OWORD v10[2];
  _OWORD v11[2];

  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(a4, "objectForKey:", v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)(v7);
    swift_unknownObjectRelease(v7);
    sub_10004CFC4(v10, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
  if (swift_dynamicCast(v10, v11, v8, &type metadata for Bool, 6) && LOBYTE(v10[0]) != 2)
    a3 = v10[0] & 1;
  return a3 & 1;
}

void sub_100051478(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "setTabsAreLoaded:", 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "launchCoordinator"));
    objc_msgSend(v2, "signalConditionSatisfied:", 12);

  }
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id))v3 + 2))(v3);

}

void sub_1000517EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100051AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100051AE0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  _QWORD v6[5];
  uint8_t buf[16];

  v2 = BCCurrentBookLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Finished setting up continue reading books provider. Issuing a one time startup block to look at seeding and purging.", buf, 2u);
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "appLaunchCoordinator"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100129F64;
  v6[3] = &unk_1008E7458;
  v6[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v5, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("ContinueReadingProvider BookReadingTimeTracker Init"), v6);

}

void sub_100053014(uint64_t a1)
{
  id v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  id v21;
  id v22;

  v2 = objc_alloc((Class)NSFetchedResultsController);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = (id *)(a1 + 32);
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
  v6 = objc_msgSend(v2, "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:", v4, v5, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "setFetchedResultsController:", v6);

  v7 = *(void **)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fetchedResultsController"));
  objc_msgSend(v8, "setDelegate:", v7);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fetchedResultsController"));
  v22 = 0;
  LOBYTE(v5) = objc_msgSend(v9, "performFetch:", &v22);
  v10 = v22;

  if ((v5 & 1) != 0)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fetchedResultsController"));
    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "fetchedObjects"));

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetsFromFetchRequestResults:", v12));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_assetDictionariesForDynamicArrayWithFetchRequest:isInitialFetch:matchedAssets:", *(_QWORD *)(a1 + 40), 1, v13));
    v15 = sub_100053348();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
      sub_1006A0B6C((uint64_t)v3, v14);

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "dynamicArray"));
    objc_msgSend(v17, "updateArray:", v14);

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "delegate"));
    v19 = objc_opt_respondsToSelector(v18, "libraryProvider:contentDidLoad:");

    if ((v19 & 1) != 0)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "delegate"));
      objc_msgSend(v20, "libraryProvider:contentDidLoad:", *v3, v13);

    }
  }
  else
  {
    v21 = sub_100053348();
    v12 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006A0BE0();
  }

}

id sub_100053348()
{
  if (qword_1009F4FB0 != -1)
    dispatch_once(&qword_1009F4FB0, &stru_1008EAFF0);
  return (id)qword_1009F4FA8;
}

void sub_100053750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000538A0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2;
  v9 = sub_10003F3BC(a2);

  v10 = objc_opt_self(BKLibraryProvider);
  v11 = swift_dynamicCastObjCClass(a1, v10);
  if (!v11)
    return swift_bridgeObjectRelease(v9);
  v12 = v11;
  v13 = *(void **)&v8[OBJC_IVAR___BKSessionDonor_sampleBooksProvider];
  if (v13)
  {
    sub_100009E04(0, &qword_1009DB340, off_1008E52F8);
    swift_unknownObjectRetain(a1);
    v14 = v13;
    v15 = static NSObject.== infix(_:_:)(v12, v14);

    if ((v15 & 1) != 0)
    {
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
      v17 = qword_1009CDEB8;
      v18 = v8;
      if (v17 != -1)
        swift_once(&qword_1009CDEB8, sub_100007FE0);
      v19 = qword_1009DAFB0;
      v20 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
      v21 = (_QWORD *)swift_allocObject(&unk_1008FDD70, 48, 7);
      v21[2] = v19;
      v21[3] = v20;
      v21[4] = v18;
      v21[5] = v9;
      swift_retain(v19);
      v22 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009DB378, (uint64_t)v21);
      swift_release(v22);
      v23 = OBJC_IVAR___BKSessionDonor_sampleBooksConfig;
LABEL_19:
      objc_msgSend(v18, "propertyDidChange:propertyConfiguration:", v18, *(_QWORD *)&v18[v23]);
      return swift_unknownObjectRelease(a1);
    }
  }
  else
  {
    swift_unknownObjectRetain(a1);
  }
  v25 = *(void **)&v8[OBJC_IVAR___BKSessionDonor_recentBooksProvider];
  if (v25)
  {
    sub_100009E04(0, &qword_1009DB340, off_1008E52F8);
    swift_unknownObjectRetain(a1);
    v26 = v25;
    v27 = static NSObject.== infix(_:_:)(v12, v26);
    swift_unknownObjectRelease(a1);

    if ((v27 & 1) != 0)
    {
      v28 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
      v29 = qword_1009CDEB8;
      v18 = v8;
      if (v29 != -1)
        swift_once(&qword_1009CDEB8, sub_100007FE0);
      v30 = qword_1009DAFB0;
      v31 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
      v32 = (_QWORD *)swift_allocObject(&unk_1008FDD48, 48, 7);
      v32[2] = v30;
      v32[3] = v31;
      v32[4] = v18;
      v32[5] = v9;
      swift_retain(v30);
      v33 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009DB368, (uint64_t)v32);
      swift_release(v33);
      v23 = OBJC_IVAR___BKSessionDonor_recentBooksConfig;
      goto LABEL_19;
    }
  }
  v34 = *(void **)&v8[OBJC_IVAR___BKSessionDonor_storeBooksProvider];
  if (v34)
  {
    sub_100009E04(0, &qword_1009DB340, off_1008E52F8);
    swift_unknownObjectRetain(a1);
    v35 = v34;
    v36 = static NSObject.== infix(_:_:)(v12, v35);
    swift_unknownObjectRelease(a1);

    if ((v36 & 1) != 0)
    {
      v37 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 1, 1, v37);
      v38 = qword_1009CDEB8;
      v18 = v8;
      if (v38 != -1)
        swift_once(&qword_1009CDEB8, sub_100007FE0);
      v39 = qword_1009DAFB0;
      v40 = sub_100008DB0(&qword_1009DA220, (uint64_t (*)(uint64_t))type metadata accessor for PropertyValueActor.ActorType, (uint64_t)&unk_10071B984);
      v41 = (_QWORD *)swift_allocObject(&unk_1008FDD20, 48, 7);
      v41[2] = v39;
      v41[3] = v40;
      v41[4] = v18;
      v41[5] = v9;
      swift_retain(v39);
      v42 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009DB358, (uint64_t)v41);
      swift_release(v42);
      v23 = OBJC_IVAR___BKSessionDonor_storeBooksConfig;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease(v9);
  return swift_unknownObjectRelease(a1);
}

id sub_1000541DC(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  NSString v8;

  if (*a3 != -1)
    swift_once(a3, a5);
  static String._unconditionallyBridgeFromObjectiveC(_:)(*a4);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  return v8;
}

void ReadingActivityService.currentStreak.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v1 = v0;
  v2 = type metadata accessor for ReadingHistory.State(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__setupState);
  v7 = swift_retain(v6);
  dispatch thunk of ObservableContainer.value.getter(v19, v7);
  swift_release(v6);
  if (LOBYTE(v19[0]) == 2)
  {
    v8 = (_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService_historyModule);
    swift_beginAccess(v1 + OBJC_IVAR___BKReadingActivityService_historyModule, v19, 0, 0);
    v9 = v8[3];
    if (v9)
    {
      v10 = v8[4];
      v11 = sub_10003F198(v8, v8[3]);
      v12 = *(_QWORD *)(v9 - 8);
      __chkstk_darwin(v11);
      v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v14);
      v15 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v9, v10);
      v16 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v9);
      dispatch thunk of ObservableContainer.value.getter(v5, v16);
      v17 = swift_release(v15);
      ReadingHistory.State.currentStreak.getter(v17);
      (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      __break(1u);
    }
  }
}

void ReadingActivityService.init(serviceCenter:)(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _UNKNOWN **v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD *);
  id v36;
  Class v37;
  id v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  Class v43;
  Class v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  id v54;
  Class v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  Class v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  id v77;
  Class v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  id v88;
  Class v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  id v99;
  Class v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  id v110;
  Class v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  Class v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  id v128;
  Class v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  Class v135;
  Class v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  id v146;
  Class v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  id v158;
  Class v159;
  id v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  id v169;
  Class v170;
  id v171;
  uint64_t v172;
  unint64_t v173;
  id v174;
  Class v175;
  id v176;
  uint64_t v177;
  unint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  id v183;
  Class v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  _OWORD *v188;
  char *v189;
  char *v190;
  char *v191;
  _QWORD *v192;
  _QWORD *v193;
  id v194;
  void *v195;
  id v196;
  id v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  objc_class *ObjectType;
  id v202;
  _QWORD *v203;
  char *v204;
  uint64_t v205;
  void (*v206)(char *, _QWORD *);
  void (*v207)(char *, uint64_t);
  uint64_t v208;
  char *v209;
  __int128 v210;
  objc_super v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  _QWORD *v218;

  v202 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_10004CFD4(&qword_1009CEEE0);
  __chkstk_darwin(v2);
  v204 = (char *)&v200 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ReadingGoals.State(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v200 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v200 - v9;
  v209 = v1;
  v11 = static ReadingGoals.State.default.getter();
  v12 = ReadingGoals.State.streakDayGoal.getter(v11);
  v207 = *(void (**)(char *, uint64_t))(v5 + 8);
  v207(v10, v4);
  v218 = &type metadata for Double;
  v216 = *(_QWORD *)&v12;
  v13 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v13, &v215);
  v210 = xmmword_10070CCA0;
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = 0xD000000000000020;
  *(_QWORD *)(inited + 80) = 0x80000001007B25E0;
  v15 = sub_1000560A8(inited);
  v16 = sub_10003F198(&v216, (uint64_t)&type metadata for Double);
  v17 = *(&type metadata for Double - 1);
  __chkstk_darwin(v16);
  v19 = (char *)&v200 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v19);
  v20 = _bridgeAnythingToObjectiveC<A>(_:)(v19, &type metadata for Double);
  (*(void (**)(char *, _QWORD *))(v17 + 8))(v19, &type metadata for Double);
  _s5Books15CurrentPageViewVwxx_0(&v216);
  v21 = BCMutableCloudSyncVersions_ptr;
  v22 = objc_allocWithZone((Class)BSUIDynamicValue);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v24 = objc_msgSend(v22, "initWithValue:options:", v20, isa);
  swift_unknownObjectRelease(v20);

  if (!v24)
  {
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_dailyGoal] = v24;
  v25 = static ReadingGoals.State.default.getter();
  v26 = ReadingGoals.State.booksFinishedGoal.getter(v25);
  v207(v8, v4);
  v218 = &type metadata for Int;
  v216 = v26;
  v27 = swift_initStackObject(v13, &v212);
  *(_OWORD *)(v27 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v27 + 96) = &type metadata for String;
  *(_QWORD *)(v27 + 72) = 0xD000000000000028;
  *(_QWORD *)(v27 + 80) = 0x80000001007B2610;
  v28 = sub_1000560A8(v27);
  v29 = v218;
  v208 = v13;
  if (v218)
  {
    v30 = sub_10003F198(&v216, (uint64_t)v218);
    v31 = *(v29 - 1);
    __chkstk_darwin(v30);
    v33 = (char *)&v200 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v33);
    v34 = _bridgeAnythingToObjectiveC<A>(_:)(v33, v29);
    v35 = *(void (**)(char *, _QWORD *))(v31 + 8);
    v21 = BCMutableCloudSyncVersions_ptr;
    v13 = v208;
    v35(v33, v29);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v34 = 0;
  }
  v36 = objc_allocWithZone((Class)v21[151]);
  v37 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  v38 = objc_msgSend(v36, "initWithValue:options:", v34, v37);
  swift_unknownObjectRelease(v34);

  if (!v38)
    goto LABEL_44;
  v39 = v209;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_booksFinishedGoal] = v38;
  v40 = swift_allocObject(v13, 104, 7);
  *(_OWORD *)(v40 + 16) = v210;
  v216 = 0x6D614E6775626564;
  v217 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v216, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v40 + 96) = &type metadata for String;
  *(_QWORD *)(v40 + 72) = 0xD000000000000025;
  *(_QWORD *)(v40 + 80) = 0x80000001007B2640;
  v41 = sub_1000560A8(v40);
  v42 = objc_allocWithZone((Class)BSUIDynamicArray);
  v205 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  v43 = Array._bridgeToObjectiveC()().super.isa;
  v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  v45 = objc_msgSend(v42, "initWithArray:options:", v43, v44);

  if (!v45)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  *(_QWORD *)&v39[OBJC_IVAR___BKReadingActivityService_finishedAssets] = v45;
  v203 = (_QWORD *)sub_10004CFD4(&qword_1009D3090);
  v218 = v203;
  v216 = (uint64_t)&_swiftEmptyDictionarySingleton;
  v46 = swift_allocObject(v13, 104, 7);
  *(_OWORD *)(v46 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v46 + 96) = &type metadata for String;
  *(_QWORD *)(v46 + 72) = 0xD000000000000029;
  *(_QWORD *)(v46 + 80) = 0x80000001007B2670;
  v47 = sub_1000560A8(v46);
  v48 = v218;
  if (v218)
  {
    v49 = sub_10003F198(&v216, (uint64_t)v218);
    v50 = *(v48 - 1);
    __chkstk_darwin(v49);
    v52 = (char *)&v200 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v50 + 16))(v52);
    v53 = _bridgeAnythingToObjectiveC<A>(_:)(v52, v48);
    (*(void (**)(char *, _QWORD *))(v50 + 8))(v52, v48);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v53 = 0;
  }
  v54 = objc_allocWithZone((Class)BSUIDynamicValue);
  v55 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  v56 = objc_msgSend(v54, "initWithValue:options:", v53, v55);
  swift_unknownObjectRelease(v53);

  v57 = v208;
  if (!v56)
    goto LABEL_46;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_finishedAssetsData] = v56;
  v218 = &type metadata for Int;
  v216 = 0;
  v58 = swift_allocObject(v57, 104, 7);
  *(_OWORD *)(v58 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v58 + 96) = &type metadata for String;
  *(_QWORD *)(v58 + 72) = 0xD000000000000028;
  *(_QWORD *)(v58 + 80) = 0x80000001007B26A0;
  v59 = sub_1000560A8(v58);
  v60 = v218;
  if (v218)
  {
    v61 = sub_10003F198(&v216, (uint64_t)v218);
    v62 = *(v60 - 1);
    __chkstk_darwin(v61);
    v64 = (char *)&v200 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v62 + 16))(v64);
    v65 = _bridgeAnythingToObjectiveC<A>(_:)(v64, v60);
    (*(void (**)(char *, _QWORD *))(v62 + 8))(v64, v60);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v65 = 0;
  }
  v66 = objc_allocWithZone((Class)BSUIDynamicValue);
  v67 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v59);
  v68 = objc_msgSend(v66, "initWithValue:options:", v65, v67);
  swift_unknownObjectRelease(v65);

  if (!v68)
    goto LABEL_47;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_finishedAssetYear] = v68;
  v218 = &type metadata for Int;
  v216 = 0;
  v69 = swift_allocObject(v57, 104, 7);
  *(_OWORD *)(v69 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v69 + 96) = &type metadata for String;
  *(_QWORD *)(v69 + 72) = 0xD000000000000030;
  *(_QWORD *)(v69 + 80) = 0x80000001007B26D0;
  v70 = sub_1000560A8(v69);
  v71 = v218;
  if (v218)
  {
    v72 = sub_10003F198(&v216, (uint64_t)v218);
    v73 = *(v71 - 1);
    __chkstk_darwin(v72);
    v75 = (char *)&v200 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v73 + 16))(v75);
    v76 = _bridgeAnythingToObjectiveC<A>(_:)(v75, v71);
    (*(void (**)(char *, _QWORD *))(v73 + 8))(v75, v71);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v76 = 0;
  }
  v77 = objc_allocWithZone((Class)BSUIDynamicValue);
  v78 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v70);
  v79 = objc_msgSend(v77, "initWithValue:options:", v76, v78);
  swift_unknownObjectRelease(v76);

  if (!v79)
    goto LABEL_48;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_finishedAssetAllTimeCount] = v79;
  v218 = &type metadata for Int;
  v216 = 0;
  v80 = swift_allocObject(v57, 104, 7);
  *(_OWORD *)(v80 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v80 + 96) = &type metadata for String;
  *(_QWORD *)(v80 + 72) = 0xD00000000000003ALL;
  *(_QWORD *)(v80 + 80) = 0x80000001007B2710;
  v81 = sub_1000560A8(v80);
  v82 = v218;
  if (v218)
  {
    v83 = sub_10003F198(&v216, (uint64_t)v218);
    v84 = *(v82 - 1);
    __chkstk_darwin(v83);
    v86 = (char *)&v200 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v84 + 16))(v86);
    v87 = _bridgeAnythingToObjectiveC<A>(_:)(v86, v82);
    (*(void (**)(char *, _QWORD *))(v84 + 8))(v86, v82);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v87 = 0;
  }
  v88 = objc_allocWithZone((Class)BSUIDynamicValue);
  v89 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v81);
  v90 = objc_msgSend(v88, "initWithValue:options:", v87, v89);
  swift_unknownObjectRelease(v87);

  if (!v90)
    goto LABEL_49;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_finishedAssetsAfterCurrentYearCount] = v90;
  v218 = &type metadata for Int;
  v216 = 0;
  v91 = swift_allocObject(v57, 104, 7);
  *(_OWORD *)(v91 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v91 + 96) = &type metadata for String;
  *(_QWORD *)(v91 + 72) = 0xD00000000000003CLL;
  *(_QWORD *)(v91 + 80) = 0x80000001007B2750;
  v92 = sub_1000560A8(v91);
  v93 = v218;
  if (v218)
  {
    v94 = sub_10003F198(&v216, (uint64_t)v218);
    v95 = *(v93 - 1);
    __chkstk_darwin(v94);
    v97 = (char *)&v200 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v95 + 16))(v97);
    v98 = _bridgeAnythingToObjectiveC<A>(_:)(v97, v93);
    (*(void (**)(char *, _QWORD *))(v95 + 8))(v97, v93);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v98 = 0;
  }
  v99 = objc_allocWithZone((Class)BSUIDynamicValue);
  v100 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v92);
  v101 = objc_msgSend(v99, "initWithValue:options:", v98, v100);
  swift_unknownObjectRelease(v98);

  if (!v101)
    goto LABEL_50;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_finishedAssetsPriorToCurrentYearCount] = v101;
  v218 = &type metadata for Bool;
  LOBYTE(v216) = 0;
  v102 = swift_allocObject(v57, 104, 7);
  *(_OWORD *)(v102 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v102 + 96) = &type metadata for String;
  *(_QWORD *)(v102 + 72) = 0xD00000000000002BLL;
  *(_QWORD *)(v102 + 80) = 0x80000001007B2790;
  v103 = sub_1000560A8(v102);
  v104 = v218;
  if (v218)
  {
    v105 = sub_10003F198(&v216, (uint64_t)v218);
    v106 = *(v104 - 1);
    __chkstk_darwin(v105);
    v108 = (char *)&v200 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v106 + 16))(v108);
    v109 = _bridgeAnythingToObjectiveC<A>(_:)(v108, v104);
    (*(void (**)(char *, _QWORD *))(v106 + 8))(v108, v104);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v109 = 0;
  }
  v110 = objc_allocWithZone((Class)BSUIDynamicValue);
  v111 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v103);
  v112 = objc_msgSend(v110, "initWithValue:options:", v109, v111);
  swift_unknownObjectRelease(v109);

  if (!v112)
    goto LABEL_51;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_isDailyGoalCompleted] = v112;
  v218 = &type metadata for Int;
  v216 = 0;
  v113 = swift_allocObject(v57, 104, 7);
  *(_OWORD *)(v113 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v113 + 96) = &type metadata for String;
  *(_QWORD *)(v113 + 72) = 0xD000000000000027;
  *(_QWORD *)(v113 + 80) = 0x80000001007B27C0;
  v114 = sub_1000560A8(v113);
  v115 = sub_10003F198(&v216, (uint64_t)&type metadata for Int);
  v116 = (_QWORD *)*(&type metadata for Int - 1);
  v117 = v116[8];
  __chkstk_darwin(v115);
  v118 = (v117 + 15) & 0xFFFFFFFFFFFFFFF0;
  v207 = (void (*)(char *, uint64_t))v116[2];
  ((void (*)(char *))v207)((char *)&v200 - v118);
  v119 = _bridgeAnythingToObjectiveC<A>(_:)((char *)&v200 - v118, &type metadata for Int);
  v206 = (void (*)(char *, _QWORD *))v116[1];
  v206((char *)&v200 - v118, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0(&v216);
  v120 = objc_allocWithZone((Class)BSUIDynamicValue);
  v121 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v114);
  v122 = objc_msgSend(v120, "initWithValue:options:", v119, v121);
  swift_unknownObjectRelease(v119);

  if (!v122)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v123 = v208;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_readingTimeToday] = v122;
  v218 = &type metadata for Int;
  v216 = 0;
  v124 = swift_allocObject(v123, 104, 7);
  *(_OWORD *)(v124 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v124 + 96) = &type metadata for String;
  *(_QWORD *)(v124 + 72) = 0xD000000000000030;
  *(_QWORD *)(v124 + 80) = 0x80000001007B27F0;
  v125 = sub_1000560A8(v124);
  v126 = sub_10003F198(&v216, (uint64_t)&type metadata for Int);
  v200 = v117;
  __chkstk_darwin(v126);
  ((void (*)(char *))v207)((char *)&v200 - v118);
  v127 = _bridgeAnythingToObjectiveC<A>(_:)((char *)&v200 - v118, &type metadata for Int);
  v206((char *)&v200 - v118, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0(&v216);
  v128 = objc_allocWithZone((Class)BSUIDynamicValue);
  v129 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v125);
  v130 = objc_msgSend(v128, "initWithValue:options:", v127, v129);
  swift_unknownObjectRelease(v127);

  if (!v130)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v131 = v208;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_readingIndicatorTimeToday] = v130;
  v132 = swift_allocObject(v131, 104, 7);
  *(_OWORD *)(v132 + 16) = v210;
  v216 = 0x6D614E6775626564;
  v217 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v216, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v132 + 96) = &type metadata for String;
  *(_QWORD *)(v132 + 72) = 0xD000000000000025;
  *(_QWORD *)(v132 + 80) = 0x80000001007B2830;
  v133 = sub_1000560A8(v132);
  v134 = objc_allocWithZone((Class)BSUIDynamicArray);
  v135 = Array._bridgeToObjectiveC()().super.isa;
  v136 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v133);
  v137 = objc_msgSend(v134, "initWithArray:options:", v135, v136);

  if (!v137)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v138 = v208;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_readingHistory] = v137;
  v218 = &type metadata for Bool;
  LOBYTE(v216) = 0;
  v139 = swift_allocObject(v138, 104, 7);
  *(_OWORD *)(v139 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v139 + 96) = &type metadata for String;
  *(_QWORD *)(v139 + 72) = 0xD00000000000002ELL;
  *(_QWORD *)(v139 + 80) = 0x80000001007B2860;
  v140 = sub_1000560A8(v139);
  v141 = sub_10003F198(&v216, (uint64_t)&type metadata for Bool);
  v142 = *(&type metadata for Bool - 1);
  __chkstk_darwin(v141);
  v144 = (char *)&v200 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v142 + 16))(v144);
  v145 = _bridgeAnythingToObjectiveC<A>(_:)(v144, &type metadata for Bool);
  (*(void (**)(char *, _QWORD *))(v142 + 8))(v144, &type metadata for Bool);
  _s5Books15CurrentPageViewVwxx_0(&v216);
  v146 = objc_allocWithZone((Class)BSUIDynamicValue);
  v147 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v140);
  v148 = objc_msgSend(v146, "initWithValue:options:", v145, v147);
  swift_unknownObjectRelease(v145);

  if (!v148)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v149 = v208;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_didSeeWelcomeExperience] = v148;
  v150 = (uint64_t)v203;
  v218 = v203;
  v216 = (uint64_t)&_swiftEmptyDictionarySingleton;
  v151 = swift_allocObject(v149, 104, 7);
  *(_OWORD *)(v151 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v151 + 96) = &type metadata for String;
  *(_QWORD *)(v151 + 72) = 0xD00000000000002ELL;
  *(_QWORD *)(v151 + 80) = 0x80000001007B2890;
  v152 = sub_1000560A8(v151);
  if (v150)
  {
    v153 = sub_10003F198(&v216, v150);
    v154 = *(_QWORD *)(v150 - 8);
    __chkstk_darwin(v153);
    v156 = (char *)&v200 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v154 + 16))(v156);
    v157 = _bridgeAnythingToObjectiveC<A>(_:)(v156, v150);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v156, v150);
    _s5Books15CurrentPageViewVwxx_0(&v216);
  }
  else
  {
    v157 = 0;
  }
  v158 = objc_allocWithZone((Class)BSUIDynamicValue);
  v159 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v152);
  v160 = objc_msgSend(v158, "initWithValue:options:", v157, v159);
  swift_unknownObjectRelease(v157);

  if (!v160)
    goto LABEL_56;
  v161 = v209;
  *(_QWORD *)&v209[OBJC_IVAR___BKReadingActivityService_allTimeRecordStreakData] = v160;
  v162 = OBJC_IVAR___BKReadingActivityService_readingHistoryPublisher;
  v163 = type metadata accessor for ReadingHistory.State(0);
  v164 = v204;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v204, 1, 1, v163);
  v165 = sub_10004CFD4(&qword_1009CEEE8);
  swift_allocObject(v165, *(unsigned int *)(v165 + 48), *(unsigned __int16 *)(v165 + 52));
  *(_QWORD *)&v161[v162] = CurrentValueSubject.init(_:)(v164);
  v166 = v208;
  v167 = swift_allocObject(v208, 104, 7);
  *(_OWORD *)(v167 + 16) = v210;
  v216 = 0x6D614E6775626564;
  v217 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v216, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v167 + 96) = &type metadata for String;
  *(_QWORD *)(v167 + 72) = 0xD000000000000023;
  *(_QWORD *)(v167 + 80) = 0x80000001007B28C0;
  v168 = sub_1000560A8(v167);
  v169 = objc_allocWithZone((Class)BSUIDynamicValue);
  v170 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v168);
  v171 = objc_msgSend(v169, "initWithValue:options:", 0, v170);

  if (!v171)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_booksPerYear] = v171;
  v172 = swift_allocObject(v166, 104, 7);
  *(_OWORD *)(v172 + 16) = v210;
  v216 = 0x6D614E6775626564;
  v217 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v216, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v172 + 96) = &type metadata for String;
  *(_QWORD *)(v172 + 72) = 0xD000000000000027;
  *(_QWORD *)(v172 + 80) = 0x80000001007B28F0;
  v173 = sub_1000560A8(v172);
  v174 = objc_allocWithZone((Class)BSUIDynamicValue);
  v175 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v173);
  v176 = objc_msgSend(v174, "initWithValue:options:", 0, v175);

  if (!v176)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_timeReadPerMonth] = v176;
  v218 = &type metadata for Int;
  v216 = 0;
  v177 = swift_allocObject(v166, 104, 7);
  *(_OWORD *)(v177 + 16) = v210;
  v213 = 0x6D614E6775626564;
  v214 = 0xE900000000000065;
  AnyHashable.init<A>(_:)(&v213, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v177 + 96) = &type metadata for String;
  *(_QWORD *)(v177 + 72) = 0xD00000000000002FLL;
  *(_QWORD *)(v177 + 80) = 0x80000001007B2920;
  v178 = sub_1000560A8(v177);
  v179 = sub_10003F198(&v216, (uint64_t)&type metadata for Int);
  __chkstk_darwin(v179);
  v181 = (char *)&v200 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *))v207)(v181);
  v182 = _bridgeAnythingToObjectiveC<A>(_:)(v181, &type metadata for Int);
  v206(v181, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0(&v216);
  v183 = objc_allocWithZone((Class)BSUIDynamicValue);
  v184 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v178);
  v185 = objc_msgSend(v183, "initWithValue:options:", v182, v184);
  swift_unknownObjectRelease(v182);

  if (v185)
  {
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_finishedAssetCountByYear] = v185;
    v186 = OBJC_IVAR___BKReadingActivityService__setupState;
    LOBYTE(v216) = 0;
    v187 = sub_10004CFD4(&qword_1009EC8D0);
    swift_allocObject(v187, *(unsigned int *)(v187 + 48), *(unsigned __int16 *)(v187 + 52));
    *(_QWORD *)&v161[v186] = MutableObservableContainer.init(value:)(&v216);
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService__currentActiveAchievementSheetKind] = 0;
    v161[OBJC_IVAR___BKReadingActivityService_enableCloudSync] = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_clearDataObservation] = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_welcomeTimers] = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_readingTimeTodayDynamicProgress] = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_libraryManager] = 0;
    v188 = &v161[OBJC_IVAR___BKReadingActivityService_goalsModule];
    *v188 = 0u;
    v188[1] = 0u;
    v188[2] = 0u;
    v188[3] = 0u;
    v188[4] = 0u;
    v189 = &v161[OBJC_IVAR___BKReadingActivityService_booksFinishedModule];
    *(_OWORD *)v189 = 0u;
    *((_OWORD *)v189 + 1) = 0u;
    *((_OWORD *)v189 + 2) = 0u;
    *((_OWORD *)v189 + 3) = 0u;
    *((_OWORD *)v189 + 4) = 0u;
    *((_OWORD *)v189 + 5) = 0u;
    *((_OWORD *)v189 + 6) = 0u;
    *((_QWORD *)v189 + 14) = 0;
    v190 = &v161[OBJC_IVAR___BKReadingActivityService_historyModule];
    *(_OWORD *)v190 = 0u;
    *((_OWORD *)v190 + 1) = 0u;
    *((_OWORD *)v190 + 2) = 0u;
    *((_OWORD *)v190 + 3) = 0u;
    *((_OWORD *)v190 + 4) = 0u;
    *((_OWORD *)v190 + 5) = 0u;
    *((_OWORD *)v190 + 6) = 0u;
    *((_QWORD *)v190 + 14) = 0;
    v191 = &v161[OBJC_IVAR___BKReadingActivityService_sessionEventProvider];
    *(_OWORD *)v191 = 0u;
    *((_OWORD *)v191 + 1) = 0u;
    *((_QWORD *)v191 + 4) = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_achievementsController] = 0;
    v192 = &v161[OBJC_IVAR___BKReadingActivityService_cloudSyncStateHandler];
    *v192 = 0;
    v192[1] = 0;
    v193 = &v161[OBJC_IVAR___BKReadingActivityService_notificationSuppressingEventHandler];
    *v193 = 0;
    v193[1] = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_readingActivityDonor] = 0;
    *(_QWORD *)&v161[OBJC_IVAR___BKReadingActivityService_engagementManager] = 0;

    v211.receiver = v161;
    v211.super_class = ObjectType;
    v194 = objc_msgSendSuper2(&v211, "init");
    v195 = (void *)objc_opt_self(NSDistributedNotificationCenter);
    v196 = v194;
    v197 = objc_msgSend(v195, "defaultCenter");
    v198 = BCCloudGlobalMetadataManagerChangedNotification;
    v199 = v196;
    objc_msgSend(v197, "addObserver:selector:name:object:", v199, "handleCloudChangeNotification:", v198, 0);

    return;
  }
LABEL_59:
  __break(1u);
}

unint64_t sub_1000560A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(&qword_1009D0A60);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000B5E4(v7, (uint64_t)v16, &qword_1009D0A68);
    result = sub_1000561E8((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10004CFC4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000561E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100056218(a1, v4);
}

unint64_t sub_100056218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1000569E0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_1000569AC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

Swift::Double __swiftcall ReadingActivityService.readingTimeTodayIncludingUnflushed()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  double v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__setupState);
  v7 = swift_retain(v6);
  dispatch thunk of ObservableContainer.value.getter(v16, v7);
  swift_release(v6);
  result = 0.0;
  if (LOBYTE(v16[0]) == 2)
  {
    ReadingActivityService.timeReadToday.getter();
    v10 = v9;
    v11 = v1 + OBJC_IVAR___BKReadingActivityService_historyModule;
    *(_QWORD *)&result = swift_beginAccess(v1 + OBJC_IVAR___BKReadingActivityService_historyModule, v19, 0, 0).n128_u64[0];
    if (*(_QWORD *)(v11 + 24))
    {
      sub_10002E418(v11, (uint64_t)v16);
      v12 = v17;
      v13 = v18;
      v14 = sub_10003F198(v16, v17);
      Date.init()(v14);
      v15 = dispatch thunk of ReadingHistoryStateProvider.pendingReadingTime(until:)(v5, v12, v13);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _s5Books15CurrentPageViewVwxx_0(v16);
      return v15 + (double)v10;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void ReadingActivityService.timeReadToday.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  v1 = v0;
  v2 = type metadata accessor for ReadingHistory.Day(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReadingHistory.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (_QWORD *)((char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(v0 + OBJC_IVAR___BKReadingActivityService__setupState);
  v11 = swift_retain(v10);
  dispatch thunk of ObservableContainer.value.getter(v24, v11);
  swift_release(v10);
  if (LOBYTE(v24[0]) == 2)
  {
    v12 = (_QWORD *)(v1 + OBJC_IVAR___BKReadingActivityService_historyModule);
    swift_beginAccess(v1 + OBJC_IVAR___BKReadingActivityService_historyModule, v24, 0, 0);
    v13 = v12[3];
    if (v13)
    {
      v14 = v12[4];
      v15 = sub_10003F198(v12, v12[3]);
      v23 = (uint64_t)&v23;
      v16 = *(_QWORD *)(v13 - 8);
      __chkstk_darwin(v15);
      v18 = (char *)&v24[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v16 + 16))(v18);
      v19 = dispatch thunk of ReadingHistoryStateProvider.state.getter(v13, v14);
      v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v13);
      dispatch thunk of ObservableContainer.value.getter(v9, v20);
      v21 = swift_release(v19);
      ReadingHistory.State.today.getter(v21);
      v22 = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
      ReadingHistory.Day.readingTime.getter(v22);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100056604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  _QWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[3];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D04F8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v37 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  v7 = v49;
  v8 = v47;
  v9 = &v43;
  v10 = &v45;
  swift_bridgeObjectRetain(v1);
  v38 = 0;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v19 = v38 + 1;
  if (__OFADD__(v38, 1))
    goto LABEL_35;
  if (v19 >= v36)
    goto LABEL_32;
  v20 = *(_QWORD *)(v37 + 8 * v19);
  v21 = v38 + 1;
  if (!v20)
  {
    v21 = v38 + 2;
    if (v38 + 2 >= v36)
      goto LABEL_32;
    v20 = *(_QWORD *)(v37 + 8 * v21);
    if (!v20)
    {
      v21 = v38 + 3;
      if (v38 + 3 >= v36)
        goto LABEL_32;
      v20 = *(_QWORD *)(v37 + 8 * v21);
      if (!v20)
      {
        v21 = v38 + 4;
        if (v38 + 4 >= v36)
          goto LABEL_32;
        v20 = *(_QWORD *)(v37 + 8 * v21);
        if (!v20)
        {
          v22 = v38 + 5;
          if (v38 + 5 < v36)
          {
            v20 = *(_QWORD *)(v37 + 8 * v22);
            if (v20)
            {
              v21 = v38 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v36)
                break;
              v20 = *(_QWORD *)(v37 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100299C3C(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v38 = v21;
  v39 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v6)) | (v38 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_10004CD0C(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v7);
    *(_QWORD *)&v48 = v25;
    *((_QWORD *)&v48 + 1) = v24;
    v46[2] = v48;
    v47[0] = v49[0];
    v47[1] = v49[1];
    v41 = v25;
    v42 = v24;
    sub_10004CFC4(v8, v40);
    swift_bridgeObjectRetain(v24);
    v26 = sub_10004CFD4(&qword_1009DA340);
    swift_dynamicCast(v9, v40, (char *)&type metadata for Any + 8, v26, 7);
    v28 = v41;
    v27 = v42;
    sub_10004CFC4(v9, v10);
    sub_10004CFC4(v10, v46);
    sub_10004CFC4(v46, &v44);
    v29 = sub_10004CE80(v28, v27);
    v30 = v29;
    if ((v31 & 1) != 0)
    {
      v11 = v10;
      v12 = v9;
      v13 = v1;
      v14 = v8;
      v15 = v7;
      v16 = (uint64_t *)(v3[6] + 16 * v29);
      swift_bridgeObjectRelease(v16[1]);
      *v16 = v28;
      v16[1] = v27;
      v7 = v15;
      v8 = v14;
      v1 = v13;
      v9 = v12;
      v10 = v11;
      v17 = (_QWORD *)(v3[7] + 32 * v30);
      _s5Books15CurrentPageViewVwxx_0(v17);
      sub_10004CFC4(&v44, v17);
      v6 = v39;
      if (!v39)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v29;
    v32 = (uint64_t *)(v3[6] + 16 * v29);
    *v32 = v28;
    v32[1] = v27;
    sub_10004CFC4(&v44, (_OWORD *)(v3[7] + 32 * v29));
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_34;
    v3[2] = v35;
    v6 = v39;
    if (!v39)
      goto LABEL_11;
LABEL_10:
    v39 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1000569AC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_1000569E0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

void sub_10005708C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005796C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100057A30(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  _QWORD v6[5];
  uint8_t buf[16];

  v2 = BKLibraryDataSourceMediaLibraryLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Media library changed. Handling MediaLibrary updates.", buf, 2u);
  }

  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "_calcSyncAnchor"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10018AD28;
  v6[3] = &unk_1008ED698;
  v6[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v4, "dq_processChangesSince:completion:", v5, v6);

}

void sub_10005872C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void sub_100059114(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    v4 = *(_QWORD *)(a1 + 40);
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKCloudQuotaUIServices.m", 173, "-[BKCloudQuotaUIServices addObserver:]_block_invoke", "[self.observers containsObject:observer] == NO", CFSTR("%p is already an observer"));
  }
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers", v4));
  objc_msgSend(v5, "addObject:", *(_QWORD *)(a1 + 40));

}

id TabBarController.childForStatusBarStyle.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v1, "modalPresentationStyle") == (id)5
      && (objc_msgSend(v2, "isBeingDismissed") & 1) == 0)
    {
      v8 = objc_msgSend(v2, "childViewControllerForStatusBarStyle");
      goto LABEL_9;
    }

  }
  v3 = (void *)objc_opt_self(BKAppDelegate);
  v4 = objc_msgSend(v3, "delegate");
  v5 = objc_msgSend(v4, "appLaunchCoordinator");

  LODWORD(v4) = objc_msgSend(v5, "appLaunchCoordinatorIsConditionSatisfied:", 0);
  swift_unknownObjectRelease(v5);
  if ((_DWORD)v4)
  {
    v6 = objc_msgSend(v3, "delegate");
    v7 = objc_msgSend(v6, "sceneManager");

    v2 = objc_msgSend(v7, "mainFlowController");
    v8 = objc_msgSend(v2, "viewControllerForStatusBarStyle");
LABEL_9:
    v9 = v8;

    return v9;
  }
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for TabBarController(0);
  return objc_msgSendSuper2(&v11, "childViewControllerForStatusBarStyle");
}

Swift::Void __swiftcall RootBarStandardItemsManager.processBagItems(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t rawValue;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100059BB4();
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    if ((uint64_t)a1._rawValue < 0)
      rawValue = (unint64_t)a1._rawValue;
    else
      rawValue = (unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1._rawValue);
    v27 = _CocoaArrayWrapper.endIndex.getter(rawValue);
    swift_bridgeObjectRelease(a1._rawValue);
    if (v27)
      goto LABEL_4;
    goto LABEL_12;
  }
  if ((unint64_t)a1._rawValue >> 62)
    goto LABEL_8;
  if (*(_QWORD *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    swift_bridgeObjectRetain(a1._rawValue);
    v16 = v2;
    v17 = (uint64_t)sub_100059EE0((unint64_t)a1._rawValue, (uint64_t)v16);
    swift_bridgeObjectRelease(a1._rawValue);

    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v33 = v17;
      else
        v33 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v17);
      if (v34)
        goto LABEL_6;
    }
    else if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      KeyPath = swift_getKeyPath(&unk_100730E00);
      v19 = swift_getKeyPath(&unk_100730E28);
      aBlock[0] = v17;
      v20 = v16;
      swift_bridgeObjectRetain(v17);
      static Published.subscript.setter(aBlock, v20, KeyPath, v19);
      v20[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_loadedFromBag] = 1;
      v21 = swift_allocObject(&unk_100913FE0, 32, 7);
      *(_QWORD *)(v21 + 16) = v20;
      *(_QWORD *)(v21 + 24) = v17;
      aBlock[4] = sub_1000156AC;
      v42 = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_100913FF8;
      v22 = _Block_copy(aBlock);
      static DispatchQoS.unspecified.getter(v20);
      v40 = _swiftEmptyArrayStorage;
      v23 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v24 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v25 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v24, v25, v4, v23);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v38);
      swift_release(v42);
      return;
    }
    v35 = v17;
    goto LABEL_25;
  }
LABEL_12:
  v28 = swift_getKeyPath(&unk_100730E00);
  v29 = swift_getKeyPath(&unk_100730E28);
  static Published.subscript.getter(aBlock, v2, v28, v29);
  swift_release(v28);
  swift_release(v29);
  v30 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    if (aBlock[0] < 0)
      v36 = aBlock[0];
    else
      v36 = aBlock[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(aBlock[0]);
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v30);
    if (v37)
      goto LABEL_14;
  }
  else if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    v31 = swift_getKeyPath(&unk_100730E00);
    v32 = swift_getKeyPath(&unk_100730E28);
    aBlock[0] = v30;
    static Published.subscript.setter(aBlock, v2, v31, v32);
    return;
  }
  v35 = v30;
LABEL_25:
  swift_bridgeObjectRelease(v35);
}

unint64_t sub_100059BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009CEC30;
  if (!qword_1009CEC30)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009CEC30);
  }
  return result;
}

uint64_t sub_100059C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  unsigned __int8 v16;
  unsigned int v17;
  id v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_30;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v6)
  {
    v23 = v3;
    v24 = *(id *)(a2 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_restrictionProvider);
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v3 = (uint64_t)sub_10005A214();
      v11 = objc_msgSend((id)v3, "isBooksStoreEnabled");

      if (!objc_msgSend(v11, "isLoaded"))
        goto LABEL_14;
      v25 = 0;
      v12 = objc_msgSend(v11, "valueWithError:", &v25);
      v13 = v25;
      if (!v12)
      {
        v18 = v25;
        v3 = _convertNSErrorToError(_:)(v13);

        swift_willThrow(v19);
        swift_errorRelease(v3);
        v16 = 0;
        v20 = objc_msgSend(v24, "isBookStoreAllowed", 0);
        goto LABEL_19;
      }
      v14 = v12;
      v15 = v25;
      v3 = (uint64_t)objc_msgSend(v14, "BOOLValue");

      if ((v3 & 1) == 0)
        v16 = objc_msgSend(v9, "isStoreOnly");
      else
LABEL_14:
        v16 = 0;
      v20 = objc_msgSend(v24, "isBookStoreAllowed", v23);
LABEL_19:
      if (v20)
      {
        if (*(_QWORD *)&v9[OBJC_IVAR___BKRootBarItem_url + 8])
        {

          if ((v16 & 1) != 0)
            goto LABEL_27;
          goto LABEL_6;
        }
        v17 = 0;
      }
      else
      {
        v17 = objc_msgSend(v9, "isStoreOnly");
        if (*(_QWORD *)&v9[OBJC_IVAR___BKRootBarItem_url + 8])
        {

          if ((v16 & 1) != 0 || v17)
            goto LABEL_27;
          goto LABEL_6;
        }
      }
      v3 = (uint64_t)objc_msgSend(v9, "requiresURL");

      if ((v16 & 1) != 0 || v17 || (_DWORD)v3)
      {
LABEL_27:
        swift_bridgeObjectRelease(a1);
        return 1;
      }
LABEL_6:
      ++v7;
      if (v10 == v6)
        goto LABEL_34;
    }
    __break(1u);
LABEL_30:
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v22);
  }
LABEL_34:
  swift_bridgeObjectRelease(a1);
  return 0;
}

_QWORD *sub_100059EE0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v21 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
LABEL_9:
        v16 = v15;
        v17 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        v18 = sub_10005A050(v15);
        if ((v18 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
          v8 = v6;
          v9 = v4;
          v10 = v3;
          v11 = a2;
          v12 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
          v13 = v12;
          a2 = v11;
          v3 = v10;
          v4 = v9;
          v6 = v8;
          v7 = v21;
          v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v16);
          specialized ContiguousArray._endMutation()(v14);
        }
        ++v5;
        if (v17 == v4)
          return _swiftEmptyArrayStorage;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v3 < 0)
        v20 = v3;
      else
        v20 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v15 = (char *)*(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10005A050(char *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  unsigned __int8 v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  id v17;

  v3 = sub_10005A214();
  v4 = objc_msgSend(v3, "isBooksStoreEnabled");

  if (!objc_msgSend(v4, "isLoaded"))
    goto LABEL_4;
  v17 = 0;
  v5 = objc_msgSend(v4, "valueWithError:", &v17);
  v6 = v17;
  if (v5)
  {
    v7 = v5;
    v8 = v17;
    v9 = objc_msgSend(v7, "BOOLValue");

    if ((v9 & 1) != 0)
    {
LABEL_4:
      v10 = 0;
      goto LABEL_7;
    }
    v10 = objc_msgSend(a1, "isStoreOnly");
  }
  else
  {
    v11 = v17;
    v12 = _convertNSErrorToError(_:)(v6);

    swift_willThrow(v13);
    swift_errorRelease(v12);
    v10 = 0;
  }
LABEL_7:
  if ((objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_restrictionProvider), "isBookStoreAllowed") & 1) != 0)
  {
    v14 = 0;
    v15 = 0;
    if (!*(_QWORD *)&a1[OBJC_IVAR___BKRootBarItem_url + 8])
      goto LABEL_12;
  }
  else
  {
    v14 = objc_msgSend(a1, "isStoreOnly");
    if (!*(_QWORD *)&a1[OBJC_IVAR___BKRootBarItem_url + 8])
    {
LABEL_12:
      v15 = objc_msgSend(a1, "requiresURL");
      goto LABEL_13;
    }
    v15 = 0;
  }
LABEL_13:

  return v10 | v14 | v15;
}

id sub_10005A214()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Books27RootBarStandardItemsManager____lazy_storage___bag);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10005A348(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  void *v11;
  unsigned int v12;
  const char *v13;
  _QWORD block[5];
  uint8_t buf[4];
  const char *v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
  objc_msgSend(v2, "refreshUpdateCountAsync");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeController"));
  objc_msgSend(v3, "downloadQueueReload");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  objc_msgSend(v4, "restartObserving");

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "liverpoolStatusMonitor"));
  objc_msgSend(v5, "restartObserving");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "untetheredPlistDataSource"));
  objc_msgSend(v6, "reloadIfChanged");

  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(NSObject **)(v7 + 312);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100063F5C;
  block[3] = &unk_1008E72C0;
  block[4] = v7;
  dispatch_async(v8, block);
  v9 = sub_100036938();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "liverpoolStatusMonitor"));
    v12 = objc_msgSend(v11, "isCloudKitEnabled");
    v13 = "NO";
    if (v12)
      v13 = "YES";
    *(_DWORD *)buf = 136446210;
    v16 = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "ResumeFromBackground: isCloudKitEnabled: %{public}s", buf, 0xCu);

  }
}

id RootBarItem.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t ObjectType;
  uint64_t v19;

  v2 = v1;
  v4 = sub_10005A930();
  v5 = NSCoder.decodeObject<A>(of:forKey:)(v4, 0x696669746E656469, 0xEA00000000007265, v4);
  v6 = (void *)v5;
  if (v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(a1, "decodeBoolForKey:", v9);

  v11 = (void *)NSCoder.decodeObject<A>(of:forKey:)(v4, 7107189, 0xE300000000000000, v4);
  v12 = (void *)NSCoder.decodeObject<A>(of:forKey:)(v4, 0x656C746974, 0xE500000000000000, v4);
  v13 = (void *)NSCoder.decodeObject<A>(of:forKey:)(v4, 0x656D614E6E6F6369, 0xE800000000000000, v4);
  v14 = (void *)NSCoder.decodeObject<A>(of:forKey:)(v4, 0xD000000000000010, 0x80000001007C8A00, v4);
  v15 = (void *)NSCoder.decodeObject<A>(of:forKey:)(v4, 0x437972746E756F63, 0xEB0000000065646FLL, v4);
  if (v8)
  {
    swift_bridgeObjectRelease(v8);
    LOBYTE(v19) = 0;
    v16 = objc_msgSend(v2, "initWithIdentifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:", v6, v10, v11, v12, v13, v14, v15, v19);

  }
  else
  {

    ObjectType = swift_getObjectType();
    swift_deallocPartialClassInstance(v2, ObjectType, 113, 7);
    return 0;
  }
  return v16;
}

unint64_t sub_10005A930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9020;
  if (!qword_1009E9020)
  {
    v1 = objc_opt_self(NSString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009E9020);
  }
  return result;
}

Swift::Void __swiftcall RootBarItem.encode(with:)(NSCoder with)
{
  uint64_t v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  NSString v8;
  NSString v9;
  NSString v10;
  NSString v11;
  NSString v12;
  NSString v13;
  NSString v14;
  NSString v15;
  id v16;

  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v3, v4);

  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR___BKRootBarItem_isPlaceholder);
  v6 = String._bridgeToObjectiveC()();
  -[objc_class encodeBool:forKey:](with.super.isa, "encodeBool:forKey:", v5, v6);

  if (*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_url + 8))
    v7 = String._bridgeToObjectiveC()();
  else
    v7 = 0;
  v8 = String._bridgeToObjectiveC()();
  -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v7, v8);
  swift_unknownObjectRelease(v7);

  if (*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_titleOverride + 8))
    v9 = String._bridgeToObjectiveC()();
  else
    v9 = 0;
  v10 = String._bridgeToObjectiveC()();
  -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v9, v10);
  swift_unknownObjectRelease(v9);

  if (*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_iconNameOverride + 8))
    v11 = String._bridgeToObjectiveC()();
  else
    v11 = 0;
  v12 = String._bridgeToObjectiveC()();
  -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v11, v12);
  swift_unknownObjectRelease(v11);

  if (*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_selectedIconNameOverride + 8))
    v13 = String._bridgeToObjectiveC()();
  else
    v13 = 0;
  v14 = String._bridgeToObjectiveC()();
  -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v13, v14);
  swift_unknownObjectRelease(v13);

  if (*(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_countryCode + 8))
    v15 = String._bridgeToObjectiveC()();
  else
    v15 = 0;
  v16 = String._bridgeToObjectiveC()();
  -[objc_class encodeObject:forKey:](with.super.isa, "encodeObject:forKey:", v15, v16);
  swift_unknownObjectRelease(v15);

}

uint64_t type metadata accessor for RootBarStandardItemsManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EE558;
  if (!qword_1009EE558)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RootBarStandardItemsManager);
  return result;
}

uint64_t type metadata accessor for EngagementManagerMetadata(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F1D28;
  if (!qword_1009F1D28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EngagementManagerMetadata);
  return result;
}

uint64_t sub_10005AF38(uint64_t a1)
{
  void *v2;
  void *v3;

  kdebug_trace(725353712, 86, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  objc_msgSend(v2, "loadCoreData");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sharedAnnotationProvider"));
  objc_msgSend(v3, "upgradeAnnotationsIfNeeded");

  return kdebug_trace(725353712, 87, 0, 0, 0);
}

void sub_10005B4EC(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[BCRCDataContainer defaultContainer](BCRCDataContainer, "defaultContainer"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "treatmentData"));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "analyticsController"));
  objc_msgSend(v3, "setTreatmentData:", v2);

}

void sub_10005B828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005C3A4(id a1)
{
  void *v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[JSAStore sharedInstance](JSAStore, "sharedInstance"));
  objc_msgSend(v1, "addObserver:", v3);

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSAAccountController sharedController](JSAAccountController, "sharedController"));
  objc_msgSend(v2, "addObserver:", v3);

}

void sub_10005D9A0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[5];
  uint64_t v6;

  v1 = objc_msgSend((id)objc_opt_self(BKNotificationManager), "sharedInstance");
  v2 = swift_allocObject(&unk_1008FDCD0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v5[4] = sub_10032E9F8;
  v6 = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10004DCB4;
  v5[3] = &unk_1008FDF90;
  v3 = _Block_copy(v5);
  swift_release(v6);
  objc_msgSend(v1, "getAuthorizationStatusWithCompletion:", v3);
  _Block_release(v3);

  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v4, "addObserver:selector:name:object:", v0, "userNotificationSettingsDidChange", CFSTR("UNUserNotificationCenterDidChangeSettings"), 0);

}

id PersonalizationEventProcessor.process<A>(processEvent:)(uint64_t a1)
{
  return PersonalizationEventDonor.process<A>(processEvent:)(a1);
}

id PersonalizationEventDonor.process<A>(processEvent:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t (**v27)(char *, _QWORD, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  Class isa;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (**v66)(char *, _QWORD, uint64_t);
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  unint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  int v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  char v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  id result;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  BOOL v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  id v167;
  char *v168;
  char *v169;
  char *v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (**v184)(char *, _QWORD, uint64_t);
  uint64_t v185;
  unint64_t v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;

  v2 = v1;
  v4 = type metadata accessor for ProcessEvent(0);
  v184 = *(uint64_t (***)(char *, _QWORD, uint64_t))(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v176 = (char *)&v157 - v8;
  v9 = type metadata accessor for Logger(0);
  v182 = *(_QWORD *)(v9 - 8);
  v183 = v9;
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v157 - v14;
  __chkstk_darwin(v13);
  v175 = (char *)&v157 - v16;
  v173 = type metadata accessor for Date(0);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v174 = (char *)&v157 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (void *)ProcessEvent.json.getter(v4);
  v19 = dispatch thunk of JSON.toData(options:)(8);
  v180 = 0;
  v181 = a1;
  v28 = v19;
  v30 = v29;

  v31 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v189 = 0;
  v33 = objc_msgSend(v31, "JSONObjectWithData:options:error:", isa, 0, &v189);

  v34 = v189;
  if (v33)
  {
    v35 = (id)v189;
    _bridgeAnyObjectToAny(_:)(v33);
    swift_unknownObjectRelease(v33);
    v36 = sub_10004CFD4(&qword_1009D3090);
    if (swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v36, 6))
      v37 = v187;
    else
      v37 = sub_10003FB0C((uint64_t)_swiftEmptyArrayStorage);
    sub_10005EE1C(v28, v30);
    v25 = v181;
    v27 = v184;
    v26 = (_QWORD *)v37;
  }
  else
  {
    v38 = (id)v189;
    v39 = _convertNSErrorToError(_:)(v34);

    swift_willThrow(v40);
    v41 = sub_10005EE1C(v28, v30);
    v180 = 0;
    v25 = v181;
    v20 = static Logger.engagement.getter(v41);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Invalid event JSON", v23, 2u);
      v24 = v23;
      v25 = v181;
      swift_slowDealloc(v24, -1, -1);
    }
    swift_errorRelease(v39);

    (*(void (**)(char *, uint64_t))(v182 + 8))(v12, v183);
    v26 = _swiftEmptyDictionarySingleton;
    v27 = v184;
  }
  v42 = ProcessEvent.name.getter(v4);
  v44 = v43;
  v179 = v26;
  sub_10005EE60(v42, v43, (uint64_t)v26);
  swift_bridgeObjectRelease(v44);
  v45 = ProcessEvent.name.getter(v4);
  v47 = v46;
  v48 = *(_QWORD *)&v2[OBJC_IVAR___BKPersonalizationEventDonor_config];
  if (*(_QWORD *)(v48 + 16))
  {
    v49 = v45;
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR___BKPersonalizationEventDonor_config]);
    v50 = sub_10004CE80(v49, v47);
    if ((v51 & 1) != 0)
    {
      sub_10004CD0C(*(_QWORD *)(v48 + 56) + 32 * v50, (uint64_t)&v189);
    }
    else
    {
      v189 = 0u;
      v190 = 0u;
    }
    swift_bridgeObjectRelease(v47);
    v52 = v48;
  }
  else
  {
    v189 = 0u;
    v190 = 0u;
    v52 = v46;
  }
  swift_bridgeObjectRelease(v52);
  if (!*((_QWORD *)&v190 + 1))
    goto LABEL_114;
  v53 = sub_10004CFD4(&qword_1009D3090);
  if ((swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v53, 6) & 1) == 0)
  {
LABEL_115:
    v152 = (uint64_t)v179;
    return (id)swift_bridgeObjectRelease(v152);
  }
  v54 = v187;
  if (!*(_QWORD *)(v187 + 16)
    || (v55 = sub_10004CE80(0xD000000000000013, 0x80000001007C8DC0), (v56 & 1) == 0)
    || (sub_10004CD0C(*(_QWORD *)(v54 + 56) + 32 * v55, (uint64_t)&v189),
        (swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
LABEL_30:
    if (!*(_QWORD *)(v54 + 16))
      goto LABEL_34;
    goto LABEL_31;
  }
  v57 = *((_QWORD *)&v187 + 1);
  if (!*(_QWORD *)(v54 + 16)
    || (v58 = v187, v59 = sub_10004CE80(0x746E656D75677261, 0xE900000000000073), (v60 & 1) == 0)
    || (sub_10004CD0C(*(_QWORD *)(v54 + 56) + 32 * v59, (uint64_t)&v189),
        v61 = sub_10004CFD4(&qword_1009E2888),
        (swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v61, 6) & 1) == 0))
  {
    swift_bridgeObjectRelease(v57);
    goto LABEL_30;
  }
  v178 = v187;
  v62 = objc_msgSend(v2, "eventConfigurations");
  v63 = type metadata accessor for BasePropertyConfiguration(0);
  v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v63);

  swift_bridgeObjectRetain(v57);
  v65 = v180;
  v66 = (uint64_t (**)(char *, _QWORD, uint64_t))sub_100422D14(v64, v58, v57);
  v180 = v65;
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(v57);
  if (v66)
  {
    v184 = v66;
    v67 = v178;
    if (*(_QWORD *)(v54 + 16))
    {
      v68 = sub_10004CE80(0x72416F6475657370, 0xEF73746E656D7567);
      v69 = (uint64_t)v179;
      if ((v70 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(v54 + 56) + 32 * v68, (uint64_t)&v189);
      }
      else
      {
        v189 = 0u;
        v190 = 0u;
      }
    }
    else
    {
      v189 = 0u;
      v190 = 0u;
      v69 = (uint64_t)v179;
    }
    swift_bridgeObjectRelease(v54);
    if (*((_QWORD *)&v190 + 1))
    {
      v153 = sub_10004CFD4(&qword_1009E2890);
      if (swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v153, 6))
        v154 = v187;
      else
        v154 = 0;
    }
    else
    {
      sub_100010960((uint64_t)&v189, (uint64_t *)&unk_1009D04E0);
      v154 = 0;
    }
    v155 = (uint64_t)v174;
    ProcessEvent.nonJitteredEventTimestamp.getter(v4);
    v156 = v184;
    sub_10041EBC4(v69, v155, v58, v57, v67, v154, v184);
    swift_bridgeObjectRelease(v69);

    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v57);
    swift_bridgeObjectRelease(v154);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v172 + 8))(v155, v173);
  }
  swift_bridgeObjectRelease(v57);
  swift_bridgeObjectRelease(v178);
  v25 = v181;
  v27 = v184;
  if (!*(_QWORD *)(v54 + 16))
    goto LABEL_34;
LABEL_31:
  v71 = sub_10004CE80(1702060387, 0xE400000000000000);
  if ((v72 & 1) != 0)
  {
    sub_10004CD0C(*(_QWORD *)(v54 + 56) + 32 * v71, (uint64_t)&v189);
    goto LABEL_35;
  }
LABEL_34:
  v189 = 0u;
  v190 = 0u;
LABEL_35:
  swift_bridgeObjectRelease(v54);
  if (!*((_QWORD *)&v190 + 1))
  {
LABEL_114:
    swift_bridgeObjectRelease(v179);
    return (id)sub_100010960((uint64_t)&v189, (uint64_t *)&unk_1009D04E0);
  }
  v73 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  v74 = swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v73, 6);
  if ((v74 & 1) == 0)
    goto LABEL_115;
  v76 = v187;
  v178 = *(_QWORD *)(v187 + 16);
  if (!v178)
  {
LABEL_118:
    swift_bridgeObjectRelease(v179);
    v152 = v76;
    return (id)swift_bridgeObjectRelease(v152);
  }
  v167 = v2;
  v77 = 0;
  v177 = v187 + 32;
  *(_QWORD *)&v75 = 136315138;
  v171 = v75;
  v170 = (char *)&type metadata for Any + 8;
  v164 = 0x80000001007C8DC0;
  v169 = v7;
  v168 = v15;
  while (1)
  {
    if (v77 >= *(_QWORD *)(v76 + 16))
      __break(1u);
    v78 = *(_QWORD *)(v177 + 8 * v77);
    if (!*(_QWORD *)(v78 + 16))
      goto LABEL_52;
    swift_bridgeObjectRetain(*(_QWORD *)(v177 + 8 * v77));
    v79 = sub_10004CE80(0x61567265746C6966, 0xEC0000007365756CLL);
    if ((v80 & 1) == 0
      || (sub_10004CD0C(*(_QWORD *)(v78 + 56) + 32 * v79, (uint64_t)&v189),
          v81 = sub_10004CFD4((uint64_t *)&unk_1009DBB30),
          (swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v81, 6) & 1) == 0))
    {
      v74 = swift_bridgeObjectRelease(v78);
LABEL_52:
      static Logger.engagement.getter(v74);
      v90 = v27[2](v7, v25, v4);
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.error.getter(v91);
      if (os_log_type_enabled(v91, v92))
      {
        v93 = swift_slowAlloc(12, -1);
        v94 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v189 = v94;
        *(_DWORD *)v93 = v171;
        v95 = ProcessEvent.name.getter(v4);
        v97 = v96;
        *(_QWORD *)(v93 + 4) = sub_100040F58(v95, v96, (uint64_t *)&v189);
        swift_bridgeObjectRelease(v97);
        ((void (*)(char *, uint64_t))v184[1])(v7, v4);
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Filter values for case in event %s missing", (uint8_t *)v93, 0xCu);
        swift_arrayDestroy(v94, 1, v170);
        v98 = v94;
        v25 = v181;
        swift_slowDealloc(v98, -1, -1);
        v99 = v93;
        v27 = v184;
        swift_slowDealloc(v99, -1, -1);
      }
      else
      {
        ((void (*)(char *, uint64_t))v27[1])(v7, v4);
      }

      v74 = (*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v15, v183);
      goto LABEL_41;
    }
    v82 = v187;
    if (!*(_QWORD *)(v78 + 16)
      || (v83 = sub_10004CE80(0x61507265746C6966, 0xEA00000000006874), (v84 & 1) == 0)
      || (sub_10004CD0C(*(_QWORD *)(v78 + 56) + 32 * v83, (uint64_t)&v189),
          v85 = sub_10004CFD4((uint64_t *)&unk_1009E8850),
          (swift_dynamicCast(&v187, &v189, (char *)&type metadata for Any + 8, v85, 6) & 1) == 0))
    {
      swift_bridgeObjectRelease(v82);
      v100 = swift_bridgeObjectRelease(v78);
      v101 = v176;
      v102 = v175;
      static Logger.engagement.getter(v100);
      v103 = v27[2](v101, v25, v4);
      v104 = Logger.logObject.getter(v103);
      v105 = static os_log_type_t.error.getter(v104);
      if (os_log_type_enabled(v104, v105))
      {
        v106 = swift_slowAlloc(12, -1);
        v107 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v189 = v107;
        *(_DWORD *)v106 = v171;
        v108 = ProcessEvent.name.getter(v4);
        v110 = v109;
        *(_QWORD *)(v106 + 4) = sub_100040F58(v108, v109, (uint64_t *)&v189);
        swift_bridgeObjectRelease(v110);
        ((void (*)(char *, uint64_t))v184[1])(v101, v4);
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "Filter path components for case in event %s missing or not strings", (uint8_t *)v106, 0xCu);
        swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
        v111 = v107;
        v25 = v181;
        swift_slowDealloc(v111, -1, -1);
        v112 = v106;
        v27 = v184;
        swift_slowDealloc(v112, -1, -1);
      }
      else
      {
        ((void (*)(char *, uint64_t))v27[1])(v101, v4);
      }

      v74 = (*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v102, v183);
      v7 = v169;
      v15 = v168;
      goto LABEL_41;
    }
    v166 = v82;
    v86 = (_QWORD *)v187;
    v165 = v187;
    v87 = (uint64_t)v179;
    swift_bridgeObjectRetain(v179);
    v89 = PersonalizationEventDonor.dictPathValues(_:path:)(v88, v86);
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease(v165);
    if (v89[2])
    {
      sub_10004CD0C((uint64_t)(v89 + 4), (uint64_t)&v187);
    }
    else
    {
      v187 = 0u;
      v188 = 0u;
    }
    swift_bridgeObjectRelease(v89);
    v113 = v166;
    if (*((_QWORD *)&v188 + 1))
      break;
    swift_bridgeObjectRelease(v166);
    swift_bridgeObjectRelease(v78);
    v74 = sub_100010960((uint64_t)&v187, (uint64_t *)&unk_1009D04E0);
LABEL_41:
    if (++v77 == v178)
      goto LABEL_118;
  }
  sub_10004CFC4(&v187, &v189);
  if (!*(_QWORD *)(v78 + 16))
    goto LABEL_77;
  v114 = sub_10004CE80(0xD000000000000013, v164);
  if ((v115 & 1) == 0)
    goto LABEL_77;
  sub_10004CD0C(*(_QWORD *)(v78 + 56) + 32 * v114, (uint64_t)&v187);
  if ((swift_dynamicCast(&v185, &v187, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_77;
  v116 = v186;
  if (!*(_QWORD *)(v78 + 16)
    || (v163 = v185,
        v165 = v186,
        v117 = sub_10004CE80(0x746E656D75677261, 0xE900000000000073),
        v116 = v165,
        (v118 & 1) == 0))
  {
    swift_bridgeObjectRelease(v113);
    swift_bridgeObjectRelease(v78);
    v128 = v116;
LABEL_78:
    swift_bridgeObjectRelease(v128);
LABEL_79:
    v74 = _s5Books15CurrentPageViewVwxx_0(&v189);
    goto LABEL_41;
  }
  sub_10004CD0C(*(_QWORD *)(v78 + 56) + 32 * v117, (uint64_t)&v187);
  v119 = sub_10004CFD4(&qword_1009E2888);
  if ((swift_dynamicCast(&v185, &v187, (char *)&type metadata for Any + 8, v119, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v116);
LABEL_77:
    swift_bridgeObjectRelease(v113);
    v128 = v78;
    goto LABEL_78;
  }
  v159 = v185;
  v120 = objc_msgSend(v167, "eventConfigurations");
  v121 = type metadata accessor for BasePropertyConfiguration(0);
  v162 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v120, v121);

  v122 = v162;
  if ((unint64_t)v162 >> 62)
  {
    v151 = (void *)(v162 & 0xFFFFFFFFFFFFFF8);
    if (v162 < 0)
      v151 = (void *)v162;
    v161 = v151;
    swift_bridgeObjectRetain(v162);
    v160 = _CocoaArrayWrapper.endIndex.getter(v161);
  }
  else
  {
    v160 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v162);
  }
  if (!v160)
    goto LABEL_107;
  v158 = v122 & 0xC000000000000001;
  if ((v122 & 0xC000000000000001) != 0)
    v123 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v122);
  else
    v123 = *(id *)(v122 + 32);
  v161 = v123;
  v124 = BasePropertyConfiguration.eventName.getter(v123);
  v126 = v125;
  if (v124 == v163 && v125 == v165)
  {
LABEL_73:
    v127 = v162;
    swift_bridgeObjectRelease(v162);
    v160 = v165;
LABEL_83:
    swift_bridgeObjectRelease(v127);
    swift_bridgeObjectRelease(v160);
    if (*(_QWORD *)(v78 + 16) && (v130 = sub_10004CE80(0x72416F6475657370, 0xEF73746E656D7567), (v131 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v78 + 56) + 32 * v130, (uint64_t)&v187);
    }
    else
    {
      v187 = 0u;
      v188 = 0u;
    }
    swift_bridgeObjectRelease(v78);
    if (*((_QWORD *)&v188 + 1))
    {
      v132 = sub_10004CFD4(&qword_1009E2890);
      v133 = swift_dynamicCast(&v185, &v187, (char *)&type metadata for Any + 8, v132, 6);
      v134 = v185;
      if (!v133)
        v134 = 0;
      v166 = v134;
    }
    else
    {
      sub_100010960((uint64_t)&v187, (uint64_t *)&unk_1009D04E0);
      v166 = 0;
    }
    v135 = ProcessEvent.name.getter(v4);
    v137 = v136;
    v138 = _s5Books25PersonalizationEventDonorC5value_19matchesFilterValues05debugC4NameSbyp_SayypGSSSgtF_0((uint64_t)&v189, v113, v135, v136);
    swift_bridgeObjectRelease(v137);
    swift_bridgeObjectRelease(v113);
    if ((v138 & 1) == 0)
    {
      _s5Books15CurrentPageViewVwxx_0(&v189);
      swift_bridgeObjectRelease(v159);
      swift_bridgeObjectRelease(v165);

      v74 = swift_bridgeObjectRelease(v166);
      goto LABEL_41;
    }
    v139 = v174;
    ProcessEvent.nonJitteredEventTimestamp.getter(v4);
    v140 = (uint64_t)v139;
    v141 = v159;
    v142 = v161;
    sub_10041EBC4((uint64_t)v179, v140, v163, v165, v159, v166, v161);

    swift_bridgeObjectRelease(v141);
    swift_bridgeObjectRelease(v165);
    swift_bridgeObjectRelease(v166);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v174, v173);
    goto LABEL_79;
  }
  v129 = _stringCompareWithSmolCheck(_:_:expecting:)(v124, v125, v163, v165, 0);
  swift_bridgeObjectRelease(v126);
  if ((v129 & 1) != 0)
  {
    v127 = v162;
    v160 = v162;
LABEL_82:
    v113 = v166;
    goto LABEL_83;
  }

  if (v160 == 1)
  {
    v113 = v166;
LABEL_107:
    swift_bridgeObjectRelease_n(v162, 2);
    _s5Books15CurrentPageViewVwxx_0(&v189);
    swift_bridgeObjectRelease(v159);
    swift_bridgeObjectRelease(v165);
    swift_bridgeObjectRelease(v113);
    v74 = swift_bridgeObjectRelease(v78);
    v25 = v181;
    goto LABEL_41;
  }
  v143 = 5;
  while (1)
  {
    result = v158
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v143 - 4, v162)
           : *(id *)(v162 + 8 * v143);
    v145 = v143 - 3;
    if (__OFADD__(v143 - 4, 1))
      break;
    v161 = result;
    v146 = BasePropertyConfiguration.eventName.getter(result);
    v148 = v147;
    if (v146 == v163 && v147 == v165)
    {
      v25 = v181;
      v27 = v184;
      v113 = v166;
      goto LABEL_73;
    }
    v149 = _stringCompareWithSmolCheck(_:_:expecting:)(v146, v147, v163, v165, 0);
    swift_bridgeObjectRelease(v148);
    if ((v149 & 1) != 0)
    {
      v127 = v162;
      v160 = v162;
      v25 = v181;
      v27 = v184;
      goto LABEL_82;
    }

    ++v143;
    v150 = v145 == v160;
    v27 = v184;
    v113 = v166;
    if (v150)
      goto LABEL_107;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005EE1C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10005EE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _BYTE v20[24];

  v6 = sub_10005F0C4(a3);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  if ((a1 != 0xD000000000000014 || a2 != 0x80000001007C9060)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000014, 0x80000001007C9060, 0) & 1) == 0)
  {
    if (a1 == 0xD000000000000017 && a2 == 0x80000001007C9080
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000017, 0x80000001007C9080, 0) & 1) != 0
      || (a1 != 0xD000000000000014 || a2 != 0x80000001007C90A0)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000014, 0x80000001007C90A0, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v8);
    }
    else if (v8)
    {
      if (v12)
        goto LABEL_6;
      goto LABEL_16;
    }
    return swift_bridgeObjectRelease(v12);
  }
  if (!v8)
    return swift_bridgeObjectRelease(v12);
  if (v12)
  {
LABEL_6:
    swift_bridgeObjectRetain(v8);
    if ((sub_10042290C(v10, v12, v6, v8) & 1) != 0)
    {
      swift_bridgeObjectRelease(v12);
      return swift_bridgeObjectRelease_n(v8, 2);
    }
    v17 = (_QWORD *)(v3 + OBJC_IVAR___BKPersonalizationEventDonor_sectionLinks);
    swift_beginAccess(v3 + OBJC_IVAR___BKPersonalizationEventDonor_sectionLinks, v20, 33, 0);
    swift_bridgeObjectRetain(v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
    v19 = *v17;
    *v17 = 0x8000000000000000;
    sub_1002C38D0(v10, v12, v6, v8, isUniquelyReferenced_nonNull_native);
    v16 = *v17;
    *v17 = v19;
    goto LABEL_20;
  }
LABEL_16:
  v14 = v3 + OBJC_IVAR___BKPersonalizationEventDonor_sectionLinks;
  swift_bridgeObjectRetain(v8);
  swift_beginAccess(v14, v20, 33, 0);
  sub_1002BD840(v6, v8);
  v16 = v15;
LABEL_20:
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v16);
  swift_endAccess(v20);
  swift_bridgeObjectRelease(v12);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_10005F0C4(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;

  if (!*(_QWORD *)(a1 + 16)
    || (v2 = sub_10004CE80(0x446E6F6974636573, 0xEB00000000617461), (v3 & 1) == 0)
    || (sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v22),
        v4 = sub_10004CFD4(&qword_1009D3090),
        (swift_dynamicCast(&v26, &v22, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0))
  {
    v24 = 0u;
    v25 = 0u;
LABEL_8:
    sub_100010960((uint64_t)&v24, (uint64_t *)&unk_1009D04E0);
LABEL_9:
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v27 = 0;
    goto LABEL_10;
  }
  v5 = v26;
  if (*(_QWORD *)(v26 + 16) && (v6 = sub_10004CE80(0x496E6F6974636573, 0xE900000000000044), (v7 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease(v5);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_8;
  if ((swift_dynamicCast(&v26, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_9;
  v8 = v27;
  if (v27)
  {
    v9 = v26;
    v10 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0)
      v10 = v26 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      swift_bridgeObjectRetain(v27);
      v10 = v8;
    }
    else
    {
      v9 = 0;
    }
  }
  else
  {
    v9 = 0;
    v10 = 0;
  }
LABEL_10:
  v26 = v9;
  v27 = v10;
  swift_bridgeObjectRelease(v8);
  if (!*(_QWORD *)(a1 + 16)
    || (v11 = sub_10004CE80(0x617461446B6E696CLL, 0xE800000000000000), (v12 & 1) == 0)
    || (sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)&v22),
        v13 = sub_10004CFD4(&qword_1009D3090),
        (swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0))
  {
    v24 = 0u;
    v25 = 0u;
LABEL_17:
    sub_100010960((uint64_t)&v24, (uint64_t *)&unk_1009D04E0);
LABEL_18:
    v17 = 0;
LABEL_19:
    v18 = 0;
    v19 = 0;
    goto LABEL_20;
  }
  v14 = v21;
  if (*(_QWORD *)(v21 + 16) && (v15 = sub_10004CE80(0xD000000000000011, 0x80000001007C9040), (v16 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease(v14);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_17;
  if ((swift_dynamicCast(&v22, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_18;
  v17 = v23;
  if (!v23)
    goto LABEL_19;
  v18 = v22;
  v19 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v19 = v22 & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    swift_bridgeObjectRetain(v23);
    v19 = v17;
  }
  else
  {
    v18 = 0;
  }
LABEL_20:
  v22 = v18;
  v23 = v19;
  swift_bridgeObjectRelease(v17);
  return v26;
}

uint64_t BKAppDelegate.serviceCenter.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(&unk_100A1E4FB, v16, 32, 0);
  v6 = objc_getAssociatedObject(v1, &unk_100A1E4FB);
  swift_endAccess(v16);
  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_10004C7B4((uint64_t)v16, (uint64_t)v17);
  if (v18)
  {
    v7 = type metadata accessor for ServiceCenter();
    v8 = swift_dynamicCast(&v15, v17, (char *)&type metadata for Any + 8, v7, 6);
    if ((v8 & 1) != 0)
      return v15;
    v14 = v3;
  }
  else
  {
    v14 = v3;
    v8 = sub_10004A7B8((uint64_t)v17);
  }
  if (!(id)BCIMLog(v8))
    __break(1u);
  v10 = Logger.init(_:)();
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "BKAppDelegate.serviceCenter hasn't been created.", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v5, v2);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ServiceCenter()
{
  return objc_opt_self(BKServiceCenter);
}

void sub_10005FBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005FEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Swift::Void __swiftcall BKAppDelegate.registerAppIntentsDependencies()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;

  v1 = v0;
  type metadata accessor for AppManager(0);
  v2 = objc_msgSend(v0, "sceneManager");
  v3 = objc_msgSend(v0, "appLaunchCoordinator");
  *((_QWORD *)&v18 + 1) = &type metadata for BooksIntentSceneConfigurator;
  v19 = sub_10006C254();
  *(_QWORD *)&v17 = v2;
  *((_QWORD *)&v17 + 1) = v3;
  static AppManager.sceneConfigurator.setter(&v17);
  type metadata accessor for AppDependencyManager(0);
  v4 = static AppDependencyManager.shared.getter();
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  v5 = swift_allocObject(&unk_100917F88, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v6 = v1;
  v7 = sub_10004CFD4(&qword_1009F0F18);
  AppDependencyManager.add<A>(key:dependency:)(&v17, sub_100605850, v5, v7);
  swift_release(v5);
  sub_100060240((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  v8 = swift_allocObject(&unk_100917FB0, 24, 7);
  *(_QWORD *)(v8 + 16) = v6;
  v9 = sub_1005A82AC();
  v10 = v6;
  AppDependencyManager.add<A>(key:dependency:)(&v17, sub_100605888, v8, v9);
  swift_release(v8);
  sub_100060240((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  v11 = swift_allocObject(&unk_100917FD8, 24, 7);
  *(_QWORD *)(v11 + 16) = v10;
  v12 = type metadata accessor for MenuController();
  v13 = v10;
  AppDependencyManager.add<A>(key:dependency:)(&v17, sub_100605894, v11, v12);
  swift_release(v11);
  sub_100060240((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  v14 = swift_allocObject(&unk_100918000, 24, 7);
  *(_QWORD *)(v14 + 16) = v13;
  v15 = v13;
  AppDependencyManager.add<A>(key:dependency:)(&v17, sub_100605950, v14, &type metadata for BooksAssetAppIntentsPerformer);
  swift_release(v14);
  sub_100060240((uint64_t)&v17);
  v16 = type metadata accessor for ContentSizeCategoryManager(0);
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  AppDependencyManager.add<A>(key:dependency:)(&v17, sub_100605958, 0, v16);
  swift_release(v4);
  sub_100060240((uint64_t)&v17);
}

uint64_t sub_100060240(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009EC670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void BKSharedWithYouProvider.update(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  _QWORD *v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31[96];
  _QWORD *v32;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = dispatch thunk of BSUISharedWithYouController.highlights.getter(v4);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)(v7 + 16);
    if (v9)
    {
      v29 = v0;
      v32 = _swiftEmptyArrayStorage;
      sub_100064514(0, v9, 0);
      v28 = v8;
      v10 = (void **)(v8 + 48);
      v30 = xmmword_10070FC00;
      do
      {
        v11 = (uint64_t)*(v10 - 2);
        v12 = (uint64_t)*(v10 - 1);
        v13 = *v10;
        v14 = sub_10004CFD4(&qword_1009ECA50);
        inited = swift_initStackObject(v14, v31);
        *(_OWORD *)(inited + 16) = v30;
        *(_QWORD *)(inited + 32) = 0x696669746E656469;
        *(_QWORD *)(inited + 40) = 0xEA00000000007265;
        *(_QWORD *)(inited + 48) = v11;
        *(_QWORD *)(inited + 56) = v12;
        *(_QWORD *)(inited + 64) = 0x656372756F736572;
        *(_QWORD *)(inited + 72) = 0xEB000000004C5255;
        swift_bridgeObjectRetain_n(v12, 2);
        v16 = v13;
        v17 = objc_msgSend(v16, "URL");
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

        v18 = URL.absoluteString.getter();
        v20 = v19;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        *(_QWORD *)(inited + 80) = v18;
        *(_QWORD *)(inited + 88) = v20;
        v21 = sub_1000316DC(inited);

        swift_bridgeObjectRelease(v12);
        v22 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
        {
          sub_100064514(0, v22[2] + 1, 1);
          v22 = v32;
        }
        v24 = v22[2];
        v23 = v22[3];
        if (v24 >= v23 >> 1)
        {
          sub_100064514(v23 > 1, v24 + 1, 1);
          v22 = v32;
        }
        v22[2] = v24 + 1;
        v22[v24 + 4] = v21;
        v10 += 3;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease(v28);
      v1 = v29;
    }
    else
    {
      swift_bridgeObjectRelease(v7);
      v22 = _swiftEmptyArrayStorage;
    }
    v25 = *(void **)(v1 + OBJC_IVAR____TtC5Books23BKSharedWithYouProvider_dynamicArray);
    v26 = sub_100024D14((uint64_t)v22, (uint64_t *)&unk_1009DD6C0);
    swift_bridgeObjectRelease(v22);
    sub_10004CFD4((uint64_t *)&unk_1009CEC70);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    objc_msgSend(v25, "updateArray:", isa);

  }
}

void sub_100061A3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

char *OfflineCacheLoadingController.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;

  v1 = sub_10004CFD4(&qword_1009E97C0);
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  __chkstk_darwin(v1);
  v36 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v36 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = sub_10004CFD4(&qword_1009E97C8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR___BKOfflineCacheLoadingController_cancellable] = 0;
  v16 = (objc_class *)type metadata accessor for OfflineCacheLoadingController();
  v40.receiver = v0;
  v40.super_class = v16;
  v17 = objc_msgSendSuper2(&v40, "init");
  v18 = (void *)objc_opt_self(NSNotificationCenter);
  v19 = (char *)v17;
  v20 = objc_msgSend(v18, "defaultCenter");
  v21 = type metadata accessor for OfflineCache(0);
  v22 = static OfflineCache.runFromCache.getter(v21);
  if ((v22 & 1) != 0)
  {
    NSNotificationCenter.publisher(for:object:)(BSUIFeedViewControllerDidDisappearNotification, 0);
    if (qword_1009CDCC0 != -1)
      swift_once(&qword_1009CDCC0, sub_100064C64);
    NSNotificationCenter.publisher(for:object:)(qword_100A1E348, 0);
    if (qword_1009CDCC8 != -1)
      swift_once(&qword_1009CDCC8, sub_100064C30);
    NSNotificationCenter.publisher(for:object:)(qword_100A1E350, 0);
    v23 = sub_100008C8C();
    Publishers.Merge3.init(_:_:_:)(v11, v9, v6, v3, v3, v3, v23, v23, v23);
    v24 = sub_100030B34(&qword_1009E97F0, &qword_1009E97C8, (uint64_t)&protocol conformance descriptor for Publishers.Merge3<A, B, C>);
    v25 = Publisher.eraseToAnyPublisher()(v12, v24);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    if ((static OfflineCache.generateCache.getter(v22) & 1) == 0)
    {

      v33 = 0;
      v25 = 0;
      goto LABEL_13;
    }
    NSNotificationCenter.publisher(for:object:)(UIApplicationDidEnterBackgroundNotification, 0);
    if (qword_1009CE7A8 != -1)
      swift_once(&qword_1009CE7A8, sub_1005195CC);
    NSNotificationCenter.publisher(for:object:)(qword_100A1EBE0, 0);
    v26 = sub_100008C8C();
    v27 = v36;
    Publishers.Merge.init(_:_:)(v11, v9, v3, v3, v26, v26);
    v28 = sub_100030B34(&qword_1009E97D8, &qword_1009E97C0, (uint64_t)&protocol conformance descriptor for Publishers.Merge<A, B>);
    v29 = v38;
    v25 = Publisher.eraseToAnyPublisher()(v38, v28);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v29);
  }
  v39 = v25;
  v30 = swift_allocObject(&unk_10090CEF0, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v19);
  swift_retain(v25);
  v31 = sub_10004CFD4(&qword_1009E97E0);
  v32 = sub_100030B34(&qword_1009E97E8, &qword_1009E97E0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v33 = Publisher<>.sink(receiveValue:)(sub_100519624, v30, v31, v32);
  swift_release(v30);

  swift_release(v39);
LABEL_13:
  v34 = *(_QWORD *)&v19[OBJC_IVAR___BKOfflineCacheLoadingController_cancellable];
  *(_QWORD *)&v19[OBJC_IVAR___BKOfflineCacheLoadingController_cancellable] = v33;
  swift_release(v25);
  swift_release(v34);
  return v19;
}

char *BookReaderInteractionCoordinator.init(window:)(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v54;
  objc_class *ObjectType;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD v59[3];
  objc_super v60;

  v2 = v1;
  v58 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_10004CFD4((uint64_t *)&unk_1009E91E0);
  v57 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E54D0);
  v56 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EF250);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR___BKBookReaderInteractionCoordinator_assetViewControllerTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKBookReaderInteractionCoordinator_appIntentsInfoTask] = 0;
  v13 = type metadata accessor for WindowAppIntentsAssetViewControllerTracker(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  v15 = v14 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker__viewController;
  v59[0] = 0;
  v16 = v2;
  v17 = sub_10004CFD4((uint64_t *)&unk_1009E54F0);
  Published.init(initialValue:)(v59, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_assetPresenterTask) = 0;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker_viewControllerTask) = 0;
  v18 = *(void **)(v14 + 16);
  *(_QWORD *)(v14 + 16) = 0;

  sub_100018708();
  *(_QWORD *)&v16[OBJC_IVAR___BKBookReaderInteractionCoordinator_assetViewControllerTracker] = v14;
  v19 = type metadata accessor for AppIntentsAssetViewControllerInfoTracker(0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  swift_unknownObjectWeakInit(v20 + 16, 0);
  v59[0] = 0;
  v21 = sub_10004CFD4((uint64_t *)&unk_1009E91D0);
  Published.init(initialValue:)(v59, v21);
  *(_QWORD *)(v20 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task) = 0;
  swift_unknownObjectWeakAssign(v20 + 16, 0);
  *(_QWORD *)&v16[OBJC_IVAR___BKBookReaderInteractionCoordinator_appIntentsInfoTracker] = v20;
  v22 = type metadata accessor for BookReaderInteractionManager();
  v23 = swift_allocObject(v22, 137, 7);
  v24 = swift_unknownObjectWeakInit(v23 + 16, 0);
  *(_QWORD *)(v23 + 24) = 0;
  *(_QWORD *)(v23 + 32) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  *(_OWORD *)(v23 + 72) = 0u;
  *(_OWORD *)(v23 + 88) = 0u;
  *(_OWORD *)(v23 + 104) = 0u;
  *(_OWORD *)(v23 + 120) = 0u;
  *(_BYTE *)(v23 + 136) = 0;
  swift_unknownObjectWeakAssign(v24, 0);
  v25 = *(void **)(v23 + 24);
  *(_QWORD *)(v23 + 24) = 0;

  v26 = *(_QWORD *)(v23 + 40);
  v27 = *(_QWORD *)(v23 + 48);
  v28 = *(_QWORD *)(v23 + 56);
  v29 = *(_QWORD *)(v23 + 64);
  v30 = *(_QWORD *)(v23 + 72);
  v31 = *(_QWORD *)(v23 + 80);
  v32 = *(_QWORD *)(v23 + 88);
  v33 = *(_QWORD *)(v23 + 96);
  v34 = *(_OWORD *)(v23 + 104);
  v35 = *(_QWORD *)(v23 + 120);
  v36 = *(_QWORD *)(v23 + 128);
  *(_BYTE *)(v23 + 136) = 0;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  *(_OWORD *)(v23 + 72) = 0u;
  *(_OWORD *)(v23 + 88) = 0u;
  *(_OWORD *)(v23 + 104) = 0u;
  *(_OWORD *)(v23 + 120) = 0u;
  sub_10006BAF8(v26, v27, v28, v29, v30, v31, v32, v33, v34, *((uint64_t *)&v34 + 1), v35, v36);
  sub_10001ACD4();
  sub_1000670A8(0, 0);
  *(_QWORD *)&v16[OBJC_IVAR___BKBookReaderInteractionCoordinator_interactionManager] = v23;

  v60.receiver = v16;
  v60.super_class = ObjectType;
  v37 = (char *)objc_msgSendSuper2(&v60, "init");
  v38 = OBJC_IVAR___BKBookReaderInteractionCoordinator_assetViewControllerTracker;
  swift_beginAccess(*(_QWORD *)&v37[OBJC_IVAR___BKBookReaderInteractionCoordinator_assetViewControllerTracker]+ OBJC_IVAR____TtC5Books42WindowAppIntentsAssetViewControllerTracker__viewController, v59, 33, 0);
  v39 = v37;
  Published.projectedValue.getter(v9);
  swift_endAccess(v59);
  v40 = swift_allocObject(&unk_100908EE0, 24, 7);
  swift_unknownObjectUnownedInit(v40 + 16, v39);
  v41 = sub_1000623A8((unint64_t *)&unk_1009E5510, (uint64_t *)&unk_1009E54D0);
  v42 = Publisher<>.sink(receiveValue:)(sub_1000669C4, v40, v6, v41);
  swift_release(v40);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v6);
  v43 = *(_QWORD *)&v39[OBJC_IVAR___BKBookReaderInteractionCoordinator_assetViewControllerTask];
  *(_QWORD *)&v39[OBJC_IVAR___BKBookReaderInteractionCoordinator_assetViewControllerTask] = v42;
  swift_release(v43);
  swift_beginAccess(*(_QWORD *)&v39[OBJC_IVAR___BKBookReaderInteractionCoordinator_appIntentsInfoTracker]+ OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker__appIntentsInfo, v59, 33, 0);
  v44 = sub_10004CFD4(&qword_1009DC2E8);
  Published.projectedValue.getter(v44);
  swift_endAccess(v59);
  v45 = swift_allocObject(&unk_100908EE0, 24, 7);
  swift_unknownObjectUnownedInit(v45 + 16, v39);
  v46 = sub_1000623A8(&qword_1009E5520, (uint64_t *)&unk_1009E91E0);
  v47 = Publisher<>.sink(receiveValue:)(sub_1000669BC, v45, v3, v46);
  swift_release(v45);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v3);
  v48 = *(_QWORD *)&v39[OBJC_IVAR___BKBookReaderInteractionCoordinator_appIntentsInfoTask];
  *(_QWORD *)&v39[OBJC_IVAR___BKBookReaderInteractionCoordinator_appIntentsInfoTask] = v47;
  swift_release(v48);
  v49 = *(_QWORD *)&v37[v38];
  v50 = *(void **)(v49 + 16);
  v51 = v58;
  *(_QWORD *)(v49 + 16) = v58;
  v52 = v51;
  sub_10001D394(v50);

  return v39;
}

uint64_t sub_1000623A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100030B74(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t WidgetService.setupService(libraryManager:onWidgetConfigurationChangeCallback:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  os_log_type_t v26;
  NSObject *v27;
  char *v28;
  uint8_t *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73[3];

  v4 = v3;
  v8 = sub_10004CFD4(&qword_1009EA020);
  __chkstk_darwin(v8);
  v67 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v66 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  __chkstk_darwin(v11);
  v60 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009DE7C0);
  v65 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v63 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009DE7C8);
  v70 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = *(_QWORD *)&v3[OBJC_IVAR___BKWidgetService__setupState];
  MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
  v17 = *(void **)&v3[OBJC_IVAR___BKWidgetService_libraryManager];
  *(_QWORD *)&v4[OBJC_IVAR___BKWidgetService_libraryManager] = a1;
  v18 = a1;

  v19 = &v4[OBJC_IVAR___BKWidgetService_onWidgetConfigurationChangeCallback];
  v20 = *(_QWORD *)&v4[OBJC_IVAR___BKWidgetService_onWidgetConfigurationChangeCallback];
  v21 = *(_QWORD *)&v4[OBJC_IVAR___BKWidgetService_onWidgetConfigurationChangeCallback + 8];
  *(_QWORD *)v19 = a2;
  *((_QWORD *)v19 + 1) = a3;
  swift_retain(a3);
  sub_10002AD00(v20, v21);
  v22 = objc_msgSend(objc_allocWithZone((Class)BDSBookWidgetInfoManager), "init");
  v23 = OBJC_IVAR___BKWidgetService_widgetInfoManager;
  v24 = *(void **)&v4[OBJC_IVAR___BKWidgetService_widgetInfoManager];
  *(_QWORD *)&v4[OBJC_IVAR___BKWidgetService_widgetInfoManager] = v22;

  v26 = static os_log_type_t.default.getter(v25);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v27 = static OS_os_log.widget.getter();
  if (os_log_type_enabled(v27, v26))
  {
    v28 = v4;
    v59 = v16;
    v29 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = (void *)swift_slowAlloc(32, -1);
    *(_DWORD *)v29 = 136315138;
    v72 = *(id *)&v4[v23];
    v73[0] = v30;
    v31 = v72;
    v32 = sub_10004CFD4(&qword_1009DE828);
    v33 = String.init<A>(describing:)(&v72, v32);
    v35 = v34;
    v72 = (id)sub_100040F58(v33, v34, (uint64_t *)v73);
    v16 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73, v29 + 4, v29 + 12);

    swift_bridgeObjectRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v27, v26, "WidgetService: set widgetInfoManager %s", v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }

  v36 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "shared");
  objc_msgSend(v36, "addObserver:", v4);

  v37 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v38 = v60;
  NSNotificationCenter.publisher(for:object:)(CFSTR("BKRecentBooksProviderDidChangeNotification"), 0);

  v39 = v64;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(500);
  v73[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v40 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v41 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v67, 1, 1, v40);
  v42 = sub_100009E04(0, (unint64_t *)&unk_1009DE7F0, NSRunLoop_ptr);
  v43 = sub_100008C8C();
  v44 = sub_100064A7C();
  v45 = v62;
  v46 = v63;
  Publisher.debounce<A>(for:scheduler:options:)(v39, v73, v41, v62, v42, v43, v44);
  sub_100010960(v41, &qword_1009EA020);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v69);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v45);
  v47 = sub_10004CFD4((uint64_t *)&unk_1009E9FC0);
  v48 = sub_100030B34(&qword_1009DE810, &qword_1009DE7C0, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v49 = v68;
  Publisher.compactMap<A>(_:)(sub_10000C150, 0, v68, v47, v48);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v49);
  v50 = swift_allocObject(&unk_100900488, 24, 7);
  swift_unknownObjectWeakInit(v50 + 16, v4);
  v51 = sub_100030B34(&qword_1009DE818, &qword_1009DE7C8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  v52 = Publisher<>.sink(receiveValue:)(sub_10038EF8C, v50, v14, v51);
  swift_release(v50);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v16, v14);
  v53 = &v4[OBJC_IVAR___BKWidgetService_cancellables];
  swift_beginAccess(&v4[OBJC_IVAR___BKWidgetService_cancellables], v73, 33, 0);
  AnyCancellable.store(in:)(v53);
  swift_endAccess(v73);
  swift_release(v52);
  v54 = swift_allocObject(&unk_1009004B0, 24, 7);
  *(_QWORD *)(v54 + 16) = v4;
  type metadata accessor for WidgetCenter(0);
  v55 = static WidgetCenter.shared.getter(v4);
  v56 = swift_allocObject(&unk_1009004D8, 32, 7);
  *(_QWORD *)(v56 + 16) = sub_10006B724;
  *(_QWORD *)(v56 + 24) = v54;
  swift_retain(v54);
  dispatch thunk of WidgetCenter.getCurrentConfigurations(_:)(sub_10038EFDC, v56);
  swift_release(v54);
  swift_release(v55);
  swift_release(v56);
  return MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
}

uint64_t EngagementManager.setup(personalizationEventDonor:)(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  void **v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  _BYTE *v29;
  void (*v30)(_BYTE *, uint64_t);
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE v41[48];
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  uint64_t v50;
  uint64_t v51[5];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v48 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DispatchQoS(0);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  __chkstk_darwin(v8);
  v45 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = type metadata accessor for DispatchTime(0);
  v42 = *(_QWORD *)(v44 - 8);
  v10 = __chkstk_darwin(v44);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v43 = &v41[-v13];
  v14 = *(id *)&v1[OBJC_IVAR___BKEngagementManager_manager];
  Manager.register(donor:)(a1);

  v15 = objc_allocWithZone((Class)type metadata accessor for EngagementManagerAnalyticsHelper());
  v16 = v2;
  v17 = a1;
  v18 = sub_1000342B8((uint64_t)v16, v17);

  v19 = (void **)&v16[OBJC_IVAR___BKEngagementManager_analyticsHelper];
  swift_beginAccess(&v16[OBJC_IVAR___BKEngagementManager_analyticsHelper], v51, 1, 0);
  v20 = *v19;
  *v19 = v18;

  v21 = OBJC_IVAR___BKEngagementManager_remoteConfigurationContainer;
  v22 = *(id *)&v16[OBJC_IVAR___BKEngagementManager_remoteConfigurationContainer];
  sub_10001B274((uint64_t)v22, 0);

  v23 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v24 = (void *)static NSNotificationName.rcDataContainerConfigDidChange.getter(v23);
  objc_msgSend(v23, "addObserver:selector:name:object:", v16, "onConfigurationChange:", v24, *(_QWORD *)&v16[v21]);

  v25 = sub_100009E04(0, (unint64_t *)&unk_1009D9F20, NSDistributedNotificationCenter_ptr);
  v26 = objc_msgSend((id)swift_getObjCClassFromMetadata(v25), "defaultCenter");
  objc_msgSend(v26, "addObserver:selector:name:object:", v16, "onCloudUpdate:", BDSSecureEngagementManagerChanged, 0);

  v27 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v28 = (void *)static OS_dispatch_queue.main.getter(v27);
  static DispatchTime.now()();
  v29 = v43;
  + infix(_:_:)(v12, 60.0);
  v30 = *(void (**)(_BYTE *, uint64_t))(v42 + 8);
  v31 = v12;
  v32 = v44;
  v30(v31, v44);
  v33 = swift_allocObject(&unk_1008FC2B8, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, v16);
  aBlock[4] = sub_100315DF4;
  v50 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1008FC2D0;
  v34 = _Block_copy(aBlock);
  v35 = swift_release(v50);
  v36 = v45;
  static DispatchQoS.unspecified.getter(v35);
  aBlock[0] = _swiftEmptyArrayStorage;
  v37 = sub_10003E1A0((unint64_t *)&qword_1009D48E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v38 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v39 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v38, v39, v5, v37);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v29, v36, v7, v34);
  _Block_release(v34);

  (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v7, v5);
  (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v36, v47);
  return ((uint64_t (*)(_BYTE *, uint64_t))v30)(v29, v32);
}

const char *sub_100063664()
{
  return "BKReadingGoalsShouldClearDataKey";
}

id sub_100063710()
{
  if (qword_1009F5100 != -1)
    dispatch_once(&qword_1009F5100, &stru_1008EC400);
  return (id)qword_1009F50F8;
}

uint64_t sub_100063750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_100063778(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKUbiquityOptInController");
  v2 = (void *)qword_1009F50E8;
  qword_1009F50E8 = (uint64_t)v1;

}

void sub_1000637A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibraryAssetIsNewManager");
  v2 = (void *)qword_1009F50F8;
  qword_1009F50F8 = (uint64_t)v1;

}

void sub_1000637D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKAppDelegate");
  v2 = (void *)qword_1009F5240;
  qword_1009F5240 = (uint64_t)v1;

}

void sub_100063808(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKRecentBookOpenResultTracker");
  v2 = (void *)qword_1009F4F10;
  qword_1009F4F10 = (uint64_t)v1;

}

void sub_100063838(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibraryProvider");
  v2 = (void *)qword_1009F4FA8;
  qword_1009F4FA8 = (uint64_t)v1;

}

uint64_t sub_100063868(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100063878(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 136), "addObject:", *(_QWORD *)(a1 + 40));
}

uint64_t sub_100063884(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 24) == 0;
  return result;
}

void sub_1000638A0(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v3, "updateCloseTypeState:", objc_msgSend(v2, "closeTypeForSceneController:", v3));

}

uint64_t sub_1000638E8(uint64_t result, void *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 32);
  if (v2)
    return (*(uint64_t (**)(uint64_t, id))(v2 + 16))(v2, objc_msgSend(a2, "authorizationStatus"));
  return result;
}

id sub_100063928(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setPushLargeCoverForNextHandleURLBookOpen:", 0);
}

id sub_100063938(uint64_t a1)
{
  +[AEAssetEngine setAppInfoMgr:](AEAssetEngine, "setAppInfoMgr:", *(_QWORD *)(a1 + 32));
  return +[AEAssetEngine setStoreMgr:](AEAssetEngine, "setStoreMgr:", *(_QWORD *)(a1 + 32));
}

void sub_10006396C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applicationDidBecomeFrontmost:", *(_QWORD *)(a1 + 32));

}

void sub_1000639A8(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(a1 + 32);
    v7 = WeakRetained;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "analyticsController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "mainLibrary"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "analyticsSessionAssertion"));
    objc_msgSend(v7, "startInitialAppStateQueryWithSessionStartTime:analyticsController:libraryAssetProvider:analyticsSessionAssertion:", v3, v4, v5, v6);

    WeakRetained = v7;
  }

}

uint64_t sub_100063A3C(uint64_t a1)
{
  kdebug_trace(725353712, 88, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "mergeSyncSidecar");
  return kdebug_trace(725353712, 89, 0, 0, 0);
}

void sub_100063A94(id a1)
{
  kdebug_trace(725353712, 84, 0, 0, 0);
  +[BLJaliscoDAAPClient workaround](BLJaliscoDAAPClient, "workaround");
  kdebug_trace(725353712, 85, 0, 0, 0);
}

uint64_t sub_100063AE4(uint64_t a1)
{
  kdebug_trace(725353712, 80, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "sq_kickoffFinishLaunching");
  return kdebug_trace(725353712, 81, 0, 0, 0);
}

id sub_100063B3C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "cleanupSnapshotManager");
}

void sub_100063B44(id a1)
{
  BKAppDelegate.enableMetricsInspectorOnDebugMode()();
  _objc_msgSend(+[BCAppKitBundleLoader appKitBundleClass](BCAppKitBundleLoader, "appKitBundleClass"), "setAllowsAutomaticWindowTabbing:", 0);
}

id sub_100063B68(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setStartupQueue:", 0);
}

uint64_t sub_100063B74(uint64_t a1)
{
  kdebug_trace(725353712, 96, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "_didFinishUpgradingWithOptions:", *(_QWORD *)(a1 + 40));
  return kdebug_trace(725353712, 97, 0, 0, 0);
}

void sub_100063BCC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_10006416C();
  sub_1000641D0((void *)&_mh_execute_header, v0, v1, "Siri authorization is denied", v2, v3, v4, v5, v6);
  sub_100064164();
}

void sub_100063BF8(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[BCBackgroundTaskAssertion sharedAssertion](BCBackgroundTaskAssertion, "sharedAssertion"));
  objc_msgSend(v1, "releaseAssertionForIdentifier:", CFSTR("kAppLaunchBackgroundTaskIdentifier"));

}

void sub_100063C34(id a1)
{
  BKLibraryDataSourceJaliscoDAAPClientProxy *v1;
  void *v2;

  v1 = objc_opt_new(BKLibraryDataSourceJaliscoDAAPClientProxy);
  v2 = (void *)qword_1009F5250;
  qword_1009F5250 = (uint64_t)v1;

}

void sub_100063C5C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  objc_msgSend(v1, "_showMainViewControllerOrWelcomeScreen");

}

void sub_100063C90(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BCBookReadingTimeTracker sharedInstance](BCBookReadingTimeTracker, "sharedInstance"));
  objc_msgSend(v2, "purgeRecentBooks");
  objc_msgSend(v2, "seedRecentBooksList:", *(_QWORD *)(a1 + 32));

}

void sub_100063CDC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coalescingJaliscoBlock"));
  objc_msgSend(v1, "signalWithCompletion:", &stru_1008EEF88);

}

void sub_100063D14(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  objc_msgSend(v2, "setObject:forKey:", v3, *(_QWORD *)(a1 + 40));

}

void sub_100063D68(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 24), *(id *)(a1 + 40));
}

void sub_100063D74(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsController"));
  objc_msgSend(v1, "refreshSessionDataIfActive");

}

id sub_100063DA4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_doInterruptReadAloud:", *(unsigned __int8 *)(a1 + 40));
}

id sub_100063DB4(uint64_t a1)
{
  id result;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  result = *(id *)(a1 + 32);
  if (result)
    return objc_msgSend(result, "setCompletion:", 0);
  return result;
}

void sub_100063DF4(id a1)
{
  id v1;
  void *v2;

  v1 = -[_BKLibraryProviderContext initSingleton]([_BKLibraryProviderContext alloc], "initSingleton");
  v2 = (void *)qword_1009F4FB8;
  qword_1009F4FB8 = (uint64_t)v1;

}

void sub_100063E20(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "clearWidgetImageCacheIfNeeded");

}

void sub_100063E4C(id a1)
{
  BKCoverResourceProvider *v1;
  void *v2;

  v1 = objc_opt_new(BKCoverResourceProvider);
  v2 = (void *)qword_1009F5018;
  qword_1009F5018 = (uint64_t)v1;

}

void sub_100063E74(id a1)
{
  BKCloudQuotaUIServices *v1;
  void *v2;

  v1 = objc_opt_new(BKCloudQuotaUIServices);
  v2 = (void *)qword_1009F5150;
  qword_1009F5150 = (uint64_t)v1;

}

void sub_100063E9C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BCBookReadingTimeTracker sharedInstance](BCBookReadingTimeTracker, "sharedInstance"));
  objc_msgSend(v2, "purgeRecentBooks");
  objc_msgSend(v2, "seedRecentBooksList:", *(_QWORD *)(a1 + 32));

}

void sub_100063EE8(id a1)
{
  BDSLiverpoolStatusMonitor *v1;
  void *v2;

  v1 = objc_opt_new(BDSLiverpoolStatusMonitor);
  v2 = (void *)qword_1009F5210;
  qword_1009F5210 = (uint64_t)v1;

}

void sub_100063F10(id a1)
{
  BKUserActivityManager *v1;
  void *v2;

  v1 = objc_alloc_init(BKUserActivityManager);
  v2 = (void *)qword_1009F4EA8;
  qword_1009F4EA8 = (uint64_t)v1;

}

void sub_100063F38(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F5140;
  qword_1009F5140 = (uint64_t)v1;

}

id sub_100063F5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_signalEnableSyncCheck");
}

void sub_100063F64(id a1)
{
  BKSeriesCoverManager *v1;
  void *v2;

  v1 = objc_alloc_init(BKSeriesCoverManager);
  v2 = (void *)qword_1009F4F00;
  qword_1009F4F00 = (uint64_t)v1;

}

void sub_100063F8C(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F4FE0;
  qword_1009F4FE0 = (uint64_t)v1;

}

void sub_100063FB0(id a1)
{
  +[MPMediaQuery setFilteringDisabled:](MPMediaQuery, "setFilteringDisabled:", 1);
}

id sub_100063FC0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "registerForAssetProgressForDataclass:", CFSTR("Book"));
}

void sub_100063FD4(id a1)
{
  +[BLJaliscoDAAPClient preWarmSync](BLJaliscoDAAPClient, "preWarmSync");
}

uint64_t sub_100063FE0(uint64_t a1)
{
  kdebug_trace(725353712, 32, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "q_deleteLocaliCloudDataIfUserLoggedOutFromiCloud");
  return kdebug_trace(725353712, 33, 0, 0, 0);
}

void sub_100064038(id a1)
{
  kdebug_trace(725353712, 116, 0, 0, 0);
  +[BKStandardItemsCacheManager prewarm](BKStandardItemsCacheManager, "prewarm");
  kdebug_trace(725353712, 117, 0, 0, 0);
}

void sub_100064088(id a1)
{
  id v1;

  v1 = +[BUBag defaultBag](BUBag, "defaultBag");
  +[TUIResourceLoader prewarmOfflineCache](TUIResourceLoader, "prewarmOfflineCache");
}

uint64_t sub_1000640B4(uint64_t a1)
{
  kdebug_trace(725353712, 16, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "q_setupLibrary");
  return kdebug_trace(725353712, 17, 0, 0, 0);
}

void sub_10006410C(id a1)
{
  +[BDSUserPreferencesSync copyChangedLocalPreferencesToGroupContainer](BDSUserPreferencesSync, "copyChangedLocalPreferencesToGroupContainer");
}

void sub_100064118(id a1)
{
  BKiAPController *v1;
  void *v2;

  v1 = objc_alloc_init(BKiAPController);
  v2 = (void *)qword_1009F5078;
  qword_1009F5078 = (uint64_t)v1;

}

void sub_100064140(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100064150(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

void sub_1000641A0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_1000641D0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10006423C(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 2u);
}

void sub_10006424C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_100064280(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_10006428C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_1000642F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100064394(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_1000643A8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1000643B8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_1000643D8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x20u);
}

void sub_1000643E4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_1000643F0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_100064404(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10006444C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

id sub_10006448C()
{
  if (qword_1009F4F18 != -1)
    dispatch_once(&qword_1009F4F18, &stru_1008EA948);
  return (id)qword_1009F4F10;
}

_QWORD *sub_1000644D0(uint64_t a1)
{
  return sub_100024D14(a1, &qword_1009DD560);
}

_QWORD *sub_1000644DC(uint64_t a1)
{
  return sub_100024D14(a1, (uint64_t *)&unk_1009DD6C0);
}

uint64_t sub_1000644E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003F208(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD568, (uint64_t *)&unk_1009CEC70);
  *v3 = result;
  return result;
}

uint64_t sub_100064514(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003F208(a1, a2, a3, (_QWORD *)*v3, &qword_1009D6FD0, (uint64_t *)&unk_1009DD6C0);
  *v3 = result;
  return result;
}

uint64_t sub_100064540(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000448CC(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD548, (uint64_t *)&unk_1009DD550);
  *v3 = result;
  return result;
}

uint64_t sub_10006456C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000448CC(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD508, &qword_1009DD510);
  *v3 = result;
  return result;
}

_QWORD *sub_10006459C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10004CFD4(&qword_1009E2840);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size_0(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005B3460(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000646A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE3E0, (uint64_t (*)(_QWORD))&type metadata accessor for Book.SaleType);
}

uint64_t sub_1000646BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE3E8, (uint64_t (*)(_QWORD))&type metadata accessor for GenreCollectionRecommendationRequest);
}

uint64_t sub_1000646D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100022858(a1, a2, a3, a4, &qword_1009EE3C0, (uint64_t (*)(_QWORD))&type metadata accessor for SaleOptions);
}

uint64_t sub_1000646E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 16 * a1 + 32;
    v8 = a3 + 16 * v5;
    if (v7 >= v8 || v7 + 16 * v5 <= a3)
    {
      sub_10004CFD4(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

Swift::Int sub_1000647E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_10004CFD4(&qword_1009EBDF0);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_100064A7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE800;
  if (!qword_1009DE800)
  {
    v1 = sub_100009E04(255, (unint64_t *)&unk_1009DE7F0, NSRunLoop_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSRunLoop, v1);
    atomic_store(result, (unint64_t *)&qword_1009DE800);
  }
  return result;
}

uint64_t sub_100064AD4(uint64_t a1)
{
  uint64_t v1;

  return sub_100064ADC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100064ADC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100064AFC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

NSNotificationName sub_100064B30()
{
  return NSUbiquitousKeyValueStoreDidChangeExternallyNotification;
}

id sub_100064B40()
{
  id *v0;

  return objc_msgSend(*v0, "synchronize");
}

uint64_t sub_100064B60()
{
  return sub_10000CE2C(&qword_1009ED130, (uint64_t)&protocol conformance descriptor for NSUbiquitousKeyValueStore);
}

uint64_t sub_100064BB0()
{
  return sub_100008DB0(&qword_1009D0410, (uint64_t (*)(uint64_t))type metadata accessor for BCDefaultCollectionID, (uint64_t)&unk_10070D868);
}

uint64_t BKMainFlowController.navigationDelegate.getter()
{
  return sub_10004C6D8(&unk_100A1F102, &qword_1009F3628);
}

NSString sub_100064BFC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E9ED0 = (uint64_t)result;
  return result;
}

NSString sub_100064C30()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100A1E350 = (uint64_t)result;
  return result;
}

NSString sub_100064C64()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100A1E348 = (uint64_t)result;
  return result;
}

NSString sub_100064C98()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSNotificationName.markedAsFinished = (uint64_t)result;
  return result;
}

NSString sub_100064CCC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSNotificationName.rootBarReady = (uint64_t)result;
  return result;
}

unint64_t sub_100064D00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DA360;
  if (!qword_1009DA360)
  {
    v1 = sub_100009E04(255, &qword_1009D0A90, BCMutableCloudData_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1009DA360);
  }
  return result;
}

unint64_t sub_100064D58()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1009E8760;
  if (!qword_1009E8760)
  {
    v1 = sub_10000A614();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSUserDefaults, v1);
    atomic_store(result, (unint64_t *)&qword_1009E8760);
  }
  return result;
}

id sub_100064DA0()
{
  id result;

  result = sub_100018D34();
  qword_100A1EC28 = (uint64_t)result;
  return result;
}

Swift::Void __swiftcall UIApplication.observeExtendedLaunchTestCompletion()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __CFString **v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for PPTExtendedLaunchType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PPTConfig(0);
  v6 = static PPTConfig.extendedLaunchTestType.getter();
  v7 = PPTExtendedLaunchType.destination.getter(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100048F64(v8, (uint64_t)qword_1009DEA98);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v20 = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = PPTExtendedLaunchType.Destination.rawValue.getter(v7);
    v16 = v15;
    v19 = sub_100040F58(v14, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Observing Extended Launch completion for destination %{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  if ((_BYTE)v7)
  {
    if (v7 != 1)
      return;
    v17 = &off_1008E79D8;
  }
  else
  {
    v17 = (__CFString **)&BSUIFeedInitialContentReadyNotification;
  }
  v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v18, "addObserver:selector:name:object:", v1, "onExtendedLaunchCompleted", *v17, 0);

}

id BKAppDelegate.objectGraphHost.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  swift_beginAccess(&unk_100A1E4FA, v7, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_100A1E4FA);
  swift_endAccess(v7);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_10004C7B4((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_10004A7B8((uint64_t)v8);
    goto LABEL_8;
  }
  v2 = type metadata accessor for ObjectGraphHost();
  if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_8:
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ObjectGraphHost()), "init");
    swift_beginAccess(&unk_100A1E4FA, v8, 32, 0);
    v3 = v4;
    objc_setAssociatedObject(v0, &unk_100A1E4FA, v3, (void *)1);
    swift_endAccess(v8);

    return v3;
  }
  return (id)v6;
}

void sub_100065210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10000A4F0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_100065218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100007A5C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100065220(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100030B74((uint64_t *)&unk_1009E8850);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100065280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ECA40;
  if (!qword_1009ECA40)
  {
    v1 = sub_100030B74(&qword_1009D6FD8);
    sub_100065424();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009ECA40);
  }
  return result;
}

uint64_t sub_1000652E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100030B74(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100065324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D48F0;
  if (!qword_1009D48F0)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009DB460);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009D48F0);
  }
  return result;
}

unint64_t sub_100065370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EA070;
  if (!qword_1009EA070)
  {
    v1 = sub_100030B74(&qword_1009D7308);
    sub_10006B648();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009EA070);
  }
  return result;
}

unint64_t sub_1000653D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ECAB0;
  if (!qword_1009ECAB0)
  {
    v1 = sub_100030B74(&qword_1009EC338);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1009ECAB0);
  }
  return result;
}

unint64_t sub_100065424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009ECA48;
  if (!qword_1009ECA48)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009DD6C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1009ECA48);
  }
  return result;
}

void sub_100065484(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DC250[0])
  {
    v2 = sub_100030B74((uint64_t *)&unk_1009E91D0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, qword_1009DC250);
  }
}

void sub_1000654DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EF1A8)
  {
    v2 = sub_100030B74((uint64_t *)&unk_1009E54F0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EF1A8);
  }
}

void sub_100065534(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E2790)
  {
    v2 = sub_100030B74(&qword_1009E2798);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E2790);
  }
}

void sub_10006558C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EE568)
  {
    v2 = sub_100030B74(&qword_1009E8800);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EE568);
  }
}

void sub_1000655E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009E27A0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for LibraryCollectionsServiceState);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009E27A0);
  }
}

void sub_100065638(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D79C8)
  {
    v2 = sub_100030B74((uint64_t *)&unk_1009D7930);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D79C8);
  }
}

uint64_t sub_100065690()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 16));
}

id sub_100065698()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PersonalizationEventDonor()), "init");
}

uint64_t sub_1000656BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for UnfairLock.Options(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v6 = a1[4];
  sub_10003F198(a1, v5);
  v7 = sub_10004CFD4(&qword_1009E9D90);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v7, v7, v5, v6);
  if (result)
  {
    v9 = result;
    v10 = swift_allocObject(&unk_10090D550, 24, 7);
    *(_QWORD *)(v10 + 16) = v9;
    v11 = sub_10004CFD4((uint64_t *)&unk_1009E9D80);
    v12 = (_QWORD *)swift_allocObject(v11, 48, 7);
    v13 = swift_unknownObjectRetain(v9);
    static UnfairLock.Options.dataSynchronization.getter(v13);
    v14 = type metadata accessor for UnfairLock(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = UnfairLock.init(options:)(v4);
    swift_unknownObjectRelease(v9);
    v12[4] = v15;
    v12[5] = 0;
    v12[2] = &unk_1009E9DB0;
    v12[3] = v10;
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000657E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for UnfairLock.Options(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v6 = a1[4];
  sub_10003F198(a1, v5);
  v7 = sub_10004CFD4(&qword_1009E9D90);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v7, v7, v5, v6);
  if (result)
  {
    v9 = result;
    v10 = swift_allocObject(&unk_10090D5D0, 24, 7);
    *(_QWORD *)(v10 + 16) = v9;
    v11 = sub_10004CFD4(&qword_1009E3D90);
    v12 = (_QWORD *)swift_allocObject(v11, 48, 7);
    v13 = swift_unknownObjectRetain(v9);
    static UnfairLock.Options.dataSynchronization.getter(v13);
    v14 = type metadata accessor for UnfairLock(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = UnfairLock.init(options:)(v4);
    swift_unknownObjectRelease(v9);
    v12[4] = v15;
    v12[5] = 0;
    v12[2] = &unk_1009E9DD8;
    v12[3] = v10;
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006590C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for UnfairLock.Options(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v6 = a1[4];
  sub_10003F198(a1, v5);
  v7 = sub_10004CFD4(&qword_1009E9D90);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v7, v7, v5, v6);
  if (result)
  {
    v9 = result;
    v10 = swift_allocObject(&unk_10090D510, 24, 7);
    *(_QWORD *)(v10 + 16) = v9;
    v11 = sub_10004CFD4(&qword_1009E3D88);
    v12 = (_QWORD *)swift_allocObject(v11, 48, 7);
    v13 = swift_unknownObjectRetain(v9);
    static UnfairLock.Options.dataSynchronization.getter(v13);
    v14 = type metadata accessor for UnfairLock(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = UnfairLock.init(options:)(v4);
    swift_unknownObjectRelease(v9);
    v12[4] = v15;
    v12[5] = 0;
    v12[2] = &unk_1009E9DA0;
    v12[3] = v10;
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100065A34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for UnfairLock.Options(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[3];
  v6 = a1[4];
  sub_10003F198(a1, v5);
  v7 = sub_10004CFD4(&qword_1009E9D90);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v7, v7, v5, v6);
  if (result)
  {
    v9 = result;
    v10 = swift_allocObject(&unk_10090D590, 24, 7);
    *(_QWORD *)(v10 + 16) = v9;
    v11 = sub_10004CFD4(&qword_1009E3D98);
    v12 = (_QWORD *)swift_allocObject(v11, 48, 7);
    v13 = swift_unknownObjectRetain(v9);
    static UnfairLock.Options.dataSynchronization.getter(v13);
    v14 = type metadata accessor for UnfairLock(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = UnfairLock.init(options:)(v4);
    swift_unknownObjectRelease(v9);
    v12[4] = v15;
    v12[5] = 0;
    v12[2] = &unk_1009E9DC8;
    v12[3] = v10;
    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100065B5C()
{
  return sub_1000232E0();
}

void sub_100065B7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = "\b";
  sub_1000654DC(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = "\b";
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for WindowAppIntentsAssetViewControllerTracker(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EF198;
  if (!qword_1009EF198)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WindowAppIntentsAssetViewControllerTracker);
  return result;
}

void sub_100065C34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  sub_100065484(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10071C938;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for AppIntentsAssetViewControllerInfoTracker(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DC240;
  if (!qword_1009DC240)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppIntentsAssetViewControllerInfoTracker);
  return result;
}

void sub_100065CF0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = v1 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  v6 = Strong;
  if (a1)
  {
    if (Strong)
    {
      sub_100009E04(0, (unint64_t *)&unk_1009DC2F0, UIResponder_ptr);
      v7 = a1;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v7, v8);

      if ((v9 & 1) != 0)
        return;
    }
  }
  else
  {
    if (!Strong)
      return;

  }
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (qword_1009CDF20 != -1)
    swift_once(&qword_1009CDF20, sub_10034403C);
  v11 = type metadata accessor for Logger(0);
  sub_100048F64(v11, (uint64_t)qword_1009DC1F0);
  v12 = v10;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v27 = v16;
    *(_DWORD *)v15 = 136315138;
    if (v12)
    {
      v17 = objc_msgSend(v12, "description");
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

    }
    else
    {
      v20 = 0xE600000000000000;
      v18 = 0x3E656E6F6E3CLL;
    }
    v26 = sub_100040F58(v18, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v15 + 4, v15 + 12);

    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Observing view controller: %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

  }
  v21 = swift_unknownObjectWeakLoadStrong(v4);
  if (v21)
  {
    v22 = (void *)v21;
    swift_getObjectType();
    v23 = swift_allocObject(&unk_1008FEAB0, 24, 7);
    swift_weakInit(v23 + 16, v2);
    swift_retain(v23);
    v24 = sub_10034434C((uint64_t)sub_10034465C, v23);

    swift_release_n(v23, 2);
  }
  else
  {
    v24 = 0;
  }
  v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task) = v24;
  swift_release(v25);
  sub_100344180();

}

uint64_t type metadata accessor for YearInReviewEligibilityServiceFactory()
{
  return objc_opt_self(_TtC5Books37YearInReviewEligibilityServiceFactory);
}

void sub_100066000(uint64_t a1, uint64_t a2)
{
  sub_10055324C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for YearInReviewEligibilityService, (void (*)(void *, uint64_t))sub_1000275F0);
}

uint64_t type metadata accessor for YearInReviewEntryEligibilityProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E38F0;
  if (!qword_1009E38F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for YearInReviewEntryEligibilityProvider);
  return result;
}

uint64_t sub_100066060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100066078(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100066078@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  result = NSManagedObjectContext.count<A>(for:)(a1, v5);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1000660DC()
{
  unint64_t result;

  result = qword_1009DEF28;
  if (!qword_1009DEF28)
  {
    result = swift_getWitnessTable(&unk_10071EF44, &type metadata for BookReaderChangePageNavigationIntent);
    atomic_store(result, (unint64_t *)&qword_1009DEF28);
  }
  return result;
}

unint64_t sub_100066120()
{
  unint64_t result;

  result = qword_1009DEF20;
  if (!qword_1009DEF20)
  {
    result = swift_getWitnessTable(&unk_10071EEB4, &type metadata for BookReaderChangePageNavigationIntent);
    atomic_store(result, (unint64_t *)&qword_1009DEF20);
  }
  return result;
}

unint64_t sub_100066164()
{
  unint64_t result;

  result = qword_1009DEF30;
  if (!qword_1009DEF30)
  {
    result = swift_getWitnessTable(&unk_10071EF6C, &type metadata for BookReaderChangePageNavigationIntent);
    atomic_store(result, (unint64_t *)&qword_1009DEF30);
  }
  return result;
}

uint64_t sub_1000661A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100066120();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void sub_1000661D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100009BC4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for PersonalizationConfigurationService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DD310;
  if (!qword_1009DD310)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PersonalizationConfigurationService);
  return result;
}

unint64_t sub_10006629C()
{
  unint64_t result;

  result = qword_1009CECD0;
  if (!qword_1009CECD0)
  {
    result = swift_getWitnessTable(&unk_100722C94, &type metadata for CloseAudiobookMiniPlayerActionItem);
    atomic_store(result, (unint64_t *)&qword_1009CECD0);
  }
  return result;
}

uint64_t type metadata accessor for AchievementsNotificationController()
{
  return objc_opt_self(BKAchievementsNotificationController);
}

void sub_10006632C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "(";
  v4[1] = "(";
  sub_10006BBAC(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_1007212D0;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t type metadata accessor for YearInReviewNotificationScheduler(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E0A90;
  if (!qword_1009E0A90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for YearInReviewNotificationScheduler);
  return result;
}

uint64_t sub_1000663E8(uint64_t a1)
{
  return sub_10001BF38(a1, qword_1009E09F8, 0xD000000000000023, 0x80000001007C6EA0);
}

uint64_t sub_10006640C(uint64_t a1)
{
  return sub_10001BF38(a1, qword_1009E0A10, 0xD000000000000030, 0x80000001007C6E60);
}

uint64_t type metadata accessor for ViewSupplementalContentActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E2BB0;
  if (!qword_1009E2BB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ViewSupplementalContentActionItem);
  return result;
}

id MiniPlayerHostingTabBarController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v5;
  NSString v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController__bc_preferredTabBarScrollEdgeAppearance] = 0;
  v3[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = 0x80;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_bottomAnchorConstraint] = 0;
  v5 = &v3[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController____lazy_storage___hostContainerView];
  *v5 = 0;
  v5[1] = 0;
  v3[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems] = 0;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController.viewWillAppear(_:)(Swift::Bool a1)
{
  unsigned __int8 *v1;
  _BOOL4 v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t ObjectType;
  char v7[24];
  objc_super v8;

  v2 = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v8, "viewWillAppear:", v2);
  v3 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState;
  v4 = v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState];
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = v2;
  if ((v4 > 0x3F || ((((v4 & 1) == 0) ^ v2) & 1) == 0)
    && (objc_msgSend(v1, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v5 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v7, 0, 0);
    if (*(_QWORD *)v5)
    {
      ObjectType = swift_getObjectType();
      sub_10043681C(v4, v1[v3], ObjectType, (uint64_t)&off_100906280);
    }
  }
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController.viewDidAppear(_:)(Swift::Bool a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t ObjectType;
  char v7[24];
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v8, "viewDidAppear:", a1);
  v3 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState;
  v4 = v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState];
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = -127;
  if ((_DWORD)v4 != 129 && (objc_msgSend(v1, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v5 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v7, 0, 0);
    if (*(_QWORD *)v5)
    {
      ObjectType = swift_getObjectType();
      sub_10043681C(v4, v1[v3], ObjectType, (uint64_t)&off_100906280);
    }
  }
}

uint64_t type metadata accessor for EngagementManagerAnalyticsHelper()
{
  return objc_opt_self(BKEngagementManagerAnalyticsHelper);
}

Swift::Void __swiftcall EngagementManagerAnalyticsHelper.registerSyncFromCloudKitSuccess()()
{
  sub_100013BD0(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp);
}

void EngagementManagerAnalyticsHelper.registerSyncFromCloudKitError(_:)(uint64_t a1)
{
  sub_1000667F0(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp);
}

void sub_1000667F0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  void **v13;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  char v25[24];
  char v26[24];
  char v27[24];

  v7 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    v10 = v3 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager;
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR___BKEngagementManagerAnalyticsHelper_engagementManager);
    if (Strong)
    {
      v12 = (void *)Strong;
      v13 = (void **)(Strong + OBJC_IVAR___BKEngagementManager_metadata);
      swift_beginAccess(Strong + OBJC_IVAR___BKEngagementManager_metadata, v27, 0, 0);
      v14 = *v13;
      swift_errorRetain(a1);
      v15 = v14;

      v16 = &v15[*a2];
      swift_beginAccess(v16, v26, 1, 0);
      v17 = *(_QWORD *)v16;
      *(_QWORD *)v16 = a1;
      swift_errorRetain(a1);
      swift_errorRelease(v17);

    }
    else
    {
      swift_errorRetain(a1);
    }
    v18 = swift_unknownObjectWeakLoadStrong(v10);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = (id *)(v18 + OBJC_IVAR___BKEngagementManager_metadata);
      swift_beginAccess(v18 + OBJC_IVAR___BKEngagementManager_metadata, v25, 0, 0);
      v21 = *v20;

      Date.init()();
      v22 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 0, 1, v22);
      v23 = (uint64_t)v21 + *a3;
      swift_beginAccess(v23, v24, 33, 0);
      sub_10006CD88((uint64_t)v9, v23);
      swift_endAccess(v24);
      swift_errorRelease(a1);

    }
    else
    {
      swift_errorRelease(a1);
    }
  }
}

uint64_t sub_1000669BC(void **a1)
{
  uint64_t v1;

  return sub_10000CB3C(a1, v1);
}

void sub_1000669C4(void **a1)
{
  uint64_t v1;

  sub_10001AA58(a1, v1);
}

uint64_t type metadata accessor for MediaTypeRecommendationProvider()
{
  return objc_opt_self(BKMediaTypeRecommendationProvider);
}

uint64_t type metadata accessor for YearInReviewEligibilityService()
{
  return objc_opt_self(BKYearInReviewEligibilityService);
}

id YearInReviewEligibilityService.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  objc_super v7;
  char v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___BKYearInReviewEligibilityService__setupState;
  v8 = 0;
  v3 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = v0;
  *(_QWORD *)&v0[v2] = MutableObservableContainer.init(value:)(&v8);
  v5 = OBJC_IVAR___BKYearInReviewEligibilityService_setupPromise;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone((Class)AMSMutablePromise), "init");
  *(_QWORD *)&v4[OBJC_IVAR___BKYearInReviewEligibilityService_eligibilityProvider] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKYearInReviewEligibilityService_notificationScheduler] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKYearInReviewEligibilityService_topPicksObserver] = 0;

  v7.receiver = v4;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t sub_100066B84()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR___BKYearInReviewEligibilityService__setupState));
}

_BYTE *sub_100066B98(_BYTE *result)
{
  *result = 1;
  return result;
}

_BYTE *sub_100066BA4(_BYTE *result)
{
  *result = 2;
  return result;
}

uint64_t type metadata accessor for RemoveFromWantToReadActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E5458;
  if (!qword_1009E5458)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RemoveFromWantToReadActionItem);
  return result;
}

uint64_t type metadata accessor for PalettePresentationInteraction()
{
  return objc_opt_self(BKPalettePresentationInteraction);
}

uint64_t type metadata accessor for EditionStringFlatteningService()
{
  return objc_opt_self(_TtC5Books30EditionStringFlatteningService);
}

uint64_t type metadata accessor for TopPicksCardConditionObserver()
{
  return objc_opt_self(_TtC5Books29TopPicksCardConditionObserver);
}

uint64_t type metadata accessor for ReadingActivityServiceFactory()
{
  return objc_opt_self(_TtC5Books29ReadingActivityServiceFactory);
}

uint64_t type metadata accessor for PersonalizationEventProcessor()
{
  return objc_opt_self(BKPersonalizationEventProcessor);
}

uint64_t type metadata accessor for OfflineCacheLoadingController()
{
  return objc_opt_self(BKOfflineCacheLoadingController);
}

unint64_t sub_100066D00()
{
  unint64_t result;

  result = qword_1009E6F08;
  if (!qword_1009E6F08)
  {
    result = swift_getWitnessTable(&unk_100728BD8, &type metadata for BookReaderNavigatePagesIntent);
    atomic_store(result, (unint64_t *)&qword_1009E6F08);
  }
  return result;
}

unint64_t sub_100066D44()
{
  unint64_t result;

  result = qword_1009E6F00;
  if (!qword_1009E6F00)
  {
    result = swift_getWitnessTable(&unk_100728B48, &type metadata for BookReaderNavigatePagesIntent);
    atomic_store(result, (unint64_t *)&qword_1009E6F00);
  }
  return result;
}

unint64_t sub_100066D88()
{
  unint64_t result;

  result = qword_1009E6F10;
  if (!qword_1009E6F10)
  {
    result = swift_getWitnessTable(&unk_100728C00, &type metadata for BookReaderNavigatePagesIntent);
    atomic_store(result, (unint64_t *)&qword_1009E6F10);
  }
  return result;
}

uint64_t sub_100066DCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100066D44();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for RemoveFromContinueActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DBA58;
  if (!qword_1009DBA58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RemoveFromContinueActionItem);
  return result;
}

uint64_t type metadata accessor for MarkAsStillReadingActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F0A90;
  if (!qword_1009F0A90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MarkAsStillReadingActionItem);
  return result;
}

unint64_t sub_100066E74()
{
  unint64_t result;

  result = qword_1009E65C8;
  if (!qword_1009E65C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LibraryAnalyticsDataProvider, &type metadata for LibraryAnalyticsDataProvider);
    atomic_store(result, (unint64_t *)&qword_1009E65C8);
  }
  return result;
}

uint64_t type metadata accessor for BookReaderInteractionManager()
{
  return objc_opt_self(_TtC5Books28BookReaderInteractionManager);
}

void sub_100066ED8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[2];
  unsigned __int8 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;

  if (a1)
  {
    v4 = objc_msgSend(a1, "assetID");
    v5 = v4;
    if (v4)
    {
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v8 = v7;

      v9 = objc_msgSend(a1, "title");
      if (v9)
      {
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

      }
      else
      {
        v11 = 0;
        v13 = 0;
      }
      v23 = objc_msgSend(a1, "author");
      if (v23)
      {
        v24 = v23;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v27 = v26;

      }
      else
      {
        v25 = 0;
        v27 = 0;
      }
      sub_1001FBB08(v6, v8, v11, v13, v25, v27, 0, 0, v32, 1u);
      v15 = v32[0];
      v5 = (void *)v32[1];
      v16 = v33;
      v30 = v35;
      v31 = v34;
      v29 = v36;
      v17 = v37;
      v22 = v38;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v22 = 0uLL;
      v30 = 0u;
      v31 = 0u;
      v29 = 0u;
    }
    v28 = v22;
    v14 = objc_msgSend(a1, "supportsTheming");

    v19 = v30;
    v18 = v31;
    v21 = v28;
    v20 = v29;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    v5 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0uLL;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
  }
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v16;
  *(_OWORD *)(a2 + 24) = v18;
  *(_OWORD *)(a2 + 40) = v19;
  *(_OWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 72) = v17;
  *(_OWORD *)(a2 + 80) = v21;
  *(_BYTE *)(a2 + 96) = v14;
}

void sub_1000670A8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v5 = v2;
  v6 = &qword_1009CE000;
  if (!a1)
    goto LABEL_23;
  v7 = a2;
  if (!a2)
    goto LABEL_23;
  v3 = (uint64_t)a1;
  v8 = qword_1009CEB00;
  v9 = a1;
  if (v8 != -1)
    swift_once(&qword_1009CEB00, sub_100651340);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100048F64(v10, (uint64_t)qword_1009F28E0);
  v12 = v9;
  swift_bridgeObjectRetain_n(v7, 2);
  v13 = v12;
  v14 = Logger.logObject.getter(v13);
  LOBYTE(v4) = static os_log_type_t.default.getter(v14);
  v15 = (_QWORD *)((unint64_t)v7 >> 62);
  if (!os_log_type_enabled((os_log_t)v14, (os_log_type_t)v4))
  {

    swift_bridgeObjectRelease_n(v7, 2);
    goto LABEL_10;
  }
  v11 = swift_slowAlloc(22, -1);
  v16 = swift_slowAlloc(8, -1);
  *(_DWORD *)v11 = 134218242;
  v17 = v7 & 0xFFFFFFFFFFFFFF8;
  v39 = v5;
  v40 = (_QWORD *)((unint64_t)v7 >> 62);
  v38 = (_QWORD *)v16;
  if (v15)
    goto LABEL_51;
  v18 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(v7);
    v41 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v7);
    *(_WORD *)(v11 + 12) = 2112;
    v41 = (uint64_t)v13;
    v19 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v11 + 14, v11 + 22);
    *v38 = v3;

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v14, (os_log_type_t)v4, "Removing %ld Link interactions from %@", (uint8_t *)v11, 0x16u);
    v20 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v38, 1, v20);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    v5 = v39;
    v15 = v40;
    v6 = &qword_1009CE000;
LABEL_10:
    if (v15)
    {
      if (v7 >= 0)
        v22 = v7 & 0xFFFFFFFFFFFFFF8;
      else
        v22 = v7;
      swift_bridgeObjectRetain(v7);
      v14 = _CocoaArrayWrapper.endIndex.getter(v22);
      if (!v14)
        goto LABEL_22;
    }
    else
    {
      v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v7);
      if (!v14)
        goto LABEL_22;
    }
    if (v14 >= 1)
      break;
LABEL_50:
    __break(1u);
LABEL_51:
    if (v7 >= 0)
      v37 = v17;
    else
      v37 = v7;
    swift_bridgeObjectRetain(v7);
    v18 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v7);
  }
  v3 = 0;
  v4 = &selRef_presenterShowModalController_animated_completion_;
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v7);
    }
    else
    {
      v21 = *(_QWORD *)(v7 + 8 * v3 + 32);
      swift_unknownObjectRetain(v21);
    }
    ++v3;
    objc_msgSend(v13, "removeInteraction:", v21, v38);
    swift_unknownObjectRelease(v21);
  }
  while (v14 != v3);
LABEL_22:

  swift_bridgeObjectRelease(v7);
LABEL_23:
  v23 = *(void **)(v5 + 24);
  if (!v23)
    return;
  v24 = *(_QWORD *)(v5 + 32);
  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v34 = *(_QWORD *)(v5 + 32);
    else
      v34 = v24 & 0xFFFFFFFFFFFFFF8;
    v35 = v23;
    swift_bridgeObjectRetain(v24);
    v13 = (id)_CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    v13 = *(id *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    v25 = v23;
  }
  if (v6[352] != -1)
    swift_once(&qword_1009CEB00, sub_100651340);
  v26 = type metadata accessor for Logger(0);
  sub_100048F64(v26, (uint64_t)qword_1009F28E0);
  v7 = v23;
  v27 = Logger.logObject.getter(v7);
  v28 = static os_log_type_t.default.getter(v27);
  v11 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v3 = swift_slowAlloc(22, -1);
    v40 = (_QWORD *)swift_slowAlloc(8, -1);
    v41 = (uint64_t)v13;
    *(_DWORD *)v3 = 134218242;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v3 + 4, v3 + 12);
    *(_WORD *)(v3 + 12) = 2112;
    v13 = (id)(v3 + 14);
    LOBYTE(v4) = v5;
    v41 = v7;
    v29 = (id)v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v3 + 14, v3 + 22);
    *v40 = v23;

    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v11, "Adding %ld interactions to %@", (uint8_t *)v3, 0x16u);
    v30 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v40, 1, v30);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v3, -1, -1);
  }
  else
  {

    v27 = v7;
  }

  v31 = *(_QWORD *)(v5 + 32);
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v36 = *(_QWORD *)(v5 + 32);
    else
      v36 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v5 + 32), 2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v36);
    if (!v14)
      goto LABEL_47;
  }
  else
  {
    v14 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v5 + 32), 2);
    if (!v14)
      goto LABEL_47;
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_50;
  }
  for (i = 0; i != v14; ++i)
  {
    if ((v31 & 0xC000000000000001) != 0)
    {
      v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v31);
    }
    else
    {
      v33 = *(_QWORD *)(v31 + 8 * i + 32);
      swift_unknownObjectRetain(v33);
    }
    objc_msgSend((id)v7, "addInteraction:", v33, v38);
    swift_unknownObjectRelease(v33);
  }
LABEL_47:
  swift_bridgeObjectRelease_n(v31, 2);

}

void sub_100067610(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100730EA0;
  sub_10006558C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100730EB8;
    v4[3] = &unk_100730ED0;
    v4[4] = &unk_100730EE8;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

Swift::Void __swiftcall RootBarStandardItemsManager.loadFromCache()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  NSObject *v43;
  int v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  os_log_type_t v71;
  const char *v72;
  NSObject *v73;
  NSObject *v74;
  uint8_t *v75;
  uint32_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  NSObject *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  id v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  id v111;
  void *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  os_log_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint8_t *v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  os_log_t v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  os_log_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  NSObject *v150;
  uint64_t v151;
  uint64_t v152;

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100059BB4();
  *v6 = static OS_dispatch_queue.main.getter(v7);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v8 = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_69;
  }
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheManager + 24];
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheManager + 32];
  sub_10003F198(&v2[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_cacheManager], v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  v12 = v11;
  if ((v2[OBJC_IVAR____TtC5Books27RootBarStandardItemsManager_loadedFromBag] & 1) != 0)
  {
    swift_bridgeObjectRelease(v11);
    if (qword_1009CE408 == -1)
    {
LABEL_4:
      v13 = type metadata accessor for Logger(0);
      sub_100048F64(v13, (uint64_t)qword_1009E1C98);
      v14 = v2;
      v12 = Logger.logObject.getter(v14);
      v15 = static os_log_type_t.info.getter();
      if (os_log_type_enabled((os_log_t)v12, (os_log_type_t)v15))
      {
        v16 = swift_slowAlloc(42, -1);
        v17 = swift_slowAlloc(96, -1);
        v152 = v17;
        *(_DWORD *)v16 = 136315906;
        v151 = sub_100040F58(0x6D6F724664616F6CLL, 0xEF29286568636143, &v152);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v16 + 4, v16 + 12);
        *(_WORD *)(v16 + 12) = 2080;
        v151 = sub_100040F58(0xD00000000000001BLL, 0x8000000100730E30, &v152);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v16 + 14, v16 + 22);
        *(_WORD *)(v16 + 22) = 2048;
        KeyPath = swift_getKeyPath(&unk_100730E00);
        v19 = swift_getKeyPath(&unk_100730E28);
        static Published.subscript.getter(&v151, v14, KeyPath, v19);
        swift_release(KeyPath);
        swift_release(v19);
        v20 = v151;
        if ((unint64_t)v151 >> 62)
        {
          if (v151 < 0)
            v127 = v151;
          else
            v127 = v151 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v151);
          v21 = _CocoaArrayWrapper.endIndex.getter(v127);

          swift_bridgeObjectRelease(v20);
        }
        else
        {
          v21 = *(_QWORD *)((v151 & 0xFFFFFFFFFFFFF8) + 0x10);

        }
        swift_bridgeObjectRelease(v20);
        v151 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v16 + 24, v16 + 32);

        *(_WORD *)(v16 + 32) = 2082;
        v22 = swift_getKeyPath(&unk_100730E00);
        v23 = swift_getKeyPath(&unk_100730E28);
        static Published.subscript.getter(&v151, v14, v22, v23);
        swift_release(v22);
        swift_release(v23);
        v24 = v151;
        if ((unint64_t)v151 >> 62)
        {
          if (v151 < 0)
            v128 = v151;
          else
            v128 = v151 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v151);
          v1 = _CocoaArrayWrapper.endIndex.getter(v128);
        }
        else
        {
          v1 = *(_QWORD *)((v151 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v151);
        }
        v149 = v14;
        v150 = v12;
        v148 = v16;
        LODWORD(v147) = v15;
        v146 = (os_log_t)v17;
        if (!v1)
        {
          v26 = _swiftEmptyArrayStorage;
LABEL_46:
          swift_bridgeObjectRelease_n(v24, 2);
          v64 = (uint8_t *)v148;
          v151 = (uint64_t)v26;
          v65 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
          v66 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
          v67 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v65, v66);
          v69 = v68;
          swift_bridgeObjectRelease(v26);
          v151 = sub_100040F58(v67, v69, &v152);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v64 + 34, v64 + 42);
          v70 = v149;

          swift_bridgeObjectRelease(v69);
          v71 = v147;
          v72 = "%s %s Found %ld cached RootBarStandardItems BUT ignored beacuse RootBarStandardItems is no longer empty: %{public}s";
          v73 = v150;
          v74 = v150;
          v75 = v64;
          v76 = 42;
LABEL_96:
          _os_log_impl((void *)&_mh_execute_header, v74, v71, v72, v75, v76);
          v126 = v146;
          swift_arrayDestroy(v146, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v126, -1, -1);
          swift_slowDealloc(v64, -1, -1);

          return;
        }
        if (v1 >= 1)
        {
          v25 = 0;
          v26 = _swiftEmptyArrayStorage;
          do
          {
            if ((v24 & 0xC000000000000001) != 0)
              v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v24);
            else
              v27 = *(id *)(v24 + 8 * v25 + 32);
            v28 = v27;
            v29 = objc_msgSend(v27, "description");
            v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
            v32 = v31;

            if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
              v26 = sub_100043ED0(0, v26[2] + 1, 1, v26);
            v34 = v26[2];
            v33 = v26[3];
            if (v34 >= v33 >> 1)
              v26 = sub_100043ED0((_QWORD *)(v33 > 1), v34 + 1, 1, v26);
            ++v25;
            v26[2] = v34 + 1;
            v35 = &v26[2 * v34];
            v35[4] = v30;
            v35[5] = v32;
          }
          while (v1 != v25);
          goto LABEL_46;
        }
        __break(1u);
        goto LABEL_106;
      }

      goto LABEL_93;
    }
LABEL_69:
    swift_once(&qword_1009CE408, sub_10006B6D0);
    goto LABEL_4;
  }
  if (!v11)
  {
LABEL_75:
    v102 = _s5Books20RootBarItemsProviderC019placeholderStandardD0SayAA0bC4ItemCGvgZ_0();
    v103 = swift_getKeyPath(&unk_100730E00);
    v104 = swift_getKeyPath(&unk_100730E28);
    v152 = v102;
    v105 = v2;
    static Published.subscript.setter(&v152, v105, v103, v104);
    if (qword_1009CE408 != -1)
      swift_once(&qword_1009CE408, sub_10006B6D0);
    v106 = type metadata accessor for Logger(0);
    sub_100048F64(v106, (uint64_t)qword_1009E1C98);
    v14 = v105;
    v12 = Logger.logObject.getter(v14);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled((os_log_t)v12, (os_log_type_t)v15))
    {
      v16 = swift_slowAlloc(32, -1);
      v1 = swift_slowAlloc(96, -1);
      v152 = v1;
      *(_DWORD *)v16 = 136315650;
      v151 = sub_100040F58(0x6D6F724664616F6CLL, 0xEF29286568636143, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v16 + 4, v16 + 12);
      *(_WORD *)(v16 + 12) = 2080;
      v151 = sub_100040F58(0xD00000000000001BLL, 0x8000000100730E30, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v16 + 14, v16 + 22);
      *(_WORD *)(v16 + 22) = 2082;
      v107 = _s5Books20RootBarItemsProviderC019placeholderStandardD0SayAA0bC4ItemCGvgZ_0();
      v17 = v107;
      if (!(v107 >> 62))
      {
        v108 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v107);
LABEL_80:
        v149 = v14;
        v150 = v12;
        v148 = v16;
        LODWORD(v147) = v15;
        v146 = (os_log_t)v1;
        if (!v108)
        {
          v110 = _swiftEmptyArrayStorage;
LABEL_95:
          swift_bridgeObjectRelease(v17);
          v64 = (uint8_t *)v148;
          v151 = (uint64_t)v110;
          v120 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
          v121 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
          v122 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v120, v121);
          v124 = v123;
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v110);
          v151 = sub_100040F58(v122, v124, &v152);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v64 + 24, v64 + 32);
          v125 = v149;

          swift_bridgeObjectRelease(v124);
          v71 = v147;
          v72 = "%s %s Empty cached RootBarItems BUT using placeholders: %{public}s";
          v73 = v150;
          v74 = v150;
          v75 = v64;
          v76 = 32;
          goto LABEL_96;
        }
        if (v108 >= 1)
        {
          v109 = 0;
          v110 = _swiftEmptyArrayStorage;
          do
          {
            if ((v17 & 0xC000000000000001) != 0)
              v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v109, v17);
            else
              v111 = *(id *)(v17 + 8 * v109 + 32);
            v112 = v111;
            v113 = objc_msgSend(v111, "description");
            v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
            v116 = v115;

            if ((swift_isUniquelyReferenced_nonNull_native(v110) & 1) == 0)
              v110 = sub_100043ED0(0, v110[2] + 1, 1, v110);
            v118 = v110[2];
            v117 = v110[3];
            if (v118 >= v117 >> 1)
              v110 = sub_100043ED0((_QWORD *)(v117 > 1), v118 + 1, 1, v110);
            ++v109;
            v110[2] = v118 + 1;
            v119 = &v110[2 * v118];
            v119[4] = v114;
            v119[5] = v116;
          }
          while (v108 != v109);
          goto LABEL_95;
        }
        __break(1u);
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
LABEL_106:
      if (v17 < 0)
        v129 = v17;
      else
        v129 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      v108 = _CocoaArrayWrapper.endIndex.getter(v129);
      goto LABEL_80;
    }

LABEL_93:
    return;
  }
  if (!((unint64_t)v11 >> 62))
  {
    v36 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v36)
      goto LABEL_24;
    goto LABEL_74;
  }
  if (v11 < 0)
    v101 = v11;
  else
    v101 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v36 = _CocoaArrayWrapper.endIndex.getter(v101);
  swift_bridgeObjectRelease(v12);
  if (!v36)
  {
LABEL_74:
    swift_bridgeObjectRelease(v12);
    goto LABEL_75;
  }
LABEL_24:
  v37 = v2;
  v38 = sub_100059C10(v12, (uint64_t)v37);

  if ((v38 & 1) == 0)
  {
    if (qword_1009CE408 != -1)
      swift_once(&qword_1009CE408, sub_10006B6D0);
    v57 = type metadata accessor for Logger(0);
    sub_100048F64(v57, (uint64_t)qword_1009E1C98);
    v58 = swift_bridgeObjectRetain_n(v12, 2);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = swift_slowAlloc(32, -1);
      v62 = swift_slowAlloc(64, -1);
      v152 = v62;
      *(_DWORD *)v61 = 136315650;
      v151 = sub_100040F58(0x6D6F724664616F6CLL, 0xEF29286568636143, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v61 + 4, v61 + 12);
      *(_WORD *)(v61 + 12) = 2080;
      v151 = sub_100040F58(0xD00000000000001BLL, 0x8000000100730E30, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v61 + 14, v61 + 22);
      *(_WORD *)(v61 + 22) = 2048;
      if ((unint64_t)v12 >> 62)
      {
        if (v12 < 0)
          v97 = v12;
        else
          v97 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v12);
        v63 = _CocoaArrayWrapper.endIndex.getter(v97);
        swift_bridgeObjectRelease(v12);
      }
      else
      {
        v63 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v12);
      v151 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v61 + 24, v61 + 32);
      swift_bridgeObjectRelease(v12);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s %s Sending %ld cached RootBarStandardItems to RootBarCoordinator on main thread", (uint8_t *)v61, 0x20u);
      swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v12, 2);
    }
    v98 = swift_getKeyPath(&unk_100730E00);
    v99 = swift_getKeyPath(&unk_100730E28);
    v152 = v12;
    v100 = v37;
    goto LABEL_121;
  }
  if (qword_1009CE408 != -1)
    swift_once(&qword_1009CE408, sub_10006B6D0);
  v39 = type metadata accessor for Logger(0);
  v40 = sub_100048F64(v39, (uint64_t)qword_1009E1C98);
  v41 = v37;
  swift_bridgeObjectRetain_n(v12, 2);
  v42 = v41;
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v43, (os_log_type_t)v44))
  {

    swift_bridgeObjectRelease_n(v12, 3);
LABEL_118:
    v137 = Logger.logObject.getter(v77);
    v138 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v137, v138))
    {
      v139 = swift_slowAlloc(22, -1);
      v140 = swift_slowAlloc(64, -1);
      v152 = v140;
      *(_DWORD *)v139 = 136315394;
      v151 = sub_100040F58(0x6D6F724664616F6CLL, 0xEF29286568636143, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v139 + 4, v139 + 12);
      *(_WORD *)(v139 + 12) = 2080;
      v151 = sub_100040F58(0xD00000000000001BLL, 0x8000000100730E30, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v139 + 14, v139 + 22);
      _os_log_impl((void *)&_mh_execute_header, v137, v138, "%s %s Sending placeholder RootBarStandardItems to RootBarCoordinator on main thread", (uint8_t *)v139, 0x16u);
      swift_arrayDestroy(v140, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v140, -1, -1);
      swift_slowDealloc(v139, -1, -1);
    }

    v141 = _s5Books20RootBarItemsProviderC019placeholderStandardD0SayAA0bC4ItemCGvgZ_0();
    v98 = swift_getKeyPath(&unk_100730E00);
    v99 = swift_getKeyPath(&unk_100730E28);
    v152 = v141;
    v100 = v42;
LABEL_121:
    static Published.subscript.setter(&v152, v100, v98, v99);
    return;
  }
  v148 = v40;
  v150 = v42;
  v45 = (char *)swift_slowAlloc(42, -1);
  v147 = swift_slowAlloc(128, -1);
  v152 = v147;
  *(_DWORD *)v45 = 136315906;
  v151 = sub_100040F58(0x6D6F724664616F6CLL, 0xEF29286568636143, &v152);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v45 + 4, v45 + 12);
  *((_WORD *)v45 + 6) = 2080;
  v151 = sub_100040F58(0xD00000000000001BLL, 0x8000000100730E30, &v152);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v45 + 14, v45 + 22);
  v149 = v45;
  *((_WORD *)v45 + 11) = 2082;
  if (v36 < 1)
    goto LABEL_111;
  v145 = v44;
  v146 = v43;
  swift_bridgeObjectRetain(v12);
  v46 = 0;
  v47 = _swiftEmptyArrayStorage;
  do
  {
    if ((v12 & 0xC000000000000001) != 0)
      v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v12);
    else
      v48 = *(id *)(v12 + 8 * v46 + 32);
    v49 = v48;
    v50 = objc_msgSend(v48, "description");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
      v47 = sub_100043ED0(0, v47[2] + 1, 1, v47);
    v55 = v47[2];
    v54 = v47[3];
    if (v55 >= v54 >> 1)
      v47 = sub_100043ED0((_QWORD *)(v54 > 1), v55 + 1, 1, v47);
    ++v46;
    v47[2] = v55 + 1;
    v56 = &v47[2 * v55];
    v56[4] = v51;
    v56[5] = v53;
  }
  while (v36 != v46);
  swift_bridgeObjectRelease(v12);
  v78 = v149;
  v151 = (uint64_t)v47;
  v79 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v143 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v144 = v79;
  v80 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v79, v143);
  v82 = v81;
  swift_bridgeObjectRelease(v47);
  v151 = sub_100040F58(v80, v82, &v152);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v78 + 24, v78 + 32);
  swift_bridgeObjectRelease_n(v12, 2);
  v83 = v150;

  swift_bridgeObjectRelease(v82);
  *((_WORD *)v78 + 16) = 2082;
  v84 = _s5Books20RootBarItemsProviderC019placeholderStandardD0SayAA0bC4ItemCGvgZ_0();
  v1 = v84;
  if (v84 >> 62)
  {
LABEL_112:
    if (v1 < 0)
      v130 = v1;
    else
      v130 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v85 = _CocoaArrayWrapper.endIndex.getter(v130);
    if (!v85)
      goto LABEL_116;
    goto LABEL_51;
  }
  v85 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v84);
  if (!v85)
  {
LABEL_116:
    v87 = _swiftEmptyArrayStorage;
LABEL_117:
    swift_bridgeObjectRelease(v1);
    v131 = (uint8_t *)v149;
    v151 = (uint64_t)v87;
    v132 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v144, v143);
    v134 = v133;
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v87);
    v151 = sub_100040F58(v132, v134, &v152);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v131 + 34, v131 + 42);
    v42 = v150;

    swift_bridgeObjectRelease(v134);
    v135 = v146;
    _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v145, "%s %s Found %{public}s cached RootBarItems. BUT are rejected, using placeholders: %{public}s", v131, 0x2Au);
    v136 = v147;
    swift_arrayDestroy(v147, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v136, -1, -1);
    swift_slowDealloc(v131, -1, -1);
    swift_bridgeObjectRelease(v12);

    goto LABEL_118;
  }
LABEL_51:
  if (v85 >= 1)
  {
    v86 = 0;
    v87 = _swiftEmptyArrayStorage;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v86, v1);
      else
        v88 = *(id *)(v1 + 8 * v86 + 32);
      v89 = v88;
      v90 = objc_msgSend(v88, "description");
      v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
      v93 = v92;

      if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) == 0)
        v87 = sub_100043ED0(0, v87[2] + 1, 1, v87);
      v95 = v87[2];
      v94 = v87[3];
      if (v95 >= v94 >> 1)
        v87 = sub_100043ED0((_QWORD *)(v94 > 1), v95 + 1, 1, v87);
      ++v86;
      v87[2] = v95 + 1;
      v96 = &v87[2 * v95];
      v96[4] = v91;
      v96[5] = v93;
    }
    while (v85 != v86);
    goto LABEL_117;
  }
  __break(1u);
}

unint64_t sub_10006899C()
{
  unint64_t result;

  result = qword_1009DAE40;
  if (!qword_1009DAE40)
  {
    result = swift_getWitnessTable(&unk_10071B618, &type metadata for OpenDefaultCollectionIntent);
    atomic_store(result, (unint64_t *)&qword_1009DAE40);
  }
  return result;
}

unint64_t sub_1000689E0()
{
  unint64_t result;

  result = qword_1009DAE38;
  if (!qword_1009DAE38)
  {
    result = swift_getWitnessTable(&unk_10071B588, &type metadata for OpenDefaultCollectionIntent);
    atomic_store(result, (unint64_t *)&qword_1009DAE38);
  }
  return result;
}

unint64_t sub_100068A24()
{
  unint64_t result;

  result = qword_1009DAE48;
  if (!qword_1009DAE48)
  {
    result = swift_getWitnessTable(&unk_10071B640, &type metadata for OpenDefaultCollectionIntent);
    atomic_store(result, (unint64_t *)&qword_1009DAE48);
  }
  return result;
}

uint64_t sub_100068A68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000689E0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for GenreRecommendationProvider()
{
  return objc_opt_self(BKGenreRecommendationProvider);
}

uint64_t sub_100068AB8()
{
  uint64_t v0;

  return sub_100015F5C(*(_QWORD *)(v0 + 16), &qword_1009DEC98, &qword_1009DEC90);
}

uint64_t sub_100068AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100010B60(&OBJC_IVAR___BKGenreRecommendationProvider____lazy_storage___collectionRecommendationService, &qword_1009DEC90, sub_100022840, (uint64_t)sub_100068AB8, a1);
}

uint64_t type metadata accessor for GenreRecommendationManager()
{
  return objc_opt_self(_TtC5Books26GenreRecommendationManager);
}

uint64_t type metadata accessor for EditFinishedDateActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F1948;
  if (!qword_1009F1948)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditFinishedDateActionItem);
  return result;
}

uint64_t sub_100068B60()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for CDCloudSyncVersionsAdaptor()
{
  return objc_opt_self(_TtC5Books26CDCloudSyncVersionsAdaptor);
}

uint64_t type metadata accessor for BookRecommendationProvider()
{
  return objc_opt_self(BKBookRecommendationProvider);
}

uint64_t sub_100068BF4()
{
  return sub_100015988(&qword_1009EC488);
}

uint64_t sub_100068C0C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

id sub_100068C30()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), "historyTokenOffset");
}

id sub_100068C44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), "historyToken");
}

id sub_100068C6C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), "cloudVersion");
}

uint64_t type metadata accessor for StandardItemsCacheManager()
{
  return objc_opt_self(BKStandardItemsCacheManager);
}

void sub_100068CE4()
{
  uint64_t v0;

  sub_10003FC40();
  qword_100A1F150 = v0;
}

uint64_t type metadata accessor for PersonalizationEventDonor()
{
  return objc_opt_self(BKPersonalizationEventDonor);
}

uint64_t type metadata accessor for OpenProductPageActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E7088;
  if (!qword_1009E7088)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for OpenProductPageActionItem);
  return result;
}

void sub_100068D5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_100065534(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    sub_1000655E4();
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = "\b";
      v6[4] = "\b";
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t sub_100068DF0(uint64_t a1)
{
  uint64_t v1;

  return sub_10000C55C(a1, v1);
}

uint64_t sub_100068DF8()
{
  uint64_t v0;

  return sub_1000185B4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100068E00(uint64_t a1)
{
  uint64_t v1;

  return sub_100009D1C(a1, *(void **)(v1 + 16));
}

uint64_t type metadata accessor for ExplicitDeclineActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E3720;
  if (!qword_1009E3720)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ExplicitDeclineActionItem);
  return result;
}

void sub_100068E64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;

  v4 = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10006CDD0(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = "\b";
    v7 = v5;
    v8 = v5;
    v9 = "\b";
    v10 = v5;
    swift_updateClassMetadata2(a1, 256, 7, &v4, a1 + 80);
  }
}

uint64_t type metadata accessor for AddToCollectionActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D27E8;
  if (!qword_1009D27E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddToCollectionActionItem);
  return result;
}

double sub_100068F2C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_100019FEC(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

unint64_t sub_100068F78()
{
  unint64_t result;

  result = qword_1009EC378;
  if (!qword_1009EC378)
  {
    result = swift_getWitnessTable(&unk_10072E078, &type metadata for SuggestionsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1009EC378);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudiobookNowPlaying.ButtonState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_10006904C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10006910C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

_QWORD *sub_1000690A8@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

unint64_t sub_1000690C8()
{
  unint64_t result;

  result = qword_1009EC4C8;
  if (!qword_1009EC4C8)
  {
    result = swift_getWitnessTable(&unk_10072E420, &type metadata for SuggestionsConfiguration.MediaType);
    atomic_store(result, (unint64_t *)&qword_1009EC4C8);
  }
  return result;
}

unint64_t sub_10006910C()
{
  unint64_t result;

  result = qword_1009EC580;
  if (!qword_1009EC580)
  {
    result = swift_getWitnessTable(&unk_10072E0E0, &type metadata for SuggestionsConfiguration.MediaType);
    atomic_store(result, (unint64_t *)&qword_1009EC580);
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionsConfiguration.CodingKeys()
{
  return &type metadata for SuggestionsConfiguration.CodingKeys;
}

unint64_t sub_100069168()
{
  unint64_t result;

  result = qword_1009EC560;
  if (!qword_1009EC560)
  {
    result = swift_getWitnessTable(&unk_10072E238, &type metadata for SuggestionsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC560);
  }
  return result;
}

unint64_t sub_1000691AC()
{
  unint64_t result;

  result = qword_1009EC568;
  if (!qword_1009EC568)
  {
    result = swift_getWitnessTable(&unk_10072E260, &type metadata for SuggestionsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC568);
  }
  return result;
}

unint64_t sub_1000691F0()
{
  unint64_t result;

  result = qword_1009EC4C0;
  if (!qword_1009EC4C0)
  {
    result = swift_getWitnessTable(&unk_10072E448, &type metadata for SuggestionsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EC4C0);
  }
  return result;
}

uint64_t type metadata accessor for MarkAsFinishedActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E72E0;
  if (!qword_1009E72E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MarkAsFinishedActionItem);
  return result;
}

uint64_t type metadata accessor for CancelDownloadActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EA378;
  if (!qword_1009EA378)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CancelDownloadActionItem);
  return result;
}

uint64_t type metadata accessor for ReportAnIssueActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D13E0;
  if (!qword_1009D13E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReportAnIssueActionItem);
  return result;
}

uint64_t static BookReaderModuleFactory.prewarm()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter(v3);
  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 0, 1, v6);
  v8 = type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = swift_allocObject(&unk_1009094E0, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  v11 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009E59B8, v10);
  swift_release(v11);
  v12 = v7(v5, 1, 1, v6);
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_100909508, 40, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v1;
  v15 = sub_100488750((uint64_t)v5, (uint64_t)&unk_1009E59C8, (uint64_t)v14);
  v16 = swift_release(v15);
  static TaskPriority.userInitiated.getter(v16);
  v7(v5, 0, 1, v6);
  v17 = swift_allocObject(&unk_100909530, 32, 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  v18 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009E59D8, v17);
  return swift_release(v18);
}

uint64_t sub_1000694C8()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR___BKReadingActivityService__setupState));
}

void sub_100069550(char a1)
{
  uint64_t v1;

  sub_10000FDC0(a1, v1);
}

uint64_t sub_100069558(char a1, char a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100069568(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(uint64_t (**)(uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), *(_BYTE *)(v3 + 48));
}

uint64_t sub_100069568(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, char a8)
{
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unsigned int v22;
  _QWORD v25[3];
  _BYTE v26[8];

  if (a3)
  {
    v11 = swift_errorRetain(a3);
    v22 = static os_log_type_t.error.getter(v11);
    sub_100009B88();
    v12 = (void *)static OS_os_log.readingActivity.getter();
    v13 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v14 = swift_allocObject(v13, 112, 7);
    *(_OWORD *)(v14 + 16) = xmmword_10070FC00;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    v15 = sub_10002BE50();
    *(_QWORD *)(v14 + 64) = v15;
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    swift_getErrorValue(a3, v26, v25);
    v16 = v25[1];
    v17 = v25[2];
    swift_bridgeObjectRetain(a5);
    v18 = Error.localizedDescription.getter(v16, v17);
    *(_QWORD *)(v14 + 96) = &type metadata for String;
    *(_QWORD *)(v14 + 104) = v15;
    *(_QWORD *)(v14 + 72) = v18;
    *(_QWORD *)(v14 + 80) = v19;
    os_log(_:dso:log:_:_:)(v22, &_mh_execute_header, v12, "Unable to fetch for %{public}@ status due to %{public}@", 55, 2, v14);

    swift_bridgeObjectRelease(v14);
    a6(a8 & 1);
    return swift_errorRelease(a3);
  }
  else
  {
    if ((a2 & 1) != 0)
      v21 = a1 & 1;
    else
      v21 = a8 & 1;
    return a6(v21);
  }
}

void sub_1000696CC(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_10000CC34(a1, a2, v2);
}

uint64_t sub_1000696D4(uint64_t a1)
{
  uint64_t v1;

  return sub_100009584(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1000696DC(uint64_t a1)
{
  uint64_t v1;

  return sub_100028574(a1, v1);
}

uint64_t sub_1000696E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100027CE8(a1, v1);
}

uint64_t sub_1000696EC(uint64_t a1)
{
  uint64_t v1;

  return sub_10002811C(a1, v1);
}

uint64_t sub_1000696F4(uint64_t a1)
{
  uint64_t v1;

  return sub_10000C95C(a1, *(_QWORD **)(v1 + 16));
}

void sub_1000696FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100014888(a1, a2, a3, v3);
}

uint64_t sub_10006973C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E29F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for InAppMessagesProvider()
{
  return objc_opt_self(_TtC5Books21InAppMessagesProvider);
}

uint64_t sub_1000697A4()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for InAppMessagesProvider();
  result = swift_initStaticObject(v0, &unk_1009CEBF0);
  static InAppMessagesProvider.shared = result;
  return result;
}

uint64_t type metadata accessor for AppStoreReviewManager()
{
  return objc_opt_self(BKAppStoreReviewManager);
}

id AppStoreReviewManager.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v1 = OBJC_IVAR___BKAppStoreReviewManager_remoteConfig;
  type metadata accessor for RCDataContainer(0);
  v2 = v0;
  *(_QWORD *)&v0[v1] = static RCDataContainer.default.getter();
  v3 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
  v4 = objc_msgSend(objc_allocWithZone((Class)AMSSharedStoreReview), "initWithBag:", v3);

  *(_QWORD *)&v2[OBJC_IVAR___BKAppStoreReviewManager_sharedStoreReview] = v4;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for AppStoreReviewManager();
  v5 = objc_msgSendSuper2(&v7, "init");
  sub_10001B874();

  return v5;
}

void sub_100069958(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  id v11;
  _QWORD v12[5];
  _QWORD *v13;

  if ((sub_100028A00() & 1) != 0)
  {
    v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                               + OBJC_IVAR___BKAppStoreReviewManager_sharedStoreReview), "shouldAttemptReview"));
    v6 = swift_allocObject(&unk_1008F4468, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v2);
    v7 = (_QWORD *)swift_allocObject(&unk_1008F44E0, 40, 7);
    v7[2] = v6;
    v7[3] = a1;
    v7[4] = a2;
    v12[4] = sub_100213498;
    v13 = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10000B7BC;
    v12[3] = &unk_1008F44F8;
    v8 = _Block_copy(v12);
    v9 = v13;
    v10 = a2;
    v11 = a1;
    swift_release(v9);
    objc_msgSend(v5, "addFinishBlock:", v8);
    _Block_release(v8);

  }
}

uint64_t type metadata accessor for WidgetServiceFactory()
{
  return objc_opt_self(_TtC5Books20WidgetServiceFactory);
}

void sub_100069AC0(uint64_t a1)
{
  uint64_t v1;

  sub_100017C54(a1, v1);
}

uint64_t type metadata accessor for ReadSampleActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F2020;
  if (!qword_1009F2020)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadSampleActionItem);
  return result;
}

unint64_t sub_100069B14()
{
  unint64_t result;

  result = qword_1009D3678;
  if (!qword_1009D3678)
  {
    result = swift_getWitnessTable(&unk_100713224, &type metadata for OpenTabBarItemIntent);
    atomic_store(result, (unint64_t *)&qword_1009D3678);
  }
  return result;
}

unint64_t sub_100069B58()
{
  unint64_t result;

  result = qword_1009D3670;
  if (!qword_1009D3670)
  {
    result = swift_getWitnessTable(&unk_100713194, &type metadata for OpenTabBarItemIntent);
    atomic_store(result, (unint64_t *)&qword_1009D3670);
  }
  return result;
}

unint64_t sub_100069B9C()
{
  unint64_t result;

  result = qword_1009D3680;
  if (!qword_1009D3680)
  {
    result = swift_getWitnessTable(&unk_10071324C, &type metadata for OpenTabBarItemIntent);
    atomic_store(result, (unint64_t *)&qword_1009D3680);
  }
  return result;
}

uint64_t sub_100069BE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100069B58();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for AppLifecycleObserver()
{
  return objc_opt_self(BKAppLifecycleObserver);
}

uint64_t sub_100069C3C(uint64_t a1)
{
  return sub_10002A9D8(a1, "%@: UIApplication will enter foreground", &OBJC_IVAR___BKAppLifecycleObserver_onWillEnterForeground, 0xD000000000000015, 0x80000001007D6CA0);
}

uint64_t sub_100069C74(uint64_t a1)
{
  return sub_10002A9D8(a1, "%@: UIApplication did become active", &OBJC_IVAR___BKAppLifecycleObserver_onDidBecomeActive, 0xD000000000000011, 0x80000001007D6D00);
}

id AppLifecycleObserver.init(coordinator:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t ObjCClassMetadata;
  uint64_t ObjCClassFromMetadata;
  id v7;

  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend((id)objc_opt_self(BCAppKitBundleLoader), "appKitBundleClass");
  if (v4)
  {
    ObjCClassMetadata = swift_getObjCClassMetadata(v4);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjCClassMetadata);
  }
  else
  {
    ObjCClassFromMetadata = 0;
  }
  v7 = objc_msgSend(v1, "initWithCoordinator:uiApplication:appKitBundle:", a1, v3, ObjCClassFromMetadata);

  swift_unknownObjectRelease(a1);
  return v7;
}

void sub_100069D74()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  sub_10001C5A0();

}

uint64_t type metadata accessor for ContextMenuProvider()
{
  return objc_opt_self(BKContextMenuProvider);
}

void sub_100069E24(void *a1)
{
  uint64_t v1;

  sub_100014674(a1, v1);
}

uint64_t type metadata accessor for RootBarCoordinator()
{
  return objc_opt_self(BKRootBarCoordinator);
}

uint64_t sub_100069E4C()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR___BKRootBarCoordinator_selectedItemPublisher));
}

void sub_100069E7C(uint64_t a1)
{
  uint64_t v1;

  sub_10001D874(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for ReadThisActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F3088;
  if (!qword_1009F3088)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadThisActionItem);
  return result;
}

uint64_t _s5Books18PropertyValueActorV9ActorTypeCMa_0()
{
  return objc_opt_self(_TtCV5BooksP33_5B30E46AEB245387F7B3E2311D1DAE8818PropertyValueActor9ActorType);
}

uint64_t type metadata accessor for PropertyValueActor.ActorType()
{
  return objc_opt_self(_TtCV5BooksP33_16B7F41AADBDF417B803192C8983AAB118PropertyValueActor9ActorType);
}

uint64_t type metadata accessor for DownloadActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DFC38;
  if (!qword_1009DFC38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DownloadActionItem);
  return result;
}

uint64_t type metadata accessor for CopyLinkActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EDC18;
  if (!qword_1009EDC18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CopyLinkActionItem);
  return result;
}

uint64_t sub_100069F94(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + class metadata base offset for AppShareActionItem);
}

uint64_t type metadata accessor for AppShareActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D4320;
  if (!qword_1009D4320)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppShareActionItem);
  return result;
}

void sub_10006A00C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100011D3C(a1, a2, *(void (**)(__n128))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10006A014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
  v5 = sub_10030DD24(*(_QWORD **)(v2 + 16), a1);
  v4(v5, a2);
  return swift_bridgeObjectRelease(v5);
}

Swift::Void __swiftcall EngagementManager.reportAppOpenEvent()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Logger.engagement.getter(v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Report appOpen event", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v11 = *(id *)(v1 + OBJC_IVAR___BKEngagementManager_eventController);
  dispatch thunk of EngagementEventController.submitEvent(_:_:)(0x6E65704F707061, 0xE700000000000000, 0);

  v12 = *(id *)(v1 + OBJC_IVAR___BKEngagementManager_manager);
  Manager.updateLocalStorage(completion:)(sub_100012908, 0);

}

Swift::Void __swiftcall EngagementManager.setupSessionDonor()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Logger.engagement.getter(v4);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Setting up SessionDonor for engagement manager", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v11 = OBJC_IVAR___BKEngagementManager_manager;
  v12 = *(id *)(v1 + OBJC_IVAR___BKEngagementManager_manager);
  v13 = Manager.donor(type:)(0x2D6E6F6973736573, 0xED0000726F6E6F64);

  if (v13)
  {
    v14 = type metadata accessor for SessionDonor(0);
    if (swift_dynamicCastClass(v13, v14))
    {
      v15 = *(id *)(v1 + v11);
      sub_100022B7C(v15);
      swift_unknownObjectRelease(v13);

    }
    else
    {
      swift_unknownObjectRelease(v13);
    }
  }
}

void sub_10006A398(void *a1, char a2)
{
  uint64_t v2;

  sub_1000181C0(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

uint64_t sub_10006A3A8(uint64_t a1)
{
  uint64_t v1;

  return sub_100037A10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

void sub_10006A3B8(void *a1, void *a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v5;

  sub_100026478(a1, a2, a3, a4, a5, *(char **)(v5 + 16));
}

void sub_10006A3C0(void *a1, char a2)
{
  uint64_t v2;

  sub_10001B6D4(a1, a2 & 1, *(void **)(v2 + 16));
}

char *EngagementManager.init(configuration:configurationContainer:)(void *a1, void *a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *result;
  char *v19;
  id v20;
  char *v21;
  id v22;
  objc_super v23;

  v5 = type metadata accessor for Logger(0);
  __chkstk_darwin(v5);
  v2[OBJC_IVAR___BKEngagementManager_cloudKitSyncEnabled] = 0;
  v6 = OBJC_IVAR___BKEngagementManager_metadata;
  v7 = objc_allocWithZone((Class)type metadata accessor for EngagementManagerMetadata(0));
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR___BKEngagementManager_analyticsHelper] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BKEngagementManager_updateMetadataGeneration] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BKEngagementManager____lazy_storage___iso8601DateFormatter] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BKEngagementManager_eventController] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EngagementEventController(0)), "init");
  v9 = objc_msgSend(a1, "managerConfiguration");
  v10 = objc_allocWithZone((Class)type metadata accessor for Manager(0));
  *(_QWORD *)&v8[OBJC_IVAR___BKEngagementManager_manager] = Manager.init(configuration:)(v9);
  *(_QWORD *)&v8[OBJC_IVAR___BKEngagementManager_remoteConfigurationContainer] = a2;
  v22 = a2;

  v23.receiver = v8;
  v23.super_class = (Class)type metadata accessor for EngagementManager();
  v11 = (char *)objc_msgSendSuper2(&v23, "init");
  v12 = *(void **)&v11[OBJC_IVAR___BKEngagementManager_eventController];
  v13 = v11;
  v14 = v12;
  dispatch thunk of EngagementEventController.dataProvider.setter(v11);

  v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SessionDonor(0)), "init");
  v16 = *(id *)&v13[OBJC_IVAR___BKEngagementManager_manager];
  v17 = v15;
  Manager.register(donor:)();

  result = (char *)objc_msgSend((id)objc_opt_self(BLDownloadQueue), "sharedInstance");
  if (result)
  {
    v19 = result;
    objc_msgSend(result, "addObserver:", v13);

    v20 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v21 = v13;
    objc_msgSend(v20, "addObserver:selector:name:object:", v21, "onDidReceiveAppDidBackground:", UIApplicationWillResignActiveNotification, 0);

    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006A724(uint64_t a1)
{
  uint64_t v1;

  return sub_10001253C(a1, *(void (**)(__n128))(v1 + 16));
}

uint64_t type metadata accessor for DislikeActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EF3A8;
  if (!qword_1009EF3A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DislikeActionItem);
  return result;
}

uint64_t sub_10006A768()
{
  uint64_t result;

  sub_100009B88();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x4365636976726553, 0xED00007265746E65);
  qword_1009D5C98 = result;
  return result;
}

void sub_10006A7D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100065638(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = "\b";
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_10072A850;
    v4[7] = &unk_10072A850;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 304);
  }
}

uint64_t sub_10006A880()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEEA0);
  v1 = sub_100030B34(&qword_1009E87F0, (uint64_t *)&unk_1009CEEA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

Swift::Void __swiftcall TabBarController.viewDidLoad()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for TabBarController(0);
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "tabBar");
  objc_msgSend(v1, "setSpringLoaded:", 1);

  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setAccessibilityIgnoresInvertColors:", 1);

    v4 = objc_msgSend(v0, "tabBar");
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
    objc_msgSend(v4, "setTintColor:", v5);

  }
  else
  {
    __break(1u);
  }
}

char *TabBarController.init(viewControllerProvider:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  objc_super v33;

  v30 = a1;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v31 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D33C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR___BKTabBarController_viewControllerProvider];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___BKTabBarController_viewControllerProvider], 0);
  v10 = OBJC_IVAR___BKTabBarController_rootBarEventSubject;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009CEEA0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = v1;
  *(_QWORD *)&v1[v10] = PassthroughSubject.init()();
  v13 = &v12[OBJC_IVAR___BKTabBarController__cachedSelectedItem];
  v32[0] = 0;
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D7930);
  Published.init(initialValue:)(v32, v14);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v8, v5);
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR___BKTabBarController__rootBarCoordinator], 0);
  *(_QWORD *)&v12[OBJC_IVAR___BKTabBarController_items] = _swiftEmptyArrayStorage;
  v15 = OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController;
  *(_QWORD *)&v12[v15] = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  v12[OBJC_IVAR___BKTabBarController_isPopulatingItems] = 0;
  v12[OBJC_IVAR___BKTabBarController_isTransferingFromSidebar] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___BKTabBarController_cancellables] = &_swiftEmptySetSingleton;
  v16 = v30;
  swift_unknownObjectWeakAssign(v9, v30);

  v17 = (objc_class *)type metadata accessor for TabBarController(0);
  v33.receiver = v12;
  v33.super_class = v17;
  v18 = (char *)objc_msgSendSuper2(&v33, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v18, "setDelegate:", v18);
  sub_100049A90();
  v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(JSABridgeWillReloadNotification, 0);

  v20 = swift_allocObject(&unk_10090C330, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v18);
  v21 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v22 = Publisher<>.sink(receiveValue:)(sub_1004F762C, v20, v2, v21);
  swift_release(v20);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v2);
  v23 = &v18[OBJC_IVAR___BKTabBarController_cancellables];
  swift_beginAccess(&v18[OBJC_IVAR___BKTabBarController_cancellables], v32, 33, 0);
  AnyCancellable.store(in:)(v23);
  swift_endAccess(v32);
  swift_release(v22);
  v24 = sub_10004CFD4(&qword_1009E8848);
  v25 = swift_allocObject(v24, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v25 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v25 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  v26 = v18;
  v27 = UIViewController.registerForTraitChanges(_:action:)(v25, "traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_unknownObjectRelease(v27);
  swift_bridgeObjectRelease(v25);

  swift_unknownObjectRelease(v16);
  return v26;
}

void sub_10006ADD0(void *a1)
{
  uint64_t v1;

  sub_10002373C(a1, *(void **)(v1 + 16), *(char **)(v1 + 24), *(id *)(v1 + 32), *(void **)(v1 + 40));
}

Swift::Void __swiftcall TabBarController._setSelectedViewController(_:)(UIViewController_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  objc_class *v20;
  uint64_t v21;
  id v22;
  id v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  objc_class *v27;
  _QWORD *v28;
  char v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  char isUniquelyReferenced_nonNull_native;
  void *v62;
  Class v63;
  _QWORD *v64;
  uint64_t v65;
  Class v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  _OWORD v81[2];
  __int128 v82;
  uint64_t v83;
  _QWORD *v84;
  objc_super v85;

  v2 = v1;
  isa = a1.value.super.super.isa;
  v4 = type metadata accessor for FigaroClickEvent.TargetType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for FigaroClickEvent.Location.Type(0);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v72 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FigaroActionType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v74 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FigaroClickEvent.ActionContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v70 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FigaroClickEvent(0);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  __chkstk_darwin(v15);
  v73 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v1, "selectedViewController");
  v78 = v4;
  v79 = v7;
  v77 = v5;
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "bc_deepestVisibleChildViewControllerIncludePresented:", 1);

  }
  else
  {
    v19 = 0;
  }
  v20 = (objc_class *)type metadata accessor for TabBarController(0);
  v85.receiver = v2;
  v85.super_class = v20;
  objc_msgSendSuper2(&v85, "_setSelectedViewController:", isa);
  v21 = OBJC_IVAR___BKTabBarController_isPopulatingItems;
  if (v2[OBJC_IVAR___BKTabBarController_isPopulatingItems] == 1)
  {
    v22 = objc_msgSend(v2, "bk_rootBarCoordinator");
    if (!v22)
      goto LABEL_24;
    v23 = v22;
    v24 = (char *)objc_msgSend(v22, "hostingViewController");

    swift_unknownObjectRelease(v23);
    if (v24 != v2)
      goto LABEL_24;
  }
  v25 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
  v26 = v25;
  if (!isa)
  {
    swift_bridgeObjectRelease(v25);
    if ((v2[v21] & 1) != 0)
      goto LABEL_24;
    goto LABEL_17;
  }
  v68 = v19;
  v27 = isa;
  v28 = (_QWORD *)sub_100013690((uint64_t)v27, v26, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v30 = v29;
  swift_bridgeObjectRelease(v26);
  if ((v30 & 1) != 0)
    goto LABEL_13;
  v31 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v32 = (void *)static OS_dispatch_queue.main.getter(v31);
  v33 = &_dispatch_main_q;
  v34 = &_dispatch_main_q;
  v35 = v32;
  v36 = &_dispatch_main_q;
  if (v35 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v33 = v35;
  }

  *(_QWORD *)&v81[0] = *(_QWORD *)&v2[OBJC_IVAR___BKTabBarController_items];
  v84 = v28;
  v37 = sub_10004CFD4(&qword_1009E8800);
  v38 = sub_100030B34(&qword_1009E8808, &qword_1009E8800, (uint64_t)&protocol conformance descriptor for [A]);
  Collection.subscript.getter(&v82, &v84, v37, v38);
  v39 = (void *)v82;
  if (!(_QWORD)v82)
  {
LABEL_13:

  }
  else
  {
    sub_100049E28((void *)v82, v27);

  }
  v19 = v68;
  if ((v2[v21] & 1) == 0)
  {
LABEL_17:
    if ((v2[OBJC_IVAR___BKTabBarController_isTransferingFromSidebar] & 1) == 0)
    {
      v40 = TabBarController.selectedItem.getter();
      if (v40)
      {
        v41 = (char *)v40;
        v42 = v70;
        (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v70, enum case for FigaroClickEvent.ActionContext.tabBarController(_:), v12);
        v43 = v74;
        (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v74, enum case for FigaroActionType.focus(_:), v9);
        v44 = *(_QWORD *)&v41[OBJC_IVAR___BKRootBarItem_url + 8];
        v68 = *(id *)&v41[OBJC_IVAR___BKRootBarItem_url];
        v45 = sub_10004CFD4(&qword_1009E8860);
        v46 = type metadata accessor for FigaroClickEvent.Location(0);
        v47 = swift_allocObject(v45, ((*(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v46 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80) | 7);
        *(_OWORD *)(v47 + 16) = xmmword_10070CCA0;
        v48 = objc_msgSend(v2, "selectedIndex", swift_bridgeObjectRetain(v44).n128_f64[0]);
        v49 = v72;
        (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v72, enum case for FigaroClickEvent.Location.Type.tabItem(_:), v71);
        FigaroClickEvent.Location.init(adamId:name:locationPosition:locationType:)(0, 0, 0, 0, v48, v49);
        v72 = v41;
        v50 = &v41[OBJC_IVAR___BKRootBarItem_identifier];
        v51 = *(_QWORD *)&v41[OBJC_IVAR___BKRootBarItem_identifier];
        v52 = *((_QWORD *)v50 + 1);
        v53 = v79;
        (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v79, enum case for FigaroClickEvent.TargetType.tabItem(_:), v78);
        swift_bridgeObjectRetain(v52);
        v54 = sub_1004F6E50((uint64_t)_swiftEmptyArrayStorage);
        v55 = v73;
        FigaroClickEvent.init(actionContext:actionDetails:actionType:actionURLString:locations:targetId:targetType:)(v42, v54, v43, v68, v44, v47, v51, v52, v53);
        v56 = sub_100008DB0(&qword_1009D7C20, (uint64_t (*)(uint64_t))&type metadata accessor for FigaroClickEvent, (uint64_t)&protocol conformance descriptor for FigaroClickEvent);
        v57 = v76;
        v58 = FigaroEventBuilding.build()(v76, v56);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v57);
        v84 = _swiftEmptyDictionarySingleton;
        if (v19 && (v59 = objc_msgSend(v19, "ba_effectiveAnalyticsTracker")) != 0)
        {
          v60 = v59;
          v83 = type metadata accessor for BATracker(0);
          *(_QWORD *)&v82 = v60;
          sub_10004CFC4(&v82, v81);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
          v80 = _swiftEmptyDictionarySingleton;
          sub_1002C3A2C(v81, 0x72656B63617274, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
          v84 = v80;
          swift_bridgeObjectRelease(0x8000000000000000);
        }
        else
        {
          sub_1002BD938(0x72656B63617274, 0xE700000000000000, &v82);
          sub_100010960((uint64_t)&v82, (uint64_t *)&unk_1009D04E0);
        }
        v62 = (void *)objc_opt_self(JSAApplication);
        type metadata accessor for FigaroKey(0);
        sub_100008DB0(&qword_1009D05A8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070DDC4);
        v63 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v58);
        v64 = v84;
        v65 = sub_1004EC9E0((uint64_t)v84);
        swift_bridgeObjectRelease(v64);
        v66 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v65);
        objc_msgSend(v62, "recordNativeEvent:additionalInfo:", v63, v66);

      }
    }
  }
LABEL_24:

}

uint64_t sub_10006B508()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10006B530(void *a1)
{
  uint64_t v1;

  return sub_10000CAA8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for RenameActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D6870;
  if (!qword_1009D6870)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RenameActionItem);
  return result;
}

uint64_t type metadata accessor for RemoveActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F1130;
  if (!qword_1009F1130)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RemoveActionItem);
  return result;
}

uint64_t type metadata accessor for ObjectGraphHost()
{
  return objc_opt_self(BKObjectGraphHost);
}

uint64_t sub_10006B5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for UnsafeSendable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeSendable);
}

double sub_10006B5E4(uint64_t *a1)
{
  uint64_t v1;

  return sub_100527274(a1, v1);
}

uint64_t sub_10006B5EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v5 = *a1;
  result = sub_100526F68((void (*)(uint64_t *__return_ptr, _QWORD *, __n128))sub_100529038, 0, (uint64_t (*)(__n128))sub_100528F2C, (uint64_t)&v4, v5);
  *a2 = result;
  return result;
}

void sub_10006B638()
{
  uint64_t v0;

  sub_10000ABB4(v0);
}

uint64_t sub_10006B640(uint64_t a1)
{
  uint64_t v1;

  return sub_100015870(a1, v1);
}

unint64_t sub_10006B648()
{
  unint64_t result;

  result = qword_1009E9F98;
  if (!qword_1009E9F98)
  {
    result = swift_getWitnessTable(&unk_10072BA64, &type metadata for MenuController.UserCollection);
    atomic_store(result, (unint64_t *)&qword_1009E9F98);
  }
  return result;
}

void sub_10006B68C(uint64_t *a1)
{
  uint64_t v1;

  sub_1005283F0(a1, v1);
}

uint64_t type metadata accessor for GiftActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E00C0;
  if (!qword_1009E00C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GiftActionItem);
  return result;
}

uint64_t sub_10006B6D0(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009E1C98, 0x726142746F6F52, 0xE700000000000000);
}

uint64_t type metadata accessor for WidgetService()
{
  return objc_opt_self(BKWidgetService);
}

uint64_t sub_10006B710()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR___BKWidgetService__setupState));
}

void sub_10006B724(char a1, char a2)
{
  uint64_t v2;

  sub_10000C384(a1, a2 & 1, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10006B734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100019DA4(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a3, a4);
}

uint64_t ServiceCenter.setupServices(withLibraryManager:appDelegate:)(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD aBlock[5];
  uint64_t v50;
  char v51[24];

  v3 = v2;
  v46 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v2[OBJC_IVAR___BKServiceCenter_services];
  swift_beginAccess(&v2[OBJC_IVAR___BKServiceCenter_services], v51, 0, 0);
  v13 = OBJC_IVAR___BKServiceCenter__setupState;
  v14 = *(_QWORD *)&v2[OBJC_IVAR___BKServiceCenter__setupState];
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    v15 = swift_retain(v14);
    dispatch thunk of ObservableContainer.value.getter(aBlock, v15);
    result = swift_release(v14);
    if (LOBYTE(aBlock[0]))
      return result;
    v44 = v6;
    v20 = static os_log_type_t.debug.getter(result, v17, v18, v19);
    if (qword_1009CDD70 != -1)
      swift_once(&qword_1009CDD70, sub_10006A768);
    v21 = (id)qword_1009D5C98;
    os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, v21, "Started setting up services", 27, 2, _swiftEmptyArrayStorage);

    v22 = *(_QWORD *)&v3[v13];
    swift_retain(v22);
    MutableObservableContainer.mutate(_:)(sub_100066B98, 0);
    swift_release(v22);
    v23 = swift_allocObject(&unk_10090F5D8, 24, 7);
    v45 = v23;
    *(_QWORD *)(v23 + 16) = _swiftEmptyArrayStorage;
    v24 = (_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)v12;
    v26 = v3;
    v27 = a1;
    v28 = v46;
    swift_bridgeObjectRetain(v25);
    sub_10002DD38(v29, (uint64_t)v26, v24, v27, v28);
    swift_bridgeObjectRelease(v25);

    v30 = sub_100027528();
    v31 = sub_100059BB4();
    v32 = (void *)static OS_dispatch_queue.main.getter(v31);
    v33 = swift_allocObject(&unk_10090F600, 24, 7);
    swift_unknownObjectWeakInit(v33 + 16, v26);
    v34 = swift_allocObject(&unk_10090F628, 32, 7);
    v35 = v45;
    *(_QWORD *)(v34 + 16) = v45;
    *(_QWORD *)(v34 + 24) = v33;
    aBlock[4] = sub_10006B734;
    v50 = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_10090F640;
    v36 = _Block_copy(aBlock);
    swift_retain(v35);
    v37 = swift_retain(v33);
    static DispatchQoS.unspecified.getter(v37);
    v48 = _swiftEmptyArrayStorage;
    v38 = sub_100008E8C();
    v39 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v40 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v39, v40, v5, v38);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v11, v8, v32, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
    v41 = v50;
    swift_release(v45);
    swift_release(v33);
    v42 = v41;
  }
  else
  {
    swift_retain(v14);
    MutableObservableContainer.mutate(_:)(sub_100066BA4, 0);
    v42 = v14;
  }
  return swift_release(v42);
}

uint64_t sub_10006BAEC(uint64_t a1, uint64_t a2)
{
  return sub_10002DFD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ReadingActivityService);
}

uint64_t sub_10006BAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_release(a4);
    swift_release(a5);
    swift_release(a6);
    swift_release(a7);
    swift_release(a8);
    swift_release(a9);
    swift_release(a10);
    return swift_bridgeObjectRelease(a12);
  }
  return result;
}

uint64_t sub_10006BB90(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009E8770, 0x726142626154, 0xE600000000000000);
}

void sub_10006BBAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E3900)
  {
    v2 = type metadata accessor for YearInReview.RemoteConfiguration(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E3900);
  }
}

uint64_t sub_10006BC00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000296D0(a1, a2);
}

void sub_10006BC14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10000AB68(319, (unint64_t *)&unk_1009EA898, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_initStructMetadata(a1, 256, 3, &v4, a1 + 16);
  }
}

unint64_t sub_10006BC9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D32E8;
  if (!qword_1009D32E8)
  {
    v1 = type metadata accessor for YearInReview.RemoteConfiguration(255);
    result = swift_getWitnessTable(&unk_10072C620, v1);
    atomic_store(result, (unint64_t *)&qword_1009D32E8);
  }
  return result;
}

void sub_10006BCE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10000AB68(319, (unint64_t *)&qword_1009D5E30, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_10006BD68()
{
  return sub_100008DB0(&qword_1009EA968, type metadata accessor for YearInReview.RemoteConfiguration.DateRange, (uint64_t)&unk_10072C558);
}

ValueMetadata *type metadata accessor for YearInReview.RemoteConfiguration.DateRange.CodingKeys()
{
  return &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys;
}

unint64_t sub_10006BDAC()
{
  unint64_t result;

  result = qword_1009EAA80;
  if (!qword_1009EAA80)
  {
    result = swift_getWitnessTable(&unk_10072C768, &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EAA80);
  }
  return result;
}

unint64_t sub_10006BDF0()
{
  unint64_t result;

  result = qword_1009EAA88;
  if (!qword_1009EAA88)
  {
    result = swift_getWitnessTable(&unk_10072C790, &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EAA88);
  }
  return result;
}

uint64_t sub_10006BE34()
{
  return sub_100008DB0(&qword_1009EA970, type metadata accessor for YearInReview.RemoteConfiguration, (uint64_t)&unk_10072C5F8);
}

ValueMetadata *type metadata accessor for YearInReview.RemoteConfiguration.CodingKeys()
{
  return &type metadata for YearInReview.RemoteConfiguration.CodingKeys;
}

unint64_t sub_10006BE78()
{
  unint64_t result;

  result = qword_1009EAA90;
  if (!qword_1009EAA90)
  {
    result = swift_getWitnessTable(&unk_10072C6B0, &type metadata for YearInReview.RemoteConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EAA90);
  }
  return result;
}

unint64_t sub_10006BEBC()
{
  unint64_t result;

  result = qword_1009EAA98;
  if (!qword_1009EAA98)
  {
    result = swift_getWitnessTable(&unk_10072C6D8, &type metadata for YearInReview.RemoteConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EAA98);
  }
  return result;
}

unint64_t sub_10006BF00()
{
  unint64_t result;

  result = qword_1009EA9B8;
  if (!qword_1009EA9B8)
  {
    result = swift_getWitnessTable(&unk_10072C8F8, &type metadata for YearInReview.RemoteConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EA9B8);
  }
  return result;
}

uint64_t type metadata accessor for SessionDonor(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DB200;
  if (!qword_1009DB200)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SessionDonor);
  return result;
}

void sub_10006BFA8(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_sampleButtonUsed);
}

void sub_10006BFC8(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_notificationSettingsVisited);
}

void sub_10006BFE8(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_everUsedOrientationLockMenuButton);
}

void sub_10006C008(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmark);
}

void sub_10006C028(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_everUsedReadingScrubber);
}

void sub_10006C048(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_everUsedCarplayApp);
}

void sub_10006C068(uint64_t a1)
{
  uint64_t v1;

  sub_10000D2C8(a1, *(_QWORD *)(v1 + 16));
}

void sub_10006C070(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_addToWTRButtonUsed);
}

void sub_10006C090(uint64_t a1)
{
  uint64_t v1;

  sub_10004AC88(a1, v1, &OBJC_IVAR___BKSessionDonor_previewButtonUsed);
}

uint64_t sub_10006C0B0(uint64_t *a1)
{
  uint64_t v1;

  return sub_10000C64C(a1, v1);
}

uint64_t sub_10006C0B8()
{
  uint64_t v0;

  return sub_10001E1DC(v0);
}

uint64_t RootBarItem.tabBarTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v11[6];
  _BYTE v12[8];
  uint64_t v13;
  Swift::String v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
  if (v1)
  {
    v2 = 0;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_titleOverride);
    v4 = v1;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
    v5 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_identifier + 8);
    swift_bridgeObjectRetain(v5);
    _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v6, (unint64_t)v5);
    v8 = v7;
    swift_bridgeObjectRelease(v7);
    if (v8)
    {
      swift_bridgeObjectRelease(v5);
      v9 = 14;
    }
    else
    {
      v14._countAndFlagsBits = v6;
      v14._object = v5;
      v9 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v14);
      if (v9 == 16)
        v9 = 15;
    }
    sub_100047B64(v9, v11);
    v3 = v11[0];
    v4 = v11[3];
    v2 = v11[5];
    sub_100025B3C((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_1009D7970);
    if (!v13)
    {
      v2 = 0;
      v4 = 0xE000000000000000;
      v3 = 0;
    }
  }
  swift_bridgeObjectRetain_n(v1, 2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return v3;
}

uint64_t sub_10006C1F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003E124(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MetadataCache, (uint64_t)&protocol witness table for MetadataCache, a2);
}

uint64_t sub_10006C20C(uint64_t a1)
{
  return sub_1000317FC(a1);
}

uint64_t destroy for BooksIntentSceneConfigurator(uint64_t a1)
{

  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
}

unint64_t sub_10006C254()
{
  unint64_t result;

  result = qword_1009F0F10;
  if (!qword_1009F0F10)
  {
    result = swift_getWitnessTable(&unk_100730758, &type metadata for BooksIntentSceneConfigurator);
    atomic_store(result, (unint64_t *)&qword_1009F0F10);
  }
  return result;
}

uint64_t type metadata accessor for BooksFinishedDataSource()
{
  return objc_opt_self(_TtC5Books23BooksFinishedDataSource);
}

uint64_t sub_10006C2B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (uint64_t *)(*v2 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_onChange);
  v6 = *v4;
  v5 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  sub_10002AD00(v6, v5);
  return swift_retain(a2);
}

uint64_t sub_10006C2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v7 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_100915540, 64, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a2;
  v12[5] = a3;
  v12[6] = v10;
  v12[7] = a1;
  swift_retain(a3);
  v13 = v10;
  v14 = sub_10030C02C((uint64_t)v9, (uint64_t)&unk_1009EF2E8, (uint64_t)v12);
  return swift_release(v14);
}

void sub_10006C3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BooksFinishedDataSource.fetchFinishedAssetCountPriorTo(year:completion:)(a1, a2, a3);
}

void sub_10006C3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BooksFinishedDataSource.fetchFinishedAssetCountAfter(year:completion:)(a1, a2, a3);
}

void sub_10006C418(uint64_t a1, uint64_t a2)
{
  BooksFinishedDataSource.fetchFinishedAssetCount(completion:)(a1, a2);
}

uint64_t BooksFinishedDataSource.fetchFinishedAssets(year:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v7 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject(&unk_100915400, 64, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = v3;
  v11[7] = a1;
  swift_retain(a3);
  v12 = v3;
  v13 = sub_10030C02C((uint64_t)v9, (uint64_t)&unk_1009EF260, (uint64_t)v11);
  return swift_release(v13);
}

uint64_t sub_10006C514()
{
  uint64_t v0;

  return sub_100026CBC(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void BooksFinishedDataSource.fetchFinishedAssetCountPriorTo(year:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100026AE4(a1, a2, a3, (SEL *)&selRef_predicateFor_All_Marked_As_Finished_LibraryAssets_Prior_To_Year_, (uint64_t)&unk_1009154A0, (uint64_t)sub_10006C514, (uint64_t)&unk_1009154B8);
}

uint64_t sub_10006C560()
{
  uint64_t v0;

  return sub_100026CBC(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void BooksFinishedDataSource.fetchFinishedAssetCountAfter(year:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100026AE4(a1, a2, a3, (SEL *)&selRef_predicateFor_All_Marked_As_Finished_LibraryAssets_After_Year_, (uint64_t)&unk_1009154F0, (uint64_t)sub_10006C560, (uint64_t)&unk_100915508);
}

uint64_t sub_10006C5AC()
{
  uint64_t v0;

  return sub_100026CBC(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void BooksFinishedDataSource.fetchFinishedAssetCount(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  _QWORD v19[5];
  _QWORD *v20;

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "predicateFor_All_Finished_LibraryAssets");
  v19[0] = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v7 = sub_10004CFD4(&qword_1009DF300);
  String.init<A>(describing:)(v19, v7);
  v9 = v8;
  v10 = objc_allocWithZone((Class)NSFetchRequest);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend(v10, "initWithEntityName:", v11, v19[0]);

  objc_msgSend(v12, "setPredicate:", v6);
  v13 = *(void **)(v3 + OBJC_IVAR____TtC5Books23BooksFinishedDataSource_moc);
  v14 = swift_allocObject(&unk_100915428, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v3);
  v15 = (_QWORD *)swift_allocObject(&unk_100915450, 48, 7);
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = v12;
  v19[4] = sub_10006C5AC;
  v20 = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1000147F0;
  v19[3] = &unk_100915468;
  v16 = _Block_copy(v19);
  v17 = v20;
  swift_retain(a2);
  v18 = v12;
  swift_release(v17);
  objc_msgSend(v13, "performBlock:", v16);
  _Block_release(v16);

}

uint64_t type metadata accessor for AddToWantToReadActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009D42B8;
  if (!qword_1009D42B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddToWantToReadActionItem);
  return result;
}

unint64_t sub_10006C7DC()
{
  unint64_t result;

  result = qword_1009E4DD8;
  if (!qword_1009E4DD8)
  {
    result = swift_getWitnessTable(&unk_1007265D8, &type metadata for SearchBooksIntent);
    atomic_store(result, (unint64_t *)&qword_1009E4DD8);
  }
  return result;
}

unint64_t sub_10006C820()
{
  unint64_t result;

  result = qword_1009E4DD0;
  if (!qword_1009E4DD0)
  {
    result = swift_getWitnessTable(&unk_100726548, &type metadata for SearchBooksIntent);
    atomic_store(result, (unint64_t *)&qword_1009E4DD0);
  }
  return result;
}

unint64_t sub_10006C864()
{
  unint64_t result;

  result = qword_1009E4DE0;
  if (!qword_1009E4DE0)
  {
    result = swift_getWitnessTable(&unk_100726600, &type metadata for SearchBooksIntent);
    atomic_store(result, (unint64_t *)&qword_1009E4DE0);
  }
  return result;
}

uint64_t sub_10006C8A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10006C820();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_10006C8D8(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009E3898, 0xD00000000000001DLL, 0x8000000100724E50);
}

uint64_t sub_10006C8FC(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009E3880, 0xD000000000000024, 0x8000000100724E20);
}

uint64_t sub_10006C920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006C968()
{
  return sub_10001247C(&qword_1009D8B28, (uint64_t)&protocol conformance descriptor for Environment);
}

uint64_t sub_10006C98C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10001247C(&qword_1009D8B50, (uint64_t)&protocol conformance descriptor for Environment);
  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

void sub_10006C9DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009E3908)
  {
    v0 = type metadata accessor for UserDefault(0, &type metadata for Int);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009E3908);
  }
}

uint64_t sub_10006CA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006CA78@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10006CBB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10006CAA0()
{
  unint64_t result;

  result = qword_1009D8B88;
  if (!qword_1009D8B88)
  {
    result = swift_getWitnessTable(&unk_100718BAC, &_s13ConfigurationV25GenreRecommendationSourceON);
    atomic_store(result, (unint64_t *)&qword_1009D8B88);
  }
  return result;
}

unint64_t sub_10006CAE4()
{
  unint64_t result;

  result = qword_1009D8BD8;
  if (!qword_1009D8BD8)
  {
    result = swift_getWitnessTable(&unk_100718B0C, &_s13ConfigurationV25GenreRecommendationSourceON);
    atomic_store(result, (unint64_t *)&qword_1009D8BD8);
  }
  return result;
}

unint64_t sub_10006CB28()
{
  unint64_t result;

  result = qword_1009D8BC0;
  if (!qword_1009D8BC0)
  {
    result = swift_getWitnessTable(&unk_100718B84, &_s13ConfigurationV25GenreRecommendationSourceON);
    atomic_store(result, (unint64_t *)&qword_1009D8BC0);
  }
  return result;
}

uint64_t sub_10006CB6C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10006CAE4();
  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

uint64_t sub_10006CBB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10006CBF0 + 4 * byte_1007187CE[a1]))(0x72756769666E6F63, 0xED00006E6F697461);
}

unint64_t sub_10006CBF0()
{
  return 0xD000000000000013;
}

unint64_t sub_10006CC0C()
{
  return 0xD000000000000021;
}

uint64_t sub_10006CC64()
{
  return 1768055156;
}

unint64_t sub_10006CC74()
{
  unint64_t result;

  result = qword_1009D8BA8;
  if (!qword_1009D8BA8)
  {
    result = swift_getWitnessTable(&unk_100718A6C, &_s13ConfigurationV16CollectionSourceON);
    atomic_store(result, (unint64_t *)&qword_1009D8BA8);
  }
  return result;
}

unint64_t sub_10006CCBC()
{
  unint64_t result;

  result = qword_1009D8B90;
  if (!qword_1009D8B90)
  {
    result = swift_getWitnessTable(&unk_100718954, &_s13ConfigurationV16CollectionScorerON);
    atomic_store(result, (unint64_t *)&qword_1009D8B90);
  }
  return result;
}

uint64_t sub_10006CD04(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_100030B74(&qword_1009D7440);
    sub_100008DB0(a2, (uint64_t (*)(uint64_t))&type metadata accessor for Date, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006CD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D7440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10006CDD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009D5E30)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009D5E30);
  }
}

uint64_t sub_10006CE24(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10006CE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10006E5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006F814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100070B44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100072444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100072D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000736B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000748C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1000750D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000754E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  id *v11;
  id *v12;
  id *v13;
  id *v14;
  uint64_t v15;

  objc_destroyWeak(v14);
  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v15 - 112));
  _Unwind_Resume(a1);
}

void sub_100075744(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100075990(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_10007682C(uint64_t a1)
{
  void (**v1)(void);

  v1 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onReceiveHandler"));
  v1[2]();

}

void sub_100076BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_100076C10(uint64_t a1, void *a2)
{
  id WeakRetained;
  unsigned int v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;

  v11 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = objc_msgSend(WeakRetained, "running");

  if (v4)
  {
    v5 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    objc_msgSend(*(id *)(a1 + 32), "contentSize");
    v7 = v6;
    objc_msgSend(*(id *)(a1 + 32), "bounds");
    if (v5 >= v7 - v8)
    {
      objc_msgSend(v11, "invalidate");
      v10 = objc_loadWeakRetained((id *)(a1 + 56));
      objc_msgSend(v10, "setTimer:", 0);

      objc_msgSend(*(id *)(a1 + 32), "setContentOffset:", 0.0, 0.0);
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "setContentOffset:", 0.0, *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
      objc_msgSend(*(id *)(a1 + 32), "bounds");
      *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8)
                                                                              + 24)
                                                                  + v9 * 0.25;
    }
  }
  else
  {
    objc_msgSend(v11, "invalidate");
  }

}

void sub_100076E94(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  id v10;
  dispatch_time_t v11;
  id v12;
  uint64_t v13;
  void (**v14)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  id v19;
  uint64_t v20;
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelf"));
  if (!v2)
  {
    v3 = sub_1001DA41C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Could not find the bookshelf", buf, 2u);
    }

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "collectionView"));
  if (!v5)
  {
    v6 = sub_1001DA41C();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Could not find the bookshelf scrollview", buf, 2u);
    }

  }
  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 106))
  {
    v8 = objc_alloc((Class)RPTScrollViewTestParameters);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
    v10 = objc_msgSend(v8, "initWithTestName:scrollView:completionHandler:", v9, v5, 0);

    +[RPTTestRunner runTestWithParameters:](RPTTestRunner, "runTestWithParameters:", v10);
  }
  else
  {
    objc_msgSend(v5, "contentOffset");
    objc_msgSend(v5, "setContentOffset:animated:", 1);
    v11 = dispatch_time(0, 750000000);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100077094;
    v18[3] = &unk_1008E7338;
    v12 = v5;
    v13 = *(_QWORD *)(a1 + 32);
    v19 = v12;
    v20 = v13;
    dispatch_after(v11, (dispatch_queue_t)&_dispatch_main_q, v18);
    v10 = v19;
  }

  objc_msgSend(*(id *)(a1 + 32), "setResult:", 0);
  v14 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "onTestFinished"));
  v14[2](v14, v15, v16, v17);

}

void sub_100077094(uint64_t a1)
{
  void *v2;
  void *v3;
  double v4;
  _QWORD v5[5];

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "name"));
  objc_msgSend(*(id *)(a1 + 32), "contentSize");
  v5[1] = 3221225472;
  v5[2] = sub_100077134;
  v5[3] = &unk_1008E7310;
  v5[4] = *(_QWORD *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  objc_msgSend(v2, "_performScrollTest:iterations:delta:length:scrollAxis:extraResultsBlock:completionBlock:", v3, 1, 10, (int)v4, 2, 0, v5);

}

void sub_100077134(uint64_t a1)
{
  id v1;

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 105))
  {
    v1 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v1, "setBool:forKey:", 0, kOverrideNightMode);

  }
}

id sub_1000773C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishPPTTestWithResult:", 0);
}

id sub_1000775EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(unsigned __int8 *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 48);
  v5.receiver = *(id *)(a1 + 40);
  v5.super_class = (Class)BKRootViewController;
  return objc_msgSendSuper2(&v5, "bc_presentCardViewController:animated:completion:", v1, v2, v3);
}

void sub_1000776D8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 24);
  if (v3)
  {
    *(_QWORD *)(v2 + 24) = 0;
    v5 = v3;

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v5, *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 40));
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4)
      (*(void (**)(void))(v4 + 16))();
  }
}

void sub_100077920(id a1)
{
  uint64_t v1;
  void *v2;
  const __CFString *v3;
  uint64_t v4;

  v3 = CFSTR("ADD_TO_WANT_TO_READ");
  v4 = kBKCollectionDefaultIDWantToRead;
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v4, &v3, 1));
  v2 = (void *)qword_1009F4D90;
  qword_1009F4D90 = v1;

}

void sub_100077E70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  if (v4 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    sub_10069C728(a1, (uint64_t)v4);

}

void sub_100077EC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  if (v4 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    sub_10069C7E8(a1, (uint64_t)v4);

}

void sub_1000782A0(id a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_alloc_init((Class)TUIManager);
  v2 = (void *)qword_1009F4DA0;
  qword_1009F4DA0 = (uint64_t)v1;

  v3 = objc_alloc_init((Class)TUIElementRegistry);
  objc_msgSend((id)qword_1009F4DA0, "setElementRegistry:", v3);
  +[BCMetrics registerNamedColorsWithTemplateManger:](BCMetrics, "registerNamedColorsWithTemplateManger:", qword_1009F4DA0);

}

void sub_1000783DC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v2 = objc_alloc((Class)TUITemplateFactory);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_manager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "elementRegistry"));
  v5 = objc_msgSend(v2, "initWithRegistry:", v4);
  v6 = (void *)qword_1009F4DB0;
  qword_1009F4DB0 = (uint64_t)v5;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_templatePackageURL"));
  v8 = (id)objc_claimAutoreleasedReturnValue(+[TUIBinaryPackage packageWithURL:](TUIBinaryPackage, "packageWithURL:", v7));

  objc_msgSend((id)qword_1009F4DB0, "registerPackage:", v8);
}

void sub_100078514(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_templatePackageURL"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "URLByDeletingLastPathComponent"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "URLByAppendingPathComponent:", CFSTR("BKLibraryBookshelfConfiguration.xml")));
  v3 = (void *)qword_1009F4DC0;
  qword_1009F4DC0 = v2;

}

void sub_100078F04(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = 0;

}

void sub_100078F14(uint64_t a1, void *a2)
{
  _QWORD *WeakRetained;
  id v4;
  void *v5;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = objc_msgSend(objc_alloc((Class)BUBag), "initWithBackingBag:", v6);
    v5 = (void *)WeakRetained[8];
    WeakRetained[8] = v4;

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_100078F80(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", kAEStoreBookmarkUrlsChangedNotification, *(_QWORD *)(a1 + 32));

  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v3, "postNotificationName:object:", kAEStoreEnabledChangedNotification, *(_QWORD *)(a1 + 32));

}

void sub_100079070(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BUBag defaultBag](BUBag, "defaultBag"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "availableBookUpdates"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100079100;
  v4[3] = &unk_1008E7568;
  v4[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v3, "valueWithCompletion:", v4);

}

void sub_100079100(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t updated;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  id v20;
  id v21;
  id location;

  v6 = a2;
  v7 = a4;
  v9 = v7;
  if (v6)
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v10 = *(void **)(a1 + 32);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_100079224;
    v19[3] = &unk_1008E7540;
    objc_copyWeak(&v21, &location);
    v19[4] = *(_QWORD *)(a1 + 32);
    v20 = v6;
    objc_msgSend(v10, "canCheckForBookUpdatesWithCompletion:", v19);

    objc_destroyWeak(&v21);
    objc_destroyWeak(&location);
  }
  else
  {
    updated = BKStoreBookUpdateLog(v7, v8);
    v12 = objc_claimAutoreleasedReturnValue(updated);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_10069C944((uint64_t)v9, v12, v13, v14, v15, v16, v17, v18);

  }
}

void sub_100079208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100079224(uint64_t a1, int a2)
{
  id *v4;
  id WeakRetained;
  void *v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  _QWORD block[4];
  id v11;
  uint64_t v12;
  id v13;

  v4 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v6 = WeakRetained;
  if (a2 && WeakRetained)
  {
    v7 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 112);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000792EC;
    block[3] = &unk_1008E7518;
    objc_copyWeak(&v13, v4);
    v8 = *(id *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 32);
    v11 = v8;
    v12 = v9;
    dispatch_async(v7, block);

    objc_destroyWeak(&v13);
  }

}

void sub_1000792EC(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t updated;
  NSObject *v8;
  BKLibraryBookUpdateCountOperation *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void **v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  void *v19;
  uint64_t v20;
  id v21;
  uint8_t buf[16];

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "updateCountOperation"));

  if (v4)
  {
    updated = BKStoreBookUpdateLog(v5, v6);
    v8 = objc_claimAutoreleasedReturnValue(updated);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "refreshUpdateCountAsync - Skipping ... there is an ongoing updateCountOperation", buf, 2u);
    }
  }
  else
  {
    v9 = [BKLibraryBookUpdateCountOperation alloc];
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryAssetProvider"));
    v8 = -[BKLibraryBookUpdateCountOperation initWithLibraryAssetProvider:updatesURL:](v9, "initWithLibraryAssetProvider:updatesURL:", v10, *(_QWORD *)(a1 + 32));

    v16 = _NSConcreteStackBlock;
    v17 = 3221225472;
    v18 = sub_1000794AC;
    v19 = &unk_1008E74F0;
    v20 = *(_QWORD *)(a1 + 40);
    objc_copyWeak(&v21, v2);
    v11 = -[NSObject setCompletionBlock:](v8, "setCompletionBlock:", &v16);
    v13 = BKStoreBookUpdateLog(v11, v12);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "refreshUpdateCountAsync - Enqueuing bookUpdateCountOperation", buf, 2u);
    }

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "operationQueue", v16, v17, v18, v19, v20));
    objc_msgSend(v15, "addOperation:", v8);

    objc_msgSend(WeakRetained, "setUpdateCountOperation:", v8);
    objc_destroyWeak(&v21);
  }

}

void sub_100079490(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000794AC(uint64_t a1)
{
  NSObject *v1;
  _QWORD block[4];
  id v3;

  v1 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 112);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100079528;
  block[3] = &unk_1008E74C8;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  dispatch_async(v1, block);
  objc_destroyWeak(&v3);
}

void sub_100079528(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "updateCountOperation"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "updateCountOperation"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "result"));
  objc_msgSend(WeakRetained, "_operationDidFinish:result:", v1, v3);

  objc_msgSend(WeakRetained, "setUpdateCountOperation:", 0);
}

void sub_100079640(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BSUIStoreServices sharedInstance](BSUIStoreServices, "sharedInstance"));
  objc_msgSend(v2, "showProductPageForStoreID:resourceType:transaction:needsAnalyticsLinkData:", *(_QWORD *)(a1 + 32), 3, 0, 0);

}

void sub_1000797D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000797EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "viewBook"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "jsa_valueWithError:", 0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100079ACC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = BCBookDownloadLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = 138477827;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Finished requesting download of asset with ID %{private}@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_100079E2C(uint64_t a1, void *a2)
{
  id v3;

  if (a2)
    a2 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(a2, "CGImage")));
  v3 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_100079EE8(uint64_t a1)
{
  double v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v3, "timeIntervalSince1970");
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 72) = (unint64_t)v2;

}

uint64_t sub_100079FC4(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 72);
  return result;
}

void sub_10007A2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_10007A2F4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  if (v3 != v2 && (objc_msgSend(v3, "isEqual:") & 1) == 0)
  {
    v4 = objc_msgSend(*(id *)(a1 + 40), "copy");
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(v5 + 8);
    *(_QWORD *)(v5 + 8) = v4;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v7 = objc_msgSend(*(id *)(a1 + 40), "copy");
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    v10 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "copy");
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

    v13 = *(_QWORD *)(a1 + 32);
    v14 = *(void **)(v13 + 16);
    *(_QWORD *)(v13 + 16) = &__NSArray0__struct;

  }
}

void sub_10007A4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_10007A504(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result != 0;
  return result;
}

void sub_10007A540(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", BKLibraryOperationAssetIDsKey));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", BKLibraryOperationTypeKey));
  v5 = (char *)objc_msgSend(v4, "integerValue");

  if ((unint64_t)(v5 - 1) <= 1)
  {
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v6 = v3;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v13;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v13 != v9)
            objc_enumerationMutation(v6);
          v11 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 32), "containsObject:", v11, (_QWORD)v12))
          {
            *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
            objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 32), "removeObject:", v11);
          }
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      }
      while (v8);
    }

  }
}

id sub_10007A818(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "addObject:", *(_QWORD *)(a1 + 40));
}

void sub_10007A87C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", kAEStoreNumberOfUpdatesAvailableChangedNotification, *(_QWORD *)(a1 + 32));

}

void sub_10007A980(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10007ABE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007AC0C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10007AC44(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "mutableCopy");
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  objc_msgSend(v2, "addObject:", v3);

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v2;

}

void sub_10007B064(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t updated;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  void *v23;
  int v24;
  void *v25;

  v5 = a2;
  v6 = a3;
  v8 = v6;
  if (v6)
  {
    updated = BKStoreBookUpdateLog(v6, v7);
    v10 = objc_claimAutoreleasedReturnValue(updated);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_10069C9EC((uint64_t)v8, v10, v11, v12, v13, v14, v15, v16);

  }
  if (v5)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKey:", CFSTR("storeID")));
    v18 = objc_msgSend(v17, "count");
    v19 = objc_msgSend(*(id *)(a1 + 32), "count");
    if (v18 != v19)
    {
      v21 = BKStoreBookUpdateLog(v19, v20);
      v22 = objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "componentsJoinedByString:", CFSTR(", ")));
        v24 = 138412290;
        v25 = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Only owned these items: [%@]", (uint8_t *)&v24, 0xCu);

      }
    }
    objc_msgSend(*(id *)(a1 + 32), "removeAllObjects");
    objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v17);
    objc_msgSend(*(id *)(a1 + 40), "setStoreIDsWithAvailableUpdates:", *(_QWORD *)(a1 + 32));

  }
}

void sub_10007B284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "kvsGetAll"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "jsa_valueWithError:", 0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10007B394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "kvsPutAll"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "jsa_valueWithError:", 0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10007B480(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "allowCitations"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "jsa_valueWithError:", 0));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "BOOLValue");

}

void sub_10007B570(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "reportConcerns"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "jsa_valueWithError:", 0));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", CFSTR("enabled")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

void sub_10007B6A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "allowingCitations"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "jsa_valueWithError:", 0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10007B9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v16 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10007B9D8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  _UNKNOWN **v9;
  id v10;

  v10 = a2;
  v6 = a4;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  if (!v8)
  {
    v9 = &off_10092EC10;
    goto LABEL_5;
  }
  if ((int)objc_msgSend(v8, "intValue") <= 7199)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v8 = *(void **)(v7 + 40);
    v9 = &off_10092EC28;
LABEL_5:
    *(_QWORD *)(v7 + 40) = v9;

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_10007BA68(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_10007BAB4(uint64_t a1)
{
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  double v6;
  unint64_t v7;
  char *v8;
  _QWORD *v9;
  void (*v10)(void);
  _QWORD *v11;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  if ((!v2 || (objc_msgSend(v2, "isAnyNetworkTypeEnabled") & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    v3 = (char *)objc_msgSend(*(id *)(a1 + 32), "lastBookUpdateCheck");
    if (v3)
    {
      v4 = v3;
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      objc_msgSend(v5, "timeIntervalSince1970");
      v7 = (unint64_t)v6;

      v8 = &v4[(_QWORD)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "unsignedLongLongValue")];
      v9 = objc_retainBlock(*(id *)(a1 + 40));
      if ((unint64_t)v8 > v7)
      {
        if (!v9)
          goto LABEL_14;
        goto LABEL_9;
      }
    }
    else
    {
      v9 = objc_retainBlock(*(id *)(a1 + 40));
    }
    if (v9)
    {
      v10 = (void (*)(void))v9[2];
      v11 = v9;
      goto LABEL_13;
    }
  }
  else
  {
    v9 = objc_retainBlock(*(id *)(a1 + 40));
    if (v9)
    {
LABEL_9:
      v10 = (void (*)(void))v9[2];
      v11 = v9;
LABEL_13:
      v10();
      v9 = v11;
    }
  }
LABEL_14:

}

void sub_10007BC54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "tafEmailBodyUrlBase"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "jsa_valueWithError:", 0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10007CC7C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  sub_10007CDC8(*(id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "indexPathsForVisibleRows"));

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView", (_QWORD)v12));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "cellForRowAtIndexPath:", v9));

        objc_msgSend(*(id *)(a1 + 32), "_configureThemeForCell:", v11);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

}

id sub_10007CDC8(id result)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  const __CFString *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  double v49;
  double v50;
  void *v51;
  double v52;
  double v53;
  void *v54;
  void *v55;
  void *v56;
  double v57;
  double v58;
  void *v59;
  double v60;
  double v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  CGFloat v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  void *v103;
  double v104;
  double v105;
  void *v106;
  void *v107;
  void *v108;
  id v109;
  _QWORD v110[3];
  CGRect v111;

  if (result)
  {
    v1 = result;
    v2 = objc_msgSend((id)objc_opt_class(result), "_uploadErrorType");
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));

    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "tableView"));
      objc_msgSend(v4, "contentInset");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      objc_msgSend(v13, "bounds");
      v15 = v6 - v14;

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "tableView"));
      objc_msgSend(v16, "setContentInset:", v15, v8, v10, v12);

      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      objc_msgSend(v17, "removeFromSuperview");

      objc_msgSend(v1, "setErrorHeaderView:", 0);
    }
    if (v2)
    {
      v109 = v2;
      if (v2 == (id)2)
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Apple Books couldn’t connect to iCloud. Check your Internet connection, then try again."), &stru_10091C438, 0));
        v20 = CFSTR("BKUploadErrorHeaderViewNetworkUnreachable");
      }
      else
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("New items won’t be added to iCloud until you upgrade your storage. The items below are stored on this device only."), &stru_10091C438, 0));
        v20 = CFSTR("BKUploadErrorHeaderView");
      }

      v21 = (void *)objc_claimAutoreleasedReturnValue(+[UINib nibWithNibName:bundle:](UINib, "nibWithNibName:bundle:", v20, 0));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "instantiateWithOwner:options:", 0, 0));
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "objectAtIndexedSubscript:", 0));
      objc_msgSend(v1, "setErrorHeaderView:", v23);

      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      objc_msgSend(v24, "setDelegate:", v1);

      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "upgradeButton"));

      if (v26)
      {
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "upgradeButton"));
        v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "localizedStringForKey:value:table:", CFSTR("UPGRADE STORAGE"), &stru_10091C438, 0));
        objc_msgSend(v28, "setTitle:forState:", v30, 0);

      }
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));

      v108 = (void *)v19;
      if (v31)
      {
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "iCloudDescriptionFontAttributes"));
        v34 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v19, v33));
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "errorLabel"));
        objc_msgSend(v36, "setAttributedText:", v34);

        v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "localizedStringForKey:value:table:", CFSTR("UPGRADE STORAGE"), &stru_10091C438, 0));

        v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "iCloudButtonColor"));
        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "upgradeButton"));
        objc_msgSend(v42, "setBackgroundColor:", v40);

        v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "upgradeButton"));
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "iCloudButtonFontAttributes"));
        v47 = (void *)objc_claimAutoreleasedReturnValue(+[TUIFontSpec attributedStringWith:attributes:](TUIFontSpec, "attributedStringWith:attributes:", v38, v46));
        objc_msgSend(v44, "setAttributedTitle:forState:", v47, 0);

        v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        objc_msgSend(v48, "iCloudButtonInset");
        v50 = -v49;
        v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        objc_msgSend(v51, "iCloudButtonInset");
        v53 = -v52;
        v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "upgradeButton"));
        objc_msgSend(v55, "setTitleEdgeInsets:", 0.0, v50, 0.0, v53);

        v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        objc_msgSend(v56, "iCloudButtonInset");
        v58 = v57 + v57;
        v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
        objc_msgSend(v59, "iCloudButtonInset");
        v61 = v60 + v60;
        v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v62, "upgradeButton"));
        objc_msgSend(v63, "setContentEdgeInsets:", 0.0, v58, 0.0, v61);

      }
      else
      {
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "errorLabel"));
        objc_msgSend(v56, "setText:", v19);
      }

      v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "view"));
      v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      objc_msgSend(v64, "addSubview:", v65);

      v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "view"));
      v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v66, "safeAreaLayoutGuide"));

      v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSLayoutConstraint constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:](NSLayoutConstraint, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v68, 3, 0, v67, 3, 1.0, 0.0));

      v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "view"));
      v72 = (void *)objc_claimAutoreleasedReturnValue(+[NSLayoutConstraint constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:](NSLayoutConstraint, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v70, 5, 0, v71, 5, 1.0, 0.0));

      v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "view"));
      v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSLayoutConstraint constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:](NSLayoutConstraint, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v73, 6, 0, v74, 6, 1.0, 0.0));

      v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "view"));
      v110[0] = v69;
      v110[1] = v72;
      v110[2] = v75;
      v77 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v110, 3));
      objc_msgSend(v76, "addConstraints:", v77);

      v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "errorLabel"));
      objc_msgSend(v79, "sizeToFit");

      v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "mainHeaderMetrics"));
      if (v80)
      {
        v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v82 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "upgradeButton"));
        objc_msgSend(v82, "bounds");
        v83 = CGRectGetHeight(v111) * 0.5;
        v107 = v72;
        v84 = v67;
        v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v86 = v69;
        v87 = v21;
        v88 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v85, "upgradeButton"));
        v89 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v88, "layer"));
        objc_msgSend(v89, "setCornerRadius:", v83);

        v90 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
        v91 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "upgradeButton"));
        v92 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v91, "layer"));
        objc_msgSend(v92, "setBorderWidth:", 0.0);

        v21 = v87;
        v69 = v86;

        v67 = v84;
        v72 = v107;

      }
      v93 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      objc_msgSend(v93, "layoutIfNeeded");

      v94 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "tableView"));
      objc_msgSend(v94, "contentInset");
      v96 = v95;
      v98 = v97;
      v100 = v99;
      v102 = v101;

      v103 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "errorHeaderView"));
      objc_msgSend(v103, "bounds");
      v105 = v96 + v104;

      v106 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "tableView"));
      objc_msgSend(v106, "setContentInset:", v105, v98, v100, v102);

      v2 = v109;
    }
    objc_msgSend(v1, "_updateTitle:", v2);
    objc_msgSend(v1, "_adjustPreferredContentSize");
    return objc_msgSend(v1, "_configureThemeForErrorHeaderView");
  }
  return result;
}

id sub_10007DB80(uint64_t a1)
{
  id result;
  void *v3;
  void *v4;

  result = objc_msgSend(*(id *)(a1 + 32), "isVisible");
  if ((_DWORD)result)
  {
    v3 = *(void **)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "arrangedObjects"));
    objc_msgSend(v3, "_mergeAssets:", v4);

    return objc_msgSend(*(id *)(a1 + 32), "_updateTitle:", objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "_uploadErrorType"));
  }
  return result;
}

id sub_10007DBF8(uint64_t a1)
{
  return sub_10007CDC8(*(id *)(a1 + 32));
}

void sub_10007DF5C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "indexPathsForVisibleRows"));

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView", (_QWORD)v12));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "cellForRowAtIndexPath:", v9));

        objc_msgSend(*(id *)(a1 + 32), "_configureThemeForCell:", v11);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

}

id sub_10007E2D4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isVisible");
  if ((_DWORD)result)
    return sub_10007CDC8(*(id *)(a1 + 32));
  return result;
}

void sub_10007E6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007E700(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusForAssetID:", a2));
  if (objc_msgSend(v3, "state") != (id)11)
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

}

void sub_10007EAF0(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusForAssetID:", v13));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetIdToState"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v13));

  if (!v7)
  {
    v9 = *(void **)(a1 + 48);
    goto LABEL_5;
  }
  v8 = objc_msgSend(v5, "state");
  if (v8 != objc_msgSend(v7, "integerValue"))
  {
    v9 = *(void **)(a1 + 56);
LABEL_5:
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a3, 0));
    objc_msgSend(v9, "addObject:", v10);

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v5, "state")));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetIdToState"));
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v11, v13);

  }
}

void sub_10007ED38(uint64_t a1)
{
  void *v2;
  void (**v3)(void);
  void (**v4)(void);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "libraryUploadStatusViewControllerDismissed:", *(_QWORD *)(a1 + 32));

  v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    v4 = v3;
    v3[2]();
    v3 = v4;
  }

}

void sub_10007EEF8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BKCloudQuotaUIServices sharedInstance](BKCloudQuotaUIServices, "sharedInstance"));
  objc_msgSend(v2, "presentUpgradeOfferWithNavigationController:", *(_QWORD *)(a1 + 32));

}

_QWORD *sub_10007F5BC(_QWORD *result)
{
  *result = 0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0x3FF0000000000000;
  return result;
}

uint64_t sub_10007F5CC(uint64_t a1, CGColorRef color)
{
  const CGFloat *Components;
  uint64_t v5;
  CGColorSpace *ColorSpace;
  CGColorSpace *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0x3FF0000000000000;
  Components = CGColorGetComponents(color);
  switch(CGColorGetNumberOfComponents(color))
  {
    case 1uLL:
      goto LABEL_3;
    case 2uLL:
      *(CGFloat *)(a1 + 24) = Components[1];
LABEL_3:
      v5 = *(_QWORD *)Components;
      *(CGFloat *)(a1 + 8) = *Components;
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)a1 = v5;
      break;
    case 3uLL:
      goto LABEL_5;
    case 4uLL:
      *(CGFloat *)(a1 + 24) = Components[3];
LABEL_5:
      *(CGFloat *)a1 = *Components;
      *(CGFloat *)(a1 + 8) = Components[1];
      *(CGFloat *)(a1 + 16) = Components[2];
      break;
    default:
      break;
  }
  ColorSpace = CGColorGetColorSpace(color);
  v7 = (CGColorSpace *)sub_1000C3308();
  *(double *)a1 = sub_10007F69C((_OWORD *)a1, ColorSpace, v7);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  return a1;
}

double sub_10007F69C(_OWORD *a1, CGColorSpaceRef space, CGColorSpace *cf2)
{
  double v6;
  __int128 v7;
  CGColor *v8;
  CGContext *v9;
  CGContext *v10;
  unint64_t v11;
  int data;
  CGFloat components[2];
  __int128 v15;
  CGRect v16;

  data = 0;
  if (!space || !cf2 || !CFEqual(space, cf2))
  {
    v7 = a1[1];
    *(_OWORD *)components = *a1;
    v15 = v7;
    v8 = CGColorCreate(space, components);
    if (v8)
    {
      v9 = CGBitmapContextCreate(&data, 1uLL, 1uLL, 8uLL, 4uLL, cf2, 0x4002u);
      v10 = v9;
      if (v9)
      {
        CGContextSetFillColorWithColor(v9, v8);
        v16.origin.x = 0.0;
        v16.origin.y = 0.0;
        v16.size.width = 1.0;
        v16.size.height = 1.0;
        CGContextFillRect(v10, v16);
        LOBYTE(v11) = BYTE1(data);
        v6 = (double)v11 / 255.0;
LABEL_10:
        CGColorRelease(v8);
        CGContextRelease(v10);
        return v6;
      }
    }
    else
    {
      v10 = 0;
    }
    v6 = 0.0;
    goto LABEL_10;
  }
  return *(double *)a1;
}

uint64_t sub_10007F810(uint64_t result, double a2, double a3, double a4)
{
  *(double *)result = a2;
  *(double *)(result + 8) = a3;
  *(double *)(result + 16) = a4;
  *(_QWORD *)(result + 24) = 0x3FF0000000000000;
  return result;
}

double *sub_10007F824(double *result, double a2, double a3, double a4, double a5)
{
  *result = a2;
  result[1] = a3;
  result[2] = a4;
  result[3] = a5;
  return result;
}

double sub_10007F830(double *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;

  v4 = 0.0;
  v2 = 0;
  v3 = 0;
  sub_10007F874(&v4, (double *)&v3, (double *)&v2, *a1, a1[1], a1[2]);
  return v4;
}

double *sub_10007F874(double *result, double *a2, double *a3, double a4, double a5, double a6)
{
  double v6;
  double v7;
  double v8;
  int v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  BOOL v19;
  BOOL v20;

  if (a5 > 1.0)
    a5 = 1.0;
  if (a5 >= 0.0)
    v6 = a5;
  else
    v6 = 0.0;
  if (a6 <= 1.0)
    v7 = a6;
  else
    v7 = 1.0;
  if (v7 < 0.0)
    v7 = 0.0;
  if (v6 == 0.0)
  {
    *result = v7;
    *a2 = v7;
  }
  else
  {
    if (a4 > 1.0)
      a4 = 1.0;
    if (a4 >= 0.0)
      v8 = a4 * 6.0;
    else
      v8 = 0.0;
    v9 = (int)v8;
    v10 = v6 * v7 * (v8 - (double)(int)v8);
    v11 = v7 - v6 * v7;
    v12 = v11 + v10;
    if (v11 + v10 > 1.0)
      v12 = 1.0;
    v13 = v7 - v10;
    if (v13 > 1.0)
      v13 = 1.0;
    v14 = v11;
    if ((v9 & 1) != 0)
      v15 = v13;
    else
      v15 = v12;
    if (v14 <= 1.0)
      v16 = v14;
    else
      v16 = 1.0;
    v17 = v7;
    switch(v9)
    {
      case 0:
      case 5:
        break;
      case 1:
      case 4:
        v17 = v15;
        break;
      default:
        v17 = v16;
        break;
    }
    *result = v17;
    v18 = v7;
    if ((v9 - 1) >= 2)
    {
      v19 = v9 == 3 || v9 == 0;
      v18 = v15;
      if (!v19)
        v18 = v16;
    }
    *a2 = v18;
    if ((v9 - 3) >= 2)
    {
      v20 = v9 == 5 || v9 == 2;
      v7 = v15;
      if (!v20)
        v7 = v16;
    }
  }
  *a3 = v7;
  return result;
}

double sub_10007F990(double a1, double a2, double a3)
{
  uint64_t v4;
  uint64_t v5;
  double v6;

  v6 = 0.0;
  v4 = 0;
  v5 = 0;
  sub_10007F874(&v6, (double *)&v5, (double *)&v4, a1, a2, a3);
  return v6;
}

double sub_10007F9CC(double *a1)
{
  double v2;
  uint64_t v3;
  uint64_t v4;

  sub_10007FA08(&v2, (double *)&v3, (double *)&v4, *a1, a1[1], a1[2]);
  return v2;
}

double *sub_10007FA08(double *result, double *a2, double *a3, double a4, double a5, double a6)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  if (a4 >= 1.0)
    a4 = 1.0;
  v6 = 0.0;
  if (a4 < 0.0)
    a4 = 0.0;
  if (a5 >= 1.0)
    a5 = 1.0;
  if (a5 < 0.0)
    a5 = 0.0;
  if (a6 >= 1.0)
    a6 = 1.0;
  if (a6 >= 0.0)
    v7 = a6;
  else
    v7 = 0.0;
  if (a5 <= a4)
    v8 = a4;
  else
    v8 = a5;
  if (a5 >= a4)
    v9 = a4;
  else
    v9 = a5;
  if (v7 <= a4)
    v10 = a4;
  else
    v10 = v7;
  if (v7 >= a4)
    v11 = a4;
  else
    v11 = v7;
  if (a5 <= v7)
    v8 = v10;
  if (a5 >= v7)
    v9 = v11;
  if (v8 <= 1.0)
    v12 = v8;
  else
    v12 = 1.0;
  *a3 = v12;
  if (v8 == 0.0)
  {
    *a2 = 0.0;
  }
  else
  {
    v13 = v8 - v9;
    v14 = v13 / v8;
    if (v13 / v8 <= 1.0)
    {
      *a2 = v14;
      if (v14 == 0.0)
        goto LABEL_51;
    }
    else
    {
      *a2 = 1.0;
    }
    if (v13 == 0.0)
    {
      v15 = 0.0;
      v16 = 0.0;
    }
    else
    {
      v6 = (v8 - a4) / v13;
      v15 = (v8 - a5) / v13;
      v16 = (v8 - v7) / v13;
    }
    if (a4 == v8)
    {
      v17 = v16 - v15;
    }
    else if (a5 == v8)
    {
      v17 = v6 + 2.0 - v16;
    }
    else
    {
      v17 = v15 + 4.0 - v6;
    }
    v18 = v17 / 6.0;
    if (v18 < 0.0)
      v18 = v18 + 1.0;
    if (v18 <= 1.0)
      v6 = v18;
    else
      v6 = 1.0;
  }
LABEL_51:
  *result = v6;
  return result;
}

void sub_10007FB30(__int128 *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  __int128 v4;
  uint64_t v5;

  v1 = 0;
  v4 = *a1;
  v5 = *((_QWORD *)a1 + 2);
  do
  {
    v2 = *(double *)((char *)&v4 + v1);
    if (v2 <= 0.0392800011)
      v3 = v2 / 12.9200001;
    else
      v3 = pow((v2 + 0.0549999997) / 1.05499995, 2.4);
    *(double *)((char *)&v4 + v1) = v3;
    v1 += 8;
  }
  while (v1 != 24);
}

double sub_10007FC4C(__int128 *a1, __int128 *a2)
{
  double v3;
  double v4;
  double v5;
  double v6;

  sub_10007FB30(a2);
  v4 = v3;
  sub_10007FB30(a1);
  if (v5 <= v4)
    v6 = v4;
  else
    v6 = v5;
  if (v5 > v4)
    v5 = v4;
  return (v6 + 0.0500000007) / (v5 + 0.0500000007);
}

double sub_10007FCA4(__int128 *a1, double a2)
{
  double v3;
  double v4;

  sub_10007FB30(a1);
  if (v3 <= a2)
    v4 = a2;
  else
    v4 = v3;
  if (v3 > a2)
    v3 = a2;
  return (v4 + 0.0500000007) / (v3 + 0.0500000007);
}

double sub_10007FCE4(uint64_t a1, double a2, double a3)
{
  if (a2 < 1.0)
  {
    if (a2 <= 0.0)
      return *(double *)a1;
    else
      return (1.0 - a2) * *(double *)a1 + a3 * a2;
  }
  return a3;
}

void sub_10007FF08(uint64_t a1)
{
  _QWORD *WeakRetained;
  uint64_t v3;
  NSObject *v4;
  void *v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = BCSceneLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
      sub_10069CA54(a1, v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "launchCoordinator"));
    objc_msgSend(v5, "signalConditionSatisfied:", 7);

    v6 = (void *)WeakRetained[11];
    WeakRetained[11] = 0;

  }
}

void sub_1000802D8(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10008036C;
  v3[3] = &unk_1008E7818;
  v4 = *(id *)(a1 + 48);
  objc_msgSend(v2, "dismissViewControllerWithTransition:completion:", 7, v3);
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "welcomeScreenViewControllerDidDismiss") & 1) != 0)
    objc_msgSend(*(id *)(a1 + 40), "welcomeScreenViewControllerDidDismiss");

}

void sub_10008036C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id sub_1000803A0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentViewController:withTransition:completion:", *(_QWORD *)(a1 + 40), 0, 0);
}

void sub_100080554(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100080570(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsController"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "applicationTracker"));

    objc_msgSend(v3, "pushSessionEndReasonDataWithReason:file:line:", *(_QWORD *)(a1 + 48), CFSTR("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKSceneController.m"), 443);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bk_window"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "rootViewController"));
    objc_msgSend(v5, "bc_analyticsVisibilitySubtreeWillDisappear");

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bk_window"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "rootViewController"));
    objc_msgSend(v7, "bc_analyticsVisibilitySubtreeDidDisappear");

    objc_msgSend(*(id *)(a1 + 32), "analyticsEndSession");
  }

}

uint64_t sub_100080644(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100080B28(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v9[5];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v6);
        v9[0] = _NSConcreteStackBlock;
        v9[1] = 3221225472;
        v9[2] = sub_100080C8C;
        v9[3] = &unk_1008E72C0;
        v9[4] = v7;
        objc_msgSend(v7, "updatePromotionStateWithCompletion:", v9);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 40), "didDisconnectScene:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 56), "setRootViewController:", 0);
  objc_msgSend(*(id *)(a1 + 64), "setBk_window:", 0);
  return objc_msgSend(*(id *)(a1 + 64), "setScene:", 0);
}

id sub_100080C8C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "assetPresenterDismissalDidEnd:", 1);
}

void sub_100080D44(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootBarCoordinator"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rootViewController"));
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKSceneHosting));

    objc_msgSend(v4, "updateAllAssetPresenterCloseStateTypes");
  }
}

id sub_10008123C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(unsigned __int8 *)(a1 + 48);
  v4.receiver = *(id *)(a1 + 40);
  v4.super_class = (Class)BKSceneController;
  return objc_msgSendSuper2(&v4, "_handleOpenBookActivityWithAssetID:isStateRestoration:", v1, v2);
}

void sub_1000814C4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scene"));

  if (v2)
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(+[BKSceneUtilities sharedInstance](BKSceneUtilities, "sharedInstance"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneInfo"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sceneSession"));
    objc_msgSend(v5, "destroySceneWithSceneSession:withAnimationType:", v4, 1);

  }
}

void sub_1000822D4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "removeAnimated");

}

id sub_1000823CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_1000823D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_100082450(id a1)
{
  BKTestDriverDispatcher *v1;
  void *v2;

  v1 = objc_alloc_init(BKTestDriverDispatcher);
  v2 = (void *)qword_1009F4DD0;
  qword_1009F4DD0 = (uint64_t)v1;

}

void sub_100082708(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getReceivers:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 48));

}

void sub_1000827FC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "types", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7), "removeObject:", *(_QWORD *)(a1 + 40));
        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

uint64_t sub_10008299C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_100082A44(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100082B1C(uint64_t a1)
{
  void *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "getReceivers:", *(_QWORD *)(a1 + 40)));
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = (char *)objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
        ++v6;
      }
      while (v4 != v6);
      v4 = (char *)objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

void sub_100082D04(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 40));
}

void sub_100082D10(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "onBookViewControllerChange:") & 1) != 0)
    objc_msgSend(v3, "onBookViewControllerChange:", *(_QWORD *)(a1 + 32));

}

void sub_100082DFC(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 40), *(id *)(a1 + 40));
}

void sub_100082E08(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "onLibraryViewControllerChange:") & 1) != 0)
    objc_msgSend(v3, "onLibraryViewControllerChange:", *(_QWORD *)(a1 + 32));

}

id sub_100082F2C()
{
  if (qword_1009F4DE8 != -1)
    dispatch_once(&qword_1009F4DE8, &stru_1008E79E0);
  return (id)qword_1009F4DE0;
}

void sub_100082F6C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKAssetPresentingViewController");
  v2 = (void *)qword_1009F4DE0;
  qword_1009F4DE0 = (uint64_t)v1;

}

void sub_1000836CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000836F4(uint64_t a1, int a2)
{
  id WeakRetained;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (a2)
    objc_msgSend(WeakRetained, "_assetPresenterWillEnterForeground");
  else
    objc_msgSend(WeakRetained, "_assetPresenterDidEnterBackground");

}

void sub_100083BD0(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  BEURLHandlerClearCachedInfoForBookWithAssetID(*(_QWORD *)(a1 + 32));
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_100084710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100084744(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  _QWORD block[5];
  uint8_t buf[4];
  uint64_t v20;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = BCIMLog(WeakRetained);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    v8 = v7;
    if (v3)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_10069CB3C(a1, (uint64_t)v3, v8);

      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10008497C;
      block[3] = &unk_1008E72C0;
      block[4] = *(_QWORD *)(a1 + 40);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
    else
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v9 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v20 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "BKAssetPresentingViewController coordinateReadingItemAtURL Successful coordinated read [URL: %@]", buf, 0xCu);
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetIdentifier"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "permanentAssetID"));

      v12 = (void *)objc_claimAutoreleasedReturnValue(+[BKBookCacheController sharedInstance](BKBookCacheController, "sharedInstance"));
      v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetHelper"));
      objc_msgSend(v12, "setMetadataForAssetID:withHelper:pageCount:", v11, v13, *(_QWORD *)(a1 + 64));

      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetViewController"));
      LOBYTE(v13) = objc_opt_respondsToSelector(v14, "loadMetadata");

      if ((v13 & 1) != 0)
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetViewController"));
        objc_msgSend(v15, "loadMetadata");

      }
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_10008498C;
      v16[3] = &unk_1008E7818;
      v17 = *(id *)(a1 + 48);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v16);

    }
  }

}

id sub_10008497C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "im_dismissAnimated:immediate:", 0, 1);
}

void sub_10008498C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1000852A4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000852D4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setSampleToPurchasedMonitor:", 0);
  if (objc_msgSend(WeakRetained, "assetState") == (id)2)
    objc_msgSend(WeakRetained, "_reloadAssetCloseViewController:", 1);

}

void sub_100085320(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewController"));
  v2 = BUProtocolCast(&OBJC_PROTOCOL___BKREICompatibilityBridge, v1);
  v4 = (id)objc_claimAutoreleasedReturnValue(v2);

  v3 = v4;
  if (v4)
  {
    objc_msgSend(v4, "forceRepagination");
    v3 = v4;
  }

}

id sub_100085384(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = objc_msgSend(v3, "proposedBeginState");
  if (WeakRetained)
  {
    v6 = objc_opt_class(BCCardStackViewController);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentedViewController"));
    v8 = BUDynamicCast(v6, v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    if (v9)
    {
      v10 = 0;
    }
    else
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewController"));
      v10 = objc_msgSend(v11, "dismissShouldBegin:", v3);

    }
  }
  else
  {
    v10 = v5;
  }

  return v10;
}

void sub_1000855FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100085618(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_willOpenBookAnimated:", *(unsigned __int8 *)(a1 + 40));
    WeakRetained = v3;
  }

}

void sub_1000858D8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  double Height;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  void *v22;
  CGAffineTransform *v23;
  void *v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  CGAffineTransform v38;
  CGAffineTransform v39;
  CGAffineTransform v40;
  CGAffineTransform v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v2 = BCCurrentBookLiveResizeLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_10069CBB8(a1);

  if (objc_msgSend(*(id *)(a1 + 32), "scrimAppliedForLiveResize"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitioningViewController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "viewIfLoaded"));

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
      objc_msgSend(v6, "bounds");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

      v42.origin.x = v8;
      v42.origin.y = v10;
      v42.size.width = v12;
      v42.size.height = v14;
      Width = CGRectGetWidth(v42);
      v43.origin.x = v8;
      v43.origin.y = v10;
      v43.size.width = v12;
      v43.size.height = v14;
      Height = CGRectGetHeight(v43);
      objc_msgSend(*(id *)(a1 + 32), "liveResizeViewOriginalFrame");
      v17 = CGRectGetWidth(v44);
      objc_msgSend(*(id *)(a1 + 32), "liveResizeViewOriginalFrame");
      v18 = CGRectGetHeight(v45);
      if (v17 > 1.0 && v18 > 1.0 && Width > 1.0 && Height > 1.0)
      {
        if (objc_msgSend(*(id *)(a1 + 32), "aspectFitDuringResize"))
        {
          if (Width / Height <= v17 / v18)
            v19 = Width / v17;
          else
            v19 = Height / v18;
          CGAffineTransformMakeScale(&v41, v19, v19);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrimLiveResizeView"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "layer"));
          v22 = v21;
          v40 = v41;
          v23 = &v40;
        }
        else
        {
          CGAffineTransformMakeScale(&v39, Width / v17, Height / v18);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrimLiveResizeView"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "layer"));
          v22 = v21;
          v38 = v39;
          v23 = &v38;
        }
        objc_msgSend(v21, "setAffineTransform:", v23, *(_OWORD *)&v38.a, *(_OWORD *)&v38.c, *(_OWORD *)&v38.tx);

        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrimLiveResizeView"));
        objc_msgSend(v24, "frame");
        v26 = v25;
        v28 = v27;
        v30 = v29;
        v32 = v31;

        v33 = *(double *)(a1 + 40);
        v46.origin.x = v26;
        v46.origin.y = v28;
        v46.size.width = v30;
        v46.size.height = v32;
        v34 = (v33 - CGRectGetWidth(v46)) * 0.5;
        v35 = *(double *)(a1 + 48);
        v47.origin.x = v26;
        v47.origin.y = v28;
        v47.size.width = v30;
        v47.size.height = v32;
        v36 = (v35 - CGRectGetHeight(v47)) * 0.5;
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrimLiveResizeView"));
        objc_msgSend(v37, "setFrame:", v34, v36, v30, v32);

      }
    }
  }
}

void sub_100085B68(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v2 = BCCurrentBookLiveResizeLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_10069CC74(a1);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewController"));
  objc_msgSend(v4, "assetViewControllerUpdateCloseStateTypeIfNeeded");

  if ((objc_msgSend(*(id *)(a1 + 32), "stateFlags") & 1) != 0)
  {
    v5 = *(double *)(a1 + 40);
    v6 = *(double *)(a1 + 48);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "placeholderViewController"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));
    objc_msgSend(v8, "setFrame:", 0.0, 0.0, v5, v6);

    v9 = *(double *)(a1 + 40);
    v10 = *(double *)(a1 + 48);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewController"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "view"));
    objc_msgSend(v12, "setFrame:", 0.0, 0.0, v9, v10);

  }
  objc_msgSend(*(id *)(a1 + 32), "setStateFlags:", (unint64_t)objc_msgSend(*(id *)(a1 + 32), "stateFlags") & 0xFFFFFFFFFFFFFFBFLL);
  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitionCompletedBlock"));
  v14 = (void *)v13;
  if (v13)
    (*(void (**)(uint64_t))(v13 + 16))(v13);
  objc_msgSend(*(id *)(a1 + 32), "setTransitionCompletedBlock:", 0);

}

void sub_100085E60(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id sub_1000860A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(*(id *)(a1 + 32), "_loadWithAssetViewController:helper:", a2, a3);
  return _objc_msgSend(*(id *)(a1 + 32), "setLoadAssetBlock:", 0);
}

id sub_1000860D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "_loadWithAssetViewController:helper:", a2, a3);
}

void sub_100086494(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[5];
  id v13;
  id v14;
  id v15;
  id location;
  _QWORD v17[4];
  id v18;
  _QWORD v19[4];
  id v20;

  objc_msgSend(*(id *)(a1 + 32), "setAssetViewController:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setAssetHelper:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "_startBookSuccessfullyOpenedTimer");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "asset"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController animatorForAsset:isCurrentBook:opening:largeCover:skipZoom:](BKAssetPresentingViewController, "animatorForAsset:isCurrentBook:opening:largeCover:skipZoom:", v2, 0, 1, objc_msgSend(*(id *)(a1 + 56), "coverAnimationSourceUseLargeCover"), 1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "coverAnimationSourceImage"));
  objc_msgSend(v3, "setCoverImage:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "openOptions"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("BKBookPresentingCoverShadowImage")));
  objc_msgSend(v3, "setCoverShadowImage:", v6);

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_10008671C;
  v19[3] = &unk_1008E7B20;
  v20 = *(id *)(a1 + 56);
  objc_msgSend(v3, "setClosedCoverFrameBlock:", v19);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100086724;
  v17[3] = &unk_1008E72C0;
  v18 = *(id *)(a1 + 56);
  objc_msgSend(v3, "setPreTransitionBlock:", v17);
  objc_msgSend(v3, "setAssertions:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setAssetViewControllerDelegate:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "setContentOpenAnimator:", v3);
  objc_msgSend(*(id *)(a1 + 32), "setAssetPresenterAnimator:", v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "asset"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "url"));

  objc_initWeak(&location, *(id *)(a1 + 32));
  v9 = *(void **)(a1 + 32);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10008672C;
  v12[3] = &unk_1008E7B48;
  objc_copyWeak(&v15, &location);
  v10 = *(void **)(a1 + 40);
  v12[4] = *(_QWORD *)(a1 + 32);
  v13 = v10;
  v11 = v3;
  v14 = v11;
  objc_msgSend(v9, "_updateLibraryAssetFromMetadataWithURL:completion:", v8, v12);

  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);

}

void sub_100086700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10008671C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "coverAnimationSourceFrame");
}

id sub_100086724(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "coverAnimationSourcePrepare");
}

void sub_10008672C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;

  v2 = (id *)(a1 + 56);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_willOpenBookAnimated:", 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKScenePresenting));
    objc_msgSend(v4, "setStateFlags:", (unint64_t)objc_msgSend(v4, "stateFlags") | 1);
    objc_msgSend(v5, "presenterVisibleViewControllerWillChangeAnimated:", 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitioningViewController"));
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100086878;
    v10[3] = &unk_1008E7540;
    objc_copyWeak(&v13, v2);
    v11 = *(id *)(a1 + 40);
    v9 = v5;
    v12 = v9;
    objc_msgSend(v6, "transitionToContentViewController:withTransition:completion:", v7, v8, v10);

    objc_destroyWeak(&v13);
  }

}

void sub_100086864(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100086878(id *a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  void *v7;
  void *v8;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v8 = WeakRetained;
    objc_msgSend(WeakRetained, "setMinifiedBarHidden:", 0);
    objc_msgSend(a1[4], "setContentOpenAnimator:", 0);
    objc_msgSend(a1[5], "presenterVisibleViewControllerDidChangeAnimated:", 1);
    objc_msgSend(v8, "_didOpenBookAnimated:", 1);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "view"));
    objc_msgSend(v4, "setOpaque:", 1);

    objc_msgSend(v8, "setStateFlags:", (unint64_t)objc_msgSend(v8, "stateFlags") & 0xFFFFFFFFFFFFFFFBLL);
    objc_msgSend(v8, "setStateFlags:", (unint64_t)objc_msgSend(v8, "stateFlags") & 0xFFFFFFFFFFFFFFFELL);
    v5 = objc_msgSend(v8, "stateFlags");
    v3 = v8;
    if ((v5 & 2) != 0)
    {
      objc_msgSend(v8, "im_dismissAnimated:", 1);
      v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "errorCloseBlock"));
      v7 = (void *)v6;
      if (v6)
        (*(void (**)(uint64_t))(v6 + 16))(v6);

      objc_msgSend(v8, "setErrorCloseBlock:", 0);
      v3 = v8;
    }
  }

}

id sub_100086974(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char isKindOfClass;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "placeholderViewController"));
  v3 = objc_opt_class(BKLibraryBookCoverViewController);
  isKindOfClass = objc_opt_isKindOfClass(v2, v3);

  if ((isKindOfClass & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "placeholderViewController"));
    objc_msgSend(v5, "setShowBackButton:", 0);

  }
  v6 = objc_msgSend(*(id *)(a1 + 32), "stateFlags");
  v7 = *(_QWORD *)(a1 + 40);
  if ((v6 & 0x40) != 0)
    return objc_msgSend(*(id *)(a1 + 32), "setTransitionCompletedBlock:", v7);
  else
    return (id)(*(uint64_t (**)(_QWORD))(v7 + 16))(*(_QWORD *)(a1 + 40));
}

void sub_100086A14(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  _QWORD v4[4];
  id v5;

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100086B04;
    v4[3] = &unk_1008E72C0;
    v5 = *(id *)(a1 + 32);
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_100086BF0;
    v2[3] = &unk_1008E7B98;
    v3 = *(id *)(a1 + 40);
    +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v4, v2, 0.2);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
}

void sub_100086B04(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "setAlpha:", 0.0, (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

uint64_t sub_100086BF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100086BFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100087170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1000871CC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  char isKindOfClass;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v3 = a2;
  v4 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (!+[NSThread isMainThread](NSThread, "isMainThread"))
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKAssetPresentingViewController.m", 1121, "-[BKBasePresentingViewController viewDidAppear:]_block_invoke", "[NSThread isMainThread]", CFSTR("This operation must only be performed on the main thread!"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
  v6 = objc_msgSend(v5, "length");

  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "assetIdentifier"));
    v8 = objc_opt_class(BKAssetID);
    isKindOfClass = objc_opt_isKindOfClass(v7, v8);

    if ((isKindOfClass & 1) == 0)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKAssetID identifierWithAssetID:](BKAssetID, "identifierWithAssetID:", v10));
      objc_msgSend(v4, "setAssetIdentifier:", v11);

    }
  }
  else
  {
    v12 = sub_100082F2C();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_10069CD30((uint64_t)v3, v13, v14, v15, v16, v17, v18, v19);

  }
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100087364;
  v20[3] = &unk_1008E7BE8;
  v20[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v4, "_waitForOngoingMigrationAttemptToFinish:completion:", v3, v20);

}

void sub_100087364(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v2[4];
  _QWORD *v3;
  _QWORD v4[5];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100087430;
  v4[3] = &unk_1008E7BE8;
  v4[4] = *(_QWORD *)(a1 + 32);
  v1 = objc_retainBlock(v4);
  if (v1)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ((void (*)(_QWORD *))v1[2])(v1);
    }
    else
    {
      v2[0] = _NSConcreteStackBlock;
      v2[1] = 3221225472;
      v2[2] = sub_100087440;
      v2[3] = &unk_1008E7818;
      v3 = v1;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

    }
  }

}

id sub_100087430(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "_loadAssetVC");
}

uint64_t sub_100087440(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10008744C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;

  v3 = a2;
  if (!+[NSThread isMainThread](NSThread, "isMainThread"))
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKAssetPresentingViewController.m", 1137, "-[BKBasePresentingViewController viewDidAppear:]_block_invoke_4", "[NSThread isMainThread]", CFSTR("This operation must only be performed on the main thread!"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSourceIdentifier"));
  v6 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v7 = sub_100082F2C();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
    *(_DWORD *)buf = 141559042;
    v21 = 1752392040;
    v22 = 2112;
    v23 = v4;
    v24 = 2160;
    v25 = 1752392040;
    v26 = 2112;
    v27 = v9;
    v28 = 2114;
    v29 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "resolveAndWaitAndLoadAssetVC: resolveLibraryAsset begin. assetID: %{mask.hash}@ title: %{mask.hash}@ dataSourceIdentifier: %{public}@", buf, 0x34u);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "libraryAssetProvider"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10008766C;
  v15[3] = &unk_1008E7C38;
  v16 = v4;
  v17 = v5;
  v11 = *(id *)(a1 + 32);
  v18 = v3;
  v19 = v11;
  v12 = v3;
  v13 = v5;
  v14 = v4;
  objc_msgSend(v10, "resolveLibraryAsset:completion:", v12, v15);

}

void sub_10008766C(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  void *v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD block[4];
  _QWORD *v20;
  _QWORD v21[4];
  id v22;
  NSObject *v23;
  _QWORD v24[4];
  id v25;
  NSObject *v26;
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  id v34;

  v6 = a4;
  v7 = sub_100082F2C();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 141558786;
    v28 = 1752392040;
    v29 = 2112;
    v30 = v9;
    v31 = 2114;
    v32 = v10;
    v33 = 2112;
    v34 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "resolveAndWaitAndLoadAssetVC: resolveLibraryAsset end. assetID: %{mask.hash}@ dataSourceIdentifier: %{public}@ error: %@", buf, 0x2Au);
  }

  if (v6)
  {
    v11 = sub_100082F2C();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_10069CD94(a1, (uint64_t)v6, v12);
  }
  else if (a3)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_100087948;
    v24[3] = &unk_1008E7950;
    v26 = *(id *)(a1 + 56);
    v25 = *(id *)(a1 + 48);
    objc_msgSend(v13, "addCustomOperationBlock:", v24);

    v12 = v26;
  }
  else
  {
    v14 = sub_100082F2C();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16 = *(_QWORD *)(a1 + 32);
      v17 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 141558530;
      v28 = 1752392040;
      v29 = 2112;
      v30 = v16;
      v31 = 2114;
      v32 = v17;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "resolveAndWaitAndLoadAssetVC: resolveLibraryAsset returned NO. assetID: %{mask.hash}@ dataSourceIdentifier: %{public}@", buf, 0x20u);
    }

    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100087A54;
    v21[3] = &unk_1008E7950;
    v23 = *(id *)(a1 + 56);
    v22 = *(id *)(a1 + 48);
    v18 = objc_retainBlock(v21);
    if (v18)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *))v18[2])(v18);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100087A64;
        block[3] = &unk_1008E7818;
        v20 = v18;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

    v12 = v23;
  }

}

void sub_100087948(uint64_t a1)
{
  _QWORD *v2;
  _QWORD block[4];
  _QWORD *v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100087A38;
  v5[3] = &unk_1008E7950;
  v7 = *(id *)(a1 + 40);
  v6 = *(id *)(a1 + 32);
  v2 = objc_retainBlock(v5);
  if (v2)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ((void (*)(_QWORD *))v2[2])(v2);
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100087A48;
      block[3] = &unk_1008E7818;
      v4 = v2;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    }
  }

}

uint64_t sub_100087A38(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_100087A48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100087A54(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_100087A64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100087A70(id *a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100087B3C;
  v5[3] = &unk_1008E7C88;
  v6 = a1[4];
  v7 = v3;
  v4 = v3;
  objc_copyWeak(&v9, a1 + 6);
  v8 = a1[5];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v9);
}

void sub_100087B3C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  id WeakRetained;
  uint64_t v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v2 = sub_100082F2C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v14 = 141558530;
    v15 = 1752392040;
    v16 = 2112;
    v17 = v4;
    v18 = 2112;
    v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%{mask.hash}@] Auto Download resolved to Local.  Returned asset:%@", (uint8_t *)&v14, 0x20u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "downloadProgressBlock"));
  v9 = (void *)v7;
  if (v7)
  {
    v10 = *(_QWORD *)(a1 + 40);
    v8.n128_u64[0] = 0;
    if (v10)
      v8.n128_f64[0] = 1.0;
    (*(void (**)(uint64_t, BOOL, __n128))(v7 + 16))(v7, v10 != 0, v8);
  }

  objc_msgSend(WeakRetained, "setStateFlags:", (unint64_t)objc_msgSend(WeakRetained, "stateFlags") & 0xFFFFFFFFFFFFFFF7);
  if (objc_msgSend(WeakRetained, "autoOpen"))
  {
    objc_msgSend(WeakRetained, "setStateFlags:", (unint64_t)objc_msgSend(WeakRetained, "stateFlags") | 4);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryAssetProvider"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetIdentifier"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "libraryAssetOnMainQueueWithAssetIdentifier:", v12));

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_100088908(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BCBookReadingTimeTracker sharedInstance](BCBookReadingTimeTracker, "sharedInstance"));
  objc_msgSend(v2, "promoteTrackedAsset:promoteIfNotTracked:", *(_QWORD *)(a1 + 32), 0);

}

void sub_1000890AC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[5];
  uint8_t buf[4];
  uint64_t v12;
  __int16 v13;
  void *v14;

  v2 = sub_100082F2C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIdentifier"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "permanentOrTemporaryAssetID"));
    *(_DWORD *)buf = 141558274;
    v12 = 1752392040;
    v13 = 2112;
    v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%{mask.hash}@] _reloadAssetCloseViewController after clearCache", buf, 0x16u);

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewController"));
  objc_msgSend(v6, "setAssetViewControllerDelegate:", 0);

  objc_msgSend(*(id *)(a1 + 32), "setAssetViewController:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setAssetHelper:", 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIdentifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "permanentAssetID"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10008924C;
  v10[3] = &unk_1008E7AF8;
  v10[4] = *(_QWORD *)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[BKAssetLookup assetLookupWithID:options:completion:](BKAssetLookup, "assetLookupWithID:options:completion:", v8, &__NSDictionary0__struct, v10));
  objc_msgSend(*(id *)(a1 + 32), "setAssetLookup:", v9);

}

void sub_10008924C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  id *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  _QWORD v24[5];
  id v25;
  id v26;
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  void *v30;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = sub_100082F2C();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIdentifier"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "permanentOrTemporaryAssetID"));
    *(_DWORD *)buf = 141558274;
    v28 = 1752392040;
    v29 = 2112;
    v30 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[%{mask.hash}@] _reloadAssetCloseViewController after assetLookup", buf, 0x16u);

  }
  v15 = *(void **)(a1 + 32);
  v14 = (id *)(a1 + 32);
  objc_msgSend(v15, "setAssetViewController:", v7);
  v16 = *v14;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v14, "assetViewController"));
  objc_msgSend(v17, "setAssetViewControllerDelegate:", v16);

  objc_msgSend(*v14, "setAssetHelper:", v8);
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v18, "postNotificationName:object:", CFSTR("BKPresentedAssetVCDidChangeNotificationName"), *v14);

  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v14, "minifiedPresenter"));
  objc_msgSend(v19, "minifiedPresenterDidReloadAssetViewController:", v7);

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "asset"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "url"));

  objc_initWeak((id *)buf, *v14);
  v22 = *v14;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000894BC;
  v24[3] = &unk_1008E7518;
  objc_copyWeak(&v26, (id *)buf);
  v24[4] = *v14;
  v23 = v7;
  v25 = v23;
  objc_msgSend(v22, "_updateLibraryAssetFromMetadataWithURL:completion:", v21, v24);

  objc_destroyWeak(&v26);
  objc_destroyWeak((id *)buf);

}

void sub_100089498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000894BC(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  BKBookReloadAnimator *v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  id v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  void *v23;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4 = sub_100082F2C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIdentifier"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "permanentOrTemporaryAssetID"));
      *(_DWORD *)buf = 141558274;
      v21 = 1752392040;
      v22 = 2112;
      v23 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{mask.hash}@] _reloadAssetCloseViewController after _updateLibraryAssetFromMetadataWithURL", buf, 0x16u);

    }
    objc_msgSend(WeakRetained, "_willOpenBookAnimated:", 0);
    objc_msgSend(WeakRetained, "setStateFlags:", (unint64_t)objc_msgSend(WeakRetained, "stateFlags") | 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKScenePresenting));
    objc_msgSend(v8, "presenterVisibleViewControllerWillChangeAnimated:", 0);
    v9 = objc_alloc_init(BKBookReloadAnimator);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewController"));
    objc_msgSend(v10, "setContentOpenAnimator:", v9);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewController"));
    v12 = objc_opt_respondsToSelector(v11, "assetReloading");

    if ((v12 & 1) != 0)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewController"));
      objc_msgSend(v13, "setAssetReloading:", 1);

    }
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transitioningViewController"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_100089724;
    v17[3] = &unk_1008E7D00;
    v15 = *(_QWORD *)(a1 + 40);
    v17[4] = *(_QWORD *)(a1 + 32);
    objc_copyWeak(&v19, v2);
    v16 = v8;
    v18 = v16;
    objc_msgSend(v14, "transitionToContentViewController:withTransition:completion:", v15, v9, v17);

    objc_destroyWeak(&v19);
  }

}

void sub_100089708(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100089724(id *a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id WeakRetained;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  uint64_t v20;
  void *v21;
  int v22;
  uint64_t v23;
  __int16 v24;
  void *v25;

  v2 = sub_100082F2C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "assetIdentifier"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "permanentOrTemporaryAssetID"));
    v22 = 141558274;
    v23 = 1752392040;
    v24 = 2112;
    v25 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%{mask.hash}@] _reloadAssetCloseViewController after transitionToContentViewController", (uint8_t *)&v22, 0x16u);

  }
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v7 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "setMinifiedBarHidden:", 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetViewController"));
    objc_msgSend(v8, "setContentOpenAnimator:", 0);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetViewController"));
    v10 = objc_opt_respondsToSelector(v9, "assetReloading");

    if ((v10 & 1) != 0)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetViewController"));
      objc_msgSend(v11, "setAssetReloading:", 0);

    }
    objc_msgSend(a1[5], "presenterVisibleViewControllerDidChangeAnimated:", 0);
    objc_msgSend(v7, "_didOpenBookAnimated:", 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));
    objc_msgSend(v12, "setOpaque:", 1);

    objc_msgSend(v7, "setStateFlags:", (unint64_t)objc_msgSend(v7, "stateFlags") & 0xFFFFFFFFFFFFFFFBLL);
    objc_msgSend(v7, "setStateFlags:", (unint64_t)objc_msgSend(v7, "stateFlags") & 0xFFFFFFFFFFFFFFFELL);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "sessionID"));

    if (!v13)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
      v15 = objc_msgSend(v14, "applicationState");

      v17 = BCCurrentBookLog(v16);
      v18 = objc_claimAutoreleasedReturnValue(v17);
      v19 = v18;
      if (v15 == (id)2)
      {
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_10069CE38(v7, v19);

      }
      else
      {
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          LOWORD(v22) = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Book reloaded with no active tracking session so start tracking.", (uint8_t *)&v22, 2u);
        }

        objc_msgSend(v7, "_beginReadingSessionForEventType:", 0);
      }
    }
    if ((objc_msgSend(v7, "stateFlags") & 2) != 0)
    {
      objc_msgSend(v7, "im_dismissAnimated:", 1);
      v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "errorCloseBlock"));
      v21 = (void *)v20;
      if (v20)
        (*(void (**)(uint64_t))(v20 + 16))(v20);

      objc_msgSend(v7, "setErrorCloseBlock:", 0);
    }
  }

}

void sub_10008A000(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "liveResizeWrapperView"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "transitioningViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

uint64_t sub_10008A06C(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "_clearLiveResizeViews");
  result = objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "assetViewControllerDidFinishUpdateForLiveResize");
  if ((result & 1) != 0)
    return (uint64_t)objc_msgSend(*(id *)(a1 + 40), "assetViewControllerDidFinishUpdateForLiveResize");
  return result;
}

void sub_10008A670(uint64_t a1, char a2)
{
  id v3;
  uint64_t v4;
  _QWORD block[4];
  id v6;
  uint64_t v7;
  char v8;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008A6EC;
  block[3] = &unk_1008E7D78;
  v8 = a2;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = v3;
  v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_10008A6EC(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  if (*(_BYTE *)(a1 + 48))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sampleProfileFuture"));
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10008A78C;
    v3[3] = &unk_1008E7D50;
    v3[4] = *(_QWORD *)(a1 + 40);
    objc_msgSend(v2, "get:", v3);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setModeState:", 1);
    objc_msgSend(*(id *)(a1 + 32), "setDisableInteraction:", 0);
  }
}

id sub_10008A78C(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "isPreorder");
  if ((_DWORD)result)
  {
    objc_msgSend(*(id *)(a1 + 32), "setBuyButtonItem:", 0);
    return objc_msgSend(*(id *)(a1 + 32), "assetPresenterUpdateToolbars");
  }
  return result;
}

void sub_10008AA78(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryAssetProvider"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIdentifier"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryMutableAssetWithAssetIdentifier:inManagedObjectContext:", v6, v4));

  objc_msgSend(v7, "setFinishedStateAssetRead");
  objc_msgSend(*(id *)(a1 + 32), "setStateFlags:", (unint64_t)objc_msgSend(*(id *)(a1 + 32), "stateFlags") | 0x10);

}

void sub_10008AC54(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008AD10;
  block[3] = &unk_1008E7928;
  v10 = *(id *)(a1 + 32);
  v11 = v5;
  v12 = v6;
  v7 = v6;
  v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_10008AD10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "set:error:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_10008AEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008AEE8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD block[4];
  id v6;
  id v7;
  id v8;

  v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008AF9C;
  block[3] = &unk_1008E7518;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  v6 = *(id *)(a1 + 32);
  v7 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

void sub_10008AF9C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_configureBuyButtonForPricing:profile:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_10008B174(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008B230;
  block[3] = &unk_1008E78B8;
  v8 = *(id *)(a1 + 32);
  v9 = *(id *)(a1 + 40);
  v10 = v3;
  v4 = *(id *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v11 = v4;
  v12 = v5;
  v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_10008B230(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD v20[2];
  _QWORD v21[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  if ((objc_msgSend(v2, "isFinished") & 1) == 0)
  {
    v20[0] = BKLibraryAssetMarkedLocation;
    v20[1] = BKLibraryAssetIDKey;
    v3 = *(_QWORD *)(a1 + 40);
    v21[0] = BALocationTypePostReading;
    v21[1] = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v21, v20, 2));
    objc_msgSend(v2, "setFinishedStateUserSetsFinished:userInfo:", 1, v4);

    v5 = *(void **)(a1 + 56);
    v6 = *(_QWORD *)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "dateFinished"));
    objc_msgSend(v5, "willMarkAsset:finished:finishedDate:", v6, 1, v7);

    if (objc_msgSend(v2, "isOwned"))
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "storeID"));
      if (objc_msgSend(v8, "length"))
        v9 = 1;
      else
        v9 = 2;

    }
    else
    {
      v9 = 0;
    }
    v10 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)objc_msgSend(v2, "contentType"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    v12 = objc_msgSend(v11, "seriesTypeForContentID:", *(_QWORD *)(a1 + 40));

    if (objc_msgSend(v2, "isAudiobook"))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "hasRACSupport"));
      if (objc_msgSend(v13, "BOOLValue"))
        v14 = 1;
      else
        v14 = 2;

    }
    else
    {
      v14 = 0;
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "ba_effectiveAnalyticsTracker"));
    v17 = *(_QWORD *)(a1 + 40);
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "supplementalContentAssets"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v18, "count")));
    objc_msgSend(v15, "emitMarkAsFinishedEventWithTracker:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", v16, v17, v9, v10, v19, v12, v14);

  }
}

void sub_10008B764(uint64_t a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v3 = a2;
  if (objc_msgSend(v3, "count"))
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10008B7FC;
    v4[3] = &unk_1008E7338;
    v5 = *(id *)(a1 + 32);
    v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  }
}

id sub_10008B7FC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "buildContextTree:", *(_QWORD *)(a1 + 40));
}

void sub_10008BCF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008BD1C(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void (**v7)(id, void *);

  v7 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKContextMenuProvider sharedProvider](BKContextMenuProvider, "sharedProvider"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataModelWithSourceView:", *(_QWORD *)(a1 + 40)));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "menuElementsForViewController:dataModel:", WeakRetained, v5));

    v7[2](v7, v6);
  }
  else
  {
    v7[2](v7, &__NSArray0__struct);
  }

}

void sub_10008C058(uint64_t a1, int a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;

  if (a2)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
      objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v3, BCTransactionOptionsTransactionKey);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "assetLogID"));
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v4, AEAssetLogID);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKBookPresenting));
    v6 = *(_QWORD *)(a1 + 64);
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10008C15C;
    v11[3] = &unk_1008E7E40;
    v9 = *(id *)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 56);
    v12 = v9;
    v13 = v10;
    objc_msgSend(v5, "showAssetWithTransaction:assetIdentifier:location:options:completion:", v7, v6, 0, v8, v11);

  }
}

void sub_10008C15C(uint64_t a1, char a2)
{
  void *v4;
  id v5;

  if (objc_msgSend(*(id *)(a1 + 32), "isValid"))
  {
    if ((a2 & 1) == 0)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "placeholderViewController"));
      v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "coverAnimationHostSourceForItem:", *(_QWORD *)(a1 + 32)));

      objc_msgSend(v5, "coverAnimationSourceFinalize");
    }
  }
}

void sub_10008C4C0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKMinifiedPresenting));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "primarySceneController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "primaryScenePresenting"));

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10008C598;
  v8[3] = &unk_1008E7338;
  v6 = *(_QWORD *)(a1 + 32);
  v9 = v5;
  v10 = v6;
  v7 = v5;
  objc_msgSend(v2, "minifiedPresenterUpdateCurrentBookWithCompletion:", v8);

}

id sub_10008C598(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "presenterUpdateReadingNowWithAssetPresenter:completion:", *(_QWORD *)(a1 + 40), &stru_1008E7E88);
}

void sub_10008C5AC(id a1)
{
  uint64_t v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = BCCurrentBookLog(a1);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Updated recent books feed as a result of a book promotion", v3, 2u);
  }

}

uint64_t sub_10008C610(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10008C8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008C908(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_confirmBookSuccessfullyOpened");

}

void sub_10008D0E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  BKAssetPresentingViewController *v8;
  id v9;
  id v10;
  id v11;

  v7 = a4;
  v8 = 0;
  v11 = v7;
  if (a2 && a3)
  {
    v9 = a3;
    v10 = a2;
    v8 = -[BKBasePresentingViewController initWithAssetIdentifier:assetViewController:helper:libraryAssetProvider:]([BKAssetPresentingViewController alloc], "initWithAssetIdentifier:assetViewController:helper:libraryAssetProvider:", *(_QWORD *)(a1 + 32), v10, v9, *(_QWORD *)(a1 + 40));

    -[BKBasePresentingViewController setOpenOptions:](v8, "setOpenOptions:", *(_QWORD *)(a1 + 48));
    v7 = v11;
  }
  objc_msgSend(*(id *)(a1 + 56), "set:error:", v8, v7);

}

void sub_10008D190(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  unsigned int v5;
  id v6;

  v6 = a3;
  if (objc_msgSend(v6, "code") == (id)1)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "domain"));
    v5 = objc_msgSend(v4, "isEqualToString:", BCFutureErrorDomain);

    if (v5)
      objc_msgSend(*(id *)(a1 + 32), "cancel");
  }

}

void sub_10008D81C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_10008D844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = *(unsigned __int8 *)(a1 + 40);
  v2 = *(unsigned __int8 *)(a1 + 41);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)BKBasePresentingViewController;
  return objc_msgSendSuper2(&v4, "im_dismissAnimated:immediate:", v1, v2);
}

void sub_10008D884(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id v5;

  v2 = (void *)UIApp;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10008D938;
  v3[3] = &unk_1008E7F50;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  v4 = *(id *)(a1 + 32);
  objc_msgSend(v2, "_performBlockAfterCATransactionCommits:", v3);

  objc_destroyWeak(&v5);
}

void sub_10008D924(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10008D938(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setPreparingEndOfBookExperience:", 0);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v2, "endIgnoringInteractionEvents");

}

void sub_10008D99C(uint64_t a1, char a2)
{
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  char v8;
  char v9;

  v5[0] = _NSConcreteStackBlock;
  v5[2] = sub_10008DA38;
  v5[3] = &unk_1008E7FE0;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 56);
  v5[1] = 3221225472;
  v6 = v4;
  v9 = a2;
  v7 = *(id *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

void sub_10008DA38(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  char v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKMinifiedPresenting));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "primarySceneController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "primaryScenePresenting"));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10008DB58;
  v10[3] = &unk_1008E7FB8;
  v16 = *(_BYTE *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v11 = v5;
  v12 = v2;
  v17 = *(_BYTE *)(a1 + 57);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = v7;
  v15 = *(id *)(a1 + 48);
  v8 = v2;
  v9 = v5;
  objc_msgSend(v9, "presenterFixInterfaceOrientationIfNeededWithAssetPresenter:completion:", v6, v10);

}

void sub_10008DB58(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (**v4)(_QWORD, _QWORD);
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint8_t v11[8];
  _QWORD v12[4];
  id v13;
  uint64_t v14;
  _QWORD v15[4];
  char v16;

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10008DCCC;
  v15[3] = &unk_1008E7F70;
  v16 = a2;
  v3 = objc_retainBlock(v15);
  v4 = (void (**)(_QWORD, _QWORD))v3;
  if (*(_BYTE *)(a1 + 72))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else if (*(_QWORD *)(a1 + 32) && *(_QWORD *)(a1 + 40) && *(_BYTE *)(a1 + 73))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v5, "beginIgnoringInteractionEvents");

    objc_msgSend(*(id *)(a1 + 48), "setPreparingEndOfBookExperience:", 1);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10008DD34;
    v12[3] = &unk_1008E7338;
    v6 = *(void **)(a1 + 40);
    v7 = *(id *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 48);
    v13 = v7;
    v14 = v8;
    v9 = BCCurrentBookLog(objc_msgSend(v6, "minifiedPresenterUpdateCurrentBookWithCompletion:", v12));
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Dismissing current book", v11, 2u);
    }

    v4[2](v4, *(_QWORD *)(a1 + 64));
  }
  else
  {
    ((void (*)(_QWORD *, _QWORD))v3[2])(v3, *(_QWORD *)(a1 + 56));
  }

}

void sub_10008DCCC(uint64_t a1, void (**a2)(_QWORD))
{
  void (**v2)(_QWORD);
  dispatch_time_t v3;

  if (*(_BYTE *)(a1 + 32))
  {
    v2 = a2;
    v3 = dispatch_time(0, 300000000);
    dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, v2);
  }
  else
  {
    a2[2](a2);
  }

}

id sub_10008DD34(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "presenterPrepareEndOfBookExperienceWithAssetPresenter:completion:", *(_QWORD *)(a1 + 40), &stru_1008E7F90);
}

void sub_10008DD48(id a1)
{
  uint64_t v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = BCCurrentBookLog(a1);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Did finish snapshot and feed update for end of book", v3, 2u);
  }

}

void sub_10008DE84(uint64_t a1, char a2)
{
  void *v2;
  _QWORD block[5];
  id v4;
  char v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008DEF4;
  block[3] = &unk_1008E7388;
  v2 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v5 = a2;
  v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_10008DEF4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  char v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKMinifiedPresenting));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "primarySceneController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "primaryScenePresenting"));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10008DFF8;
  v9[3] = &unk_1008E8030;
  v10 = v5;
  v11 = v2;
  v14 = *(_BYTE *)(a1 + 48);
  v6 = *(void **)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = v6;
  v7 = v2;
  v8 = v5;
  objc_msgSend(v8, "presenterFixInterfaceOrientationIfNeededWithAssetPresenter:completion:", v12, v9);

}

void sub_10008DFF8(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  if (*(_QWORD *)(a1 + 32) && *(_QWORD *)(a1 + 40) && *(_BYTE *)(a1 + 64))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    objc_msgSend(v2, "beginIgnoringInteractionEvents");

    objc_msgSend(*(id *)(a1 + 48), "setPreparingEndOfBookExperience:", 1);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10008E0C8;
    v4[3] = &unk_1008E7680;
    v3 = *(void **)(a1 + 40);
    v4[4] = *(_QWORD *)(a1 + 48);
    v5 = *(id *)(a1 + 56);
    objc_msgSend(v3, "minifiedPresenterUpdateCurrentBookWithCompletion:", v4);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
}

uint64_t sub_10008E0C8(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "setPreparingEndOfBookExperience:", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  objc_msgSend(v2, "endIgnoringInteractionEvents");

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_10008E27C(uint64_t a1)
{
  double v2;
  float v3;
  void *v4;
  double v5;
  void *v6;
  char v7;
  double v8;
  id v9;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 200), "progressValue");
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_buyButton"));
  *(float *)&v5 = v3;
  objc_msgSend(v4, "setProgress:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewController"));
  v7 = objc_opt_respondsToSelector(v6, "setBuyButtonProgress:");

  if ((v7 & 1) != 0)
  {
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewController"));
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 200), "progressValue");
    *(float *)&v8 = v8;
    objc_msgSend(v9, "setBuyButtonProgress:", v8);

  }
}

uint64_t sub_10008E350(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10008ECD4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);
  void (*v12)(void);
  uint64_t v13;
  void *v14;
  void *v15;
  const __CFString *v16;
  uint64_t v17;

  v6 = a4;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "allValues"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "lastObject"));

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "buyParameters"));
  v10 = objc_retainBlock(*(id *)(a1 + 40));
  v11 = (void (**)(_QWORD, _QWORD, _QWORD))v10;
  if (v9)
  {
    if (v10)
    {
      v12 = (void (*)(void))*((_QWORD *)v10 + 2);
LABEL_7:
      v12();
    }
  }
  else if (v10)
  {
    if (!v6)
    {
      v13 = *(_QWORD *)(a1 + 32);
      v16 = CFSTR("storeID");
      v17 = v13;
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1));
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKAssetPresentingViewControllerErrorDomain"), 1001, v14));
      ((void (**)(_QWORD, _QWORD, void *))v11)[2](v11, 0, v15);

      goto LABEL_8;
    }
    v12 = (void (*)(void))*((_QWORD *)v10 + 2);
    goto LABEL_7;
  }
LABEL_8:

}

id sub_10008F09C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressStatus"));

  if (!v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryAssetStatusController sharedController](BKLibraryAssetStatusController, "sharedController"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "statusForAssetID:", *(_QWORD *)(a1 + 40)));
    objc_msgSend(*(id *)(a1 + 32), "setProgressStatus:", v4);

  }
  return objc_msgSend(*(id *)(a1 + 32), "_updateAssetStateAndDownloadStatus:", *(_QWORD *)(a1 + 48));
}

uint64_t sub_10008F118(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10008F398(uint64_t a1)
{
  id v2;
  float v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  int v17;
  void *v18;
  __int16 v19;
  void *v20;

  v2 = objc_msgSend(*(id *)(a1 + 32), "state");
  v3 = 0.0;
  if (v2 == (id)6)
  {
    v5 = 2;
  }
  else if (v2 == (id)5)
  {
    objc_msgSend(*(id *)(a1 + 32), "progressValue");
    v3 = v6;
    v5 = 3;
  }
  else if (v2 == (id)4)
  {
    objc_msgSend(*(id *)(a1 + 32), "progressValue");
    v3 = v4;
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "state") == (id)4)
  {
    v7 = 2;
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryAssetProvider"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetIdentifier"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "libraryAssetOnMainQueueWithAssetIdentifier:", v9));

    v7 = (uint64_t)objc_msgSend(v10, "state");
  }
  v11 = sub_100082F2C();
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 32), "state")));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
    v17 = 138543618;
    v18 = v13;
    v19 = 2112;
    v20 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "_updateAssetStateAndDownloadStatus: %{public}@, assetID: %@", (uint8_t *)&v17, 0x16u);

  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetViewController"));
  *(float *)&v16 = v3;
  objc_msgSend(v15, "setDownloadState:assetState:progressValue:", v5, v7, v16);

}

void sub_10008FBEC(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_10009000C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;

  v4 = objc_retainBlock(*(id *)(a1 + 32));
  if (v4)
  {
    v5 = v4;
    (*((void (**)(id, uint64_t))v4 + 2))(v4, a3);
    v4 = v5;
  }

}

void sub_1000910A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000910C4(id *a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000911B8;
  v4[3] = &unk_1008E8148;
  v5 = a2;
  v3 = v5;
  objc_copyWeak(&v10, a1 + 8);
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a1[7];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  objc_destroyWeak(&v10);
}

void sub_1000911B8(uint64_t a1)
{
  void *v2;
  id WeakRetained;
  void *v4;
  id v5;
  void *v6;
  NSMutableDictionary *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  NSMutableDictionary *v18;
  id v19;
  id v20;
  id v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "buyParameters"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "upSellData"));

  v5 = objc_loadWeakRetained((id *)(a1 + 72));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "appAnalyticsAdditionalData"));

  v7 = objc_opt_new(NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 40), CFSTR("BATracker"));
  if (v4)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v4, CFSTR("upSellData"));
  if (v6 && _os_feature_enabled_impl("Books", "unifiedProductPage"))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "dictionary"));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v8, BAAppAnalyticsAdditionalDataKey);

  }
  v9 = objc_loadWeakRetained((id *)(a1 + 72));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "libraryAssetProvider"));

  if (v10)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "adamIDStringValue"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000913F4;
    v14[3] = &unk_1008E8120;
    v15 = v2;
    v16 = *(id *)(a1 + 32);
    v17 = *(id *)(a1 + 48);
    v18 = v7;
    v19 = v10;
    v20 = *(id *)(a1 + 56);
    v21 = *(id *)(a1 + 64);
    objc_msgSend(v19, "fetchLibraryAssetFromStoreID:handler:", v11, v14);

  }
  else
  {
    v12 = objc_retainBlock(*(id *)(a1 + 64));
    v13 = v12;
    if (v12)
      (*((void (**)(id, _QWORD, _QWORD))v12 + 2))(v12, 0, 0);

  }
}

void sub_1000913F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSMutableDictionary *v7;
  const __CFString *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSMutableDictionary *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  _QWORD v23[2];
  _QWORD v24[2];

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = objc_opt_new(NSMutableDictionary);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", JSARecordEventTypeClick, JSARecordKeyEventType);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", JSARecordActionTypeBuy, JSARecordKeyActionType);
    v8 = *(const __CFString **)(a1 + 32);
    if (!v8)
      v8 = &stru_10091C438;
    v23[0] = CFSTR("buyParams");
    v23[1] = CFSTR("type");
    v24[0] = v8;
    v24[1] = CFSTR("sampleUpsell");
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v24, v23, 2));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v9, JSARecordKeyActionDetails);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "offer"));
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("type")));
    v12 = (void *)v11;
    if (v11)
      v13 = (const __CFString *)v11;
    else
      v13 = CFSTR("buy");
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v13, JSARecordKeyOfferType);

    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 48), JSARecordKeyTargetId);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", JSARecordTargetTypeButton, JSARecordKeyTargetType);
    +[JSAApplication recordNativeEvent:additionalInfo:](JSAApplication, "recordNativeEvent:additionalInfo:", v7, *(_QWORD *)(a1 + 56));
    v14 = *(_QWORD *)(a1 + 64);
    v15 = *(_QWORD *)(a1 + 32);
    v16 = objc_msgSend(v5, "isAudiobook");
    v17 = *(_QWORD *)(a1 + 56);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1000916B4;
    v19[3] = &unk_1008E80F8;
    v20 = *(id *)(a1 + 72);
    v21 = *(id *)(a1 + 40);
    v22 = *(id *)(a1 + 80);
    +[BKBookPurchaseAction tryToPurchaseBook:libraryAssetProvider:buyParameters:allowPurchaseFromNonSampleBuyButton:suppressNetworkEvaluatorDialogs:analyticsInfo:completion:](BKBookPurchaseAction, "tryToPurchaseBook:libraryAssetProvider:buyParameters:allowPurchaseFromNonSampleBuyButton:suppressNetworkEvaluatorDialogs:analyticsInfo:completion:", v5, v14, v15, 0, v16, v17, v19);

  }
  else
  {
    v18 = (NSMutableDictionary *)objc_retainBlock(*(id *)(a1 + 80));
    v7 = v18;
    if (v18)
      ((void (*)(NSMutableDictionary *, _QWORD, id))v18[2].super.super.isa)(v18, 0, v6);
  }

}

void sub_1000916B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id v12;
  char v13;

  v5 = a3;
  if ((_DWORD)a2
    && (objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), "didPurchaseWithProductProfile:completion:") & 1) != 0)
  {
    v6 = *(void **)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000917A4;
    v10[3] = &unk_1008E80D0;
    v12 = *(id *)(a1 + 48);
    v13 = a2;
    v11 = v5;
    objc_msgSend(v6, "didPurchaseWithProductProfile:completion:", v7, v10);

  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 48));
    v9 = v8;
    if (v8)
      (*((void (**)(id, uint64_t, id))v8 + 2))(v8, a2, v5);

  }
}

void sub_1000917A4(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_100091B20(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100091B4C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id v14;
  char v15;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100091C84;
  v10[3] = &unk_1008E81E8;
  objc_copyWeak(&v14, (id *)(a1 + 72));
  v15 = *(_BYTE *)(a1 + 88);
  v11 = *(id *)(a1 + 32);
  v12 = *(id *)(a1 + 40);
  v13 = *(id *)(a1 + 64);
  objc_msgSend(v4, "didOpenBookWithAssetID:version:title:pageCount:storeID:coverImage:completion:", v5, v6, v8, v7, v9, v3, v10);

  objc_destroyWeak(&v14);
}

void sub_100091C70(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100091C84(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id *v14;
  _QWORD v15[4];
  id v16;
  _QWORD v17[4];
  _QWORD v18[2];
  _QWORD v19[4];
  id v20;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v3
      || (v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults")),
          v6 = objc_msgSend(v5, "BOOLForKey:", CFSTR("BKForceReadingStatisticsEnabled")),
          v5,
          v6))
    {
      if (*(_BYTE *)(a1 + 64))
      {
        v7 = objc_msgSend(objc_alloc((Class)BCReadingStatisticsController), "initWithAssetID:versionString:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
        objc_msgSend(WeakRetained, "setReadingStatisticsController:", v7);

        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "readingStatisticsController"));
        objc_msgSend(v8, "addObserver:", WeakRetained);

        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "readingStatisticsController"));
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_100091ED8;
        v19[3] = &unk_1008E8198;
        objc_copyWeak(&v20, (id *)(a1 + 56));
        objc_msgSend(v9, "setupWithCompletion:", v19);

        objc_destroyWeak(&v20);
      }
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "readingStatisticsController"));

      if (v10)
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "readingStatisticsController"));
        objc_msgSend(v11, "addReadingStatisticsController:forAssetID:", v12, *(_QWORD *)(a1 + 32));

        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "readingStatisticsController"));
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_100091F54;
        v17[3] = &unk_1008E81C0;
        v14 = (id *)v18;
        v18[0] = *(id *)(a1 + 48);
        v18[1] = WeakRetained;
        objc_msgSend(v13, "tocCFIMapWithCompletion:", v17);

      }
      else
      {
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v15[2] = sub_100092008;
        v15[3] = &unk_1008E72C0;
        v14 = &v16;
        v16 = *(id *)(a1 + 48);
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v15);
      }

    }
  }

}

void sub_100091EC4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100091ED8(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v4;
  char v5;
  void *v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!a2)
  {
    if (WeakRetained)
    {
      v7 = WeakRetained;
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetViewController"));
      v5 = objc_opt_respondsToSelector(v4, "assetViewControllerReadyToAnswerReadingStatisticsQueries");

      WeakRetained = v7;
      if ((v5 & 1) != 0)
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetViewController"));
        objc_msgSend(v6, "assetViewControllerReadyToAnswerReadingStatisticsQueries");

        WeakRetained = v7;
      }
    }
  }

}

void sub_100091F54(uint64_t a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v3 = a2;
  if (objc_msgSend(v3, "count"))
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100091FFC;
    v4[3] = &unk_1008E7338;
    v5 = *(id *)(a1 + 32);
    v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "setNeedToForcePagination:", 1);
  }

}

id sub_100091FFC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "buildContextTree:", *(_QWORD *)(a1 + 40));
}

id sub_100092008(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "buildContextTree:", &__NSDictionary0__struct);
}

id sub_100092044(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "enteringFullScreen");
}

id sub_100092058()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), "inFullScreen");
}

id sub_100092068()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), "exitingFullScreen");
}

void sub_100094204(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100094220(uint64_t a1)
{
  void *v2;
  void *v3;
  BOOL v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  v3 = v2;
  if (*(_QWORD *)(a1 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
    objc_msgSend(v2, "minifiedFlowControllerHandleAssetPresentationError:assetID:isRetry:");

}

void sub_100094824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10009486C(id *a1)
{
  void *v2;
  id WeakRetained;
  void *v4;
  id v5;

  objc_msgSend(a1[4], "minifiedAssetPresenterWillCloseAssetMinified");
  if (objc_msgSend(a1[5], "_legacyMinibarBehavior"))
  {
    objc_msgSend(a1[6], "willMoveToParentViewController:", 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "view"));
    objc_msgSend(v2, "removeFromSuperview");

    objc_msgSend(a1[6], "removeFromParentViewController");
    WeakRetained = objc_loadWeakRetained(a1 + 7);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "minibarContainerView"));
    v5 = objc_loadWeakRetained(a1 + 7);
    objc_msgSend(v4, "setHidden:", objc_msgSend(v5, "minibarVisible") ^ 1);

  }
  return objc_msgSend(a1[4], "minifiedAssetPresenterDidCloseAssetMinified");
}

void sub_100094AC4(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  unsigned int v6;
  id v7;

  v7 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "minifiedAssetPresenterAssetID"));
  v6 = objc_msgSend(v5, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v6)
  {
    objc_msgSend(v7, "minifiedAssetPresenterDidReloadAssetViewController:", *(_QWORD *)(a1 + 40));
    *a3 = 1;
  }

}

void sub_100095598(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;

  v1 = *(double *)(a1 + 40);
  v2 = *(double *)(a1 + 48);
  v3 = *(double *)(a1 + 56);
  v4 = *(double *)(a1 + 64);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minibarContainerView"));
  objc_msgSend(v5, "setFrame:", v1, v2, v3, v4);

}

void sub_1000955F0(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(void);
  void (**v5)(void);

  objc_msgSend(*(id *)(a1 + 32), "setMinibarVisible:", *(unsigned __int8 *)(a1 + 48));
  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "audioBookAssetPresenter"));
  objc_msgSend(v2, "_layoutPresenterMinibar:", v3);

  objc_msgSend(*(id *)(a1 + 32), "_notifyToolbars");
  v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v5 = v4;
    v4[2]();
    v4 = v5;
  }

}

id sub_100095B88(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setMinibarVisible:animated:completion:", 0, 0, 0);
}

void sub_100095BFC(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "audioBookAssetPresenter"));
  objc_msgSend(v1, "_layoutPresenterMinibar:", v2);

}

void sub_1000961C4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  unsigned int v7;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "assetID"));
  v7 = objc_msgSend(v6, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v7)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100096224(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t v7[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetID:", *(_QWORD *)(a1 + 32)));

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24)
    || (v4 = objc_msgSend(v3, "isSupplementalContent"), (_DWORD)v4))
  {
    v5 = BCCurrentBookLog(v4);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Current book is not found in the recent books list or has became ASC. Clearing it.", v7, 2u);
    }

    +[BKBasePresentingViewController clearLastKnownSuccessfullyOpenBookID](BKAssetPresentingViewController, "clearLastKnownSuccessfullyOpenBookID");
  }

}

uint64_t sub_1000962E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000962F4(uint64_t a1, uint64_t a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), a2));
  objc_msgSend(v2, "setIsTrackedAsRecent:", 0);

}

void sub_100096644(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  if (objc_msgSend(*(id *)(a1 + 32), "useUIPFluidOpenTransition"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v2, "postEvent:sender:", kBETestDriverOpenAnimationRevealEnd, *(_QWORD *)(a1 + 32));

    v3 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v3, "postEvent:sender:", kBETestDriverOpenAnimationEnd, *(_QWORD *)(a1 + 32));

  }
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetPresenter"));
  objc_msgSend(v4, "setStateShouldOpen:", 0);

}

void sub_1000968F8(uint64_t a1)
{
  void *v2;
  id v3;

  if (objc_msgSend(*(id *)(a1 + 32), "useUIPFluidOpenTransition"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v2, "postEvent:sender:", kBETestDriverOpenAnimationEnd, *(_QWORD *)(a1 + 32));

  }
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetPresenter"));
  objc_msgSend(v3, "assetPresenterDismissalDidEnd:", *(unsigned __int8 *)(a1 + 40));

}

UIColor *__cdecl sub_100096DA8(id a1, UIColor *a2)
{
  UIColor *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[UIColor colorWithAlphaComponent:](v2, "colorWithAlphaComponent:", 0.12));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[UIColor colorWithAlphaComponent:](v2, "colorWithAlphaComponent:", 0.15));

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_dynamicColorWithLightColor:darkColor:](UIColor, "bc_dynamicColorWithLightColor:darkColor:", v3, v4));
  return (UIColor *)v5;
}

id sub_10009758C(uint64_t a1)
{
  void *v2;
  void *v3;

  if (objc_msgSend(*(id *)(a1 + 32), "opening"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedBarAnimator"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
    objc_msgSend(v2, "minifiedBarAnimatorFinalizeHideIfNeededToViewController:", v3);

  }
  return _objc_msgSend(*(id *)(a1 + 32), "_animationDidFinish");
}

void sub_1000975F4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  __int128 v5;
  __int128 v6;
  _QWORD v7[5];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "duration");
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000976B4;
  v7[3] = &unk_1008E8450;
  v7[4] = *(_QWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 56);
  v8 = *(_OWORD *)(a1 + 40);
  v9 = v5;
  v6 = *(_OWORD *)(a1 + 88);
  v10 = *(_OWORD *)(a1 + 72);
  v11 = v6;
  +[UIView animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:](UIView, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v7, v4);

}

void sub_1000976B4(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  v4 = *(double *)(a1 + 56);
  v5 = *(double *)(a1 + 64);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clipView"));
  objc_msgSend(v6, "setFrame:", v2, v3, v4, v5);

  v7 = *(double *)(a1 + 72);
  v8 = *(double *)(a1 + 80);
  v9 = *(double *)(a1 + 88);
  v10 = *(double *)(a1 + 96);
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tabBarView"));
  objc_msgSend(v11, "setFrame:", v7, v8, v9, v10);

}

double AudiobookNowPlayingTouchViewController.transitionToolbarAlpha()()
{
  return 1.0;
}

id sub_100098338(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "presentViewController:animated:completion:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

void sub_100098514(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", CFSTR("BKApplicationDidTakeSnapshot"), *(_QWORD *)(a1 + 32));

}

void sub_100099EAC(id a1)
{
  IMAccessibilityInstallSafeCategory(CFSTR("BooksAccessibilityObjectWrapper"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKUIWebDocumentViewAccessibility"));
}

void sub_100099F24(void *a1)
{
  void (**v1)(void);

  v1 = a1;
  v1[2]();

}

id sub_100099F98(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_accessibilityIgnoreNextNotification:", *(unsigned int *)(a1 + 40));
}

id sub_100099FA8(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char v12;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
  if (!v1
    || (v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "rootViewController")),
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "sceneControllerForViewController:", v3)),
        v3,
        !v4))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentSceneController"));
  }
  v12 = 0;
  v5 = objc_opt_class(BKBookViewControllerAccessibility);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bookPresenter"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bookPresenterCurrentlyOpenBookForSingleScene:", v4));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetPresenterAssetViewController"));
  v9 = __IMAccessibilityCastAsSafeCategory(v5, v8, 1, &v12);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v12)
    abort();

  return v10;
}

id sub_10009A0C0(void *a1)
{
  id v1;
  void *v2;
  Class v3;
  void *v4;
  id v5;

  v1 = sub_100099FA8(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = NSClassFromString(CFSTR("BKBookViewController"));
  if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imaxValueForKey:", CFSTR("currentPages")));
    v5 = objc_msgSend(v4, "rangeValue");

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id sub_10009A13C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v1 = a1;
  v2 = (void *)qword_1009F4DF8;
  if (qword_1009F4DF8
    || (v3 = objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle")),
        v4 = (void *)qword_1009F4DF8,
        qword_1009F4DF8 = v3,
        v4,
        (v2 = (void *)qword_1009F4DF8) != 0))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, &stru_10091C438, CFSTR("Accessibility")));
    v6 = v2;
  }
  else
  {
    v6 = 0;
  }
  if (v6 == v1)
  {
    if (IMAccessibilityShouldPerformValidationChecks(v2, v5))
      abort();

    v6 = 0;
  }

  return v6;
}

void sub_10009A504(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "cleanup");
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 40) + 16));
}

void sub_10009A530(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  char v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  id v31;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
    v8 = BKLibraryBookImportLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 141558530;
      v27 = 1752392040;
      v28 = 2112;
      v29 = v7;
      v30 = 2112;
      v31 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "importBookFromURL: importCompletion start. assetID: %{mask.hash}@ error: %@", buf, 0x20u);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_10009A74C;
    v18[3] = &unk_1008E8560;
    v18[4] = *(_QWORD *)(a1 + 32);
    v19 = v7;
    v20 = v5;
    v22 = *(id *)(a1 + 48);
    v25 = *(_BYTE *)(a1 + 72);
    v21 = *(id *)(a1 + 40);
    v11 = *(id *)(a1 + 56);
    v12 = *(_QWORD *)(a1 + 64);
    v23 = v11;
    v24 = v12;
    v13 = v7;
    objc_msgSend(v10, "performBackgroundReadOnlyBlock:", v18);

  }
  else
  {
    v14 = BKLibraryBookImportLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_10069D304((uint64_t)v6, v15);

    v16 = objc_retainBlock(*(id *)(a1 + 48));
    v17 = v16;
    if (v16)
      (*((void (**)(id, _QWORD))v16 + 2))(v16, 0);

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

void sub_10009A74C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  unsigned __int8 v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  char v29;
  unsigned __int8 v30;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mainLibrary"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), v4));

  if (!v6)
  {
    v7 = BKLibraryBookImportLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10069D418();

  }
  v9 = objc_msgSend(v6, "isUbiquitousBook");
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[BKUbiquityMetadataHelper sharedInstance](BKUbiquityMetadataHelper, "sharedInstance"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "url"));
  v12 = objc_msgSend(v10, "setUbiquityMetadataForURL:withLibraryAsset:", v11, v6);

  if ((v12 & 1) == 0)
  {
    v13 = BKLibraryBookImportLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_10069D374((id *)(a1 + 48), v14);

  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_10009A940;
  v21[3] = &unk_1008E8538;
  v26 = *(id *)(a1 + 64);
  v22 = v6;
  v29 = *(_BYTE *)(a1 + 88);
  v30 = v9;
  v16 = *(id *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 32);
  v23 = v16;
  v24 = v17;
  v25 = *(id *)(a1 + 56);
  v18 = *(id *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v27 = v18;
  v28 = v19;
  v20 = v6;
  objc_msgSend(v15, "assetForLibraryAsset:completion:", v20, v21);

}

void sub_10009A940(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  _BOOL8 v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  BOOL v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  void *v32;

  v3 = a2;
  v4 = objc_retainBlock(*(id *)(a1 + 64));
  v5 = v4;
  if (v4)
    (*((void (**)(id, _QWORD))v4 + 2))(v4, *(_QWORD *)(a1 + 32));

  if (*(_BYTE *)(a1 + 88))
    v6 = 0;
  else
    v6 = objc_msgSend(v3, "state") == 1;
  if (*(_BYTE *)(a1 + 89))
  {
    v7 = BKLibraryBookImportLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 40);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataSourceIdentifier"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "url"));
      *(_DWORD *)buf = 141559042;
      v24 = 1752392040;
      v25 = 2112;
      v26 = v9;
      v27 = 2114;
      v28 = v10;
      v29 = 2160;
      v30 = 1752392040;
      v31 = 2112;
      v32 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "importBookFromURL: end. assetID: %{mask.hash}@ dataSource: %{public}@ finalURL: %{mask.hash}@", buf, 0x34u);

    }
    objc_msgSend(*(id *)(a1 + 48), "_handleImportedAndPotentiallyMigratedAsset:canShow:transaction:", v3, v6, *(_QWORD *)(a1 + 56));
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
  }
  else
  {
    v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10009AB6C;
    v16[3] = &unk_1008E8510;
    v17 = v3;
    v13 = *(id *)(a1 + 40);
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(void **)(a1 + 56);
    v18 = v13;
    v19 = v14;
    v22 = v6;
    v20 = v15;
    v21 = *(id *)(a1 + 72);
    objc_msgSend(v12, "migrateBookToUbiquity:completion:", v17, v16);

  }
}

void sub_10009AB6C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  void *v20;

  v3 = a2;
  v4 = v3;
  if (!v3)
    v4 = *(void **)(a1 + 32);
  v5 = v4;
  v6 = BKLibraryBookImportLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dataSourceIdentifier"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "url"));
    v11 = 141559042;
    v12 = 1752392040;
    v13 = 2112;
    v14 = v8;
    v15 = 2114;
    v16 = v9;
    v17 = 2160;
    v18 = 1752392040;
    v19 = 2112;
    v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "importBookFromURL: end. assetID: %{mask.hash}@ dataSource: %{public}@ finalURL: %{mask.hash}@", (uint8_t *)&v11, 0x34u);

  }
  objc_msgSend(*(id *)(a1 + 48), "_handleImportedAndPotentiallyMigratedAsset:canShow:transaction:", v5, *(unsigned __int8 *)(a1 + 72), *(_QWORD *)(a1 + 56));
  (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();

}

void sub_10009ACC4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  _BOOL4 v15;

  v5 = a2;
  v6 = a3;
  v7 = BKLibraryBookImportLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v10 = 141558530;
    v11 = 1752392040;
    v12 = 2112;
    v13 = v5;
    v14 = 1024;
    v15 = v6 != 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "importBookFromURL: import start. url: %{mask.hash}@ update: %d", (uint8_t *)&v10, 0x1Cu);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  objc_msgSend(v9, "importURL:openInPlace:options:completion:", v5, 0, 0, *(_QWORD *)(a1 + 40));

}

void sub_10009ADD8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[5];
  id v14;
  id v15;
  id v16;
  uint8_t buf[4];
  uint64_t v18;
  __int16 v19;
  id v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  id v24;

  v5 = a2;
  v6 = a3;
  v7 = BKLibraryBookImportLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 141558786;
    v18 = 1752392040;
    v19 = 2112;
    v20 = v6;
    v21 = 2160;
    v22 = 1752392040;
    v23 = 2112;
    v24 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "importBookFromURL: checkAlreadyInLibrary start. assetID: %{mask.hash}@ url: %{mask.hash}@", buf, 0x2Au);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10009AF4C;
  v13[3] = &unk_1008E8600;
  v10 = *(void **)(a1 + 40);
  v13[4] = *(_QWORD *)(a1 + 32);
  v14 = v6;
  v15 = v5;
  v16 = v10;
  v11 = v5;
  v12 = v6;
  objc_msgSend(v9, "performBackgroundReadOnlyBlock:", v13);

}

void sub_10009AF4C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void (*v10)(void);
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mainLibrary"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 40), v4));

  if ((objc_msgSend(v6, "isLocal") & 1) == 0
    && (objc_msgSend(v6, "isUbiquitousBook") & 1) == 0
    && !objc_msgSend(v6, "isImporting"))
  {
    v10 = *(void (**)(void))(*(_QWORD *)(a1 + 56) + 16);
    goto LABEL_8;
  }
  if (!+[BKAssetUtilities isAggregateContentType:](BKAssetUtilities, "isAggregateContentType:", objc_msgSend(v6, "contentType")))
  {
    v10 = *(void (**)(void))(*(_QWORD *)(a1 + 56) + 16);
LABEL_8:
    v10();
    goto LABEL_9;
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "lastPathComponent"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10009B0D0;
  v11[3] = &unk_1008E85D8;
  v12 = v7;
  v15 = *(id *)(a1 + 56);
  v13 = *(id *)(a1 + 48);
  v14 = v6;
  v9 = v7;
  objc_msgSend(v8, "assetPartsForLibraryAsset:completion:", v14, v11);

LABEL_9:
}

void sub_10009B0D0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v9 != v6)
        objc_enumerationMutation(v3);
      if ((+[BKAssetUtilities filenameForAsset:matches:](BKAssetUtilities, "filenameForAsset:matches:", *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v7), *(_QWORD *)(a1 + 32), (_QWORD)v8) & 1) != 0)break;
      if (v5 == (id)++v7)
      {
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
        if (v5)
          goto LABEL_3;
        break;
      }
    }
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

void sub_10009B1F8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  char v15;
  char v16;
  __int16 v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  uint64_t v21;

  v2 = BKLibraryBookImportLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 141558274;
    v19 = 1752392040;
    v20 = 2112;
    v21 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "importBookFromURL: start. url: %{mask.hash}@,", buf, 0x16u);
  }

  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 40) + 16));
  objc_msgSend(*(id *)(a1 + 48), "start");
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10009B38C;
  v7[3] = &unk_1008E86A0;
  v14 = *(_QWORD *)(a1 + 88);
  v8 = *(id *)(a1 + 48);
  v11 = *(id *)(a1 + 64);
  v5 = *(id *)(a1 + 72);
  v15 = *(_BYTE *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 40);
  v12 = v5;
  v9 = v6;
  v10 = *(id *)(a1 + 56);
  v16 = *(_BYTE *)(a1 + 97);
  v17 = *(_WORD *)(a1 + 98);
  v13 = *(id *)(a1 + 80);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

}

void sub_10009B38C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  dispatch_queue_global_t global_queue;
  NSObject *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;
  id v26;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "ubiquitousDocumentsController"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (objc_msgSend(*(id *)(a1 + 32), "failed"))
  {
    v6 = BKLibraryBookImportLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_10069D480(v7);

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    v8 = objc_retainBlock(*(id *)(a1 + 64));
    v9 = v8;
    if (v8)
      (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);
    goto LABEL_12;
  }
  if (*(_BYTE *)(a1 + 88))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sceneManager"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "libraryCollectionPresenter"));
    objc_msgSend(v11, "showLibraryAllCollectionWithTransaction:animated:", *(_QWORD *)(a1 + 48), 1);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 89) || *(_BYTE *)(a1 + 90) || !*(_BYTE *)(a1 + 91))
      goto LABEL_9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sceneManager"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "libraryCollectionPresenter"));
    objc_msgSend(v11, "showLibraryWithTransaction:", *(_QWORD *)(a1 + 48));
  }

LABEL_9:
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resultURL"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "mainLibrary"));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_10009B620;
  v22[3] = &unk_1008E8650;
  v24 = *(id *)(a1 + 72);
  v9 = v12;
  v23 = v9;
  v25 = *(id *)(a1 + 56);
  v26 = *(id *)(a1 + 64);
  v14 = objc_msgSend(v13, "examineURL:completion:", v9, v22);

  if ((v14 & 1) == 0)
  {
    global_queue = dispatch_get_global_queue(25, 0);
    v16 = objc_claimAutoreleasedReturnValue(global_queue);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_10009B6E8;
    v17[3] = &unk_1008E8678;
    v18 = v9;
    v19 = *(id *)(a1 + 72);
    v20 = *(id *)(a1 + 56);
    v21 = *(id *)(a1 + 64);
    dispatch_async(v16, v17);

  }
LABEL_12:

}

void sub_10009B620(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  void *v13;

  v5 = a3;
  if (a2)
  {
    v8 = a1 + 32;
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(v8 + 8);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "assetID"));
    (*(void (**)(uint64_t, uint64_t, void *))(v7 + 16))(v7, v6, v9);

  }
  else
  {
    v10 = BKLibraryBookImportLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_10069D4C0();

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    v12 = objc_retainBlock(*(id *)(a1 + 56));
    v13 = v12;
    if (v12)
      (*((void (**)(id, _QWORD))v12 + 2))(v12, 0);

  }
}

void sub_10009B6E8(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "path"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BLLibraryUtility identifierFromBookPath:error:](BLLibraryUtility, "identifierFromBookPath:error:", v2, 0));

  if (v3)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    v4 = BKLibraryBookImportLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10069D540();

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    v6 = objc_retainBlock(*(id *)(a1 + 56));
    v7 = v6;
    if (v6)
      (*((void (**)(id, _QWORD))v6 + 2))(v6, 0);

  }
}

void sub_10009B88C(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  id v4;
  id v5;
  char v6;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10009B920;
  v3[3] = &unk_1008E86F0;
  v2 = *(void **)(a1 + 40);
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = v2;
  v6 = *(_BYTE *)(a1 + 56);
  v5 = *(id *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);

}

void sub_10009B920(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  NSMutableDictionary *v6;
  void *v7;
  void *v8;
  NSMutableDictionary *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  _QWORD v19[5];
  id v20;
  id v21;
  NSMutableDictionary *v22;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainLibrary"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetID:", v3));

  if (!*(_BYTE *)(a1 + 56) || !v4)
    goto LABEL_8;
  if (+[BKSceneUtilities hasMultiWindowEnabled](BKSceneUtilities, "hasMultiWindowEnabled")
    && (objc_msgSend(v4, "isAudiobook") & 1) == 0)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
    v13 = objc_msgSend(v11, "newBookSceneControllerProviderWithRequestAssetID:", v12);

    v14 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate currentSceneController](BKAppDelegate, "currentSceneController"));
    v5 = objc_msgSend(v14, "newShowAssetTransactionWithTargetSceneDescriptor:", v13);

    if (v5)
      goto LABEL_6;
LABEL_8:
    v10 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v10, "updateLibraryAssetWithID:withLastOpenDate:completion:", v15, v16, 0);

    goto LABEL_9;
  }
  v5 = *(id *)(a1 + 48);
  if (!v5)
    goto LABEL_8;
LABEL_6:
  v6 = objc_opt_new(NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v5, BCTransactionOptionsTransactionKey);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "assetLogID"));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v7, AEAssetLogID);

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_10009BB90;
  v19[3] = &unk_1008E7B70;
  v8 = *(void **)(a1 + 40);
  v19[4] = *(_QWORD *)(a1 + 32);
  v20 = v5;
  v21 = v8;
  v22 = v6;
  v9 = v6;
  v10 = v5;
  objc_msgSend(v10, "commit:", v19);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10009BC10;
  v17[3] = &unk_1008E72C0;
  v18 = *(id *)(a1 + 40);
  objc_msgSend(v10, "whenCancelled:", v17);

LABEL_9:
}

void sub_10009BB90(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bookPresenter"));
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "assetID"));
  objc_msgSend(v2, "showAssetWithTransaction:assetID:location:options:completion:", v3, v4, 0, *(_QWORD *)(a1 + 56), 0);

}

void sub_10009BC10(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v4, "updateLibraryAssetWithID:withLastOpenDate:completion:", v2, v3, 0);

}

void sub_10009C138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009C160(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_processChangedBooksWithCompletion:", v3);

}

void sub_10009C21C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v2 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](NSSet, "setWithObjects:", CFSTR("title"), CFSTR("state"), CFSTR("contentType"), CFSTR("lastOpenDate"), CFSTR("creationDate"), CFSTR("author"), CFSTR("assetID"), CFSTR("genre"), CFSTR("seriesID"), CFSTR("seriesSortKey"), CFSTR("localOnlySeriesItemsParent"), CFSTR("purchasedAndLocalParent"), CFSTR("dataSourceIdentifier"), CFSTR("readingProgress"), 0));
  v3 = (void *)qword_1009F4E08;
  qword_1009F4E08 = v2;

  v4 = objc_alloc_init(*(Class *)(a1 + 32));
  v5 = (void *)qword_1009F4E10;
  qword_1009F4E10 = (uint64_t)v4;

}

void sub_10009CA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009CA38(id a1)
{
  dispatch_queue_attr_t v1;
  NSObject *v2;
  dispatch_queue_attr_t v3;
  NSObject *v4;
  dispatch_queue_t v5;
  void *v6;
  dispatch_queue_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  intptr_t v12;
  uint64_t v13;
  NSObject *v14;
  dispatch_semaphore_t v15;
  void *v16;
  int v17;
  intptr_t v18;

  v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = dispatch_queue_attr_make_with_qos_class(v2, QOS_CLASS_UTILITY, 0);
  v4 = objc_claimAutoreleasedReturnValue(v3);

  v5 = dispatch_queue_create("BKLibraryIndexer.attributeSet.coverRequest", v4);
  v6 = (void *)qword_1009F4E20;
  qword_1009F4E20 = (uint64_t)v5;

  v7 = dispatch_queue_create("BKLibraryIndexer.attributeSet.callback", v4);
  v8 = (void *)qword_1009F4E28;
  qword_1009F4E28 = (uint64_t)v7;

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v10 = (uint64_t)objc_msgSend(v9, "integerForKey:", CFSTR("BKMaxConcurrentCoverRequestsForIndexing"));

  if (v10 >= 1)
    v12 = v10;
  else
    v12 = 4;
  v13 = BCSpotlightIndexLog(v11);
  v14 = objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v17 = 134217984;
    v18 = v12;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "maxConcurrentCoverRequests: %ld", (uint8_t *)&v17, 0xCu);
  }

  v15 = dispatch_semaphore_create(v12);
  v16 = (void *)qword_1009F4E30;
  qword_1009F4E30 = (uint64_t)v15;

}

void sub_10009CB98(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  id v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v3 = a2;
  v4 = BCSpotlightIndexLog(objc_msgSend(*(id *)(a1 + 32), "setContentDescription:", v3));
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    sub_10069D638();

  CGSizeScaleToScreen(90.0, 60.0);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", *(_QWORD *)(a1 + 40), 0));
  objc_msgSend(v6, "setPersistanceOptions:", 3);
  objc_msgSend(v6, "setPriority:", 2);
  v7 = qword_1009F4E20;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009CD04;
  block[3] = &unk_1008E87D8;
  v8 = *(_QWORD *)(a1 + 64);
  v11 = v6;
  v16 = v8;
  v12 = *(id *)(a1 + 32);
  v13 = *(id *)(a1 + 40);
  v14 = *(id *)(a1 + 48);
  v15 = *(id *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 72);
  v9 = v6;
  dispatch_async(v7, block);

}

void sub_10009CD04(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  double v4;
  dispatch_time_t v5;
  NSObject *v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  dispatch_semaphore_wait((dispatch_semaphore_t)qword_1009F4E30, 0xFFFFFFFFFFFFFFFFLL);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10009CE94;
  v12[3] = &unk_1008E8788;
  v17 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 32);
  v13 = *(id *)(a1 + 40);
  v14 = *(id *)(a1 + 48);
  v15 = *(id *)(a1 + 56);
  v16 = *(id *)(a1 + 64);
  objc_msgSend(v2, "fetchDescribedImageFileURLForImage:completion:", v3, v12);

  v4 = *(double *)(a1 + 80);
  if (v4 > 0.0)
  {
    v5 = dispatch_time(0, (uint64_t)(v4 * 1000000000.0));
    v6 = qword_1009F4E28;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10009D058;
    block[3] = &unk_1008E87B0;
    v11 = *(_QWORD *)(a1 + 72);
    v8 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 64);
    v9 = *(id *)(a1 + 40);
    dispatch_after(v5, v6, block);

  }
}

void sub_10009CE94(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v3 = a2;
  v4 = qword_1009F4E28;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10009CF74;
  v6[3] = &unk_1008E8760;
  v12 = *(_QWORD *)(a1 + 64);
  v7 = *(id *)(a1 + 32);
  v8 = v3;
  v9 = *(id *)(a1 + 40);
  v10 = *(id *)(a1 + 48);
  v11 = *(id *)(a1 + 56);
  v5 = v3;
  dispatch_async(v4, v6);

}

void sub_10009CF74(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  void *v8;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
  {
    v2 = BCSpotlightIndexLog(a1);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
      sub_10069D724((_QWORD *)a1, v3, v4);

  }
  else
  {
    v5 = BCSpotlightIndexLog(objc_msgSend(*(id *)(a1 + 32), "setThumbnailURL:", *(_QWORD *)(a1 + 40)));
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      sub_10069D69C(a1, (uint64_t *)(a1 + 40), v6);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
    v7 = objc_retainBlock(*(id *)(a1 + 64));
    v8 = v7;
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, *(_QWORD *)(a1 + 32));

    dispatch_semaphore_signal((dispatch_semaphore_t)qword_1009F4E30);
  }
}

intptr_t sub_10009D058(intptr_t result)
{
  intptr_t v1;
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 56) + 8) + 24))
  {
    v1 = result;
    v2 = BCSpotlightIndexLog(result);
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_10069D7A8();

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 56) + 8) + 24) = 1;
    v4 = objc_retainBlock(*(id *)(v1 + 48));
    v5 = v4;
    if (v4)
      (*((void (**)(id, _QWORD))v4 + 2))(v4, *(_QWORD *)(v1 + 40));

    return dispatch_semaphore_signal((dispatch_semaphore_t)qword_1009F4E30);
  }
  return result;
}

void sub_10009D1B8(uint64_t a1)
{
  _QWORD *v2;
  id v3;

  v2 = *(_QWORD **)(a1 + 32);
  if (v2[1])
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(+[BCBackgroundTaskAssertion sharedAssertion](BCBackgroundTaskAssertion, "sharedAssertion"));
    objc_msgSend(v3, "claimAssertionForIdentifier:description:", *(_QWORD *)(a1 + 40), CFSTR("BKLibraryIndexer immediate"));

  }
  else
  {
    _objc_msgSend(v2, "setAssetIDNeedingProcessAssertion:", *(_QWORD *)(a1 + 40));
  }
}

void sub_10009D670(id a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bundleIdentifier"));
  v5 = (id)objc_claimAutoreleasedReturnValue(+[LSBundleRecord bundleRecordWithApplicationIdentifier:error:](LSBundleRecord, "bundleRecordWithApplicationIdentifier:error:", v2, 0));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dataContainerURL"));
  v4 = (void *)qword_1009F4E48;
  qword_1009F4E48 = v3;

}

void sub_10009D778(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;

  v2 = objc_alloc((Class)NSUserDefaults);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_iBooksContainerURL"));
  v3 = objc_msgSend(v2, "_initWithSuiteName:container:", CFSTR("com.apple.iBooks.indexing"), v5);
  v4 = (void *)qword_1009F4E58;
  qword_1009F4E58 = (uint64_t)v3;

}

void sub_10009DDD8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD v12[5];
  _QWORD v13[5];
  id v14;
  _QWORD block[5];
  id v16;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(NSObject **)(v4 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009DEE0;
  block[3] = &unk_1008E7338;
  block[4] = v4;
  v16 = v5;
  dispatch_sync(v6, block);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(NSObject **)(v7 + 24);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10009DF8C;
  v13[3] = &unk_1008E7338;
  v13[4] = v7;
  v14 = v3;
  v9 = v3;
  dispatch_async(v8, v13);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(NSObject **)(v10 + 24);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10009E438;
  v12[3] = &unk_1008E72C0;
  v12[4] = v10;
  dispatch_async(v11, v12);

}

void sub_10009DEE0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 8), *(id *)(a1 + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setIndexDelegate:");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIDNeedingProcessAssertion"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BCBackgroundTaskAssertion sharedAssertion](BCBackgroundTaskAssertion, "sharedAssertion"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIDNeedingProcessAssertion"));
    objc_msgSend(v3, "claimAssertionForIdentifier:description:", v4, CFSTR("BKLibraryIndexer delayed"));

    _objc_msgSend(*(id *)(a1 + 32), "setAssetIDNeedingProcessAssertion:", 0);
  }
}

void sub_10009DF8C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  _QWORD *v30;
  _QWORD v31[5];
  id v32;
  _QWORD *v33;
  _QWORD block[5];
  id v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  _QWORD v43[5];

  objc_msgSend(*(id *)(a1 + 32), "wq_beginIndexTask");
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472;
  v43[2] = sub_10009E2E8;
  v43[3] = &unk_1008E72C0;
  v43[4] = *(_QWORD *)(a1 + 32);
  v2 = objc_retainBlock(v43);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_clientStateDictionaryFromData:", *(_QWORD *)(a1 + 40)));
  v4 = objc_opt_class(NSString);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("hash")));
  v6 = BUDynamicCast(v4, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (v3
    && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_clientStateHash")),
        v9 = objc_msgSend(v7, "isEqualToString:", v8),
        v8,
        v9))
  {
    v10 = objc_opt_class(NSNumber);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("date")));
    v12 = BUDynamicCast(v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    objc_msgSend(v13, "doubleValue");
    v15 = v14;

    v16 = objc_opt_class(NSArray);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("assetIDs")));
    v18 = BUDynamicCast(v16, v17);
    v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

    v37 = 0;
    v38 = &v37;
    v39 = 0x3032000000;
    v40 = sub_10004E340;
    v41 = sub_10004E220;
    v42 = 0;
    v20 = *(_QWORD *)(a1 + 32);
    v21 = *(NSObject **)(v20 + 40);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10009E2F0;
    block[3] = &unk_1008E8848;
    v36 = &v37;
    block[4] = v20;
    v22 = v19;
    v35 = v22;
    dispatch_sync(v21, block);
    v24 = BCSpotlightIndexLog(v23);
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      sub_10069D9F0();

    if (v15 > 0.0 || objc_msgSend((id)v38[5], "count"))
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSince1970:](NSDate, "dateWithTimeIntervalSince1970:", v15));
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 16), v26);
      objc_msgSend(*(id *)(a1 + 32), "_indexStartingAtLastDateAdded:retryAssetIDs:completion:", v26, v38[5], v2);
    }
    else
    {
      v30 = objc_retainBlock(v2);
      v26 = v30;
      if (v30)
        ((void (*)(_QWORD *))v30[2])(v30);
    }

    _Block_object_dispose(&v37, 8);
  }
  else
  {
    v27 = *(_QWORD *)(a1 + 32);
    v28 = *(void **)(a1 + 40);
    v29 = *(NSObject **)(v27 + 40);
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_10009E37C;
    v31[3] = &unk_1008E8898;
    v31[4] = v27;
    v32 = v28;
    v33 = v2;
    dispatch_sync(v29, v31);

  }
}

void sub_10009E2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10009E2E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_endIndexTask");
}

id sub_10009E2F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_retryAssetIDs"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  result = objc_msgSend(*(id *)(a1 + 40), "count");
  if (result)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setByAddingObjectsFromArray:", *(_QWORD *)(a1 + 40)));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    return objc_msgSend(*(id *)(a1 + 32), "iq_setRetryAssetIDs:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  }
  return result;
}

void sub_10009E37C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "iq_setRetryAssetIDs:", 0);
  v2 = *(_QWORD **)(a1 + 32);
  if (*(_QWORD *)(a1 + 40))
  {
    v3 = (void *)v2[1];
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10009E424;
    v4[3] = &unk_1008E8870;
    v4[4] = v2;
    v5 = *(id *)(a1 + 48);
    objc_msgSend(v3, "deleteAllSearchableItemsWithCompletionHandler:", v4);

  }
  else
  {
    objc_msgSend(v2, "_indexStartingAtLastDateAdded:retryAssetIDs:completion:", 0, 0, *(_QWORD *)(a1 + 48));
  }
}

id sub_10009E424(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_indexStartingAtLastDateAdded:retryAssetIDs:completion:", 0, 0, *(_QWORD *)(a1 + 40));
}

void sub_10009E438(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coalescingProcessChangedBooks"));
  objc_msgSend(v1, "signalWithCompletion:", &stru_1008E88B8);

}

void sub_10009E55C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[2];
  _QWORD v24[2];

  v3 = a2;
  v4 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BKLibraryAsset"));
  v24[0] = CFSTR("assetID");
  v24[1] = CFSTR("creationDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v24, 2));
  objc_msgSend(v4, "setPropertiesToFetch:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "predicateForIndexing"));
  objc_msgSend(v4, "setPredicate:", v7);

  objc_msgSend(v4, "setResultType:", 2);
  objc_msgSend(v4, "setReturnsDistinctResults:", 1);
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "predicateForIndexing"));
    v23[0] = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K > %@"), CFSTR("creationDate"), *(_QWORD *)(a1 + 32)));
    v23[1] = v10;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v23, 2));

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v11));
    objc_msgSend(v4, "setPredicate:", v12);

    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("creationDate"), 1));
    v22 = v13;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v22, 1));
    objc_msgSend(v4, "setSortDescriptors:", v14);

  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v4, 0));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "valueForKey:", CFSTR("assetID")));
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v16));

  v18 = objc_msgSend(*(id *)(a1 + 40), "count");
  if (v18)
  {
    v19 = BCSpotlightIndexLog(v18);
    v20 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      sub_10069DA5C();

    v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "setByAddingObjectsFromSet:", *(_QWORD *)(a1 + 40)));
    v17 = (void *)v21;
  }
  objc_msgSend(*(id *)(a1 + 48), "mocq_reindexBooksWithAssetIDs:batch:moc:completion:", v17, 1, v3, *(_QWORD *)(a1 + 56));

}

void sub_10009EEDC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BCBackgroundTaskAssertion sharedAssertion](BCBackgroundTaskAssertion, "sharedAssertion"));
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v7);
        v9 = objc_opt_class(NSString);
        v10 = BUDynamicCast(v9, v8);
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        if (objc_msgSend(v11, "length", (_QWORD)v12))
          objc_msgSend(v2, "releaseAssertionForIdentifier:", v11);

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

}

void sub_10009F424(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v16 = a2;
  if (v16)
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    v15 = a1;
    v3 = *(id *)(a1 + 32);
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v18;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(_QWORD *)v18 != v6)
            objc_enumerationMutation(v3);
          v8 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "adamID", v15));
          if (v9)
          {
            v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", v9));
            v11 = v10;
            if (v10)
            {
              v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "url"));
              v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "absoluteString"));
              v14 = objc_msgSend(objc_alloc((Class)CSCustomAttributeKey), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_iBooks_storeURL"), 0, 0, 0, 0);
              objc_msgSend(v8, "setValue:forCustomKey:", v13, v14);

            }
          }

        }
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v5);
    }

    a1 = v15;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));

}

void sub_10009FDA8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;

  v3 = a2;
  v4 = BCSpotlightIndexLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    sub_10069DD58();

  objc_msgSend(*(id *)(a1 + 40), "finishWithResult:", v3);
}

void sub_10009FE14(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  id (*v29)(uint64_t);
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  char v35;
  id v36;
  uint8_t buf[4];
  uint64_t v38;

  v2 = *(void **)(a1 + 32);
  v36 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "resultWithTimeout:error:", &v36, 11.0));
  v4 = v36;
  v5 = BCSpotlightIndexLog(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = v6;
  if (!v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10069DDBC();
    goto LABEL_18;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    sub_10069DE5C();

  if ((unint64_t)objc_msgSend(*(id *)(a1 + 48), "count") >= 0x19)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "lastObject"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "addedDate"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "addedDate"));
    v11 = objc_msgSend(v9, "isEqualToDate:", v10);

    v13 = BCSpotlightIndexLog(v12);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    v15 = v14;
    if ((v11 & 1) != 0)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        v16 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412290;
        v38 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Skipping update for  %@.", buf, 0xCu);
      }
    }
    else
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        sub_10069DE30();

      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "_requestStoreURLsForAttributeSets:", *(_QWORD *)(a1 + 48)));
      v18 = *(void **)(a1 + 64);
      v19 = *(NSObject **)(*(_QWORD *)(a1 + 56) + 40);
      v27 = _NSConcreteStackBlock;
      v28 = 3221225472;
      v29 = sub_1000A0108;
      v30 = &unk_1008E89C0;
      v20 = v18;
      v21 = *(_QWORD *)(a1 + 56);
      v31 = v20;
      v32 = v21;
      v33 = v17;
      v35 = *(_BYTE *)(a1 + 80);
      v34 = *(id *)(a1 + 72);
      v15 = v17;
      dispatch_sync(v19, &v27);
      objc_msgSend(*(id *)(a1 + 72), "removeAllObjects", v27, v28, v29, v30);
      objc_msgSend(*(id *)(a1 + 64), "removeAllObjects");
      objc_msgSend(*(id *)(a1 + 48), "removeAllObjects");

    }
  }
  objc_msgSend(*(id *)(a1 + 48), "addObject:", v3);
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "thumbnailURL"));

  if (!v22)
  {
    v25 = BCSpotlightIndexLog(v23);
    v7 = objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v26 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      v38 = v26;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "No thumbnail URL for %@. Going to retry next time.", buf, 0xCu);
    }
LABEL_18:

    v24 = (id *)(a1 + 64);
    goto LABEL_19;
  }
  v24 = (id *)(a1 + 72);
LABEL_19:
  objc_msgSend(*v24, "addObject:", *(_QWORD *)(a1 + 40));

}

id sub_1000A0108(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    objc_msgSend(*(id *)(a1 + 40), "iq_addRetryAssetIDs:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "iq_indexSearchableItems:shouldBatch:", *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 64));
  result = objc_msgSend(*(id *)(a1 + 56), "count");
  if (result)
    return objc_msgSend(*(id *)(a1 + 40), "iq_removeRetryAssetIDs:", *(_QWORD *)(a1 + 56));
  return result;
}

void sub_1000A0164(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  _QWORD block[4];
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  char v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_requestStoreURLsForAttributeSets:", *(_QWORD *)(a1 + 40)));
  v3 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A0264;
  block[3] = &unk_1008E8A10;
  v4 = *(id *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 32);
  v10 = v4;
  v11 = v5;
  v8 = v2;
  v12 = v8;
  v15 = *(_BYTE *)(a1 + 80);
  v13 = *(id *)(a1 + 56);
  v14 = *(id *)(a1 + 64);
  dispatch_sync(v3, block);
  v6 = objc_retainBlock(*(id *)(a1 + 72));
  v7 = v6;
  if (v6)
    (*((void (**)(id))v6 + 2))(v6);

}

void sub_1000A0264(uint64_t a1)
{
  id v2;
  uint64_t v3;
  NSObject *v4;
  id *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    objc_msgSend(*(id *)(a1 + 40), "iq_addRetryAssetIDs:", *(_QWORD *)(a1 + 32));
  v2 = objc_msgSend(*(id *)(a1 + 48), "count");
  if (v2)
  {
    v3 = BCSpotlightIndexLog(v2);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
      sub_10069DF5C();

    objc_msgSend(*(id *)(a1 + 40), "iq_indexSearchableItems:shouldBatch:", *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 72));
  }
  if (objc_msgSend(*(id *)(a1 + 56), "count"))
    objc_msgSend(*(id *)(a1 + 40), "iq_removeRetryAssetIDs:", *(_QWORD *)(a1 + 56));
  v5 = (id *)(a1 + 64);
  if (objc_msgSend(*(id *)(a1 + 64), "count"))
  {
    objc_msgSend(*(id *)(a1 + 40), "iq_removeRetryAssetIDs:", *(_QWORD *)(a1 + 64));
    v6 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "allObjects"));
    objc_msgSend(v6, "deleteSearchableItemsWithIdentifiers:completionHandler:", v7, 0);

    v9 = BCSpotlightIndexLog(v8);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      sub_10069DEC4(v5, v10);

  }
}

id sub_1000A0368(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "iq_removeRetryAssetIDs:", v3);

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "deleteSearchableItemsWithIdentifiers:completionHandler:", *(_QWORD *)(a1 + 40), 0);
}

void sub_1000A0738(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cpq_pendingChangedAssetIDs"));
  if (objc_msgSend(v2, "count"))
  {

  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cpq_pendingDeletedAssetIDs"));
    v4 = objc_msgSend(v3, "count");

    if (!v4)
      return;
  }
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coalescingProcessChangedBooks"));
  objc_msgSend(v5, "signalWithCompletion:", &stru_1008E8A58);

}

void sub_1000A085C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;

  v2 = BCSpotlightIndexLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_10069E238(a1, v3);

  v5 = BCSpotlightIndexLog(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    sub_10069E1A0(a1, v6);

  v8 = BCSpotlightIndexLog(v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    sub_10069E108(a1, v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addedObjects"));
  if (objc_msgSend(v10, "count"))
  {

  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updatedObjects"));
    v12 = objc_msgSend(v11, "count");

    if (!v12)
      goto LABEL_15;
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addedObjects"));
  v15 = objc_msgSend(v14, "count");

  if (v15)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addedObjects"));
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "setByAddingObjectsFromArray:", v16));

    v13 = (void *)v17;
  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updatedObjects"));
  v19 = objc_msgSend(v18, "count");

  if (v19)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updatedObjects"));
    v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "setByAddingObjectsFromArray:", v20));

    v13 = (void *)v21;
  }
  objc_msgSend(*(id *)(a1 + 40), "cpq_addPendingChangedAssetIDs:", v13);

LABEL_15:
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deletedObjects"));
  v23 = objc_msgSend(v22, "count");

  if (v23)
  {
    v24 = *(void **)(a1 + 40);
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deletedObjects"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v25));
    objc_msgSend(v24, "cpq_addPendingDeletedAssetIDs:", v26);

  }
}

void sub_1000A0AEC(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  _QWORD v19[5];
  _QWORD *v20;
  uint64_t *v21;
  _QWORD v22[6];
  _QWORD v23[7];
  _QWORD block[6];
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  _QWORD v29[5];
  id v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;

  v39 = 0;
  v40 = &v39;
  v41 = 0x3032000000;
  v42 = sub_10004E340;
  v43 = sub_10004E220;
  v44 = 0;
  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = sub_10004E340;
  v37 = sub_10004E220;
  v38 = 0;
  objc_msgSend(*(id *)(a1 + 32), "wq_beginIndexTask");
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1000A0E1C;
  v29[3] = &unk_1008E8AA8;
  v2 = *(void **)(a1 + 40);
  v29[4] = *(_QWORD *)(a1 + 32);
  v31 = &v39;
  v32 = &v33;
  v30 = v2;
  v3 = objc_retainBlock(v29);
  v25 = 0;
  v26 = &v25;
  v27 = 0x2020000000;
  v28 = 0;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(NSObject **)(v4 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A0EF0;
  block[3] = &unk_1008E75B8;
  block[4] = v4;
  block[5] = &v25;
  dispatch_sync(v5, block);
  if (!*((_BYTE *)v26 + 24))
  {
    v14 = BCSpotlightIndexLog(v6);
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      sub_10069E2D0();

    v16 = objc_retainBlock(v3);
    v17 = v16;
    if (v16)
      ((void (*)(_QWORD *))v16[2])(v16);
    goto LABEL_14;
  }
  v7 = BCSpotlightIndexLog(v6);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    sub_10069E2FC();

  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(NSObject **)(v9 + 32);
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_1000A0F0C;
  v23[3] = &unk_1008E8AD0;
  v23[4] = v9;
  v23[5] = &v39;
  v23[6] = &v33;
  dispatch_sync(v10, v23);
  if (objc_msgSend((id)v40[5], "count"))
  {
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(NSObject **)(v11 + 40);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_1000A0F64;
    v22[3] = &unk_1008E76D0;
    v22[4] = v11;
    v22[5] = &v39;
    dispatch_sync(v12, v22);
  }
  if (!objc_msgSend((id)v34[5], "count"))
  {
    v18 = objc_retainBlock(v3);
    v17 = v18;
    if (v18)
      ((void (*)(_QWORD *))v18[2])(v18);
LABEL_14:

    goto LABEL_15;
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1000A0FB4;
  v19[3] = &unk_1008E8AF8;
  v19[4] = *(_QWORD *)(a1 + 32);
  v21 = &v33;
  v20 = v3;
  objc_msgSend(v13, "performBackgroundReadOnlyBlock:", v19);

LABEL_15:
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v33, 8);
  _Block_object_dispose(&v39, 8);

}

void sub_1000A0DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 160), 8);
  _Block_object_dispose((const void *)(v35 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1000A0E1C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;
  _QWORD block[5];
  __int128 v7;

  objc_msgSend(*(id *)(a1 + 32), "_endIndexTask");
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(NSObject **)(v2 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A0EB0;
  block[3] = &unk_1008E8A80;
  block[4] = v2;
  v7 = *(_OWORD *)(a1 + 48);
  dispatch_sync(v3, block);
  v4 = objc_retainBlock(*(id *)(a1 + 40));
  v5 = v4;
  if (v4)
    (*((void (**)(id))v4 + 2))(v4);

}

id sub_1000A0EB0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "cpq_removePendingDeletedAssetIDs:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  return _objc_msgSend(*(id *)(a1 + 32), "cpq_removePendingChangedAssetIDs:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
}

uint64_t sub_1000A0EF0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 8) != 0;
  return result;
}

void sub_1000A0F0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cpq_pendingDeletedAssetIDs"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cpq_pendingChangedAssetIDs"));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_1000A0F64(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "allObjects"));
  objc_msgSend(v1, "deleteSearchableItemsWithIdentifiers:completionHandler:", v2, 0);

}

id sub_1000A0FB4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "mocq_reindexBooksWithAssetIDs:batch:moc:completion:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), 0, a2, *(_QWORD *)(a1 + 40));
}

void sub_1000A10A0(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  _QWORD *v6;
  _QWORD v7[5];
  id v8;
  _QWORD v9[5];
  id v10;

  objc_msgSend(*(id *)(a1 + 32), "wq_beginIndexTask");
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000A1168;
  v9[3] = &unk_1008E7680;
  v2 = *(void **)(a1 + 40);
  v9[4] = *(_QWORD *)(a1 + 32);
  v10 = v2;
  v3 = objc_retainBlock(v9);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(NSObject **)(v4 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000A11B0;
  v7[3] = &unk_1008E7680;
  v7[4] = v4;
  v8 = v3;
  v6 = v3;
  dispatch_sync(v5, v7);

}

void sub_1000A1168(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "_endIndexTask");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1000A11B0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "iq_setRetryAssetIDs:", 0);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = *(void **)(v2 + 8);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000A1234;
  v5[3] = &unk_1008E8870;
  v5[4] = v2;
  v6 = v3;
  objc_msgSend(v4, "deleteAllSearchableItemsWithCompletionHandler:", v5);

}

id sub_1000A1234(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_indexStartingAtLastDateAdded:retryAssetIDs:completion:", 0, 0, *(_QWORD *)(a1 + 40));
}

void sub_1000A138C(id *a1)
{
  _QWORD *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  _QWORD v11[5];
  id v12;

  objc_msgSend(a1[4], "wq_beginIndexTask");
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000A148C;
  v11[3] = &unk_1008E7680;
  v11[4] = a1[4];
  v12 = a1[6];
  v2 = objc_retainBlock(v11);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000A14D4;
  v7[3] = &unk_1008E8B20;
  v4 = a1[5];
  v5 = a1[4];
  v8 = v4;
  v9 = v5;
  v10 = v2;
  v6 = v2;
  objc_msgSend(v3, "performBackgroundReadOnlyBlock:", v7);

}

void sub_1000A148C(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "_endIndexTask");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1000A14D4(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD block[5];
  id v12;

  v10 = a2;
  v3 = objc_msgSend(a1[4], "mutableCopy");
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "_extractDeletedIdentifiersFromArray:moc:", v3, v10));
  if (objc_msgSend(v4, "count"))
  {
    v5 = a1[5];
    v6 = *((_QWORD *)v5 + 5);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000A1600;
    block[3] = &unk_1008E7338;
    block[4] = v5;
    v12 = v4;
    dispatch_sync(v6, block);

  }
  if (objc_msgSend(v3, "count"))
  {
    v7 = a1[5];
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v3));
    objc_msgSend(v7, "mocq_reindexBooksWithAssetIDs:batch:moc:completion:", v8, 0, v10, a1[6]);
  }
  else
  {
    v9 = objc_retainBlock(a1[6]);
    v8 = v9;
    if (v9)
      (*((void (**)(id))v9 + 2))(v9);
  }

}

id sub_1000A1600(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "deleteSearchableItemsWithIdentifiers:completionHandler:", *(_QWORD *)(a1 + 40), 0);
}

void sub_1000A16B8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void sub_1000A16E4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_1000A1700(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x20u);
}

void sub_1000A1948(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id WeakRetained;
  void *v6;
  id v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "userInfo"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", BLDownloadQueuePropertyStoreItemIdentifier));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringValue"));

  if (v7)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "updateStateToPurchaseFailedForIdentifier:", v7);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "storeIDsPurchasing"));
    objc_msgSend(v6, "removeObject:", v7);

  }
}

void sub_1000A1C20(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 16), *(id *)(a1 + 40));
}

id sub_1000A1D98(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "intersectSet:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16));
}

void sub_1000A1EC4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "unionSet:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 56));
  objc_msgSend(*(id *)(a1 + 32), "unionSet:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "intersectSet:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16));
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 40) + 56), *(id *)(a1 + 48));
}

void sub_1000A2404(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *j;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];

  v3 = a2;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v34;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v34 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)i);
        v9 = *(void **)(a1 + 32);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetID"));
        LODWORD(v9) = objc_msgSend(v9, "containsObject:", v10);

        if ((_DWORD)v9)
        {
          v11 = *(void **)(a1 + 40);
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetID"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "_stateForItemIdentifier:libraryAsset:", v12, v8));

          v14 = *(void **)(*(_QWORD *)(a1 + 40) + 64);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetID"));
          objc_msgSend(v14, "updateItemWithIdentifier:state:", v15, v13);

          v16 = *(void **)(a1 + 48);
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetID"));
          objc_msgSend(v16, "removeObject:", v17);

        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
    }
    while (v5);
  }
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v18 = *(id *)(a1 + 48);
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v30;
    do
    {
      for (j = 0; j != v20; j = (char *)j + 1)
      {
        if (*(_QWORD *)v30 != v21)
          objc_enumerationMutation(v18);
        v23 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)j);
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_stateForItemIdentifier:libraryAsset:", v23, 0, (_QWORD)v29));
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 64), "updateItemWithIdentifier:state:", v23, v24);

      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
    }
    while (v20);
  }

  v27 = BKLibraryItemStateProviderLog(v25, v26);
  v28 = objc_claimAutoreleasedReturnValue(v27);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
    sub_10069E418(a1, v28);

}

id sub_1000A2E00(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setUpdateAvailable:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 56), "containsObject:", *(_QWORD *)(a1 + 48)));
}

void sub_1000A2E30(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  if (v4)
    objc_msgSend(*(id *)(a1 + 48), "setLibrary:", objc_msgSend(v4, "unsignedIntegerValue"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = v2;
  if (v2)
    objc_msgSend(*(id *)(a1 + 48), "setDownload:", objc_msgSend(v2, "unsignedIntegerValue"));

}

void sub_1000A2F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A2FA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "allObjects"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000A30F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A3108(_QWORD *a1, void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v3 = (_QWORD *)a1[4];
  v4 = a1[5];
  v5 = (void *)v3[9];
  v6 = a2;
  v7 = objc_opt_class(NSString);
  v8 = BUDynamicCast(v7, a1[5]);
  v13 = (id)objc_claimAutoreleasedReturnValue(v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryAssetWithAssetID:inManagedObjectContext:", v13, v6));

  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_stateForItemIdentifier:libraryAsset:", v4, v9));
  v11 = *(_QWORD *)(a1[6] + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

}

void sub_1000A3234(uint64_t a1, uint64_t a2)
{
  id *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(id **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3[9], "libraryAssetWithAssetID:inManagedObjectContext:", v4, a2));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_stateForItemIdentifier:libraryAsset:", v4, v5));

  objc_msgSend(v7, "setLibrary:", 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateCenter"));
  objc_msgSend(v6, "updateItemWithIdentifier:state:", *(_QWORD *)(a1 + 40), v7);

}

void sub_1000A3344(uint64_t a1, uint64_t a2)
{
  id *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(id **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3[9], "libraryAssetWithAssetID:inManagedObjectContext:", v4, a2));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_stateForItemIdentifier:libraryAsset:", v4, v5));

  objc_msgSend(v7, "setLibrary:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateCenter"));
  objc_msgSend(v6, "updateItemWithIdentifier:state:", *(_QWORD *)(a1 + 40), v7);

}

void sub_1000A3454(uint64_t a1, uint64_t a2)
{
  id *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(id **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3[9], "libraryAssetWithAssetID:inManagedObjectContext:", v4, a2));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_stateForItemIdentifier:libraryAsset:", v4, v5));

  objc_msgSend(v7, "setLibrary:", 4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stateCenter"));
  objc_msgSend(v6, "updateItemWithIdentifier:state:", *(_QWORD *)(a1 + 40), v7);

}

void sub_1000A3C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A3CA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "count") == (id)1)
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "anyObject"));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
}

void sub_1000A3D78(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  id *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v3 = a2;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v10 = *(id **)(a1 + 40);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10[9], "libraryAssetWithAssetID:inManagedObjectContext:", v9, v3, (_QWORD)v13));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "_stateForItemIdentifier:libraryAsset:", v9, v11));

        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 64), "updateItemWithIdentifier:state:", v9, v12);
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v6);
  }

}

void sub_1000A4014(_QWORD *a1)
{
  void *v2;
  NSMutableDictionary *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1[4] + 24);
  if (!v2)
  {
    v3 = objc_opt_new(NSMutableDictionary);
    v4 = a1[4];
    v5 = *(void **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = v3;

    v2 = *(void **)(a1[4] + 24);
  }
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1[6]));
  objc_msgSend(v2, "setObject:forKey:", v6, a1[5]);

}

void sub_1000A41DC(_QWORD *a1)
{
  void *v2;
  NSMutableDictionary *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1[4] + 32);
  if (!v2)
  {
    v3 = objc_opt_new(NSMutableDictionary);
    v4 = a1[4];
    v5 = *(void **)(v4 + 32);
    *(_QWORD *)(v4 + 32) = v3;

    v2 = *(void **)(a1[4] + 32);
  }
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1[6]));
  objc_msgSend(v2, "setObject:forKey:", v6, a1[5]);

}

void sub_1000A4360(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  if (!objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "count"))
  {
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(v2 + 24);
    *(_QWORD *)(v2 + 24) = 0;

  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  if (!objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count"))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 32);
    *(_QWORD *)(v4 + 32) = 0;

  }
}

void sub_1000A44DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A44F4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "allKeys"));
  objc_msgSend(v2, "addObjectsFromArray:", v3);

  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "allKeys"));
  objc_msgSend(v4, "addObjectsFromArray:", v5);

  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 24);
  *(_QWORD *)(v6 + 24) = 0;

  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(v8 + 32);
  *(_QWORD *)(v8 + 32) = 0;

}

void sub_1000A4F74(id a1, UIImageView *a2, unint64_t a3, BOOL *a4)
{
  -[UIImageView removeFromSuperview](a2, "removeFromSuperview", a3, a4);
}

uint64_t sub_1000A6140()
{
  uint64_t v0;

  v0 = CGRectMakeWithSize();
  return CGRectFitRectInRectAbsoluteNoRounding(v0);
}

void sub_1000A6EC4(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  __int128 v7;
  double v8;
  void *v9;
  double v10;
  void *v11;
  _OWORD v12[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(double *)(a1 + 40);
  v4 = *(double *)(a1 + 48);
  v5 = *(double *)(a1 + 56);
  v6 = *(double *)(a1 + 64);
  v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v12[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v12[1] = v7;
  v12[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "_moveCoverToFrame:extraTransform:", v12, v3, v4, v5, v6);
  if (*(_BYTE *)(a1 + 88))
  {
    v8 = *(double *)(a1 + 72);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurredShadowContainer"));
    +[BKBookBloomOpenAnimator setBlurRadius:forView:](BKBookBloomOpenAnimator, "setBlurRadius:forView:", v9, v8);

    v10 = *(double *)(a1 + 80);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurredShadowContainer"));
    +[BKBookBloomOpenAnimator setBrightnessFilter:forView:](BKBookBloomOpenAnimator, "setBrightnessFilter:forView:", v11, v10);

  }
}

void sub_1000A6F88(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  void *v5;
  id v6;

  v2 = *(double *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverContainerView"));
  objc_msgSend(v3, "setAlpha:", v2);

  v4 = *(double *)(a1 + 48);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v5, "setAlpha:", v4);

  if (!*(_BYTE *)(a1 + 56))
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurredShadowContainer"));
    objc_msgSend(v6, "setAlpha:", 0.0);

  }
}

void sub_1000A702C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

void sub_1000A8828(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A886C(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

void sub_1000A8884(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  id v5;

  if (!--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    v2 = *(void **)(a1 + 32);
    if (v2)
    {
      v4 = objc_retainBlock(v2);
      if (v4)
      {
        v5 = v4;
        (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);
        v4 = v5;
      }

    }
  }
}

id sub_1000A8900(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  __int128 v7;
  _OWORD v9[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(double *)(a1 + 40);
  v4 = *(double *)(a1 + 48);
  v5 = *(double *)(a1 + 56);
  v6 = *(double *)(a1 + 64);
  v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v9[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v9[1] = v7;
  v9[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "_moveCoverToFrame:extraTransform:", v9, v3, v4, v5, v6);
  return objc_msgSend(*(id *)(a1 + 32), "_moveContentContainerToFrame:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
}

void sub_1000A8960(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurredShadowSnapshot"));

  v3 = *(void **)(a1 + 32);
  if (v2)
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "blurredShadowSnapshot"));
  else
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "blurredShadowContainer"));
  v5 = v4;
  objc_msgSend(v4, "setAlpha:", 0.0);

}

void sub_1000A89C4(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v2, "setBackgroundColor:", v1);

}

void sub_1000A8A00(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurredCoverContainer"));
  +[BKBookBloomOpenAnimator setBlurRadius:forView:](BKBookBloomOpenAnimator, "setBlurRadius:forView:", v2, v1);

}

void sub_1000A8A58(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v2, "setBackgroundColor:", v1);

}

void sub_1000A8A94(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverContainerView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_1000A8AD4(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentContainerView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_1000A8B14(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

void sub_1000A90EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A9124(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

void sub_1000A913C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  id v5;

  if (!--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    v2 = *(void **)(a1 + 32);
    if (v2)
    {
      v4 = objc_retainBlock(v2);
      if (v4)
      {
        v5 = v4;
        (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);
        v4 = v5;
      }

    }
  }
}

id sub_1000A91B8(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  __int128 v7;
  _OWORD v9[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(double *)(a1 + 40);
  v4 = *(double *)(a1 + 48);
  v5 = *(double *)(a1 + 56);
  v6 = *(double *)(a1 + 64);
  v7 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v9[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v9[1] = v7;
  v9[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "_moveCoverToFrame:extraTransform:", v9, v3, v4, v5, v6);
  return objc_msgSend(*(id *)(a1 + 32), "_moveContentContainerToFrame:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
}

void sub_1000A9218(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverContainerView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_1000A9258(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blurredCoverContainer"));
  +[BKBookBloomOpenAnimator setBlurRadius:forView:](BKBookBloomOpenAnimator, "setBlurRadius:forView:", v2, v1);

}

void sub_1000A92B0(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentContainerView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_1000A92F0(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_1000A9330(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

void sub_1000A9D5C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "name"));
  objc_msgSend(v1, "startedSubTest:forTest:withMetrics:", CFSTR("zoom"), v2, &off_10092F5B0);

}

void sub_1000A9E90(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "name"));
  objc_msgSend(v1, "startedSubTest:forTest:withMetrics:", CFSTR("reveal"), v2, &off_10092F5C8);

}

id sub_1000AA55C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iterationCheck");
}

void sub_1000AABF8(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F4E70;
  qword_1009F4E70 = (uint64_t)v1;

}

void sub_1000AAE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AAE70(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  _UNKNOWN **v4;
  void *v5;
  char *i;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _UNKNOWN **v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "plist"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contents"));
  v4 = BCMutableCloudSyncVersions_ptr;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist keyNameForBooksArray](IMLibraryPlist, "keyNameForBooksArray"));
  v26 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "valueForKey:", v5));

  v23 = (char *)objc_msgSend(v26, "count");
  if (v23)
  {
    for (i = 0; v23 != i; ++i)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectAtIndexedSubscript:", i, v23));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[232], "assetIDFromPlistEntry:", v7));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[232], "temporaryItemIdentifierFromPlistEntry:", v7));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[232], "permlinkFromPlistEntry:", v7));
      if ((objc_msgSend(v8, "isEqualToString:", *(_QWORD *)(v1 + 40)) & 1) != 0
        || (objc_msgSend(v9, "isEqualToString:", *(_QWORD *)(v1 + 48)) & 1) != 0
        || objc_msgSend(*(id *)(v1 + 56), "isEqual:", v10))
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4[232], "folderNameFromPlistEntry:", v7));
        if (objc_msgSend(v11, "length"))
        {
          v24 = v10;
          v12 = v1;
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "plist"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "path"));
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "stringByDeletingLastPathComponent"));
          v25 = v8;
          v16 = v9;
          v17 = v4;
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "stringByAppendingPathComponent:", v11));

          v1 = v12;
          v10 = v24;
          v19 = objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v18));
          v20 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 8);
          v21 = *(void **)(v20 + 40);
          *(_QWORD *)(v20 + 40) = v19;

          v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 64) + 8) + 40);
          v4 = v17;
          v9 = v16;
          v8 = v25;
          if (v22)
          {

            break;
          }
        }

      }
    }
  }

}

id sub_1000AB4B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "turnToPageNumber:animated:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

id sub_1000AB544(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "editorController:editNote:", 0, *(_QWORD *)(a1 + 40));
}

id sub_1000AB5D4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "editorController:deleteAnnotation:", 0, *(_QWORD *)(a1 + 40));
}

void sub_1000AB9FC(uint64_t a1)
{
  UIAccessibilityNotifications v2;
  void *v3;
  id v4;

  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
  v2 = UIAccessibilityLayoutChangedNotification;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bkaxWebDocumentViews"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "lastObject"));
  UIAccessibilityPostNotification(v2, v3);

}

id sub_1000ABB18(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showLibrary:", 0);
}

id sub_1000ABB38()
{
  if (qword_1009F4E88 != -1)
    dispatch_once(&qword_1009F4E88, &stru_1008E8D38);
  return (id)qword_1009F4E80;
}

void sub_1000ABB78(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKBookFlowController");
  v2 = (void *)qword_1009F4E80;
  qword_1009F4E80 = (uint64_t)v1;

}

void sub_1000ABD74(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_currentAssetPresentersFromAllScenes"));
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v3 = v2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v17;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v17 != v6)
        objc_enumerationMutation(v3);
      v8 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetPresenterAssetID"));
      v10 = objc_msgSend(v9, "isEqualToString:", *(_QWORD *)(a1 + 40));

      if ((v10 & 1) != 0)
        break;
      if (v5 == (id)++v7)
      {
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
        if (v5)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
    v11 = v8;

    if (!v11)
      goto LABEL_12;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000ABF2C;
    v13[3] = &unk_1008E7338;
    v12 = *(void **)(a1 + 40);
    v14 = *(id *)(a1 + 32);
    v15 = v12;
    objc_msgSend(v14, "_closePresenter:animated:completion:", v11, 1, v13);

  }
  else
  {
LABEL_9:

LABEL_12:
    v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
    objc_msgSend(v11, "applyPendingUpdateForAssetID:completion:", *(_QWORD *)(a1 + 40), 0);
  }

}

void sub_1000ABF2C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  objc_msgSend(v2, "applyPendingUpdateForAssetID:completion:", *(_QWORD *)(a1 + 40), 0);

}

void sub_1000AC318(uint64_t a1)
{
  NSMutableSet *v2;
  void *v3;
  NSMutableSet *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  uint64_t v16;
  void *v17;
  NSMutableSet *v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD block[4];
  id v23;
  NSMutableSet *v24;
  uint64_t v25;
  _QWORD v26[4];
  NSObject *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[4];
  id v33;
  NSMutableSet *v34;
  _BYTE v35[128];

  v2 = objc_opt_new(NSMutableSet);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_currentAssetPresentersFromAllScenes"));
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_1000AC608;
  v32[3] = &unk_1008E8D60;
  v33 = *(id *)(a1 + 40);
  v4 = v2;
  v34 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "indexesOfObjectsPassingTest:", v32));
  v21 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectsAtIndexes:", v5));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_dockedAssetViewController"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "asset"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetID"));

  if (objc_msgSend(v9, "length")
    && objc_msgSend(*(id *)(a1 + 40), "containsObject:", v9)
    && (objc_msgSend(v7, "shouldCloseDueToAssetDeletion") & 1) == 0)
  {
    -[NSMutableSet addObject:](v4, "addObject:", v9);
  }
  v19 = v9;
  v20 = v7;
  v10 = dispatch_group_create();
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v11 = v6;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v29;
    do
    {
      for (i = 0; i != v13; i = (char *)i + 1)
      {
        if (*(_QWORD *)v29 != v14)
          objc_enumerationMutation(v11);
        v16 = *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)i);
        dispatch_group_enter(v10);
        v17 = *(void **)(a1 + 32);
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_1000AC6B8;
        v26[3] = &unk_1008E72C0;
        v27 = v10;
        objc_msgSend(v17, "_closePresenter:animated:completion:", v16, 1, v26, v19);

      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
    }
    while (v13);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000AC6C0;
  block[3] = &unk_1008E7928;
  v23 = *(id *)(a1 + 40);
  v24 = v4;
  v25 = *(_QWORD *)(a1 + 32);
  v18 = v4;
  dispatch_group_notify(v10, (dispatch_queue_t)&_dispatch_main_q, block);

}

uint64_t sub_1000AC608(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetPresenterAssetID"));
  v5 = objc_opt_class(BKAssetPresentingViewController);
  v6 = BUDynamicCast(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (!v7 || (uint64_t)objc_msgSend(v7, "assetState") < 2)
    goto LABEL_8;
  if (!v4
    || !objc_msgSend(*(id *)(a1 + 32), "containsObject:", v4)
    || (objc_msgSend(v7, "shouldCloseDueToAssetDeletion") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);
LABEL_8:
    v8 = 0;
    goto LABEL_9;
  }
  v8 = 1;
LABEL_9:

  return v8;
}

void sub_1000AC6B8(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000AC6C0(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v2 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  objc_msgSend(v2, "minusSet:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "minifiedPresenter"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "minifiedPresenterAssetCurrentPresentersForAssetIDs:", v2));

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "minifiedPresenter", (_QWORD)v13));
        objc_msgSend(v11, "minifiedPresenterPause:", v10);

        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "minifiedPresenter"));
        objc_msgSend(v12, "minifiedPresenterClose:", v10);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

}

id sub_1000ACA84(id a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = a2;
  v3 = objc_opt_class(BKLibraryAsset);
  v4 = BUDynamicCast(v3, v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v6 = BKLibraryAssetIdentifierFromAsset(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  return v7;
}

id sub_1000ACAE0(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  if (!+[NSThread isMainThread](NSThread, "isMainThread"))
  {
    v6 = BCImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_10069E490(v7, v8, v9, v10, v11, v12, v13, v14);

    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/Classes/BKBookFlowController.m", 285, "-[BKBookFlowController _optionsForLibraryAsset:transaction:]_block_invoke", "NO", CFSTR("Cover image block called from background thread"));
  }
  if (a2 <= 0.0 || a3 <= 0.0)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
    objc_msgSend(v15, "bounds");
    a2 = v16;
    a3 = v17;

  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookFlowAssetPresentingForShowAssetAction:", *(_QWORD *)(a1 + 40)));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "presenterFirstVisibleChildConformingToProtocol:", &OBJC_PROTOCOL___BCUCoverEffectsEnvironment));
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager fetchImageForAsset:size:includeSpine:allowGeneric:coverEffectsEnvironment:timeout:](BKLibraryManager, "fetchImageForAsset:size:includeSpine:allowGeneric:coverEffectsEnvironment:timeout:", *(_QWORD *)(a1 + 48), 1, 1, v19, a2, a3, 0.01));
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(v20, "CGImage")));

  return v21;
}

void sub_1000AD474(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 248), 8);
  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1000AD4A4(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  NSObject *v6;
  uint8_t v7[16];

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  v5 = sub_1000ABB38();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "_obtainImageForAsset: got exact cover", v7, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000AD53C(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  NSObject *v6;
  uint8_t v7[16];

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  v5 = sub_1000ABB38();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "_obtainImageForAsset: got cover of any size", v7, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000AD5D4(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  uint8_t v9[16];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "image"));
  v4 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(v3, "CGImage")));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  v7 = sub_1000ABB38();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "_obtainImageForAsset: got shadow", v9, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000AD690(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint8_t v9[16];

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_obtainImageForAsset: returning images", v9, 2u);
  }

  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "quality") < 0x65)
    v4 = *(_QWORD *)(a1 + 48);
  else
    v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(v4 + 8) + 40), "image"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", objc_msgSend(v5, "CGImage")));

  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(id, void *, _QWORD, _QWORD))v7 + 2))(v7, v6, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), 0);

}

void sub_1000AD9F4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  BKLibraryBookCoverViewController *v9;
  id v10;
  BKLibraryBookCoverViewController *v11;
  void *v12;
  NSMutableDictionary *v13;
  NSMutableDictionary *v14;
  uint64_t v15;
  void *v16;
  BKAssetPresentingViewController *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  BKAssetPresentingViewController *v21;
  void *v22;
  BKLibraryBookCoverViewController *v23;
  _QWORD *v24;
  dispatch_time_t v25;
  void *v26;
  BKLibraryBookCoverViewController *v27;
  BKAssetPresentingViewController *v28;
  id v29;
  _QWORD v30[4];
  id v31;
  BKLibraryBookCoverViewController *v32;
  BKAssetPresentingViewController *v33;
  id v34;
  _QWORD block[4];
  _QWORD *v36;
  _QWORD *v37;
  _QWORD v38[4];
  id v39;
  _QWORD *v40;
  _QWORD v41[4];
  BKLibraryBookCoverViewController *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD v45[4];
  _QWORD v46[3];
  char v47;

  v7 = a2;
  v8 = a3;
  v29 = a4;
  v9 = [BKLibraryBookCoverViewController alloc];
  if (*(_BYTE *)(a1 + 88))
    v10 = v8;
  else
    v10 = 0;
  v11 = -[BKLibraryBookCoverViewController initWithCoverImage:shadowImage:](v9, "initWithCoverImage:shadowImage:", v7, v10);
  -[BKLibraryBookCoverViewController setBackgroundColor:](v11, "setBackgroundColor:", 0);
  v12 = *(void **)(a1 + 32);
  if (v12)
    v13 = (NSMutableDictionary *)objc_msgSend(v12, "mutableCopy");
  else
    v13 = objc_opt_new(NSMutableDictionary);
  v14 = v13;
  v15 = AEAudiobookOptionsShouldNotAutoplayKey;
  v16 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v13, "objectForKeyedSubscript:", AEAudiobookOptionsShouldNotAutoplayKey));

  if (!v16)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", &__kCFBooleanTrue, v15);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v7, CFSTR("BKBookPresentingCoverImage"));
  if (v8)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v8, CFSTR("BKBookPresentingCoverShadowImage"));
  v17 = [BKAssetPresentingViewController alloc];
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "libraryAssetProvider"));
  v21 = -[BKBasePresentingViewController initWithAssetIdentifier:placeholderViewController:holdAnimationAssertion:libraryAssetProvider:](v17, "initWithAssetIdentifier:placeholderViewController:holdAnimationAssertion:libraryAssetProvider:", v18, v11, v19, v20);

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "minifiedAssetPresenterLoadAssetBlock"));
  -[BKBasePresentingViewController loadWithAssetWithBlock:](v21, "loadWithAssetWithBlock:", v22);

  -[BKBasePresentingViewController setAutoOpen:](v21, "setAutoOpen:", 1);
  -[BKBasePresentingViewController setAutoDownload:](v21, "setAutoDownload:", *(unsigned __int8 *)(a1 + 89));
  -[BKBasePresentingViewController setOpenOptions:](v21, "setOpenOptions:", v14);
  -[BKLibraryBookCoverViewController setDelegate:](v11, "setDelegate:", v21);
  v46[0] = 0;
  v46[1] = v46;
  v46[2] = 0x2020000000;
  v47 = 0;
  v45[0] = 0;
  v45[1] = v45;
  v45[2] = 0x2020000000;
  v45[3] = 0;
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472;
  v41[2] = sub_1000ADDA8;
  v41[3] = &unk_1008E8A80;
  v23 = v11;
  v42 = v23;
  v43 = v46;
  v44 = v45;
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472;
  v38[2] = sub_1000ADE6C;
  v38[3] = &unk_1008E8E40;
  v40 = v45;
  v24 = objc_retainBlock(v41);
  v39 = v24;
  -[BKBasePresentingViewController setDownloadProgressBlock:](v21, "setDownloadProgressBlock:", v38);
  -[BKLibraryBookCoverViewController setShowBackButton:](v23, "setShowBackButton:", *(unsigned __int8 *)(a1 + 89));
  if (*(_BYTE *)(a1 + 89))
  {
    v25 = dispatch_time(0, 3000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000ADE84;
    block[3] = &unk_1008E8E68;
    v37 = v46;
    v36 = v24;
    dispatch_after(v25, (dispatch_queue_t)&_dispatch_main_q, block);

  }
  v26 = *(void **)(a1 + 72);
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_1000ADEA0;
  v30[3] = &unk_1008E8E90;
  v31 = v26;
  v27 = v23;
  v32 = v27;
  v28 = v21;
  v33 = v28;
  v34 = *(id *)(a1 + 80);
  objc_msgSend(v31, "requireTargetSceneController:", v30);

  _Block_object_dispose(v45, 8);
  _Block_object_dispose(v46, 8);

}

void sub_1000ADD84(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1000ADDA8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("Downloading…"), &stru_10091C438, 0));
    objc_msgSend(*(id *)(a1 + 32), "setProgressText:", v3);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setProgressText:", 0);
  }
  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)));
  objc_msgSend(*(id *)(a1 + 32), "setProgressValue:", v4);

}

uint64_t sub_1000ADE6C(uint64_t a1, double a2)
{
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a2;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1000ADE84(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1000ADEA0(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "destinationSceneController"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "primarySceneController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "destinationSceneController"));

    v6 = a1[5];
    if (v4 == v5)
    {
      v8 = objc_alloc((Class)UINavigationItem);
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("Back"), &stru_10091C438, 0));
      v10 = objc_msgSend(v8, "initWithTitle:", v9);
      objc_msgSend(v6, "setNavBarBackItem:", v10);

    }
    else
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "backItemForCoverView"));
      objc_msgSend(v6, "setNavBarBackItem:", v7);
    }

    objc_msgSend(a1[5], "setShowBackChevron:", v4 == v5);
  }
  return objc_msgSend(a1[7], "set:error:", a1[6], 0);
}

void sub_1000AE2A0(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "_removeViewForCardOverlayWithTransaction:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 56));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1000AE924(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_largeCoverViewControllerForBook:options:transaction:minifiedPresenter:holdAnimationAssertion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72)));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000AEA00;
  v3[3] = &unk_1008E8F30;
  v3[4] = *(_QWORD *)(a1 + 32);
  v4 = *(id *)(a1 + 56);
  v5 = *(id *)(a1 + 40);
  v6 = *(id *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 88);
  v7 = *(id *)(a1 + 80);
  objc_msgSend(v2, "get:", v3);

}

void sub_1000AEA00(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char v17;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookFlowAssetPresentingForShowAssetAction:", *(_QWORD *)(a1 + 40)));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentAssetPresentersForSingleSceneWithTransaction:", *(_QWORD *)(a1 + 40)));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_removePresenters:thatMustStayOpenWhenOpeningBook:", v5, *(_QWORD *)(a1 + 48)));

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000AEB28;
  v11[3] = &unk_1008E8A38;
  v7 = *(void **)(a1 + 40);
  v11[4] = *(_QWORD *)(a1 + 32);
  v12 = v6;
  v13 = v3;
  v14 = v4;
  v15 = *(id *)(a1 + 56);
  v17 = *(_BYTE *)(a1 + 72);
  v16 = *(id *)(a1 + 64);
  v8 = v4;
  v9 = v3;
  v10 = v6;
  objc_msgSend(v7, "commit:", v11);

}

void sub_1000AEB28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "appLaunchCoordinator"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000AEC2C;
  v5[3] = &unk_1008E8A38;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  v7 = *(id *)(a1 + 48);
  v8 = *(id *)(a1 + 56);
  v9 = *(id *)(a1 + 64);
  v11 = *(_BYTE *)(a1 + 80);
  v10 = *(id *)(a1 + 72);
  objc_msgSend(v3, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("push large cover and Open Book"), v5);

}

void sub_1000AEC2C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[5];
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000AECF8;
  v4[3] = &unk_1008E8F08;
  v4[4] = v2;
  v5 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = *(id *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 80);
  v8 = *(id *)(a1 + 72);
  objc_msgSend(v2, "_closePresenters:animated:completion:", v3, 0, v4);

}

id sub_1000AECF8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_presentViewController:bookFlowPresenting:options:animated:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 72), *(_QWORD *)(a1 + 64));
}

void sub_1000AF080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000AF0A4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v7;
  id v8;
  id v9;
  void (**v10)(_QWORD, _QWORD, _QWORD, _QWORD);
  id WeakRetained;
  id v12;

  v7 = *(void **)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "completion"));
  ((void (**)(_QWORD, uint64_t, id, id))v10)[2](v10, a2, v9, v8);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setRunningShowAssetInvocation:", 0);

  v12 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v12, "_processNextShowAssetInvocation");

}

void sub_1000AF30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000AF328(uint64_t a1)
{
  id WeakRetained;

  objc_msgSend(*(id *)(a1 + 32), "removeObjectAtIndex:", 0);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "_processAndClearReopenAssetIDs:options:assetIDToPresenterMap:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_1000AFA00(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  id v8;
  id v9;
  id v10;
  char v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000AFAD0;
  v7[3] = &unk_1008E8FF8;
  v5 = *(_QWORD *)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v10 = v3;
  v11 = *(_BYTE *)(a1 + 64);
  v6 = v3;
  objc_msgSend(v4, "assetForLibraryAsset:completion:", v5, v7);

}

void sub_1000AFAD0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  _QWORD block[5];
  id v8;
  id v9;
  id v10;
  char v11;
  uint8_t buf[4];
  uint64_t v13;

  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000AFC00;
    block[3] = &unk_1008E89C0;
    v3 = *(void **)(a1 + 40);
    block[4] = *(_QWORD *)(a1 + 32);
    v8 = v3;
    v9 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 56);
    v11 = *(_BYTE *)(a1 + 64);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
  else
  {
    v4 = BCCurrentBookLog(a1);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Skipping opening Last Known Book: %@", buf, 0xCu);
    }

  }
}

void sub_1000AFC00(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;
  id v12;
  char v13;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAssetID identifierWithAssetID:](BKAssetID, "identifierWithAssetID:", *(_QWORD *)(a1 + 40)));
  v4 = *(void **)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000AFCC8;
  v9[3] = &unk_1008E8FD0;
  v6 = v4;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v10 = v6;
  v11 = v7;
  v13 = *(_BYTE *)(a1 + 64);
  v12 = v8;
  objc_msgSend(v2, "minifiedAssetPresenterForAssetIdentifier:transaction:options:completion:", v3, v6, v5, v9);

}

void sub_1000AFCC8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;

  v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000AFD80;
  v7[3] = &unk_1008E89C0;
  v5 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v8 = v3;
  v9 = v4;
  v12 = *(_BYTE *)(a1 + 56);
  v10 = *(id *)(a1 + 48);
  v11 = *(id *)(a1 + 32);
  v6 = v3;
  objc_msgSend(v5, "commit:", v7);

}

void sub_1000AFD80(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  int8x16_t v16;
  _QWORD v17[4];
  id v18;
  _QWORD v19[5];
  _QWORD v20[4];
  int8x16_t v21;
  char v22;
  uint8_t buf[4];
  uint64_t v24;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "minifiedPresenter"));
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1000AFFAC;
    v20[3] = &unk_1008E7D78;
    v16 = *(int8x16_t *)(a1 + 32);
    v3 = (id)v16.i64[0];
    v21 = vextq_s8(v16, v16, 8uLL);
    v22 = *(_BYTE *)(a1 + 64);
    objc_msgSend(v2, "minifiedPresenterPrepareToOpen:animated:completion:", v3, 0, v20);

  }
  if (*(_BYTE *)(a1 + 64))
  {
    v4 = BCCurrentBookLog(a1);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Opening Last Known Book: %@", buf, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryAssetProvider"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "libraryAssetOnMainQueueWithAssetID:", *(_QWORD *)(a1 + 48)));

    v10 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(a1 + 40);
    v11 = *(_QWORD *)(a1 + 56);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1000B0020;
    v19[3] = &unk_1008E72C0;
    v19[4] = v9;
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "_pushLargeCoverAndOpenBook:options:minifiedPresenter:animated:transaction:completion:", v8, 0, v10, 0, v11, v19));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "appLaunchCoordinator"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1000B0054;
    v17[3] = &unk_1008E72C0;
    v18 = v12;
    v15 = v12;
    objc_msgSend(v14, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("invalidate holdAnimationAssertion"), v17);

  }
}

void sub_1000AFFAC(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  objc_msgSend(v2, "minifiedPresenterAddPresenter:", *(_QWORD *)(a1 + 40));

  if (!*(_BYTE *)(a1 + 48))
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
    objc_msgSend(v3, "setShouldIgnoreCurrentBookNotifications:", 0);

  }
}

void sub_1000B0020(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  objc_msgSend(v1, "setShouldIgnoreCurrentBookNotifications:", 0);

}

id sub_1000B0054(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_1000B005C(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 56);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_optionsForLibraryAsset:transaction:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

id sub_1000B01B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "show");
}

void sub_1000B0608(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "permanentOrTemporaryAssetID"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v5, v4));

  if (objc_msgSend(v6, "isNew") && objc_msgSend(v6, "isManagedBook"))
    objc_msgSend(v6, "setIsNew:", 0);

}

id sub_1000B0B5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presenterShowModalController:animated:completion:", *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 48));
}

id sub_1000B0D70(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

id sub_1000B0D78(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_showStoreAsset:asset:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

id *sub_1000B0D88(id *result, int a2)
{
  if (a2)
    return (id *)_objc_msgSend(result[4], "_showStoreAsset:asset:options:", result[5], result[6], result[7]);
  return result;
}

void sub_1000B0E7C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  _QWORD v6[5];
  id v7;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000B0F08;
    v6[3] = &unk_1008E7338;
    v5 = *(void **)(a1 + 32);
    v6[4] = *(_QWORD *)(a1 + 40);
    v7 = v3;
    objc_msgSend(v5, "commit:", v6);

  }
}

void sub_1000B0F08(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000B0F98;
  v4[3] = &unk_1008E7338;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "minifiedPresenterPrepareToOpen:animated:completion:", v5, 0, v4);

}

void sub_1000B0F98(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  objc_msgSend(v2, "minifiedPresenterOpenMinified:", *(_QWORD *)(a1 + 40));

}

void sub_1000B17C4(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_1000B17FC(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, uint64_t))v1 + 2))(v1, 1);
    v1 = v2;
  }

}

void sub_1000B190C(uint64_t a1, int a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  char v14;

  if (a2)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = a2;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_1000B1A18;
      v12[3] = &unk_1008E90E8;
      v5 = *(void **)(a1 + 40);
      v13 = *(id *)(a1 + 48);
      v14 = v4;
      objc_msgSend(v5, "bc_closeToAssetWithCardStackViewController:completion:", v3, v12);

      return;
    }
    v7 = objc_opt_class(BKEndOfBookCardViewController);
    v8 = BUDynamicCast(v7, *(_QWORD *)(a1 + 40));
    v11 = (id)objc_claimAutoreleasedReturnValue(v8);
    objc_msgSend(v11, "closeCard");
    v9 = objc_retainBlock(*(id *)(a1 + 48));
    v10 = v9;
    if (v9)
      (*((void (**)(id, uint64_t))v9 + 2))(v9, 1);

    goto LABEL_9;
  }
  v6 = objc_retainBlock(*(id *)(a1 + 48));
  if (v6)
  {
    v11 = v6;
    (*((void (**)(id, _QWORD))v6 + 2))(v6, 0);
LABEL_9:
    v6 = v11;
  }

}

void sub_1000B1A18(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 40));
    v2 = v3;
  }

}

void sub_1000B2238(uint64_t a1, int a2)
{
  id v3;
  id v4;

  if (a2)
    objc_msgSend(*(id *)(a1 + 32), "assetPresenterJumpToBeginningAnimated:", 1);
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v3 + 2))(v3, 1, 0, 0);
    v3 = v4;
  }

}

void sub_1000B2294(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v19[4];
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  uint64_t v29;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookFlowAssetPresentingForShowAssetAction:", *(_QWORD *)(a1 + 40)));
  v3 = sub_1000ABB38();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 141558274;
      v27 = 1752392040;
      v28 = 2112;
      v29 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 4: presenterWaitForAssetPresenterTransitionsToFinishIfNeededWithCompletion begin. assetID: %{mask.hash}@", buf, 0x16u);
    }

    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1000B2454;
    v19[3] = &unk_1008E9138;
    v7 = *(id *)(a1 + 48);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(a1 + 40);
    v20 = v7;
    v21 = v8;
    v22 = v9;
    v23 = *(id *)(a1 + 56);
    v24 = *(id *)(a1 + 64);
    v25 = *(id *)(a1 + 72);
    objc_msgSend(v2, "presenterWaitForAssetPresenterTransitionsToFinishIfNeededWithCompletion:", v19);

    v10 = v20;
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_10069E580(v5, v11, v12, v13, v14, v15, v16, v17);

    v18 = objc_retainBlock(*(id *)(a1 + 72));
    v10 = v18;
    if (v18)
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v18 + 2))(v18, 0, 0, 0);
  }

}

id sub_1000B2454(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 141558274;
    v7 = 1752392040;
    v8 = 2112;
    v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 4: presenterWaitForAssetPresenterTransitionsToFinishIfNeededWithCompletion end. assetID: %{mask.hash}@", (uint8_t *)&v6, 0x16u);
  }

  return objc_msgSend(*(id *)(a1 + 40), "_showAssetWithTransaction:assetIdentifier:location:options:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
}

void sub_1000B251C(id *a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  NSObject *v9;
  id v10;
  void *v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  _QWORD v20[4];
  id v21;
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  id v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  void *v30;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "isExplicit"));
  v5 = objc_msgSend(v4, "BOOLValue");

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "libraryAssetProvider"));
    v7 = objc_msgSend(v6, "isExplicitMaterialAllowed");

    if ((v7 & 1) == 0)
    {

      v8 = sub_1000ABB38();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = a1[5];
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKeyedSubscript:", AEAssetLogID));
        *(_DWORD *)buf = 141558530;
        v24 = 1752392040;
        v25 = 2112;
        v26 = v10;
        v27 = 2114;
        v28 = (uint64_t)v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 3: asset %{mask.hash}@ is explicit which is not allowed logID: %{public}@", buf, 0x20u);

      }
      v3 = 0;
    }
  }
  v12 = objc_msgSend(v3, "streamable");
  v13 = sub_1000ABB38();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
  if (v12)
  {
    if (v15)
    {
      v16 = a1[5];
      *(_DWORD *)buf = 141558274;
      v24 = 1752392040;
      v25 = 2112;
      v26 = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 3: asset is streamable. assetID: %{mask.hash}@", buf, 0x16u);
    }

    (*((void (**)(void))a1[7] + 2))();
  }
  else
  {
    if (v15)
    {
      v17 = a1[5];
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
      *(_DWORD *)buf = 141558786;
      v24 = 1752392040;
      v25 = 2112;
      v26 = v17;
      v27 = 2160;
      v28 = 1752392040;
      v29 = 2112;
      v30 = v18;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 3: resolveLibraryAsset begin. assetID: %{mask.hash}@ title: %{mask.hash}@", buf, 0x2Au);

    }
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "libraryAssetProvider"));
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1000B27D8;
    v20[3] = &unk_1008E9188;
    v21 = a1[5];
    v22 = a1[7];
    objc_msgSend(v19, "resolveLibraryAsset:completion:", v3, v20);

  }
}

void sub_1000B27D8(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  NSObject *v14;
  _QWORD v15[4];
  NSObject *v16;
  _QWORD v17[4];
  NSObject *v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  id v24;

  v6 = a4;
  v7 = sub_1000ABB38();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 141558530;
    v20 = 1752392040;
    v21 = 2112;
    v22 = v9;
    v23 = 2112;
    v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 3: resolveLibraryAsset end. assetID: %{mask.hash}@ error: %@", buf, 0x20u);
  }

  if (v6)
  {
    v10 = sub_1000ABB38();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_10069E5B0();
  }
  else if (a3)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1000B29DC;
    v17[3] = &unk_1008E7818;
    v18 = *(id *)(a1 + 40);
    objc_msgSend(v12, "addCustomOperationBlock:", v17);

    v11 = v18;
  }
  else
  {
    v13 = sub_1000ABB38();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 3: done with didResolve=NO", buf, 2u);
    }

    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000B2A50;
    v15[3] = &unk_1008E7818;
    v16 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v15);
    v11 = v16;
  }

}

void sub_1000B29DC(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B2A44;
  block[3] = &unk_1008E7818;
  v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

uint64_t sub_1000B2A44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1000B2A50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B2A5C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id v12;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    if (objc_msgSend(v3, "isAudiobook"))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    }
    else
    {
      v9 = *(void **)(a1 + 32);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1000B2B80;
      v10[3] = &unk_1008E91D8;
      v12 = *(id *)(a1 + 48);
      v11 = v4;
      objc_msgSend(v9, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 0x4000, CFSTR("resolveAndShowEPUBAsset"), v10);

    }
  }
  else
  {
    v5 = sub_1000ABB38();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10069E61C();

    v7 = objc_retainBlock(*(id *)(a1 + 56));
    v8 = v7;
    if (v7)
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v7 + 2))(v7, 0, 0, 0);

  }
}

uint64_t sub_1000B2B80(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1000B2B90(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  void *v9;
  _QWORD v10[5];
  id v11;
  id v12;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryAssetOnMainQueueWithAssetIdentifier:", *(_QWORD *)(a1 + 40)));

    if (v4)
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }
    else
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1000B2CCC;
      v10[3] = &unk_1008E9110;
      v8 = *(void **)(a1 + 40);
      v9 = *(void **)(a1 + 48);
      v10[4] = *(_QWORD *)(a1 + 32);
      v11 = v8;
      v12 = *(id *)(a1 + 56);
      objc_msgSend(v9, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 2, CFSTR("showAsset:onDataSourceFetch"), v10);

    }
  }
  else
  {
    v5 = sub_1000ABB38();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10069E680();

    v7 = objc_retainBlock(*(id *)(a1 + 64));
    v4 = v7;
    if (v7)
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v7 + 2))(v7, 0, 0, 0);
  }

}

void sub_1000B2CCC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  id v6;
  NSObject *v7;
  int v8;
  void *v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetIdentifier:", *(_QWORD *)(a1 + 40)));

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  v4 = sub_1000ABB38();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "showAssetWithTransaction step 1: libraryAsset: %@", (uint8_t *)&v8, 0xCu);
  }

  v6 = sub_1000ABB38();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
    sub_10069E6E4(v7);

}

void sub_1000B30F4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  void *v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;

  v7 = a3;
  v8 = a4;
  v9 = sub_1000ABB38();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  v11 = v10;
  if ((_DWORD)a2)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 32);
      v15 = 141558274;
      v16 = 1752392040;
      v17 = 2112;
      v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "_showAssetWithTransaction: Completed successfully. assetID: %{mask.hash}@", (uint8_t *)&v15, 0x16u);
    }
  }
  else if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    sub_10069E86C();
  }

  v13 = objc_retainBlock(*(id *)(a1 + 40));
  v14 = v13;
  if (v13)
    (*((void (**)(id, uint64_t, id, id))v13 + 2))(v13, a2, v7, v8);

}

id sub_1000B3230(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "setTargetSceneController:", a2);
  return objc_msgSend(*(id *)(a1 + 40), "_showAssetWithoutStateRestoration:assetIdentifier:location:options:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
}

void sub_1000B32DC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  void *v17;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
    *(_DWORD *)buf = 141558274;
    v15 = 1752392040;
    v16 = 2112;
    v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_openPDFAsset: Opening asset. assetID: %{mask.hash}@", buf, 0x16u);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryAssetProvider"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceIdentifier"));
  v8 = *(_QWORD *)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000B344C;
  v11[3] = &unk_1008E92A0;
  v12 = v7;
  v13 = v6;
  v9 = v6;
  v10 = v7;
  objc_msgSend(v9, "assetForLibraryAsset:completion:", v8, v11);

}

void sub_1000B344C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  NSObject *v24;
  __int16 v25;
  uint64_t v26;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "url"));
    v8 = sub_1000ABB38();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    v10 = v9;
    if (v7)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
        v12 = *(_QWORD *)(a1 + 32);
        v17 = 141559042;
        v18 = 1752392040;
        v19 = 2112;
        v20 = v11;
        v21 = 2160;
        v22 = 1752392040;
        v23 = 2112;
        v24 = v7;
        v25 = 2112;
        v26 = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "_openPDFAsset: Launching Preview. assetID: %{mask.hash}@ url: %{mask.hash}@, dataSource: %@", (uint8_t *)&v17, 0x34u);

      }
      v13 = *(void **)(a1 + 40);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      objc_msgSend(v13, "updateLibraryAssetWithID:withLastOpenDate:completion:", v14, v15, 0);

      objc_msgSend(+[BCAppKitBundleLoader appKitBundleClass](BCAppKitBundleLoader, "appKitBundleClass"), "openInPreview:", v7);
    }
    else
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_10069E93C(v5, a1, v10);

    }
  }
  else
  {
    v16 = sub_1000ABB38();
    v7 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_10069E8D8();
  }

}

void sub_1000B3BC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

id sub_1000B3C20(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetIdentifier:", *(_QWORD *)(a1 + 40)));

  return v3;
}

void sub_1000B3C64(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint8_t buf[4];
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  void *v35;

  v3 = a2;
  v4 = sub_1000ABB38();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", AEAssetLogID));
    *(_DWORD *)buf = 141558530;
    v31 = 1752392040;
    v32 = 2112;
    v33 = v6;
    v34 = 2114;
    v35 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Got minified presenter. assetID: %{mask.hash}@ logID: %{public}@", buf, 0x20u);

  }
  v8 = *(void **)(a1 + 48);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B3EA4;
  v12[3] = &unk_1008E9670;
  v13 = *(id *)(a1 + 32);
  v14 = *(id *)(a1 + 40);
  v15 = *(id *)(a1 + 56);
  v16 = v3;
  v9 = *(_QWORD *)(a1 + 64);
  v26 = *(_BYTE *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 112);
  v17 = v9;
  v24 = v10;
  v22 = *(id *)(a1 + 96);
  v18 = *(id *)(a1 + 72);
  v19 = *(id *)(a1 + 80);
  v27 = *(_BYTE *)(a1 + 137);
  v25 = *(_OWORD *)(a1 + 120);
  v23 = *(id *)(a1 + 104);
  v28 = *(_BYTE *)(a1 + 138);
  v20 = *(id *)(a1 + 88);
  v29 = *(_BYTE *)(a1 + 139);
  v21 = *(id *)(a1 + 48);
  v11 = v3;
  objc_msgSend(v8, "commit:", v12);

}

void sub_1000B3EA4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  id (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  unsigned __int8 v37;
  uint64_t v38;
  void *v39;
  unsigned __int8 v40;
  void *v41;
  uint64_t v42;
  void *v43;
  int v44;
  char v45;
  void *v46;
  unsigned int v47;
  unsigned __int8 v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  id v54;
  NSObject *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  id v65;
  _QWORD *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  id v73;
  NSObject *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v83;
  id v84;
  NSObject *v85;
  id v86;
  void *v87;
  id v88;
  NSObject *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  void *v94;
  id v95;
  unsigned int v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  int8x16_t v99;
  id v100;
  _QWORD *v101;
  unsigned __int8 v102;
  void *v103;
  _QWORD *v104;
  _QWORD v105[4];
  id v106;
  _QWORD v107[4];
  id v108;
  id v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  _QWORD v113[4];
  int8x16_t v114;
  id v115;
  id v116;
  _QWORD v117[5];
  id v118;
  id v119;
  _QWORD *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  _QWORD v125[4];
  id v126;
  uint64_t v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  _QWORD *v133;
  _BYTE *v134;
  unsigned __int8 v135;
  unsigned __int8 v136;
  char v137;
  _QWORD v138[5];
  id v139;
  id v140;
  id v141;
  id v142;
  uint64_t v143;
  _BYTE *v144;
  _QWORD v145[4];
  id v146;
  uint64_t v147;
  id v148;
  id v149;
  _BYTE *v150;
  _QWORD v151[4];
  id v152;
  id v153;
  id v154;
  _QWORD *v155;
  uint64_t *v156;
  unsigned __int8 v157;
  _QWORD v158[4];
  unsigned __int8 v159;
  _QWORD v160[4];
  id v161;
  uint64_t v162;
  _QWORD v163[4];
  id v164;
  id v165;
  uint64_t v166;
  id v167;
  id v168;
  id v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  id (*v173)(uint64_t, uint64_t);
  void (*v174)(uint64_t);
  _QWORD *v175;
  _QWORD v176[4];
  id v177;
  id v178;
  id v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  char v183;
  uint8_t v184[4];
  uint64_t v185;
  __int16 v186;
  uint64_t v187;
  _BYTE buf[24];
  id (*v189)(uint64_t, uint64_t);
  void (*v190)(uint64_t);
  _QWORD *v191;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = (id (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", AEAssetLogID));
    *(_DWORD *)buf = 141558530;
    *(_QWORD *)&buf[4] = 1752392040;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v4;
    *(_WORD *)&buf[22] = 2114;
    v189 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Committing the show asset transaction. assetID: %{mask.hash}@ logID: %{public}@", buf, 0x20u);

  }
  v6 = objc_opt_class(NSNumber);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("BKBookPresentingUseLargeCoverIfNeeded")));
  v8 = BUDynamicCast(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v96 = objc_msgSend(v9, "BOOLValue");

  v10 = objc_opt_class(NSNumber);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("BKBookPresentingForceLargeCover")));
  v12 = BUDynamicCast(v10, v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v102 = objc_msgSend(v13, "BOOLValue");

  v14 = objc_opt_class(NSNumber);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("BKBookPresentingCanPresentOverStore")));
  v16 = BUDynamicCast(v14, v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  v98 = objc_msgSend(v17, "BOOLValue");

  v18 = objc_opt_class(NSNumber);
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("BKBookPresentingSkipExistingPresenterCheck")));
  v20 = BUDynamicCast(v18, v19);
  v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v22 = objc_msgSend(v21, "BOOLValue");

  v23 = objc_opt_class(NSNumber);
  v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("BKBookPresentingResetLocationForMiniToFullTransition")));
  v25 = (void *)v24;
  if (v24)
    v26 = (void *)v24;
  else
    v26 = &__kCFBooleanTrue;
  v27 = BUDynamicCast(v23, v26);
  v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
  v97 = objc_msgSend(v28, "BOOLValue");

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v189 = sub_1000B4DE8;
  v190 = sub_1000B4E10;
  v176[0] = _NSConcreteStackBlock;
  v176[1] = 3221225472;
  v176[2] = sub_1000B4E18;
  v176[3] = &unk_1008E9330;
  v177 = *(id *)(a1 + 32);
  v178 = *(id *)(a1 + 40);
  v29 = *(id *)(a1 + 56);
  v30 = *(void **)(a1 + 104);
  v31 = *(_QWORD *)(a1 + 64);
  v179 = v29;
  v180 = v31;
  v183 = *(_BYTE *)(a1 + 144);
  v182 = *(_QWORD *)(a1 + 120);
  v181 = v30;
  v191 = objc_retainBlock(v176);
  v170 = 0;
  v171 = &v170;
  v172 = 0x3032000000;
  v173 = sub_1000B4DE8;
  v174 = sub_1000B4E10;
  v163[0] = _NSConcreteStackBlock;
  v163[1] = 3221225472;
  v163[2] = sub_1000B5078;
  v163[3] = &unk_1008E9380;
  v164 = *(id *)(a1 + 32);
  v32 = *(id *)(a1 + 40);
  v33 = *(_QWORD *)(a1 + 64);
  v165 = v32;
  v166 = v33;
  v167 = *(id *)(a1 + 72);
  v168 = *(id *)(a1 + 80);
  v169 = *(id *)(a1 + 104);
  v175 = objc_retainBlock(v163);
  v160[0] = _NSConcreteStackBlock;
  v160[1] = 3221225472;
  v160[2] = sub_1000B53E4;
  v160[3] = &unk_1008E93A8;
  v34 = *(id *)(a1 + 56);
  v35 = *(_QWORD *)(a1 + 64);
  v161 = v34;
  v162 = v35;
  v104 = objc_retainBlock(v160);
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", AEAudioBookForceAudiobookPlayIfCurrentAsset));
  v37 = objc_msgSend(v36, "BOOLValue");

  v158[0] = _NSConcreteStackBlock;
  v158[1] = 3221225472;
  v158[2] = sub_1000B5450;
  v158[3] = &unk_1008E93C8;
  v159 = v37;
  v101 = objc_retainBlock(v158);
  if (!*(_QWORD *)(a1 + 72)
    && *(_BYTE *)(a1 + 145)
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 8) + 40)
    && objc_msgSend(*(id *)(a1 + 64), "_isPresenterAudiobook:")
    && (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8) + 40), "count") >= 2)
  {
    v100 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 8) + 40);
  }
  else if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 8) + 40)
         && objc_msgSend(*(id *)(a1 + 64), "_isPresenterAudiobook:")
         && !*(_QWORD *)(a1 + 72)
         && (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8) + 40), "count") >= 2)
  {
    v100 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8) + 40), "objectAtIndexedSubscript:", (char *)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 136) + 8) + 40), "count") - 2));
    v102 = 1;
  }
  else
  {
    v100 = 0;
  }
  v38 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "permanentOrTemporaryAssetID"));
  v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "minifiedAssetPresenterAssetID"));
  v40 = objc_msgSend((id)v38, "isEqualToString:", v39);

  v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("BKBookPresentingForceOpenBeforeWelcomeCompleted")));
  LODWORD(v38) = objc_msgSend(v41, "BOOLValue");

  v42 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 112) + 16))();
  v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
  v44 = v38 ^ 1;
  v45 = (v38 ^ 1) & v102 & (v40 ^ 1 | v22);
  if ((objc_msgSend(v43, "canOpen") & 1) == 0
    && ((objc_msgSend(v43, "isCloud") & 1) != 0 || objc_msgSend(v43, "isDownloading")))
  {
    v45 = 1;
  }
  v103 = v43;
  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("BKBookPresentWithoutAnimations")));
  v47 = objc_msgSend(v46, "BOOLValue");

  if ((v47 & 1) != 0)
  {
    v48 = 1;
  }
  else
  {
    v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("BKBookPresentWithoutCloseAnimation")));
    v48 = objc_msgSend(v49, "BOOLValue");

  }
  v50 = *(_QWORD *)(a1 + 72);
  if (v50 && !*(_BYTE *)(a1 + 146))
  {
    if (v50 != *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 8) + 40))
    {
      v83 = *(void **)(a1 + 64);
      v151[0] = _NSConcreteStackBlock;
      v151[1] = 3221225472;
      v151[2] = sub_1000B54E0;
      v151[3] = &unk_1008E9418;
      v152 = *(id *)(a1 + 88);
      v153 = *(id *)(a1 + 72);
      v157 = v37;
      v154 = *(id *)(a1 + 56);
      v155 = v101;
      v156 = &v170;
      objc_msgSend(v83, "_popToPresenterIfNeeded:completion:", v50, v151);

      goto LABEL_48;
    }
    if (*(_QWORD *)(a1 + 88) || *(_BYTE *)(a1 + 145))
    {
      v88 = sub_1000ABB38();
      v89 = objc_claimAutoreleasedReturnValue(v88);
      if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
      {
        v90 = *(_QWORD *)(a1 + 88);
        v91 = v47 ^ 1;
        *(_DWORD *)v184 = 138543618;
        v185 = v90;
        v186 = 1024;
        LODWORD(v187) = v47 ^ 1;
        _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Reusing current audiobook presenter with new location:%{public}@ animated:%u", v184, 0x12u);
      }
      else
      {
        v91 = v47 ^ 1;
      }

      objc_msgSend(*(id *)(a1 + 72), "assetPresenterOpenToLocation:animated:", *(_QWORD *)(a1 + 88), v91);
      v94 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "assetPresenterAssetViewController"));
      ((void (*)(_QWORD *, void *))v101[2])(v101, v94);

    }
    v95 = objc_retainBlock((id)v171[5]);
    v87 = v95;
    if (v95)
      (*((void (**)(id, uint64_t, _QWORD, _QWORD))v95 + 2))(v95, 1, 0, 0);
    goto LABEL_56;
  }
  v51 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 8) + 40);
  if (v51 && !*(_BYTE *)(a1 + 147))
  {
    v52 = ((uint64_t (*)(void))v104[2])();
    if (v100)
      v53 = 1;
    else
      v53 = v52;
    if (v53 == 1)
    {
      v51 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 128) + 8) + 40);
      goto LABEL_29;
    }
    v84 = sub_1000ABB38();
    v85 = objc_claimAutoreleasedReturnValue(v84);
    if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v184 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Nothing to do", v184, 2u);
    }

    v86 = objc_retainBlock(*(id *)(*(_QWORD *)&buf[8] + 40));
    v87 = v86;
    if (v86)
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v86 + 2))(v86, 0, 0, 0);
LABEL_56:

    goto LABEL_48;
  }
LABEL_29:
  if ((((uint64_t (*)(_QWORD *, uint64_t))v104[2])(v104, v51) & 1) == 0
    && ((v45 & 1) != 0
     || (v44 & v96) != 0
     && objc_msgSend(*(id *)(a1 + 64), "_shouldOpenBookUsingLargeCover:", *(_QWORD *)(a1 + 96))))
  {
    if (v100)
    {
      v78 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController holdAnimationAssertion](BKAssetPresentingViewController, "holdAnimationAssertion"));
      v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "_largeCoverViewControllerForBook:options:transaction:minifiedPresenter:holdAnimationAssertion:", v43, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 56), v78));
      v145[0] = _NSConcreteStackBlock;
      v145[1] = 3221225472;
      v145[2] = sub_1000B5720;
      v145[3] = &unk_1008E9490;
      v80 = *(id *)(a1 + 96);
      v81 = *(_QWORD *)(a1 + 64);
      v146 = v80;
      v147 = v81;
      v148 = v100;
      v82 = v78;
      v149 = v82;
      v150 = buf;
      objc_msgSend(v79, "get:", v145);

    }
    else
    {
      v92 = *(void **)(a1 + 96);
      v138[0] = _NSConcreteStackBlock;
      v138[1] = 3221225472;
      v138[2] = sub_1000B59B4;
      v138[3] = &unk_1008E94E0;
      v93 = *(_QWORD *)(a1 + 64);
      v143 = *(_QWORD *)(a1 + 120);
      v138[4] = v93;
      v139 = v92;
      v140 = v43;
      v141 = *(id *)(a1 + 48);
      v142 = *(id *)(a1 + 56);
      v144 = buf;
      objc_msgSend(v139, "requireTargetSceneController:", v138);

    }
  }
  else
  {
    v54 = sub_1000ABB38();
    v55 = objc_claimAutoreleasedReturnValue(v54);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
    {
      v56 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v184 = 141558274;
      v185 = 1752392040;
      v186 = 2112;
      v187 = v56;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Default path. assetID: %{mask.hash}@", v184, 0x16u);
    }

    v125[0] = _NSConcreteStackBlock;
    v125[1] = 3221225472;
    v125[2] = sub_1000B5B30;
    v125[3] = &unk_1008E95D0;
    v126 = *(id *)(a1 + 32);
    v57 = *(id *)(a1 + 112);
    v58 = *(_QWORD *)(a1 + 64);
    v132 = v57;
    v127 = v58;
    v128 = *(id *)(a1 + 48);
    v129 = *(id *)(a1 + 96);
    v130 = *(id *)(a1 + 56);
    v135 = v98;
    v136 = v97;
    v133 = v101;
    v134 = buf;
    v137 = v47;
    v131 = *(id *)(a1 + 40);
    v59 = objc_retainBlock(v125);
    v117[0] = _NSConcreteStackBlock;
    v117[1] = 3221225472;
    v117[2] = sub_1000B6C3C;
    v117[3] = &unk_1008E95F8;
    v60 = *(_QWORD *)(a1 + 64);
    v122 = *(_QWORD *)(a1 + 136);
    v117[4] = v60;
    v61 = *(id *)(a1 + 96);
    v62 = *(_QWORD *)(a1 + 128);
    v118 = v61;
    v123 = v62;
    v120 = v104;
    v119 = *(id *)(a1 + 32);
    v124 = v48;
    v63 = v59;
    v121 = v63;
    v64 = objc_retainBlock(v117);
    v113[0] = _NSConcreteStackBlock;
    v113[1] = 3221225472;
    v113[2] = sub_1000B6EC4;
    v113[3] = &unk_1008E8EE0;
    v99 = *(int8x16_t *)(a1 + 56);
    v65 = *(id *)(a1 + 56);
    v114 = vextq_s8(v99, v99, 8uLL);
    v115 = *(id *)(a1 + 32);
    v66 = v64;
    v116 = v66;
    v67 = objc_retainBlock(v113);
    v107[0] = _NSConcreteStackBlock;
    v107[1] = 3221225472;
    v107[2] = sub_1000B7038;
    v107[3] = &unk_1008E9648;
    v108 = *(id *)(a1 + 32);
    v68 = *(id *)(a1 + 96);
    v112 = *(_QWORD *)(a1 + 120);
    v69 = *(_QWORD *)(a1 + 64);
    v109 = v68;
    v110 = v69;
    v70 = v67;
    v111 = v70;
    v71 = objc_retainBlock(v107);
    v72 = v71;
    if (*(_QWORD *)(a1 + 56))
    {
      v73 = sub_1000ABB38();
      v74 = objc_claimAutoreleasedReturnValue(v73);
      if (os_log_type_enabled(v74, OS_LOG_TYPE_DEFAULT))
      {
        v75 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)v184 = 141558274;
        v185 = 1752392040;
        v186 = 2112;
        v187 = v75;
        _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: minifiedPresenterPrepareToOpen begin. assetID: %{mask.hash}@", v184, 0x16u);
      }

      v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "minifiedPresenter"));
      v77 = *(_QWORD *)(a1 + 56);
      v105[0] = _NSConcreteStackBlock;
      v105[1] = 3221225472;
      v105[2] = sub_1000B7300;
      v105[3] = &unk_1008E7818;
      v106 = v72;
      objc_msgSend(v76, "minifiedPresenterPrepareToOpen:animated:completion:", v77, v47 ^ 1, v105);

    }
    else
    {
      ((void (*)(_QWORD *))v71[2])(v71);
    }

  }
LABEL_48:

  _Block_object_dispose(&v170, 8);
  _Block_object_dispose(buf, 8);

}

void sub_1000B4D98(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose(&STACK[0x358], 8);
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

id sub_1000B4DE8(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_1000B4E10(uint64_t a1)
{

}

void sub_1000B4E18(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  int v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  int v28;
  __int16 v29;
  id v30;

  v7 = a3;
  v8 = a4;
  v9 = sub_1000ABB38();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_QWORD *)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", AEAssetLogID));
    v21 = 141559042;
    v22 = 1752392040;
    v23 = 2112;
    v24 = v11;
    v25 = 2114;
    v26 = v12;
    v27 = 1024;
    v28 = a2;
    v29 = 2112;
    v30 = v7;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: compoundCompletion: assetID: %{mask.hash}@: logID: %{public}@ success: %{BOOL}d error: %@", (uint8_t *)&v21, 0x30u);

  }
  if ((_DWORD)a2)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "minifiedPresenter"));
      objc_msgSend(v13, "minifiedPresenterAddPresenter:", *(_QWORD *)(a1 + 48));

    }
    objc_msgSend(*(id *)(a1 + 56), "_updateAssetAfterOpen:", *(_QWORD *)(a1 + 32));
  }
  else if (v7)
  {
    if (*(_BYTE *)(a1 + 80))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "libraryAssetProvider"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "libraryAssetOnMainQueueWithAssetIdentifier:", *(_QWORD *)(a1 + 32)));

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "libraryAssetProvider"));
      objc_msgSend(v16, "assetForLibraryAsset:completion:", v15, &stru_1008E9308);

    }
    v17 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "newShowAssetTransaction");
    objc_msgSend(*(id *)(a1 + 56), "handleBookOpenErrorWithTransaction:error:assetIdentifier:", v17, v7, *(_QWORD *)(a1 + 32));

  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "minifiedPresenter"));
  objc_msgSend(v18, "setShouldIgnoreCurrentBookNotifications:", 0);

  v19 = objc_retainBlock(*(id *)(a1 + 64));
  v20 = v19;
  if (v19)
    (*((void (**)(id, uint64_t, id, id))v19 + 2))(v19, a2, v7, v8);

}

void sub_1000B5048(id a1, BKAsset *a2, NSError *a3)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(-[BKAsset url](a2, "url", a3));
  objc_msgSend(v3, "stopAccessingSecurityScopedResource");

}

void sub_1000B5078(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  id v32;
  id v33;
  char v34;
  uint8_t buf[4];
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  int v42;
  __int16 v43;
  id v44;

  v7 = a3;
  v8 = a4;
  v9 = sub_1000ABB38();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_QWORD *)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", AEAssetLogID));
    *(_DWORD *)buf = 141559042;
    v36 = 1752392040;
    v37 = 2112;
    v38 = v11;
    v39 = 2114;
    v40 = v12;
    v41 = 1024;
    v42 = a2;
    v43 = 2112;
    v44 = v7;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: compoundCompletionForCurrentPresenter: assetID: %{mask.hash}@: logID: %{public}@ success: %{BOOL}d error: %@", buf, 0x30u);

  }
  v13 = *(void **)(a1 + 48);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "permanentOrTemporaryAssetID"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_currentPresenterFromAllScenesForAssetID:", v14));

  v16 = *(void **)(a1 + 56);
  if (!v16)
  {
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/Classes/BKBookFlowController.m", 1590, "-[BKBookFlowController _showAssetWithoutStateRestoration:assetIdentifier:location:options:completion:]_block_invoke", "currentPresenter", 0);
    v16 = *(void **)(a1 + 56);
  }
  if (v16 != v15)
  {
    v29 = *(_QWORD *)(a1 + 32);
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/Classes/BKBookFlowController.m", 1591, "-[BKBookFlowController _showAssetWithoutStateRestoration:assetIdentifier:location:options:completion:]_block_invoke", "currentPresenter == currentPresenterForAssetID", CFSTR("Expecting currentPresenter to be presenting assetID=%@"));
  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "sceneHosting", v29));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "permanentOrTemporaryAssetID"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "sceneInfoPresentingAssetID:", v18));

  v20 = *(void **)(a1 + 56);
  if (v20
    && v20 == v15
    && (v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "sceneController"))) != 0
    && (v22 = (void *)v21,
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "sceneController")),
        v24 = *(void **)(a1 + 64),
        v23,
        v22,
        v23 != v24))
  {
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "sceneHosting"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "permanentOrTemporaryAssetID"));
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_1000B539C;
    v30[3] = &unk_1008E9358;
    v33 = *(id *)(a1 + 72);
    v34 = a2;
    v31 = v7;
    v32 = v8;
    objc_msgSend(v25, "requestSceneWithAssetID:completion:", v26, v30);

    v27 = v33;
  }
  else
  {
    v28 = objc_retainBlock(*(id *)(a1 + 72));
    v27 = v28;
    if (v28)
      (*((void (**)(id, uint64_t, id, id))v28 + 2))(v28, a2, v7, v8);
  }

}

void sub_1000B539C(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v2 = v3;
  }

}

id sub_1000B53E4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  if (!*(_QWORD *)(a1 + 32))
    return 0;
  v3 = *(void **)(a1 + 40);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "minifiedPresenter"));
  v6 = objc_msgSend(v5, "minifiedPresenterCanOpenPresenter:overCurrentPresenter:", *(_QWORD *)(a1 + 32), v4);

  return v6;
}

void sub_1000B5450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  uint8_t v6[16];

  if (*(_BYTE *)(a1 + 32))
  {
    v2 = BUProtocolCast(&OBJC_PROTOCOL___BKAudiobookNowPlayingViewController, a2);
    v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (v3)
    {
      v4 = sub_1000ABB38();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Playing audiobook", v6, 2u);
      }

      objc_msgSend(v3, "play");
    }

  }
}

void sub_1000B54E0(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  int v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;
  uint8_t buf[4];
  uint64_t v19;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = sub_1000ABB38();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      v19 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: Changing asset presenter location:%{public}@", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 40), "assetPresenterOpenToLocation:animated:", *(_QWORD *)(a1 + 32), 1);
  }
  v5 = sub_1000ABB38();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(unsigned __int8 *)(a1 + 72);
    *(_DWORD *)buf = 67109120;
    LODWORD(v19) = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: AEAudioBookForceAudiobookPlayIfCurrentAsset = %{BOOL}d", buf, 8u);
  }

  if (*(_BYTE *)(a1 + 72))
  {
    v8 = *(void **)(a1 + 48);
    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "minifiedAssetPresenterAssetViewControllerFuture"));
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_1000B56C0;
      v15[3] = &unk_1008E93F0;
      v10 = *(id *)(a1 + 56);
      v11 = *(_QWORD *)(a1 + 64);
      v16 = v10;
      v17 = v11;
      objc_msgSend(v9, "get:", v15);

      goto LABEL_13;
    }
    v12 = *(_QWORD *)(a1 + 56);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetPresenterAssetViewController"));
    (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v13);

  }
  v14 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40));
  v9 = v14;
  if (v14)
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v14 + 2))(v14, 1, 0, 0);
LABEL_13:

}

void sub_1000B56C0(uint64_t a1)
{
  id v2;
  id v3;

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v2 + 2))(v2, 1, 0, 0);
    v2 = v3;
  }

}

void sub_1000B5720(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  int8x16_t v9;
  _QWORD v10[4];
  id v11;
  int8x16_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000B57F8;
  v10[3] = &unk_1008E9468;
  v11 = v3;
  v9 = *(int8x16_t *)(a1 + 32);
  v5 = (id)v9.i64[0];
  v12 = vextq_s8(v9, v9, 8uLL);
  v13 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v14 = v6;
  v15 = v7;
  v8 = v3;
  objc_msgSend(v4, "commit:", v10);

}

void sub_1000B57F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD v8[5];
  id v9;
  id v10;
  uint64_t v11;

  objc_msgSend(*(id *)(a1 + 32), "setMinifiedBarHidden:", 1);
  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000B58B4;
  v8[3] = &unk_1008E9440;
  v8[4] = v5;
  v9 = v4;
  v6 = *(id *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v10 = v6;
  v11 = v7;
  objc_msgSend(v5, "_replacePresenterWithTransaction:oldPresenter:newPresenter:completion:", v2, v3, v9, v8);

}

void sub_1000B58B4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  id v8;
  uint64_t v9;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000B594C;
  v6[3] = &unk_1008E7658;
  v7 = *(id *)(a1 + 48);
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  v8 = v4;
  v9 = v5;
  objc_msgSend(v2, "_popToPresenterIfNeeded:completion:", v3, v6);

}

void sub_1000B594C(uint64_t a1)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  objc_msgSend(*(id *)(a1 + 40), "setMinifiedBarHidden:", 0);
  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v2 + 2))(v2, 1, 0, 0);
    v2 = v3;
  }

}

void sub_1000B59B4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[6];
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t);
  id v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneHosting"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "defaultSceneControllerForTransaction:", *(_QWORD *)(a1 + 40)));
  v4 = BUProtocolCast(&OBJC_PROTOCOL___BKSceneControlling, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v16 = 0;
  v17 = &v16;
  v18 = 0x3032000000;
  v19 = sub_10004E370;
  v20 = sub_10004E238;
  v21 = 0;
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(void **)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1000B5AD4;
  v15[3] = &unk_1008E94B8;
  v15[4] = *(_QWORD *)(a1 + 80);
  v15[5] = &v16;
  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "_pushLargeCoverAndOpenBook:options:minifiedPresenter:animated:transaction:completion:", v8, v9, v10, 1, v12, v15));
  v14 = (void *)v17[5];
  v17[5] = v13;

  _Block_object_dispose(&v16, 8);
}

void sub_1000B5AD4(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v2 + 2))(v2, 1, 0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
    v2 = v3;
  }

}

void sub_1000B5B30(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  uint64_t v29;

  kdebug_trace(725353096, 0, 0, 0, 0);
  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 141558274;
    v27 = 1752392040;
    v28 = 2112;
    v29 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: _obtainImageForAsset begin. assetID: %{mask.hash}@", buf, 0x16u);
  }

  v5 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 80) + 16))();
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = *(void **)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1000B5D0C;
  v15[3] = &unk_1008E95A8;
  v16 = v7;
  v17 = *(id *)(a1 + 56);
  v18 = *(id *)(a1 + 48);
  v11 = *(id *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 40);
  v19 = v11;
  v20 = v12;
  v24 = *(_WORD *)(a1 + 104);
  v13 = *(id *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 96);
  v22 = v13;
  v23 = v14;
  v25 = *(_BYTE *)(a1 + 106);
  v21 = *(id *)(a1 + 72);
  objc_msgSend(v8, "_obtainImageForAsset:withAssetIdentifier:options:withTransaction:completion:", v6, v16, v9, v10, v15);

}

void sub_1000B5D0C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  id v39;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  kdebug_trace(725353100, 0, 0, 0, 0);
  v10 = sub_1000ABB38();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 141558530;
    v35 = 1752392040;
    v36 = 2112;
    v37 = v12;
    v38 = 2112;
    v39 = v9;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: _obtainImageForAsset end. assetID: %{mask.hash}@ error: %@", buf, 0x20u);
  }

  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1000B5F18;
  v20[3] = &unk_1008E9580;
  v13 = *(void **)(a1 + 40);
  v21 = *(id *)(a1 + 48);
  v22 = v7;
  v23 = v8;
  v14 = *(id *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v24 = v14;
  v25 = v15;
  v26 = *(id *)(a1 + 40);
  v31 = *(_BYTE *)(a1 + 96);
  v27 = *(id *)(a1 + 32);
  v32 = *(_BYTE *)(a1 + 97);
  v16 = *(id *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 88);
  v29 = v16;
  v30 = v17;
  v33 = *(_BYTE *)(a1 + 98);
  v28 = *(id *)(a1 + 72);
  v18 = v8;
  v19 = v7;
  objc_msgSend(v13, "commit:", v20);

}

void sub_1000B5F18(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  BCMutableFutureValue *v6;
  id v7;
  uint64_t v8;
  BCMutableFutureValue *v9;
  id v10;
  void *v11;
  BCMutableFutureValue *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  id v17;
  int8x16_t v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  int8x16_t v23;
  id v24;
  id v25;
  uint64_t v26;
  char v27;
  _QWORD v28[4];
  void *v29;
  _QWORD v30[4];
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  BCMutableFutureValue *v35;
  id v36;
  char v37;
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  uint64_t v41;

  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 40), CFSTR("BKBookPresentingCoverImage"));
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 48), CFSTR("BKBookPresentingCoverShadowImage"));
  v2 = *(void **)(a1 + 56);
  if (!v2)
    goto LABEL_6;
  if ((objc_msgSend(v2, "minifiedAssetPresenterCanPresentAssetFromStoreTab") & 1) == 0)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "_bookFlowAssetPresentingForShowAssetAction:", *(_QWORD *)(a1 + 72)));
    objc_msgSend(v3, "presenterEnsureCanOpenBookInCurrentContext:", *(unsigned __int8 *)(a1 + 112));

  }
  v4 = *(void **)(a1 + 56);
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "minifiedAssetPresenterAssetViewControllerFuture"));
    v6 = objc_opt_new(BCMutableFutureValue);
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_1000B625C;
    v30[3] = &unk_1008E9508;
    v31 = *(id *)(a1 + 56);
    v7 = *(id *)(a1 + 80);
    v8 = *(_QWORD *)(a1 + 64);
    v32 = v7;
    v33 = v8;
    v34 = *(id *)(a1 + 32);
    v37 = *(_BYTE *)(a1 + 113);
    v9 = v6;
    v35 = v9;
    v36 = *(id *)(a1 + 96);
    objc_msgSend(v5, "get:", v30);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_1000B63A8;
    v28[3] = &unk_1008E7F00;
    v29 = v5;
    v10 = v5;
    -[BCMutableFutureValue get:](v9, "get:", v28);
    v11 = v29;
    v12 = v9;

  }
  else
  {
LABEL_6:
    v13 = *(_QWORD *)(a1 + 80);
    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "libraryAssetProvider"));
    v12 = (BCMutableFutureValue *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController futureViewControllerWithAssetIdentifier:libraryAssetProvider:options:](BKAssetPresentingViewController, "futureViewControllerWithAssetIdentifier:libraryAssetProvider:options:", v13, v10, *(_QWORD *)(a1 + 32)));
  }

  v14 = sub_1000ABB38();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    v16 = *(_QWORD *)(a1 + 80);
    *(_DWORD *)buf = 141558274;
    v39 = 1752392040;
    v40 = 2112;
    v41 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: Getting futureViewController. assetID: %{mask.hash}@", buf, 0x16u);
  }

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1000B6420;
  v19[3] = &unk_1008E9558;
  v20 = *(id *)(a1 + 80);
  v21 = *(id *)(a1 + 72);
  v22 = 0;
  v18 = *(int8x16_t *)(a1 + 56);
  v17 = (id)v18.i64[0];
  v23 = vextq_s8(v18, v18, 8uLL);
  v26 = *(_QWORD *)(a1 + 104);
  v27 = *(_BYTE *)(a1 + 114);
  v24 = *(id *)(a1 + 88);
  v25 = *(id *)(a1 + 32);
  -[BCMutableFutureValue get:](v12, "get:", v19);

}

void sub_1000B625C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  v16 = a2;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = a3;
  if ((objc_opt_respondsToSelector(v5, "assetPresentingViewControllerClass") & 1) != 0)
    v7 = (objc_class *)objc_msgSend(*(id *)(a1 + 32), "assetPresentingViewControllerClass");
  else
    v7 = (objc_class *)objc_opt_class(BKAssetPresentingViewController);
  if (v16)
  {
    v8 = [v7 alloc];
    v9 = *(_QWORD *)(a1 + 40);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedAssetPresenterAssetHelper"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "libraryAssetProvider"));
    v12 = objc_msgSend(v8, "initWithAssetIdentifier:assetViewController:helper:libraryAssetProvider:", v9, v16, v10, v11);

  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(*(id *)(a1 + 56), "mutableCopy");
  v14 = v13;
  if (!*(_BYTE *)(a1 + 80))
    objc_msgSend(v13, "removeObjectForKey:", CFSTR("BKAssetPresentingOpenLocationKey"));
  v15 = objc_msgSend(v14, "copy");
  objc_msgSend(v12, "setOpenOptions:", v15);

  objc_msgSend(*(id *)(a1 + 64), "set:error:", v12, v6);
  (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();

}

void sub_1000B63A8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  unsigned int v5;
  id v6;

  v6 = a3;
  if (objc_msgSend(v6, "code") == (id)1)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "domain"));
    v5 = objc_msgSend(v4, "isEqualToString:", BCFutureErrorDomain);

    if (v5)
      objc_msgSend(*(id *)(a1 + 32), "cancel");
  }

}

void sub_1000B6420(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  uint64_t v23;
  _QWORD v24[4];
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  char v35;
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  id v41;
  __int16 v42;
  id v43;

  v5 = a2;
  v6 = a3;
  v7 = sub_1000ABB38();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 141558786;
    v37 = 1752392040;
    v38 = 2112;
    v39 = v9;
    v40 = 2112;
    v41 = v5;
    v42 = 2112;
    v43 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: Got futureViewController. assetID: %{mask.hash}@ viewController: %@ error: %@", buf, 0x2Au);
  }

  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000B6644;
  v24[3] = &unk_1008E9530;
  v10 = *(void **)(a1 + 40);
  v25 = *(id *)(a1 + 48);
  v11 = *(id *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(void **)(a1 + 64);
  v26 = v11;
  v27 = v12;
  v14 = v13;
  v15 = *(_QWORD *)(a1 + 88);
  v28 = v14;
  v29 = v5;
  v34 = v15;
  v30 = v6;
  v31 = *(id *)(a1 + 40);
  v35 = *(_BYTE *)(a1 + 96);
  v32 = *(id *)(a1 + 72);
  v33 = *(id *)(a1 + 80);
  v16 = v6;
  v17 = v5;
  objc_msgSend(v10, "commit:", v24);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_1000B6B3C;
  v21[3] = &unk_1008E76D0;
  v18 = *(void **)(a1 + 40);
  v19 = *(id *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 88);
  v22 = v19;
  v23 = v20;
  objc_msgSend(v18, "whenCancelled:", v21);

}

void sub_1000B6644(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  _QWORD v33[4];
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  uint64_t v41;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = sub_1000ABB38();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 141558274;
      v39 = 1752392040;
      v40 = 2112;
      v41 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: minifiedPresenterOpenMinified begin. assetID: %{mask.hash}@", buf, 0x16u);
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "minifiedPresenter"));
    v6 = *(_QWORD *)(a1 + 56);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1000B6920;
    v33[3] = &unk_1008E9440;
    v7 = *(id *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    v9 = *(void **)(a1 + 56);
    v34 = v7;
    v35 = v8;
    v10 = v9;
    v11 = *(_QWORD *)(a1 + 104);
    v36 = v10;
    v37 = v11;
    objc_msgSend(v5, "minifiedPresenterPrepareToOpen:animated:completion:", v6, 0, v33);

    v12 = v34;
  }
  else if (*(_QWORD *)(a1 + 64) && !*(_QWORD *)(a1 + 72))
  {
    v19 = sub_1000ABB38();
    v20 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      v21 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 141558274;
      v39 = 1752392040;
      v40 = 2112;
      v41 = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: _presentViewController begin. assetID: %{mask.hash}@", buf, 0x16u);
    }

    v22 = *(void **)(a1 + 48);
    v23 = *(_QWORD *)(a1 + 64);
    v24 = *(_BYTE *)(a1 + 112) == 0;
    v25 = *(_QWORD *)(a1 + 80);
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "_viewForCardOverlayFromOptions:", *(_QWORD *)(a1 + 88)));
    v27 = *(_QWORD *)(a1 + 96);
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_1000B6A3C;
    v30[3] = &unk_1008E76D0;
    v28 = *(id *)(a1 + 40);
    v29 = *(_QWORD *)(a1 + 104);
    v31 = v28;
    v32 = v29;
    objc_msgSend(v22, "_presentViewController:transaction:animated:overlayView:options:completion:", v23, v25, v24, v26, v27, v30);

    v12 = v31;
  }
  else
  {
    v13 = sub_1000ABB38();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_10069E9E8(a1, v14, v15);

    v16 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40));
    v12 = v16;
    if (v16)
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v16 + 2))(v16, 0, *(_QWORD *)(a1 + 72), 0);
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = 0;

  }
}

void sub_1000B6920(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v10 = 141558274;
    v11 = 1752392040;
    v12 = 2112;
    v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: minifiedPresenterOpenMinified end. assetID: %{mask.hash}@", (uint8_t *)&v10, 0x16u);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "minifiedPresenter"));
  objc_msgSend(v5, "minifiedPresenterOpenMinified:", *(_QWORD *)(a1 + 48));

  v6 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v6 + 2))(v6, 1, 0, 0);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1000B6A3C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v9 = 141558274;
    v10 = 1752392040;
    v11 = 2112;
    v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: _presentViewController end. assetID: %{mask.hash}@", (uint8_t *)&v9, 0x16u);
  }

  v5 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v5 + 2))(v5, 1, 0, 0);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = 0;

}

void sub_1000B6B3C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v9 = 141558274;
    v10 = 1752392040;
    v11 = 2112;
    v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: openBlock: transaction cancelled. assetID: %{mask.hash}@", (uint8_t *)&v9, 0x16u);
  }

  v5 = objc_retainBlock(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, _QWORD, _QWORD, _QWORD))v5 + 2))(v5, 0, 0, 0);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = 0;

}

void sub_1000B6C3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSMutableArray *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  _BYTE v27[128];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentAssetPresentersForSingleSceneWithTransaction:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = objc_opt_new(NSMutableArray);
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v6 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v20;
LABEL_3:
    v10 = 0;
    while (1)
    {
      if (*(_QWORD *)v20 != v9)
        objc_enumerationMutation(v6);
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), *(id *)(*((_QWORD *)&v19 + 1) + 8 * v10));
      if (((*(uint64_t (**)(void))(*(_QWORD *)(a1 + 56) + 16))() & 1) != 0)
        break;
      v11 = sub_1000ABB38();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        v13 = *(_QWORD *)(a1 + 48);
        *(_DWORD *)buf = 141558274;
        v24 = 1752392040;
        v25 = 2112;
        v26 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: closePresenterIfNeededThenOpenBlock: going to close presenter in order to open assetID: %{mask.hash}@", buf, 0x16u);
      }

      -[NSMutableArray addObject:](v5, "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
      if (v8 == (id)++v10)
      {
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
        if (v8)
          goto LABEL_3;
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = 0;

  }
  v16 = sub_1000ABB38();
  v17 = objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    v18 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 141558274;
    v24 = 1752392040;
    v25 = 2112;
    v26 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: closePresenterIfNeededThenOpenBlock: closing any presenters necessary, then opening assetID: %{mask.hash}@", buf, 0x16u);
  }

  objc_msgSend(*(id *)(a1 + 32), "_closePresenters:animated:completion:", v5, *(_BYTE *)(a1 + 88) == 0, *(_QWORD *)(a1 + 64));
}

void sub_1000B6EC4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  uint8_t buf[4];
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "minifiedPresenterAssetCurrentPresenters"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "minifiedAssetPresenterAssetID"));
  v5 = objc_msgSend(*(id *)(a1 + 40), "minifiedAssetPresenterIsAudiobook");
  v6 = sub_1000ABB38();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 141558274;
    v13 = 1752392040;
    v14 = 2112;
    v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: closeCurrentBookIfNeededThenOpenBlock: _closeMinifiedPresenters begin. assetID: %{mask.hash}@", buf, 0x16u);
  }

  v9 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000B702C;
  v10[3] = &unk_1008E7818;
  v11 = *(id *)(a1 + 56);
  objc_msgSend(v9, "_closeMinifiedPresenters:excludeAssetID:isAudiobook:completion:", v3, v4, v5, v10);

}

uint64_t sub_1000B702C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B7038(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  int8x16_t v6;
  _QWORD v7[4];
  int8x16_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint8_t buf[4];
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v2 = sub_1000ABB38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 141558274;
    v13 = 1752392040;
    v14 = 2112;
    v15 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: compoundOpenBlock: requireTargetSceneController begin. assetID: %{mask.hash}@", buf, 0x16u);
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000B7180;
  v7[3] = &unk_1008E9620;
  v11 = *(_QWORD *)(a1 + 64);
  v6 = *(int8x16_t *)(a1 + 40);
  v5 = (id)v6.i64[0];
  v8 = vextq_s8(v6, v6, 8uLL);
  v9 = *(id *)(a1 + 32);
  v10 = *(id *)(a1 + 56);
  objc_msgSend(v5, "requireTargetSceneController:", v7);

}

void sub_1000B7180(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  uint8_t buf[4];
  uint64_t v15;
  __int16 v16;
  uint64_t v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneHosting"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "defaultSceneControllerForTransaction:", *(_QWORD *)(a1 + 40)));
  v4 = BUProtocolCast(&OBJC_PROTOCOL___BKSceneControlling, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookFlowAssetPresentingForShowAssetAction:", *(_QWORD *)(a1 + 40)));
  v9 = sub_1000ABB38();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 141558274;
    v15 = 1752392040;
    v16 = 2112;
    v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "_showAssetWithoutStateRestoration: compoundOpenBlock: presenterWaitForAssetPresenterTransitionsToFinishIfNeededWithCompletion begin. assetID: %{mask.hash}@", buf, 0x16u);
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B72F4;
  v12[3] = &unk_1008E7818;
  v13 = *(id *)(a1 + 56);
  objc_msgSend(v8, "presenterWaitForAssetPresenterTransitionsToFinishIfNeededWithCompletion:", v12);

}

uint64_t sub_1000B72F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1000B7300(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1000B7464(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presenterDismissModalController:animated:completion:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48));
}

void sub_1000B75EC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  v3 = *(void **)(a1 + 40);
  v5 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastObject"));

  if (v3 != v4)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/Classes/BKBookFlowController.m", 1954, "-[BKBookFlowController _closePresenters:animated:completion:]_block_invoke", "presenter == [updatedPresenters lastObject]", CFSTR("presenter should be the last element in this updatedPresenters array"));
  objc_msgSend(v5, "removeLastObject");
  objc_msgSend(*(id *)(a1 + 48), "_closePresenters:animated:completion:", v5, *(unsigned __int8 *)(a1 + 64), *(_QWORD *)(a1 + 56));

}

void sub_1000B7878(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 48), "_closeMinifiedPresenters:excludeAssetID:isAudiobook:completion:", v2, *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 72), *(_QWORD *)(a1 + 64));

}

uint64_t sub_1000B78D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000B7C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B7C90(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v4 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  objc_msgSend(v2, "deleteAssetIDs:", v3);

}

void sub_1000B7D2C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "storePresenter"));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "presenterSceneController"));
  v4 = objc_msgSend(v3, "newShowURLTransaction");
  objc_msgSend(v5, "storeShowBookWithStoreID:resourceType:transaction:", v2, 3, v4);

}

void sub_1000B8004(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 40));
    v2 = v3;
  }

}

void sub_1000B8224(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD block[4];
  id v8;
  uint64_t v9;
  id v10;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "url"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B82C0;
  block[3] = &unk_1008E7928;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1000B82C0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "absoluteString"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastPathComponent"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByDeletingPathExtension"));

  objc_msgSend(*(id *)(a1 + 40), "showNotEnoughMemAlertWithTransaction:name:", *(_QWORD *)(a1 + 48), v4);
}

void sub_1000B87F8(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  v4 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  objc_msgSend(v2, "deleteAssets:exhaustive:", v3, 0);

}

void sub_1000B8894(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryAssetProvider"));
  v6 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v2, "deleteAssets:exhaustive:", v3, 0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", CFSTR("prefs:root=General&path=STORAGE_ICLOUD_USAGE")));
  objc_msgSend(v4, "openSensitiveURL:withOptions:", v5, 0);

}

void sub_1000B8B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B8B50(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD block[5];
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000B8BFC;
  block[3] = &unk_1008E8CF0;
  v4 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v9 = v3;
  v10 = v4;
  v5 = *(id *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v11 = v5;
  v12 = v6;
  v7 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1000B8BFC(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(a1 + 32), "_presentItem:transaction:host:source:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0, 0, *(_QWORD *)(a1 + 56));
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

void sub_1000B9110(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;

  v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000B91D4;
  v7[3] = &unk_1008E78B8;
  v5 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v8 = v3;
  v9 = v4;
  v10 = *(id *)(a1 + 48);
  v11 = *(id *)(a1 + 56);
  v12 = *(id *)(a1 + 32);
  v6 = v3;
  objc_msgSend(v5, "commit:", v7);

}

void sub_1000B91D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  int8x16_t v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  _QWORD v12[4];
  int8x16_t v13;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "minifiedPresenter"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000B9318;
    v12[3] = &unk_1008E7338;
    v7 = *(int8x16_t *)(a1 + 32);
    v13 = vextq_s8(v7, v7, 8uLL);
    objc_msgSend(v2, "minifiedPresenterPrepareToOpen:animated:completion:", (id)v7.i64[0], 0, v12);

  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController holdAnimationAssertion](BKAssetPresentingViewController, "holdAnimationAssertion", *(_OWORD *)&v7));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_largeCoverViewControllerForBook:options:transaction:minifiedPresenter:holdAnimationAssertion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 32), v3));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000B9358;
  v8[3] = &unk_1008E97B0;
  v5 = *(id *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = v5;
  v10 = v6;
  v11 = *(id *)(a1 + 56);
  objc_msgSend(v4, "get:", v8);

}

void sub_1000B9318(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "minifiedPresenter"));
  objc_msgSend(v2, "minifiedPresenterOpen:", *(_QWORD *)(a1 + 40));

}

void sub_1000B9358(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[5];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000B9404;
  v6[3] = &unk_1008E7B70;
  v4 = *(void **)(a1 + 32);
  v6[4] = *(_QWORD *)(a1 + 40);
  v7 = v3;
  v8 = v4;
  v9 = *(id *)(a1 + 48);
  v5 = v3;
  objc_msgSend(v4, "commit:", v6);

}

id sub_1000B9404(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_presentViewController:transaction:animated:overlayView:options:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 1, 0, *(_QWORD *)(a1 + 56), 0);
}

void sub_1000B9420(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKBasePresentingViewController holdAnimationAssertion](BKAssetPresentingViewController, "holdAnimationAssertion"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAssetID identifierWithAssetID:](BKAssetID, "identifierWithAssetID:", a1[4]));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "_largeCoverViewControllerForAssetIdentifier:download:options:minifiedPresenter:holdAnimationAssertion:withTransaction:", v3, 1, a1[6], 0, v2, a1[7]));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000B9534;
  v7[3] = &unk_1008E9828;
  v8 = a1[7];
  v9 = a1[6];
  v5 = a1[4];
  v6 = a1[5];
  v10 = v5;
  v11 = v6;
  v12 = a1[8];
  objc_msgSend(v4, "get:", v7);

}

void sub_1000B9534(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;

  v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000B9608;
  v8[3] = &unk_1008E9800;
  v4 = *(void **)(a1 + 32);
  v9 = *(id *)(a1 + 40);
  v5 = *(id *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v10 = v5;
  v11 = v6;
  v12 = *(id *)(a1 + 32);
  v13 = *(id *)(a1 + 64);
  v14 = v3;
  v7 = v3;
  objc_msgSend(v4, "commit:", v8);

}

void sub_1000B9608(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _QWORD *v14;
  _QWORD v15[5];
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;

  kdebug_trace(725354680, 0, 0, 0, 0);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_1000B9824;
  v21[3] = &unk_1008E7338;
  v22 = *(id *)(a1 + 32);
  v23 = *(id *)(a1 + 40);
  v2 = objc_retainBlock(v21);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "currentAssetPresentersForSingleSceneWithTransaction:", *(_QWORD *)(a1 + 56)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_viewForCardOverlayFromOptions:", *(_QWORD *)(a1 + 64)));
  v6 = *(void **)(a1 + 48);
  if (v4)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000B9908;
    v15[3] = &unk_1008E9138;
    v15[4] = v6;
    v16 = *(id *)(a1 + 72);
    v17 = *(id *)(a1 + 56);
    v18 = v5;
    v19 = *(id *)(a1 + 32);
    v20 = v2;
    v7 = v2;
    objc_msgSend(v6, "_closePresenter:animated:completion:", v4, v5 == 0, v15);

    v8 = v16;
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 72);
    v10 = *(_QWORD *)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000B99D4;
    v13[3] = &unk_1008E7818;
    v14 = v2;
    v12 = v2;
    objc_msgSend(v6, "_presentViewController:transaction:animated:overlayView:options:completion:", v9, v10, 1, v5, v11, v13);
    v8 = v14;
  }

  kdebug_trace(725354684, 0, 0, 0, 0);
}

void sub_1000B9824(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("BKBookPresentingEphemeral")));
  v3 = objc_msgSend(v2, "BOOLValue");

  if (v3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000B98F4;
    v6[3] = &unk_1008E92A0;
    v7 = (id)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
    v4 = *(void **)(a1 + 40);
    v8 = v4;
    v5 = v7;
    objc_msgSend(v5, "resolveToLocalAssetWithAssetID:completion:", v4, v6);

  }
}

id sub_1000B98F4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "updateLibraryAssetWithID:isEphemeral:completion:", *(_QWORD *)(a1 + 40), 1, 0);
}

void sub_1000B9908(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000B99A0;
  v6[3] = &unk_1008E7818;
  v5 = *(_QWORD *)(a1 + 64);
  v7 = *(id *)(a1 + 72);
  objc_msgSend(v1, "_presentViewController:transaction:animated:overlayView:options:completion:", v2, v3, 1, v4, v5, v6);

}

void sub_1000B99A0(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1000B99D4(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1000BAD70(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  id v21;
  _BYTE v22[128];
  const __CFString *v23;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager fetchRequestForRecentlyEngaged](BKLibraryManager, "fetchRequestForRecentlyEngaged"));
  v23 = CFSTR("assetID");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v23, 1));
  objc_msgSend(v4, "setPropertiesToFetch:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v21 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v4, &v21));
  v8 = v21;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v9 = v7;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v18;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v18 != v12)
          objc_enumerationMutation(v9);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v13), "assetID", (_QWORD)v17));
        objc_msgSend(v6, "addObject:", v14);

        v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v11);
  }

  v15 = objc_retainBlock(*(id *)(a1 + 32));
  v16 = v15;
  if (v15)
    (*((void (**)(id, void *))v15 + 2))(v15, v6);

}

void sub_1000BAF48(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100063E9C;
  block[3] = &unk_1008E7458;
  block[4] = *(_QWORD *)(a1 + 32);
  if (qword_1009F4E90 != -1)
    dispatch_once(&qword_1009F4E90, block);
}

void sub_1000BB3F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD v6[5];
  id v7;
  char v8;

  objc_msgSend(*(id *)(a1 + 32), "presenterVisibleViewControllerWillChangeAnimated:", *(unsigned __int8 *)(a1 + 64));
  v2 = *(void **)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(unsigned __int8 *)(a1 + 64);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000BB490;
  v6[3] = &unk_1008E80D0;
  v5 = *(id *)(a1 + 56);
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v5;
  v8 = *(_BYTE *)(a1 + 64);
  objc_msgSend(v2, "presentViewController:animated:completion:", v3, v4, v6);

}

id sub_1000BB490(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  return objc_msgSend(*(id *)(a1 + 32), "presenterVisibleViewControllerDidChangeAnimated:", *(unsigned __int8 *)(a1 + 48));
}

void sub_1000BB5D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v5[5];
  id v6;
  char v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(unsigned __int8 *)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000BB668;
  v5[3] = &unk_1008E80D0;
  v4 = *(id *)(a1 + 48);
  v5[4] = *(_QWORD *)(a1 + 40);
  v6 = v4;
  v7 = *(_BYTE *)(a1 + 56);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", v3, v5);

}

id sub_1000BB668(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  return objc_msgSend(*(id *)(a1 + 32), "presenterVisibleViewControllerDidChangeAnimated:", *(unsigned __int8 *)(a1 + 48));
}

id sub_1000BB7A4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presenterDismissAllModalControllersAnimated:completion:", *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

id sub_1000BBA24(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

id sub_1000BBE3C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "terminateSession");
}

void sub_1000BC33C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1000BC39C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = objc_msgSend(WeakRetained, "analyticsBackgroundTaskIdentifier");
    v8 = *(_QWORD *)(a1 + 32);
    v7 = a1 + 32;
    *(_QWORD *)(*(_QWORD *)(v8 + 8) + 24) = v4;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 8) + 24) != UIBackgroundTaskInvalid)
    {
      v9 = BALog(v4, v5, v6);
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_10069EBD4(v7, v10, v11, v12, v13, v14, v15, v16);

      v17 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
      objc_msgSend(v17, "endBackgroundTask:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 8) + 24));

      objc_msgSend(v3, "setAnalyticsBackgroundTaskIdentifier:", UIBackgroundTaskInvalid);
    }
  }

}

void sub_1000BC730(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsSessionAssertion"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v2 != 0;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v3, "analyticsManagerForceEndSession:", *(_QWORD *)(a1 + 32));

}

void sub_1000BC794(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  int v11;
  id v12;
  __int128 v13;
  _QWORD block[5];
  __int128 v15;
  char v16;
  uint8_t buf[4];
  int v18;
  __int16 v19;
  unsigned int v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsController"));
  v3 = objc_msgSend(v2, "waitForSessionEnd:", 10.0);

  if ((v3 & 1) == 0)
  {
    v7 = BALog(v4, v5, v6);
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10069EC44();

  }
  v9 = BALog(v4, v5, v6);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    *(_DWORD *)buf = 67109376;
    v18 = v11;
    v19 = 1024;
    v20 = v3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "resetSessionWithCompletion: waitForSessionEnd completed. inSession: %d sessionEnded: %d", buf, 0xEu);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000BC908;
  block[3] = &unk_1008E9948;
  v16 = v3;
  block[4] = *(_QWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 40);
  v12 = (id)v13;
  v15 = v13;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1000BC908(uint64_t a1)
{
  void *v2;
  void (**v3)(void);
  void (**v4)(void);

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) && *(_BYTE *)(a1 + 56))
  {
    objc_msgSend(*(id *)(a1 + 32), "analyticsStartSession");
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    objc_msgSend(v2, "analyticsManagerDidRestoreSession:", *(_QWORD *)(a1 + 32));

  }
  v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    v4 = v3;
    v3[2]();
    v3 = v4;
  }

}

void sub_1000BD244(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "importingOperationsInFlight"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "valueForKey:", CFSTR("asset")));
  v4 = objc_retainBlock(*(id *)(a1 + 40));
  v5 = v4;
  if (v4)
    (*((void (**)(id, void *, _QWORD))v4 + 2))(v4, v3, 0);

}

void sub_1000BD51C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "importingOperationsInFlight"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "asset"));
  if (v3)
  {
    v4 = objc_retainBlock(*(id *)(a1 + 48));
    v5 = v4;
    if (v4)
      (*((void (**)(id, void *, _QWORD))v4 + 2))(v4, v3, 0);

  }
}

void sub_1000BD720(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  id v12;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "path"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BLLibraryUtility identifierFromBookPath:error:](BLLibraryUtility, "identifierFromBookPath:error:", v2, 0));

  if (!v3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/datasources/BKLibraryDataSourcePlistImporting.m", 318, "-[BKLibraryDataSourcePlistImporting importURL:openInPlace:options:completion:]_block_invoke", "assetID", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000BD838;
  v8[3] = &unk_1008E99C0;
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v9 = v3;
  v10 = v5;
  v12 = v6;
  v11 = *(id *)(a1 + 32);
  v7 = v3;
  objc_msgSend(v4, "performBackgroundReadOnlyBlock:", v8);

}

void sub_1000BD838(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[5];
  id v16;
  id v17;
  uint8_t buf[16];

  v3 = a2;
  if (!*(_QWORD *)(a1 + 32))
  {
    v5 = 0;
LABEL_11:
    v13 = *(_QWORD *)(a1 + 32);
    v12 = *(void **)(a1 + 40);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "path"));
    objc_msgSend(v12, "p_importBookWithAssetID:srcPath:completion:", v13, v14, *(_QWORD *)(a1 + 56));

    goto LABEL_12;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "libraryAssetWithAssetID:inManagedObjectContext:", *(_QWORD *)(a1 + 32), v3));

  if (!v5)
    goto LABEL_11;
  if ((objc_msgSend(v5, "isLocal") & 1) == 0
    && (objc_msgSend(v5, "isDownloading") & 1) == 0
    && (objc_msgSend(v5, "isUbiquitousBook") & 1) == 0)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dataSourceIdentifier"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    v8 = objc_msgSend(v6, "isEqualToString:", v7);

    if (!v8)
      goto LABEL_11;
  }
  v9 = BKLibraryBookImportLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourcePlistImporting: libraryAsset already exists, not importing.", buf, 2u);
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1000BDA08;
  v15[3] = &unk_1008E9998;
  v15[4] = *(_QWORD *)(a1 + 40);
  v17 = *(id *)(a1 + 56);
  v16 = *(id *)(a1 + 48);
  objc_msgSend(v11, "assetForLibraryAsset:completion:", v5, v15);

LABEL_12:
}

void sub_1000BDA08(id *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v10 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "libraryManager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v3, "updateLibraryAssetWithID:withLastOpenDate:completion:", v4, v5, 0);

  v6 = objc_retainBlock(a1[6]);
  v7 = v6;
  if (v6)
    (*((void (**)(id, id, _QWORD))v6 + 2))(v6, v10, 0);

  v8 = a1[4];
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "path"));
  objc_msgSend(v8, "p_deletePath:", v9);

}

void sub_1000BDBAC(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  id obj;
  void *v18;
  void *v19;
  _QWORD block[4];
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];

  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "enumeratorAtPath:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "skipDescendants");
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", -300.0));
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  obj = v2;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v29;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v29 != v4)
          objc_enumerationMutation(obj);
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stringByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)i)));
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "attributesOfItemAtPath:error:", v6, 0));
        v8 = objc_opt_class(NSDate);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", NSFileCreationDate));
        v10 = BUDynamicCast(v8, v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

        if (v11 && (uint64_t)objc_msgSend(v11, "compare:", v18) <= 0)
        {
          v24 = 0;
          v25 = &v24;
          v26 = 0x2020000000;
          v27 = 0;
          v12 = *(void **)(a1 + 40);
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v6));
          LODWORD(v12) = objc_msgSend(v12, "canImportURL:openInPlace:options:", v13, 0, 0);

          if ((_DWORD)v12)
          {
            v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ivarSerialQueue"));
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472;
            block[2] = sub_1000BDEAC;
            block[3] = &unk_1008E99E8;
            v15 = v6;
            v23 = &v24;
            v16 = *(_QWORD *)(a1 + 40);
            v21 = v15;
            v22 = v16;
            dispatch_sync(v14, block);

          }
          if (!*((_BYTE *)v25 + 24))
            objc_msgSend(v19, "removeItemAtPath:error:", v6, 0);
          _Block_object_dispose(&v24, 8);
        }

      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
    }
    while (v3);
  }

}

void sub_1000BDE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000BDEAC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[BLLibraryUtility identifierFromBookPath:error:](BLLibraryUtility, "identifierFromBookPath:error:", *(_QWORD *)(a1 + 32), 0));
  if (v4)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "importingOperationsInFlight"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v4));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v3 != 0;

  }
}

void sub_1000BE718(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "importingOperationsInFlight"));
  objc_msgSend(v3, "setObject:forKeyedSubscript:", v2, *(_QWORD *)(a1 + 40));

}

void sub_1000BE7F8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  NSFileCoordinator *v9;
  void *v10;
  NSOperationQueue *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint8_t buf[4];
  id v23;

  v2 = objc_alloc((Class)NSURL);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "destinationFilePath"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "destinationFilePath"));
  v5 = objc_msgSend(v2, "initFileURLWithPath:isDirectory:", v3, +[BKLibraryManager isDirectoryFileName:](BKLibraryManager, "isDirectoryFileName:", v4));

  v6 = BKLibraryBookImportLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v23 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourcePlistImporting] extractOperationDidFinish with URL [%@]", buf, 0xCu);
  }

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileAccessIntent readingIntentWithURL:options:](NSFileAccessIntent, "readingIntentWithURL:options:", v5, 1));
  v9 = objc_opt_new(NSFileCoordinator);
  v21 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v21, 1));
  v11 = objc_opt_new(NSOperationQueue);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1000BE9F4;
  v16[3] = &unk_1008E9A38;
  v17 = v5;
  v18 = v8;
  v12 = *(id *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v19 = v12;
  v20 = v13;
  v14 = v8;
  v15 = v5;
  -[NSFileCoordinator coordinateAccessWithIntents:queue:byAccessor:](v9, "coordinateAccessWithIntents:queue:byAccessor:", v10, v11, v16);

}

void sub_1000BE9F4(id *a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  unsigned int v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  __CFString *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _BOOL4 v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  _QWORD v45[4];
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id location;
  void *v52;

  v3 = a2;
  v4 = BKLibraryBookImportLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    sub_10069ED48((uint64_t)a1, v5);

  if (v3)
  {
    v6 = BKLibraryBookImportLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_10069ECD4((uint64_t)a1, (uint64_t)v3, v7);
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[AEPluginRegistry sharedInstance](AEPluginRegistry, "sharedInstance"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "URL"));
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "pluginForURL:", v9));

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "URL"));
    v44 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject helperForURL:withOptions:](v7, "helperForURL:withOptions:", v10, 0));

    v11 = objc_opt_class(BKPlistImportingOperationAttributes);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "userContext"));
    v13 = BUDynamicCast(v11, v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

    v15 = objc_msgSend(v14, "contentType");
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "asset"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "assetID"));
    objc_msgSend(v16, "setAssetID:", v17);

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "temporaryAssetID"));
    objc_msgSend(v16, "setTemporaryAssetID:", v18);

    objc_msgSend(v16, "setContentType:", objc_msgSend(v14, "contentType"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "URL"));
    objc_msgSend(v16, "setUrl:", v19);

    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v16, "setDataSourceInsertionDate:", v20);

    objc_msgSend(v16, "setState:", 1);
    if (v15 != 3)
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "destinationFilePath"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "stringByAppendingPathComponent:", CFSTR("iTunesMetadata.plist")));

      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", v22));
      v24 = v23;
      if (v23)
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectForKeyedSubscript:", CFSTR("itemId")));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "stringValue"));
        objc_msgSend(v16, "setStoreID:", v26);

        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "objectForKeyedSubscript:", CFSTR("isSample")));
        objc_msgSend(v16, "setSample:", objc_msgSend(v27, "BOOLValue"));

      }
    }
    if (v44)
    {
      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "assetID"));
      if (v15 == 3)
        v28 = 0;
      else
        v28 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataTitleKey, 0));
      if (!-[__CFString length](v28, "length"))
      {
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "destinationFilePath"));
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "lastPathComponent"));
        v31 = objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "stringByDeletingPathExtension"));

        v28 = (__CFString *)v31;
      }
      if (-[__CFString length](v28, "length"))
      {
        objc_msgSend(v16, "setTitle:", v28);
        if (v15 == 3 && (objc_opt_respondsToSelector(v44, "setMetadata:forKey:") & 1) != 0)
        {
          if (-[__CFString hasPrefix:](v28, "hasPrefix:", CFSTR(".com.apple.UIKit.ItemProvider.")))
          {

            v28 = CFSTR("Untitled.pdf");
          }
          objc_msgSend(v44, "setMetadata:forKey:", v28, AEHelperStringMetadataTitleKey);
        }
      }
      v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataAuthorKey, 0));
      if (objc_msgSend(v43, "length"))
        objc_msgSend(v16, "setAuthor:", v43);
      v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataLanguageKey, 0));
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataPageProgressionKey, 0));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "metadataCache"));
      objc_msgSend(v32, "saveTitle:author:genre:language:pageProgressionDirection:forAssetID:", v28, v43, 0, v41, v40, v42);

      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "sortTitle"));
      v34 = objc_msgSend(v33, "length") == 0;

      if (v34)
      {
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "title"));
        objc_msgSend(v16, "setSortTitle:", v35);

      }
      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      objc_msgSend(v16, "setPurchaseDate:", v36);

      objc_initWeak(&location, a1[7]);
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "plistWriter"));
      v52 = v16;
      v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v52, 1));
      v45[0] = _NSConcreteStackBlock;
      v45[1] = 3221225472;
      v45[2] = sub_1000BF048;
      v45[3] = &unk_1008E9A10;
      objc_copyWeak(&v50, &location);
      v39 = v42;
      v46 = v39;
      v47 = v16;
      v48 = v14;
      v49 = a1[6];
      objc_msgSend(v37, "addPlistAssets:completion:", v38, v45);

      objc_destroyWeak(&v50);
      objc_destroyWeak(&location);

    }
  }

}

void sub_1000BF01C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_1000BF048(id *a1)
{
  id WeakRetained;
  uint64_t v3;
  NSObject *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  _QWORD block[5];
  id v14;
  id v15;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  void *v19;

  WeakRetained = objc_loadWeakRetained(a1 + 8);
  v3 = BKLibraryBookImportLog();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = a1[4];
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "url"));
    *(_DWORD *)buf = 138412546;
    v17 = v5;
    v18 = 2112;
    v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[BKLibraryDataSourcePlistImporting] now calling the reloadCounterpart for asset with assetID/URL [%@ | %@]", buf, 0x16u);

  }
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "reloadCounterpartHandler"));
  v8 = (void *)v7;
  if (v7)
    (*(void (**)(uint64_t))(v7 + 16))(v7);

  if (objc_msgSend(a1[6], "isZipArchive"))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "libraryManager"));
    objc_msgSend(v9, "libraryDataSource:removedAsset:", WeakRetained, a1[5]);

  }
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "importCompletionBlock"));
  v11 = (void *)v10;
  if (v10)
    (*(void (**)(uint64_t, id, _QWORD))(v10 + 16))(v10, a1[5], 0);

  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ivarSerialQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000BF21C;
  block[3] = &unk_1008E7928;
  block[4] = WeakRetained;
  v14 = a1[4];
  v15 = a1[7];
  dispatch_async(v12, block);

}

void sub_1000BF21C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "importingOperationsInFlight"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", 0, *(_QWORD *)(a1 + 40));

  v3 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "sourceFilePath"));
  objc_msgSend(v3, "p_deletePath:", v4);

}

void sub_1000BF630(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSErrorUserInfoKey v15;
  void *v16;

  v2 = objc_opt_class(BKPlistImportingOperationAttributes);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userContext"));
  v4 = BUDynamicCast(v2, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "asset"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "url"));

  if (v7)
  {
    v15 = NSURLErrorKey;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "url"));
    v16 = v8;
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v16, &v15, 1));

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, 512, v7));
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "importCompletionBlock"));
  v11 = (void *)v10;
  if (v10)
    (*(void (**)(uint64_t, _QWORD, void *))(v10 + 16))(v10, 0, v9);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "importingOperationsInFlight"));
  objc_msgSend(v12, "setObject:forKeyedSubscript:", 0, *(_QWORD *)(a1 + 48));

  v13 = *(void **)(a1 + 40);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sourceFilePath"));
  objc_msgSend(v13, "p_deletePath:", v14);

}

void sub_1000BF854(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  unsigned int v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  int v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  id v27;
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _QWORD v33[5];
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint8_t buf[4];
  void *v39;
  __int16 v40;
  void *v41;
  _BYTE v42[128];
  _QWORD v43[2];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist purchasesRepositoryPath](IMLibraryPlist, "purchasesRepositoryPath"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v1));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URLByResolvingSymlinksInPath"));

  v34 = 0;
  v35 = &v34;
  v36 = 0x2020000000;
  v37 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v43[0] = NSURLIsDirectoryKey;
  v43[1] = NSURLFileProtectionKey;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v43, 2));
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1000BFC94;
  v33[3] = &unk_1008E9A60;
  v33[4] = &v34;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v21, v4, 7, v33));

  v26 = objc_msgSend(*(id *)(a1 + 32), "_hasCleanedUpFileProtectionOnImportedFiles");
  v25 = objc_msgSend(*(id *)(a1 + 32), "_hasCleanedUpBackupAttributeOnImportedFiles");
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v6 = v5;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v42, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v30;
    v24 = 1;
    v22 = 1;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v30 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)i);
        v27 = 0;
        v28 = 0;
        v11 = objc_msgSend(v10, "getResourceValue:forKey:error:", &v28, NSURLIsDirectoryKey, &v27);
        v12 = v28;
        v13 = v27;
        v14 = v13;
        if (v11)
        {
          if ((objc_msgSend(v12, "BOOLValue") & 1) == 0)
          {
            if ((v26 & 1) == 0)
              v24 &= objc_msgSend(*(id *)(a1 + 32), "_cleanupFileProtectionOnItemAtURL:", v10);
            if ((v25 & 1) == 0)
            {
              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "path"));
              v16 = +[BKAssetUtilities contentTypeForPath:](BKAssetUtilities, "contentTypeForPath:", v15);

              if (v16 == 3)
                v22 &= objc_msgSend(*(id *)(a1 + 32), "_cleanupBackupAttributeOnItemAtURL:", v10);
            }
          }
        }
        else
        {
          *((_BYTE *)v35 + 24) = 1;
          v17 = BCIMLog(v13);
          v18 = objc_claimAutoreleasedReturnValue(v17);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            v39 = v10;
            v40 = 2112;
            v41 = v14;
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "error checking is directory on %@: %@", buf, 0x16u);
          }

        }
      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v42, 16);
    }
    while (v7);
  }
  else
  {
    LOBYTE(v24) = 1;
    LOBYTE(v22) = 1;
  }

  if (!*((_BYTE *)v35 + 24))
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v20 = v19;
    if (!(v26 & 1 | ((v24 & 1) == 0)))
      objc_msgSend(v19, "setBool:forKey:", 1, CFSTR("BKPlistImportingHasCheckedFileProtection"));
    if (!(v25 & 1 | ((v22 & 1) == 0)))
      objc_msgSend(v20, "setBool:forKey:", 1, CFSTR("BKPlistImportingHasCheckedBackupAttribute"));

  }
  _Block_object_dispose(&v34, 8);

}

void sub_1000BFC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BFC94(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;

  v5 = a2;
  v6 = a3;
  v7 = BCIMLog(v6);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    sub_10069EE6C();

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  return 1;
}

void sub_1000C03A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C03C4(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  id WeakRetained;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = objc_retainBlock(a1[5]);
    v8 = v7;
    if (v7)
      (*((void (**)(id, id, _QWORD))v7 + 2))(v7, v5, 0);

  }
  else
  {
    v9 = BKLibraryLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = a1[4];
      *(_DWORD *)buf = 141558530;
      v19 = 1752392040;
      v20 = 2112;
      v21 = v11;
      v22 = 2112;
      v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Unable to get cover image from QuickLook for url %{mask.hash}@ (error: %@), falling back on plugin registry...", buf, 0x20u);
    }

    WeakRetained = objc_loadWeakRetained(a1 + 6);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000C0590;
    v14[3] = &unk_1008E9AB0;
    v13 = a1[4];
    v16 = a1[5];
    v15 = a1[4];
    objc_copyWeak(&v17, a1 + 6);
    objc_msgSend(WeakRetained, "_pluginRegistryCoverImageFromURL:completion:", v13, v14);

    objc_destroyWeak(&v17);
  }

}

void sub_1000C0574(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000C0590(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  id WeakRetained;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16;
  uint8_t buf[4];
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  id v22;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = objc_retainBlock(*(id *)(a1 + 40));
    v8 = v7;
    if (v7)
      (*((void (**)(id, id, _QWORD))v7 + 2))(v7, v5, 0);

  }
  else
  {
    v9 = BKLibraryLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 141558530;
      v18 = 1752392040;
      v19 = 2112;
      v20 = v11;
      v21 = 2112;
      v22 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Unable to get cover image from plugin registry for url %{mask.hash}@ (error: %@), falling back on ImageIO...", buf, 0x20u);
    }

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    v13 = *(void **)(a1 + 32);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000C0724;
    v14[3] = &unk_1008E9A88;
    v15 = v13;
    v16 = *(id *)(a1 + 40);
    objc_msgSend(WeakRetained, "_imageIOCoverImageFromURL:completion:", v15, v14);

  }
}

void sub_1000C0724(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  void *v10;

  v5 = a2;
  v6 = a3;
  v7 = BKLibraryLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    sub_10069F150(a1, (uint64_t)v6, v8);

  v9 = objc_retainBlock(*(id *)(a1 + 40));
  v10 = v9;
  if (v9)
    (*((void (**)(id, id, id))v9 + 2))(v9, v5, v6);

}

void sub_1000C0910(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, void *, id);
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "UIImage"));
    v6[2](v6, v7, v5);

  }
}

void sub_1000C0A78(uint64_t a1, void *a2)
{
  void (**v3)(id, id, _QWORD);
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void (**)(id, id, _QWORD))objc_retainBlock(*(id *)(a1 + 32));
  if (v5)
  {
    if (v3)
      v3[2](v3, v5, 0);
  }
  else if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKAssetCoverImageDomain"), 1001, 0));
    ((void (**)(id, id, void *))v3)[2](v3, 0, v4);

  }
}

void sub_1000C0E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C0E9C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[4];
  id v13;
  __int16 v14;
  id v15;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = sub_1000CA2E0();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v7)
    {
      *(_DWORD *)buf = 134218242;
      v13 = objc_msgSend(v3, "code");
      v14 = 2112;
      v15 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Received error attempting to acquire slot: {c=%ld, (%@)}", buf, 0x16u);
    }

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000C102C;
    v10[3] = &unk_1008E7338;
    v10[4] = WeakRetained;
    v11 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

  }
  else
  {
    if (v7)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Slot acquisition was successful!", buf, 2u);
    }

    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "completion"));
    v9 = (void *)v8;
    if (v8)
      (*(void (**)(uint64_t))(v8 + 16))(v8);
    objc_msgSend(WeakRetained, "setCompletion:", 0);

  }
}

id sub_1000C102C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_handleTransferLockError:", *(_QWORD *)(a1 + 40));
}

void sub_1000C125C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C12A0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  BKAcquireSlotRequest *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint8_t buf[16];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (objc_msgSend(v3, "length"))
    {
      v5 = sub_1000CA2E0();
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Attempting to transfer device slot.", buf, 2u);
      }

      v7 = objc_alloc_init(BKAcquireSlotRequest);
      objc_msgSend(WeakRetained, "setAcquireSlotRequest:", v7);

      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "acquireSlotRequest"));
      objc_msgSend(v8, "setAdditionalParams:", v3);

      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "acquireSlotRequest"));
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1000C13F4;
      v11[3] = &unk_1008E8948;
      v11[4] = WeakRetained;
      objc_msgSend(v9, "performRequestWithResponseHandler:", v11);
    }
    else
    {
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "completion"));
      v9 = (void *)v10;
      if (v10)
        (*(void (**)(uint64_t))(v10 + 16))(v10);
      objc_msgSend(WeakRetained, "setCompletion:", 0);
    }

  }
}

void sub_1000C13F4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  const char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint32_t v10;
  uint64_t v11;
  void *v12;
  _BYTE v13[24];

  v3 = a2;
  v4 = sub_1000CA2E0();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      goto LABEL_7;
    *(_DWORD *)v13 = 134218242;
    *(_QWORD *)&v13[4] = objc_msgSend(v3, "code");
    *(_WORD *)&v13[12] = 2112;
    *(_QWORD *)&v13[14] = v3;
    v7 = "Transferring device slot failed with error: {c=%ld, (%@)}";
    v8 = v6;
    v9 = OS_LOG_TYPE_ERROR;
    v10 = 22;
  }
  else
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_7;
    *(_WORD *)v13 = 0;
    v7 = "Transferring device slot was successful.";
    v8 = v6;
    v9 = OS_LOG_TYPE_DEFAULT;
    v10 = 2;
  }
  _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, v13, v10);
LABEL_7:

  v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
  v12 = (void *)v11;
  if (v11)
    (*(void (**)(uint64_t))(v11 + 16))(v11);
  objc_msgSend(*(id *)(a1 + 32), "setCompletion:", 0, *(_OWORD *)v13, *(_QWORD *)&v13[16]);

}

void sub_1000C1708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C1728(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  void (**v4)(void);

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "completion"));

  if (v4)
    v4[2]();
  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "setCompletion:", 0);

}

uint64_t sub_1000C1974(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 32);
  if (*(_DWORD *)(v1 + 8) == *(_DWORD *)(result + 48) && *(_DWORD *)(v1 + 24) == *(_DWORD *)(result + 52))
    return (*(uint64_t (**)(void))(*(_QWORD *)(result + 40) + 16))();
  return result;
}

void sub_1000C1B48(uint64_t a1)
{
  id WeakRetained;

  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = 2;
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  objc_msgSend(WeakRetained, "startTest");

}

_QWORD *sub_1000C1C08(_QWORD *result)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  id WeakRetained;
  void *v5;
  id v6;
  void (**v7)(void);

  v1 = result[4];
  v2 = *(_DWORD *)(v1 + 8);
  if (v2 == 3)
  {
    *(_DWORD *)(v1 + 8) = 2;
  }
  else if (!v2)
  {
    v3 = result;
    WeakRetained = objc_loadWeakRetained((id *)(v1 + 16));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "onStart"));

    if (v5)
    {
      v6 = objc_loadWeakRetained((id *)(v3[4] + 16));
      v7 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "onStart"));
      v7[2]();

    }
    return _objc_msgSend((id)v3[4], "runTest");
  }
  return result;
}

void sub_1000C1D30(uint64_t a1)
{
  uint64_t v1;
  int v2;
  id WeakRetained;
  id v5;
  void *v6;
  id v7;
  void (**v8)(void);

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_DWORD *)(v1 + 8);
  if (v2 == 2)
  {
    *(_DWORD *)(v1 + 8) = 3;
  }
  else if (v2 == 1)
  {
    WeakRetained = objc_loadWeakRetained((id *)(v1 + 16));
    objc_msgSend(WeakRetained, "terminateTest");

    v5 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "onIdle"));

    if (v6)
    {
      v7 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
      v8 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "onIdle"));
      v8[2]();

    }
    *(_DWORD *)(*(_QWORD *)(a1 + 32) + 8) = 0;
  }
}

_QWORD *sub_1000C1F44(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void (**v8)(void);
  id v9;
  id WeakRetained;
  id v11;
  void *v12;
  id v13;
  void (**v14)(void);

  v1 = result;
  v2 = result[4];
  v3 = *(_DWORD *)(v2 + 8);
  if (v3 == 3)
  {
    WeakRetained = objc_loadWeakRetained((id *)(v2 + 16));
    objc_msgSend(WeakRetained, "terminateTest");

    v11 = objc_loadWeakRetained((id *)(v1[4] + 16));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "onTestFinished"));

    if (v12)
    {
      v13 = objc_loadWeakRetained((id *)(v1[4] + 16));
      v14 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "onTestFinished"));
      v14[2]();

    }
    return _objc_msgSend((id)v1[4], "fromStoppingToIdle");
  }
  else if (v3 == 2)
  {
    v4 = objc_loadWeakRetained((id *)(v2 + 16));
    objc_msgSend(v4, "terminateTest");

    v5 = objc_loadWeakRetained((id *)(v1[4] + 16));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "onTestFinished"));

    if (v6)
    {
      v7 = objc_loadWeakRetained((id *)(v1[4] + 16));
      v8 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "onTestFinished"));
      v8[2]();

    }
    v9 = objc_loadWeakRetained((id *)(v1[4] + 16));
    objc_msgSend(v9, "removeTestFromQueue");

    return _objc_msgSend((id)v1[4], "runTest");
  }
  return result;
}

_QWORD *sub_1000C2200(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void (**v8)(void);
  id v9;
  id WeakRetained;
  id v11;
  void *v12;
  id v13;
  void (**v14)(void);

  v1 = result;
  v2 = result[4];
  v3 = *(_DWORD *)(v2 + 8);
  if (v3 == 3)
  {
    WeakRetained = objc_loadWeakRetained((id *)(v2 + 16));
    objc_msgSend(WeakRetained, "terminateTest");

    v11 = objc_loadWeakRetained((id *)(v1[4] + 16));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "onTestError"));

    if (v12)
    {
      v13 = objc_loadWeakRetained((id *)(v1[4] + 16));
      v14 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "onTestError"));
      v14[2]();

    }
    result = objc_msgSend((id)v1[4], "checkFatalError");
    if ((result & 1) == 0)
      return _objc_msgSend((id)v1[4], "fromStoppingToIdle");
  }
  else if (v3 == 2)
  {
    v4 = objc_loadWeakRetained((id *)(v2 + 16));
    objc_msgSend(v4, "terminateTest");

    v5 = objc_loadWeakRetained((id *)(v1[4] + 16));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "onTestError"));

    if (v6)
    {
      v7 = objc_loadWeakRetained((id *)(v1[4] + 16));
      v8 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "onTestError"));
      v8[2]();

    }
    result = objc_msgSend((id)v1[4], "checkFatalError");
    if ((result & 1) == 0)
    {
      v9 = objc_loadWeakRetained((id *)(v1[4] + 16));
      objc_msgSend(v9, "removeTestFromQueue");

      return _objc_msgSend((id)v1[4], "runTest");
    }
  }
  return result;
}

id sub_1000C3108(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2);
  if ((_DWORD)result)
    *a4 = 1;
  return result;
}

void sub_1000C313C(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  v5 = a2;
  v6 = objc_opt_class(NSString);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", BSUIAssetKeyAssetID));
  v8 = BUDynamicCast(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v9))
  {
    v10 = *(_QWORD *)(a1 + 64);
    v11 = v10 >= a3;
    v12 = 0x7FFFFFFFFFFFFFFFLL;
    if (!v11 || v10 == 0x7FFFFFFFFFFFFFFFLL)
      v14 = 1;
    else
      v14 = 4;
  }
  else if ((objc_msgSend(*(id *)(a1 + 40), "containsObject:", v9) & 1) != 0)
  {
    v12 = 0x7FFFFFFFFFFFFFFFLL;
    v14 = 3;
  }
  else
  {
    v12 = (uint64_t)objc_msgSend(*(id *)(a1 + 48), "indexOfObject:", v9);
    v14 = 2;
  }
  v17 = objc_msgSend(v5, "mutableCopy");
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v14));
  objc_msgSend(v17, "setObject:forKeyedSubscript:", v15, CFSTR("searchItemStatus"));

  if (v12 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v12));
    objc_msgSend(v17, "setObject:forKeyedSubscript:", v16, CFSTR("previousMatchIndex"));

  }
  objc_msgSend(*(id *)(a1 + 56), "addObject:", v17);

}

uint64_t sub_1000C3308()
{
  if (qword_1009F4EA0 != -1)
    dispatch_once(&qword_1009F4EA0, &stru_1008E9C08);
  return qword_1009F4E98;
}

void sub_1000C3348(id a1)
{
  const ColorSyncProfile *v1;
  const ColorSyncProfile *v2;
  CFDataRef v3;
  CFDataRef v4;

  v1 = ColorSyncProfileCreateWithName(kColorSyncSRGBProfile);
  if (v1)
  {
    v2 = v1;
    v3 = ColorSyncProfileCopyData(v1, 0);
    if (v3)
    {
      v4 = v3;
      qword_1009F4E98 = (uint64_t)CGColorSpaceCreateWithICCData(v3);
      CFRelease(v4);
    }
    CFRelease(v2);
  }
}

void sub_1000C3730(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_viewControllerFromWhichToPresentAlerts"));
  objc_msgSend(v2, "presentViewController:animated:completion:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48));

}

void sub_1000C4324(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  int v7;
  uint64_t v8;
  NSObject *v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  char v21;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetID:", *(_QWORD *)(a1 + 32)));

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "assetLogID"));
  v5 = (void *)v4;
  if (v3)
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1000C4498;
    v18[3] = &unk_1008E9C70;
    v6 = *(void **)(a1 + 40);
    v18[4] = *(_QWORD *)(a1 + 48);
    v19 = *(id *)(a1 + 32);
    v20 = v5;
    v21 = *(_BYTE *)(a1 + 56);
    objc_msgSend(v6, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 64, CFSTR("continue OpenBookActivity"), v18);

  }
  else
  {
    v7 = *(unsigned __int8 *)(a1 + 56);
    v8 = BCSceneLog(v4);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if (v7)
    {
      if (v10)
        sub_10069F2B4(a1 + 32, v9, v11, v12, v13, v14, v15, v16);

      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_lastOpenBookManager"));
      objc_msgSend(v17, "clearAllLastOpenBooks");

      objc_msgSend(*(id *)(a1 + 48), "_handleStateRestorationCompleted");
      objc_msgSend(*(id *)(a1 + 48), "setHandledStateRestoration:", 0);
    }
    else
    {
      if (v10)
        sub_10069F24C(a1 + 32, v9, v11, v12, v13, v14, v15, v16);

    }
  }

}

id sub_1000C4498(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_continueOpenBookActivity:assetLogID:isStateRestoration:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
}

void sub_1000C4740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_1000C4758(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD block[5];

  v1 = *(_QWORD *)(result[6] + 8);
  if (!*(_BYTE *)(v1 + 24))
  {
    v2 = result;
    *(_BYTE *)(v1 + 24) = 1;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000C47E0;
    block[3] = &unk_1008E72C0;
    block[4] = result[4];
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    return objc_msgSend((id)v2[5], "removeEventually");
  }
  return result;
}

id sub_1000C47E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleStateRestorationCompleted");
}

void sub_1000C518C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1000C51C0(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "setWelcomeViewController:", 0);
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1000C5460(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  objc_super v20;
  _QWORD v21[4];
  id v22;
  uint64_t v23;
  id v24;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v6)
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "description"));
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/datasources/BKLibraryDataSourcePlistSampleBooks.m", 38, "-[BKLibraryDataSourcePlistSampleBooks fetchAssetIDsWithCompletion:]_block_invoke", "error == nil", CFSTR("Error %@ fetching sample asset IDs"));

  }
  if (objc_msgSend(v5, "count", v19))
  {
    v8 = objc_opt_class(BKLibraryDataSourcePlist);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "dataSourceWithIdentifier:", CFSTR("com.apple.iBooks.plist.sample.stashed")));
    v11 = BUDynamicCast(v8, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    if (v12)
    {
      v13 = *(void **)(a1 + 32);
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_1000C5644;
      v21[3] = &unk_1008E9D10;
      v14 = v12;
      v15 = *(_QWORD *)(a1 + 32);
      v16 = *(void **)(a1 + 40);
      v22 = v14;
      v23 = v15;
      v24 = v16;
      v20.receiver = v13;
      v20.super_class = (Class)BKLibraryDataSourcePlistSampleBooks;
      objc_msgSendSuper2(&v20, "fetchAssetsWithIDs:completion:", v5, v21);

    }
    else
    {
      BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/datasources/BKLibraryDataSourcePlistSampleBooks.m", 44, "-[BKLibraryDataSourcePlistSampleBooks fetchAssetIDsWithCompletion:]_block_invoke", "NO", CFSTR("Missing data source for %@"));
    }

  }
  else
  {
    v17 = objc_retainBlock(*(id *)(a1 + 40));
    v18 = v17;
    if (v17)
      (*((void (**)(id, void *, _QWORD))v17 + 2))(v17, &__NSArray0__struct, 0);

  }
}

void sub_1000C5644(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *i;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  NSMutableArray *v30;
  NSMutableArray *v31;
  void *v32;
  id obj;
  uint64_t v35;
  id v36;
  _QWORD v37[5];
  NSMutableArray *v38;
  NSMutableArray *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint8_t buf[4];
  const char *v49;
  __int16 v50;
  const char *v51;
  __int16 v52;
  void *v53;
  _BYTE v54[128];

  v4 = a2;
  v29 = a3;
  v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v31 = objc_opt_new(NSMutableArray);
  v30 = objc_opt_new(NSMutableArray);
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  obj = v4;
  v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v54, 16);
  if (v36)
  {
    v35 = *(_QWORD *)v45;
    do
    {
      for (i = 0; i != v36; i = (char *)i + 1)
      {
        if (*(_QWORD *)v45 != v35)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * (_QWORD)i);
        v7 = objc_opt_class(BKPlistAsset);
        v8 = BUDynamicCast(v7, v6);
        v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
        if (v9)
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "url"));
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastPathComponent"));
          if (objc_msgSend(v11, "length"))
          {
            v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directory"));
            v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v12));
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "URLByAppendingPathComponent:", v11));

            v43 = 0;
            objc_msgSend(v32, "im_safeLinkItemAtURL:toURL:error:", v10, v14, &v43);
            v15 = v43;
            v16 = v15;
            if (v15 && (v17 = objc_msgSend(v15, "bu_isFileExistsError"), !(_DWORD)v17))
            {
              v19 = BCIMLog(v17);
              v20 = objc_claimAutoreleasedReturnValue(v19);
              if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 136315650;
                v49 = "-[BKLibraryDataSourcePlistSampleBooks fetchAssetIDsWithCompletion:]_block_invoke_2";
                v50 = 2080;
                v51 = "/Library/Caches/com.apple.xbs/Sources/Alder/ios/datasources/BKLibraryDataSourcePlistSampleBooks.m";
                v52 = 1024;
                LODWORD(v53) = 87;
                _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "%s %s:%d", buf, 0x1Cu);
              }

              v22 = BCIMLog(v21);
              v23 = objc_claimAutoreleasedReturnValue(v22);
              if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
              {
                v24 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "description"));
                v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directory"));
                *(_DWORD *)buf = 138412802;
                v49 = v24;
                v50 = 2112;
                v51 = (const char *)v6;
                v52 = 2112;
                v53 = v25;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "@\"Error %@ moving asset %@ to %@\"", buf, 0x20u);

              }
            }
            else
            {
              objc_msgSend(v9, "setUrl:", v14);
              v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
              objc_msgSend(v9, "setPurchaseDate:", v18);

              -[NSMutableArray addObject:](v31, "addObject:", v9);
              -[NSMutableArray addObject:](v30, "addObject:", v10);
            }

          }
        }

      }
      v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v54, 16);
    }
    while (v36);
  }

  if (-[NSMutableArray count](v31, "count"))
  {
    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    v26 = *(void **)(a1 + 32);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_1000C5B44;
    v37[3] = &unk_1008E9CE8;
    v37[4] = *(_QWORD *)(a1 + 40);
    v38 = v31;
    v39 = v30;
    v40 = v32;
    objc_copyWeak(&v42, (id *)buf);
    v41 = *(id *)(a1 + 48);
    objc_msgSend(v26, "addPlistAssetsIfNeeded:completion:", v38, v37);

    objc_destroyWeak(&v42);
    objc_destroyWeak((id *)buf);
  }
  else
  {
    v27 = objc_retainBlock(*(id *)(a1 + 48));
    v28 = v27;
    if (v27)
      (*((void (**)(id, void *, _QWORD))v27 + 2))(v27, &__NSArray0__struct, 0);

  }
}

void sub_1000C5B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id location)
{
  id *v41;

  objc_destroyWeak(v41);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C5B44(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  id v11;

  v4 = a3;
  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000C5C30;
  v7[3] = &unk_1008E9CC0;
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  objc_copyWeak(&v11, (id *)(a1 + 72));
  v10 = *(id *)(a1 + 64);
  objc_msgSend(v5, "removePlistAssets:completion:", v6, v7);

  objc_destroyWeak(&v11);
}

void sub_1000C5C1C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000C5C30(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *i;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  id WeakRetained;
  id v18;
  void *v19;
  __int128 v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint8_t buf[4];
  const char *v27;
  __int16 v28;
  const char *v29;
  __int16 v30;
  int v31;
  _BYTE v32[128];

  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v22, v32, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v23;
    *(_QWORD *)&v4 = 138412290;
    v20 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v23 != v6)
          objc_enumerationMutation(v2);
        v8 = *(char **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v8, "isFileURL", v20))
        {
          v9 = *(void **)(a1 + 40);
          v21 = 0;
          objc_msgSend(v9, "removeItemAtURL:error:", v8, &v21);
          v10 = v21;
          v11 = v10;
          if (v10)
          {
            v12 = BCIMLog(v10);
            v13 = objc_claimAutoreleasedReturnValue(v12);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 136315650;
              v27 = "-[BKLibraryDataSourcePlistSampleBooks fetchAssetIDsWithCompletion:]_block_invoke_2";
              v28 = 2080;
              v29 = "/Library/Caches/com.apple.xbs/Sources/Alder/ios/datasources/BKLibraryDataSourcePlistSampleBooks.m";
              v30 = 1024;
              v31 = 109;
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "%s %s:%d", buf, 0x1Cu);
            }

            v15 = BCIMLog(v14);
            v16 = objc_claimAutoreleasedReturnValue(v15);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = v20;
              v27 = v8;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "@\"Error unlinking %@\"", buf, 0xCu);
            }

          }
        }
      }
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v22, v32, 16);
    }
    while (v5);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "reload");

  v18 = objc_retainBlock(*(id *)(a1 + 48));
  v19 = v18;
  if (v18)
    (*((void (**)(id, void *, _QWORD))v18 + 2))(v18, &__NSArray0__struct, 0);

}

void sub_1000C6044(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  unsigned int v6;
  unsigned int v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  char v38;
  _QWORD v39[2];
  _QWORD v40[2];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "libraryAssetWithAssetID:inManagedObjectContext:", a1[4], v3));

  v6 = objc_msgSend(v5, "isAudiobook");
  if (v5)
  {
    v7 = v6;
    v8 = objc_msgSend(objc_alloc((Class)NSUserActivity), "initWithActivityType:", CFSTR("com.apple.iBooks.assetReading"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "title"));
    objc_msgSend(v8, "setTitle:", v9);

    v39[0] = CFSTR("assetID");
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
    v40[0] = v10;
    v39[1] = CFSTR("isAudiobook");
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(v5, "isAudiobook")));
    v40[1] = v11;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v40, v39, 2));
    objc_msgSend(v8, "setUserInfo:", v12);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "userInfo"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "allKeys"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v14));
    objc_msgSend(v8, "setRequiredUserInfoKeys:", v15);

    objc_msgSend(v8, "setEligibleForPublicIndexing:", 1);
    objc_msgSend(v8, "setEligibleForSearch:", 1);
    if (v7)
    {
      objc_msgSend(v8, "setEligibleForHandoff:", 1);
      objc_msgSend(v8, "setEligibleForPrediction:", 1);
      v16 = (void *)a1[5];
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "_persistentIdentifierForPlayAudiobookActivityWithAssetID:", v17));
      objc_msgSend(v8, "setPersistentIdentifier:", v18);

    }
    else
    {
      v19 = (void *)a1[5];
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "_persistentIdentifierForOpenBookActivityAsset:", v20));
      objc_msgSend(v8, "setPersistentIdentifier:", v21);

      objc_msgSend(v8, "setEligibleForHandoff:", 0);
    }
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetID"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "title"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "author"));
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_1000C63D0;
    v31[3] = &unk_1008E9DF0;
    v25 = a1[5];
    v26 = a1[6];
    v32 = v8;
    v33 = v25;
    v38 = v7;
    v34 = v22;
    v35 = v23;
    v36 = v24;
    v37 = v26;
    v27 = v24;
    v28 = v23;
    v29 = v22;
    v30 = v8;
    +[BKLibraryIndexer searchableItemAttributeSetForBook:coverTimeout:completion:](BKLibraryIndexer, "searchableItemAttributeSetForBook:coverTimeout:completion:", v5, v31, 0.0);

  }
  else
  {
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKUserActivityManager.m", 82, "-[BKUserActivityManager startReadingAsset:]_block_invoke", "libraryAsset", 0);
  }

}

void sub_1000C63D0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[5];
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  char v14;

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setContentAttributeSet:", v3);
  v7[0] = _NSConcreteStackBlock;
  v7[2] = sub_1000C64BC;
  v7[3] = &unk_1008E9DC8;
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(void **)(a1 + 48);
  v7[4] = *(_QWORD *)(a1 + 40);
  v13 = v4;
  v14 = *(_BYTE *)(a1 + 80);
  v7[1] = 3221225472;
  v8 = v5;
  v9 = *(id *)(a1 + 56);
  v10 = v3;
  v11 = *(id *)(a1 + 64);
  v12 = *(id *)(a1 + 32);
  v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

}

_QWORD *sub_1000C64BC(uint64_t a1)
{
  _QWORD *result;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  void *v14;
  NSObject *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  id v32;
  id v33;
  id v34;
  NSObject *v35;

  result = *(_QWORD **)(a1 + 32);
  if (result[4] == *(_QWORD *)(a1 + 80))
  {
    if (*(_BYTE *)(a1 + 88))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL bu_urlWithAssetID:](NSURL, "bu_urlWithAssetID:", *(_QWORD *)(a1 + 40)));
      v4 = objc_msgSend(*(id *)(a1 + 40), "length");
      if (v4
        && (v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "absoluteString")),
            v6 = objc_msgSend(v5, "length"),
            v5,
            v6))
      {
        if (objc_msgSend(*(id *)(a1 + 48), "length"))
        {
          v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "thumbnailURL"));
          if (!v7
            || (v8 = (void *)v7,
                v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "thumbnailURL")),
                v10 = (void *)objc_claimAutoreleasedReturnValue(+[INImage imageWithURL:](INImage, "imageWithURL:", v9)),
                v9,
                v8,
                !v10))
          {
            v11 = BooksSiriLog(v7);
            v12 = objc_claimAutoreleasedReturnValue(v11);
            if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
              sub_10069F408();

            v10 = 0;
          }
          v13 = objc_alloc((Class)INMediaItem);
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "absoluteString"));
          v15 = objc_msgSend(v13, "initWithIdentifier:title:type:artwork:artist:", v14, *(_QWORD *)(a1 + 48), 10, v10, *(_QWORD *)(a1 + 64));

          v16 = objc_alloc((Class)INPlayMediaIntent);
          v35 = v15;
          v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v35, 1));
          v18 = objc_msgSend(v16, "initWithMediaItems:mediaContainer:playShuffled:playbackRepeatMode:resumePlayback:playbackQueueLocation:playbackSpeed:mediaSearch:", v17, 0, &__kCFBooleanFalse, 1, &__kCFBooleanFalse, 1, &off_10092ED00, 0);

          v19 = objc_msgSend(objc_alloc((Class)INInteraction), "initWithIntent:response:", v18, 0);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "persistentIdentifier"));
          objc_msgSend(v19, "setGroupIdentifier:", v20);

          v31[0] = _NSConcreteStackBlock;
          v31[1] = 3221225472;
          v31[2] = sub_1000C67E4;
          v31[3] = &unk_1008E9DA0;
          v32 = v18;
          v33 = *(id *)(a1 + 48);
          v34 = v10;
          v21 = v10;
          v22 = v18;
          objc_msgSend(v19, "donateInteractionWithCompletion:", v31);

        }
        else
        {
          v24 = BooksSiriLog(0);
          v15 = objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            sub_10069F3A0(a1 + 48, v15, v25, v26, v27, v28, v29, v30);
        }
      }
      else
      {
        v23 = BooksSiriLog(v4);
        v15 = objc_claimAutoreleasedReturnValue(v23);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          sub_10069F31C((uint64_t *)(a1 + 40), (uint64_t)v3, v15);
      }

      result = *(_QWORD **)(a1 + 32);
    }
    return objc_msgSend(result, "setCurrentActivity:", *(_QWORD *)(a1 + 72));
  }
  return result;
}

void sub_1000C67E4(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  uint8_t buf[4];
  uint64_t v17;

  v3 = a2;
  v4 = BooksSiriLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10069F468();
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7 = a1[4];
      *(_DWORD *)buf = 138412290;
      v17 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Donated shortcut for intent: %@", buf, 0xCu);
    }

    v6 = objc_msgSend(objc_alloc((Class)INShortcut), "initWithIntent:", a1[4]);
    v8 = objc_msgSend(objc_alloc((Class)INRelevantShortcut), "initWithShortcut:", v6);
    objc_msgSend(v8, "setWidgetKind:", CFSTR("NanoBooksWidgetComplications"));
    v9 = objc_msgSend(objc_alloc((Class)INDefaultCardTemplate), "initWithTitle:", a1[5]);
    objc_msgSend(v9, "setImage:", a1[6]);
    objc_msgSend(v8, "setWatchTemplate:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[INRelevantShortcutStore defaultStore](INRelevantShortcutStore, "defaultStore"));
    v15 = v8;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v15, 1));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000C69C4;
    v13[3] = &unk_1008E8948;
    v14 = v8;
    v12 = v8;
    objc_msgSend(v10, "setRelevantShortcuts:completionHandler:", v11, v13);

  }
}

void sub_1000C69C4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v3 = a2;
  v4 = BooksSiriLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10069F4C8();
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 138412290;
    v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Set relevant shortcut: %@.", (uint8_t *)&v8, 0xCu);
  }

}

void sub_1000C75E4(id *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  id v25;
  id location;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetOnMainQueueWithAssetID:", a1[4]));

  if (v3)
  {
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "sceneManager"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject sceneInfoPresentingAssetID:](v5, "sceneInfoPresentingAssetID:", a1[4]));
    objc_initWeak(&location, a1[5]);
    if (v6)
    {
      v7 = a1[4];
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_1000C7800;
      v21[3] = &unk_1008E9E40;
      v22 = v7;
      v23 = v3;
      v24 = a1[6];
      objc_copyWeak(&v25, &location);
      -[NSObject requestSceneWithAssetID:completion:](v5, "requestSceneWithAssetID:completion:", v22, v21);
      objc_destroyWeak(&v25);

      v8 = v22;
    }
    else
    {
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_1000C78F0;
      v16[3] = &unk_1008E9E40;
      v17 = a1[4];
      v18 = v3;
      v19 = a1[6];
      objc_copyWeak(&v20, &location);
      -[NSObject requestPrimaryScene:](v5, "requestPrimaryScene:", v16);
      objc_destroyWeak(&v20);

      v8 = v17;
    }

    objc_destroyWeak(&location);
  }
  else
  {
    v9 = BCSceneLog(v4);
    v5 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_10069F618((uint64_t)(a1 + 4), v5, v10, v11, v12, v13, v14, v15);
  }

}

void sub_1000C77E0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000C7800(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id WeakRetained;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v3 = a2;
  v4 = BCSceneLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    v10 = 138412802;
    v11 = v6;
    v12 = 2112;
    v13 = v7;
    v14 = 2112;
    v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Asking scene controller to open book with assetID %@, book=%@, location:%@", (uint8_t *)&v10, 0x20u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "_continueOpenBookActivity:sceneController:location:", *(_QWORD *)(a1 + 32), v3, *(_QWORD *)(a1 + 48));

}

void sub_1000C78F0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id WeakRetained;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v3 = a2;
  v4 = BCSceneLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    v10 = 138412802;
    v11 = v6;
    v12 = 2112;
    v13 = v7;
    v14 = 2112;
    v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Asking scene controller to open book with assetID %@, book=%@, location:%@", (uint8_t *)&v10, 0x20u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "_continueOpenBookActivity:sceneController:location:", *(_QWORD *)(a1 + 32), v3, *(_QWORD *)(a1 + 48));

}

void sub_1000C7BBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  id v6;
  _QWORD *v7;
  void *v8;
  dispatch_time_t v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t v13;

  v5 = a4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000C7C94;
  v10[3] = &unk_1008E7928;
  v11 = *(id *)(a1 + 32);
  v12 = v5;
  v13 = *(_QWORD *)(a1 + 40);
  v6 = v5;
  v7 = objc_retainBlock(v10);
  v8 = v7;
  if (*(_BYTE *)(a1 + 48))
  {
    ((void (*)(_QWORD *))v7[2])(v7);
  }
  else
  {
    v9 = dispatch_time(0, 1000000000);
    dispatch_after(v9, (dispatch_queue_t)&_dispatch_main_q, v8);
  }

}

void sub_1000C7C94(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000C7D18;
  v3[3] = &unk_1008E72C0;
  v2 = *(void **)(a1 + 32);
  v4 = *(id *)(a1 + 40);
  objc_msgSend(v2, "appLaunchCoordinatorPerformWhenLaunched:block:", CFSTR("Invalide holdOpenAnimationAssertion"), v3);
  objc_msgSend(*(id *)(a1 + 48), "setHoldAtLaunchScreenAssertion:", 0);

}

id sub_1000C7D18(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invalidate");
}

void sub_1000C9204(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000C922C(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ba_effectiveAnalyticsTracker"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000C936C;
    v13[3] = &unk_1008E9F20;
    v9 = v5;
    v10 = a1[4];
    v14 = v9;
    v15 = v10;
    objc_copyWeak(&v19, a1 + 7);
    v16 = v8;
    v17 = a1[5];
    v18 = a1[6];
    v11 = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);

    objc_destroyWeak(&v19);
  }
  else
  {
    v12 = BCIMLog(v6);
    v11 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_10069F800((uint64_t)a1, (uint64_t)v7, v11);
  }

}

void sub_1000C936C(id *a1)
{
  __CFString *v2;
  void *v3;
  void *v4;
  id v5;
  const __CFString *v6;
  void *v7;
  void *v8;
  void *v9;
  dispatch_queue_global_t global_queue;
  NSObject *v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  const __CFString *v22;
  const __CFString *v23;

  v2 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "buyParameters"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "offer"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("type")));

  v5 = a1[5];
  v22 = CFSTR("buyParams");
  if (v2)
    v6 = v2;
  else
    v6 = &stru_10091C438;
  v23 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1));
  objc_msgSend(v5, "_recordMetricsForBuyButtonTap:actionDetails:offerType:", 1, v7, v4);

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithString:](NSMutableString, "stringWithString:", v6));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "assetPresenterAssetID"));
  global_queue = dispatch_get_global_queue(2, 0);
  v11 = objc_claimAutoreleasedReturnValue(global_queue);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000C9584;
  v14[3] = &unk_1008E9EF8;
  v15 = v9;
  v16 = v8;
  v12 = v8;
  v13 = v9;
  objc_copyWeak(&v21, a1 + 9);
  v17 = a1[6];
  v18 = a1[7];
  v19 = a1[4];
  v20 = a1[8];
  dispatch_async(v11, v14);

  objc_destroyWeak(&v21);
}

void sub_1000C9584(id *a1)
{
  void *v2;
  _QWORD block[4];
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSAApplication purchaseEventFieldsWithPageId:pageType:pageContext:topic:](JSAApplication, "purchaseEventFieldsWithPageId:pageType:pageContext:topic:", a1[4], CFSTR("AudiobookPreview"), 0, 0));
  if (objc_msgSend(a1[5], "length") && objc_msgSend(v2, "length"))
  {
    if ((objc_msgSend(a1[5], "hasSuffix:", CFSTR("&")) & 1) == 0)
      objc_msgSend(a1[5], "appendString:", CFSTR("&"));
    objc_msgSend(a1[5], "appendString:", v2);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000C96F4;
  block[3] = &unk_1008E9EF8;
  v4 = a1[5];
  v5 = a1[4];
  objc_copyWeak(&v10, a1 + 10);
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v10);
}

void sub_1000C96F4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id WeakRetained;
  void *v6;
  id v7;
  void *v8;
  NSMutableDictionary *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(*(id *)(a1 + 40), "longLongValue")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BLPurchaseRequest requestWithBuyParameters:storeIdentifier:](BLPurchaseRequest, "requestWithBuyParameters:storeIdentifier:", v2, v3));

  objc_msgSend(v4, "setAudiobook:", 1);
  objc_msgSend(v4, "setSuppressNetworkEvaluatorDialogs:", 1);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "upSellData"));

  v7 = objc_loadWeakRetained((id *)(a1 + 80));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "appAnalyticsAdditionalData"));

  v9 = objc_opt_new(NSMutableDictionary);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "chainWithName:", CFSTR("AudiobookMiniPlayer")));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v9, "setObject:forKeyedSubscript:", v10, CFSTR("BATracker"));

  if (v6)
    -[NSMutableDictionary setObject:forKeyedSubscript:](v9, "setObject:forKeyedSubscript:", v6, CFSTR("upSellData"));
  if (v8 && _os_feature_enabled_impl("Books", "unifiedProductPage"))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "dictionary"));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v9, "setObject:forKeyedSubscript:", v11, BAAppAnalyticsAdditionalDataKey);

  }
  objc_msgSend(v4, "setAnalyticsInfo:", v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "windowManager"));

  v14 = (void *)objc_claimAutoreleasedReturnValue(+[BLDownloadQueue sharedInstance](BLDownloadQueue, "sharedInstance"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_1000C9944;
  v15[3] = &unk_1008E9ED0;
  v16 = *(id *)(a1 + 56);
  v17 = *(id *)(a1 + 64);
  v18 = *(id *)(a1 + 72);
  objc_msgSend(v14, "purchaseWithRequest:uiManager:completion:", v4, v13, v15);

}

void sub_1000C9944(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000C9A00;
  v6[3] = &unk_1008E8EE0;
  v7 = a4;
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v5 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

void sub_1000C9A00(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  char v9;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = objc_retainBlock(*(id *)(a1 + 56));
    if (v2)
    {
      v5 = v2;
      (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, 0, *(_QWORD *)(a1 + 32));
      v2 = v5;
    }

  }
  else
  {
    v3 = *(void **)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 48);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000C9ADC;
    v6[3] = &unk_1008E80D0;
    v8 = *(id *)(a1 + 56);
    v9 = 1;
    v7 = *(id *)(a1 + 32);
    objc_msgSend(v3, "didPurchaseWithProductProfile:completion:", v4, v6);

  }
}

void sub_1000C9ADC(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_1000C9F14(id a1)
{
  id v1;
  void *v2;

  v1 = -[BKSceneUtilities _init]([BKSceneUtilities alloc], "_init");
  v2 = (void *)qword_1009F4EB8;
  qword_1009F4EB8 = (uint64_t)v1;

}

void sub_1000CA0F0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = BCSceneLog(v3);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_10069F8C0((uint64_t)v4, v6, v7, v8, v9, v10, v11, v12);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1000CA290(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  v3 = BCSceneLog(v2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_10069F928((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);

}

id sub_1000CA2E0()
{
  if (qword_1009F4ED0 != -1)
    dispatch_once(&qword_1009F4ED0, &stru_1008E9FD0);
  return (id)qword_1009F4EC8;
}

void sub_1000CA320(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.TransferLock");
  v2 = (void *)qword_1009F4EC8;
  qword_1009F4EC8 = (uint64_t)v1;

}

void sub_1000CC5E4(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "moveCoverToFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  v2 = *(double *)(a1 + 72);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v3, "setAlpha:", v2);

  objc_msgSend(*(id *)(a1 + 32), "setBookshelfAlpha:", *(double *)(a1 + 80));
  v4 = *(double *)(a1 + 88);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverShadowView"));
  objc_msgSend(v5, "setAlpha:", v4);

}

void sub_1000CCAAC(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
  -[UIView setAlpha:](a2, "setAlpha:", a3, a4, 0.0);
}

void sub_1000CCAB8(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
  -[UIView setAlpha:](a2, "setAlpha:", a3, a4, 1.0);
}

void sub_1000CCDEC(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  id v24;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "bounds");
  v5 = CGRectMakeWithSize(v3, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentClipView"));
  objc_msgSend(v12, "setFrame:", v5, v7, v9, v11);

  v13 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "transitionCoverFrame");
  objc_msgSend(v13, "moveCoverToFrame:");
  objc_msgSend(*(id *)(a1 + 32), "contentFrame");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentView"));
  objc_msgSend(v22, "setFrame:", v15, v17, v19, v21);

  if (objc_msgSend(*(id *)(a1 + 32), "opening"))
    v23 = 1.0;
  else
    v23 = 0.0;
  v24 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentCoverView"));
  objc_msgSend(v24, "setAlpha:", v23);

}

id sub_1000CCF0C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "coverFadeDuration");
  return +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1000CCF40(uint64_t a1)
{
  double v2;
  double v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "revealDuration");
  v3 = v2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "revealTimingFunction"));
  +[UIView animateWithDuration:delay:timingFunction:options:animations:completion:](UIView, "animateWithDuration:delay:timingFunction:options:animations:completion:", v4, 0, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v3, 0.0);

}

id sub_1000CD550(id *a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "window"));
  objc_msgSend(v2, "setUserInteractionEnabled:", 1);

  objc_msgSend(a1[5], "removeFromSuperview");
  objc_msgSend(a1[5], "setHidden:", 0);
  return objc_msgSend(a1[6], "completeTransition:", 1);
}

void sub_1000CD974(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 1);
}

id sub_1000CF264(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  if (*(_BYTE *)(a1 + 40))
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  else
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor bc_booksTertiaryLabelColor](UIColor, "bc_booksTertiaryLabelColor"));
  v3 = (void *)v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selectIndicatorView"));
  objc_msgSend(v4, "setTintColor:", v3);

  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_1000CF3F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateLibraryAssetText");
}

id sub_1000CFE10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reloadData");
}

id sub_1000CFE18(uint64_t a1)
{
  void *v2;
  void *v3;
  id result;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "viewIfLoaded"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "window"));

  result = objc_msgSend(*(id *)(a1 + 32), "setNeedsUpdateViewMode");
  if (v3)
    return objc_msgSend(*(id *)(a1 + 32), "updateViewModeIfNeeded");
  return result;
}

void sub_1000CFE80(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collection"));
  v3 = objc_msgSend(v2, "resolvedSortMode");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAdaptor"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "supplementaryDataSource"));
  v6 = objc_msgSend(v5, "sortMode");

  if (v6 != v3)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAdaptor"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "supplementaryDataSource"));
    objc_msgSend(v8, "setSortMode:", v3);

    objc_msgSend(*(id *)(a1 + 32), "sortModeChanged");
  }
}

void sub_1000CFF40(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationItem"));
  objc_msgSend(v3, "setTitle:", v2);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSourceAdaptor"));
  objc_msgSend(v4, "updateTitleHeaderView");

}

id sub_1000D1D84(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reloadData");
}

void sub_1000D1F18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  void **v19;
  uint64_t v20;
  id (*v21)(uint64_t);
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id location;

  v5 = a2;
  v6 = a3;
  v9 = v6;
  if (v5)
  {
    v10 = objc_opt_class(BKLibraryBookshelfCollectionViewController);
    v11 = BUDynamicCast(v10, v5);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    objc_msgSend(v12, "setShouldAccessibilityFocusCollectionViewUponAppearing:", 1);

    if (_os_feature_enabled_impl("UIKit", "uip_fluid_transitions"))
    {
      objc_initWeak(&location, *(id *)(a1 + 32));
      v19 = _NSConcreteStackBlock;
      v20 = 3221225472;
      v21 = sub_1000D20BC;
      v22 = &unk_1008EA108;
      objc_copyWeak(&v25, &location);
      v13 = *(id *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 32);
      v23 = v13;
      v24 = v14;
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[_UIViewControllerTransition zoomWithSourceViewProvider:](_UIViewControllerTransition, "zoomWithSourceViewProvider:", &v19));
      objc_msgSend(v5, "_setPreferredTransition:", v15, v19, v20, v21, v22);

      objc_destroyWeak(&v25);
      objc_destroyWeak(&location);
    }
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
    objc_msgSend(v16, "pushViewController:animated:", v5, 1);

    objc_msgSend(*(id *)(a1 + 32), "_refreshSeriesContainer:", *(_QWORD *)(a1 + 40));
  }
  else
  {
    v17 = BKLibraryLog(v6, v7, v8);
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_10069F990();

  }
}

void sub_1000D20A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000D20BC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  dispatch_time_t v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD block[4];
  id v17;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coverAnimationHostSourceForItem:", *(_QWORD *)(a1 + 32)));

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "coverAnimationSourceView"));
  if (!v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v6 = objc_msgSend(v5, "BOOLForKey:", CFSTR("BKBookOpenAnimatorRedViewFallbackEnabled"));

    if (v6)
    {
      v7 = objc_msgSend(objc_alloc((Class)UIView), "initWithFrame:", 0.0, 0.0, 100.0, 100.0);
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor redColor](UIColor, "redColor"));
      objc_msgSend(v7, "setBackgroundColor:", v8);

      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionView"));
      objc_msgSend(v9, "addSubview:", v7);

      v10 = v7;
      v11 = dispatch_time(0, 1000000000);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000D2260;
      block[3] = &unk_1008E72C0;
      v17 = v10;
      v4 = v10;
      dispatch_after(v11, (dispatch_queue_t)&_dispatch_main_q, block);

    }
    else
    {
      v4 = 0;
    }
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "window"));
  if (v12)
    v13 = v4;
  else
    v13 = 0;
  v14 = v13;

  return v14;
}

id sub_1000D2260(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_1000D2310(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD v17[4];
  NSObject *v18;

  v6 = a2;
  v7 = a4;
  v10 = v7;
  if (v7)
  {
    v11 = BKLibraryLog(v7, v8, v9);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_10069F9C8();

  }
  if (v6 && (v7 = objc_msgSend(v6, "BOOLValue"), (_DWORD)v7))
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1000D243C;
    v17[3] = &unk_1008E72C0;
    v18 = *(id *)(a1 + 32);
    objc_msgSend(v13, "performBlock:", v17);

    v14 = v18;
  }
  else
  {
    v15 = BKLibraryLog(v7, v8, v9);
    v14 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Skip live fetching series info, because server or fallback said so.", v16, 2u);
    }
  }

}

void sub_1000D243C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unsigned int v7;
  id *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;

  v2 = objc_opt_class(BKLibraryAsset);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "seriesBooks"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "anyObject"));
  v5 = BUDynamicCast(v2, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  v7 = objc_msgSend(v6, "isAudiobook");
  v8 = (id *)&BKSeriesManagerSeriesTypeAudiobookSeries;
  if (!v7)
    v8 = (id *)&BKSeriesManagerSeriesTypeBookSeries;
  v16 = *v8;
  v9 = *(void **)(a1 + 32);
  v10 = v16;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "seriesID"));
  v15 = v11;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v15, 1));
  v17 = v12;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1));

  v14 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesManager sharedManager](BKSeriesManager, "sharedManager"));
  objc_msgSend(v14, "updateSeriesForSeriesAdamIDsWithTypes:forceCheck:", v13, 1);

}

void sub_1000D3168(id *a1, char a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_retainBlock(a1[6]);
  v5 = v4;
  if (v4)
    (*((void (**)(id))v4 + 2))(v4);

  if (objc_msgSend(a1[4], "isValid"))
  {
    if ((a2 & 1) == 0)
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "coverAnimationHostSourceForItem:", a1[4]));
      objc_msgSend(v6, "coverAnimationSourceFinalize");

    }
  }
}

void sub_1000D3300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D3324(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *WeakRetained;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v12 = v9;
  if (!v8 || v9)
  {
    v16 = BKLibraryLog(v9, v10, v11);
    WeakRetained = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
      sub_10069FA90(v12, WeakRetained);
  }
  else
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject im_ancestorFlowControllerConformingToProtocol:](WeakRetained, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKBookPresenting));
    v15 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject _transactionForStorePresentingAction](WeakRetained, "_transactionForStorePresentingAction"));
    objc_msgSend(v14, "showStoreAsset:asset:options:", v15, v8, &__NSDictionary0__struct);

  }
  v17 = objc_retainBlock(*(id *)(a1 + 32));
  v18 = v17;
  if (v17)
    (*((void (**)(id))v17 + 2))(v17);

}

void sub_1000D359C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKBookSampleHelper defaultHelper](BKBookSampleHelper, "defaultHelper"));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ba_effectiveAnalyticsTracker"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000D3664;
  v7[3] = &unk_1008EA1D0;
  v8 = *(id *)(a1 + 48);
  objc_msgSend(v4, "downloadSampleWithURL:contentData:tracker:completion:", v3, v5, v6, v7);

}

void sub_1000D3664(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = v7;
  if (v5 || !v6)
  {
    if (v7)
      ((void (*)(NSObject *, _QWORD))v7[2].isa)(v7, 0);

    v12 = BKLibraryLog(v9, v10, v11);
    v8 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_10069FB10();
  }
  else if (v7)
  {
    ((void (*)(NSObject *, uint64_t))v7[2].isa)(v7, 1);
  }

}

uint64_t sub_1000D371C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (!a3)
      return (*(uint64_t (**)(void))(*(_QWORD *)(result + 32) + 16))();
  }
  return result;
}

id sub_1000D3C84(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showAssetWithTransaction:storeID:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void sub_1000D4C28(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  unsigned int v8;
  void *v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  const __CFString *v17;
  void *v18;
  _QWORD v19[5];
  id v20;
  uint8_t buf[4];
  const __CFString *v22;
  __int16 v23;
  unsigned int v24;
  __int16 v25;
  unsigned int v26;

  v6 = a2;
  v7 = a4;
  if (v7)
  {
    v8 = objc_msgSend(*(id *)(a1 + 32), "_isErrorFromUserCanceled:", v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "domain"));
    v10 = objc_msgSend(v9, "isEqualToString:", AMSErrorDomain);

    v11 = v8 | v10;
    v15 = BKLibraryLog(v12, v13, v14);
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = &stru_10091C438;
      *(_DWORD *)buf = 138412802;
      if (v11)
        v17 = CFSTR("NOT");
      v22 = v17;
      v23 = 1024;
      v24 = v8;
      v25 = 1024;
      v26 = v10;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "DownloadBook: Will %@ display connection error alert with userCanceled:(%{BOOL}d) isServerErrorDomain:(%{BOOL}d)", buf, 0x18u);
    }

    if ((v11 & 1) == 0)
    {
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472;
      v19[2] = sub_1000D4DC0;
      v19[3] = &unk_1008E7338;
      v18 = *(void **)(a1 + 40);
      v19[4] = *(_QWORD *)(a1 + 32);
      v20 = v18;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v19);

    }
  }

}

void sub_1000D4DC0(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BKStorePresenting));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_transactionForStorePresentingAction"));
  objc_msgSend(v3, "displayOffineCannotDownloadErrorForContentType:transaction:", objc_msgSend(*(id *)(a1 + 40), "contentType"), v2);

}

void sub_1000D54A8(uint64_t a1)
{
  void (**v2)(id, uint64_t);

  v2 = (void (**)(id, uint64_t))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addSelectedBooksCompletion"));
  if (v2)
    v2[2](v2, 1);
  objc_msgSend(*(id *)(a1 + 32), "setAddSelectedBooksCompletion:", 0);

}

void sub_1000D55CC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = objc_alloc((Class)UIBarButtonItem);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Done"), &stru_10091C438, 0));
  v5 = objc_msgSend(v2, "initWithTitle:style:target:action:", v4, 2, *(_QWORD *)(a1 + 40), "_dismissOverlayViewController:");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationItem"));
  objc_msgSend(v6, "setRightBarButtonItem:", v5);

  v7 = objc_msgSend(objc_alloc((Class)BSUINavigationController), "initWithRootViewController:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v7, "setModalPresentationStyle:", 2);
  objc_msgSend(*(id *)(a1 + 40), "presentViewController:animated:completion:", v7, 1, 0);

}

void sub_1000D5958(void *a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double Height;
  void *v10;
  void *v11;
  id v12;
  CGRect v13;

  if (a1)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "collectionView"));
    objc_msgSend(v2, "contentInset");
    v4 = v3;
    v6 = v5;
    v8 = v7;

    Height = 0.0;
    if (objc_msgSend(a1, "isEditing"))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "actionBarViewController"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "view"));
      objc_msgSend(v11, "frame");
      Height = CGRectGetHeight(v13);

    }
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "collectionView"));
    objc_msgSend(v12, "setContentInset:", v4, v6, Height, v8);
    objc_msgSend(v12, "setScrollIndicatorInsets:", v4, v6, Height, v8);

  }
}

void sub_1000D6028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D604C(uint64_t a1)
{
  unint64_t v2;
  double v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "updateTabBarControllerForEditing:", *(unsigned __int8 *)(a1 + 40));
  LOBYTE(v2) = *(_BYTE *)(a1 + 40);
  v3 = (double)v2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "actionBarViewController"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  objc_msgSend(v4, "setAlpha:", v3);

}

uint64_t sub_1000D60B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000D60C4(uint64_t a1)
{
  _BOOL8 v1;
  void *v2;
  id v3;

  v1 = *(_BYTE *)(a1 + 40) == 0;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "actionBarViewController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "view"));
  objc_msgSend(v2, "setHidden:", v1);

}

void sub_1000D611C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  char v12;

  v2 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setTransitioningToNewLayout:", 0);

  v4 = objc_loadWeakRetained(v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "collectionView"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "collectionViewLayout"));
  objc_msgSend(v6, "invalidateLayout");

  v7 = objc_loadWeakRetained(v2);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "collectionView"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "viewWithTag:", 47));

  if (v9)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000D624C;
    v10[3] = &unk_1008E83C0;
    v11 = v9;
    v12 = *(_BYTE *)(a1 + 40);
    +[UIView transitionWithView:duration:options:animations:completion:](UIView, "transitionWithView:duration:options:animations:completion:", v11, 5242880, v10, 0, 0.3);

  }
}

id sub_1000D624C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setHidden:", *(unsigned __int8 *)(a1 + 40));
}

void sub_1000D6498(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "_dismissIfSupplementContentPDFPicker");
  objc_msgSend(*(id *)(a1 + 32), "openItemAtIndexPath:completion:", v4, 0);

}

void sub_1000D6664(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Use the containers rotor to access the actions toolbar. Double tap the done button to exit editing mode."), &stru_10091C438, 0));
  objc_msgSend(v1, "addObject:", v2);

}

void sub_1000D6920(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, uint64_t))v3 + 2))(v3, a2);
    v3 = v4;
  }

}

void sub_1000D6C48(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(objc_alloc((Class)BSUINavigationController), "initWithRootViewController:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "setPresentedReadingListPopover:", v3);
  objc_msgSend(v3, "setModalPresentationStyle:", 7);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "popoverPresentationController"));
  objc_msgSend(v2, "setPermittedArrowDirections:", 1);
  objc_msgSend(v2, "setSourceItem:", *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "presentViewController:animated:completion:", v3, 1, 0);

}

id sub_1000D734C(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id obj;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[128];

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  if (a1)
  {
    v43 = v13;
    v16 = a1;
    if (objc_msgSend(v11, "count") == (id)1)
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "dataSourceAdaptor"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "booksDataSource"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndexedSubscript:", 0));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "assetID"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "productInfoForAssetID:", v20));

      a1 = v16;
      v22 = objc_alloc((Class)BSUIContextActionDataAssetModel);
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectAtIndexedSubscript:", 0));
      v24 = objc_msgSend(v22, "initWithLibraryAsset:productProfile:", v23, v21);

      v13 = v43;
      v25 = objc_msgSend(objc_alloc((Class)BSUIContextActionDataModel), "initWithAssetModel:sourceView:", v24, v43);
      objc_msgSend(v25, "setSourcePoint:", v14);

    }
    else
    {
      v39 = v15;
      v40 = v14;
      v41 = v12;
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v11, "count")));
      v45 = 0u;
      v46 = 0u;
      v47 = 0u;
      v48 = 0u;
      v42 = v11;
      obj = v11;
      v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v49, 16);
      if (v27)
      {
        v28 = v27;
        v29 = *(_QWORD *)v46;
        do
        {
          v30 = 0;
          do
          {
            if (*(_QWORD *)v46 != v29)
              objc_enumerationMutation(obj);
            v31 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)v30);
            v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "dataSourceAdaptor"));
            v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "booksDataSource"));
            v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "assetID"));
            v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "productInfoForAssetID:", v34));

            a1 = v16;
            v36 = objc_msgSend(objc_alloc((Class)BSUIContextActionDataAssetModel), "initWithLibraryAsset:productProfile:", v31, v35);
            objc_msgSend(v26, "addObject:", v36);

            v30 = (char *)v30 + 1;
          }
          while (v28 != v30);
          v28 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v49, 16);
        }
        while (v28);
      }

      v25 = objc_msgSend(objc_alloc((Class)BSUIContextActionDataModel), "initWithAssetModels:", v26);
      v12 = v41;
      v11 = v42;
      v13 = v43;
      v15 = v39;
      v14 = v40;
    }
    objc_msgSend(v25, "setOriginatingLocation:", v12);
    objc_msgSend(v25, "setSourceBarButtonItem:", v15);
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "im_ancestorConformingToProtocol:", &OBJC_PROTOCOL___BCTransactionProviding));
    objc_msgSend(v25, "setTransactionProvider:", v37);

  }
  else
  {
    v25 = 0;
  }

  return v25;
}

void sub_1000D77E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000D7800(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v15;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellForItemAtIndexPath:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(a1 + 32), "convertPoint:toView:", v3, *(double *)(a1 + 56), *(double *)(a1 + 64));
  v5 = v4;
  v7 = v6;
  v15 = *(_QWORD *)(a1 + 40);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v15, 1));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "booksAtIndexPaths:", v8));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "collection"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", v5, v7));
  v12 = sub_1000D7948(WeakRetained, v9, v10, v3, v11, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  return v13;
}

id sub_1000D7948(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id location;
  void *v28;

  v11 = a2;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  if (a1)
  {
    objc_initWeak(&location, a1);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1000D7D70;
    v20[3] = &unk_1008EA338;
    objc_copyWeak(&v26, &location);
    v21 = v11;
    v22 = v12;
    v23 = v13;
    v24 = v14;
    v25 = v15;
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[UIDeferredMenuElement elementWithUncachedProvider:](UIDeferredMenuElement, "elementWithUncachedProvider:", v20));
    v28 = v16;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v28, 1));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:children:](UIMenu, "menuWithTitle:children:", &stru_10091C438, v17));

    objc_destroyWeak(&v26);
    objc_destroyWeak(&location);
  }
  else
  {
    v18 = 0;
  }

  return v18;
}

void sub_1000D7B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D7C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000D7C88(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (objc_msgSend(*(id *)(a1 + 32), "count") == (id)1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "collectionView"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstObject"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "cellForItemAtIndexPath:", v4));

  }
  else
  {
    v5 = 0;
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "booksAtIndexPaths:", *(_QWORD *)(a1 + 32)));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "collection"));
  v8 = sub_1000D7948(WeakRetained, v6, v7, v5, 0, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

void sub_1000D7D70(void **a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void (**v8)(id, void *);

  v8 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 9);
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKContextMenuProvider sharedProvider](BKContextMenuProvider, "sharedProvider"));
    v5 = sub_1000D734C(WeakRetained, a1[4], a1[5], a1[6], a1[7], a1[8]);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "menuElementsForViewController:dataModel:", WeakRetained, v6));

    v8[2](v8, v7);
  }
  else
  {
    v8[2](v8, &__NSArray0__struct);
  }

}

void sub_1000D8324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D8340(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  char v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ba_effectiveAnalyticsTracker"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "valueForKey:", CFSTR("assetID")));
  objc_msgSend(v4, "emitLibraryDataEditEventWithTracker:contentIDs:actionType:result:", v5, v6, 3, a2);

  if ((_DWORD)a2)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000D843C;
    v7[3] = &unk_1008E7AA8;
    objc_copyWeak(&v8, (id *)(a1 + 48));
    v9 = *(_BYTE *)(a1 + 56);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
    objc_destroyWeak(&v8);
  }
}

void sub_1000D843C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setEditing:animated:", 0, *(_BYTE *)(a1 + 40) == 0);

}

void sub_1000D8538(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "collection"));
  v5 = sub_1000D734C(v2, v3, v4, 0, 0, *(void **)(a1 + 48));
  v7 = (id)objc_claimAutoreleasedReturnValue(v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKContextMenuProvider sharedProvider](BKContextMenuProvider, "sharedProvider"));
  objc_msgSend(v6, "showShareSheetWithDataModel:forViewController:completion:", v7, *(_QWORD *)(a1 + 32), &stru_1008EA380);

}

void sub_1000D86F4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000D8710(uint64_t a1, uint64_t a2)
{
  void *v4;
  id *v5;
  id WeakRetained;
  void *v7;
  void *v8;
  _QWORD block[4];
  id v10;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
  v5 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ba_effectiveAnalyticsTracker"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("assetID")));
  objc_msgSend(v4, "emitLibraryDataEditEventWithTracker:contentIDs:actionType:result:", v7, v8, 2, a2);

  if ((_DWORD)a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000D8814;
    block[3] = &unk_1008E74C8;
    objc_copyWeak(&v10, v5);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v10);
  }
}

void sub_1000D8814(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "doneForSelectedItems:", 0);

}

void sub_1000D89B4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(+[BKContextMenuProvider sharedProvider](BKContextMenuProvider, "sharedProvider"));
  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "collection"));
  v5 = sub_1000D734C(v2, v3, v4, 0, 0, *(void **)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v7, "performRemoveWithDataModel:forViewController:completion:", v6, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));

}

void sub_1000D8C10(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layout"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mainHeaderMetrics"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "headerBackgroundColor"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  objc_msgSend(v4, "setBackgroundColor:", v3);

}

void sub_1000D8D6C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "updateBarButtonsAnimated:", 1);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionView"));
  objc_msgSend(v2, "layoutIfNeeded");

}

void sub_1000D9528(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x12u);
}

void sub_1000D9874(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v3 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000D996C;
  v7[3] = &unk_1008EA418;
  v8 = v3;
  v9 = v2;
  v10 = *(id *)(a1 + 40);
  v11 = *(id *)(a1 + 48);
  v12 = *(id *)(a1 + 56);
  v4 = *(id *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v13 = v4;
  v14 = v5;
  v6 = v2;
  objc_msgSend(v6, "fetchLibraryAssetsFromAssetIDs:handler:", v8, v7);

}

void sub_1000D996C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id obj;
  void *v39;
  _QWORD block[4];
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD v47[4];
  id v48;
  uint64_t v49;
  id v50;
  NSObject *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _QWORD v56[4];
  NSObject *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[128];
  _BYTE v63[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v3, "count")));
  v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", objc_msgSend(v3, "count")));
  v5 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  obj = v3;
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v63, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v59;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v59 != v8)
          objc_enumerationMutation(obj);
        v10 = *(id *)(*((_QWORD *)&v58 + 1) + 8 * (_QWORD)v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
        objc_msgSend(v5, "removeObject:", v11);

        if (objc_msgSend(v10, "isValid"))
        {
          objc_msgSend(v4, "addObject:", v10);
          v12 = objc_msgSend(v10, "contentType");
          if (!(_DWORD)v12)
            v12 = (id)((objc_msgSend(v10, "isStoreItem", v12) & 1) != 0
                    || objc_msgSend(v10, "isSeriesItem"));
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithShort:](NSNumber, "numberWithShort:", v12));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
          objc_msgSend(v39, "setObject:forKeyedSubscript:", v13, v14);

        }
        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v58, v63, 16);
    }
    while (v7);
  }

  v15 = dispatch_group_create();
  v16 = _NSConcreteStackBlock;
  if (objc_msgSend(v4, "count"))
  {
    dispatch_group_enter(v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionProvider"));
    v18 = *(_QWORD *)(a1 + 48);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectAtIndexedSubscript:", 0));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "managedObjectContext"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "collectionWithCollectionID:inManagedObjectContext:error:", v18, v20, 0));

    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionController"));
    v56[0] = _NSConcreteStackBlock;
    v56[1] = 3221225472;
    v56[2] = sub_1000D9E48;
    v56[3] = &unk_1008E7418;
    v57 = v15;
    objc_msgSend(v22, "addBooks:toCollection:forceToTop:completion:", v4, v21, 0, v56);

  }
  if (objc_msgSend(v5, "count"))
  {
    v35 = v5;
    v36 = v4;
    v54 = 0u;
    v55 = 0u;
    v52 = 0u;
    v53 = 0u;
    v37 = v5;
    v23 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v52, v62, 16);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)v53;
      do
      {
        v26 = 0;
        do
        {
          if (*(_QWORD *)v53 != v25)
            objc_enumerationMutation(v37);
          v27 = *(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * (_QWORD)v26);
          dispatch_group_enter(v15);
          v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionController"));
          v47[0] = v16;
          v47[1] = 3221225472;
          v47[2] = sub_1000D9E50;
          v47[3] = &unk_1008EA3F0;
          v29 = v16;
          v30 = *(_QWORD *)(a1 + 48);
          v48 = *(id *)(a1 + 40);
          v49 = v27;
          v50 = v39;
          v51 = v15;
          v31 = v30;
          v16 = v29;
          objc_msgSend(v28, "addStoreID:toCollectionID:forceToTop:completion:", v27, v31, 0, v47);

          v26 = (char *)v26 + 1;
        }
        while (v24 != v26);
        v24 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v52, v62, 16);
      }
      while (v24);
    }

    v5 = v35;
    v4 = v36;
  }
  block[0] = v16;
  block[1] = 3221225472;
  block[2] = sub_1000D9F7C;
  block[3] = &unk_1008E9800;
  v41 = v39;
  v42 = *(id *)(a1 + 56);
  v43 = *(id *)(a1 + 64);
  v44 = *(id *)(a1 + 72);
  v32 = *(id *)(a1 + 48);
  v33 = *(_QWORD *)(a1 + 80);
  v45 = v32;
  v46 = v33;
  v34 = v39;
  dispatch_group_notify(v15, (dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1000D9E48(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000D9E50(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000D9EE4;
  v4[3] = &unk_1008EA3C8;
  v5 = *(id *)(a1 + 48);
  v6 = *(id *)(a1 + 56);
  objc_msgSend(v2, "fetchLibraryAssetFromAssetID:handler:", v3, v4);

}

void sub_1000D9EE4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  if (objc_msgSend(v6, "contentType"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithShort:](NSNumber, "numberWithShort:", objc_msgSend(v6, "contentType")));
    v4 = *(void **)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assetID"));
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, v5);

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_1000D9F7C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  if (!objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v2 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v19;
      do
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v19 != v5)
            objc_enumerationMutation(v2);
          v7 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)v6);
          v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "UUIDString"));

          objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v7, v9);
          v6 = (char *)v6 + 1;
        }
        while (v4 != v6);
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v4);
    }

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "presentingViewController"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "presentingViewController"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000DA160;
  v12[3] = &unk_1008E78B8;
  v13 = *(id *)(a1 + 32);
  v14 = *(id *)(a1 + 56);
  v15 = *(id *)(a1 + 64);
  v16 = v10;
  v17 = *(_QWORD *)(a1 + 72);
  objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 1, v12);

}

void sub_1000DA160(uint64_t a1)
{
  void (**v2)(void);

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
    +[BSUINoticeViewController presentNoticeForAddingAssets:collectionTitle:collectionID:sourceViewController:options:](BSUINoticeViewController, "presentNoticeForAddingAssets:collectionTitle:collectionID:sourceViewController:options:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0);
  v2 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "successfulAddFinishedBlock"));
  if (v2)
    v2[2]();
  objc_msgSend(*(id *)(a1 + 64), "setSuccessfulAddFinishedBlock:", 0);

}

void sub_1000DA51C(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, uint64_t))v1 + 2))(v1, 1);
    v1 = v2;
  }

}

void sub_1000DA554(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_1000DA630(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;
  char v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000DA6CC;
  v4[3] = &unk_1008EA440;
  v5 = v2;
  v7 = *(_BYTE *)(a1 + 48);
  v6 = *(id *)(a1 + 40);
  v3 = v2;
  objc_msgSend(v3, "requestPrimaryScene:", v4);

}

void sub_1000DA6CC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainFlowController"));
  objc_msgSend(v2, "showLibraryAnimated:completion:", *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 40));

}

void sub_1000DA7C8(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;
  char v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000DA878;
  v4[3] = &unk_1008EA468;
  v5 = v2;
  v8 = *(_BYTE *)(a1 + 56);
  v6 = *(id *)(a1 + 40);
  v7 = *(id *)(a1 + 48);
  v3 = v2;
  objc_msgSend(v3, "requestPrimaryScene:", v4);

}

void sub_1000DA878(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainFlowController"));
  objc_msgSend(v2, "showLibraryAnimated:assetID:completion:", *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_1000DA954(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  char v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000DA9E0;
  v3[3] = &unk_1008EA490;
  v4 = *(id *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  objc_msgSend(v2, "requestPrimaryScene:", v3);

}

void sub_1000DA9E0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = a2;
  v4 = objc_opt_class(UIViewController);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "rootBarCoordinator"));

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectedNavigationController"));
  v7 = BUDynamicCast(v4, v6);
  v8 = (id)objc_claimAutoreleasedReturnValue(v7);

  objc_msgSend(v8, "bk_presentCollectionWithID:replaceExistingPresentedCollection:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

id sub_1000DAD54(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "removeAllObjects");
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 64);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 80), "currentIdentifiers"));
  objc_msgSend(v3, "unionSet:", v4);

  return objc_msgSend(*(id *)(a1 + 32), "_rebuild");
}

id sub_1000DAF08(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "addObject:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "_rebuild");
}

void sub_1000DAFB0(uint64_t a1)
{
  void *v2;
  id v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addedObjects"));
  v3 = objc_msgSend(v2, "count");
  v4 = v3 != 0;

  if (v3)
  {
    v5 = *(void **)(*(_QWORD *)(a1 + 40) + 64);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addedObjects"));
    objc_msgSend(v5, "addObjectsFromArray:", v6);

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deletedObjects"));
  v8 = objc_msgSend(v7, "count");

  if (v8)
  {
    v9 = *(void **)(*(_QWORD *)(a1 + 40) + 64);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "deletedObjects"));
    objc_msgSend(v9, "addObjectsFromArray:", v10);

    v4 = 1;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updatedObjects"));
  v12 = objc_msgSend(v11, "count");

  if (v12)
  {
    v13 = *(void **)(*(_QWORD *)(a1 + 40) + 64);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updatedObjects"));
    objc_msgSend(v13, "addObjectsFromArray:", v14);

  }
  else if (!v4)
  {
    return;
  }
  objc_msgSend(*(id *)(a1 + 40), "_rebuild");
}

void sub_1000DB1B4(uint64_t a1, void *a2)
{
  id v3;
  NSMutableSet *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  id v10;
  void *v11;
  BOOL v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  id v22;
  NSObject *v23;
  NSMutableSet *v24;
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;
  void *v28;
  id v29;
  NSMutableSet *v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[5];
  NSMutableSet *v34;
  _QWORD block[5];
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];

  v3 = a2;
  kdebug_trace(725353712, 100, 0, 0, 0);
  v4 = objc_opt_new(NSMutableSet);
  v32 = a1;
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "libraryAssetsWithAssetIDsContainedInList:tempAssetIDs:inManagedObjectContext:", *(_QWORD *)(a1 + 32), 0, v3));
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
  v30 = v4;
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v38;
    v29 = v3;
    v31 = v5;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v38 != v8)
          objc_enumerationMutation(v5);
        v10 = *(id *)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v10, "isValid"))
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "seriesID"));
          if (objc_msgSend(v10, "isContainer"))
            v12 = v11 == 0;
          else
            v12 = 1;
          if (!v12)
          {
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "seriesStackAssetIDs"));
            if (v13)
            {
              v14 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "libraryAssetsWithAssetIDsContainedInList:tempAssetIDs:inManagedObjectContext:", v13, 0, v3));

            }
            else
            {
              v15 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager seriesStackBooksForBook:](BKLibraryManager, "seriesStackBooksForBook:", v10));
            }
            v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "valueForKey:", CFSTR("objectID")));
            if (objc_msgSend(v16, "count") && objc_msgSend(v10, "isValid"))
            {
              v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v32 + 40), "objectForKeyedSubscript:", v11));
              v18 = objc_msgSend(v16, "isEqualToArray:", v17);

              if ((v18 & 1) == 0)
                -[NSMutableSet addObject:](v30, "addObject:", v11);
              objc_msgSend(*(id *)(v32 + 40), "setObject:forKeyedSubscript:", v16, v11);
              v3 = v29;
              v4 = v30;
            }
            else
            {
              objc_msgSend(*(id *)(v32 + 40), "removeObjectForKey:", v11);
              -[NSMutableSet addObject:](v4, "addObject:", v11);
            }

            v5 = v31;
          }

        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    }
    while (v7);
  }
  v19 = objc_msgSend(*(id *)(v32 + 40), "copy");
  v20 = *(_QWORD *)(v32 + 48);
  v21 = *(NSObject **)(v20 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000DB544;
  block[3] = &unk_1008E7338;
  block[4] = v20;
  v22 = v19;
  v36 = v22;
  v23 = v21;
  v24 = v30;
  dispatch_async(v23, block);
  if (-[NSMutableSet count](v30, "count"))
  {
    v25 = *(_QWORD *)(v32 + 48);
    v26 = *(NSObject **)(v25 + 48);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1000DB550;
    v33[3] = &unk_1008E7338;
    v33[4] = v25;
    v34 = v30;
    v27 = v26;
    v24 = v30;
    dispatch_async(v27, v33);

  }
  kdebug_trace(725353712, 101, 0, 0, 0);

}

void sub_1000DB544(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 40));
}

void sub_1000DB550(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 72);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "seriesCoversForSeriesIdsChanged:", *(_QWORD *)(a1 + 40), (_QWORD)v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

void sub_1000DB7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000DB808(_QWORD *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = a1[4];
  if (!*(_BYTE *)(v1 + 24))
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 16), "objectForKeyedSubscript:", a1[5]));
    v3 = objc_msgSend(v6, "copy");
    v4 = *(_QWORD *)(a1[6] + 8);
    v5 = *(void **)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;

  }
}

void sub_1000DB878(_QWORD *a1, void *a2)
{
  id v3;
  _UNKNOWN **v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *i;
  void *v18;
  _UNKNOWN **v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  os_unfair_lock_s *v27;
  void *v28;
  os_unfair_lock_s *v29;
  id v30;
  void *v31;
  NSObject *v32;
  id v33;
  void *v34;
  NSObject *v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  void *v39;
  id v40;
  id obj;
  _QWORD v42[4];
  id v43;
  _QWORD block[4];
  id v45;
  id v46;
  _QWORD v47[5];
  id v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD v54[2];
  _QWORD v55[2];
  _BYTE v56[128];
  uint64_t v57;

  v3 = a2;
  v4 = BCMutableCloudSyncVersions_ptr;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v57 = a1[4];
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v57, 1));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "libraryAssetsWithAssetIDsContainedInList:tempAssetIDs:inManagedObjectContext:", v6, 0, v3));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "firstObject"));
  v9 = v8;
  if (v8)
  {
    v37 = a1;
    v39 = v7;
    v40 = v3;
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "seriesStackAssetIDs"));
    v38 = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager seriesStackBooksForBook:](BKLibraryManager, "seriesStackBooksForBook:", v9));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    obj = v10;
    v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v56, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v51;
      v15 = BCCoverCacheProcessingOptionsKey;
      v16 = BCCoverCacheAssetIDKey;
      do
      {
        for (i = 0; i != v13; i = (char *)i + 1)
        {
          if (*(_QWORD *)v51 != v14)
            objc_enumerationMutation(obj);
          v18 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)i);
          v19 = v4;
          v20 = objc_msgSend(v4[94], "processingOptionsFor:coverEffectsEnvironment:", v18, 0);
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "assetID"));
          v54[0] = v15;
          v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedShort:](NSNumber, "numberWithUnsignedShort:", v20));
          v54[1] = v16;
          v55[0] = v22;
          v55[1] = v21;
          v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v55, v54, 2));
          objc_msgSend(v11, "addObject:", v23);

          v4 = v19;
        }
        v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v56, 16);
      }
      while (v13);
    }

    v24 = v36;
    if (objc_msgSend(v11, "count"))
    {
      while (1)
      {
        v25 = objc_msgSend(v11, "count");
        if (v25 >= objc_msgSend(v36, "count"))
          break;
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "firstObject"));
        objc_msgSend(v11, "addObject:", v26);

      }
    }
    v28 = (void *)v37[4];
    v27 = (os_unfair_lock_s *)v37[5];
    v29 = v27 + 2;
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472;
    v47[2] = sub_1000DBC60;
    v47[3] = &unk_1008E7928;
    v47[4] = v27;
    v48 = v28;
    v30 = v11;
    v49 = v30;
    os_unfair_lock_lock(v29);
    sub_1000DBC60((uint64_t)v47);
    os_unfair_lock_unlock(v29);
    v31 = (void *)v37[6];
    v32 = *(NSObject **)(v37[5] + 48);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000DBCA4;
    block[3] = &unk_1008E7950;
    v45 = v30;
    v46 = v31;
    v33 = v30;
    dispatch_async(v32, block);

    v7 = v39;
    v3 = v40;
    v9 = v38;
  }
  else
  {
    v34 = (void *)a1[6];
    v35 = *(NSObject **)(a1[5] + 48);
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472;
    v42[2] = sub_1000DBCE8;
    v42[3] = &unk_1008E7818;
    v43 = v34;
    dispatch_async(v35, v42);
    v24 = v43;
  }

}

void sub_1000DBC60(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(*(id *)(a1 + 48), "copy");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setObject:forKeyedSubscript:", v2, *(_QWORD *)(a1 + 40));

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 24) = 0;
}

void sub_1000DBCA4(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_1000DBCE8(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_1000DBE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000DBE2C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v17 = *(_QWORD *)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v17, 1));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "libraryAssetsWithAssetIDsContainedInList:tempAssetIDs:inManagedObjectContext:", v5, 0, v3));

  if (objc_msgSend(v6, "count"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 0));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "seriesContainer"));
    v9 = v8;
    if (v8)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "seriesStackAssetIDs"));
      v11 = v10;
      if (v10)
      {
        v12 = v10;
      }
      else
      {
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager seriesStackBooksForBook:](BKLibraryManager, "seriesStackBooksForBook:", v9));
        v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "valueForKey:", CFSTR("assetID")));

      }
      if (objc_msgSend(v12, "containsObject:", *(_QWORD *)(a1 + 32)))
      {
        v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "assetID"));
        v15 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
        v16 = *(void **)(v15 + 40);
        *(_QWORD *)(v15 + 40) = v14;

      }
    }

  }
}

void sub_1000DC068(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = objc_msgSend(v2, "copy");

  if (!objc_msgSend(v3, "count"))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "addObject:", *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 32), "_rebuild");
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager defaultManager](BKLibraryManager, "defaultManager"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000DC150;
  v6[3] = &unk_1008EA548;
  v7 = v3;
  v8 = *(id *)(a1 + 48);
  v5 = v3;
  objc_msgSend(v4, "performBackgroundReadOnlyBlock:", v6);

}

void sub_1000DC150(uint64_t a1, void *a2)
{
  id v3;
  NSMutableArray *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v3 = a2;
  v4 = objc_opt_new(NSMutableArray);
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v15 = a1;
  v5 = *(id *)(a1 + 32);
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v18;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v18 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v9);
        v11 = objc_opt_class(BKLibraryAsset);
        v16 = 0;
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "existingObjectWithID:error:", v10, &v16));
        v13 = BUDynamicCast(v11, v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        if (v14)
          -[NSMutableArray addObject:](v4, "addObject:", v14);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v7);
  }

  (*(void (**)(void))(*(_QWORD *)(v15 + 40) + 16))();
}

id sub_1000DC354(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
}

uint64_t sub_1000DC3D0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 24) = 1;
  return result;
}

void sub_1000DF54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, id *a11, id *a12, id *a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, id *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id *a24,id *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id *a31,id *a32,id *a33,id *a34,id *a35,uint64_t a36,uint64_t a37,uint64_t a38,id *a39,id *a40,id *a41,id *location,id *a43,id *a44,id *a45,id *a46,id *a47,id *a48,id *a49,id *a50,id *a51,id *a52)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a40);
  objc_destroyWeak(a34);
  objc_destroyWeak(a32);
  objc_destroyWeak(a31);
  objc_destroyWeak(a39);
  objc_destroyWeak(a35);
  objc_destroyWeak(a41);
  objc_destroyWeak(a44);
  objc_destroyWeak(a43);
  objc_destroyWeak(a45);
  objc_destroyWeak(a46);
  objc_destroyWeak(a47);
  objc_destroyWeak(a48);
  objc_destroyWeak(a49);
  objc_destroyWeak(a52);
  objc_destroyWeak(a51);
  objc_destroyWeak(a33);
  objc_destroyWeak(a25);
  objc_destroyWeak(a24);
  objc_destroyWeak(a17);
  objc_destroyWeak(a11);
  objc_destroyWeak(a18);
  objc_destroyWeak(a13);
  objc_destroyWeak(a12);
  objc_destroyWeak((id *)&STACK[0x638]);
  _Unwind_Resume(a1);
}

void sub_1000DF81C(id a1, BOOL a2)
{
  exit(0);
}

id sub_1000DF82C(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(a1 + 32);
  if (a2)
    v3 = v2[10];
  else
    v3 = 1;
  return objc_msgSend(v2, "_emulateCurrentLightLevelChange:", v3);
}

void sub_1000DF84C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v4, "setBool:forKey:", 1, BRCUserDefaultEnableMonitoring);

  v5 = *(void **)(a1 + 32);
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  objc_msgSend(v5, "setValue:forKey:inNamespace:source:", v6, BRCBooksDefaultsKeyPersonalizationLocalSignalCollectionEnabled, BRCBooksDefaultsNamespace, 1);

}

void sub_1000DF8F0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v4, "setBool:forKey:", 1, BRCUserDefaultEnableMonitoring);

  v5 = *(void **)(a1 + 32);
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  objc_msgSend(v5, "setValue:forKey:inNamespace:source:", v6, BRCBooksDefaultsKeyPersonalizationLocalSignalSyncEnabled, BRCBooksDefaultsNamespace, 1);

}

void sub_1000DF994(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = a2;
  objc_msgSend(v3, "books_internal_toggleFakePlayer:", v4);
  objc_msgSend(*(id *)(a1 + 32), "validateCommand:", *(_QWORD *)(a1 + 40));
  v6 = objc_opt_class(UISwitch);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "sender"));

  v8 = BUDynamicCast(v6, v7);
  v9 = (id)objc_claimAutoreleasedReturnValue(v8);

  objc_msgSend(v9, "setOn:", objc_msgSend(*(id *)(a1 + 40), "state") == (id)1);
}

void sub_1000DFA38(id a1, BOOL a2)
{
  exit(0);
}

void sub_1000DFA48(id a1, BOOL a2)
{
  if (a2)
    +[BKLibraryLayoutAttributes setGlobalLayoutDebugMode:](BKLibraryLayoutAttributes, "setGlobalLayoutDebugMode:", 2);
  else
    +[BKLibraryLayoutAttributes setGlobalLayoutDebugMode:](BKLibraryLayoutAttributes, "setGlobalLayoutDebugMode:", 0);
}

void sub_1000DFA60(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_presentREIChromeEditingMenu");

}

id sub_1000DFA8C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lightLevelTitles"));
  v4 = objc_loadWeakRetained(v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectAtIndexedSubscript:", objc_msgSend(v4, "currentLightLevel")));

  return v5;
}

void sub_1000DFAFC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_presentLightLevelChangeAlert");

}

void sub_1000DFB28(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  v4 = objc_msgSend(objc_alloc((Class)BSUIFeedViewController), "initWithOptions:", &off_10092F408);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
  objc_msgSend(v3, "pushViewController:animated:", v4, 1);

}

void sub_1000DFB98(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  v4 = objc_alloc_init((Class)JSAFigaroSummaryViewController);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
  objc_msgSend(v3, "pushViewController:animated:", v4, 1);

}

id sub_1000DFBFC(uint64_t a1)
{
  id WeakRetained;
  void *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bootUrl"));

  return v2;
}

void sub_1000DFC34(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_presentProductPageAlsoAvailableAsAlert");

}

void sub_1000DFC60(id a1, NSIndexPath *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = objc_opt_class(BKAppDelegate);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
  v5 = BUDynamicCast(v2, v4);
  v7 = (id)objc_claimAutoreleasedReturnValue(v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "engagementManager"));
  objc_msgSend(v6, "forceSyncFromCloudKit");

}

void sub_1000DFCF0(id a1, NSIndexPath *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = objc_opt_class(BKAppDelegate);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
  v5 = BUDynamicCast(v2, v4);
  v7 = (id)objc_claimAutoreleasedReturnValue(v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "engagementManager"));
  objc_msgSend(v6, "forceSyncToCloudKit");

}

void sub_1000DFD80(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  BKLocalSignalStressTestViewController *v4;

  v4 = objc_alloc_init(BKLocalSignalStressTestViewController);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
  objc_msgSend(v3, "pushViewController:animated:", v4, 1);

}

void sub_1000DFDE4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  BKBookMessagesDebugViewController *v4;

  v4 = objc_alloc_init(BKBookMessagesDebugViewController);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
  objc_msgSend(v3, "pushViewController:animated:", v4, 1);

}

void sub_1000DFE48(id a1, NSIndexPath *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = objc_opt_class(BKAppDelegate);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
  v5 = BUDynamicCast(v2, v4);
  v7 = (id)objc_claimAutoreleasedReturnValue(v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "engagementManager"));
  objc_msgSend(v6, "forcePurgeAll");

}

void sub_1000DFED8(id a1, NSIndexPath *a2)
{
  NSIndexPath *v2;

  v2 = a2;
  exit(0);
}

void sub_1000DFEEC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  BKAnalyticsDebugViewController *v4;

  v4 = objc_alloc_init(BKAnalyticsDebugViewController);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "navigationController"));
  objc_msgSend(v3, "pushViewController:animated:", v4, 1);

}

void sub_1000DFF50(id a1, NSIndexPath *a2)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BSUITemplate manager](BSUITemplate, "manager"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "resourceLoader"));
  objc_msgSend(v2, "clearCache");

}

__CFString *sub_1000DFF9C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;
  __CFString *v4;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "readingSessionCurrentStartOffset"))
  {
    v3 = objc_loadWeakRetained(v1);
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%.0f min"), (double)(uint64_t)objc_msgSend(v3, "readingSessionCurrentStartOffset") / 60.0));

  }
  else
  {
    v4 = CFSTR("None");
  }

  return v4;
}

void sub_1000E0038(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_presentSessionStartOffsetChangeAlert");

}

void sub_1000E0064(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_presentAddReadingSessionPickerFromIndexPath:duration:", v3, 120.0);

}

void sub_1000E00B4(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_presentAddReadingSessionPickerFromIndexPath:duration:", v3, 1800.0);

}

void sub_1000E0104(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_presentAddReadingSessionPickerFromIndexPath:duration:", v3, 3600.0);

}

void sub_1000E0154(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_presentAddReadingSessionPickerFromIndexPath:duration:", v3, 21600.0);

}

void sub_1000E01A4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_clearTodaysReadingTime");

}

void sub_1000E01D0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_clearAppStoreReview");

}

void sub_1000E01FC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_moveEligibleLocalBooksToUbiquity");

}

void sub_1000E0228(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_moveUbiquityBooksBackToLocal");

}

void sub_1000E0254(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_handleAppRemoval");

}

__CFString *sub_1000E0280(uint64_t a1)
{
  id WeakRetained;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coverCacheHashOrAdamID"));
  v3 = v2;
  if (!v2)
    v2 = CFSTR("None");
  v4 = v2;

  return v4;
}

void sub_1000E02DC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_presentCoverCacheDumpingAdamIDCoversAlert");

}

void sub_1000E0308(uint64_t a1)
{
  __CFNotificationCenter *DistributedCenter;
  id WeakRetained;

  DistributedCenter = CFNotificationCenterGetDistributedCenter();
  if (DistributedCenter)
    CFNotificationCenterPostNotification(DistributedCenter, AMSFamilyContentDeletionNotification, 0, 0, 1u);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_close:", 0);

}

void sub_1000E0368(uint64_t a1)
{
  id WeakRetained;

  notify_post((const char *)objc_msgSend(CFSTR("MCManagedBooksChanged"), "UTF8String"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_close:", 0);

}

void sub_1000E03B8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKNotificationManager sharedInstance](BKNotificationManager, "sharedInstance"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000E0470;
  v5[3] = &unk_1008E7A08;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  objc_msgSend(v4, "requestAuthorizationWithCompletion:", v5);

  objc_destroyWeak(&v6);
}

void sub_1000E045C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E0470(uint64_t a1, int a2)
{
  void *v4;
  id *v5;
  void *v6;
  id v7;
  _QWORD *v8;
  _QWORD block[4];
  _QWORD *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", 0, 0, 1));
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1000E06CC;
  v18[3] = &unk_1008E9B50;
  v5 = (id *)(a1 + 32);
  objc_copyWeak(&v19, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", CFSTR("Done"), 1, v18));
  objc_msgSend(v4, "addAction:", v6);

  if (a2)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000E06FC;
    v14[3] = &unk_1008EA7C8;
    v7 = (id)objc_claimAutoreleasedReturnValue(+[UNUserNotificationCenter currentNotificationCenter](UNUserNotificationCenter, "currentNotificationCenter"));
    v15 = v7;
    v16 = v4;
    objc_copyWeak(&v17, v5);
    objc_msgSend(v7, "getNotificationSettingsWithCompletionHandler:", v14);
    objc_destroyWeak(&v17);

  }
  else
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000E1094;
    v11[3] = &unk_1008E74F0;
    v12 = v4;
    objc_copyWeak(&v13, v5);
    v8 = objc_retainBlock(v11);
    if (v8)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *))v8[2])(v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000E10E4;
        block[3] = &unk_1008E7818;
        v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

    objc_destroyWeak(&v13);
    v7 = v12;
  }

  objc_destroyWeak(&v19);
}

void sub_1000E0698(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E06CC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_close:", 0);

}

void sub_1000E06FC(id *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD block[4];
  id v13;
  _QWORD *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[2];

  v3 = a2;
  if (objc_msgSend(v3, "authorizationStatus") == (id)2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[UNNotificationAction actionWithIdentifier:title:options:](UNNotificationAction, "actionWithIdentifier:title:options:", CFSTR("test.action1"), CFSTR("Action 1"), 0));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[UNNotificationAction actionWithIdentifier:title:options:](UNNotificationAction, "actionWithIdentifier:title:options:", CFSTR("test.action2"), CFSTR("Action 2"), 0));
    v23[0] = v4;
    v23[1] = v5;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v23, 2));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UNNotificationCategory categoryWithIdentifier:actions:intentIdentifiers:options:](UNNotificationCategory, "categoryWithIdentifier:actions:intentIdentifiers:options:", CFSTR("test.category"), v6, &__NSArray0__struct, 0));

    v8 = a1[4];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1000E09E0;
    v18[3] = &unk_1008EA778;
    v9 = v7;
    v19 = v9;
    v20 = a1[4];
    v21 = a1[5];
    objc_copyWeak(&v22, a1 + 6);
    objc_msgSend(v8, "getNotificationCategoriesWithCompletionHandler:", v18);
    objc_destroyWeak(&v22);

  }
  else
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000E0FE4;
    v15[3] = &unk_1008EA7A0;
    v16 = a1[5];
    objc_copyWeak(&v17, a1 + 6);
    v10 = objc_retainBlock(v15);
    v11 = objc_retainBlock(v10);
    if (v11)
    {
      if (+[NSThread isMainThread](NSThread, "isMainThread"))
      {
        ((void (*)(_QWORD *, id))v11[2])(v11, objc_msgSend(v3, "authorizationStatus"));
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000E1068;
        block[3] = &unk_1008E7950;
        v14 = v11;
        v13 = v3;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      }
    }

    objc_destroyWeak(&v17);
    v4 = v16;
  }

}

void sub_1000E09C0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E09E0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  unsigned __int8 v9;
  UIImage *ImageFromCurrentImageContext;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSData *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  UNMutableNotificationContent *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  UIImage *image;
  id v33;
  void *v34;
  _QWORD v35[4];
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  CGSize v41;

  v29 = a2;
  v3 = objc_msgSend(v29, "mutableCopy");
  objc_msgSend(v3, "addObject:", *(_QWORD *)(a1 + 32));
  v30 = v3;
  objc_msgSend(*(id *)(a1 + 40), "setNotificationCategories:", v3);
  v31 = objc_alloc_init((Class)BSUIMicaFileProvider);
  v33 = objc_msgSend(objc_alloc((Class)TUIMicaPlayer), "initWithPath:retinaScale:fileProvider:", CFSTR("/mica/ic_ReadingMeter-Checkmark_58_v4~AMH.caar"), v31, 1.0);
  v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "rootLayer"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[CALayer layer](CALayer, "layer"));
  objc_msgSend(v34, "bounds");
  objc_msgSend(v4, "setBounds:");
  objc_msgSend(v33, "addToLayer:onTop:gravity:", v4, 1, kCAGravityResize);
  objc_msgSend(v4, "bounds");
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v4, "isOpaque");
  v41.width = v6;
  v41.height = v8;
  UIGraphicsBeginImageContextWithOptions(v41, v9, 0.0);
  objc_msgSend(v4, "renderInContext:", UIGraphicsGetCurrentContext());
  ImageFromCurrentImageContext = UIGraphicsGetImageFromCurrentImageContext();
  image = (UIImage *)objc_claimAutoreleasedReturnValue(ImageFromCurrentImageContext);
  UIGraphicsEndImageContext();
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "temporaryDirectory"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "URLByAppendingPathComponent:", CFSTR("test.png")));

  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "path"));
  v16 = UIImagePNGRepresentation(image);
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  objc_msgSend(v14, "createFileAtPath:contents:attributes:", v15, v17, 0);

  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "UUIDString"));
  v39 = UNNotificationAttachmentOptionsHiddenFromDefaultExpandedViewKey;
  v40 = &__kCFBooleanTrue;
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v40, &v39, 1));
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[UNNotificationAttachment attachmentWithIdentifier:URL:options:error:](UNNotificationAttachment, "attachmentWithIdentifier:URL:options:error:", v19, v13, v20, 0));

  v22 = objc_opt_new(UNMutableNotificationContent);
  -[UNMutableNotificationContent setTitle:](v22, "setTitle:", CFSTR("Local Notification Test"));
  -[UNMutableNotificationContent setBody:](v22, "setBody:", CFSTR("The request was made 1 second ago."));
  v38 = v21;
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v38, 1));
  -[UNMutableNotificationContent setAttachments:](v22, "setAttachments:", v23);

  -[UNMutableNotificationContent setCategoryIdentifier:](v22, "setCategoryIdentifier:", CFSTR("test.category"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[UNTimeIntervalNotificationTrigger triggerWithTimeInterval:repeats:](UNTimeIntervalNotificationTrigger, "triggerWithTimeInterval:repeats:", 0, 1.0));
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "UUIDString"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[UNNotificationRequest requestWithIdentifier:content:trigger:](UNNotificationRequest, "requestWithIdentifier:content:trigger:", v26, v22, v24));

  v28 = *(void **)(a1 + 40);
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_1000E0E10;
  v35[3] = &unk_1008EA750;
  v36 = *(id *)(a1 + 48);
  objc_copyWeak(&v37, (id *)(a1 + 56));
  objc_msgSend(v28, "addNotificationRequest:withCompletionHandler:", v27, v35);
  objc_destroyWeak(&v37);

}

void sub_1000E0DF4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E0E10(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD *v5;
  _QWORD v6[4];
  _QWORD *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;

  v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000E0F44;
  v8[3] = &unk_1008EA728;
  v9 = *(id *)(a1 + 32);
  v4 = v3;
  v10 = v4;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  v5 = objc_retainBlock(v8);
  if (v5)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ((void (*)(_QWORD *))v5[2])(v5);
    }
    else
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1000E0FD8;
      v6[3] = &unk_1008E7818;
      v7 = v5;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    }
  }

  objc_destroyWeak(&v11);
}

void sub_1000E0F30(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E0F44(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  const __CFString *v4;
  void *v5;
  void *v6;
  id WeakRetained;

  v3 = a1 + 32;
  v2 = *(void **)(a1 + 32);
  if (*(_QWORD *)(v3 + 8))
    v4 = CFSTR("Failed to Post Notification");
  else
    v4 = CFSTR("Notificaion Posted");
  objc_msgSend(v2, "setTitle:", v4);
  v5 = *(void **)(a1 + 40);
  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "debugDescription"));
    objc_msgSend(*(id *)(a1 + 32), "setMessage:", v6);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setMessage:", 0);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "presentModalViewController:withTransition:", *(_QWORD *)(a1 + 32), 9);

}

uint64_t sub_1000E0FD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000E0FE4(uint64_t a1, uint64_t a2)
{
  void *v4;
  id WeakRetained;

  objc_msgSend(*(id *)(a1 + 32), "setTitle:", CFSTR("Not Authorized"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("UNNotificationSettings.authorizationStatus == %ld"), a2));
  objc_msgSend(*(id *)(a1 + 32), "setMessage:", v4);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "presentModalViewController:withTransition:", *(_QWORD *)(a1 + 32), 9);

}

uint64_t sub_1000E1068(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, id))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 32), "authorizationStatus"));
}

void sub_1000E1094(uint64_t a1)
{
  id WeakRetained;

  objc_msgSend(*(id *)(a1 + 32), "setTitle:", CFSTR("Requested Authorization not Granted"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "presentModalViewController:withTransition:", *(_QWORD *)(a1 + 32), 9);

}

uint64_t sub_1000E10E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000E1980(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 88);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "title"));
  v5 = objc_msgSend(v3, "indexOfObject:", v4);

  if (v5 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v6, "setInteger:forKey:", v5, kOverrideLightLevel);

    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80) = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    v9 = *(_QWORD *)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
    objc_msgSend(v7, "reloadRowsAtIndexPaths:withRowAnimation:", v8, 100);

    if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "isOn"))
      objc_msgSend(*(id *)(a1 + 32), "_emulateCurrentLightLevelChange:", v5);
  }
}

void sub_1000E1B78(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BCLightLevelController sharedInstance](BCLightLevelController, "sharedInstance"));
  objc_msgSend(v2, "emulateCurrentLightLevelChange:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
  objc_msgSend(v3, "setNavigationBarHidden:", 1);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationController"));
  objc_msgSend(v4, "setNavigationBarHidden:", 0);

}

void sub_1000E1D2C(id a1, UIAlertAction *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BRCConfigurationManager sharedInstance](BRCConfigurationManager, "sharedInstance"));
  objc_msgSend(v2, "setValue:forKey:inNamespace:source:", CFSTR("none"), BRCBooksDefaultsKeyProductPageAlsoAvailableAsType, BRCBooksDefaultsNamespace, 1);

}

void sub_1000E1D84(id a1, UIAlertAction *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BRCConfigurationManager sharedInstance](BRCConfigurationManager, "sharedInstance"));
  objc_msgSend(v2, "setValue:forKey:inNamespace:source:", CFSTR("type-1"), BRCBooksDefaultsKeyProductPageAlsoAvailableAsType, BRCBooksDefaultsNamespace, 1);

}

void sub_1000E1DDC(id a1, UIAlertAction *a2)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BRCConfigurationManager sharedInstance](BRCConfigurationManager, "sharedInstance"));
  objc_msgSend(v2, "setValue:forKey:inNamespace:source:", CFSTR("type-2"), BRCBooksDefaultsKeyProductPageAlsoAvailableAsType, BRCBooksDefaultsNamespace, 1);

}

void sub_1000E2000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E2020(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  objc_msgSend(v3, "setKeyboardType:", 11);
  objc_msgSend(v3, "setClearButtonMode:", 1);
  objc_msgSend(v3, "setText:", *(_QWORD *)(a1 + 32));

}

void sub_1000E2070(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "textFields"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "text"));

  v6 = objc_msgSend(v5, "length");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v8 = v7;
  if (v6)
  {
    objc_msgSend(v7, "setObject:forKey:", v5, kAllowsCoverCacheImagesLoggingUserDefaultsKey);
    v6 = v5;
  }
  else
  {
    objc_msgSend(v7, "removeObjectForKey:", kAllowsCoverCacheImagesLoggingUserDefaultsKey);
  }

  objc_msgSend(*(id *)(a1 + 32), "setCoverCacheHashOrAdamID:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v11 = *(_QWORD *)(a1 + 40);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
  objc_msgSend(v9, "reloadRowsAtIndexPaths:withRowAnimation:", v10, 100);

}

void sub_1000E24BC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD block[4];
  id v6;
  id v7;
  uint64_t v8;

  v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000E255C;
  block[3] = &unk_1008E7928;
  v6 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = *(_QWORD *)(a1 + 40);
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));

}

void sub_1000E255C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Connection error: %@"), *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(a1 + 32), "setMessage:", v2);

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "window"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "rootViewController"));
  objc_msgSend(v4, "presentViewController:animated:completion:", *(_QWORD *)(a1 + 32), 1, 0);

}

void sub_1000E2600(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  uint64_t v9;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000E26A0;
  block[3] = &unk_1008E7928;
  v7 = a2;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v8 = v3;
  v9 = v4;
  v5 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));

}

void sub_1000E26A0(uint64_t a1)
{
  uint64_t v2;
  const __CFString *v3;
  void *v4;
  void *v5;
  void *v6;
  __CFString *v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
    v3 = (const __CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Clear failed with error: %@"), v2));
  else
    v3 = CFSTR("Clear success.");
  v7 = (__CFString *)v3;
  objc_msgSend(*(id *)(a1 + 40), "setMessage:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "window"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "rootViewController"));
  objc_msgSend(v6, "presentViewController:animated:completion:", *(_QWORD *)(a1 + 40), 1, 0);

}

void sub_1000E4D60(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E4DA0(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

_QWORD *sub_1000E4DB8(_QWORD *result)
{
  _QWORD *v1;
  void *v2;
  void *v3;

  if (!--*(_QWORD *)(*(_QWORD *)(result[5] + 8) + 24))
  {
    v1 = result;
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v2, "postEvent:sender:", kBETestDriverOpenAnimationZoomEnd, v1[4]);

    v3 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v3, "postEvent:sender:", kBETestDriverOpenAnimationEnd, v1[4]);

    kdebug_trace(725353056, 0, 0, 0, 0);
    return objc_msgSend((id)v1[4], "animationsDidFinish");
  }
  return result;
}

void sub_1000E4E84(uint64_t a1)
{
  double v2;
  double v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "backgroundToAlpha");
  v3 = v2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundView"));
  objc_msgSend(v4, "setAlpha:", v3);

}

void sub_1000E4ED8(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  _OWORD v10[3];
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(v2, "coverToFrame");
  objc_msgSend(v2, "moveCoverToFrame:");
  objc_msgSend(*(id *)(a1 + 32), "audiobookToCenter");
  v4 = v3;
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v7, "setCenter:", v4, v6);

  v8 = *(void **)(a1 + 32);
  if (v8)
  {
    objc_msgSend(v8, "audiobookToTransform");
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
    v11 = 0u;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  v10[0] = v11;
  v10[1] = v12;
  v10[2] = v13;
  objc_msgSend(v9, "setTransform:", v10);

}

void sub_1000E4F94(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  id v12;

  objc_msgSend(*(id *)(a1 + 32), "bookContainerToAlpha");
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookContainerView"));
  objc_msgSend(v4, "setAlpha:", v3);

  v5 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(v5, "coverToAlpha");
    v7 = v6;
    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverContainerView"));
    objc_msgSend(v12, "setAlpha:", v7);

  }
  else
  {
    objc_msgSend(v5, "coverShadowToAlpha");
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverShadowView"));
    objc_msgSend(v10, "setAlpha:", v9);

    if (!*(_BYTE *)(a1 + 41))
    {
      v11 = *(void **)(a1 + 32);
      objc_msgSend(v11, "coverControlViewToShadowOpacity");
      objc_msgSend(v11, "_setLayerShadowOpacity:");
    }
  }
}

void sub_1000E507C(uint64_t a1)
{
  double v2;
  double v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "coverToCornerRadius");
  v3 = v2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImageView"));
  objc_msgSend(v4, "_setContinuousCornerRadius:", v3);

}

id sub_1000E50D0(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "controlsToAlpha");
  return objc_msgSend(v1, "_setControlsAlpha:");
}

id sub_1000E50F8(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  void *v5;

  if (!*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 32), "coverToAlpha");
    v3 = v2;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverContainerView"));
    objc_msgSend(v4, "setAlpha:", v3);

  }
  v5 = *(void **)(a1 + 32);
  objc_msgSend(v5, "toolbarToAlpha");
  return objc_msgSend(v5, "_setToolbarAlpha:");
}

void sub_1000E515C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

id sub_1000E5AB8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  return objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
}

id sub_1000E5AF0(id *a1)
{
  void *v2;

  objc_msgSend(a1[4], "removeFromSuperview");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "window"));
  objc_msgSend(v2, "setUserInteractionEnabled:", 1);

  return objc_msgSend(a1[6], "completeTransition:", 1);
}

void sub_1000E5FC8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v2 = objc_msgSend(*(id *)(a1 + 32), "count");
  if (objc_msgSend(*(id *)(a1 + 32), "count") == (id)1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", 0));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "isExplicit"));
    v5 = objc_msgSend(v4, "BOOLValue");

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[BURestrictionsProvider sharedInstance](BURestrictionsProvider, "sharedInstance"));
      v7 = (uint64_t)objc_msgSend(v6, "isExplicitContentAllowed");

    }
    else
    {
      v7 = 1;
    }
  }
  else
  {
    v7 = 0;
  }
  v8 = *(unsigned __int8 *)(a1 + 48);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "trashButton"));
  objc_msgSend(v9, "setEnabled:", v8);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "addButton"));
  objc_msgSend(v10, "setEnabled:", v2 != 0);

  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moreButton"));
  objc_msgSend(v11, "setEnabled:", v7);

}

void sub_1000E67E0(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)qword_1009F4F28;
  qword_1009F4F28 = v1;

}

void sub_1000E7D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E7D74(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000E7E14;
    v6[3] = &unk_1008E7680;
    v7 = WeakRetained;
    v8 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

  }
}

void sub_1000E7E14(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "_updateLibraryAsset");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_1000E7E5C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reviewMorePressed");

}

void sub_1000E859C(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 1);
}

void sub_1000EB228(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;

  v2 = IMRectFlippedForRTL(objc_msgSend(*(id *)(a1 + 32), "isRTL"), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkmarkView"));
  objc_msgSend(v9, "setFrame:", v2, v4, v6, v8);

}

void sub_1000EBD7C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  double v7;
  double v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "coverLayer"));
  objc_msgSend(v3, "setAnimateFrameChange:", 0);

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverView"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "coverLayer"));
  v5 = *(_QWORD **)(a1 + 32);
  v6 = v5[9];
  objc_msgSend(v5, "coverArea");
  objc_msgSend(v4, "setLibraryAsset:size:", v6, v7, v8);

}

void sub_1000ECE7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1000ECE94(uint64_t a1)
{
  id *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "audiobookStatus"));
  v3 = objc_msgSend(v2, "assetAudiobookStatusIsPlaying");
  v4 = objc_loadWeakRetained(v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "audiobookControl"));
  objc_msgSend(v5, "setPlaying:", v3);

}

void sub_1000ECF10(uint64_t a1)
{
  id *v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "audiobookStatus"));
  objc_msgSend(v2, "assetAudiobookStatusTrackProgress");
  v4 = v3;
  v5 = objc_loadWeakRetained(v1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "audiobookControl"));
  objc_msgSend(v6, "setProgress:", v4);

}

id sub_1000ECF94(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "configureViewsBasedOnState");
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_1000ECFBC(uint64_t a1)
{
  void *v2;
  double v3;
  float v4;
  void *v5;
  double v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryDownloadStatus"));
  objc_msgSend(v2, "progressValue");
  v4 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadProgressButton"));
  *(float *)&v6 = v4;
  objc_msgSend(v5, "setProgress:", v6);

  objc_msgSend(*(id *)(a1 + 32), "configureViewsBasedOnState");
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_1000ED2FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;

  v0 = objc_claimAutoreleasedReturnValue(+[NSCalendar currentCalendar](NSCalendar, "currentCalendar"));
  v1 = (void *)qword_1009F4F58;
  qword_1009F4F58 = v0;

  v2 = objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
  v3 = (void *)qword_1009F4F60;
  qword_1009F4F60 = v2;

  v4 = objc_alloc_init((Class)NSDateFormatter);
  v5 = (void *)qword_1009F4F38;
  qword_1009F4F38 = (uint64_t)v4;

  objc_msgSend((id)qword_1009F4F38, "setDateStyle:", 2);
  objc_msgSend((id)qword_1009F4F38, "setLocalizedDateFormatFromTemplate:", CFSTR("MMM d"));
  v6 = objc_alloc_init((Class)NSDateFormatter);
  v7 = (void *)qword_1009F4F40;
  qword_1009F4F40 = (uint64_t)v6;

  objc_msgSend((id)qword_1009F4F40, "setDateStyle:", 2);
  objc_msgSend((id)qword_1009F4F40, "setLocalizedDateFormatFromTemplate:", CFSTR("yyyy"));
  v8 = objc_alloc_init((Class)NSDateFormatter);
  v9 = (void *)qword_1009F4F48;
  qword_1009F4F48 = (uint64_t)v8;

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimeZone timeZoneForSecondsFromGMT:](NSTimeZone, "timeZoneForSecondsFromGMT:", 0));
  objc_msgSend((id)qword_1009F4F48, "setTimeZone:", v10);

  objc_msgSend((id)qword_1009F4F48, "setDateStyle:", 2);
  objc_msgSend((id)qword_1009F4F48, "setFormattingContext:", 2);
  return objc_msgSend((id)qword_1009F4F48, "setLocalizedDateFormatFromTemplate:", CFSTR("yyyy"));
}

void sub_1000ED42C(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("%1$@\n%2$@"), &stru_10091C438, 0));
  v2 = (void *)qword_1009F4F50;
  qword_1009F4F50 = v1;

}

id *sub_1000EDF20(id *result, char a2)
{
  id *v2;
  void *v3;
  void *v4;
  void *v5;

  if ((a2 & 1) == 0)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "storageProvider"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[4], "libraryAsset"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "permanentOrTemporaryAssetID"));
    objc_msgSend(v3, "storeValue:forKey:forConsumer:", &__kCFBooleanFalse, CFSTR("kStarRatedThisSession"), v5);

    return (id *)objc_msgSend(v2[4], "updateRatingAndReview");
  }
  return result;
}

id sub_1000EE83C(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  _QWORD v19[3];
  _QWORD v20[3];

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "mutableCopy");
    v19[0] = CFSTR("entryID");
    v19[1] = CFSTR("animateFromRefId");
    v20[0] = CFSTR("BKBookPresentingAnimateFromUid");
    v20[1] = CFSTR("BKBookPresentingAnimateFromRefId");
    v19[2] = CFSTR("animateFromRefInstance");
    v20[2] = CFSTR("BKBookPresentingAnimateFromRefInstance");
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v17 = 0u;
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v20, v19, 3));
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v15;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v15 != v7)
            objc_enumerationMutation(v4);
          v9 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v9, (_QWORD)v14));
          if (v10)
          {
            v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v9));
            objc_msgSend(v3, "setObject:forKeyedSubscript:", v10, v11);
            objc_msgSend(v3, "removeObjectForKey:", v9);

          }
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v6);
    }

  }
  else
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  }
  v12 = objc_msgSend(v3, "copy", (_QWORD)v14);

  return v12;
}

void sub_1000F036C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000F0384(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "contentRectForBounds:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

AMSPromise *__cdecl sub_1000F04A0(id a1, AMSUserNotificationAuthorizationResult *a2, NSError *a3)
{
  AMSUserNotificationAuthorizationResult *v4;
  NSError *v5;
  uint64_t v6;
  NSError *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  void *v11;

  v4 = a2;
  v5 = a3;
  v7 = v5;
  if (v5)
  {
    v8 = BSUIWelcomeScreenLog(v5, v6);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_10069FFDC(v7);

  }
  v10 = objc_msgSend(objc_alloc((Class)AMSPromiseResult), "initWithResult:error:", v4, v7);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[AMSPromise promiseWithPromiseResult:](AMSPromise, "promiseWithPromiseResult:", v10));

  return (AMSPromise *)v11;
}

void sub_1000F097C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v4 = a3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000F0A0C;
  v7[3] = &unk_1008E7950;
  v5 = *(id *)(a1 + 32);
  v8 = v4;
  v9 = v5;
  v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

}

void sub_1000F0A0C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults bu_groupUserDefaults](NSUserDefaults, "bu_groupUserDefaults"));
  objc_msgSend(v2, "setBool:forKey:", 1, CFSTR("BKWelcomeNotificationWarmingItem.warmingSheetShown"));
  objc_msgSend(v2, "synchronize");
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  v4 = v3;
  if (v3)
    (*((void (**)(id, _QWORD))v3 + 2))(v3, 0);

  v8 = *(_QWORD *)(a1 + 32);
  v7 = (id *)(a1 + 32);
  if (v8)
  {
    v9 = BSUIWelcomeScreenLog(v5, v6);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1006A00D8(v7);

  }
}

id sub_1000F1060(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  void *v5;

  v2 = *(double *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverContainerView"));
  objc_msgSend(v3, "setAlpha:", v2);

  objc_msgSend(*(id *)(a1 + 32), "moveCoverToFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v4 = *(double *)(a1 + 80);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v5, "setAlpha:", v4);

  return objc_msgSend(*(id *)(a1 + 32), "setBookshelfAlpha:", *(double *)(a1 + 88));
}

void sub_1000F10DC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

void sub_1000F1D08(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F1D60(uint64_t result)
{
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000F1D78(uint64_t result)
{
  if (!--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24))
  {
    result = *(_QWORD *)(result + 32);
    if (result)
      return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1000F1DB0(uint64_t a1)
{
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  objc_msgSend(*(id *)(a1 + 32), "moveCoverToFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 272), "setFrame:", *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 280), "setCenter:", *(double *)(a1 + 104), *(double *)(a1 + 112));
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 280);
  v3 = *(_OWORD *)(a1 + 136);
  v5[0] = *(_OWORD *)(a1 + 120);
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 152);
  return objc_msgSend(v2, "setTransform:", v5);
}

id sub_1000F1E3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 264), "setAlpha:", *(double *)(a1 + 40));
}

void sub_1000F1E54(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookshelfTintView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

id sub_1000F1E94(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 288), "setAlpha:", *(double *)(a1 + 40));
}

void sub_1000F1EAC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toViewController"));
  objc_msgSend(v1, "setNeedsWhitePointAdaptivityStyleUpdate");

}

void sub_1000F2080(uint64_t a1, void *a2)
{
  id v3;
  _QWORD *v4;
  NSObject *v5;
  id v6;
  _QWORD v7[4];
  _QWORD *v8;
  id v9;

  v3 = a2;
  v4 = *(_QWORD **)(a1 + 32);
  v5 = v4[19];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000F2110;
  v7[3] = &unk_1008E7680;
  v8 = v4;
  v9 = v3;
  v6 = v3;
  dispatch_async(v5, v7);

}

uint64_t sub_1000F2110(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "cb_persistInfoToDisk");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

id sub_1000F222C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 136), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_1000F22EC(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  id v5;
  void **v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  id v10;
  id v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "allKeys"));
  v3 = *(void **)(a1 + 40);
  v4 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 128);
  v6 = _NSConcreteStackBlock;
  v7 = 3221225472;
  v8 = sub_1000F23A0;
  v9 = &unk_1008E7680;
  v10 = v2;
  v11 = v3;
  v5 = v2;
  dispatch_async(v4, &v6);
  objc_msgSend(*(id *)(a1 + 32), "iq_setUbiquityDocumentMonitoringEnabled:", 1, v6, v7, v8, v9);

}

void sub_1000F23A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  id v6;
  void *v7;
  int v8;
  id v9;

  v2 = kdebug_trace(725353716, 93, 0, 0, 0);
  v3 = BKLibraryDataSourceUbiquityLog(v2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = objc_msgSend(*(id *)(a1 + 32), "count");
    v8 = 134217984;
    v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "fetchAssetIDsWithCompletion: Returning %ld assetIDs.", (uint8_t *)&v8, 0xCu);
  }

  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, _QWORD, _QWORD))v6 + 2))(v6, *(_QWORD *)(a1 + 32), 0);

}

void sub_1000F2554(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *i;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  id v18;
  __int128 v19;
  _QWORD block[5];
  id v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t buf[4];
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  _BYTE v32[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count")));
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
  if (v4)
  {
    v6 = v4;
    v7 = 0;
    v8 = *(_QWORD *)v25;
    *(_QWORD *)&v5 = 141558274;
    v19 = v5;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v25 != v8)
          objc_enumerationMutation(v3);
        v10 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 80), "objectForKeyedSubscript:", v10, v19));
        if (v11)
        {
          ++v7;
          objc_msgSend(v2, "addObject:", v11);
        }
        else
        {
          v12 = BKLibraryDataSourceUbiquityLog(0);
          v13 = objc_claimAutoreleasedReturnValue(v12);
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = v19;
            v29 = 1752392040;
            v30 = 2112;
            v31 = v10;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "fetchAssetsWithIDs: Asset not found. assetID: %{mask.hash}@", buf, 0x16u);
          }

          v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
          objc_msgSend(v2, "addObject:", v14);

        }
      }
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
    }
    while (v6);
  }
  else
  {
    v7 = 0;
  }

  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(void **)(a1 + 48);
  v17 = *(NSObject **)(v15 + 128);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F27B0;
  block[3] = &unk_1008EABA8;
  block[4] = v15;
  v21 = v2;
  v23 = v7;
  v22 = v16;
  v18 = v2;
  dispatch_async(v17, block);

}

void sub_1000F27B0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  void *v6;
  int v7;
  uint64_t v8;

  kdebug_trace(725353716, 95, 0, 0, 0);
  v2 = BKLibraryDataSourceUbiquityLog(objc_msgSend(*(id *)(a1 + 32), "_addAssetsToCoverCacheManager:", *(_QWORD *)(a1 + 40)));
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v7 = 134217984;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "fetchAssetsWithIDs: Returning %ld assets.", (uint8_t *)&v7, 0xCu);
  }

  v5 = objc_retainBlock(*(id *)(a1 + 48));
  v6 = v5;
  if (v5)
    (*((void (**)(id, _QWORD, _QWORD))v5 + 2))(v5, *(_QWORD *)(a1 + 40), 0);

}

void sub_1000F29D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  NSString *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  int8x16_t v17;
  _QWORD v18[4];
  int8x16_t v19;
  id v20;
  id v21;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  void *v35;

  v1 = a1;
  if (*(_QWORD *)(a1 + 32))
  {
    a1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 56), "objectForKeyedSubscript:"));
    v2 = (void *)a1;
  }
  else
  {
    v2 = 0;
  }
  v3 = BKLibraryDataSourceUbiquityLog(a1);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(v1 + 32);
    v6 = NSStringFromCGSize(*(CGSize *)(v1 + 64));
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v8 = *(_QWORD *)(v1 + 48);
    *(_DWORD *)buf = 141559554;
    v23 = 1752392040;
    v24 = 2112;
    v25 = v5;
    v26 = 2114;
    v27 = v7;
    v28 = 2160;
    v29 = 1752392040;
    v30 = 2112;
    v31 = v8;
    v32 = 2160;
    v33 = 1752392040;
    v34 = 2112;
    v35 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "bookCoverForLibraryAssetProperties: assetID: %{mask.hash}@, size: %{public}@, title: %{mask.hash}@ url: %{mask.hash}@", buf, 0x48u);

  }
  v9 = objc_msgSend(*(id *)(v1 + 40), "skipThumbnailGeneration");
  if ((_DWORD)v9)
  {
    v10 = BKLibraryDataSourceUbiquityLog(v9);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(v1 + 32);
      *(_DWORD *)buf = 141558274;
      v23 = 1752392040;
      v24 = 2112;
      v25 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "bookCoverForLibraryAssetProperties: Skipping thumbnail request. assetID: %{mask.hash}@", buf, 0x16u);
    }

    v13 = objc_retainBlock(*(id *)(v1 + 56));
    v14 = v13;
    if (v13)
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v13 + 2))(v13, 0, 0, 0);

  }
  else
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 40), "coverImageHelper"));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1000F2C4C;
    v18[3] = &unk_1008EABF8;
    v17 = *(int8x16_t *)(v1 + 32);
    v16 = (id)v17.i64[0];
    v19 = vextq_s8(v17, v17, 8uLL);
    v20 = v2;
    v21 = *(id *)(v1 + 56);
    objc_msgSend(v15, "coverImageFromURL:completion:", v20, v18);

  }
}

void sub_1000F2C4C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  _QWORD block[4];
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = *(void **)(a1 + 40);
  v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 128);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F2D30;
  block[3] = &unk_1008EABD0;
  v13 = v6;
  v14 = v7;
  v15 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v16 = v5;
  v17 = v9;
  v10 = v5;
  v11 = v6;
  dispatch_async(v8, block);

}

uint64_t sub_1000F2D30(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  void *v6;

  v2 = (uint64_t *)(a1 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    v3 = BKLibraryDataSourceUbiquityLog(a1);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1006A0158(a1, v2, v4);

  }
  v5 = objc_retainBlock(*(id *)(a1 + 64));
  v6 = v5;
  if (v5)
    (*((void (**)(id, _QWORD, _QWORD, _QWORD))v5 + 2))(v5, *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 32));

  return kdebug_trace(725352484, 0, 0, 0, 0);
}

void sub_1000F2F50(uint64_t a1)
{
  id *v2;
  id v3;
  uint64_t v4;
  void *i;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  id v13;
  void *v14;
  id obj;
  _QWORD v16[4];
  id v17;
  uint64_t v18;
  id v19;
  _QWORD block[7];
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  void (*v25)(uint64_t);
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];

  v2 = (id *)(a1 + 32);
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count")));
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  obj = *v2;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v28 != v4)
          objc_enumerationMutation(obj);
        v6 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i);
        v21 = 0;
        v22 = &v21;
        v23 = 0x3032000000;
        v24 = sub_10004E390;
        v25 = sub_10004E248;
        v26 = 0;
        v7 = *(_QWORD *)(a1 + 40);
        v8 = *(NSObject **)(v7 + 48);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000F31CC;
        block[3] = &unk_1008E8848;
        block[5] = v6;
        block[6] = &v21;
        block[4] = v7;
        dispatch_sync(v8, block);
        if (v22[5])
        {
          v9 = *(void **)(a1 + 40);
          if (*(_BYTE *)(a1 + 56))
          {
            if (objc_msgSend(v9, "_deleteFromAllDevicesURL:"))
              objc_msgSend(v14, "addObject:", v6);
          }
          else
          {
            objc_msgSend(v9, "_evictFromDeviceURL:assetID:");
          }
        }
        _Block_object_dispose(&v21, 8);

      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    }
    while (v3);
  }

  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(void **)(a1 + 48);
  v12 = *(NSObject **)(v10 + 128);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1000F3208;
  v16[3] = &unk_1008E8898;
  v17 = v14;
  v18 = v10;
  v19 = v11;
  v13 = v14;
  dispatch_async(v12, v16);

}

void sub_1000F31AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F31CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 56), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000F3208(id *a1)
{
  id v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  id v6;
  void *v7;
  int v8;
  id v9;

  v2 = objc_msgSend(a1[4], "count");
  if (v2)
  {
    v3 = BKLibraryDataSourceUbiquityLog(v2);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = objc_msgSend(a1[4], "count");
      v8 = 134217984;
      v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "deleteAssets: Unclaiming assets. count: %ld", (uint8_t *)&v8, 0xCu);
    }

    objc_msgSend(a1[5], "_unclaimAssetIDs:", a1[4]);
  }
  v6 = objc_retainBlock(a1[6]);
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t, _QWORD))v6 + 2))(v6, 1, 0);

}

void sub_1000F3488(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  id v13;
  id v14;
  id v15;
  _QWORD block[4];
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint8_t buf[4];
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  void *v39;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v5 = BKLibraryDataSourceUbiquityLog(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)buf = 141559810;
    v25 = 1752392040;
    v26 = 2112;
    v27 = v7;
    v28 = 2160;
    v29 = 1752392040;
    v30 = 2112;
    v31 = v8;
    v32 = 2160;
    v33 = 1752392040;
    v34 = 2112;
    v35 = v2;
    v36 = 2160;
    v37 = 1752392040;
    v38 = 2112;
    v39 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "resolveLibraryAsset: assetID: %{mask.hash}@ title: %{mask.hash}@ url: %{mask.hash}@ counterpartURL: %{mask.hash}@", buf, 0x52u);
  }

  if (v3)
  {
    v9 = v3;

    v2 = v9;
  }
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1000F3694;
  block[3] = &unk_1008EAC48;
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(void **)(a1 + 40);
  v12 = *(NSObject **)(v10 + 152);
  block[1] = 3221225472;
  v17 = v3;
  v18 = v2;
  v19 = v10;
  v20 = v11;
  v23 = *(id *)(a1 + 56);
  v21 = *(id *)(a1 + 48);
  v22 = v4;
  v13 = v4;
  v14 = v2;
  v15 = v3;
  dispatch_async(v12, block);

}

uint64_t sub_1000F3694(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  BKUbiquityExtractOperationAttributes *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  BOOL v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  id *v34;
  NSObject *v35;
  NSObject *v36;
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  _QWORD v41[4];
  id v42;
  _QWORD v43[4];
  id v44;
  id v45;
  _QWORD v46[5];
  id v47;
  id v48;
  _QWORD v49[4];
  id v50;
  _QWORD v51[4];
  id v52;
  _QWORD block[4];
  id v54;
  id v55;
  char v56;
  uint8_t buf[4];
  uint64_t v58;
  __int16 v59;
  void *v60;
  __int16 v61;
  uint64_t v62;
  __int16 v63;
  void *v64;
  __int16 v65;
  uint64_t v66;
  __int16 v67;
  uint64_t v68;
  __int16 v69;
  uint64_t v70;
  __int16 v71;
  void *v72;

  if (*(_QWORD *)(a1 + 32) || objc_msgSend(*(id *)(a1 + 40), "bc_isDownloaded"))
  {
    v56 = 0;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "path"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v4 = objc_msgSend(v3, "fileExistsAtPath:isDirectory:", v2, &v56);
    if (!(_DWORD)v4)
      goto LABEL_25;
    v5 = +[BKAssetUtilities contentTypeForPath:](BKAssetUtilities, "contentTypeForPath:", v2);
    if (v56 || (_DWORD)v5 == 3)
    {
      v16 = *(_QWORD *)(a1 + 72) == 0;
      v17 = BKLibraryDataSourceUbiquityLog(v5);
      v18 = objc_claimAutoreleasedReturnValue(v17);
      v19 = v18;
      if (v16)
      {
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          sub_1006A0308();

        v35 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 128);
        v51[0] = _NSConcreteStackBlock;
        v51[1] = 3221225472;
        v51[2] = sub_1000F3DFC;
        v51[3] = &unk_1008E7818;
        v52 = *(id *)(a1 + 80);
        dispatch_async(v35, v51);
        v6 = v52;
      }
      else
      {
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "assetID"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "url"));
          *(_DWORD *)buf = 141558786;
          v58 = 1752392040;
          v59 = 2112;
          v60 = v20;
          v61 = 2160;
          v62 = 1752392040;
          v63 = 2112;
          v64 = v21;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "resolveLibraryAsset: No action required. assetID: %{mask.hash}@ url: %{mask.hash}@", buf, 0x2Au);

        }
        v22 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 128);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000F3DB0;
        block[3] = &unk_1008E7950;
        v55 = *(id *)(a1 + 80);
        v54 = *(id *)(a1 + 72);
        dispatch_async(v22, block);

        v6 = v55;
      }
      goto LABEL_28;
    }
    v4 = +[BUZipFileArchive isZipArchiveAtURL:error:](BUZipFileArchive, "isZipArchiveAtURL:error:", *(_QWORD *)(a1 + 40), 0);
    if ((_DWORD)v4)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_counterpartURLForURL:", *(_QWORD *)(a1 + 40)));
      v7 = objc_opt_new(BKUbiquityExtractOperationAttributes);
      -[BKUbiquityExtractOperationAttributes setAssetID:](v7, "setAssetID:", *(_QWORD *)(a1 + 56));
      -[BKUbiquityExtractOperationAttributes setDestURL:](v7, "setDestURL:", v6);
      -[BKUbiquityExtractOperationAttributes setCompletion:](v7, "setCompletion:", *(_QWORD *)(a1 + 80));
      v8 = (void *)objc_opt_new(BKExtractFileOperation);
      objc_msgSend(v8, "setSourceFilePath:", v2);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "path"));
      objc_msgSend(v8, "setDestinationFilePath:", v9);

      objc_msgSend(v8, "setSourceFileType:", 1);
      objc_msgSend(v8, "setUseFileCoordination:", 1);
      objc_msgSend(v8, "setFixFilePermissions:", 1);
      objc_msgSend(v8, "setDelegate:", *(_QWORD *)(a1 + 48));
      v10 = BKLibraryDataSourceUbiquityLog(objc_msgSend(v8, "setUserContext:", v7));
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        v12 = *(void **)(a1 + 56);
        v13 = *(void **)(a1 + 64);
        v14 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 141559810;
        v58 = 1752392040;
        v59 = 2112;
        v60 = v12;
        v61 = 2160;
        v62 = 1752392040;
        v63 = 2112;
        v64 = v13;
        v65 = 2160;
        v66 = 1752392040;
        v67 = 2112;
        v68 = v14;
        v69 = 2160;
        v70 = 1752392040;
        v71 = 2112;
        v72 = v6;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "resolveLibraryAsset: Uncompressing. assetID: %{mask.hash}@ title: %{mask.hash}@ url: %{mask.hash}@ destURL: %{mask.hash}@", buf, 0x52u);
      }

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "uncompressQueue"));
      objc_msgSend(v15, "addOperation:", v8);

    }
    else
    {
LABEL_25:
      v37 = BKLibraryDataSourceUbiquityLog(v4);
      v38 = objc_claimAutoreleasedReturnValue(v37);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
        sub_1006A0230();

      v39 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 128);
      v49[0] = _NSConcreteStackBlock;
      v49[1] = 3221225472;
      v49[2] = sub_1000F3E7C;
      v49[3] = &unk_1008E7818;
      v50 = *(id *)(a1 + 80);
      dispatch_async(v39, v49);
      v6 = v50;
    }
LABEL_28:

    return kdebug_trace(725352492, 0, 0, 0, 0);
  }
  v24 = *(void **)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 48);
  v25 = *(NSObject **)(v23 + 144);
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_1000F3EFC;
  v46[3] = &unk_1008E7928;
  v46[4] = v23;
  v47 = v24;
  v48 = *(id *)(a1 + 56);
  dispatch_async(v25, v46);
  v26 = *(_QWORD *)(a1 + 72) == 0;
  v28 = BKLibraryDataSourceUbiquityLog(v27);
  v29 = objc_claimAutoreleasedReturnValue(v28);
  v30 = v29;
  if (v26)
  {
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      sub_1006A0370();

    v36 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 128);
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472;
    v41[2] = sub_1000F3F58;
    v41[3] = &unk_1008E7818;
    v34 = &v42;
    v42 = *(id *)(a1 + 80);
    dispatch_async(v36, v41);
  }
  else
  {
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "assetID"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "url"));
      *(_DWORD *)buf = 141558786;
      v58 = 1752392040;
      v59 = 2112;
      v60 = v31;
      v61 = 2160;
      v62 = 1752392040;
      v63 = 2112;
      v64 = v32;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "resolveLibraryAsset: Download required. assetID: %{mask.hash}@ url: %{mask.hash}@", buf, 0x2Au);

    }
    v33 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 128);
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_1000F3F0C;
    v43[3] = &unk_1008E7950;
    v45 = *(id *)(a1 + 80);
    v44 = *(id *)(a1 + 72);
    dispatch_async(v33, v43);

    v34 = &v45;
  }

  return kdebug_trace(725352492, 0, 0, 0, 0);
}

void sub_1000F3D98(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1000F3DB0(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, uint64_t, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), 1, 0);
    v2 = v3;
  }

}

void sub_1000F3DFC(uint64_t a1)
{
  void *v1;
  void (**v2)(id, _QWORD, uint64_t, void *);

  v2 = (void (**)(id, _QWORD, uint64_t, void *))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorMissingUbiquityMetadata, 0));
    v2[2](v2, 0, 1, v1);

  }
}

void sub_1000F3E7C(uint64_t a1)
{
  void *v1;
  void (**v2)(id, _QWORD, uint64_t, void *);

  v2 = (void (**)(id, _QWORD, uint64_t, void *))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorMissingPath, 0));
    v2[2](v2, 0, 1, v1);

  }
}

id sub_1000F3EFC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_triggerDownload:assetID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1000F3F0C(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, uint64_t, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), 1, 0);
    v2 = v3;
  }

}

void sub_1000F3F58(uint64_t a1)
{
  void *v1;
  void (**v2)(id, _QWORD, uint64_t, void *);

  v2 = (void (**)(id, _QWORD, uint64_t, void *))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorMissingUbiquityMetadata, 0));
    v2[2](v2, 0, 1, v1);

  }
}

void sub_1000F4118(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  id *v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  _QWORD v9[4];
  id v10;
  _QWORD block[4];
  id v12;
  id v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = v2;
  if (v2)
  {
    v4 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 128);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000F4258;
    block[3] = &unk_1008E7680;
    v5 = &v12;
    v12 = v2;
    v13 = *(id *)(a1 + 48);
    dispatch_async(v4, block);

  }
  else
  {
    v6 = BKLibraryDataSourceUbiquityLog(0);
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1006A0404();

    v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 128);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000F4378;
    v9[3] = &unk_1008E7818;
    v5 = &v10;
    v10 = *(id *)(a1 + 48);
    dispatch_async(v8, v9);
  }

}

void sub_1000F4258(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  void *v15;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "url"));
    v8 = 141558786;
    v9 = 1752392040;
    v10 = 2112;
    v11 = v4;
    v12 = 2160;
    v13 = 1752392040;
    v14 = 2112;
    v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "assetForLibraryAsset: Returning ubiquityAssest. assetID: %{mask.hash}@ url: %{mask.hash}@", (uint8_t *)&v8, 0x2Au);

  }
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, _QWORD, _QWORD))v6 + 2))(v6, *(_QWORD *)(a1 + 32), 0);

}

void sub_1000F4378(uint64_t a1)
{
  void *v1;
  void (**v2)(id, _QWORD, void *);

  v2 = (void (**)(id, _QWORD, void *))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorMissingUbiquityMetadata, 0));
    v2[2](v2, 0, v1);

  }
}

void sub_1000F44D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  _QWORD v9[4];
  NSObject *v10;
  id v11;
  uint8_t buf[4];
  uint64_t v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  uint64_t v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = BKLibraryDataSourceUbiquityLog(v2);
  v4 = objc_claimAutoreleasedReturnValue(v3);
  v5 = v4;
  if (v2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 40);
      v6 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412802;
      v13 = v6;
      v14 = 2112;
      v15 = v2;
      v16 = 2112;
      v17 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "updateAsset: userEditedTitle:%@ url: %@ assetID:%@", buf, 0x20u);
    }

    v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 152);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000F4640;
    v9[3] = &unk_1008E7338;
    v10 = *(id *)(a1 + 48);
    v11 = v2;
    dispatch_async(v8, v9);

    v5 = v10;
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1006A0498();
  }

}

void sub_1000F4640(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[BKUbiquityMetadataHelper sharedInstance](BKUbiquityMetadataHelper, "sharedInstance"));
  objc_msgSend(v2, "setUbiquityMetadataTitle:forURL:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_1000F47C8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  _QWORD v10[5];
  _QWORD block[6];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;
  uint8_t buf[4];
  id v19;

  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = sub_10004E390;
  v16 = sub_10004E248;
  v17 = 0;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(NSObject **)(v2 + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F497C;
  block[3] = &unk_1008E75B8;
  block[4] = v2;
  block[5] = &v12;
  dispatch_sync(v3, block);
  v4 = objc_msgSend((id)v13[5], "count");
  if (v4)
  {
    v5 = BKLibraryDataSourceUbiquityLog(v4);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = objc_msgSend((id)v13[5], "count");
      *(_DWORD *)buf = 134217984;
      v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "ubiquityStatusChangedToAvailableWithNewIdentity: Removing assets. count: %ld", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "_unclaimAssetIDs:", v13[5]);
  }
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(NSObject **)(v8 + 48);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000F49B8;
  v10[3] = &unk_1008E72C0;
  v10[4] = v8;
  dispatch_sync(v9, v10);
  _Block_object_dispose(&v12, 8);

}

void sub_1000F4954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F497C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "allKeys"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1000F49B8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_clearAllCachesAndPersistentInfoFromDisk");
}

void sub_1000F4A64(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  void *v22;
  _QWORD v23[5];
  _QWORD v24[4];
  id v25;
  _QWORD v26[4];
  id v27;
  _QWORD block[6];
  __int128 buf;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  id v33;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    LODWORD(buf) = 134217984;
    *(_QWORD *)((char *)&buf + 4) = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "didLoadWithItems: count: %ld", (uint8_t *)&buf, 0xCu);
  }

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v30 = 0x3032000000;
  v31 = sub_10004E390;
  v32 = sub_10004E248;
  v33 = 0;
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(NSObject **)(v5 + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F4DFC;
  block[3] = &unk_1008E75B8;
  block[4] = v5;
  block[5] = &buf;
  dispatch_sync(v6, block);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("url")));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v7));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", *(_QWORD *)(*((_QWORD *)&buf + 1) + 40)));
  objc_msgSend(v9, "minusSet:", v8);
  v22 = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", v8));
  objc_msgSend(v10, "minusSet:", *(_QWORD *)(*((_QWORD *)&buf + 1) + 40));
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](NSMutableSet, "setWithSet:", v8));
  objc_msgSend(v11, "intersectSet:", *(_QWORD *)(*((_QWORD *)&buf + 1) + 40));
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_1000F4E64;
  v26[3] = &unk_1008EAC70;
  v21 = v10;
  v27 = v21;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "indexesOfObjectsPassingTest:", v26));
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000F4E70;
  v24[3] = &unk_1008EAC70;
  v13 = v11;
  v25 = v13;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "indexesOfObjectsPassingTest:", v24));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectsAtIndexes:", v12));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectsAtIndexes:", v14));
  v17 = *(void **)(a1 + 40);
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "allObjects"));
  objc_msgSend(v17, "mq_itemsDidBecomeUnavailable:", v18);

  objc_msgSend(*(id *)(a1 + 40), "mq_itemsDidChange:", v16);
  objc_msgSend(*(id *)(a1 + 40), "mq_itemsDidChange:", v15);
  objc_msgSend(*(id *)(a1 + 40), "setHandledInitialMetadataQuery:", 1);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(NSObject **)(v19 + 128);
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_1000F4E7C;
  v23[3] = &unk_1008E72C0;
  v23[4] = v19;
  dispatch_async(v20, v23);
  kdebug_trace(725352476, 0, 0, 0, 0);

  _Block_object_dispose(&buf, 8);
}

void sub_1000F4DBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1000F4DFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "allValues"));
  v2 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v5));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1000F4E64(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2);
}

id sub_1000F4E70(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2);
}

void sub_1000F4E7C(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(*(_QWORD *)(a1 + 32) + 136);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5), "didHandleInitialQuery", (_QWORD)v6);
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

id sub_1000F4FE4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "itemsDidBecomeAvailable: count: %ld", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "mq_itemsDidBecomeAvailable:", *(_QWORD *)(a1 + 32));
}

void sub_1000F5110(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;
  void *v6;
  int v7;
  id v8;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v7 = 134217984;
    v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "itemsDidBecomeUnavailable: count: %ld", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(void **)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("url")));
  objc_msgSend(v5, "mq_itemsDidBecomeUnavailable:", v6);

}

id sub_1000F525C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "itemsDidChange: count: %ld", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "mq_itemsDidChange:", *(_QWORD *)(a1 + 32));
}

void sub_1000F5754(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "umq_metadataDictsFromUbiquityDocumentItems:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(NSObject **)(v3 + 152);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000F57E0;
  v6[3] = &unk_1008E7338;
  v7 = v2;
  v8 = v3;
  v5 = v2;
  dispatch_async(v4, v6);

}

void sub_1000F57E0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t *v15;
  void *v16;
  NSObject *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  id obj;
  void *v23;
  _QWORD v24[5];
  id v25;
  _QWORD v26[4];
  id v27;
  uint64_t v28;
  uint8_t buf;
  _BYTE v30[7];
  _QWORD v31[5];
  id v32;
  _QWORD block[7];
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];

  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  obj = *(id *)(a1 + 32);
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v44, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v41;
    v4 = BCMetadataXattrAssetID;
    do
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(_QWORD *)v41 != v3)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v4));
        v34 = 0;
        v35 = &v34;
        v36 = 0x3032000000;
        v37 = sub_10004E390;
        v38 = sub_10004E248;
        v39 = 0;
        v8 = *(_QWORD *)(a1 + 40);
        v9 = *(NSObject **)(v8 + 48);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000F5B28;
        block[3] = &unk_1008E8848;
        block[5] = v6;
        block[6] = &v34;
        block[4] = v8;
        dispatch_sync(v9, block);
        if (v35[5])
        {
          objc_msgSend(v23, "addObject:");
          v11 = *(_QWORD *)(a1 + 40);
          v12 = *(NSObject **)(v11 + 48);
          v31[0] = _NSConcreteStackBlock;
          v31[1] = 3221225472;
          v31[2] = sub_1000F5B64;
          v31[3] = &unk_1008E7338;
          v31[4] = v11;
          v32 = v7;
          dispatch_async(v12, v31);

        }
        else
        {
          v13 = BKLibraryDataSourceUbiquityLog(v10);
          v14 = objc_claimAutoreleasedReturnValue(v13);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
            sub_1006A0500(&buf, v30, v14);

        }
        _Block_object_dispose(&v34, 8);

      }
      v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v40, v44, 16);
    }
    while (v2);
  }

  if (objc_msgSend(v23, "count"))
  {
    v16 = *(void **)(a1 + 40);
    v15 = (uint64_t *)(a1 + 40);
    objc_msgSend(v16, "p_schedulePersistInfoToDisk");
    v17 = *(NSObject **)(*v15 + 128);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1000F5B70;
    v26[3] = &unk_1008E7338;
    v18 = v23;
    v19 = *v15;
    v27 = v18;
    v28 = v19;
    dispatch_async(v17, v26);
    v20 = *v15;
    v21 = *(NSObject **)(*v15 + 128);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1000F5C34;
    v24[3] = &unk_1008E7338;
    v24[4] = v20;
    v25 = v18;
    dispatch_async(v21, v24);

  }
  kdebug_trace(725352500, 0, 0, 0, 0);

}

void sub_1000F5B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_1000F5B28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_createUbiquityAssetFromMetadataDict:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1000F5B64(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateThumbnailIfNeededForAssetID:", *(_QWORD *)(a1 + 40));
}

void sub_1000F5B70(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidBecomeAvailable: Adding %ld assets.", (uint8_t *)&v6, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  objc_msgSend(v5, "libraryDataSource:addedAssets:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

id sub_1000F5C34(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addAssetsToCoverCacheManager:", *(_QWORD *)(a1 + 40));
}

void sub_1000F5DD8(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint8_t buf[4];
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  _BYTE v21[128];

  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v14;
    *(_QWORD *)&v4 = 141558274;
    v12 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v2);
        v8 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 72), "objectForKeyedSubscript:", v8, v12, (_QWORD)v13));
        if (objc_msgSend(v9, "length"))
        {
          objc_msgSend(*(id *)(a1 + 48), "addObject:", v9);
        }
        else
        {
          v10 = BKLibraryDataSourceUbiquityLog(0);
          v11 = objc_claimAutoreleasedReturnValue(v10);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v12;
            v18 = 1752392040;
            v19 = 2112;
            v20 = v8;
            _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "mq_itemsDidBecomeUnavailable: No asset for url: %{mask.hash}@", buf, 0x16u);
          }

        }
      }
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v5);
  }

}

id sub_1000F5F80(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "mq_itemsDidBecomeUnavailable: Removing %ld assets.", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "_unclaimAssetIDs:", *(_QWORD *)(a1 + 32));
}

void sub_1000F62D8(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[5];
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "umq_metadataDictsFromUbiquityDocumentItems:", *(_QWORD *)(a1 + 40)));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000F6364;
  v4[3] = &unk_1008E7338;
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v2;
  v3 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

}

void sub_1000F6364(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD block[4];
  id v17;
  uint64_t v18;
  id v19;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "appLaunchCoordinator"));
  v5 = objc_msgSend(v4, "appLaunchCoordinatorIsConditionSatisfied:", 6);

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate sceneManager](BKAppDelegate, "sceneManager"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "bookPresenter"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "bookPresenterCurrentlyOpenBooks"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "valueForKey:", CFSTR("assetPresenterAssetID")));
    v10 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v9));

    v2 = (void *)v10;
  }
  v11 = *(void **)(a1 + 40);
  v12 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 152);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000F64C4;
  block[3] = &unk_1008E7928;
  v13 = v11;
  v14 = *(_QWORD *)(a1 + 32);
  v17 = v13;
  v18 = v14;
  v19 = v2;
  v15 = v2;
  dispatch_async(v12, block);

}

void sub_1000F64C4(id *a1)
{
  void *i;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  id v8;
  NSFileCoordinator *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  double v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  NSObject *v45;
  id v46;
  NSObject *v47;
  void *v48;
  void *v49;
  NSObject *v50;
  id v51;
  id v52;
  id v53;
  NSObject *v54;
  NSObject *v55;
  id v56;
  id v57;
  NSObject *v58;
  id v59;
  id v60;
  NSObject *v61;
  NSMutableArray *v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  NSMutableArray *v67;
  void *v68;
  void *v69;
  id obj;
  uint64_t v71;
  uint64_t v72;
  id v73;
  _QWORD v74[4];
  NSMutableArray *v75;
  id v76;
  _QWORD v77[4];
  id v78;
  id v79;
  _QWORD v80[4];
  id v81;
  id v82;
  _QWORD v83[5];
  id v84;
  _QWORD v85[4];
  id v86;
  id v87;
  _QWORD v88[5];
  id v89;
  _QWORD v90[7];
  _QWORD v91[6];
  id v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  char v100;
  _QWORD block[5];
  id v102;
  void *v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t);
  void (*v111)(uint64_t);
  id v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  void (*v117)(uint64_t);
  id v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  void (*v123)(uint64_t);
  id v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint8_t buf[4];
  uint64_t v130;
  __int16 v131;
  id v132;
  __int16 v133;
  uint64_t v134;
  __int16 v135;
  void *v136;
  _BYTE v137[128];

  v67 = objc_opt_new(NSMutableArray);
  v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v66 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v127 = 0u;
  v128 = 0u;
  v125 = 0u;
  v126 = 0u;
  obj = a1[4];
  v73 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v125, v137, 16);
  if (v73)
  {
    v71 = BCMetadataXattrAssetID;
    v72 = *(_QWORD *)v126;
    do
    {
      for (i = 0; i != v73; i = (char *)i + 1)
      {
        if (*(_QWORD *)v126 != v72)
          objc_enumerationMutation(obj);
        v3 = *(void **)(*((_QWORD *)&v125 + 1) + 8 * (_QWORD)i);
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v71));
        v119 = 0;
        v120 = &v119;
        v121 = 0x3032000000;
        v122 = sub_10004E390;
        v123 = sub_10004E248;
        v124 = 0;
        v113 = 0;
        v114 = &v113;
        v115 = 0x3032000000;
        v116 = sub_10004E390;
        v117 = sub_10004E248;
        v118 = 0;
        v107 = 0;
        v108 = &v107;
        v109 = 0x3032000000;
        v110 = sub_10004E390;
        v111 = sub_10004E248;
        v112 = 0;
        v5 = a1[5];
        v6 = *((_QWORD *)v5 + 6);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000F720C;
        block[3] = &unk_1008EAC98;
        v104 = &v119;
        block[4] = v5;
        v7 = v4;
        v102 = v7;
        v103 = v3;
        v105 = &v113;
        v106 = &v107;
        dispatch_sync(v6, block);
        if (objc_msgSend(a1[6], "containsObject:", v7)
          && objc_msgSend(a1[5], "_assetHasChanged:updatedAsset:", v120[5], v108[5]))
        {
          -[NSMutableArray addObject:](v67, "addObject:", v7);
        }
        v8 = objc_msgSend(a1[5], "_updateUbiquityAssetID:withMetadata:", v7, v3);
        if (v114[5] || v108[5])
        {
          if (v120[5])
          {
            if ((objc_msgSend((id)v108[5], "isDifferentPath:", v120[5]) & 1) != 0
              || !objc_msgSend((id)v108[5], "isDifferentFilename:", v120[5]))
            {
              v25 = objc_msgSend((id)v108[5], "isSameAsAsset:", v120[5]);
              if ((_DWORD)v25)
              {
                v26 = objc_msgSend((id)v108[5], "isUpdatedFromAsset:", v120[5]);
                if (!(_DWORD)v26)
                {
                  v34 = BKLibraryDataSourceUbiquityLog(v26);
                  v35 = objc_claimAutoreleasedReturnValue(v34);
                  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
                  {
                    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "assetID"));
                    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "url"));
                    *(_DWORD *)buf = 141558786;
                    v130 = 1752392040;
                    v131 = 2112;
                    v132 = v36;
                    v133 = 2160;
                    v134 = 1752392040;
                    v135 = 2112;
                    v136 = v37;
                    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Skipping identical item. assetID: %{mask.hash}@ url: %{mask.hash}@", buf, 0x2Au);

                  }
LABEL_36:

                  goto LABEL_49;
                }
                v27 = BKLibraryDataSourceUbiquityLog(v26);
                v28 = objc_claimAutoreleasedReturnValue(v27);
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "url"));
                  *(_DWORD *)buf = 141558786;
                  v130 = 1752392040;
                  v131 = 2112;
                  v132 = v7;
                  v133 = 2160;
                  v134 = 1752392040;
                  v135 = 2112;
                  v136 = v29;
                  _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Found more recent updateDate. assetID: %{mask.hash}@ url:%{mask.hash}@.", buf, 0x2Au);

                }
              }
              else
              {
                v30 = BKLibraryDataSourceUbiquityLog(v25);
                v28 = objc_claimAutoreleasedReturnValue(v30);
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "url"));
                  *(_DWORD *)buf = 141558786;
                  v130 = 1752392040;
                  v131 = 2112;
                  v132 = v7;
                  v133 = 2160;
                  v134 = 1752392040;
                  v135 = 2112;
                  v136 = v31;
                  _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Fundamental Difference found. assetID: %{mask.hash}@  url: %{mask.hash}@.", buf, 0x2Au);

                }
              }

            }
            else
            {
              v97 = 0;
              v98 = &v97;
              v99 = 0x2020000000;
              v100 = 0;
              v93 = 0;
              v94 = &v93;
              v95 = 0x2020000000;
              v96 = 0;
              v9 = objc_opt_new(NSFileCoordinator);
              v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v120[5], "url"));
              v92 = 0;
              v91[0] = _NSConcreteStackBlock;
              v91[1] = 3221225472;
              v91[2] = sub_1000F7288;
              v91[3] = &unk_1008EACC0;
              v91[4] = &v93;
              v91[5] = &v97;
              -[NSFileCoordinator coordinateReadingItemAtURL:options:error:byAccessor:](v9, "coordinateReadingItemAtURL:options:error:byAccessor:", v10, 4, &v92, v91);
              v11 = v92;

              if (!*((_BYTE *)v94 + 24))
              {
                v39 = BKLibraryDataSourceUbiquityLog(v12);
                v40 = objc_claimAutoreleasedReturnValue(v39);
                if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138412290;
                  v130 = (uint64_t)v11;
                  _os_log_error_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "mq_batchOfItemsDidChange: coordinateReadingItemAtURL failed. error: %@", buf, 0xCu);
                }

LABEL_43:
                _Block_object_dispose(&v93, 8);
                _Block_object_dispose(&v97, 8);
                goto LABEL_49;
              }
              if (*((_BYTE *)v98 + 24))
              {
                v13 = BKLibraryDataSourceUbiquityLog(v12);
                v14 = objc_claimAutoreleasedReturnValue(v13);
                if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
                {
                  v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v120[5], "url"));
                  v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "lastPathComponent"));
                  v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "url"));
                  v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "lastPathComponent"));
                  *(_DWORD *)buf = 141558786;
                  v130 = 1752392040;
                  v131 = 2112;
                  v132 = v64;
                  v133 = 2160;
                  v134 = 1752392040;
                  v135 = 2112;
                  v136 = v49;
                  _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "mq_batchOfItemsDidChange: Duplicate File found with different filename. %{mask.hash}@, %{mask.hash}@", buf, 0x2Au);

                }
                v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "updateDate"));
                objc_msgSend(v15, "timeIntervalSinceReferenceDate");
                v17 = v16;
                v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v120[5], "updateDate"));
                objc_msgSend(v18, "timeIntervalSinceReferenceDate");
                v20 = v17 > v19;

                if (!v20)
                  goto LABEL_43;
                v22 = BKLibraryDataSourceUbiquityLog(v21);
                v23 = objc_claimAutoreleasedReturnValue(v22);
                if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
                {
                  v24 = v108[5];
                  *(_DWORD *)buf = 138412290;
                  v130 = v24;
                  _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Assuming update from: %@", buf, 0xCu);
                }
              }
              else
              {
                v41 = BKLibraryDataSourceUbiquityLog(v12);
                v23 = objc_claimAutoreleasedReturnValue(v41);
                if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
                {
                  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v120[5], "url"));
                  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v108[5], "url"));
                  *(_DWORD *)buf = 141558786;
                  v130 = 1752392040;
                  v131 = 2112;
                  v132 = v42;
                  v133 = 2160;
                  v134 = 1752392040;
                  v135 = 2112;
                  v136 = v43;
                  _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Asset moved. oldPath: %{mask.hash}@ newPath: %{mask.hash}@", buf, 0x2Au);

                }
              }

              _Block_object_dispose(&v93, 8);
              _Block_object_dispose(&v97, 8);
            }
            v44 = a1[5];
            v45 = *((_QWORD *)v44 + 6);
            v90[0] = _NSConcreteStackBlock;
            v90[1] = 3221225472;
            v90[2] = sub_1000F72CC;
            v90[3] = &unk_1008E8848;
            v90[5] = v3;
            v90[6] = &v113;
            v90[4] = v44;
            dispatch_sync(v45, v90);
            objc_msgSend(v69, "addObject:", v114[5]);
          }
          else
          {
            objc_msgSend(v68, "addObject:");
          }
          v46 = a1[5];
          v47 = *((_QWORD *)v46 + 6);
          v88[0] = _NSConcreteStackBlock;
          v88[1] = 3221225472;
          v88[2] = sub_1000F7308;
          v88[3] = &unk_1008E7338;
          v88[4] = v46;
          v89 = v7;
          dispatch_async(v47, v88);

        }
        else
        {
          if (!v120[5])
          {
            v38 = BKLibraryDataSourceUbiquityLog(v8);
            v35 = objc_claimAutoreleasedReturnValue(v38);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 141558274;
              v130 = 1752392040;
              v131 = 2112;
              v132 = v7;
              _os_log_error_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "mq_batchOfItemsDidChange: Asset not found: %{mask.hash}@", buf, 0x16u);
            }
            goto LABEL_36;
          }
          v32 = BKLibraryDataSourceUbiquityLog(v8);
          v33 = objc_claimAutoreleasedReturnValue(v32);
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 141558274;
            v130 = 1752392040;
            v131 = 2112;
            v132 = v7;
            _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Removing from cache: %{mask.hash}@", buf, 0x16u);
          }

          objc_msgSend(v66, "addObject:", v7);
        }
LABEL_49:

        _Block_object_dispose(&v107, 8);
        _Block_object_dispose(&v113, 8);

        _Block_object_dispose(&v119, 8);
      }
      v73 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v125, v137, 16);
    }
    while (v73);
  }

  if (objc_msgSend(v68, "count") || objc_msgSend(v66, "count") || objc_msgSend(v69, "count"))
    objc_msgSend(a1[5], "p_schedulePersistInfoToDisk");
  if (objc_msgSend(v68, "count"))
  {
    v50 = *((_QWORD *)a1[5] + 16);
    v85[0] = _NSConcreteStackBlock;
    v85[1] = 3221225472;
    v85[2] = sub_1000F7314;
    v85[3] = &unk_1008E7338;
    v51 = v68;
    v52 = a1[5];
    v86 = v51;
    v87 = v52;
    dispatch_async(v50, v85);
    v53 = a1[5];
    v54 = *((_QWORD *)v53 + 16);
    v83[0] = _NSConcreteStackBlock;
    v83[1] = 3221225472;
    v83[2] = sub_1000F73D8;
    v83[3] = &unk_1008E7338;
    v83[4] = v53;
    v84 = v51;
    dispatch_async(v54, v83);

  }
  if (objc_msgSend(v69, "count"))
  {
    v55 = *((_QWORD *)a1[5] + 16);
    v80[0] = _NSConcreteStackBlock;
    v80[1] = 3221225472;
    v80[2] = sub_1000F73E4;
    v80[3] = &unk_1008E7338;
    v56 = v69;
    v57 = a1[5];
    v81 = v56;
    v82 = v57;
    dispatch_async(v55, v80);

  }
  if (objc_msgSend(v66, "count"))
  {
    v58 = *((_QWORD *)a1[5] + 16);
    v77[0] = _NSConcreteStackBlock;
    v77[1] = 3221225472;
    v77[2] = sub_1000F74A8;
    v77[3] = &unk_1008E7338;
    v59 = v66;
    v60 = a1[5];
    v78 = v59;
    v79 = v60;
    dispatch_async(v58, v77);

  }
  if (-[NSMutableArray count](v67, "count"))
  {
    v61 = *((_QWORD *)a1[5] + 16);
    v74[0] = _NSConcreteStackBlock;
    v74[1] = 3221225472;
    v74[2] = sub_1000F7558;
    v74[3] = &unk_1008E7338;
    v62 = v67;
    v63 = a1[5];
    v75 = v62;
    v76 = v63;
    dispatch_async(v61, v74);

  }
  kdebug_trace(725352508, 0, 0, 0, 0);

}

void sub_1000F7178(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x220], 8);
  _Block_object_dispose(&STACK[0x240], 8);
  _Block_object_dispose(&STACK[0x2B0], 8);
  _Block_object_dispose(&STACK[0x2E0], 8);
  _Block_object_dispose(&STACK[0x310], 8);
  _Unwind_Resume(a1);
}

void sub_1000F720C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 80), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[7] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = a1[6];
  v6 = (void *)a1[4];
  if (*(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40))
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "iq_createTempUbiquityAssetFromMetadataDict:", v5));
    v8 = a1[9];
  }
  else
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "iq_createUbiquityAssetFromMetadataDict:", v5));
    v8 = a1[8];
  }
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v7;

}

id sub_1000F7288(uint64_t a1, void *a2)
{
  id result;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  result = objc_msgSend(a2, "checkPromisedItemIsReachableAndReturnError:", 0);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000F72CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_createUbiquityAssetFromMetadataDict:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1000F7308(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateThumbnailIfNeededForAssetID:", *(_QWORD *)(a1 + 40));
}

void sub_1000F7314(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Adding %ld assets.", (uint8_t *)&v6, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  objc_msgSend(v5, "libraryDataSource:addedAssets:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

id sub_1000F73D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addAssetsToCoverCacheManager:", *(_QWORD *)(a1 + 40));
}

void sub_1000F73E4(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  void *v5;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Updating %ld assets.", (uint8_t *)&v6, 0xCu);
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryManager"));
  objc_msgSend(v5, "libraryDataSource:updatedAssets:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));

}

id sub_1000F74A8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  int v6;
  id v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    v6 = 134217984;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Removing %ld assets.", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "_unclaimAssetIDs:", *(_QWORD *)(a1 + 32));
}

id sub_1000F7558(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "mq_batchOfItemsDidChange: Requesting reopen. assetIDs: %@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "_requestReOpenWithConflictDictionary:requestOpenAssetIDs:", 0, *(_QWORD *)(a1 + 32));
}

void sub_1000F774C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookPresenter"));
  objc_msgSend(v2, "requestReopenAssetIDs:options:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_1000F7830(uint64_t a1)
{
  NSMutableArray *v2;
  NSMutableArray *v3;
  NSMutableSet *v4;
  id v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  float v14;
  double v15;
  void *v16;
  float v17;
  double v18;
  NSMutableArray *v19;
  unsigned int v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  __int128 v27;
  NSMutableArray *v28;
  NSMutableSet *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  void *v34;
  id obj;
  _QWORD block[5];
  NSMutableSet *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint8_t buf[4];
  unsigned int v43;
  __int16 v44;
  unsigned int v45;
  __int16 v46;
  unsigned int v47;
  __int16 v48;
  double v49;
  __int16 v50;
  unsigned int v51;
  __int16 v52;
  double v53;
  __int16 v54;
  unsigned int v55;
  __int16 v56;
  uint64_t v57;
  __int16 v58;
  void *v59;
  _BYTE v60[128];

  v2 = objc_opt_new(NSMutableArray);
  v3 = objc_opt_new(NSMutableArray);
  v4 = objc_opt_new(NSMutableSet);
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  obj = *(id *)(a1 + 32);
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v60, 16);
  v29 = v4;
  if (v5)
  {
    v7 = v5;
    v8 = *(_QWORD *)v39;
    *(_QWORD *)&v6 = 67111170;
    v27 = v6;
    v28 = v3;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v39 != v8)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)v9);
        v11 = BKLibraryDataSourceUbiquityLog(v5);
        v12 = objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          v33 = objc_msgSend(v10, "isLocal");
          v32 = objc_msgSend(v10, "isNotLocal");
          v31 = objc_msgSend(v10, "isDownloading");
          v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "downloadingPercent"));
          objc_msgSend(v34, "floatValue");
          v15 = v14;
          v30 = objc_msgSend(v10, "isUploading");
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "uploadingPercent"));
          objc_msgSend(v16, "floatValue");
          v18 = v17;
          v19 = v2;
          v20 = objc_msgSend(v10, "isUploaded");
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "url"));
          *(_DWORD *)buf = v27;
          v43 = v33;
          v44 = 1024;
          v45 = v32;
          v46 = 1024;
          v47 = v31;
          v48 = 2048;
          v49 = v15;
          v50 = 1024;
          v51 = v30;
          v52 = 2048;
          v53 = v18;
          v54 = 1024;
          v55 = v20;
          v2 = v19;
          v56 = 2160;
          v57 = 1752392040;
          v58 = 2112;
          v59 = v21;
          _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "_reportProgressWithItems: item: [isLocal=%d, isNotLocal=%d, isDownloading=%d, downloadPercent=%.2f, isUploading=%d, uploadPercent=%.2f, isUploaded=%d | url= %{mask.hash}@]", buf, 0x48u);

          v4 = v29;
          v3 = v28;

        }
        if (objc_msgSend(v10, "isLocal"))
        {
          v5 = objc_msgSend(*(id *)(a1 + 40), "udq_reportUploadProgressIfNeeded:completedAssetIDs:failedAssets:", v10, v2, v3);
        }
        else
        {
          v5 = objc_msgSend(v10, "isNotLocal");
          if ((_DWORD)v5)
          {
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "udq_reportDownloadProgressIfNeeded:", v10));
            if (v13)
              -[NSMutableSet unionSet:](v4, "unionSet:", v13);

          }
        }
        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v60, 16);
      v7 = v5;
    }
    while (v5);
  }

  if (-[NSMutableArray count](v2, "count"))
  {
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "uploadReporter"));
    objc_msgSend(v22, "reportUploadCompleteForBooks:", v2);

    v4 = v29;
  }
  if (-[NSMutableArray count](v3, "count", v27))
  {
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "uploadReporter"));
    objc_msgSend(v23, "reportUploadErrorForBooks:", v3);

    v4 = v29;
  }
  if (-[NSMutableSet count](v4, "count"))
  {
    v24 = *(_QWORD *)(a1 + 40);
    v25 = *(NSObject **)(v24 + 152);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000F7C0C;
    block[3] = &unk_1008E7338;
    block[4] = v24;
    v37 = v29;
    v26 = v25;
    v4 = v29;
    dispatch_async(v26, block);

  }
  kdebug_trace(725352532, 0, 0, 0, 0);

}

void sub_1000F7C0C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v3 = BKLibraryDownloadStatusNotification;
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v7 = BKLibraryDownloadStatusKey;
  v8 = v4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v8, &v7, 1));
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v3, v5, v6);

}

void sub_1000F85E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1000F8618(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 72), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000F8654(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_downloadProgressStatusesWithAssetID:item:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1000F869C(uint64_t a1)
{
  id result;
  uint64_t v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  void *v12;

  result = objc_msgSend(*(id *)(a1 + 32), "iq_downloadingAssetID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  if ((_DWORD)result)
  {
    v3 = BKLibraryDataSourceUbiquityLog(result);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "url"));
      v9 = 141558274;
      v10 = 1752392040;
      v11 = 2112;
      v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "udq_reportDownloadProgressIfNeeded: finished download: %{mask.hash}@", (uint8_t *)&v9, 0x16u);

    }
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_downloadProgressStatusesWithAssetID:item:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(a1 + 40)));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    return objc_msgSend(*(id *)(a1 + 32), "iq_removeDownloadingAssetID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  }
  return result;
}

void sub_1000F8D68(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 256), 8);
  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Unwind_Resume(a1);
}

id sub_1000F8DC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id result;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 72), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  result = objc_msgSend(*(id *)(a1[4] + 96), "containsObject:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
  *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000F8E24(uint64_t a1)
{
  float v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;

  objc_msgSend(*(id *)(a1 + 32), "floatValue");
  v3 = objc_msgSend(objc_alloc((Class)BKLibraryDownloadStatus), "initWithAssetID:state:progressValue:timeRemaining:bytesDownloaded:fileSize:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), 9, 0, 0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFFLL, (float)(v2 / 100.0));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v5 = BKLibraryDownloadStatusNotification;
  v6 = *(_QWORD *)(a1 + 40);
  v9 = BKLibraryDownloadStatusKey;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v3));
  v10 = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v10, &v9, 1));
  objc_msgSend(v4, "postNotificationName:object:userInfo:", v5, v6, v8);

}

id sub_1000F8F6C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

void sub_1000F8F80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 80), "objectForKeyedSubscript:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40)));
  v3 = *(_QWORD *)(a1[5] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000F8FC8(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v2 = objc_msgSend(objc_alloc((Class)BKLibraryDownloadStatus), "initWithAssetID:state:progressValue:timeRemaining:bytesDownloaded:fileSize:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), 10, -1, 0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFFLL, 0.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v4 = BKLibraryDownloadStatusNotification;
  v5 = *(_QWORD *)(a1 + 32);
  v8 = BKLibraryDownloadStatusKey;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v2));
  v9 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1));
  objc_msgSend(v3, "postNotificationName:object:userInfo:", v4, v5, v7);

}

void sub_1000F90F0(_QWORD *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v2 = objc_msgSend(objc_alloc((Class)BKLibraryDownloadStatus), "initWithAssetID:state:progressValue:timeRemaining:bytesDownloaded:fileSize:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40), 11, 1, 0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFFLL, 0.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v4 = BKLibraryDownloadStatusNotification;
  v5 = a1[4];
  v21 = BKLibraryDownloadStatusKey;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v2));
  v22 = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v22, &v21, 1));
  objc_msgSend(v3, "postNotificationName:object:userInfo:", v4, v5, v7);

  v9 = BKLibraryDataSourceUbiquityLog(v8);
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = a1[5];
    v12 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40);
    v13 = 141558786;
    v14 = 1752392040;
    v15 = 2112;
    v16 = v12;
    v17 = 2160;
    v18 = 1752392040;
    v19 = 2112;
    v20 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "udq_reportUploadProgressIfNeeded: Sending upload notification assetID: %{mask.hash}@ url: %{mask.hash}@", (uint8_t *)&v13, 0x2Au);
  }

}

void sub_1000F92A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;

  v1 = a1 + 32;
  v2 = BKLibraryDataSourceUbiquityLog(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "removeObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1006A0610(v1, v3);

}

id sub_1000F9304(uint64_t a1)
{
  id result;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;

  result = objc_msgSend(*(id *)(a1 + 32), "iq_downloadingAssetID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  if ((_DWORD)result)
  {
    v3 = BKLibraryDataSourceUbiquityLog(result);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      v6 = *(_QWORD *)(a1 + 40);
      v10 = 141558786;
      v11 = 1752392040;
      v12 = 2112;
      v13 = v5;
      v14 = 2160;
      v15 = 1752392040;
      v16 = 2112;
      v17 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "udq_reportUploadProgressIfNeeded: Finished downloading. assetID: %{mask.hash}@ url: %{mask.hash}@", (uint8_t *)&v10, 0x2Au);
    }

    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_downloadProgressStatusesWithAssetID:item:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(_QWORD *)(a1 + 48)));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    return objc_msgSend(*(id *)(a1 + 32), "iq_removeDownloadingAssetID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  }
  return result;
}

void sub_1000F9434(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v3 = BKLibraryDownloadStatusNotification;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v7 = BKLibraryDownloadStatusKey;
  v8 = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v8, &v7, 1));
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v3, v4, v6);

}

void sub_1000F98B0(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 64), "objectForKeyedSubscript:", v7, (_QWORD)v9));
        if (v8)
        {
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 64), "setObject:forKeyedSubscript:", 0, v7);
          objc_msgSend(*(id *)(a1 + 48), "addObject:", v8);
        }

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v4);
  }

}

id sub_1000FA3D0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_clearCachesForAssetIDs:", *(_QWORD *)(a1 + 40));
}

void sub_1000FA5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1000FA5E4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;
  id obj;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  obj = *(id *)(v5 + 40);
  v6 = objc_msgSend(v4, "removeItemAtURL:error:", v3, &obj);

  objc_storeStrong((id *)(v5 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v6;

}

void sub_1000FAB1C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;

  v3 = a2;
  v4 = BKLibraryDataSourceUbiquityLog(v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1006A07AC();
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 141558274;
    v9 = 1752392040;
    v10 = 2112;
    v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "_triggerDownload: Successful download. url: %{mask.hash}@", (uint8_t *)&v8, 0x16u);
  }

}

void sub_1000FAF2C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  unsigned int v4;
  unsigned int v5;
  _UNKNOWN **v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[5];
  _QWORD v14[5];
  uint8_t buf[4];
  unsigned int v16;

  v2 = BKLibraryDataSourceUbiquityLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "shouldArchivePathFixupRevision");
    *(_DWORD *)buf = 67109120;
    v16 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "cb_persistInfoToDisk. shouldArchivePathFixupRevision: %d", buf, 8u);
  }

  v14[0] = &off_10092ED90;
  v5 = objc_msgSend(*(id *)(a1 + 32), "shouldArchivePathFixupRevision", CFSTR("version"), CFSTR("PathFixupRevision"));
  v6 = &off_10092EDC0;
  if (v5)
    v6 = &off_10092EDA8;
  v14[1] = v6;
  v13[2] = CFSTR("URLFromAssetID");
  v7 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithDictionary:copyItems:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56), 1);
  v14[2] = v7;
  v13[3] = CFSTR("AssetFromAssetID");
  v8 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithDictionary:copyItems:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), 1);
  v14[3] = v8;
  v13[4] = CFSTR("InsertionDateFromAssetID");
  v9 = objc_msgSend(objc_alloc((Class)NSDictionary), "initWithDictionary:copyItems:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88), 1);
  v14[4] = v9;
  v10 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v14, v13, 5));
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

}

void sub_1000FB0E8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = objc_msgSend(objc_alloc((Class)NSKeyedArchiver), "initRequiringSecureCoding:", 1);
  objc_msgSend(v4, "encodeObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), CFSTR("Root"));
  objc_msgSend(v4, "finishEncoding");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "encodedData"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_persistedInfoURL"));
  objc_msgSend(v2, "writeToURL:atomically:", v3, 1);

}

id sub_1000FB1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setObject:forKeyedSubscript:", a2, a3);
}

void sub_1000FB294(uint64_t a1)
{
  id *v2;
  id v3;
  uint64_t v4;
  void *i;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  id v19;
  id obj;
  void *v21;
  _QWORD v22[5];
  id v23;
  _QWORD v24[5];
  id v25;
  id v26;
  _QWORD block[5];
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];

  v2 = (id *)(a1 + 32);
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count")));
  v38 = 0u;
  v39 = 0u;
  v36 = 0u;
  v37 = 0u;
  obj = *v2;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v37;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v37 != v4)
          objc_enumerationMutation(obj);
        v6 = *(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[BCUbiquityMetadataHelper ubiquityMetadataForURL:options:needsCoordination:](BCUbiquityMetadataHelper, "ubiquityMetadataForURL:options:needsCoordination:", v6, -262145, 1));
        v8 = objc_msgSend(v7, "mutableCopy");

        v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 1));
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v9, CFSTR("isLocal"));

        objc_msgSend(v8, "setObject:forKeyedSubscript:", 0, CFSTR("contentChangedDate"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", 0xFFFFFFFFLL));
        objc_msgSend(v8, "setObject:forKeyedSubscript:", v10, CFSTR("contentFileSize"));

        objc_msgSend(v8, "setObject:forKeyedSubscript:", v6, CFSTR("itemURL"));
        v30 = 0;
        v31 = &v30;
        v32 = 0x3032000000;
        v33 = sub_10004E390;
        v34 = sub_10004E248;
        v35 = 0;
        v11 = *(_QWORD *)(a1 + 40);
        v12 = *(NSObject **)(v11 + 48);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000FB608;
        block[3] = &unk_1008E8848;
        v29 = &v30;
        block[4] = v11;
        v13 = v8;
        v28 = v13;
        dispatch_sync(v12, block);
        if (v31[5])
          objc_msgSend(v21, "addObject:");

        _Block_object_dispose(&v30, 8);
      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    }
    while (v3);
  }

  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(NSObject **)(v14 + 128);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1000FB644;
  v24[3] = &unk_1008E8898;
  v24[4] = v14;
  v16 = v21;
  v25 = v16;
  v26 = *(id *)(a1 + 48);
  dispatch_async(v15, v24);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(NSObject **)(v17 + 128);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1000FB6A8;
  v22[3] = &unk_1008E7338;
  v22[4] = v17;
  v23 = v16;
  v19 = v16;
  dispatch_async(v18, v22);

}

void sub_1000FB5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1000FB608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "iq_createUbiquityAssetFromMetadataDict:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000FB644(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  objc_msgSend(v2, "libraryDataSource:addedAssets:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  v3 = objc_retainBlock(*(id *)(a1 + 48));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, _QWORD, _QWORD))v3 + 2))(v3, *(_QWORD *)(a1 + 40), 0);
    v3 = v4;
  }

}

id sub_1000FB6A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addAssetsToCoverCacheManager:", *(_QWORD *)(a1 + 40));
}

id sub_1000FB8A0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateCachedAssetGeneration:url:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1000FB994(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v5, 1));
  objc_msgSend(v2, "libraryDataSource:updatedAssets:", v3, v4);

}

void sub_1000FBAE4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", BCMetadataXattrTitle));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", BCMetadataXattrAuthor));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryAsset actualAuthorFromMetedata:](BKLibraryAsset, "actualAuthorFromMetedata:", v2));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", BCMetadataXattrGenre));
  if (objc_msgSend(v6, "length") || objc_msgSend(v3, "length") || objc_msgSend(v4, "length"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetMetadataCache"));
    objc_msgSend(v5, "saveTitle:author:genre:language:pageProgressionDirection:forAssetID:", v6, v3, v4, 0, 0, *(_QWORD *)(a1 + 48));

  }
}

void sub_1000FBF00(uint64_t a1, uint64_t a2)
{
  void *v3;
  _QWORD v4[4];
  id v5;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000FBF74;
  v4[3] = &unk_1008EA1D0;
  v3 = *(void **)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  objc_msgSend(v3, "fetchAssetsWithIDs:completion:", a2, v4);

}

void sub_1000FBF74(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  v6 = objc_retainBlock(*(id *)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);

}

void sub_1000FC150(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  id v13;
  id v14;
  __int128 v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *i;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  NSObject *v51;
  id v52;
  id v53;
  __int128 v54;
  id v55;
  void *v56;
  id obj;
  id v58;
  id v59;
  id v60;
  _QWORD v62[4];
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  _QWORD v67[7];
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _QWORD block[4];
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  _BYTE buf[24];
  uint64_t v82;
  __int128 v83;
  _BYTE v84[128];
  _BYTE v85[128];

  v60 = a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v4 = *(void **)(a1 + 40);
  v5 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FC954;
  block[3] = &unk_1008E7B70;
  v6 = v4;
  v7 = *(_QWORD *)(a1 + 32);
  v77 = v6;
  v78 = v7;
  v55 = v3;
  v79 = v55;
  v8 = v2;
  v80 = v8;
  dispatch_sync(v5, block);
  v10 = BKLibraryBookImportLog(v9);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = objc_msgSend(v8, "count");
    v13 = objc_msgSend(v55, "count");
    *(_DWORD *)buf = 134218754;
    *(_QWORD *)&buf[4] = v12;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v8;
    *(_WORD *)&buf[22] = 2048;
    v82 = (uint64_t)v13;
    LOWORD(v83) = 2112;
    *(_QWORD *)((char *)&v83 + 2) = v55;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "_makeBooksUbiquitous: %lu assetsToMove: %@, %lu duplicateAssets: %@", buf, 0x2Au);
  }

  v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v74 = 0u;
  v75 = 0u;
  v72 = 0u;
  v73 = 0u;
  obj = v8;
  v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v72, v85, 16);
  if (v14)
  {
    v58 = *(id *)v73;
    *(_QWORD *)&v15 = 141558274;
    v54 = v15;
    do
    {
      v16 = 0;
      do
      {
        if (*(id *)v73 != v58)
          objc_enumerationMutation(obj);
        v17 = *(void **)(*((_QWORD *)&v72 + 1) + 8 * (_QWORD)v16);
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager", v54));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetID"));
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "libraryAssetWithAssetID:inManagedObjectContext:", v19, v60));

        if (v20)
        {
          v22 = (void *)objc_claimAutoreleasedReturnValue(+[BKUbiquityMetadataHelper sharedInstance](BKUbiquityMetadataHelper, "sharedInstance"));
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "url"));
          v24 = objc_msgSend(v22, "setUbiquityMetadataForURL:withLibraryAsset:", v23, v20);

          if (v24
            && (v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "url")),
                v27 = objc_claimAutoreleasedReturnValue(+[BCUbiquityMetadataHelper xattrAssetIDForURL:](BCUbiquityMetadataHelper, "xattrAssetIDForURL:", v26)), v26, v27))
          {
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "url"));
            if (v28)
            {
              v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "title"));
              if (objc_msgSend(v29, "length"))
                v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "title"));
              else
                v30 = 0;

              v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_moveToUbiquityItemAtURL:preferredFileNameWithoutPathExtension:", v28, v30));
              if (v40)
              {
                objc_msgSend(v56, "addObject:", v40);
              }
              else
              {
                v41 = BKLibraryBookImportLog(0);
                v42 = objc_claimAutoreleasedReturnValue(v41);
                if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
                {
                  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetID"));
                  *(_DWORD *)buf = v54;
                  *(_QWORD *)&buf[4] = 1752392040;
                  *(_WORD *)&buf[12] = 2112;
                  *(_QWORD *)&buf[14] = v43;
                  _os_log_error_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_ERROR, "_makeBooksUbiquitous: p_moveToUbiquityItemAtURL failed. assetID: %{mask.hash}@", buf, 0x16u);

                }
              }

            }
            else
            {
              v37 = BKLibraryBookImportLog(0);
              v30 = objc_claimAutoreleasedReturnValue(v37);
              if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
              {
                v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetID"));
                v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "title"));
                *(_DWORD *)buf = 141558786;
                *(_QWORD *)&buf[4] = 1752392040;
                *(_WORD *)&buf[12] = 2112;
                *(_QWORD *)&buf[14] = v38;
                *(_WORD *)&buf[22] = 2160;
                v82 = 1752392040;
                LOWORD(v83) = 2112;
                *(_QWORD *)((char *)&v83 + 2) = v39;
                _os_log_error_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "_makeBooksUbiquitous: skipping migration of asset with assetID: %{mask.hash}@, title: %{mask.hash}@. Reason: nil url", buf, 0x2Au);

              }
            }

          }
          else
          {
            v31 = BKLibraryBookImportLog(v25);
            v27 = objc_claimAutoreleasedReturnValue(v31);
            if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
            {
              v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetID"));
              v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "url"));
              *(_DWORD *)buf = 141558786;
              *(_QWORD *)&buf[4] = 1752392040;
              *(_WORD *)&buf[12] = 2112;
              *(_QWORD *)&buf[14] = v32;
              *(_WORD *)&buf[22] = 2160;
              v82 = 1752392040;
              LOWORD(v83) = 2112;
              *(_QWORD *)((char *)&v83 + 2) = v33;
              _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "_makeBooksUbiquitous: skipping migration of asset with assetID: %{mask.hash}@ at URL: %{mask.hash}@. Reason: failed xattr creation", buf, 0x2Au);

            }
          }
        }
        else
        {
          v34 = BKLibraryBookImportLog(v21);
          v27 = objc_claimAutoreleasedReturnValue(v34);
          if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
          {
            v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "assetID"));
            v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "url"));
            *(_DWORD *)buf = 141558786;
            *(_QWORD *)&buf[4] = 1752392040;
            *(_WORD *)&buf[12] = 2112;
            *(_QWORD *)&buf[14] = v35;
            *(_WORD *)&buf[22] = 2160;
            v82 = 1752392040;
            LOWORD(v83) = 2112;
            *(_QWORD *)((char *)&v83 + 2) = v36;
            _os_log_error_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "_makeBooksUbiquitous: skipping migration of asset with assetID: %{mask.hash}@ at URL: %{mask.hash}@. Reason: nil libraryAsset", buf, 0x2Au);

          }
        }

        v16 = (char *)v16 + 1;
      }
      while (v14 != v16);
      v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v72, v85, 16);
    }
    while (v14);
  }

  v70 = 0u;
  v71 = 0u;
  v69 = 0u;
  v68 = 0u;
  v59 = v55;
  v44 = objc_msgSend(v59, "countByEnumeratingWithState:objects:count:", &v68, v84, 16);
  if (v44)
  {
    v45 = *(_QWORD *)v69;
    do
    {
      for (i = 0; i != v44; i = (char *)i + 1)
      {
        if (*(_QWORD *)v69 != v45)
          objc_enumerationMutation(v59);
        v47 = *(_QWORD *)(*((_QWORD *)&v68 + 1) + 8 * (_QWORD)i);
        *(_QWORD *)buf = 0;
        *(_QWORD *)&buf[8] = buf;
        *(_QWORD *)&buf[16] = 0x3032000000;
        v82 = (uint64_t)sub_10004E390;
        *(_QWORD *)&v83 = sub_10004E248;
        *((_QWORD *)&v83 + 1) = 0;
        v48 = *(_QWORD *)(a1 + 32);
        v49 = *(NSObject **)(v48 + 48);
        v67[0] = _NSConcreteStackBlock;
        v67[1] = 3221225472;
        v67[2] = sub_1000FCA9C;
        v67[3] = &unk_1008E8848;
        v67[5] = v47;
        v67[6] = buf;
        v67[4] = v48;
        dispatch_sync(v49, v67);
        objc_msgSend(*(id *)(a1 + 32), "_addSupplementalContentMetadataFromAsset:toExistingAsset:", v47, *(_QWORD *)(*(_QWORD *)&buf[8] + 40));
        _Block_object_dispose(buf, 8);

      }
      v44 = objc_msgSend(v59, "countByEnumeratingWithState:objects:count:", &v68, v84, 16);
    }
    while (v44);
  }

  v50 = *(_QWORD *)(a1 + 32);
  v51 = *(NSObject **)(v50 + 48);
  v62[0] = _NSConcreteStackBlock;
  v62[1] = 3221225472;
  v62[2] = sub_1000FCAFC;
  v62[3] = &unk_1008E8EE0;
  v63 = v56;
  v64 = v50;
  v65 = v59;
  v66 = *(id *)(a1 + 48);
  v52 = v59;
  v53 = v56;
  dispatch_async(v51, v62);

}

void sub_1000FC934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void sub_1000FC954(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        v8 = *(void **)(*(_QWORD *)(a1 + 40) + 56);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "assetID", (_QWORD)v12));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v9));

        if (v10)
          v11 = 48;
        else
          v11 = 56;
        objc_msgSend(*(id *)(a1 + v11), "addObject:", v7);
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v4);
  }

}

void sub_1000FCA9C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 80);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v6));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_1000FCAFC(id *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v7;
  void *v8;
  _QWORD v9[4];
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id location;

  if (objc_msgSend(a1[4], "count"))
  {
    objc_initWeak(&location, a1[5]);
    v3 = a1[4];
    v2 = a1[5];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000FCCC4;
    v11[3] = &unk_1008EADF8;
    v12 = a1[6];
    objc_copyWeak(&v14, &location);
    v13 = a1[7];
    objc_msgSend(v2, "_addLocalAssetsForURLs:completion:", v3, v11);

    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }
  else
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "valueForKey:", CFSTR("assetID")));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "madeUbiquitousNotifyBlock"));

    if (v5)
    {
      v6 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "madeUbiquitousNotifyBlock"));
      if (v6)
      {
        v9[0] = _NSConcreteStackBlock;
        v9[1] = 3221225472;
        v9[2] = sub_1000FCE7C;
        v9[3] = &unk_1008EA2C0;
        v10 = a1[7];
        ((void (**)(_QWORD, id, id, _QWORD *))v6)[2](v6, v4, v4, v9);

      }
    }
    else
    {
      v7 = objc_retainBlock(a1[7]);
      v8 = v7;
      if (v7)
        (*((void (**)(id, _QWORD, _QWORD))v7 + 2))(v7, 0, 0);

    }
  }
}

void sub_1000FCCA8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000FCCC4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id WeakRetained;
  void *v9;
  id v10;
  void (**v11)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "arrayByAddingObjectsFromArray:", *(_QWORD *)(a1 + 32)));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "valueForKey:", CFSTR("assetID")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bu_arrayByRemovingNSNulls"));

  v7 = v6;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "madeUbiquitousNotifyBlock"));

  if (v9)
  {
    v10 = objc_loadWeakRetained((id *)(a1 + 48));
    v11 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "madeUbiquitousNotifyBlock"));

    if (v11)
    {
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_1000FCE34;
      v14[3] = &unk_1008EADD0;
      v16 = *(id *)(a1 + 40);
      v15 = v3;
      ((void (**)(_QWORD, id, id, _QWORD *))v11)[2](v11, v7, v7, v14);

    }
  }
  else
  {
    v12 = objc_retainBlock(*(id *)(a1 + 40));
    v13 = v12;
    if (v12)
      (*((void (**)(id, id, _QWORD))v12 + 2))(v12, v3, 0);

  }
}

void sub_1000FCE34(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), 0);
    v2 = v3;
  }

}

void sub_1000FCE7C(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD, _QWORD))v1 + 2))(v1, 0, 0);
    v1 = v2;
  }

}

void sub_1000FD3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000FD3EC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  unsigned int v29;
  void *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  int v39;
  id v40;
  int v41;
  int v42;
  int v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  unsigned __int8 v52;
  void *v53;
  unsigned __int8 v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  void *v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  uint8_t buf[4];
  _BYTE v80[10];
  _BYTE v81[10];
  __int16 v82;
  uint64_t v83;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "documentsURL"));

  v75 = v3;
  if (v3)
  {
    v74 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    if ((objc_msgSend(v74, "isUbiquitousItemAtURL:", *(_QWORD *)(a1 + 40)) & 1) != 0)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(id *)(a1 + 40));
LABEL_39:

      goto LABEL_40;
    }
    v6 = *(id *)(a1 + 48);
    if (!objc_msgSend(v6, "length"))
    {
      v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "lastPathComponent"));

      v6 = (id)v7;
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableCharacterSet illegalCharacterSet](NSMutableCharacterSet, "illegalCharacterSet"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet punctuationCharacterSet](NSCharacterSet, "punctuationCharacterSet"));
    objc_msgSend(v8, "formUnionWithCharacterSet:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet controlCharacterSet](NSCharacterSet, "controlCharacterSet"));
    objc_msgSend(v8, "formUnionWithCharacterSet:", v10);

    objc_msgSend(v8, "addCharactersInString:", CFSTR("/\\?%*|\"<>:-#"));
    objc_msgSend(v8, "removeCharactersInString:", CFSTR("_-"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "componentsSeparatedByCharactersInSet:", v8));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "componentsJoinedByString:", &stru_10091C438));

    v78 = 0;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSRegularExpression regularExpressionWithPattern:options:error:](NSRegularExpression, "regularExpressionWithPattern:options:error:", CFSTR("  +"), 1, &v78));
    v14 = v78;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "stringByReplacingMatchesInString:options:range:withTemplate:", v12, 0, 0, objc_msgSend(v12, "length"), CFSTR(" ")));

    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pathExtension"));
    v17 = 254 - (_QWORD)objc_msgSend(v16, "length");
    if ((unint64_t)objc_msgSend(v15, "length") > v17)
    {
      v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "substringWithRange:", 0, v17));

      v15 = (void *)v18;
    }
    if (!objc_msgSend(v15, "length"))
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("unknown"), &stru_10091C438, 0));

      v15 = (void *)v20;
    }
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "stringByAppendingPathExtension:", v16));

    if (v21)
    {
      v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "URLByAppendingPathComponent:", v21));
      v24 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v25 = *(void **)(v24 + 40);
      *(_QWORD *)(v24 + 40) = v23;

    }
    v26 = BKLibraryBookImportLog(v22);
    v27 = objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 141558274;
      *(_QWORD *)v80 = 1752392040;
      *(_WORD *)&v80[8] = 2112;
      *(_QWORD *)v81 = v28;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "p_moveToUbiquityItemAtURL: Importing to destURL: %{mask.hash}@", buf, 0x16u);
    }

    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
    {
LABEL_38:

      goto LABEL_39;
    }
    v29 = objc_msgSend(v74, "isUbiquitousItemAtURL:");
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "path"));
    v31 = objc_msgSend(v74, "fileExistsAtPath:", v30);

    v33 = BKLibraryBookImportLog(v32);
    v34 = objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 67109890;
      *(_DWORD *)v80 = v29;
      *(_WORD *)&v80[4] = 1024;
      *(_DWORD *)&v80[6] = v31;
      strcpy(v81, "p\bhash");
      v81[7] = 0;
      *(_WORD *)&v81[8] = 0;
      v82 = 2112;
      v83 = v35;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "p_moveToUbiquityItemAtURL: ubiquitousCollisions: %d fileCollision: %d destURL: %{mask.hash}@", buf, 0x22u);
    }

    if (((v29 | v31) & 1) != 0)
    {
      v36 = 0;
    }
    else
    {
      v63 = *(_QWORD *)(a1 + 40);
      v64 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      v77 = 0;
      v65 = objc_msgSend(v74, "setUbiquitous:itemAtURL:destinationURL:error:", 1, v63, v64, &v77);
      v36 = v77;
      if ((v65 & 1) != 0
        || (v66 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8),
            v67 = *(void **)(v66 + 40),
            *(_QWORD *)(v66 + 40) = 0,
            v67,
            !objc_msgSend(*(id *)(a1 + 32), "_isFileExistsError:", v36)))
      {
LABEL_37:

        goto LABEL_38;
      }
    }
    v69 = v16;
    v70 = v13;
    v71 = v14;
    v72 = v8;
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "pathExtension"));
    v68 = v21;
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "stringByDeletingPathExtension"));
    v39 = 0;
    v40 = v36;
    while (1)
    {
      v73 = v40;
      v41 = v39 <= 99 ? 99 : v39;
      v42 = v41 + 1;
      while (1)
      {
        v43 = v39 + 1;
        v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ %d.%@"), v38, (v39 + 1), v37));
        v45 = objc_claimAutoreleasedReturnValue(objc_msgSend(v75, "URLByAppendingPathComponent:", v44));
        v46 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v47 = *(void **)(v46 + 40);
        *(_QWORD *)(v46 + 40) = v45;

        v49 = BKLibraryBookImportLog(v48);
        v50 = objc_claimAutoreleasedReturnValue(v49);
        if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
        {
          v51 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
          *(_DWORD *)buf = 141558274;
          *(_QWORD *)v80 = 1752392040;
          *(_WORD *)&v80[8] = 2112;
          *(_QWORD *)v81 = v51;
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "p_moveToUbiquityItemAtURL: Previous file exists! Trying importing to destURL: %{mask.hash}@", buf, 0x16u);
        }

        v52 = objc_msgSend(v74, "isUbiquitousItemAtURL:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
        v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8)
                                                                           + 40), "path"));
        v54 = objc_msgSend(v74, "fileExistsAtPath:", v53);

        if ((v52 & 1) == 0 && (v54 & 1) == 0)
          break;
        v55 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v56 = *(void **)(v55 + 40);
        *(_QWORD *)(v55 + 40) = 0;

        ++v39;
        if (v42 == v43)
        {
          v36 = v73;
          goto LABEL_34;
        }
      }
      v57 = *(_QWORD *)(a1 + 40);
      v58 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      v76 = v73;
      v59 = objc_msgSend(v74, "setUbiquitous:itemAtURL:destinationURL:error:", 1, v57, v58, &v76);
      v36 = v76;

      if (v59)
        break;
      v60 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v61 = *(void **)(v60 + 40);
      *(_QWORD *)(v60 + 40) = 0;

      v62 = objc_msgSend(*(id *)(a1 + 32), "_isFileExistsError:", v36);
      if (v39 <= 98)
      {
        ++v39;
        v40 = v36;
        if ((v62 & 1) != 0)
          continue;
      }
      goto LABEL_34;
    }

LABEL_34:
    v14 = v71;
    v8 = v72;
    v16 = v69;
    v13 = v70;
    v21 = v68;
    goto LABEL_37;
  }
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = 0;

LABEL_40:
}

void sub_1000FDD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000FDD1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 56), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1000FE6D4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  id v15;
  void *v16;
  void *v17;
  _QWORD block[5];
  id v19;
  id v20;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 80);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v3));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "destURL"));
  objc_msgSend(v4, "setUrl:", v5);

  v6 = BCMetadataXattrAssetID;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "destURL"));
  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:toValue:forUrl:](BCUbiquityMetadataHelper, "setExtendedAttributeNamed:toValue:forUrl:", v6, v7, v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "destURL"));
  v10 = *(void **)(*(_QWORD *)(a1 + 32) + 64);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "assetID"));
  objc_msgSend(v10, "setObject:forKeyedSubscript:", v9, v11);

  objc_msgSend(*(id *)(a1 + 32), "p_schedulePersistInfoToDisk");
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(void **)(a1 + 40);
  v14 = *(NSObject **)(v12 + 128);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FE870;
  block[3] = &unk_1008E7928;
  block[4] = v12;
  v19 = v4;
  v20 = v13;
  v15 = v4;
  dispatch_async(v14, block);
  v16 = *(void **)(a1 + 32);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "destURL"));
  objc_msgSend(v16, "iq_purgeUnzippedBooksCacheIfNeededExceptURL:", v17);

}

void sub_1000FE870(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryManager"));
  v3 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  objc_msgSend(v2, "libraryDataSource:updatedAssets:", v3, v4);

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "completion"));
  v6 = (void *)v5;
  if (v5)
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v5 + 16))(v5, *(_QWORD *)(a1 + 40), 1, 0);

}

void sub_1000FE9C4(uint64_t a1)
{
  void (**v2)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userContext"));
  v2 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "completion"));
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", kBKLibraryDataSourceDomain, kBKLibraryDataSourceErrorExtractionError, 0));
    ((void (**)(_QWORD, _QWORD, uint64_t, void *))v2)[2](v2, 0, 1, v3);

  }
  objc_msgSend(*(id *)(a1 + 40), "iq_purgeUnzippedBooksCacheIfNeededExceptURL:", 0);

}

void sub_1000FEE60(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x2Au);
}

void sub_1000FF2CC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  _BOOL4 v9;
  unsigned int v10;
  __CFString *v11;
  __CFString *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  uint64_t v21;
  _BOOL4 v22;
  void *v23;
  __CFString *v24;
  __CFString *v25;
  __CFString *v26;
  __CFString *v27;
  __CFString *v28;
  __CFString *v29;
  _QWORD v30[5];
  objc_super v31;
  uint8_t buf[4];
  __CFString *v33;
  __int16 v34;
  __CFString *v35;
  __int16 v36;
  __CFString *v37;

  v31.receiver = *(id *)(a1 + 32);
  v31.super_class = (Class)BKBookZoomRevealOpenAnimator;
  objc_msgSendSuper2(&v31, "bookContentDidLoad");
  v2 = objc_msgSend(*(id *)(a1 + 32), "contentLoaded");
  if ((v2 & 1) != 0)
  {
    v3 = _AEBookOpenLog(v2);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
    }

    return;
  }
  objc_msgSend(*(id *)(a1 + 32), "setContentLoaded:", 1);
  v5 = objc_msgSend(*(id *)(a1 + 32), "waitingForContentLoaded");
  v6 = (int)v5;
  v7 = _AEBookOpenLog(v5);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (!v6)
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
    }
    goto LABEL_31;
  }
  if (v9)
  {
    v10 = objc_msgSend(*(id *)(a1 + 32), "zoomRequiresContentLoaded");
    v11 = CFSTR("NO");
    if (v10)
      v11 = CFSTR("YES");
    v12 = v11;
    *(_DWORD *)buf = 138543362;
    v33 = v12;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "-bookContentDidLoad -- waitingForContentLoaded: YES, zoomRequiresContentLoaded: %{public}@", buf, 0xCu);

  }
  v13 = objc_msgSend(*(id *)(a1 + 32), "zoomRequiresContentLoaded");
  if ((_DWORD)v13)
  {
    v14 = _AEBookOpenLog(v13);
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "-bookContentDidLoad -- waitingForContentLoaded: NO, zoomRequiresContentLoaded: YES -- performing _animateFirstHalf", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "setWaitingForContentLoaded:", 0);
    objc_msgSend(*(id *)(a1 + 32), "_animateFirstHalf");
    return;
  }
  objc_msgSend(*(id *)(a1 + 32), "spinnerStartTime");
  v17 = v16 + 0.3 + 0.4;
  v18 = +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
  v20 = v19;
  v21 = _AEBookOpenLog(v18);
  v8 = objc_claimAutoreleasedReturnValue(v21);
  v22 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v17 >= v20)
  {
    if (v22)
    {
      if (objc_msgSend(*(id *)(a1 + 32), "contentLoaded"))
        v24 = CFSTR("YES");
      else
        v24 = CFSTR("NO");
      v25 = v24;
      if (objc_msgSend(*(id *)(a1 + 32), "waitingForContentLoaded"))
        v26 = CFSTR("YES");
      else
        v26 = CFSTR("NO");
      v27 = v26;
      if (objc_msgSend(*(id *)(a1 + 32), "zoomRequiresContentLoaded"))
        v28 = CFSTR("YES");
      else
        v28 = CFSTR("NO");
      v29 = v28;
      *(_DWORD *)buf = 138543874;
      v33 = v25;
      v34 = 2114;
      v35 = v27;
      v36 = 2114;
      v37 = v29;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "-bookContentDidLoad -- contentLoaded: %{public}@ waitingForContentLoaded: %{public}@ zoomRequiresContentLoaded: %{public}@ -- nothing to do", buf, 0x20u);

    }
LABEL_31:

    return;
  }
  if (v22)
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "-bookContentDidLoad -- waitingForContentLoaded: NO, showSpinner: NO -- performing _animateSecondHalf after animations complete", buf, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "setWaitingForContentLoaded:", 0);
  v23 = *(void **)(a1 + 32);
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_1000FF65C;
  v30[3] = &unk_1008E77C8;
  v30[4] = v23;
  objc_msgSend(v23, "_showSpinner:delay:completion:", 0, v30, 0.0);
}

id sub_1000FF65C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_animateSecondHalf");
}

id sub_1000FF8CC(uint64_t a1)
{
  double v1;

  v1 = 1.0;
  if (!*(_BYTE *)(a1 + 40))
    v1 = 0.0;
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 240), "setAlpha:", v1);
}

void sub_1000FFAA8(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  _QWORD v14[5];
  uint8_t buf[4];
  __CFString *v16;
  __int16 v17;
  __CFString *v18;

  v2 = _AEBookOpenLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "spinnerMinDurationComplete", buf, 2u);
  }

  v4 = objc_msgSend(*(id *)(a1 + 32), "contentLoaded");
  if ((_DWORD)v4 && (v4 = objc_msgSend(*(id *)(a1 + 32), "waitingForContentLoaded"), (_DWORD)v4))
  {
    v5 = _AEBookOpenLog(v4);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "content loaded & waiting on content to load", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "setWaitingForContentLoaded:", 0);
    v7 = *(void **)(a1 + 32);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000FFCA0;
    v14[3] = &unk_1008E77C8;
    v14[4] = v7;
    objc_msgSend(v7, "_showSpinner:delay:completion:", 0, v14, 0.0);
  }
  else
  {
    v8 = _AEBookOpenLog(v4);
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      if (objc_msgSend(*(id *)(a1 + 32), "contentLoaded"))
        v10 = CFSTR("YES");
      else
        v10 = CFSTR("NO");
      v11 = v10;
      if (objc_msgSend(*(id *)(a1 + 32), "waitingForContentLoaded"))
        v12 = CFSTR("YES");
      else
        v12 = CFSTR("NO");
      v13 = v12;
      *(_DWORD *)buf = 138543618;
      v16 = v11;
      v17 = 2114;
      v18 = v13;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "spinnerMinDurationComplete - contentLoaded: %{public}@ waitingForContentLoaded: %{public}@. Nothing else will happen in this case", buf, 0x16u);

    }
  }
}

id sub_1000FFCA0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint8_t v5[16];

  v2 = _AEBookOpenLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
  }

  return objc_msgSend(*(id *)(a1 + 32), "_animateSecondHalf");
}

void sub_1000FFD10(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  uint8_t buf[4];
  __CFString *v17;
  __int16 v18;
  __CFString *v19;

  v2 = _AEBookOpenLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "secondHalfDelayComplete", buf, 2u);
  }

  v4 = objc_msgSend(*(id *)(a1 + 32), "opening");
  if ((_DWORD)v4 && (v4 = objc_msgSend(*(id *)(a1 + 32), "contentLoaded"), (v4 & 1) == 0))
  {
    v11 = _AEBookOpenLog(v4);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v17 = (__CFString *)&off_10092F6C8;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "opening but content not loaded -- showing spinner for at least %{public}@s", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "setWaitingForContentLoaded:", 1);
    +[NSDate timeIntervalSinceReferenceDate](NSDate, "timeIntervalSinceReferenceDate");
    objc_msgSend(*(id *)(a1 + 32), "setSpinnerStartTime:");
    objc_msgSend(*(id *)(a1 + 32), "setupSpinner");
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000FFF50;
    v14[3] = &unk_1008E7B98;
    v13 = *(void **)(a1 + 32);
    v15 = *(id *)(a1 + 40);
    objc_msgSend(v13, "_showSpinner:delay:completion:", 1, v14, 0.0);

  }
  else
  {
    v5 = _AEBookOpenLog(v4);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      if (objc_msgSend(*(id *)(a1 + 32), "opening"))
        v7 = CFSTR("YES");
      else
        v7 = CFSTR("NO");
      v8 = v7;
      if (objc_msgSend(*(id *)(a1 + 32), "contentLoaded"))
        v9 = CFSTR("YES");
      else
        v9 = CFSTR("NO");
      v10 = v9;
      *(_DWORD *)buf = 138543618;
      v17 = v8;
      v18 = 2114;
      v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "animating second half - opening: %{public}@ contentLoaded: %{public}@", buf, 0x16u);

    }
    objc_msgSend(*(id *)(a1 + 32), "_animateSecondHalf");
  }
}

void sub_1000FFF50(uint64_t a1)
{
  dispatch_time_t v2;

  v2 = dispatch_time(0, 400000000);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 32));
}

void sub_1000FFF88(uint64_t a1, int a2)
{
  uint64_t v4;
  NSObject *v5;
  __CFString *v6;
  __CFString *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  unsigned int v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  dispatch_time_t v16;
  uint64_t v17;
  NSObject *v18;
  unsigned int v19;
  __CFString *v20;
  __CFString *v21;
  void *v22;
  dispatch_time_t v23;
  _QWORD block[5];
  uint8_t buf[4];
  __CFString *v26;
  __int16 v27;
  void *v28;

  v4 = _AEBookOpenLog(a1);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = CFSTR("NO");
    if (a2)
      v6 = CFSTR("YES");
    v7 = v6;
    *(_DWORD *)buf = 138543362;
    v26 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "firstHalfComplete - finished: %{public}@", buf, 0xCu);

  }
  if (objc_msgSend(*(id *)(a1 + 32), "opening")
    && (v8 = objc_msgSend(*(id *)(a1 + 32), "skipReveal"), (_DWORD)v8))
  {
    v9 = _AEBookOpenLog(v8);
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "opening & skipping reveal - calling animations finished", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "animationsDidFinish");
  }
  else
  {
    v11 = objc_msgSend(*(id *)(a1 + 32), "opening");
    v12 = *(void **)(a1 + 32);
    if (v11)
      v13 = objc_msgSend(v12, "minSecondHalfDelayOnOpen");
    else
      v13 = objc_msgSend(v12, "minSecondHalfDelayOnClose");
    v15 = v14;
    if (v14 > 0.0)
    {
      v13 = (id)dispatch_time(0, (uint64_t)(v14 * 1000000000.0));
      v16 = (dispatch_time_t)v13;
    }
    else
    {
      v16 = 0;
    }
    v17 = _AEBookOpenLog(v13);
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = objc_msgSend(*(id *)(a1 + 32), "opening");
      v20 = CFSTR("NO");
      if (v19)
        v20 = CFSTR("YES");
      v21 = v20;
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v15));
      *(_DWORD *)buf = 138543618;
      v26 = v21;
      v27 = 2114;
      v28 = v22;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "opening: %{public}@ - waiting %{public}@s before calling secondHalfDelayComplete", buf, 0x16u);

    }
    dispatch_after(v16, (dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 40));
    if (objc_msgSend(*(id *)(a1 + 32), "opening"))
    {
      v23 = 0;
      if (v15 > 0.0)
        v23 = dispatch_time(0, 5000000000);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10010024C;
      block[3] = &unk_1008E72C0;
      block[4] = *(_QWORD *)(a1 + 32);
      dispatch_after(v23, (dispatch_queue_t)&_dispatch_main_q, block);

    }
  }
}

id sub_10010024C(uint64_t a1)
{
  id result;
  uint64_t v3;
  NSObject *v4;
  int v5;
  _UNKNOWN **v6;

  result = objc_msgSend(*(id *)(a1 + 32), "contentLoaded");
  if ((result & 1) == 0)
  {
    v3 = _AEBookOpenLog(result);
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 138543362;
      v6 = &off_10092F6D8;
    }

    return objc_msgSend(*(id *)(a1 + 32), "bookContentDidLoad");
  }
  return result;
}

void sub_1001003C0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  v2 = _AEBookOpenLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "second half animations complete", v5, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "animationsDidFinish");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
  objc_msgSend(v4, "postEvent:sender:", kBETestDriverOpenAnimationEnd, *(_QWORD *)(a1 + 32));

}

uint64_t sub_100100530(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t result;

  kdebug_trace(725353056, 0, 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
  objc_msgSend(v4, "postEvent:sender:", kBETestDriverOpenAnimationZoomEnd, *(_QWORD *)(a1 + 32));

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

uint64_t sub_100100694(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t result;

  kdebug_trace(725353056, 0, 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
  objc_msgSend(v4, "postEvent:sender:", kBETestDriverOpenAnimationRevealEnd, *(_QWORD *)(a1 + 32));

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_10010098C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  void *v8;
  id v9;

  v2 = _UIAccessibilityFocusedElements();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));

  v4 = v9;
  if (v9 == *(id *)(a1 + 32))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "_bkaxParent"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bkaxTarget"));
    if ((objc_msgSend(v6, "isSelected") & 1) == 0)
    {
      v7 = objc_msgSend(*(id *)(a1 + 32), "_isNewCollectionItem");

      if ((v7 & 1) != 0)
      {
LABEL_6:

        v4 = v9;
        goto LABEL_7;
      }
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "delegate"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bkaxIndexPath"));
      objc_msgSend(v6, "collectionView:didSelectItemAtIndexPath:", v5, v8);

    }
    goto LABEL_6;
  }
LABEL_7:

}

id sub_100102264(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateCardSize");
}

void sub_100102738(uint64_t a1)
{
  double v1;
  id v2;

  if (*(_BYTE *)(a1 + 40))
    v1 = 0.0;
  else
    v1 = 1.0;
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "closeButton"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_100102C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100102CB0(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_100102E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100102EB8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  id v25;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (!v7 || v9)
  {
    v11 = sub_1001B6D9C();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006A096C((uint64_t)v10, v12, v13, v14, v15, v16, v17, v18);

    v19 = objc_retainBlock(*(id *)(a1 + 32));
    v20 = v19;
    if (v19)
      (*((void (**)(id, _QWORD))v19 + 2))(v19, 0);

  }
  else
  {
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_100103000;
    v21[3] = &unk_1008EAE70;
    objc_copyWeak(&v25, (id *)(a1 + 40));
    v22 = v7;
    v23 = v8;
    v24 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v21);

    objc_destroyWeak(&v25);
  }

}

void sub_100103000(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", *(_QWORD *)(a1 + 32)));
    if (!v3)
    {
      v4 = sub_1001B6D9C();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1006A09D4(a1, v5, v6, v7, v8, v9, v10, v11);

    }
    v12 = objc_retainBlock(*(id *)(a1 + 48));
    v13 = v12;
    if (v12)
      (*((void (**)(id, void *))v12 + 2))(v12, v3);

  }
  else
  {
    v14 = objc_retainBlock(*(id *)(a1 + 48));
    v3 = v14;
    if (v14)
      (*((void (**)(id, _QWORD))v14 + 2))(v14, 0);
  }

}

void sub_1001031E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100103204(id *a1)
{
  _QWORD block[4];
  id v3;
  id v4;
  id v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001032A8;
  block[3] = &unk_1008EAEC0;
  objc_copyWeak(&v5, a1 + 6);
  v4 = a1[5];
  v3 = a1[4];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v5);
}

void sub_1001032A8(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
  objc_msgSend(v2, "setFrame:", 0.0, 0.0, 1000.0, 52.0);
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id, _QWORD))v3 + 2))(v3, WeakRetained, *(_QWORD *)(a1 + 32));

}

id sub_1001036F4(uint64_t a1)
{
  BKBookProgressController *v2;
  void *v3;

  v2 = objc_alloc_init(BKBookProgressController);
  v3 = (void *)qword_1009F4F70;
  qword_1009F4F70 = (uint64_t)v2;

  return objc_msgSend((id)qword_1009F4F70, "setAnnotationProvider:", *(_QWORD *)(a1 + 32));
}

void sub_100103D90(uint64_t a1, void *a2)
{
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  void *v10;
  double v11;
  void *v12;
  float v13;
  double v14;
  void *v15;
  void *v16;
  const __CFString *v17;
  double v18;
  uint64_t v19;
  int64_t v20;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  __CFString *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;

  v34 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "collection"));
  if (objc_msgSend(v34, "isCloudAsset"))
    objc_msgSend(v3, "bk_cloudTimeRemaining");
  else
    objc_msgSend(v3, "bk_localTimeRemaining");
  v5 = v4;
  if (objc_msgSend(v34, "isCloudAsset"))
    objc_msgSend(v3, "bk_cloudDuration");
  else
    objc_msgSend(v3, "bk_localDuration");
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v9 = AEAudioBookPlaybackRateUserDefaultsKey;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", AEAudioBookPlaybackRateUserDefaultsKey));

  v11 = 1.0;
  if (v10)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v12, "floatForKey:", v9);
    v11 = v13;

  }
  if (v11 <= 0.0)
    v14 = 1.0;
  else
    v14 = v11;
  if (v3)
  {
    if (*(_BYTE *)(a1 + 40))
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle", v14));
      v16 = v15;
      v17 = CFSTR("New");
LABEL_29:
      v29 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "localizedStringForKey:value:table:", v17, &stru_10091C438, 0));
LABEL_30:

      goto LABEL_36;
    }
    if (1.0 - v5 / fmax(v7, 1.0) <= 0.01)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle", v14));
      v16 = v15;
      v17 = CFSTR("Just started");
      goto LABEL_29;
    }
    v18 = (double)(uint64_t)llround(fabs(v5 / v14)) / 60.0;
    v19 = vcvtmd_s64_f64((double)(uint64_t)ceil(v18) / 60.0);
    v20 = vcvtpd_s64_f64(v18) - 60 * v19;
    if (v19 <= 0 && v20 < 1)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v16 = v15;
      v17 = CFSTR("Finished");
      goto LABEL_29;
    }
    if (v19 >= 1 && v20 >= 1)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("%@ hr, %@ min left"), &stru_10091C438, 0));
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v19));
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumberFormatter localizedStringFromNumber:numberStyle:](NSNumberFormatter, "localizedStringFromNumber:numberStyle:", v25, 1));
      v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v20));
      v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumberFormatter localizedStringFromNumber:numberStyle:](NSNumberFormatter, "localizedStringFromNumber:numberStyle:", v27, 1));
      v29 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v24, v26, v28));

LABEL_31:
LABEL_32:

      goto LABEL_30;
    }
    if (v19 >= 1)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("%@ hr left"), &stru_10091C438, 0));
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v19));
      v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumberFormatter localizedStringFromNumber:numberStyle:](NSNumberFormatter, "localizedStringFromNumber:numberStyle:", v25, 1));
      v29 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v24, v23));

      goto LABEL_31;
    }
    if (v20 >= 1)
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("%@ min left"), &stru_10091C438, 0));
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v20));
      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumberFormatter localizedStringFromNumber:numberStyle:](NSNumberFormatter, "localizedStringFromNumber:numberStyle:", v30, 1));
      v29 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v24, v31));

      goto LABEL_32;
    }
  }
  v29 = &stru_10091C438;
LABEL_36:
  v32 = objc_retainBlock(*(id *)(a1 + 32));
  v33 = v32;
  if (v32)
    (*((void (**)(id, __CFString *))v32 + 2))(v32, v29);

}

id sub_100104F28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setEnabled:", objc_msgSend(*(id *)(a1 + 40), "editMode") ^ 1);
}

void sub_100108D50(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100108DD4;
  v3[3] = &unk_1008E7590;
  v4 = *(id *)(a1 + 40);
  objc_msgSend(v2, "requestTabBarSceneController:", v3);

}

void sub_100108DD4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint8_t buf[4];
  const char *v16;
  __int16 v17;
  void *v18;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "rootBarCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hostingViewController"));

  if (!v4)
    v5 = BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKJSAAppController.m", 114, "-[BKJSAAppController requestRootBarControllerWithCompletionValue:]_block_invoke_2", "hostingViewController", 0);
  v8 = JSALog(v5, v6, v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446466;
    v16 = "-[BKJSAAppController requestRootBarControllerWithCompletionValue:]_block_invoke_2";
    v17 = 2112;
    v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%{public}s done result=%@", buf, 0x16u);
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    v14 = v4;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v14, 1));
    objc_msgSend(v11, "enqueueValueCall:arguments:file:line:", v12, v13, CFSTR("BKJSAAppController.m"), 116);

  }
  else
  {
    objc_msgSend(v10, "enqueueValueCall:arguments:file:line:", v12, 0, CFSTR("BKJSAAppController.m"), 116);
  }

}

uint64_t sub_100108F60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001090F0(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100109174;
  v3[3] = &unk_1008EAF10;
  v4 = *(id *)(a1 + 40);
  objc_msgSend(v2, "requestPrimaryScene:", v3);

}

void sub_100109174(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint8_t buf[4];
  const char *v15;
  __int16 v16;
  void *v17;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "scene"));
  v6 = (void *)v3;
  if (!v3)
    v3 = BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/BKJSAAppController.m", 128, "-[BKJSAAppController requestPrimarySceneWithCompletionValue:]_block_invoke_2", "scene", 0);
  v7 = JSALog(v3, v4, v5);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446466;
    v15 = "-[BKJSAAppController requestPrimarySceneWithCompletionValue:]_block_invoke_2";
    v16 = 2112;
    v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}s done, result=%@", buf, 0x16u);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 32);
  if (v6)
  {
    v13 = v6;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v13, 1));
    objc_msgSend(v10, "enqueueValueCall:arguments:file:line:", v11, v12, CFSTR("BKJSAAppController.m"), 130);

  }
  else
  {
    objc_msgSend(v9, "enqueueValueCall:arguments:file:line:", v11, 0, CFSTR("BKJSAAppController.m"), 130);
  }

}

uint64_t sub_1001092F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1001092FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100109308(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001094C4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", JSABridgeWillReloadNotification, 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sceneManager"));
  v4 = *(unsigned __int8 *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100109584;
  v5[3] = &unk_1008E72C0;
  v6 = *(id *)(a1 + 40);
  objc_msgSend(v3, "reloadStandardItemsWithAnimated:completion:", v4, v5);

}

void sub_100109584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;

  v4 = JSALog(a1, a2, a3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 136446210;
    v8 = "-[BKJSAAppController reloadStandardItemsWithAnimated:completion:]_block_invoke_2";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v7, 0xCu);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), 0, CFSTR("BKJSAAppController.m"), 177);

}

uint64_t sub_10010965C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100109844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100109868(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  _QWORD v15[4];
  id v16;
  _QWORD v17[4];
  id v18;
  char v19;
  uint8_t buf[4];
  const char *v21;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "hostingViewController"));
  v5 = objc_msgSend(v4, "bc_firstVisibleChildViewControllerOfClass:includePresented:", objc_opt_class(BCCardStackViewController), 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6)
  {
    v10 = *(unsigned __int8 *)(a1 + 48);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_100109A6C;
    v17[3] = &unk_1008E83C0;
    v19 = v10;
    v18 = *(id *)(a1 + 32);
    objc_msgSend(v6, "popAllCardsAnimated:completion:", v10, v17);
    if (*(_BYTE *)(a1 + 48))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "transitionCoordinator"));
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_100109B50;
      v15[3] = &unk_1008E8308;
      v16 = *(id *)(a1 + 32);
      objc_msgSend(v11, "animateAlongsideTransition:completion:", 0, v15);

    }
    v12 = v18;
  }
  else
  {
    v13 = JSALog(v7, v8, v9);
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v21 = "-[BKJSAAppController dismissCardsForSelectedTab:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%{public}s skipped because there is no card stack", buf, 0xCu);
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v12, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &off_10092F640, CFSTR("BKJSAAppController.m"), 204);
  }

}

void sub_100109A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;

  if (!*(_BYTE *)(a1 + 40))
  {
    v4 = JSALog(a1, a2, a3);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7 = 136446210;
      v8 = "-[BKJSAAppController dismissCardsForSelectedTab:completion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v7, 0xCu);
    }

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &off_10092F610, CFSTR("BKJSAAppController.m"), 193);

  }
}

void sub_100109B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;

  v4 = JSALog(a1, a2, a3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 136446210;
    v8 = "-[BKJSAAppController dismissCardsForSelectedTab:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v7, 0xCu);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), &off_10092F628, CFSTR("BKJSAAppController.m"), 199);

}

uint64_t sub_100109C2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100109D60(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100109D7C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  _BOOL4 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  _QWORD v25[4];
  id v26;
  char v27;
  uint8_t buf[4];
  const char *v29;
  __int16 v30;
  void *v31;
  __int16 v32;
  void *v33;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "appLaunchCoordinator"));
  v5 = objc_msgSend(v4, "appLaunchCoordinatorHasAppLaunched");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "hostingViewController"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "presentedViewController"));

  v12 = JSALog(v9, v10, v11);
  v13 = objc_claimAutoreleasedReturnValue(v12);
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  if (v8 && (_DWORD)v5)
  {
    if (v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
      *(_DWORD *)buf = 136446722;
      v29 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
      v30 = 2112;
      v31 = v15;
      v32 = 2114;
      v33 = v8;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%{public}s: Dismissing presentedViewController animted=%@: %{public}@", buf, 0x20u);

    }
    v16 = *(unsigned __int8 *)(a1 + 48);
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_10010A080;
    v25[3] = &unk_1008E83C0;
    v27 = v16;
    v26 = *(id *)(a1 + 32);
    objc_msgSend(v8, "dismissViewControllerAnimated:completion:", v16, v25);
    if (*(_BYTE *)(a1 + 48))
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "hostingViewController"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "presentedViewController"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "transitionCoordinator"));
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_10010A160;
      v23[3] = &unk_1008E8308;
      v24 = *(id *)(a1 + 32);
      objc_msgSend(v20, "animateAlongsideTransition:completion:", 0, v23);

    }
    v21 = v26;
  }
  else
  {
    if (v14)
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v5));
      *(_DWORD *)buf = 136446722;
      v29 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
      v30 = 2112;
      v31 = v22;
      v32 = 2114;
      v33 = v8;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%{public}s skipped because hasAppLaunched=%@, presentedViewController=%{public}@", buf, 0x20u);

    }
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v21, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), 0, CFSTR("BKJSAAppController.m"), 237);
  }

}

void sub_10010A080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;

  if (!*(_BYTE *)(a1 + 40))
  {
    v4 = JSALog(a1, a2, a3);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v7 = 136446210;
      v8 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v7, 0xCu);
    }

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
    objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), 0, CFSTR("BKJSAAppController.m"), 223);

  }
}

void sub_10010A160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  void *v6;
  int v7;
  const char *v8;

  v4 = JSALog(a1, a2, a3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 136446210;
    v8 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v7, 0xCu);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  objc_msgSend(v6, "enqueueValueCall:arguments:file:line:", *(_QWORD *)(a1 + 32), 0, CFSTR("BKJSAAppController.m"), 230);

}

uint64_t sub_10010A238(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10010A3F0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_10010A414(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  if (*(_QWORD *)(a1 + 32))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectedNavigationController"));

    objc_msgSend(v4, "pushViewController:animated:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 48));
  }
}

uint64_t sub_10010A49C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10010A660(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_10010A684(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
  objc_msgSend(v2, "selectWithIdentifier:isUserAction:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 48));

}

uint64_t sub_10010A6D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10010A884(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_10010A8A8(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint8_t buf[4];
  const char *v16;
  __int16 v17;
  void *v18;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectedTopViewController"));

  v8 = JSALog(v5, v6, v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446466;
    v16 = "-[BKJSAAppController topViewControllerInSelectedTab:]_block_invoke";
    v17 = 2112;
    v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "done %{public}s, result=%@", buf, 0x16u);
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    v14 = v4;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v14, 1));
    objc_msgSend(v11, "enqueueValueCall:arguments:file:line:", v12, v13, CFSTR("BKJSAAppController.m"), 267);

  }
  else
  {
    objc_msgSend(v10, "enqueueValueCall:arguments:file:line:", v12, 0, CFSTR("BKJSAAppController.m"), 267);
  }

}

uint64_t sub_10010AA14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10010AD44(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_10010AD68(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectedTopViewController"));

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "performRawActionModel:withParentTracker:shouldReportFigaro:sourceViewController:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 64), v4, &stru_1008EAFA8);
}

void sub_10010ADE4(id a1, NSError *a2)
{
  NSError *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;

  v2 = a2;
  v5 = JSALog(v2, v3, v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    sub_1006A0A80((uint64_t)v2, v6);

}

uint64_t sub_10010AE34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10010AF04(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

void sub_10010BA84(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v2 = sub_100053348();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1006A0C48(a1, v3, v4, v5, v6, v7, v8, v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fetchedResultsController"));
  objc_msgSend(v10, "setDelegate:", 0);

  objc_msgSend(*(id *)(a1 + 32), "setFetchedResultsController:", 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dynamicArray"));
  objc_msgSend(v11, "updateArray:", &__NSArray0__struct);

}

void sub_10010BBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010BBD0(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fetchedResultsController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fetchedObjects"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v2 != 0;

}

void sub_10010BCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010BD08(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fetchedResultsController"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchedObjects"));

  v3 = v7;
  if (v7)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetsFromFetchRequestResults:", v7));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

    v3 = v7;
  }

}

void sub_10010C0A8(id *a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  id *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  void *v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  char v23;
  void *v24;
  void **v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;

  v2 = sub_100053348();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1006A0F90((uint64_t)a1);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "fetchedObjects"));
  v5 = a1 + 4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "assetsFromFetchRequestResults:", v4));
  v7 = a1[4];
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "fetchRequest"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_assetDictionariesForDynamicArrayWithFetchRequest:isInitialFetch:matchedAssets:", v8, 0, v6));

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "dynamicArray"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "dataProvider"));

  if (v11)
  {
    v12 = a1[6];
    v13 = sub_100053348();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG);
    if (v12)
    {
      if (v15)
        sub_1006A0F0C((uint64_t)(a1 + 4), a1 + 6);

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "fetchRequest"));
      v17 = (char *)objc_msgSend(v16, "fetchLimit");

      if (v17)
        objc_msgSend(a1[6], "trimWithStart:end:", 0, v17 - 1);
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[TUITransactionOptions defaultImplicitOptions](TUITransactionOptions, "defaultImplicitOptions"));
      v25 = _NSConcreteStackBlock;
      v26 = 3221225472;
      v27 = sub_10010C34C;
      v28 = &unk_1008EB0B0;
      v29 = v11;
      v30 = v9;
      v31 = a1[6];
      v32 = v4;
      v19 = a1[5];
      v20 = a1[4];
      v33 = v19;
      v34 = v20;
      v21 = +[TUITransaction currentOrNewTransactionWithOptions:block:](TUITransaction, "currentOrNewTransactionWithOptions:block:", v18, &v25);

    }
    else
    {
      if (v15)
        sub_1006A0E98((uint64_t)(a1 + 4), v9);

      objc_msgSend(v11, "updateArray:batchUpdatesBlock:", v9, 0);
    }
  }
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v5, "delegate", v25, v26, v27, v28));
  v23 = objc_opt_respondsToSelector(v22, "libraryProvider:contentDidChange:");

  if ((v23 & 1) != 0)
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v5, "delegate"));
    objc_msgSend(v24, "libraryProvider:contentDidChange:", *v5, v6);

  }
}

void sub_10010C34C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD v32[4];
  id v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  id v39;
  __int16 v40;
  id v41;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_10010C664;
  v32[3] = &unk_1008EB088;
  v33 = *(id *)(a1 + 48);
  objc_msgSend(v2, "updateArray:batchUpdatesBlock:", v3, v32);
  v4 = objc_msgSend(*(id *)(a1 + 56), "count");
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "fetchRequest"));
  v6 = objc_msgSend(v5, "fetchLimit");
  if (v6)
    v7 = v6;
  else
    v7 = v4;

  if (v4 < v7)
  {
    v8 = sub_100053348();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      v29 = *(_QWORD *)(a1 + 72);
      v30 = *(_QWORD *)(v29 + 8);
      *(_DWORD *)buf = 138413058;
      v35 = v30;
      v36 = 2048;
      v37 = v29;
      v38 = 2048;
      v39 = v4;
      v40 = 2048;
      v41 = v7;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%@[%p] - actual < desired (%lu vs %lu)", buf, 0x2Au);
    }

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "fetchedResultsController"));
    objc_msgSend(v10, "setDelegate:", 0);

    v11 = objc_alloc((Class)NSFetchedResultsController);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "fetchRequest"));
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "moc"));
    v14 = objc_msgSend(v11, "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:", v12, v13, 0, 0);
    objc_msgSend(*(id *)(a1 + 72), "setFetchedResultsController:", v14);

    v15 = *(void **)(a1 + 72);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "fetchedResultsController"));
    objc_msgSend(v16, "setDelegate:", v15);

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "fetchedResultsController"));
    v31 = 0;
    LOBYTE(v13) = objc_msgSend(v17, "performFetch:", &v31);
    v18 = v31;

    if ((v13 & 1) == 0)
    {
      v19 = sub_100053348();
      v20 = objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        sub_1006A0BE0();

    }
    v21 = sub_100053348();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      sub_1006A1048((id *)(a1 + 72));

    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "fetchedResultsController"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "fetchedObjects"));

    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "assetsFromFetchRequestResults:", v24));
    v26 = *(void **)(a1 + 72);
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "fetchRequest"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "_assetDictionariesForDynamicArrayWithFetchRequest:isInitialFetch:matchedAssets:", v27, 0, v25));

    objc_msgSend(*(id *)(a1 + 32), "updateArray:batchUpdatesBlock:", v28, 0);
  }

}

void sub_10010C664(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10010C6E0;
  v6[3] = &unk_1008EB060;
  v7 = v3;
  v5 = v3;
  objc_msgSend(v4, "computeUpdatesWithBlock:", v6);

}

id *sub_10010C6E0(id *result, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      result = (id *)_objc_msgSend(result[4], "insertItemAtIndex:");
      break;
    case 1:
      result = (id *)_objc_msgSend(result[4], "deleteItemAtIndex:");
      break;
    case 2:
      result = (id *)_objc_msgSend(result[4], "updateItemAtIndex:");
      break;
    case 3:
      result = (id *)_objc_msgSend(result[4], "moveItemFromIndex:toIndex:");
      break;
    default:
      return result;
  }
  return result;
}

void sub_10010C898(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "entity"));
  v4 = *(void **)(a1 + 32);

  if (v3 == v4)
  {
    v5 = *(void **)(*(_QWORD *)(a1 + 40) + 56);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectIDsForRelationshipNamed:", CFSTR("collectionMembers")));
    objc_msgSend(v5, "addObjectsFromArray:", v6);

  }
}

void sub_10010C9B8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = *(void **)(*(_QWORD *)(a1 + 32) + 56);
  v6 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectID"));
  LODWORD(v4) = objc_msgSend(v4, "containsObject:", v5);

  if ((_DWORD)v4)
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "refreshObject:mergeChanges:", v6, 1);

}

void sub_10010CAFC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x2Au);
}

id sub_10010CB10(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "count");
}

void sub_10010CB24(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

id sub_10010D5A4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "setFlowState:", *(_QWORD *)(a1 + 40));
  if (*(_BYTE *)(a1 + 48))
    return _objc_msgSend(*(id *)(a1 + 32), "_persistDownloadFlowState:", *(_QWORD *)(a1 + 40));
  return result;
}

void sub_10010D65C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint8_t v19[16];

  v2 = (uint64_t)objc_msgSend(*(id *)(a1 + 32), "stage");
  if (v2 <= 299)
  {
    if (v2)
    {
      if (v2 == 150)
      {
        v17 = BKBookletMigrationLog();
        v18 = objc_claimAutoreleasedReturnValue(v17);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: wait GDPR privacy acknowledgement", v19, 2u);
        }

        objc_msgSend(*(id *)(a1 + 40), "wq_runDownloadFlowStageWaitGDPRPrivacyAcknowledgement");
      }
      else
      {
        if (v2 != 200)
          goto LABEL_27;
        v5 = BKBookletMigrationLog();
        v6 = objc_claimAutoreleasedReturnValue(v5);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: force reload purchase items", v19, 2u);
        }

        objc_msgSend(*(id *)(a1 + 40), "wq_runDownloadFlowStageForceReloadPurchaseItems");
      }
    }
    else
    {
      v12 = BKBookletMigrationLog();
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: initial", v19, 2u);
      }

      objc_msgSend(*(id *)(a1 + 40), "wq_runDownloadFlowStageInitial");
    }
  }
  else if (v2 > 599)
  {
    if (v2 != 600)
    {
      if (v2 == 800)
      {
        v7 = BKBookletMigrationLog();
        v8 = objc_claimAutoreleasedReturnValue(v7);
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v19 = 0;
          v9 = "Set download flow stage to: finished";
LABEL_29:
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v9, v19, 2u);
        }
LABEL_30:

        return;
      }
LABEL_27:
      v16 = BKBookletMigrationLog();
      v8 = objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        v9 = "Unknown download flow stage";
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    v14 = BKBookletMigrationLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: queued", v19, 2u);
    }

    objc_msgSend(*(id *)(a1 + 40), "wq_runDownloadFlowStageQueued");
  }
  else
  {
    if (v2 != 300)
    {
      if (v2 == 400)
      {
        v3 = BKBookletMigrationLog();
        v4 = objc_claimAutoreleasedReturnValue(v3);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: query", v19, 2u);
        }

        objc_msgSend(*(id *)(a1 + 40), "wq_runDownloadFlowStageQuery");
        return;
      }
      goto LABEL_27;
    }
    v10 = BKBookletMigrationLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: stop and wait", v19, 2u);
    }

    objc_msgSend(*(id *)(a1 + 40), "wq_runDownloadFlowStageWait");
  }
}

id sub_10010DB08(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "wq_checkGDPRPrivacyAcknowledgementBeforeForceReloadPurchaseItems");
}

id sub_10010DECC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setDownloadFlowStage:", 400);
}

id sub_10010DED8(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  int v12;
  double v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
  objc_msgSend(v2, "timeIntervalSince1970");
  v4 = v3;

  v8 = BKBookletMigrationLog(v5, v6, v7);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v12 = 134217984;
    v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Persisting stop and wait timestamp: %f", (uint8_t *)&v12, 0xCu);
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v10, "setDouble:forKey:", CFSTR("BKBookletMigration.stopAndWaitStartTime"), v4);

  return objc_msgSend(*(id *)(a1 + 32), "_setDownloadFlowStage:", 300);
}

uint64_t sub_10010DFD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10010DFE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10010E408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010E434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[3];
  uint8_t buf[4];
  NSObject *v25;
  __int16 v26;
  uint64_t v27;

  v3 = a2;
  v5 = BKBookletMigrationLog(a1, a2, a3);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v7)
    {
      v8 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "count");
      v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 134218242;
      v25 = v8;
      v26 = 2112;
      v27 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Candidate audiobooks %lu assetIDs: %@", buf, 0x16u);
    }

    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "count"))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForSupplementalContentLibraryAssetsWithStorePlaylistIDs:](BKLibraryManager, "predicateForSupplementalContentLibraryAssetsWithStorePlaylistIDs:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)));
      v23[0] = v10;
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKLibraryManager predicateForNonLocalAndNonDownloadingStoreAssets](BKLibraryManager, "predicateForNonLocalAndNonDownloadingStoreAssets"));
      v23[1] = v11;
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_predicateForRedownloadableAssets"));
      v23[2] = v12;
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v23, 3));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v13));

      v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "storeIDsOfStoreAssetsWithPredicate:", v14));
      v17 = BKBookletMigrationLog(v6, v15, v16);
      v18 = objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v25 = v6;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Non-local, non-downloading booklet storeIDs: %@", buf, 0xCu);
      }

    }
    else
    {
      v6 = 0;
    }
    v19 = -[NSObject count](v6, "count");
    v20 = *(void **)(a1 + 32);
    if (v19)
    {
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "migrationDownloadQueue"));
      objc_msgSend(v21, "enqueueDownloads:", v6);

      v20 = *(void **)(a1 + 32);
      v22 = 600;
    }
    else
    {
      v22 = 800;
    }
    objc_msgSend(v20, "_setDownloadFlowStage:", v22);
  }
  else if (v7)
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Stopping migration for now. Will retry stage query on next launch.", buf, 2u);
  }

}

void sub_10010E6A8(uint64_t a1, void *a2, int a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  int v17;
  id v18;
  __int16 v19;
  id v20;

  v5 = a2;
  v6 = v5;
  if (a3)
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "allObjects"));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    v10 = objc_msgSend(v6, "count");
    if (v10 < objc_msgSend(*(id *)(a1 + 32), "count"))
    {
      v11 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
      v12 = objc_msgSend(v11, "minusSet:", v6);
      v15 = BKBookletMigrationLog(v12, v13, v14);
      v16 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17 = 134218242;
        v18 = objc_msgSend(v11, "count");
        v19 = 2112;
        v20 = v11;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Encountered audiobooks with missing purchase token, %lu storeIDs: %@", (uint8_t *)&v17, 0x16u);
      }

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_10010F0C8(uint64_t a1)
{
  void *v2;
  double v3;
  CGFloat v4;
  void *v5;
  CGFloat v6;
  void *v7;
  CGAffineTransform v8;
  CGAffineTransform v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  objc_msgSend(v2, "dimmedScale");
  v4 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  objc_msgSend(v5, "dimmedScale");
  CGAffineTransformMakeScale(&v9, v4, v6);
  v7 = *(void **)(a1 + 32);
  v8 = v9;
  objc_msgSend(v7, "setTransform:", &v8);

}

id sub_10010F1C0(uint64_t a1)
{
  void *v1;
  __int128 v2;
  _OWORD v4[3];

  v1 = *(void **)(a1 + 32);
  v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v4[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v4[1] = v2;
  v4[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return objc_msgSend(v1, "setTransform:", v4);
}

void sub_10010F260(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cellMetrics"));
  objc_msgSend(v2, "dimmedAlpha");
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:");

}

id sub_10010F308(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

void sub_10010F5FC(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 1);
}

void sub_1001103E0(uint64_t a1)
{
  double x;
  double y;
  double width;
  double height;
  id v6;
  CGRect v7;

  objc_msgSend(*(id *)(a1 + 32), "infoFrame");
  x = v7.origin.x;
  y = v7.origin.y;
  width = v7.size.width;
  height = v7.size.height;
  if (!CGRectIsEmpty(v7))
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "infoCell"));
    objc_msgSend(v6, "setFrame:", x, y, width, height);

  }
}

void sub_100111244(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD block[4];
  id v9;
  uint64_t v10;
  id v11;

  v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001112DC;
  block[3] = &unk_1008E7928;
  v5 = *(id *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = v5;
  v10 = v6;
  v11 = v4;
  v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_1001112DC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryAsset"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "storeID"));
  LODWORD(v2) = objc_msgSend(v2, "isEqualToString:", v4);

  if ((_DWORD)v2)
    _objc_msgSend(*(id *)(a1 + 40), "setFormattedPrice:", *(_QWORD *)(a1 + 48));
}

void sub_100111700(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_100111714(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "assetStateChanged");

}

void sub_100111740(uint64_t a1)
{
  id *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "audiobookStatus"));
  v3 = objc_msgSend(v2, "assetAudiobookStatusIsPlaying");
  v4 = objc_loadWeakRetained(v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "audiobookControl"));
  objc_msgSend(v5, "setPlaying:", v3);

}

void sub_1001117BC(uint64_t a1)
{
  id *v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "audiobookStatus"));
  objc_msgSend(v2, "assetAudiobookStatusTrackProgress");
  v4 = v3;
  v5 = objc_loadWeakRetained(v1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "audiobookControl"));
  objc_msgSend(v6, "setProgress:", v4);

}

void sub_100111840(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "handleAssetMetadataChange");

}

id sub_1001133A4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setIsAccessibilityScrollAncestor:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "setIsAccessibilityScrollAncestor:", 0);
}

void sub_10011362C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_10011364C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_imaxPageStatus:window:", 1, *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  return objc_msgSend(*(id *)(a1 + 48), "turnToPageNumber:animated:", *(_QWORD *)(a1 + 64) + 1, 0);
}

id sub_1001136A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_imaxPageStatus:window:", 0, *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  return objc_msgSend(*(id *)(a1 + 48), "turnToPageNumber:animated:", *(_QWORD *)(a1 + 64) - 1, 0);
}

void sub_100113AAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

id sub_100113ACC(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(*(id *)(a1 + 32), "pageRangeForChapterAtIndex:", *(_QWORD *)(a1 + 48));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v4;
  return result;
}

_QWORD *sub_100113B00(_QWORD *result)
{
  _QWORD *v1;
  id v2;
  uint64_t v3;
  void *v4;

  if (result[4])
  {
    v1 = result;
    v2 = objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:", result[4]);
    v3 = *(_QWORD *)(v1[5] + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

    return _objc_msgSend(*(id *)(*(_QWORD *)(v1[5] + 8) + 40), "setAttribute:forKey:", kCFBooleanTrue, IMAccessibilityTokenLowPitch);
  }
  return result;
}

uint64_t sub_100113C6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_100113D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100113D5C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id WeakRetained;
  void *v9;
  id v10;
  NSObject *v11;
  uint8_t v12[16];

  v6 = a2;
  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v9 = WeakRetained;
  if (!v6 || v7)
  {
    v10 = sub_1000CA2E0();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to retrieve acquireSlot URL from the bag.", v12, 2u);
    }

    objc_msgSend(v9, "finishWithError:", v7);
  }
  else
  {
    objc_msgSend(WeakRetained, "_acquireSlotWithURL:", v6);
  }

}

void sub_100113FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100114020(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  void *v20;
  int v21;
  id v22;
  __int16 v23;
  void *v24;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "userInfo"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKAcquireSlotErrorDomain"), 2, v8));

  }
  else
  {
    v12 = objc_opt_class(NSNumber);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "parsedBodyDictionary"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("status")));
    v15 = BUDynamicCast(v12, v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    v17 = objc_msgSend(v16, "integerValue");

    if (!v17)
      goto LABEL_10;
    if (v17 == (id)502)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKAcquireSlotErrorDomain"), 3, 0));
    }
    else
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "parsedBodyDictionary"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKAcquireSlotErrorDomain"), 1, v20));

    }
  }
  if (v9)
  {
    v10 = sub_1000CA2E0();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      v21 = 134218242;
      v22 = objc_msgSend(v9, "code");
      v23 = 2112;
      v24 = v9;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "AcquireSlot returned an error. {c=%ld, (%@)}", (uint8_t *)&v21, 0x16u);
    }

    objc_msgSend(WeakRetained, "finishWithError:", v9);
    goto LABEL_13;
  }
LABEL_10:
  v18 = sub_1000CA2E0();
  v19 = objc_claimAutoreleasedReturnValue(v18);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v21) = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "AcquireSlot was successful.", (uint8_t *)&v21, 2u);
  }

  objc_msgSend(WeakRetained, "finish");
LABEL_13:

}

void sub_100114590(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1009F4FF0;
  qword_1009F4FF0 = (uint64_t)v1;

}

void sub_100114750(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v5 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10011484C;
  v8[3] = &unk_1008E9160;
  v9 = a3;
  v10 = a1[4];
  v14 = a1[7];
  v11 = v5;
  v12 = a1[5];
  v13 = a1[6];
  v6 = v5;
  v7 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

}

void sub_10011484C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void (**v14)(id, void *, _QWORD);
  void *v15;
  void *v16;
  void (**v17)(id, void *, _QWORD);
  void *v18;
  void (**v19)(id, void *, _QWORD);
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    if ((objc_msgSend(v2, "bl_isUserCancelError") & 1) != 0 || (v3 = *(void **)(a1 + 40)) == 0)
    {
      v14 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 72));
      if (v14)
      {
        v19 = v14;
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "validDownloadIDs"));
        v19[2](v19, v15, *(_QWORD *)(a1 + 32));

        v14 = v19;
      }

    }
    else
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "host"));
      if ((unint64_t)objc_msgSend(v4, "length") >= 0x1F5)
      {
        v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "substringToIndex:", 500));

        v4 = (void *)v5;
      }
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Cannot connect to %@"), &stru_10091C438, 0));
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v4));

      v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", v8, 0, 1));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("OK"), &stru_10091C438, 0));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v11, 0, &stru_1008EB258));

      objc_msgSend(v9, "addAction:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate currentSceneController](BKAppDelegate, "currentSceneController"));
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_100114B8C;
      v20[3] = &unk_1008EB280;
      v23 = *(id *)(a1 + 72);
      v21 = *(id *)(a1 + 48);
      v22 = *(id *)(a1 + 32);
      objc_msgSend(v13, "presentViewController:animated:completion:", v9, 1, v20);

    }
  }
  else
  {
    if (*(_QWORD *)(a1 + 56) && *(_QWORD *)(a1 + 64))
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
      objc_msgSend(v16, "emitAddToCollectionEventWithTracker:collectionID:contentData:", *(_QWORD *)(a1 + 56), kBKCollectionDefaultIDSamples, *(_QWORD *)(a1 + 64));

    }
    kdebug_trace(725354672, 0, 0, 0, 0);
    v17 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 72));
    if (v17)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "validDownloadIDs"));
      v17[2](v17, v18, *(_QWORD *)(a1 + 32));

    }
    kdebug_trace(725354676, 0, 0, 0, 0);
  }
}

void sub_100114B8C(uint64_t a1)
{
  void *v2;
  void (**v3)(id, void *, _QWORD);

  v3 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 48));
  if (v3)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "validDownloadIDs"));
    v3[2](v3, v2, *(_QWORD *)(a1 + 40));

  }
}

void sub_100115158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100115174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  objc_msgSend(*(id *)(a1 + 32), "setCompletion:", 0);
  if (+[BKUIPFeatures useUIPFluidBookOpenTransition](BKUIPFeatures, "useUIPFluidBookOpenTransition"))
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v5, "postEvent:sender:", kBETestDriverOpenAnimationSetupEnd, *(_QWORD *)(a1 + 32));

  }
}

void sub_1001152A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[5];
  id v13;
  id v14;
  char v15;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "libraryAssetProvider"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIdentifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "libraryAssetOnMainQueueWithAssetIdentifier:", v4));

  LOBYTE(v2) = objc_msgSend(v5, "streamable");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetLogID"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "updateDate"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKAppDelegate delegate](BKAppDelegate, "delegate"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "libraryAssetProvider"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1001153F4;
  v12[3] = &unk_1008EB300;
  v15 = (char)v2;
  v12[4] = *(_QWORD *)(a1 + 32);
  v13 = v6;
  v14 = v7;
  v10 = v7;
  v11 = v6;
  objc_msgSend(v9, "assetForLibraryAsset:completion:", v5, v12);

}

void sub_1001153F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  char v17;

  v5 = a2;
  v6 = a3;
  v11[0] = _NSConcreteStackBlock;
  v11[2] = sub_1001154D0;
  v11[3] = &unk_1008E8A10;
  v17 = *(_BYTE *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a1 + 40);
  v13 = v6;
  v14 = v7;
  v11[1] = 3221225472;
  v12 = v5;
  v15 = v8;
  v16 = *(id *)(a1 + 48);
  v9 = v6;
  v10 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

}

void sub_1001154D0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _QWORD v27[5];
  id v28;

  if (*(_BYTE *)(a1 + 72))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "title"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[MPMediaItem bk_audioBookAssetURLWithAlbumTitle:isCloudItem:](MPMediaItem, "bk_audioBookAssetURLWithAlbumTitle:isCloudItem:", v2, 1));

    if (v3)
    {
LABEL_3:
      v5 = objc_msgSend(*(id *)(a1 + 48), "_isProperlyInstalledAssetURL:", v3);
      goto LABEL_8;
    }
  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "url"));
    v3 = (void *)v4;
    if (v4)
      goto LABEL_3;
  }
  v6 = BCCurrentBookLog(v4);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    sub_1006A1160(a1, v7);

  v5 = 1;
LABEL_8:
  if ((byte_1009F5000 & 1) == 0)
  {
    byte_1009F5000 = 1;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[BCAugmentedExperienceRegistry sharedRegistry](BCAugmentedExperienceRegistry, "sharedRegistry"));
    objc_msgSend(v8, "registerPresenterClass:forExperienceType:", objc_opt_class(BKToastPresenter), 0);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v10 = objc_msgSend(v9, "BOOLForKey:", CFSTR("BKLookAssetSimulateFamilyError"));

  if (v10)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 2003, 0));
    objc_msgSend(*(id *)(a1 + 48), "_completeWithAssetViewController:helper:error:", 0, 0, v11);

  }
  if (!v5)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKAssetLookup"), 1, 0));
    goto LABEL_26;
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "assetIdentifier"));

  if (!v12)
  {
LABEL_26:
    v14 = *(void **)(a1 + 48);
    v26 = v12;
LABEL_27:
    objc_msgSend(v14, "_completeWithAssetViewController:helper:error:", 0, 0, v26);
    goto LABEL_28;
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[AEPluginRegistry sharedInstance](AEPluginRegistry, "sharedInstance"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "pluginForURL:", v3));

  v14 = *(void **)(a1 + 48);
  if (!v12)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "options"));
  v16 = objc_msgSend(v15, "mutableCopy");

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
  v18 = (uint64_t)objc_msgSend(v17, "longLongValue");

  if (v18 >= 1)
  {
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
    objc_msgSend(v16, "setObject:forKeyedSubscript:", v19, CFSTR("storeID"));

  }
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "assetIdentifier"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "permanentAssetID"));

  if (objc_msgSend(v21, "length"))
    objc_msgSend(v16, "setObject:forKeyedSubscript:", v21, CFSTR("assetID"));
  if (objc_msgSend(*(id *)(a1 + 56), "length"))
    objc_msgSend(v16, "setObject:forKeyedSubscript:", *(_QWORD *)(a1 + 56), AEAssetLogID);
  v22 = *(_QWORD *)(a1 + 64);
  if (v22)
    objc_msgSend(v16, "setObject:forKeyedSubscript:", v22, AEAssetUpdateDate);
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "helperForURL:withOptions:", v3, v16));
  v24 = BUProtocolCast(&OBJC_PROTOCOL___AEHelper, v23);
  v25 = (void *)objc_claimAutoreleasedReturnValue(v24);

  if (v25)
  {
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_100115888;
    v27[3] = &unk_1008EB2D8;
    v27[4] = *(_QWORD *)(a1 + 48);
    v28 = v25;
    objc_msgSend(v28, "helperViewControllerWithOptions:completion:", v16, v27);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 48), "_completeWithAssetViewController:helper:error:", 0, 0, 0);
  }

LABEL_28:
}

void sub_100115888(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (objc_msgSend(v5, "code") == (id)1002 || objc_msgSend(v5, "code") == (id)2002)
    +[BKBasePresentingViewController clearLastKnownSuccessfullyOpenBookID](BKAssetPresentingViewController, "clearLastKnownSuccessfullyOpenBookID");
  objc_msgSend(*(id *)(a1 + 32), "_completeWithAssetViewController:helper:error:", v6, *(_QWORD *)(a1 + 40), v5);

}

void sub_100115C58(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = BCCurrentBookLog(v3);
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1006A1250(a1, (uint64_t)v4, v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1006, 0));
    v8 = objc_retainBlock(*(id *)(a1 + 56));
    v9 = v8;
    if (v8)
      (*((void (**)(id, void *))v8 + 2))(v8, v7);
LABEL_11:

    goto LABEL_12;
  }
  v10 = *(void **)(a1 + 40);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "URL"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "helperForURL:withOptions:", v11, 0));

  if (v7 && (objc_opt_respondsToSelector(v7, "helperValidateBookAuthorizationWithError:needsCoordination:") & 1) != 0)
  {
    v14 = 0;
    objc_msgSend(v7, "helperValidateBookAuthorizationWithError:needsCoordination:", &v14, 0);
    v9 = v14;
    v12 = objc_retainBlock(*(id *)(a1 + 56));
    v13 = v12;
    if (v12)
      (*((void (**)(id, id))v12 + 2))(v12, v9);

    goto LABEL_11;
  }
LABEL_12:

}

void sub_1001180EC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id v8;
  _QWORD v9[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[JSABridge sharedInstance](JSABridge, "sharedInstance"));
  v3 = *(_QWORD *)(a1 + 32);
  v9[0] = *(_QWORD *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100118210;
  v6[3] = &unk_1008EB350;
  v7 = *(id *)(a1 + 48);
  v8 = *(id *)(a1 + 56);
  v4 = objc_retainBlock(v6);
  v9[1] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v9, 2));
  objc_msgSend(v2, "enqueueManagedValueInvocation:method:arguments:file:line:", v3, CFSTR("viewControllerForTabBarItem"), v5, CFSTR("BKAppSceneManager+BKTabBarControllerJSApp.m"), 165);

}

void sub_100118210(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int v11;
  void *v12;
  __int16 v13;
  uint64_t v14;

  v3 = a2;
  v4 = objc_msgSend(v3, "toObjectOfClass:", objc_opt_class(UIViewController));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v6 = JSALog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v11 = 138543618;
    v12 = v5;
    v13 = 2114;
    v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "VC %{public}@ for %{public}@", (uint8_t *)&v11, 0x16u);
  }

  v9 = *(_QWORD *)(a1 + 40);
  if (v5)
  {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v5);
  }
  else
  {
    v10 = (void *)objc_opt_new(BSUIPlaceholderViewController);
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

  }
}

uint64_t sub_10011833C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rootBarCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "standardItemsManager"));
  v5 = v4;
  if (*(_QWORD *)(a1 + 32))
    v6 = *(void **)(a1 + 32);
  else
    v6 = &__NSArray0__struct;
  objc_msgSend(v4, "processBagItems:", v6);

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_1001183B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001183BC(uint64_t a1, void *a2, int a3)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  const __CFString *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  int v13;
  const __CFString *v14;

  v5 = a2;
  v6 = JSALog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = CFSTR("NO");
    if (a3)
      v8 = CFSTR("YES");
    v13 = 138412290;
    v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Loaded tabs from bag, isDefault: %@", (uint8_t *)&v13, 0xCu);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", CFSTR("standard")));
  v10 = JSALog();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    sub_1006A134C((uint64_t)v5, v9, v11);

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[BKRootBarItemsProvider standardItemsFromBagWith:countryCode:](BKRootBarItemsProvider, "standardItemsFromBagWith:countryCode:", v9, v5));
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

id sub_1001189E8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_q_unload");
}

void sub_100118AD8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 48);

    if ((v3 & 1) != 0)
    {
      v4 = objc_alloc((Class)TUIImageContent);
      v5 = objc_alloc((Class)BCUPurgeableImage);
      v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
      v6 = objc_msgSend(v5, "initWithImage:", v14);
      v7 = *(_QWORD *)(a1 + 32);
      v8 = objc_msgSend(v4, "initWithImage:insets:intrinsicSize:flags:", v6, *(_BYTE *)(v7 + 96) == 0, *(double *)(v7 + 40), *(double *)(v7 + 48), *(double *)(v7 + 56), *(double *)(v7 + 64), *(double *)(v7 + 80), *(double *)(v7 + 88));
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      v10 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v8;

      v11 = (void *)v14;
LABEL_7:

      return;
    }
  }
  if ((*(_BYTE *)(a1 + 48) & 2) != 0)
  {
    v12 = objc_msgSend(objc_alloc((Class)TUIImageContent), "initWithIntrinsicSize:flags:", *(_BYTE *)(*(_QWORD *)(a1 + 32) + 96) == 0, *(double *)(*(_QWORD *)(a1 + 32) + 80), *(double *)(*(_QWORD *)(a1 + 32) + 88));
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v11 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;
    goto LABEL_7;
  }
}

_BYTE *sub_100118C50(uint64_t a1)
{
  _BYTE *result;

  result = *(_BYTE **)(a1 + 32);
  if (!result[96])
    return objc_msgSend(result, "_q_loadIfNeeded");
  return result;
}

void sub_100118D18(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;

  objc_msgSend(*(id *)(a1 + 32), "_q_loadIfNeeded");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));

  if (v2)
  {
    v3 = objc_alloc((Class)TUIImageContent);
    v4 = objc_alloc((Class)BCUPurgeableImage);
    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
    v5 = objc_msgSend(v4, "initWithImage:", v10);
    v6 = *(_QWORD *)(a1 + 32);
    v7 = objc_msgSend(v3, "initWithImage:insets:intrinsicSize:flags:", v5, *(_BYTE *)(v6 + 96) == 0, *(double *)(v6 + 40), *(double *)(v6 + 48), *(double *)(v6 + 56), *(double *)(v6 + 64), *(double *)(v6 + 80), *(double *)(v6 + 88));
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

  }
}

id sub_100118E7C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_100118F08(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "removeObject:", *(_QWORD *)(a1 + 40));
}

id sub_100118F6C(uint64_t a1)
{
  ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 32);
  return objc_msgSend(*(id *)(a1 + 32), "_q_loadIfNeeded");
}

_QWORD *sub_100118FDC(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[4];
  v2 = *(_QWORD *)(v1 + 32);
  if (v2)
  {
    *(_QWORD *)(v1 + 32) = v2 - 1;
    result = (_QWORD *)result[4];
    if (!result[4])
      return _objc_msgSend(result, "_q_unload");
  }
  return result;
}

void sub_100119204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100119220(id *a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  const __CFString *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12[2];
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  const __CFString *v16;

  v2 = BCImageCacheLog(a1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "identifier"));
    v5 = (void *)v4;
    v6 = (const __CFString *)a1[5];
    if (!v6)
      v6 = CFSTR("no");
    *(_DWORD *)buf = 138412546;
    v14 = v4;
    v15 = 2112;
    v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BKCoverResourceProvider: fetching %@ (series: %@)", buf, 0x16u);

  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
  v8 = a1[4];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1001193D4;
  v9[3] = &unk_1008EB4F8;
  objc_copyWeak(v12, a1 + 6);
  v10 = a1[4];
  v11 = a1[5];
  v12[1] = a1[7];
  objc_msgSend(v7, "fetchCGImageFor:forRequest:timeOut:waitForNonGeneric:completion:", v8, v8, 1, v9, 5.0);

  objc_destroyWeak(v12);
}

void sub_1001193B8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001193D4(id *a1, void *a2)
{
  id v3;
  _QWORD *WeakRetained;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  int v34;
  uint64_t v35;
  NSObject *v36;
  _BOOL4 v37;
  const __CFString *v38;
  const char *v39;
  const __CFString *v40;
  NSObject *v41;
  _QWORD v42[4];
  id v43;
  id v44;
  id v45[2];
  uint8_t buf[4];
  id v47;
  __int16 v48;
  const __CFString *v49;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v5 = WeakRetained;
  if (WeakRetained)
  {
    *((_BYTE *)WeakRetained + 97) = 0;
    if (v3)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "image"));
      v7 = objc_msgSend(v6, "CGImage");

      if (!v7)
      {
        v26 = BCImageCacheLog(v8);
        v11 = objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006A1484((uint64_t)v3, v11, v27, v28, v29, v30, v31, v32);
        goto LABEL_12;
      }
      v9 = objc_msgSend(v3, "quality");
      if ((_DWORD)v9 == 1)
      {
        v10 = BCImageCacheLog(v9);
        v11 = objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1006A14E8((uint64_t)v3, v11, v12, v13, v14, v15, v16, v17);
LABEL_12:

        goto LABEL_24;
      }
      v33 = objc_msgSend(v3, "isGeneric");
      v34 = (int)v33;
      v35 = BCImageCacheLog(v33);
      v36 = objc_claimAutoreleasedReturnValue(v35);
      v37 = os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT);
      if (v34)
      {
        if (v37)
        {
          v38 = (const __CFString *)a1[5];
          if (!v38)
            v38 = CFSTR("no");
          *(_DWORD *)buf = 138412546;
          v47 = v3;
          v48 = 2112;
          v49 = v38;
          v39 = "BKCoverResourceProvider: Generic image returned with: %@ (series: %@)";
LABEL_22:
          _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, v39, buf, 0x16u);
        }
      }
      else if (v37)
      {
        v40 = (const __CFString *)a1[5];
        if (!v40)
          v40 = CFSTR("no");
        *(_DWORD *)buf = 138412546;
        v47 = v3;
        v48 = 2112;
        v49 = v40;
        v39 = "BKCoverResourceProvider: imaged returned with: %@ (series: %@)";
        goto LABEL_22;
      }

      v41 = v5[1];
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472;
      v42[2] = sub_100119664;
      v42[3] = &unk_1008EB4D0;
      objc_copyWeak(v45, a1 + 6);
      v43 = v3;
      v44 = a1[5];
      v45[1] = a1[7];
      dispatch_async(v41, v42);

      objc_destroyWeak(v45);
      goto LABEL_24;
    }
    v18 = BCImageCacheLog(WeakRetained);
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      sub_1006A141C((uint64_t)a1, v19, v20, v21, v22, v23, v24, v25);

  }
LABEL_24:

}

void sub_100119664(uint64_t a1)
{
  NSObject **WeakRetained;
  NSObject **v3;
  NSObject *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  uint64_t v8;

  WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = WeakRetained[2];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100119714;
    v5[3] = &unk_1008EB4A8;
    v5[4] = WeakRetained;
    v6 = *(id *)(a1 + 32);
    v7 = *(id *)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 56);
    dispatch_async(v4, v5);

  }
}

void sub_100119714(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  void *v40;
  void *v41;
  double v42;
  double v43;
  id v44;
  _QWORD v45[4];
  id v46;

  v2 = objc_alloc((Class)UIImage);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "image"));
  v4 = objc_msgSend(v2, "initWithCGImage:", objc_msgSend(v3, "CGImage"));
  v5 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "setCoverImage:", v4);

  if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", BCUCoverEffectsIdentifierSeriesStackDiagonal))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
    objc_msgSend(v7, "size");
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
    objc_msgSend(v10, "size");
    v12 = v9 / v11;

    if (v12 <= 1.0)
    {
      if ((objc_msgSend(*(id *)(a1 + 40), "isGenericSeriesStack") & 1) == 0)
      {
        objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
        v22 = v21;
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
        objc_msgSend(v23, "size");
        v25 = v24 / *(double *)(a1 + 56);
        objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
        v27 = v25 - v26;
        objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
        v29 = v27 + v28 * -2.0;

        objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
        v31 = v30 + v30;
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverImage"));
        objc_msgSend(v32, "size");
        v34 = v33 / *(double *)(a1 + 56);
        objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
        v36 = (v34 - v35) / *(double *)(a1 + 56);
        objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
        v38 = v36 + v37 * (*(double *)(a1 + 56) * 0.5);

        v39 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)(v39 + 40) = v22;
        *(double *)(v39 + 48) = v29;
        *(double *)(v39 + 56) = v38;
        *(double *)(v39 + 64) = v31;
      }
      v40 = *(void **)(a1 + 32);
      v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "coverImage"));
      objc_msgSend(*(id *)(a1 + 40), "nonShadowArea");
      objc_msgSend(v40, "_nq_loadedImage:withIntrinsicSize:", v41, v42, v43);

    }
    else
    {
      v14 = BCImageCacheLog(v13);
      v15 = objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        sub_1006A154C((uint64_t)v6, v5, v15);

      v16 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager defaultCacheManager](BCCacheManager, "defaultCacheManager"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesCoverManager sharedInstance](BKSeriesCoverManager, "sharedInstance"));
      v45[0] = _NSConcreteStackBlock;
      v45[1] = 3221225472;
      v45[2] = sub_100119A3C;
      v45[3] = &unk_1008EB480;
      v46 = v16;
      v18 = v16;
      objc_msgSend(v17, "assetIDsAndOptionsForBooksInSeries:completion:", v6, v45);

      objc_msgSend(v18, "pruneItemsWithIdentifier:forMedium:", v6, 0);
      objc_msgSend(v18, "pruneItemsWithIdentifier:forMedium:", v6, 1);
      objc_msgSend(v18, "incrementVersionForIdentifier:", v6);

    }
  }
  else
  {
    v19 = *v5;
    v44 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*v5, "coverImage"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v5, "coverImage"));
    objc_msgSend(v20, "size");
    objc_msgSend(v19, "_nq_loadedImage:withIntrinsicSize:", v44);

  }
}

void sub_100119A3C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "valueForKey:", BCCoverCacheAssetIDKey));
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i);
        objc_msgSend(*(id *)(a1 + 32), "pruneItemsWithIdentifier:forMedium:", v8, 0);
        objc_msgSend(*(id *)(a1 + 32), "pruneItemsWithIdentifier:forMedium:", v8, 1);
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }
  v9 = *(void **)(a1 + 32);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v3));
  objc_msgSend(v9, "incrementVersionForIdentifiers:", v10);

}

void sub_100119E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_100119EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  BOOL v6;

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "count"))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "allObjects"));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
  v5 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v5 + 96)
    || (*(double *)(v5 + 80) == *(double *)(a1 + 64) ? (v6 = *(double *)(v5 + 88) == *(double *)(a1 + 72)) : (v6 = 0),
        !v6))
  {
    *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 96) = *(_QWORD *)(a1 + 40) != 0;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
}

void sub_100119F5C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i);
        if ((objc_opt_respondsToSelector(v7, "imageResourceDidChangeIntrinsicSize:") & 1) != 0)
          objc_msgSend(v7, "imageResourceDidChangeIntrinsicSize:", *(_QWORD *)(a1 + 32), (_QWORD)v8);
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_10011A64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011A668(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "bk_window"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "rootViewController"));
  v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }

}

void sub_10011A850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011A868(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  unsigned int v7;
  id obj;

  v5 = BUProtocolCast(&OBJC_PROTOCOL___BKBookPresentingSceneInfo, a2);
  obj = (id)objc_claimAutoreleasedReturnValue(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obj, "openBookAssetID"));
  v7 = objc_msgSend(v6, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v7)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
    *a3 = 1;
  }

}

void sub_10011AC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_10011AC5C(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void (**v9)(id, void *, uint64_t);
  void *v10;
  id v11;

  v11 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "scene"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_persistenceIdentifier"));

  if (v6)
  {
    v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_persistenceIdentifier"));
    objc_msgSend(v7, "addObject:", v8);

    v9 = (void (**)(id, void *, uint64_t))objc_retainBlock(*(id *)(a1 + 32));
    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "sceneInfo"));
      v9[2](v9, v10, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);

    }
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
      *a3 = 1;
  }

}

void sub_10011B418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011B43C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingPrimarySceneCompletionBlocks"));
    objc_msgSend(v2, "removeAllObjects");

  }
}

void sub_10011B820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_10011B870(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "setRequestAssetID:", *(_QWORD *)(a1 + 32));
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_10011B8CC(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "sceneController"));
  if (!objc_msgSend(v14, "sceneType"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "requestAssetID"));
    v6 = objc_msgSend(v5, "isEqualToString:", *(_QWORD *)(a1 + 32));

    if (v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pendingBookSceneCompletionBlocksByAssetID"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));

      if (objc_msgSend(v8, "count"))
      {
        v9 = objc_retainBlock(*(id *)(a1 + 48));
        objc_msgSend(v8, "addObject:", v9);
      }
      else
      {
        v10 = objc_opt_class(BKSceneController);
        v11 = BUDynamicCast(v10, v14);
        v9 = (id)objc_claimAutoreleasedReturnValue(v11);
        v12 = objc_retainBlock(*(id *)(a1 + 48));
        v13 = v12;
        if (v12)
          (*((void (**)(id, id))v12 + 2))(v12, v9);

      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
      *a3 = 1;

    }
  }

}

void sub_10011B9EC(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    v7 = WeakRetained;
    if (*(_QWORD *)(a1 + 32))
    {
      objc_msgSend(WeakRetained, "_finishSceneRequest:");
    }
    else
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingBookSceneCompletionBlocksByAssetID"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

      if (v5)
        objc_msgSend(v5, "removeAllObjects");
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pendingBookSceneRequestAssetIDs"));
      objc_msgSend(v6, "removeObject:", *(_QWORD *)(a1 + 40));

    }
  }
}

void sub_10011BC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011BC88(uint64_t a1, uint64_t a2)
{
  void *v3;
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingAccountSceneCompletionBlocks"));
    objc_msgSend(WeakRetained, "_handleErrorForCompletionBlocks:", v3);

  }
}

void sub_10011BFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011C010(uint64_t a1, uint64_t a2)
{
  void *v3;
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingEndOfBookSceneCompletionBlocks"));
    objc_msgSend(WeakRetained, "_handleErrorForCompletionBlocks:", v3);

  }
}

void sub_10011C240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011C258(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  id v13;

  v5 = BUProtocolCast(&OBJC_PROTOCOL___BKBookPresentingSceneInfo, a2);
  v13 = (id)objc_claimAutoreleasedReturnValue(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "sceneSession"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "sceneController"));
  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "scene"));
  if (v8)
  {
    v9 = (void *)v8;
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "primarySceneController"));
    if (v7 == (void *)v10)
    {

    }
    else
    {
      v11 = (void *)v10;
      v12 = objc_msgSend(v13, "supportsOpeningToAuxiliaryScene");

      if ((v12 & 1) != 0)
        goto LABEL_9;
    }
  }
  else if ((objc_msgSend(v13, "supportsOpeningToAuxiliaryScene") & 1) != 0)
  {
    goto LABEL_9;
  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v6);
  *a3 = 1;
LABEL_9:

}

void sub_10011C420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011C438(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v5 = BUProtocolCast(&OBJC_PROTOCOL___BKBookPresentingSceneInfo, a2);
  v12 = (id)objc_claimAutoreleasedReturnValue(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "openBookAssetID"));
  v7 = objc_msgSend(v6, "isEqualToString:", *(_QWORD *)(a1 + 32));

  v8 = v12;
  if (v7)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "sceneSession"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "sceneController"));
    v11 = v10;
    if (v10 && !objc_msgSend(v10, "sceneType") || objc_msgSend(v12, "supportsOpeningToAuxiliaryScene"))
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v9);
      *a3 = 1;
    }

    v8 = v12;
  }

}

void sub_10011C718(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10011C738(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  unsigned int v7;
  id v8;

  v5 = BUProtocolCast(&OBJC_PROTOCOL___BKBookPresentingSceneInfo, a2);
  v8 = (id)objc_claimAutoreleasedReturnValue(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "openBookAssetID"));
  v7 = objc_msgSend(v6, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v7 && (objc_msgSend(v8, "supportsOpeningToAuxiliaryScene") & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }

}

void sub_10011C7C0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_10011C814(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

BOOL sub_10011CAF8(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "scene"));
  v4 = v3 != *(void **)(a1 + 32);

  return v4;
}

void sub_10011CBEC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "bookFlowAssetPresenting"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "presenterViewControllersConformingToProtocol:", *(_QWORD *)(a1 + 32)));

  objc_msgSend(*(id *)(a1 + 40), "addObjectsFromArray:", v4);
}

void sub_10011CCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_10011CD14(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  void *v6;
  id v7;
  id v8;

  v8 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "scene"));
  if (objc_msgSend(v5, "activationState") == (id)1)
  {

  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "scene"));
    v7 = objc_msgSend(v6, "activationState");

    if (v7)
      goto LABEL_5;
  }
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
LABEL_5:
  if (*(uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) >= 2)
  {
    *a3 = 1;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }

}

void sub_10011CE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011CE88(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  id v9;

  v5 = BUProtocolCast(&OBJC_PROTOCOL___BKBookPresentingSceneInfo, a2);
  v9 = (id)objc_claimAutoreleasedReturnValue(v5);
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "openBookAssetID"));
  if (!v6
    || (v7 = (void *)v6,
        v8 = objc_msgSend(v9, "supportsOpeningToAuxiliaryScene"),
        v7,
        (v8 & 1) == 0))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
    *a3 = 1;
  }

}

void sub_10011D1CC(id a1, BKPrimarySceneControlling *a2)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BKPrimarySceneControlling bookFlowAssetPresenting](a2, "bookFlowAssetPresenting"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "presenterFirstVisibleChildConformingToProtocol:", &OBJC_PROTOCOL___BKAssetPresenting));
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "im_dismissAnimated:", 0);

}

void sub_10011D228(uint64_t a1)
{
  id WeakRetained;
  id v3;
  id v4;
  void *v5;
  BKDebugViewController *v6;

  WeakRetained = objc_loadWeakRetained(&qword_1009F5028);

  if (!WeakRetained)
  {
    v6 = -[BKDebugViewController initWithStyle:]([BKDebugViewController alloc], "initWithStyle:", 1);
    v3 = objc_msgSend(objc_alloc((Class)BSUINavigationController), "initWithRootViewController:", v6);
    v4 = objc_loadWeakRetained((id *)(a1 + 32));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "controller"));
    objc_msgSend(v5, "presentViewController:animated:completion:", v3, 1, 0);

    objc_storeWeak(&qword_1009F5028, v3);
  }
}

void sub_10011D504(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Class v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t ShouldCrashOnValidationErrorAfterLaunch;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v2 = objc_opt_class(UIViewController);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bkaxSearchDelegate"));
  v4 = __IMAccessibilityCastAsClass(v2, v3, 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view", 0));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_accessibleSubviews"));

  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v19;
LABEL_3:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v19 != v10)
        objc_enumerationMutation(v7);
      v12 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * v11);
      v13 = NSClassFromString(CFSTR("UIWebDocumentView"));
      if ((objc_opt_isKindOfClass(v12, v13) & 1) != 0)
        break;
      if (v9 == (id)++v11)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
        if (v9)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
    v16 = v12;

    if (v16)
      goto LABEL_14;
  }
  else
  {
LABEL_9:

  }
  if (IMAccessibilityShouldPerformValidationChecks(v14, v15))
  {
    ShouldCrashOnValidationErrorAfterLaunch = IMAccessibilityShouldCrashOnValidationErrorAfterLaunch();
    if (__IMAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, CFSTR("Could not find web view to focus after revealing a search result")))abort();
  }
  v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
LABEL_14:
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v16);

}

void sub_10011D7EC(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_processNextBatchWithCompletion:", v3);

}

void sub_10011D910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011D928(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 24));
}

void sub_10011DCB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_10011DCEC(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;

  v6 = a2;
  v7 = a3;
  v10 = v7;
  if (v7)
  {
    v11 = BKBookletMigrationLog(v7, v8, v9);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1006A1610(a1, (uint64_t)v10, v12);

  }
  else if (v6)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  }

}

void sub_10011DF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10011DFC4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  id v15;

  v5 = a2;
  v6 = a3;
  v9 = v6;
  if (v6)
  {
    v10 = BKBookletMigrationLog(v6, v7, v8);
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1006A175C(a1, (uint64_t)v9, v11);
LABEL_8:

    goto LABEL_9;
  }
  if (v5)
  {
    v12 = BKBookletMigrationLog(0, v7, v8);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1006A1690(v5, a1, v13);

    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v15 = v5;
    v11 = *(NSObject **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v15;
    goto LABEL_8;
  }
LABEL_9:

}

void sub_10011E080(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingItems"));
  objc_msgSend(v2, "removeAllObjects");
  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "count"))
    objc_msgSend(v2, "addObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  if (objc_msgSend(v2, "count"))
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;

}

void sub_10011E1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011E1CC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingItems"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "count") != 0;

}

void sub_10011E384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011E3A4(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingItems"));
  if (objc_msgSend(v8, "count"))
  {
    v2 = objc_msgSend(*(id *)(a1 + 32), "_batchSize");
    v3 = objc_msgSend(v8, "count");
    if (v2 >= v3)
      v2 = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "subarrayWithRange:", 0, v2));
    objc_msgSend(v8, "removeObjectsInRange:", 0, v2);
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "valueForKey:", CFSTR("storeIDString")));
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

  }
}

void sub_10011E660(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  _BOOL4 v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *i;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id obj;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD v37[4];
  id v38;
  id v39;
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint8_t buf[4];
  uint64_t v50;
  __int16 v51;
  void *v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  void *v56;
  _BYTE v57[128];
  _BYTE v58[128];

  v3 = a2;
  if (objc_msgSend(v3, "count"))
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    v47 = 0u;
    v48 = 0u;
    v46 = 0u;
    v45 = 0u;
    v32 = v3;
    obj = v3;
    v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v58, 16);
    if (v35)
    {
      v34 = *(_QWORD *)v46;
      do
      {
        v4 = 0;
        do
        {
          if (*(_QWORD *)v46 != v34)
            objc_enumerationMutation(obj);
          v5 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * v4);
          v36 = v4;
          if (objc_msgSend(v5, "isSupplementalContent"))
          {
            v6 = (id)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](NSSet, "setWithObject:", v5));
          }
          else
          {
            v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "supplementalContentAssets"));

            v10 = BKBookletMigrationLog(v8, v9);
            v11 = objc_claimAutoreleasedReturnValue(v10);
            v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
            if (v7)
            {
              if (v12)
              {
                v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "storeID"));
                v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dataSourceIdentifier"));
                *(_DWORD *)buf = 141558530;
                v50 = 1752392040;
                v51 = 2112;
                v52 = v28;
                v53 = 2114;
                v54 = (uint64_t)v29;
                _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "_triggerDownloads: Not expected to handle parent: [%{mask.hash}@], dataSource: %{public}@", buf, 0x20u);

              }
              v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "supplementalContentAssets"));
            }
            else
            {
              if (v12)
              {
                v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "storeID"));
                v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "dataSourceIdentifier"));
                *(_DWORD *)buf = 141558530;
                v50 = 1752392040;
                v51 = 2112;
                v52 = v30;
                v53 = 2114;
                v54 = (uint64_t)v31;
                _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "_triggerDownloads: Not expected to handle asset: [%{mask.hash}@], dataSource: %{public}@", buf, 0x20u);

              }
              v6 = objc_alloc_init((Class)NSSet);
            }
          }
          v43 = 0u;
          v44 = 0u;
          v41 = 0u;
          v42 = 0u;
          v13 = v6;
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v41, v57, 16);
          if (v14)
          {
            v15 = v14;
            v16 = *(_QWORD *)v42;
            do
            {
              for (i = 0; i != v15; i = (char *)i + 1)
              {
                if (*(_QWORD *)v42 != v16)
                  objc_enumerationMutation(v13);
                v18 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * (_QWORD)i);
                v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "storeID"));
                v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "storePlaylistID"));
                objc_msgSend(*(id *)(a1 + 40), "removeObject:", v19);
                v21 = objc_msgSend(v18, "isDownloading");
                v22 = (int)v21;
                v24 = BKBookletMigrationLog(v21, v23);
                v25 = objc_claimAutoreleasedReturnValue(v24);
                v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);
                if (v22)
                {
                  if (v26)
                  {
                    *(_DWORD *)buf = 141558786;
                    v50 = 1752392040;
                    v51 = 2112;
                    v52 = v20;
                    v53 = 2160;
                    v54 = 1752392040;
                    v55 = 2112;
                    v56 = v19;
                    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: Asset is already downloading: [%{mask.hash}@, %{mask.hash}@]", buf, 0x2Au);
                  }
                }
                else
                {
                  if (v26)
                  {
                    *(_DWORD *)buf = 141558786;
                    v50 = 1752392040;
                    v51 = 2112;
                    v52 = v20;
                    v53 = 2160;
                    v54 = 1752392040;
                    v55 = 2112;
                    v56 = v19;
                    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: Attempt to download asset: [%{mask.hash}@, %{mask.hash}@]", buf, 0x2Au);
                  }

                  v25 = objc_alloc_init((Class)BKResolveLibraryAssetOptions);
                  -[NSObject setUserInitiated:](v25, "setUserInitiated:", &__kCFBooleanFalse);
                  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
                  v27 = *(void **)(a1 + 48);
                  v37[0] = _NSConcreteStackBlock;
                  v37[1] = 3221225472;
                  v37[2] = sub_10011EB8C;
                  v37[3] = &unk_1008EB8B8;
                  v38 = v20;
                  v39 = v19;
                  v40 = *(id *)(a1 + 32);
                  objc_msgSend(v27, "resolveLibraryAsset:options:completion:", v18, v25, v37);

                }
              }
              v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v41, v57, 16);
            }
            while (v15);
          }

          v4 = v36 + 1;
        }
        while ((id)(v36 + 1) != v35);
        v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v58, 16);
      }
      while (v35);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
    v3 = v32;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_10011EB8C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;

  v2 = BKBookletMigrationLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v6 = 141558786;
    v7 = 1752392040;
    v8 = 2112;
    v9 = v4;
    v10 = 2160;
    v11 = 1752392040;
    v12 = 2112;
    v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: resolveLibraryAsset completion: [%{mask.hash}@, %{mask.hash}@]", (uint8_t *)&v6, 0x2Au);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_10011EC60(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  id WeakRetained;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  int v13;
  id v14;

  v2 = objc_msgSend(a1[4], "count");
  if (v2)
  {
    v4 = BKBookletMigrationLog(v2, v3);
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = a1[4];
      v13 = 138412290;
      v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: libraryAssets not found for %@", (uint8_t *)&v13, 0xCu);
    }

    objc_msgSend(a1[5], "_setMigrationState:forStoreIDStrings:logPrefix:", 700, a1[4], CFSTR("_triggerDownloads"));
  }
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v8 = objc_msgSend(WeakRetained, "_hasPendingItems");
  if ((_DWORD)v8)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coalescingProcessNextBatch"));
    objc_msgSend(v10, "signalWithCompletion:", &stru_1008EB8D8);

  }
  else
  {
    v11 = BKBookletMigrationLog(v8, v9);
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: Pending queue is empty", (uint8_t *)&v13, 2u);
    }

    objc_msgSend(a1[5], "_notifyDidBecomeEmpty");
  }

}

void sub_10011FEDC(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 1);
}

void sub_1001204B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1001204C4(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readBuyButton"));
  objc_msgSend(v2, "resetButtonState");

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setNeedsLayout");

}

void sub_100120514(uint64_t a1)
{
  id *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "audiobookStatus"));
  v3 = objc_msgSend(v2, "assetAudiobookStatusIsPlaying");
  v4 = objc_loadWeakRetained(v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "audiobookControl"));
  objc_msgSend(v5, "setPlaying:", v3);

}

void sub_100120590(uint64_t a1)
{
  id *v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  id WeakRetained;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "audiobookStatus"));
  objc_msgSend(v2, "assetAudiobookStatusTrackProgress");
  v4 = v3;
  v5 = objc_loadWeakRetained(v1);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "audiobookControl"));
  objc_msgSend(v6, "setProgress:", v4);

}

void sub_100120614(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateAssetStrings");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "setNeedsLayout");

}

id sub_100120660(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_100120668(uint64_t a1)
{
  void *v2;
  double v3;
  float v4;
  void *v5;
  double v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryDownloadStatus"));
  objc_msgSend(v2, "progressValue");
  v4 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadProgressButton"));
  *(float *)&v6 = v4;
  objc_msgSend(v5, "setProgress:", v6);

  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

id sub_100120728(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateBuyReadButton");
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
}

void sub_100122CB0(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  void *v9;
  double v10;
  void *v11;
  double v12;
  id v13;

  if (*(_BYTE *)(a1 + 40))
    v2 = 0.0;
  else
    v2 = 1.0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookDescription"));
  objc_msgSend(v3, "setAlpha:", v2);

  if (objc_msgSend(*(id *)(a1 + 32), "shouldShowCloud"))
    v4 = 1.0;
  else
    v4 = 0.0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cloudView"));
  objc_msgSend(v5, "setAlpha:", v4);

  v6 = objc_msgSend(*(id *)(a1 + 32), "shouldShowCloud");
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cloudView"));
  objc_msgSend(v7, "setIsAccessibilityElement:", v6);

  if (objc_msgSend(*(id *)(a1 + 32), "shouldShowDownloadProgressButton"))
    v8 = 1.0;
  else
    v8 = 0.0;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "downloadProgressButton"));
  objc_msgSend(v9, "setAlpha:", v8);

  if (objc_msgSend(*(id *)(a1 + 32), "shouldShowMoreButton"))
    v10 = 1.0;
  else
    v10 = 0.0;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moreButton"));
  objc_msgSend(v11, "setAlpha:", v10);

  if (objc_msgSend(*(id *)(a1 + 32), "isInEditMode"))
    v12 = 0.0;
  else
    v12 = 1.0;
  v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readBuyButton"));
  objc_msgSend(v13, "setAlpha:", v12);

}

void sub_100122DF4(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  id v5;

  if (objc_msgSend(*(id *)(a1 + 32), "isInEditMode"))
    v2 = 1.0;
  else
    v2 = 0.0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkmarkView"));
  objc_msgSend(v3, "setAlpha:", v2);

  if (objc_msgSend(*(id *)(a1 + 32), "isInEditMode"))
    v4 = 1.0;
  else
    v4 = 0.0;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dragBarView"));
  objc_msgSend(v5, "setAlpha:", v4);

}

void sub_100122E88(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;

  v2 = IMRectFlippedForRTL(objc_msgSend(*(id *)(a1 + 32), "isRTL"), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "checkmarkView"));
  objc_msgSend(v9, "setFrame:", v2, v4, v6, v8);

  v10 = IMRectFlippedForRTL(objc_msgSend(*(id *)(a1 + 32), "isRTL"), *(double *)(a1 + 104), *(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dragBarView"));
  objc_msgSend(v17, "setFrame:", v10, v12, v14, v16);

}

