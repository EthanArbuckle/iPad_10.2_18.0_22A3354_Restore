uint64_t sub_100273334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = AccountID.authority.getter();
  AccountID.contextType.getter(v9);
  v10 = v8 + *(int *)(v7 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, v4, v5);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v8, v3);
  if (v11 == enum case for AccountID.Authority.synced(_:))
  {
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(uint64_t **)(v0 + 72);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 112) + 96))(v14, *(_QWORD *)(v0 + 104));
    v16 = *v14;
    v15 = v14[1];
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v10, v12);
    if (v17 == enum case for ManagedEntityContextType.modern(_:))
    {
      v18 = objc_msgSend(*(id *)(v0 + 56), "modernManagedObjectContext");
      *(_QWORD *)(v0 + 200) = v18;
      v19 = (_QWORD *)swift_allocObject(&unk_1005628C0, 40, 7);
      *(_QWORD *)(v0 + 208) = v19;
      v19[2] = v16;
      v19[3] = v15;
      v19[4] = v18;
      v20 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
      v18;
      v21 = (_QWORD *)swift_task_alloc(v20);
      *(_QWORD *)(v0 + 216) = v21;
      v22 = sub_100012E18(&qword_1005D1230);
      *v21 = v0;
      v21[1] = sub_1002739E0;
      v23 = sub_100274330;
      v24 = v0 + 16;
      v25 = v19;
      return NSManagedObjectContext.perform<A>(_:)(v24, v23, v25, v22);
    }
    if (v17 == enum case for ManagedEntityContextType.html(_:))
    {
      v31 = objc_msgSend(*(id *)(v0 + 56), "htmlManagedObjectContext");
      *(_QWORD *)(v0 + 176) = v31;
      if (v31)
      {
        v32 = v31;
        v33 = *(void **)(v0 + 56);
        v34 = (_QWORD *)swift_allocObject(&unk_1005628E8, 40, 7);
        *(_QWORD *)(v0 + 184) = v34;
        v34[2] = v33;
        v34[3] = v16;
        v34[4] = v15;
        v35 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
        v36 = v33;
        v32;
        v37 = (_QWORD *)swift_task_alloc(v35);
        *(_QWORD *)(v0 + 192) = v37;
        v22 = sub_100012E18(&qword_1005D1230);
        *v37 = v0;
        v37[1] = sub_10027391C;
        v23 = sub_100274378;
        v24 = v0 + 24;
        v25 = v34;
        return NSManagedObjectContext.perform<A>(_:)(v24, v23, v25, v22);
      }
      swift_bridgeObjectRelease(v15);
      goto LABEL_16;
    }
    return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 64));
  }
  if (v11 != enum case for AccountID.Authority.local(_:))
    return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 64));
  v26 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 88))(v10, *(_QWORD *)(v0 + 80));
  if (v26 == enum case for ManagedEntityContextType.modern(_:))
  {
    v27 = objc_msgSend(*(id *)(v0 + 56), "modernManagedObjectContext");
    *(_QWORD *)(v0 + 152) = v27;
    v28 = swift_allocObject(&unk_100562910, 24, 7);
    *(_QWORD *)(v0 + 160) = v28;
    *(_QWORD *)(v28 + 16) = v27;
    v29 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    v27;
    v30 = (_QWORD *)swift_task_alloc(v29);
    *(_QWORD *)(v0 + 168) = v30;
    v22 = sub_100012E18(&qword_1005D1230);
    *v30 = v0;
    v30[1] = sub_100273860;
    v23 = sub_1002743B8;
    v24 = v0 + 32;
    v25 = (_QWORD *)v28;
    return NSManagedObjectContext.perform<A>(_:)(v24, v23, v25, v22);
  }
  if (v26 != enum case for ManagedEntityContextType.html(_:))
    return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 64));
  v39 = objc_msgSend(*(id *)(v0 + 56), "htmlManagedObjectContext");
  *(_QWORD *)(v0 + 128) = v39;
  if (v39)
  {
    v40 = v39;
    v41 = *(void **)(v0 + 56);
    v42 = swift_allocObject(&unk_100562938, 24, 7);
    *(_QWORD *)(v0 + 136) = v42;
    *(_QWORD *)(v42 + 16) = v41;
    v43 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    v40;
    v44 = v41;
    v45 = (_QWORD *)swift_task_alloc(v43);
    *(_QWORD *)(v0 + 144) = v45;
    v22 = sub_100012E18(&qword_1005D1230);
    *v45 = v0;
    v45[1] = sub_10027379C;
    v23 = sub_1002743D0;
    v24 = v0 + 40;
    v25 = (_QWORD *)v42;
    return NSManagedObjectContext.perform<A>(_:)(v24, v23, v25, v22);
  }
LABEL_16:
  v46 = *(_QWORD *)(v0 + 96);
  v47 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10027379C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = *(void **)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_release(v1);

  return swift_task_switch(sub_100273800, 0, 0);
}

uint64_t sub_100273800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100273860()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_release(v1);
  return swift_task_switch(sub_1002738BC, 0, 0);
}

uint64_t sub_1002738BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10027391C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v2 = *(void **)(*(_QWORD *)v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_release(v1);

  return swift_task_switch(sub_100273980, 0, 0);
}

uint64_t sub_100273980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1002739E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  swift_release(v1);
  return swift_task_switch(sub_100273A3C, 0, 0);
}

uint64_t sub_100273A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100273A9C()
{
  return sub_100019C6C(&qword_1005D6558, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273AC8()
{
  return sub_100019C6C(&qword_1005D6560, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273AF4()
{
  return sub_100019C6C(&qword_1005D6568, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273B20()
{
  return sub_100019C6C((unint64_t *)&unk_1005D6570, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

unint64_t sub_100273B50()
{
  unint64_t result;

  result = qword_1005DABE0[0];
  if (!qword_1005DABE0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VisibleAccountsQuery, &type metadata for VisibleAccountsQuery);
    atomic_store(result, qword_1005DABE0);
  }
  return result;
}

uint64_t sub_100273B94()
{
  return sub_100019C6C(&qword_1005D6580, (uint64_t (*)(uint64_t))&type metadata accessor for AccountID, (uint64_t)&protocol conformance descriptor for AccountID);
}

uint64_t sub_100273BC0()
{
  return sub_100019C6C(&qword_1005D6588, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273BEC()
{
  return sub_100019C6C((unint64_t *)&unk_1005D6590, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273C18()
{
  return sub_100019C6C(&qword_1005DABC0, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273C44()
{
  return sub_100019C6C((unint64_t *)&unk_1005D64C0, (uint64_t (*)(uint64_t))&type metadata accessor for AccountID, (uint64_t)&protocol conformance descriptor for AccountID);
}

unint64_t sub_100273C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D65A0;
  if (!qword_1005D65A0)
  {
    v1 = sub_10001537C(&qword_1005D65A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D65A0);
  }
  return result;
}

uint64_t sub_100273CC0()
{
  return sub_100019C6C(&qword_1005D65B0, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273CEC()
{
  return sub_100019C6C(&qword_1005D65B8, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
}

uint64_t sub_100273D18(uint64_t a1)
{
  uint64_t result;

  result = sub_100019C6C((unint64_t *)&unk_1005CEE40, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for AccountID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain(v15);
  }
  return a1;
}

uint64_t destroy for AccountEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for AccountID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t initializeWithCopy for AccountEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = type metadata accessor for AccountID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t assignWithCopy for AccountEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for AccountID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t initializeWithTake for AccountEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for AccountID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for AccountEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for AccountID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100274118);
}

uint64_t sub_100274118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for AccountID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002741D0);
}

uint64_t sub_1002741D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for AccountID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_100274278(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for AccountID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_10045F6E8;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100274304()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100274330(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100272F20(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10027434C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100274378(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100272E88(*(void **)(v1 + 16), a1);
}

uint64_t sub_100274394()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002743B8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100272E04(*(_QWORD *)(v1 + 16), a1);
}

id sub_1002743D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100272D90(*(void **)(v1 + 16), a1);
}

void sub_1002743EC(uint64_t a1@<X8>)
{
  sub_10013B0D0(a1);
}

uint64_t sub_100274410(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100274448 + 4 * byte_10045F700[a1]))(0xD000000000000017, 0x8000000100476910);
}

void sub_10027448C(char *a1)
{
  sub_10021643C(*a1);
}

void sub_100274498()
{
  char *v0;

  sub_1001FAF60(*v0);
}

void sub_1002744A0(uint64_t a1)
{
  char *v1;

  sub_1001FB104(a1, *v1);
}

void sub_1002744A8(uint64_t a1)
{
  char *v1;

  sub_1001FB4E8(a1, *v1);
}

unint64_t sub_1002744B0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100274624(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002744DC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100274410(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100274504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002745E0();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100274560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1002745E0();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1002745AC(_QWORD *a1@<X8>)
{
  *a1 = &off_100555918;
}

unint64_t sub_1002745BC@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100274624(a1);
  *a2 = result;
  return result;
}

unint64_t sub_1002745E0()
{
  unint64_t result;

  result = qword_1005D66C8;
  if (!qword_1005D66C8)
  {
    result = swift_getWitnessTable(&unk_10045F850, &type metadata for ICArchiveModels);
    atomic_store(result, (unint64_t *)&qword_1005D66C8);
  }
  return result;
}

unint64_t sub_100274624(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100556DC8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t storeEnumTagSinglePayload for ICArchiveModels(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002746B8 + 4 * byte_10045F70A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1002746EC + 4 * byte_10045F705[v4]))();
}

uint64_t sub_1002746EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002746F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002746FCLL);
  return result;
}

uint64_t sub_100274708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100274710);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100274714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027471C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveModels()
{
  return &type metadata for ICArchiveModels;
}

unint64_t sub_10027473C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D66D0;
  if (!qword_1005D66D0)
  {
    v1 = sub_10001537C(&qword_1005D66D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D66D0);
  }
  return result;
}

unint64_t sub_10027478C()
{
  unint64_t result;

  result = qword_1005D66E0;
  if (!qword_1005D66E0)
  {
    result = swift_getWitnessTable(&unk_10045F800, &type metadata for ICArchiveModels);
    atomic_store(result, (unint64_t *)&qword_1005D66E0);
  }
  return result;
}

_QWORD *sub_1002747D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (v1)
  {
    v2 = objc_opt_self(ICFolder);
    v3 = swift_dynamicCastObjCClass(v1, v2);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = v1;
      if ((objc_msgSend(v4, "isDefaultFolderForAccount") & 1) != 0
        || objc_msgSend(v4, "isTrashFolder"))
      {

        return _swiftEmptyArrayStorage;
      }

    }
    v6 = objc_opt_self(ICAccount);
    if (swift_dynamicCastObjCClass(v1, v6))
      return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)sub_1002DED28();
}

id sub_1002748F4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v0 = sub_1002DEEF4();
  if (!v0)
    return 0;
  v1 = v0;
  v2 = objc_msgSend(v0, "children");
  v3 = sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v14 = v4;
  v5 = (uint64_t)sub_100275328();
  v6 = sub_10027539C();
  sub_1001D9010((uint64_t)v6);
  v7 = sub_100275710();
  sub_1001D9010((uint64_t)v7);
  v8 = v5;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v5 = _bridgeCocoaArray<A>(_:)(v13, v3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    swift_bridgeObjectRetain(v5);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
  }
  swift_bridgeObjectRelease(v8);
  sub_10026CA40(0, 0, v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v11 = objc_msgSend(v1, "menuByReplacingChildren:", isa);

  return v11;
}

id sub_100274AA0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  const __CFString *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  const __CFString *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  Class isa;
  id v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;

  v77 = sub_1002DEFC0();
  v1 = objc_msgSend(v77, "children");
  v76 = sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v76);

  v79 = v2;
  v3 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_83;
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      v6 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2)
         : *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_opt_self(UIAction);
      v9 = swift_dynamicCastObjCClass(v7, v8);
      if (v9)
      {
        v10 = (void *)v9;
        v11 = v7;
        v12 = objc_msgSend(v10, "identifier");
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v0 = v14;

        v15 = CFSTR("com.apple.mobilenotes.selectNotesFolder");
      }
      else
      {
        v16 = objc_opt_self(UIMenu);
        v17 = swift_dynamicCastObjCClass(v7, v16);
        if (!v17)
        {

          v26 = v5 + 1;
          if (__OFADD__(v5, 1))
            break;
          goto LABEL_17;
        }
        v18 = (void *)v17;
        v11 = v7;
        v19 = objc_msgSend(v18, "identifier");
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v0 = v20;

        v15 = CFSTR("com.apple.mobilenotes.sortMenuIdentifier");
      }
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      if (v13 == v21 && v0 == v22)
        goto LABEL_22;
      v24 = v22;
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v0, v21, v22, 0);

      swift_bridgeObjectRelease(v0);
      swift_bridgeObjectRelease(v24);
      if ((v25 & 1) != 0)
        goto LABEL_23;
      v26 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
LABEL_17:
      ++v5;
      if (v26 == v4)
        goto LABEL_87;
    }
    __break(1u);
LABEL_22:

    swift_bridgeObjectRelease_n(v0, 2);
LABEL_23:
    swift_bridgeObjectRelease(v2);
    v27 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
    }
    else if (!v3)
    {
      if (v27 == *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_89;
      goto LABEL_26;
    }
    if (v2 < 0)
      v74 = v2;
    else
      v74 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v75 = _CocoaArrayWrapper.endIndex.getter(v74);
    swift_bridgeObjectRelease(v2);
    if (v27 == v75)
      goto LABEL_89;
LABEL_26:
    v28 = v5 + 5;
    while (2)
    {
      v29 = v28 - 4;
      v3 = v2 & 0xC000000000000001;
      if ((v2 & 0xC000000000000001) != 0)
      {
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v2);
        goto LABEL_31;
      }
      if ((v29 & 0x8000000000000000) == 0)
      {
        if (v29 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_74;
        v30 = *(id *)(v2 + 8 * v28);
LABEL_31:
        v31 = v30;
        v32 = objc_opt_self(UIAction);
        v33 = swift_dynamicCastObjCClass(v31, v32);
        if (v33)
        {
          v34 = (void *)v33;
          v35 = v31;
          v36 = objc_msgSend(v34, "identifier");
          v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v0 = v38;

          v39 = CFSTR("com.apple.mobilenotes.selectNotesFolder");
          goto LABEL_35;
        }
        v40 = objc_opt_self(UIMenu);
        v41 = swift_dynamicCastObjCClass(v31, v40);
        if (v41)
        {
          v42 = (void *)v41;
          v35 = v31;
          v43 = objc_msgSend(v42, "identifier");
          v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
          v0 = v44;

          v39 = CFSTR("com.apple.mobilenotes.sortMenuIdentifier");
LABEL_35:
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          if (v37 == v45 && v0 == v46)
          {

            swift_bridgeObjectRelease_n(v0, 2);
          }
          else
          {
            v48 = v46;
            v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v0, v45, v46, 0);

            swift_bridgeObjectRelease(v0);
            swift_bridgeObjectRelease(v48);
            if ((v49 & 1) == 0)
            {
              if (v29 == v5)
                goto LABEL_61;
LABEL_44:
              if (v3)
              {
                v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
                v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, v2);
              }
              else
              {
                if (v5 < 0)
                  goto LABEL_77;
                v50 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v5 >= v50)
                  goto LABEL_78;
                v51 = *(id *)(v2 + 8 * v5 + 32);
                if ((v29 & 0x8000000000000000) != 0)
                  goto LABEL_79;
                if (v29 >= v50)
                  goto LABEL_80;
                v52 = (uint64_t)v51;
                v53 = *(id *)(v2 + 8 * v28);
              }
              v54 = v53;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v2)
                || v2 < 0
                || (v2 & 0x4000000000000000) != 0)
              {
                v2 = sub_10026C694(v2);
                v79 = v2;
              }
              v55 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
              *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v54;

              specialized Array._endMutation()(v56);
              v2 = v79;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v79)
                || v2 < 0
                || (v2 & 0x4000000000000000) != 0)
              {
                v2 = sub_10026C694(v2);
                v79 = v2;
              }
              if ((v29 & 0x8000000000000000) != 0)
                goto LABEL_81;
              v57 = v2 & 0xFFFFFFFFFFFFFF8;
              if (v29 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_82;
              v58 = *(void **)(v57 + 8 * v28);
              *(_QWORD *)(v57 + 8 * v28) = v52;

              v2 = (uint64_t)&v79;
              specialized Array._endMutation()(v59);
              goto LABEL_61;
            }
          }
        }
        else
        {

          if (v29 != v5)
            goto LABEL_44;
LABEL_61:
          if (__OFADD__(v5++, 1))
            goto LABEL_76;
        }
        v61 = v28 - 3;
        if (__OFADD__(v29, 1))
          goto LABEL_75;
        v2 = v79;
        if ((unint64_t)v79 >> 62)
        {
          if (v79 < 0)
            v63 = v79;
          else
            v63 = v79 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v79);
          v62 = _CocoaArrayWrapper.endIndex.getter(v63);
          swift_bridgeObjectRelease(v2);
        }
        else
        {
          v62 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v28;
        if (v61 == v62)
          goto LABEL_89;
        continue;
      }
      break;
    }
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    if (v2 < 0)
      v64 = v2;
    else
      v64 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v64);
  }
LABEL_87:
  swift_bridgeObjectRelease(v2);
  if (v3)
    goto LABEL_97;
  v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_89:
  while (!((unint64_t)v2 >> 62))
  {
    v65 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v65 >= v5)
      goto LABEL_91;
LABEL_96:
    __break(1u);
LABEL_97:
    if (v2 < 0)
      v73 = v2;
    else
      v73 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v73);
    swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v72 = v2;
  else
    v72 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v65 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease(v2);
  if (v65 < v5)
    goto LABEL_96;
LABEL_91:
  sub_10026F20C(v5, v65);
  v66 = sub_100275190();
  v78 = v66;
  v67 = sub_100012E18(&qword_1005D5880);
  Array.appendNonNil(_:)(&v78, v67);

  v68 = v79;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v68);
  v70 = objc_msgSend(v77, "menuByReplacingChildren:", isa);

  return v70;
}

id sub_100275190()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *Strong;
  id v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD v16[5];
  uint64_t v17;

  v1 = *(void **)&v0[OBJC_IVAR___ICNoteContainerActionMenu_noteContainer];
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v1;
  if (!objc_msgSend(v4, "isDeletable"))
  {

    return 0;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController]);
  v7 = objc_allocWithZone((Class)ICDeleteFolderActivity);
  v8 = v5;
  v9 = v0;
  v10 = objc_msgSend(v7, "initWithFolder:presentingViewController:sender:", v4, Strong, v9);

  if (*(_QWORD *)&v9[OBJC_IVAR___ICNoteContainerActionMenu_completion])
  {
    v11 = *(_QWORD *)&v9[OBJC_IVAR___ICNoteContainerActionMenu_completion + 8];
    v16[4] = *(_QWORD *)&v9[OBJC_IVAR___ICNoteContainerActionMenu_completion];
    v17 = v11;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10023ABC8;
    v16[3] = &unk_100562C00;
    v12 = _Block_copy(v16);
    v13 = v17;
    swift_retain(v11);
    swift_release(v13);
  }
  else
  {
    v12 = 0;
  }
  v14 = objc_msgSend(v10, "actionWithCompletion:", v12);

  _Block_release(v12);
  return v14;
}

_QWORD *sub_100275328()
{
  return sub_1002753C0((uint64_t *)&ICVirtualSmartFolderItemIdentifierTypeSystemPaper, (SEL *)&selRef_hidesSystemPaperNotesInCustomFolders, (uint64_t)sub_10027534C, (uint64_t)sub_100275374);
}

id sub_10027534C()
{
  return objc_msgSend((id)objc_opt_self(ICAccount), "setHidesSystemPaperNotesInCustomFolders:", 0);
}

id sub_100275374()
{
  return objc_msgSend((id)objc_opt_self(ICAccount), "setHidesSystemPaperNotesInCustomFolders:", 1);
}

_QWORD *sub_10027539C()
{
  return sub_1002753C0((uint64_t *)&ICVirtualSmartFolderItemIdentifierTypeMathNotes, (SEL *)&selRef_hidesMathNotesInCustomFolders, (uint64_t)sub_1002756C0, (uint64_t)sub_1002756E8);
}

_QWORD *sub_1002753C0(uint64_t *a1, SEL *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v5 = *(void **)(v4 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
  if (!v5)
    return _swiftEmptyArrayStorage;
  v10 = v5;
  v11 = objc_msgSend(v10, "type");
  v12 = *a1;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  if (v13 == v16 && v15 == v17)
  {

    swift_bridgeObjectRelease_n(v15, 2);
    goto LABEL_10;
  }
  v19 = v17;
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);

  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v19);
  if ((v20 & 1) != 0)
  {
LABEL_10:
    v22 = (void *)objc_opt_self(NSBundle);
    v23 = objc_msgSend(v22, "mainBundle");
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, 0, 0);

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v29 = (void *)objc_opt_self(ICAccount);
    v30 = objc_msgSend(v29, *a2) ^ 1;
    sub_1000163BC(0, (unint64_t *)&unk_1005CF6E0, UIAction_ptr);
    v31 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v26, v28, 0, 0, 0, 0, 0, 0, 0, 0, v30, a3, 0);
    v32 = objc_msgSend(v22, "mainBundle");
    v33 = String._bridgeToObjectiveC()();
    v34 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, 0, 0);

    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    v38 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v35, v37, 0, 0, 0, 0, 0, 0, 0, 0, objc_msgSend(v29, *a2), a4, 0);
    v39 = sub_100012E18(&qword_1005CF6F0);
    v40 = swift_allocObject(v39, 48, 7);
    *(_OWORD *)(v40 + 16) = xmmword_100451BF0;
    *(_QWORD *)(v40 + 32) = v31;
    *(_QWORD *)(v40 + 40) = v38;
    v42 = v40;
    specialized Array._endMutation()(v40);
    v21 = v42;

    return (_QWORD *)v21;
  }

  return _swiftEmptyArrayStorage;
}

id sub_1002756C0()
{
  return objc_msgSend((id)objc_opt_self(ICAccount), "setHidesMathNotesInCustomFolders:", 0);
}

id sub_1002756E8()
{
  return objc_msgSend((id)objc_opt_self(ICAccount), "setHidesMathNotesInCustomFolders:", 1);
}

_QWORD *sub_100275710()
{
  return sub_1002753C0((uint64_t *)&ICVirtualSmartFolderItemIdentifierTypeCallNotes, (SEL *)&selRef_hidesCallNotesInCustomFolders, (uint64_t)sub_100275734, (uint64_t)sub_10027575C);
}

id sub_100275734()
{
  return objc_msgSend((id)objc_opt_self(ICAccount), "setHidesCallNotesInCustomFolders:", 0);
}

id sub_10027575C()
{
  return objc_msgSend((id)objc_opt_self(ICAccount), "setHidesCallNotesInCustomFolders:", 1);
}

uint64_t sub_100275784(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  return sub_10027587C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void *, void *, void *, void *, uint64_t, uint64_t))sub_1002E2464);
}

uint64_t sub_100275870(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  return sub_10027587C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void *, void *, void *, void *, uint64_t, uint64_t))sub_1002E25F4);
}

uint64_t sub_10027587C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void *, void *, void *, void *, uint64_t, uint64_t))
{
  objc_class *v7;
  id v15;
  uint64_t v16;

  v15 = objc_allocWithZone(v7);
  v16 = a7(a1, a2, a3, a4, a5, a6);
  sub_100012C50(a5, a6);

  return v16;
}

id sub_1002759F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderListActionMenu();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FolderListActionMenu()
{
  return objc_opt_self(ICFolderListActionMenu);
}

uint64_t sub_100275A44()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100275A6C(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_100275A90(void *a1, char a2, char a3)
{
  void **v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  uint64_t result;
  _QWORD v15[5];
  uint64_t v16;

  v7 = *v3;
  v8 = swift_allocObject(&unk_100563348, 41, 7);
  *(_BYTE *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = v3;
  *(_QWORD *)(v8 + 32) = a1;
  *(_BYTE *)(v8 + 40) = a2;
  v9 = swift_allocObject(&unk_100563370, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10028601C;
  *(_QWORD *)(v9 + 24) = v8;
  v15[4] = sub_100194900;
  v16 = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100016618;
  v15[3] = &unk_100563388;
  v10 = _Block_copy(v15);
  v11 = v16;
  v12 = a1;
  v13 = v7;
  swift_retain(v9);
  swift_release(v11);
  dispatch_sync(v13, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation(v9, "", 112, 710, 26, 1);
  swift_release(v8);
  result = swift_release(v9);
  if ((v10 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_100275BD0(uint64_t a1, char a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  _BOOL8 v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v16[3];
  char v17;
  id *v18;
  _OWORD v19[5];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  char v23;
  id v24;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 48);
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v5;
  v19[4] = *(_OWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 80);
  v6 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v6;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v15 = v4;
    else
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v4);
    if (!v7)
      return 0;
  }
  else
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return 0;
  }
  v8 = a1 + 64;
  v9 = &qword_1005D6790;
  sub_10014BD1C(v8, (uint64_t)v21, &qword_1005D6790);
  result = sub_10014BD1C((uint64_t)v21, (uint64_t)&v22, &qword_1005D6790);
  if (v23 == 1)
    return 0;
  if (v7 < 0)
  {
    __break(1u);
LABEL_19:
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v4);
    goto LABEL_12;
  }
  v11 = 0;
  v9 = (uint64_t *)v22;
  if (v22 < 0 || v22 >= v7)
    return v11;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_19;
  if ((unint64_t)v22 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v4 + 8 * v22 + 32);
LABEL_12:
    v24 = v12;
    __chkstk_darwin(v12);
    v16[2] = v19;
    v17 = a2 & 1;
    v18 = &v24;
    v13 = type metadata accessor for ICSelectionStateModel(0);
    Array.firstSearchingBackwardsIndex(from:matching:)((char *)v9 - 1, sub_100284658, v16, v4, v13);
    v11 = (v14 & 1) == 0;

    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100275D8C(uint64_t a1, char a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  _BOOL8 v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v16[3];
  char v17;
  id *v18;
  _OWORD v19[5];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  char v23;
  id v24;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 48);
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v5;
  v19[4] = *(_OWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 80);
  v6 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v6;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v15 = v4;
    else
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v4);
    if (!v7)
      return 0;
  }
  else
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return 0;
  }
  v8 = a1 + 64;
  v9 = &qword_1005D6790;
  sub_10014BD1C(v8, (uint64_t)v21, &qword_1005D6790);
  result = sub_10014BD1C((uint64_t)v21, (uint64_t)&v22, &qword_1005D6790);
  if (v23 == 1)
    return 0;
  if (v7 < 0)
  {
    __break(1u);
LABEL_19:
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v4);
    goto LABEL_12;
  }
  v11 = 0;
  v9 = (uint64_t *)v22;
  if (v22 < 0 || v22 >= v7)
    return v11;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_19;
  if ((unint64_t)v22 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v4 + 8 * v22 + 32);
LABEL_12:
    v24 = v12;
    __chkstk_darwin(v12);
    v16[2] = v19;
    v17 = a2 & 1;
    v18 = &v24;
    v13 = type metadata accessor for ICSelectionStateModel(0);
    Array.firstSearchingForwardsIndex(from:matching:)((char *)v9 + 1, sub_100284658, v16, v4, v13);
    v11 = (v14 & 1) == 0;

    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100275F48(char *a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(_QWORD *);
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char *v16;
  char v17;
  char *v18;
  id v19;
  char v20;
  _QWORD v23[3];

  swift_getObjectType(a4);
  v8 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v8);
  v10 = (char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(_QWORD *))(a2 + 24);
  if (v11)
  {
    v23[0] = a1;
    v12 = a1;
    v11(v23);

  }
  if ((a3 & 1) == 0)
  {
    v18 = a1;
    goto LABEL_7;
  }
  v13 = (uint64_t)&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v23, 0, 0);
  sub_100012CE8(v13, (uint64_t)v10, &qword_1005D1508);
  v14 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14);
  v16 = a1;
  sub_100012DDC((uint64_t)v10, &qword_1005D1508);
  if (v15 != 1)
  {
LABEL_7:
    v19 = a4;
    v20 = static NSObject.== infix(_:_:)(a1);

    v17 = v20 ^ 1;
    return v17 & 1;
  }

  v17 = 0;
  return v17 & 1;
}

uint64_t sub_1002760B4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD v24[4];
  char v25;
  _OWORD *v26;
  uint64_t v27;
  _OWORD v28[3];
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v6 = result;
  v7 = *(_OWORD *)(a3 + 48);
  v28[2] = *(_OWORD *)(a3 + 32);
  v29 = v7;
  v30 = *(_OWORD *)(a3 + 64);
  v31 = *(_QWORD *)(a3 + 80);
  v8 = *(_OWORD *)(a3 + 16);
  v28[0] = *(_OWORD *)a3;
  v28[1] = v8;
  if (result)
  {
    v9 = swift_allocObject(&unk_100563168, 32, 7);
    *(_QWORD *)(v9 + 16) = v6;
    *(_QWORD *)(v9 + 24) = a2;
LABEL_5:
    v13 = swift_allocObject(&unk_100563140, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100284A64;
    *(_QWORD *)(v13 + 24) = v9;
    result = sub_100166B74(v6, a2);
    v14 = sub_100284A64;
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  if (v10)
  {
    v11 = *(_QWORD *)(a3 + 32);
    v12 = swift_allocObject(&unk_1005630F0, 32, 7);
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v11;
    v9 = swift_allocObject(&unk_100563118, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_100284A60;
    *(_QWORD *)(v9 + 24) = v12;
    swift_retain(v11);
    goto LABEL_5;
  }
  v14 = 0;
  v13 = 0;
LABEL_6:
  v15 = *((_QWORD *)&v29 + 1);
  if (*((_QWORD *)&v29 + 1) >> 62)
  {
    if (v29 < 0)
      v23 = *((_QWORD *)&v29 + 1);
    else
      v23 = *((_QWORD *)&v29 + 1) & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*((_QWORD *)&v29 + 1));
    v16 = _CocoaArrayWrapper.endIndex.getter(v23);
    result = swift_bridgeObjectRelease(*((_QWORD *)&v29 + 1));
    if (!v16)
      goto LABEL_20;
  }
  else
  {
    v16 = *(_QWORD *)((*((_QWORD *)&v29 + 1) & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v16)
      goto LABEL_20;
  }
  if ((BYTE8(v30) & 1) != 0)
    goto LABEL_20;
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    return result;
  }
  if ((v30 & 0x8000000000000000) != 0 || (unint64_t)v30 >= v16)
  {
LABEL_20:
    sub_100012C50((uint64_t)v14, v13);
    return 0;
  }
  v17 = v30 - 1;
  __chkstk_darwin(result);
  v24[2] = v14;
  v24[3] = v13;
  v25 = a4 & 1;
  v26 = v28;
  v27 = v18;
  v19 = type metadata accessor for ICSelectionStateModel(0);
  v20 = Array.firstSearchingBackwardsIndex(from:matching:)(v17, sub_100284A5C, v24, v15, v19);
  v22 = v21;
  sub_100012C50((uint64_t)v14, v13);
  if ((v22 & 1) != 0)
    return 0;
  else
    return v20;
}

uint64_t sub_1002762E0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD v24[4];
  char v25;
  _OWORD *v26;
  uint64_t v27;
  _OWORD v28[3];
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v6 = result;
  v7 = *(_OWORD *)(a3 + 48);
  v28[2] = *(_OWORD *)(a3 + 32);
  v29 = v7;
  v30 = *(_OWORD *)(a3 + 64);
  v31 = *(_QWORD *)(a3 + 80);
  v8 = *(_OWORD *)(a3 + 16);
  v28[0] = *(_OWORD *)a3;
  v28[1] = v8;
  if (result)
  {
    v9 = swift_allocObject(&unk_100562FB0, 32, 7);
    *(_QWORD *)(v9 + 16) = v6;
    *(_QWORD *)(v9 + 24) = a2;
LABEL_5:
    v13 = swift_allocObject(&unk_100562F88, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100284A64;
    *(_QWORD *)(v13 + 24) = v9;
    result = sub_100166B74(v6, a2);
    v14 = sub_100284A64;
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  if (v10)
  {
    v11 = *(_QWORD *)(a3 + 32);
    v12 = swift_allocObject(&unk_100562F38, 32, 7);
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v11;
    v9 = swift_allocObject(&unk_100562F60, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_100284A60;
    *(_QWORD *)(v9 + 24) = v12;
    swift_retain(v11);
    goto LABEL_5;
  }
  v14 = 0;
  v13 = 0;
LABEL_6:
  v15 = *((_QWORD *)&v29 + 1);
  if (*((_QWORD *)&v29 + 1) >> 62)
  {
    if (v29 < 0)
      v23 = *((_QWORD *)&v29 + 1);
    else
      v23 = *((_QWORD *)&v29 + 1) & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*((_QWORD *)&v29 + 1));
    v16 = _CocoaArrayWrapper.endIndex.getter(v23);
    result = swift_bridgeObjectRelease(*((_QWORD *)&v29 + 1));
    if (!v16)
      goto LABEL_20;
  }
  else
  {
    v16 = *(_QWORD *)((*((_QWORD *)&v29 + 1) & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v16)
      goto LABEL_20;
  }
  if ((BYTE8(v30) & 1) != 0)
    goto LABEL_20;
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    return result;
  }
  if ((v30 & 0x8000000000000000) != 0 || (unint64_t)v30 >= v16)
  {
LABEL_20:
    sub_100012C50((uint64_t)v14, v13);
    return 0;
  }
  v17 = v30 + 1;
  __chkstk_darwin(result);
  v24[2] = v14;
  v24[3] = v13;
  v25 = a4 & 1;
  v26 = v28;
  v27 = v18;
  v19 = type metadata accessor for ICSelectionStateModel(0);
  v20 = Array.firstSearchingForwardsIndex(from:matching:)(v17, sub_100284A5C, v24, v15, v19);
  v22 = v21;
  sub_100012C50((uint64_t)v14, v13);
  if ((v22 & 1) != 0)
    return 0;
  else
    return v20;
}

uint64_t sub_10027650C(char *a1, uint64_t (*a2)(char **), uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  void *v22;
  char v23;
  char *v24;
  _BYTE v25[24];
  char *v26;

  v11 = sub_100012E18(&qword_1005D1508);
  result = __chkstk_darwin(v11);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = a1;
  if (a2)
    result = a2(&v26);
  if ((a4 & 1) != 0)
  {
    v15 = (uint64_t)&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess(&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v25, 0, 0);
    sub_100012CE8(v15, (uint64_t)v14, &qword_1005D1508);
    v16 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    LODWORD(v15) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16);
    result = sub_100012DDC((uint64_t)v14, &qword_1005D1508);
    if ((_DWORD)v15 == 1)
    {
      v17 = 0;
      return v17 & 1;
    }
    a1 = v26;
  }
  v18 = *(_QWORD *)(a5 + 56);
  if ((v18 & 0xC000000000000001) != 0)
  {
    v24 = a1;
    sub_100284A68(a5);
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a6, v18);
    goto LABEL_11;
  }
  if ((a6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) > a6)
  {
    v19 = *(void **)(v18 + 8 * a6 + 32);
    v20 = a1;
    sub_100284A68(a5);
    v21 = v19;
LABEL_11:
    v22 = v21;
    type metadata accessor for ICSelectionStateModel(0);
    v23 = static NSObject.== infix(_:_:)(a1);

    sub_100284AE4(a5);
    v17 = v23 ^ 1;
    return v17 & 1;
  }
  __break(1u);
  return result;
}

void sub_1002766BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v4 = *(_QWORD *)(a1 + 56);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v8 = *(_QWORD *)(a1 + 56);
    else
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 56));
    v5 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v4);
    if (v5 < 0)
    {
      __break(1u);
      goto LABEL_15;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (a2 < 0 || v5 <= a2)
    return;
  *(_QWORD *)(a1 + 64) = a2;
  *(_BYTE *)(a1 + 72) = 0;
  v6 = *(_QWORD *)(a1 + 56);
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v6);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
  {
    v7 = *(id *)(v6 + 8 * a2 + 32);
LABEL_8:
    v9 = v7;
    sub_10027679C();

    return;
  }
  __break(1u);
}

void sub_10027679C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void (*v6)(_QWORD *);
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  char *v20;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v2);
  v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10015ED64(1, 1);
  v20 = v5;
  v6 = *(void (**)(_QWORD *))(v0 + 24);
  if (v6)
  {
    v7 = v5;
    v8 = *(_QWORD *)(v1 + 32);
    v19[0] = v5;
    sub_100166B74((uint64_t)v6, v8);
    v9 = v7;
    v6(v19);
    sub_100012C50((uint64_t)v6, v8);

  }
  __chkstk_darwin(v5);
  *(&v18 - 2) = v1;
  *(&v18 - 1) = (uint64_t)&v20;
  v10 = sub_100283E6C(sub_100284A04, (uint64_t)(&v18 - 4));
  v11 = v10;
  v12 = *(_QWORD *)(v1 + 80);
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v17 = *(_QWORD *)(v1 + 80);
    else
      v17 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v12);
    if (v13 >= v11)
      goto LABEL_5;
LABEL_12:
    __break(1u);
    return;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v13 < v10)
    goto LABEL_12;
LABEL_5:
  sub_10026D1B0(v11, v13);
  v14 = &v20[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v19, 0, 0);
  sub_100012CE8((uint64_t)v14, (uint64_t)v4, &qword_1005D1508);
  v15 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v4, 1, v15);
  sub_100012DDC((uint64_t)v4, &qword_1005D1508);
  if ((_DWORD)v14 != 1)
  {
    v16 = sub_100012E18((uint64_t *)&unk_1005D6780);
    Array.prepend(_:)(&v20, v16);
  }

}

void sub_100276998(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  int64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)@<X0>(uint64_t *@<X0>, uint64_t *@<X1>, _BYTE *@<X8>);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void (*v41)(uint64_t *);
  uint64_t v42;
  uint64_t (*v43)(uint64_t *, uint64_t *);
  uint64_t v44;
  id v45;
  char v46;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  __n128 v78;
  char v79;
  char v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;

  v5 = (uint64_t)a3;
  if ((a1 & 1) != 0)
  {
    v96 = *(id *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a3;
    v7 = a3;

    return;
  }
  v9 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 32);
    v98 = (uint64_t)a3;
    v11 = a3;
    sub_100166B74(v9, v10);
    ((void (*)(uint64_t *))v9)(&v98);
    sub_100012C50(v9, v10);

  }
  if ((a4 & 1) == 0 || (*(_BYTE *)(a2 + 72) & 1) != 0)
  {
LABEL_31:
    v32 = *(_QWORD *)(a2 + 40);
    v33 = *(_QWORD *)(a2 + 48);
    if (v32)
    {
      v34 = swift_allocObject(&unk_1005633C0, 32, 7);
      *(_QWORD *)(v34 + 16) = v32;
      *(_QWORD *)(v34 + 24) = v33;
      v35 = sub_10028603C;
    }
    else
    {
      v35 = 0;
      v34 = 0;
    }
    sub_100166B74(v32, v33);
    sub_100012C50((uint64_t)v35, v34);
    v36 = (uint64_t *)(a2 + 56);
    v37 = *(_QWORD *)(a2 + 56);
    if ((unint64_t)v37 >> 62)
      goto LABEL_81;
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v32)
    {
      if (!v38)
        break;
      while (1)
      {
        v32 = *v36;
        if ((unint64_t)*v36 >> 62)
        {
          if (v32 < 0)
            v54 = *v36;
          else
            v54 = v32 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v36);
          v37 = _CocoaArrayWrapper.endIndex.getter(v54);
          if (!v37)
            goto LABEL_45;
        }
        else
        {
          v37 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(*v36);
          if (!v37)
            goto LABEL_45;
        }
        v39 = v37 - 1;
        if (__OFSUB__(v37, 1))
          goto LABEL_77;
        if ((v32 & 0xC000000000000001) != 0)
        {
          v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v32);
        }
        else
        {
          if ((v39 & 0x8000000000000000) != 0)
            goto LABEL_78;
          if (v39 >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_79;
          v40 = *(id *)(v32 + 8 * v39 + 32);
        }
        v37 = (uint64_t)v40;
LABEL_45:
        swift_bridgeObjectRelease(v32);
        v98 = v37;
        v41 = *(void (**)(uint64_t *))(a2 + 24);
        if (v41)
        {
          v42 = *(_QWORD *)(a2 + 32);
          swift_retain(v42);
          v41(&v98);
          sub_100012C50((uint64_t)v41, v42);
        }
        v43 = *(uint64_t (**)(uint64_t *, uint64_t *))(a2 + 40);
        if (!v43
          || (v44 = *(_QWORD *)(a2 + 48),
              v97 = v5,
              v45 = (id)v5,
              sub_100166B74((uint64_t)v43, v44),
              v46 = v43(&v97, &v98),
              sub_100012C50((uint64_t)v43, v44),
              v45,
              (v46 & 1) == 0))
        {
          v51 = 1;
          goto LABEL_58;
        }
        v32 = *v36;
        if (!((unint64_t)*v36 >> 62))
        {
          if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
            break;
          goto LABEL_51;
        }
        v56 = v32 < 0 ? *v36 : v32 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v36);
        v57 = _CocoaArrayWrapper.endIndex.getter(v56);
        swift_bridgeObjectRelease(v32);
        if (!v57)
          break;
LABEL_51:
        v32 = *v36;
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v36);
        *v36 = v32;
        if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v32 < 0 || (v32 & 0x4000000000000000) != 0)
        {
          isUniquelyReferenced_nonNull_bridgeObject = sub_10026C694(v32);
          v32 = isUniquelyReferenced_nonNull_bridgeObject;
          *v36 = isUniquelyReferenced_nonNull_bridgeObject;
        }
        v48 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v48)
          goto LABEL_80;
        v49 = v48 - 1;
        v50 = *(void **)((v32 & 0xFFFFFFFFFFFFFF8) + 8 * v49 + 0x20);
        *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) = v49;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);

        v51 = 0;
LABEL_58:

        v52 = *v36;
        if ((unint64_t)*v36 >> 62)
        {
          if (v52 < 0)
            v55 = *v36;
          else
            v55 = v52 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v36);
          v53 = _CocoaArrayWrapper.endIndex.getter(v55);
          swift_bridgeObjectRelease(v52);
        }
        else
        {
          v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (((v53 != 0) & ~v51) == 0)
          goto LABEL_85;
      }
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      if (v37 < 0)
        v58 = v37;
      else
        v58 = v37 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v37);
      v38 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease(v37);
    }
LABEL_85:
    v59 = *v36;
    if ((unint64_t)*v36 >> 62)
      goto LABEL_121;
    v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (2)
    {
      if (v60 >= *(_QWORD *)(a2 + 8))
      {
LABEL_96:
        v68 = type metadata accessor for ICSelectionStateModel(0);
        while (1)
        {
          v69 = *v36;
          v70 = swift_bridgeObjectRetain(*v36);
          v59 = Array.firstIndex(matching:)(sub_1002841CC, 0, v69, v68, v70);
          v72 = v71;
          swift_bridgeObjectRelease(v69);
          v73 = *v36;
          v74 = *v36;
          if ((v72 & 1) == 0)
            break;
          v78 = swift_bridgeObjectRetain(v74);
          v59 = Array.firstIndex(matching:)(sub_1002842A4, 0, v73, v68, v78);
          v80 = v79;
          swift_bridgeObjectRelease(v73);
          if ((v80 & 1) == 0)
          {
            v81 = *v36;
            v82 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v36);
            *v36 = v81;
            if (!v82 || v81 < 0 || (v81 & 0x4000000000000000) != 0)
            {
              v81 = sub_10026C694(v81);
              *v36 = v81;
            }
            v76 = v81 & 0xFFFFFFFFFFFFFF8;
            v77 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v59 >= v77)
              goto LABEL_120;
LABEL_110:
            v83 = v77 - 1;
            v84 = v77 - 1 - v59;
            if (v84 < 0)
              goto LABEL_151;
            v85 = v76 + 8 * v59;
            v86 = *(void **)(v85 + 32);
            v87 = memmove((void *)(v85 + 32), (const void *)(v85 + 40), 8 * v84);
            *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFF8) + 0x10) = v83;
            specialized Array._endMutation()(v87);

          }
          v88 = *v36;
          if ((unint64_t)*v36 >> 62)
          {
            if (v88 < 0)
              v90 = *v36;
            else
              v90 = v88 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(*v36);
            v89 = _CocoaArrayWrapper.endIndex.getter(v90);
            swift_bridgeObjectRelease(v88);
          }
          else
          {
            v89 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v89 < *(_QWORD *)(a2 + 8))
            goto LABEL_88;
        }
        v75 = swift_isUniquelyReferenced_nonNull_bridgeObject(v74);
        *v36 = v73;
        if (!v75 || v73 < 0 || (v73 & 0x4000000000000000) != 0)
        {
          v73 = sub_10026C694(v73);
          *v36 = v73;
        }
        v76 = v73 & 0xFFFFFFFFFFFFFF8;
        v77 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v59 >= v77)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          if (v59 < 0)
            v91 = v59;
          else
            v91 = v59 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v59);
          v60 = _CocoaArrayWrapper.endIndex.getter(v91);
          swift_bridgeObjectRelease(v59);
          continue;
        }
        goto LABEL_110;
      }
      break;
    }
LABEL_88:
    v61 = (id)v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
    v63 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v62 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v63 >= v62 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
    v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v61);
    specialized Array._endMutation()(v64);
    sub_10027679C();
    v65 = *(_QWORD *)(a2 + 56);
    if ((unint64_t)v65 >> 62)
    {
      if (v65 < 0)
        v92 = *(_QWORD *)(a2 + 56);
      else
        v92 = v65 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + 56));
      v66 = _CocoaArrayWrapper.endIndex.getter(v92);
      swift_bridgeObjectRelease(v65);
      if (v66)
        goto LABEL_92;
    }
    else
    {
      v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v66)
      {
LABEL_92:
        v5 = *v36;
        if ((unint64_t)*v36 >> 62)
        {
          if (v5 < 0)
            v93 = *v36;
          else
            v93 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v36 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v93);
          swift_bridgeObjectRelease(v5);
          v67 = (char *)v36 - 1;
          if (!__OFSUB__(v36, 1))
            goto LABEL_130;
        }
        else
        {
          v36 = *(uint64_t **)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
          v67 = (char *)v36 - 1;
          if (!__OFSUB__(v36, 1))
            goto LABEL_130;
        }
        __break(1u);
        goto LABEL_96;
      }
    }
    v67 = 0;
LABEL_130:
    *(_QWORD *)(a2 + 64) = v67;
    *(_BYTE *)(a2 + 72) = v66 == 0;

    *(_QWORD *)(a2 + 16) = 0;
    return;
  }
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v94 = *(_QWORD *)(a2 + 56);
    else
      v94 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 56));
    v14 = _CocoaArrayWrapper.endIndex.getter(v94);
    a1 = swift_bridgeObjectRelease(v12);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_142;
    }
  }
  else
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 < 0 || v13 >= v14)
    goto LABEL_31;
  v14 = *(_QWORD *)(a2 + 56);
  v4 = (unint64_t)v14 >> 62;
  if (!((unint64_t)v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15 > v13)
      goto LABEL_13;
    goto LABEL_147;
  }
LABEL_142:
  if (v14 < 0)
    v95 = v14;
  else
    v95 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v9 = _CocoaArrayWrapper.endIndex.getter(v95);
  swift_bridgeObjectRelease(v14);
  if ((v9 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v95);
    a1 = swift_bridgeObjectRelease(v14);
    if (v15 > v13)
    {
LABEL_13:
      if ((v14 & 0xC000000000000001) != 0)
      {
        type metadata accessor for ICSelectionStateModel(0);
        v16 = 0;
        do
        {
          v17 = v16 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v16);
          v16 = v17;
        }
        while (v13 + 1 != v17);
      }
      v18 = v13 + 1;
      if (v4)
      {
        if (v14 < 0)
          v20 = v14;
        else
          v20 = v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v14);
        v15 = _CocoaArrayWrapper.subscript.getter(0, v18, v20);
        v9 = v21;
        v4 = v22;
        v13 = v23;
        swift_bridgeObjectRelease(v14);
        if ((v13 & 1) == 0)
          goto LABEL_23;
      }
      else
      {
        v15 = v14 & 0xFFFFFFFFFFFFFF8;
        v9 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
        v13 = (2 * v18) | 1;
        v19 = swift_bridgeObjectRetain(v14);
        if ((v13 & 1) == 0)
        {
LABEL_23:
          v25 = sub_10016BD14(v15, v9, v4, v13);
LABEL_30:
          swift_unknownObjectRelease(v15, v24);
          v31 = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a2 + 56) = v25;
          swift_bridgeObjectRelease(v31);
          goto LABEL_31;
        }
      }
      v26 = type metadata accessor for __ContiguousArrayStorageBase(0, v19);
      v27 = swift_unknownObjectRetain_n(v15, 2);
      v28 = (_QWORD *)swift_dynamicCastClass(v27, v26);
      if (!v28)
      {
        swift_unknownObjectRelease(v15, v29);
        v28 = _swiftEmptyArrayStorage;
      }
      v30 = v28[2];
      a1 = swift_release(v28);
      if (!__OFSUB__((unint64_t)v13 >> 1, v4))
      {
        a1 = v15;
        if (v30 == ((unint64_t)v13 >> 1) - v4)
        {
          v25 = (_QWORD *)swift_dynamicCastClass(v15, v26);
          if (!v25)
          {
            swift_unknownObjectRelease(v15, v24);
            v25 = _swiftEmptyArrayStorage;
          }
          goto LABEL_30;
        }
        goto LABEL_149;
      }
LABEL_148:
      __break(1u);
LABEL_149:
      swift_unknownObjectRelease(a1, a2);
      goto LABEL_23;
    }
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  __break(1u);
LABEL_151:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
}

_QWORD *sub_10027725C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _BYTE v54[16];
  uint64_t v55;
  char v56;
  id v57;

  v4 = v3;
  v8 = *((_QWORD *)a1 + 7);
  v9 = a1[3];
  v50 = a1[2];
  v51 = v9;
  v52 = a1[4];
  v53 = *((_QWORD *)a1 + 10);
  v10 = a1[1];
  v48 = *a1;
  v49 = v10;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v29 = v8;
    else
      v29 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v8);
    if (!v30)
      return 0;
  }
  else if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return 0;
  }
  sub_10014BD1C((uint64_t)(a1 + 4), (uint64_t)v54, &qword_1005D6790);
  result = (_QWORD *)sub_10014BD1C((uint64_t)v54, (uint64_t)&v55, &qword_1005D6790);
  if ((v56 & 1) != 0)
    return 0;
  v12 = v55 - 1;
  if (__OFSUB__(v55, 1))
  {
    __break(1u);
  }
  else
  {
    v38 = v55;
    v39 = v4;
    __chkstk_darwin(result);
    v32 = &v48;
    v33 = a2;
    v34 = a3;
    v37 = a3;
    v13 = type metadata accessor for ICSelectionStateModel(0);
    result = Array.firstSearchingBackwards(from:matching:)(&v47, v12, sub_100286650, v31, v8, v13);
    v14 = (void *)v48;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = *((_QWORD *)&v50 + 1);
    v17 = v50;
    v18 = *((_QWORD *)&v51 + 1);
    v19 = v51;
    v20 = v53;
    v40 = v48;
    v41 = v49;
    v42 = v50;
    v43 = v51;
    v44 = v52;
    v45 = BYTE8(v52);
    v46 = v53;
    if (v47)
    {
      v57 = v47;
      v21 = (id)v49;
      v22 = v14;
      sub_100166B74(v15, v17);
      sub_100166B74(v16, v19);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v20);
LABEL_10:

      sub_100012C50(v15, v17);
      sub_100012C50(v16, v19);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18);
      return v57;
    }
    v36 = v13;
    if (!__OFADD__(v38++, 1))
    {
      v35[1] = v35;
      __chkstk_darwin(result);
      v32 = &v40;
      v33 = a2;
      v34 = v24;
      v26 = v25;
      v27 = v14;
      sub_100166B74(v15, v17);
      sub_100166B74(v16, v19);
      swift_bridgeObjectRetain_n(v18, 2);
      v28 = swift_bridgeObjectRetain(v20);
      Array.firstSearchingForwards(from:matching:)(&v57, v38, sub_100284780, v31, v18, v36, v28);
      swift_bridgeObjectRelease(v18);

      v22 = (id)v40;
      v15 = *((_QWORD *)&v41 + 1);
      v21 = (id)v41;
      v16 = *((_QWORD *)&v42 + 1);
      v17 = v42;
      v18 = *((_QWORD *)&v43 + 1);
      v19 = v43;
      v20 = v46;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void sub_1002775BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  char *v15;
  void (*v16)(char **);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35[32];
  char *v36;
  char *v37;

  v2 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[10];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v6 = a1[10];
    else
      v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1[10]);
    v7 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v5);
    if (v7)
      return;
  }
  else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  v8 = a1[7];
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v28 = a1[7];
    else
      v28 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1[7]);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v8);
    if (v29 < 1)
      return;
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return;
  }
  v9 = a1[7];
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v30 = a1[7];
    else
      v30 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1[7]);
    v10 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (!v10)
    {
LABEL_39:
      swift_bridgeObjectRelease(v9);
      return;
    }
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1[7]);
    if (!v10)
      goto LABEL_39;
  }
  if (v10 >= 1)
  {
    v11 = 0;
    v33 = v9;
    v34 = v9 & 0xC000000000000001;
    v32 = v10;
    while (1)
    {
      if (v34)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
      else
        v13 = *(id *)(v9 + 8 * v11 + 32);
      v14 = v13;
      v15 = sub_10015ED64(1, 1);
      v37 = v15;
      v16 = (void (*)(char **))a1[3];
      if (v16)
      {
        v17 = v15;
        v18 = a1[4];
        v36 = v15;
        sub_100166B74((uint64_t)v16, v18);
        v19 = v17;
        v16(&v36);
        sub_100012C50((uint64_t)v16, v18);

      }
      v9 = (uint64_t)&v31;
      __chkstk_darwin(v15);
      *(&v31 - 2) = (uint64_t)a1;
      *(&v31 - 1) = (uint64_t)&v37;
      v20 = sub_100283E6C(sub_1002866B0, (uint64_t)(&v31 - 4));
      v21 = v20;
      v22 = a1[10];
      if ((unint64_t)v22 >> 62)
      {
        if (v22 < 0)
          v27 = a1[10];
        else
          v27 = v22 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1[10]);
        v23 = _CocoaArrayWrapper.endIndex.getter(v27);
        swift_bridgeObjectRelease(v22);
        if (v23 < v21)
        {
LABEL_28:
          __break(1u);
          goto LABEL_39;
        }
      }
      else
      {
        v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v23 < v20)
          goto LABEL_28;
      }
      sub_10026D1B0(v21, v23);
      v24 = (uint64_t)&v37[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v37[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v35, 0, 0);
      sub_100012CE8(v24, (uint64_t)v4, &qword_1005D1508);
      v25 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      LODWORD(v24) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v4, 1, v25);
      sub_100012DDC((uint64_t)v4, &qword_1005D1508);
      if ((_DWORD)v24 != 1)
      {
        v26 = sub_100012E18((uint64_t *)&unk_1005D6780);
        Array.prepend(_:)(&v37, v26);
      }
      ++v11;
      v12 = v37;

      v9 = v33;
      if (v32 == v11)
        goto LABEL_39;
    }
  }
  __break(1u);
}

uint64_t sub_10027793C(void *a1, _QWORD *a2, void *a3)
{
  void (*v6)(void **);
  uint64_t v7;
  id v8;
  uint64_t (*v9)(void **, void **);
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  void *v15;
  void *v16;

  v6 = (void (*)(void **))a2[3];
  if (v6)
  {
    v7 = a2[4];
    v16 = a1;
    sub_100166B74((uint64_t)v6, v7);
    v8 = a1;
    v6(&v16);
    sub_100012C50((uint64_t)v6, v7);

  }
  v9 = (uint64_t (*)(void **, void **))a2[5];
  if (v9)
  {
    v10 = a2[6];
    v16 = a3;
    v15 = a1;
    v11 = a1;
    sub_100166B74((uint64_t)v9, v10);
    v12 = a3;
    v13 = v9(&v16, &v15);
    sub_100012C50((uint64_t)v9, v10);

  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

id sub_100277A48(uint64_t a1, SEL *a2)
{
  void *Strong;
  void *v5;
  id v6;
  uint64_t v7;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate);
  if (!Strong)
    return 0;
  v5 = Strong;
  v6 = objc_msgSend(Strong, *a2, a1);
  swift_unknownObjectRelease(v5, v7);
  return v6;
}

void sub_100277AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[31];
  uint64_t v11;

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(id *)(Strong + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue);

    v9 = sub_100012E18((uint64_t *)&unk_1005D68A0);
    OS_dispatch_queue.sync<A>(execute:)(&v11, a3, a2, v9);

  }
}

void sub_100277B48(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  _QWORD v27[4];
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD v38[9];
  char v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[32];
  void *v43;

  v8 = a1 + 16;
  swift_beginAccess(a1 + 16, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    HIDWORD(v28) = a3;
    v37 = a4;
    v11 = Strong + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
    swift_beginAccess(Strong + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v41, 0, 0);
    v36 = v4;
    v12 = *(void **)v11;
    v32 = *(_QWORD *)(v11 + 8);
    v35 = a2;
    v14 = *(void **)(v11 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    v16 = *(_QWORD *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 40);
    v18 = *(_QWORD *)(v11 + 48);
    v17 = *(_QWORD *)(v11 + 56);
    v31 = *(_QWORD *)(v11 + 64);
    v30 = *(unsigned __int8 *)(v11 + 72);
    v29 = *(_QWORD *)(v11 + 80);
    v34 = v14;
    v19 = v12;
    sub_100166B74(v13, v16);
    sub_100166B74(v15, v18);
    v20 = v17;
    swift_bridgeObjectRetain(v17);
    v21 = v29;
    swift_bridgeObjectRetain(v29);

    v33 = &v28;
    v38[0] = v19;
    v38[1] = v32;
    v38[2] = v14;
    v38[3] = v13;
    v38[4] = v16;
    v38[5] = v15;
    v38[6] = v18;
    v38[7] = v20;
    v38[8] = v31;
    v39 = v30;
    v40 = v29;
    __chkstk_darwin(v22);
    v27[2] = v38;
    v23 = type metadata accessor for ICSelectionStateModel(0);
    OS_dispatch_queue.sync<A>(execute:)(&v43, v35, v27, v23);

    sub_100012C50(v13, v16);
    sub_100012C50(v15, v18);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v20);
    v24 = v43;
    v25 = (void *)sub_100018D60();

    if (v25)
    {
      objc_msgSend(v25, "setAutomaticallyRemoveDeletedTags:", BYTE4(v28) & 1);

      v26 = 0;
    }
    else
    {
      v26 = 1;
    }
    a4 = v37;
  }
  else
  {
    v26 = 1;
  }
  *a4 = v26;
}

id sub_100277D94()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;
  char v12[24];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_observers];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_observers], v12, 1, 0);
  v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(*v3);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v4);
    v10 = *v3;
    *v3 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v10);
    v11.receiver = v1;
    v11.super_class = ObjectType;
    return objc_msgSendSuper2(&v11, "dealloc");
  }
  if (v4 < 0)
    v9 = *v3;
  else
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v3);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v9);
  v5 = (uint64_t)result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 8 * i + 32);
        swift_retain(v8);
      }
      AnyCancellable.cancel()();
      swift_release(v8);
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_100278008(void *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  char *v37;
  id v38;
  uint64_t v39;
  void *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  unsigned int v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  char *v53;
  char *v54;
  id v55;
  unsigned int v56;
  char *v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  char *v73;
  id v74;
  void *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  unsigned __int8 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  char *v106;
  unsigned __int8 v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  id v113;
  void *v114;
  char *v115;
  id v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  char *v122;
  void *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  char *v129;
  NSObject *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  id v135;
  unsigned int (*v136)(uint64_t, uint64_t, uint64_t);
  _QWORD *v137;
  char *v138;
  char *v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  void *v145;
  char *v146;
  _QWORD *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD v157[5];
  uint64_t v158;
  _QWORD v159[10];
  _QWORD v160[10];
  _QWORD v161[10];
  _QWORD aBlock[5];
  uint64_t v163;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v5);
  v140 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v7);
  v137 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100012E18(&qword_1005CEFD0);
  v10 = __chkstk_darwin(v9);
  v149 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v146 = (char *)&v136 - v13;
  v14 = __chkstk_darwin(v12);
  v148 = (char *)&v136 - v15;
  v16 = __chkstk_darwin(v14);
  v151 = (char *)&v136 - v17;
  v18 = __chkstk_darwin(v16);
  v144 = (char *)&v136 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v136 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v136 - v23;
  v25 = type metadata accessor for URL(0);
  v152 = *(_QWORD *)(v25 - 8);
  v26 = __chkstk_darwin(v25);
  v139 = (char *)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v138 = (char *)&v136 - v29;
  __chkstk_darwin(v28);
  v141 = (char *)&v136 - v30;
  v142 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v31 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v32 = (_QWORD *)swift_allocObject(&unk_100563938, 40, 7);
  v32[2] = a1;
  v32[3] = v2;
  v32[4] = ObjectType;
  v33 = swift_allocObject(&unk_100563960, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_100286400;
  *(_QWORD *)(v33 + 24) = v32;
  v147 = v32;
  aBlock[4] = sub_100194900;
  v163 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100016618;
  aBlock[3] = &unk_100563978;
  v34 = _Block_copy(aBlock);
  v35 = v163;
  v153 = a1;
  v36 = v31;
  v143 = v2;
  v37 = v2;
  swift_retain(v33);
  swift_release(v35);
  dispatch_sync(v36, v34);

  _Block_release(v34);
  LOBYTE(v36) = swift_isEscapingClosureAtFileLocation(v33, "", 113, 135, 40, 1);
  swift_release(v33);
  if ((v36 & 1) != 0)
  {
    __break(1u);
    goto LABEL_86;
  }
  v150 = v37;
  v145 = a1;
  if (!a1)
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56);
    v41(v24, 1, 1, v25);
    sub_100012DDC((uint64_t)v24, &qword_1005CEFD0);
    v42 = 0;
LABEL_38:
    v81 = (uint64_t)v146;
    v77 = v37;
    v79 = (uint64_t)v148;
    v82 = (uint64_t)v149;
    v41(v148, 1, 1, v25);
    goto LABEL_42;
  }
  v38 = objc_msgSend(v153, "currentObjectIDURL");
  v39 = v152;
  if (v38)
  {
    v40 = v38;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v38);

    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
    v41(v22, 0, 1, v25);
  }
  else
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56);
    v41(v22, 1, 1, v25);
  }
  sub_10014BD1C((uint64_t)v22, (uint64_t)v24, &qword_1005CEFD0);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v44 = v43(v24, 1, v25);
  v136 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v43;
  if (v44 == 1)
  {
    sub_100012DDC((uint64_t)v24, &qword_1005CEFD0);
    goto LABEL_9;
  }
  v46 = v37;
  v47 = v141;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v141, v24, v25);
  v48 = (uint64_t)v144;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v144, v47, v25);
  v41((char *)v48, 0, 1, v25);
  v49 = (uint64_t)&v46[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess(v49, &v154, 0, 0);
  sub_10014BD1C(v49, (uint64_t)aBlock, (uint64_t *)&unk_1005D24E0);
  sub_100285F64(aBlock, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
  v50 = v39;
  v51 = sub_100192D2C(v48, (uint64_t)aBlock);
  v52 = (void *)sub_1001933C0(v51, (uint64_t)aBlock);

  sub_100285F64(aBlock, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
  sub_100012DDC(v48, &qword_1005CEFD0);
  if (!v52)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v25);
    v42 = 0;
    v37 = v150;
    v45 = v151;
    goto LABEL_35;
  }
  v42 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
  if ((objc_msgSend(v52, "ic_isContainerType") & 1) == 0)
  {
    v56 = objc_msgSend(v52, "ic_isNoteType");
    v45 = v151;
    if (v56)
    {
      v37 = v150;
      if (v42)
      {
        v57 = v42;
        v58 = v52;
        if (objc_msgSend(v52, "ic_isNoteType"))
        {
          v59 = v137;
          *v137 = v52;
          v59[1] = 0;
          v60 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
          v61 = v59;
          v62 = v60;
          v63 = 4;
LABEL_25:
          swift_storeEnumTagMultiPayload(v61, v62, v63);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 1, v60);
          v65 = &v57[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
          swift_beginAccess(&v57[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v161, 33, 0);
          v66 = v52;
          v67 = (uint64_t)v59;
          v45 = v151;
          v68 = (uint64_t)v65;
          v58 = v52;
          sub_100164108(v67, v68, &qword_1005D1508);
          swift_endAccess(v161);
          goto LABEL_26;
        }
        goto LABEL_26;
      }
    }
    else
    {
      v64 = objc_msgSend(v52, "ic_isInvitationType");
      v37 = v150;
      if (!v64)
      {
        if (objc_msgSend(v52, "ic_isBaseAttachmentType"))
        {
          sub_10014BD1C(v49, (uint64_t)v161, (uint64_t *)&unk_1005D24E0);
          sub_100285F64(v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
          v69 = (void *)sub_100194224(v52, (uint64_t)v161);
          v71 = v70;
          sub_100285F64(v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
          if (v69)
          {
            v72 = v152;
            if (v42)
            {
              v73 = v42;
              sub_10015C218(v69, v71, 0);

              (*(void (**)(char *, uint64_t))(v72 + 8))(v141, v25);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v152 + 8))(v141, v25);

            }
            goto LABEL_10;
          }
        }
        (*(void (**)(char *, uint64_t))(v152 + 8))(v141, v25);

LABEL_9:
        v42 = 0;
LABEL_10:
        v45 = v151;
        goto LABEL_35;
      }
      if (v42)
      {
        v57 = v42;
        v58 = v52;
        if (objc_msgSend(v52, "ic_isInvitationType"))
        {
          v59 = v137;
          *v137 = v52;
          v59[1] = 0;
          v60 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
          v61 = v59;
          v62 = v60;
          v63 = 5;
          goto LABEL_25;
        }
LABEL_26:

        (*(void (**)(char *, uint64_t))(v152 + 8))(v141, v25);
        goto LABEL_35;
      }
    }
    (*(void (**)(char *, uint64_t))(v152 + 8))(v141, v25);

    goto LABEL_35;
  }
  v45 = v151;
  v53 = v141;
  if (v42)
  {
    v54 = v42;
    v55 = v52;
    sub_10015C714((uint64_t)v52, 0);

    (*(void (**)(char *, uint64_t))(v152 + 8))(v53, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v152 + 8))(v141, v25);

  }
  v37 = v150;
LABEL_35:
  v74 = objc_msgSend(v153, "currentContainerObjectIDURLs", v136);
  if (!v74)
    goto LABEL_38;
  v75 = v74;
  v76 = (uint64_t)v45;
  v77 = v37;
  v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v25);

  if (*(_QWORD *)(v78 + 16))
  {
    v79 = (uint64_t)v148;
    (*(void (**)(char *, unint64_t, uint64_t))(v152 + 16))(v148, v78 + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80)), v25);
    v80 = 0;
  }
  else
  {
    v80 = 1;
    v79 = (uint64_t)v148;
  }
  v82 = (uint64_t)v149;
  v41((char *)v79, v80, 1, v25);
  swift_bridgeObjectRelease(v78);
  v83 = v136;
  if (v136(v79, 1, v25) != 1)
  {
    v148 = v42;
    v99 = v152;
    v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 32);
    v100(v76, v79, v25);
    v41((char *)v76, 0, 1, v25);
    if (v83(v76, 1, v25) == 1)
    {
      sub_100012DDC(v76, &qword_1005CEFD0);
      v81 = (uint64_t)v146;
      v42 = v148;
      goto LABEL_43;
    }
    v101 = v138;
    v100((uint64_t)v138, v76, v25);
    v102 = (uint64_t)v144;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v144, v101, v25);
    v41((char *)v102, 0, 1, v25);
    v103 = (uint64_t)&v77[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
    swift_beginAccess(&v77[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration], &v155, 0, 0);
    sub_10014BD1C(v103, (uint64_t)v160, (uint64_t *)&unk_1005D24E0);
    sub_100285F64(v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
    v104 = sub_100192D2C(v102, (uint64_t)v160);
    v105 = (void *)sub_1001933C0(v104, (uint64_t)v160);

    sub_100285F64(v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
    sub_100012DDC(v102, &qword_1005CEFD0);
    v106 = v101;
    v81 = (uint64_t)v146;
    if (!v105)
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v106, v25);
      v82 = (uint64_t)v149;
      v77 = v150;
      v42 = v148;
      goto LABEL_43;
    }
    v107 = objc_msgSend(v105, "ic_isContainerType");
    v42 = v148;
    v82 = (uint64_t)v149;
    if ((v107 & 1) != 0)
    {
      if (v148)
      {
        v108 = v148;
        v109 = v148;
LABEL_82:
        v133 = v108;

        v134 = v109;
        v135 = v105;
        sub_10015C714((uint64_t)v105, 0);

        (*(void (**)(char *, uint64_t))(v152 + 8))(v138, v25);
        v82 = (uint64_t)v149;
        v77 = v150;
        goto LABEL_43;
      }
      v132 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
      v42 = v132;
      if (v132)
      {
        v109 = v132;
        v108 = 0;
        goto LABEL_82;
      }
    }
    (*(void (**)(char *, uint64_t))(v152 + 8))(v138, v25);

    v77 = v150;
    goto LABEL_43;
  }
  v81 = (uint64_t)v146;
LABEL_42:
  sub_100012DDC(v79, &qword_1005CEFD0);
  v84 = (uint64_t)v151;
  v41(v151, 1, 1, v25);
  sub_100012DDC(v84, &qword_1005CEFD0);
  if (!v145)
  {
    v41((char *)v81, 1, 1, v25);
    sub_100012DDC(v81, &qword_1005CEFD0);
    v88 = v147;
    goto LABEL_72;
  }
LABEL_43:
  v85 = objc_msgSend(v153, "currentNoteObjectIDURL");
  if (v85)
  {
    v86 = v85;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

    v87 = 0;
  }
  else
  {
    v87 = 1;
  }
  v41((char *)v82, v87, 1, v25);
  sub_10014BD1C(v82, v81, &qword_1005CEFD0);
  v89 = v152;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v81, 1, v25) == 1)
  {
    sub_100012DDC(v81, &qword_1005CEFD0);
LABEL_57:
    v88 = v147;
    goto LABEL_69;
  }
  v90 = v139;
  (*(void (**)(void))(v89 + 32))();
  v91 = (uint64_t)v144;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v144, v90, v25);
  v41((char *)v91, 0, 1, v25);
  v92 = (uint64_t)&v77[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess(&v77[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration], &v156, 0, 0);
  sub_10014BD1C(v92, (uint64_t)v159, (uint64_t *)&unk_1005D24E0);
  sub_100285F64(v159, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
  v93 = sub_100192D2C(v91, (uint64_t)v159);
  v94 = (void *)sub_1001933C0(v93, (uint64_t)v159);

  sub_100285F64(v159, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
  sub_100012DDC(v91, &qword_1005CEFD0);
  if (!v94)
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v25);
    goto LABEL_57;
  }
  v95 = objc_msgSend(v94, "ic_isNoteType");
  v88 = v147;
  if ((v95 & 1) != 0 || objc_msgSend(v94, "ic_isInvitationType"))
  {
    v96 = v152;
    if (v42)
    {
      v97 = v42;
      v98 = v42;
LABEL_64:
      v111 = v97;

      v112 = v98;
      sub_10015C474(v94, 0);

      (*(void (**)(char *, uint64_t))(v96 + 8))(v90, v25);
      goto LABEL_69;
    }
    v110 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
    v42 = v110;
    if (v110)
    {
      v98 = v110;
      v97 = 0;
      goto LABEL_64;
    }
    (*(void (**)(char *, uint64_t))(v96 + 8))(v90, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v152 + 8))(v90, v25);
  }

LABEL_69:
  v113 = objc_msgSend(v153, "currentVirtualSmartFolderIdentifier");
  if (!v113)
  {
LABEL_72:
    if (!v42)
    {
      swift_release(v88);
      return;
    }
    goto LABEL_77;
  }
  v114 = v113;
  if (v42)
  {
    v115 = v42;
  }
  else
  {
    v116 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
    if (!v116)
    {
      swift_release(v88);

      return;
    }
    v115 = (char *)v116;
    v42 = 0;
  }
  v117 = v42;

  v118 = (uint64_t)v140;
  *v140 = v114;
  *(_QWORD *)(v118 + 8) = 0;
  v119 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  swift_storeEnumTagMultiPayload(v118, v119, 4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v118, 0, 1, v119);
  v120 = (uint64_t)&v115[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  swift_beginAccess(&v115[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v157, 33, 0);
  v42 = v115;
  v121 = v114;
  sub_100164108(v118, v120, &qword_1005D1500);
  swift_endAccess(v157);

LABEL_77:
  v122 = v42;
  v123 = *(void **)&v143[v142];
  v124 = swift_allocObject(&unk_1005639B0, 32, 7);
  v125 = v150;
  *(_QWORD *)(v124 + 16) = v150;
  *(_QWORD *)(v124 + 24) = v122;
  v126 = swift_allocObject(&unk_1005639D8, 32, 7);
  *(_QWORD *)(v126 + 16) = sub_10028641C;
  *(_QWORD *)(v126 + 24) = v124;
  v157[4] = sub_100194900;
  v158 = v126;
  v157[0] = _NSConcreteStackBlock;
  v157[1] = 1107296256;
  v157[2] = sub_100016618;
  v157[3] = &unk_1005639F0;
  v127 = _Block_copy(v157);
  v128 = v158;
  v129 = v125;
  v130 = v123;
  v131 = v122;
  swift_retain(v126);
  swift_release(v128);
  dispatch_sync(v130, v127);

  _Block_release(v127);
  LOBYTE(v127) = swift_isEscapingClosureAtFileLocation(v126, "", 113, 198, 40, 1);
  swift_release(v124);
  swift_release(v88);

  swift_release(v126);
  if ((v127 & 1) != 0)
LABEL_86:
    __break(1u);
}

uint64_t sub_100279034(void *a1, char *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t result;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50[32];
  __int128 aBlock;
  uint64_t (*v52)(uint64_t);
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  _BYTE v59[24];
  char v60[32];

  if (a1)
  {
    v5 = objc_msgSend(a1, "selectionState");
    if (v5)
    {
      v6 = v5;
      v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

      v10 = type metadata accessor for JSONDecoder(0);
      v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
      v12 = JSONDecoder.init()(v11);
      v13 = sub_100012E18((uint64_t *)&unk_1005D6860);
      v14 = sub_100016638(&qword_1005D2530, (uint64_t *)&unk_1005D6860, (uint64_t)&protocol conformance descriptor for ICNavigableQueue<A>);
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(&aBlock, v13, v7, v9, v13, v14);
      sub_10013DD30(v7, v9);
      swift_release(v12);
      v15 = v52;
      v47 = v53;
      v48 = aBlock;
      v46 = v54;
      v45 = v55;
      v44 = v56;
      v43 = v57;
      v42 = v58;
      v16 = &a2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
      swift_beginAccess(&a2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue], v50, 1, 0);
      v17 = *(void **)v16;
      v19 = (void *)*((_QWORD *)v16 + 2);
      v18 = *((_QWORD *)v16 + 3);
      v20 = *((_QWORD *)v16 + 4);
      v21 = *((_QWORD *)v16 + 5);
      v22 = *((_QWORD *)v16 + 6);
      v49 = *((_QWORD *)v16 + 7);
      v23 = *((_QWORD *)v16 + 10);
      *(_OWORD *)v16 = v48;
      *((_QWORD *)v16 + 2) = v15;
      *(_OWORD *)(v16 + 24) = v47;
      *((_QWORD *)v16 + 5) = v46;
      *((_OWORD *)v16 + 3) = v45;
      *((_QWORD *)v16 + 8) = v44;
      v16[72] = v43;
      *((_QWORD *)v16 + 10) = v42;

      sub_100012C50(v18, v20);
      sub_100012C50(v21, v22);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v49);
    }
  }
  v24 = swift_allocObject(&unk_100563A28, 24, 7);
  *(_QWORD *)(v24 + 16) = a2;
  v25 = swift_allocObject(&unk_100563A50, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_100286448;
  *(_QWORD *)(v25 + 24) = v24;
  v26 = &a2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue], v60, 1, 0);
  v27 = *((_QWORD *)v26 + 3);
  v28 = *((_QWORD *)v26 + 4);
  *((_QWORD *)v26 + 3) = sub_100286450;
  *((_QWORD *)v26 + 4) = v25;
  v29 = a2;
  sub_100012C50(v27, v28);
  v30 = swift_allocObject(&unk_100563A78, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a3;
  v31 = swift_allocObject(&unk_100563AA0, 32, 7);
  *(_QWORD *)(v31 + 16) = sub_100286474;
  *(_QWORD *)(v31 + 24) = v30;
  v32 = *((_QWORD *)v26 + 5);
  v33 = *((_QWORD *)v26 + 6);
  *((_QWORD *)v26 + 5) = sub_10028647C;
  *((_QWORD *)v26 + 6) = v31;
  v34 = v29;
  sub_100012C50(v32, v33);
  swift_beginAccess(v26, v59, 33, 0);
  v35 = *(void **)v26;
  v36 = swift_allocObject(&unk_100563AC8, 24, 7);
  *(_QWORD *)(v36 + 16) = v26;
  v37 = swift_allocObject(&unk_100563AF0, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_1002864B8;
  *(_QWORD *)(v37 + 24) = v36;
  *((_QWORD *)&v53 + 1) = sub_100194900;
  v54 = v37;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v52 = sub_100016618;
  *(_QWORD *)&v53 = &unk_100563B08;
  v38 = _Block_copy(&aBlock);
  v39 = v54;
  v40 = v35;
  swift_retain(v37);
  swift_release(v39);
  dispatch_sync(v40, v38);

  _Block_release(v38);
  result = swift_isEscapingClosureAtFileLocation(v37, "", 112, 794, 26, 1);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_endAccess(v59);
    swift_release(v36);
    return swift_release(v37);
  }
  return result;
}

uint64_t sub_10027941C(void *a1, uint64_t a2)
{
  uint64_t (**v4)();
  uint64_t result;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t (*v10)();
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t (*v17)();
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  id v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t (*v42)();
  void *v43;
  char v44[24];
  _QWORD v45[11];

  type metadata accessor for ICSelectionStateUtilities();
  v4 = (uint64_t (**)())(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration);
  result = swift_beginAccess(v4, v44, 0, 0);
  if (a1)
  {
    v43 = a1;
    v7 = *v4;
    v6 = (uint64_t)v4[1];
    v9 = v4[2];
    v8 = (uint64_t)v4[3];
    v11 = v4[4];
    v10 = v4[5];
    v12 = (uint64_t)v4[6];
    v13 = (uint64_t)v4[7];
    v15 = (uint64_t)v4[8];
    v14 = (uint64_t)v4[9];
    if (*v4)
    {
      v16 = v4[5];
      v17 = v10;
      swift_retain(v6);
      swift_retain(v8);
      v18 = v11;
      sub_100166B74(v12, v13);
      sub_100166B74(v15, v14);
      v10 = v16;
      v19 = v15;
      v20 = v11;
      v21 = v14;
      v22 = v12;
      v23 = v13;
      v24 = v8;
      v25 = v20;
      v26 = v7;
      v27 = (uint64_t)v7;
      v7 = (uint64_t (*)())v6;
      v28 = v9;
      v29 = (uint64_t)v9;
      v30 = v24;
    }
    else
    {
      v19 = (uint64_t)v4[8];
      v15 = 0;
      v20 = v4[4];
      v21 = 0;
      v22 = (uint64_t)v4[6];
      v12 = 0;
      v23 = (uint64_t)v4[7];
      v13 = 0;
      v16 = 0;
      v24 = v8;
      v25 = 0;
      v27 = 0;
      v29 = (uint64_t)v9;
      v30 = 0;
      v28 = variable initialization expression of AsyncChannel.Iterator.active;
      v26 = variable initialization expression of AsyncChannel.Iterator.active;
    }
    v35 = v19;
    v45[0] = v26;
    v45[1] = v7;
    v45[2] = v28;
    v45[3] = v30;
    v45[4] = v25;
    v45[5] = v16;
    v45[6] = v12;
    v45[7] = v13;
    v45[8] = v15;
    v45[9] = v21;
    v36 = v29;
    v37 = v27;
    v38 = v24;
    v39 = v23;
    v40 = v20;
    v41 = v22;
    v42 = v10;
    sub_100284B60(v27, v6, v29, v24, v20, v10, v22, v23, v19, v14);
    v34 = v6;
    v31 = v16;
    v32 = v43;
    swift_retain(v7);
    swift_retain(v30);
    v33 = v25;
    sub_100166B74(v12, v13);
    sub_100166B74(v15, v21);
    sub_10018D654((uint64_t)v32, 0, (uint64_t)v45);

    swift_release(v30);
    swift_release(v7);
    sub_100012C50(v12, v13);
    sub_100012C50(v15, v21);

    swift_release(v30);
    swift_release(v7);
    sub_100012C50(v12, v13);
    sub_100012C50(v15, v21);

    return sub_100016678(v37, v34, v36, v38, v40, v42, v41, v39, v35, v14);
  }
  return result;
}

uint64_t sub_10027969C(char *a1, void *a2, uint64_t a3)
{
  void *v5;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  const void *v11;
  id v12;
  uint64_t v13;
  _QWORD v14[7];
  unsigned __int8 v15;

  v5 = *(void **)(a3 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_persistenceConfiguration);
  if ((sub_10018E42C(a1, a2) & 1) != 0)
    return 1;
  if (a1 && a2)
  {
    v7 = a1;
    v8 = sub_1000187EC();
    if (v8)
    {
      v9 = (void *)v8;
      v10 = objc_msgSend(v5, "makeModernBackgroundContext");
      if (v10)
      {
        v11 = v10;
        v12 = (id)(*((uint64_t (**)(void))v10 + 2))();
        _Block_release(v11);
        __chkstk_darwin(v13);
        v14[2] = v12;
        v14[3] = v9;
        v14[4] = v7;
        NSManagedObjectContext.performAndWait<A>(_:)(sub_1002864D0, v14, &type metadata for Bool);

        return v15;
      }

    }
  }
  return 0;
}

void sub_10027980C(char *a1, char a2, char a3, char a4, char a5)
{
  char *v5;
  char *v6;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *Strong;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  char *v26;
  char *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char v36[16];
  _QWORD aBlock[5];
  uint64_t v38;
  char v39[32];
  _QWORD v40[11];

  v6 = v5;
  v11 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v12 = *(void **)&v5[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v13 = type metadata accessor for ICSelectionStateModel(0);
  v14 = v12;
  OS_dispatch_queue.sync<A>(execute:)(v40, sub_100285F40, v36, v13);

  v15 = (void *)v40[0];
  type metadata accessor for ICSelectionStateUtilities();
  v16 = (uint64_t)&v6[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration], v39, 0, 0);
  sub_10014BD1C(v16, (uint64_t)v40, (uint64_t *)&unk_1005D24E0);
  sub_100285F64(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
  sub_10018D654((uint64_t)a1, 0, (uint64_t)v40);
  sub_100285F64(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
  if ((a4 & 1) != 0
    || (static NSObject.== infix(_:_:)(v15) & 1) == 0
    || *(_QWORD *)&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult])
  {
    if ((a2 & 1) != 0 && (a3 & 1) == 0)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
      if (Strong)
      {
        v18 = Strong;
        objc_msgSend(Strong, "willAdoptModelForSelectionStateController:isNavigating:", v6, a5 & 1);
        swift_unknownObjectRelease(v18, v19);
      }
    }
    v20 = *(void **)&v6[v11];
    v21 = swift_allocObject(&unk_1005632D0, 33, 7);
    *(_QWORD *)(v21 + 16) = v6;
    *(_QWORD *)(v21 + 24) = a1;
    *(_BYTE *)(v21 + 32) = a3 & 1;
    v22 = swift_allocObject(&unk_1005632F8, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_100285FDC;
    *(_QWORD *)(v22 + 24) = v21;
    aBlock[4] = sub_100194900;
    v38 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100016618;
    aBlock[3] = &unk_100563310;
    v23 = _Block_copy(aBlock);
    v24 = v38;
    v25 = v20;
    v26 = v6;
    v27 = a1;
    swift_retain(v22);
    swift_release(v24);
    dispatch_sync(v25, v23);

    _Block_release(v23);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation(v22, "", 113, 229, 40, 1);
    swift_release(v22);
    if ((v25 & 1) != 0)
    {
      __break(1u);
      return;
    }
    if ((a2 & 1) == 0
      || (a3 & 1) != 0
      || (v28 = (void *)swift_unknownObjectWeakLoadStrong(&v26[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate])) == 0)
    {
      swift_release(v21);
      goto LABEL_15;
    }
    v29 = v28;
    objc_msgSend(v28, "selectionStateController:didAdoptModelFromOldModel:isNavigating:", v26, v15, a5 & 1);
    swift_release(v21);
    v31 = v29;
  }
  else
  {
    if ((a2 & 1) == 0)
      goto LABEL_15;
    if ((a3 & 1) != 0)
      goto LABEL_15;
    v32 = (void *)swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
    if (!v32)
      goto LABEL_15;
    v33 = v32;
    if ((objc_msgSend(v32, "respondsToSelector:", "selectionStateController:didIgnoreDuplicateModel:") & 1) == 0)
    {

      swift_unknownObjectRelease(v33, v34);
      return;
    }
    objc_msgSend(v33, "selectionStateController:didIgnoreDuplicateModel:", v6, a1);
    v31 = v33;
  }
  swift_unknownObjectRelease(v31, v30);
LABEL_15:

}

double sub_100279B4C(uint64_t a1, void *a2, char a3)
{
  double result;
  _BYTE v6[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v6, 33, 0);
  sub_100275A90(a2, 1, a3);
  *(_QWORD *)&result = swift_endAccess(v6).n128_u64[0];
  return result;
}

uint64_t sub_100279BB8(void *a1, uint64_t a2, char a3, uint64_t (*a4)(), uint64_t a5)
{
  char *v5;
  char *v8;
  void *Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  char *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void **aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;

  v8 = &v5[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(Strong, "willAdoptModelForSelectionStateController:isNavigating:", v5, 0);
    swift_unknownObjectRelease(v10, v11);
  }
  v12 = *(void **)&v5[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v13 = swift_allocObject(&unk_100563758, 32, 7);
  *(_QWORD *)(v13 + 16) = v5;
  *(_QWORD *)(v13 + 24) = a1;
  v14 = swift_allocObject(&unk_100563780, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_100286648;
  *(_QWORD *)(v14 + 24) = v13;
  v32 = sub_100194900;
  v33 = v14;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_100016618;
  v31 = &unk_100563798;
  v15 = _Block_copy(&aBlock);
  v16 = v33;
  v17 = v12;
  v18 = v5;
  v19 = a1;
  swift_retain(v14);
  swift_release(v16);
  dispatch_sync(v17, v15);

  _Block_release(v15);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v14, "", 113, 260, 40, 1);
  result = swift_release(v14);
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v21 = swift_unknownObjectWeakLoadStrong(v8);
    if (v21)
    {
      v22 = (void *)v21;
      if (a4)
      {
        v32 = a4;
        v33 = a5;
        aBlock = _NSConcreteStackBlock;
        v29 = 1107296256;
        v30 = sub_100206734;
        v31 = &unk_1005637C0;
        a4 = (uint64_t (*)())_Block_copy(&aBlock);
        v23 = v33;
        swift_retain(a5);
        swift_release(v23);
      }
      objc_msgSend(v22, "selectionStateController:didAdoptModelFromArchive:systemPaperAlert:completion:", v18, a2, a3 & 1, a4);
      swift_unknownObjectRelease(v22, v24);
      _Block_release(a4);
    }
    return swift_release(v13);
  }
  return result;
}

void sub_100279EB8(int a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  id v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  _BYTE *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *Strong;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  char *v49;
  void *v50;
  char *v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  _QWORD v57[2];
  int v58;
  uint64_t v59;
  char *v60;
  id v61;
  uint64_t v62;
  char *v63;
  _QWORD v64[5];
  uint64_t v65;
  uint64_t v66;
  objc_super v67;
  uint64_t v68;
  uint64_t v69;
  char v70[32];
  _QWORD v71[11];

  v3 = v2;
  LODWORD(v61) = a2;
  v5 = sub_100012E18(&qword_1005D1508);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v57 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v57 - v12;
  v14 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v14);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v18 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v63 = v2;
  v19 = v18;
  v20 = sub_100012E18(&qword_1005D2540);
  OS_dispatch_queue.sync<A>(execute:)(v71, sub_100286318, &v62, v20);

  if (v71[0])
  {
    v58 = a1;
    v57[1] = v8;
    v59 = v17;
    v22 = *(void **)&v3[v17];
    __chkstk_darwin(v21);
    v60 = v23;
    v57[-2] = v3;
    v24 = type metadata accessor for ICSelectionStateModel(0);
    v25 = v22;
    v26 = v60;
    OS_dispatch_queue.sync<A>(execute:)(v71, sub_100285F40, &v57[-4], v24);

    v27 = (void *)v71[0];
    type metadata accessor for ICSelectionStateUtilities();
    v28 = (uint64_t)&v3[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
    swift_beginAccess(&v3[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration], v70, 0, 0);
    sub_10014BD1C(v28, (uint64_t)v71, (uint64_t *)&unk_1005D24E0);
    sub_100285F64(v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
    sub_10018D654((uint64_t)v26, 0, (uint64_t)v71);
    sub_100285F64(v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
    v29 = (uint64_t)&v26[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
    swift_beginAccess(&v26[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], &v69, 0, 0);
    sub_100012CE8(v29, (uint64_t)v16, &qword_1005D1500);
    v30 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    LODWORD(v29) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30);
    sub_100012DDC((uint64_t)v16, &qword_1005D1500);
    if ((_DWORD)v29 == 1
      && (v31 = (uint64_t)&v26[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection],
          swift_beginAccess(&v26[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], &v68, 0, 0),
          sub_100012CE8(v31, (uint64_t)v13, &qword_1005D1508),
          v32 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0),
          LODWORD(v31) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v13, 1, v32), sub_100012DDC((uint64_t)v13, &qword_1005D1508), (_DWORD)v31 == 1))
    {

    }
    else
    {
      v33 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
      v34 = objc_allocWithZone(v33);
      *(_QWORD *)&v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = 0;
      v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = v61 & 1;
      v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
      v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
      v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
      v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = v58 & 1;
      v34[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
      v67.receiver = v34;
      v67.super_class = v33;
      v35 = objc_msgSendSuper2(&v67, "init");
      v36 = (uint64_t)&v26[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v26[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], &v66, 0, 0);
      sub_100012CE8(v36, (uint64_t)v11, &qword_1005D1508);
      v37 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v11, 1, v37) != 1)
      {
        v38 = (char *)&loc_10027A2D4 + dword_10027A624[swift_getEnumCaseMultiPayload(v11, v37)];
        __asm { BR              X10 }
      }
      v61 = v35;
      v39 = &v3[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate];
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
      if (Strong)
      {
        v41 = Strong;
        objc_msgSend(Strong, "willAdoptModelForSelectionStateController:isNavigating:", v3, 0);
        swift_unknownObjectRelease(v41, v42);
      }
      v43 = *(void **)&v3[v59];
      v44 = swift_allocObject(&unk_1005636B8, 32, 7);
      *(_QWORD *)(v44 + 16) = v3;
      *(_QWORD *)(v44 + 24) = v26;
      v45 = swift_allocObject(&unk_1005636E0, 32, 7);
      *(_QWORD *)(v45 + 16) = sub_100286330;
      *(_QWORD *)(v45 + 24) = v44;
      v64[4] = sub_100194900;
      v65 = v45;
      v64[0] = _NSConcreteStackBlock;
      v64[1] = 1107296256;
      v64[2] = sub_100016618;
      v64[3] = &unk_1005636F8;
      v46 = _Block_copy(v64);
      v47 = v65;
      v48 = v43;
      v49 = v3;
      v50 = v26;
      v51 = v49;
      swift_retain(v45);
      v52 = v50;
      swift_release(v47);
      dispatch_sync(v48, v46);

      _Block_release(v46);
      LOBYTE(v47) = swift_isEscapingClosureAtFileLocation(v45, "", 113, 301, 40, 1);
      swift_release(v45);
      if ((v47 & 1) != 0)
      {
        __break(1u);
        JUMPOUT(0x10027A624);
      }
      v53 = v27;
      v54 = (void *)swift_unknownObjectWeakLoadStrong(v39);
      if (v54)
      {
        v55 = v54;
        objc_msgSend(v54, "selectionStateController:didAdoptModelFromOldModel:isNavigating:", v51, v53, 0);
        swift_release(v44);

        swift_unknownObjectRelease(v55, v56);
      }
      else
      {
        swift_release(v44);

      }
    }
  }
}

uint64_t sub_10027A63C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v19[16];
  _QWORD *v20;
  _QWORD v21[9];
  char v22;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;

  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v24, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v21[0] = *(_QWORD *)v2;
  v4 = (void *)v21[0];
  v21[1] = v3;
  v21[2] = v5;
  v21[3] = v6;
  v21[4] = v8;
  v21[5] = v7;
  v21[6] = v10;
  v21[7] = v9;
  v21[8] = v11;
  v22 = v12;
  v23 = v13;
  v20 = v21;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  v16 = sub_100012E18(&qword_1005D2540);
  OS_dispatch_queue.sync<A>(execute:)(&v25, sub_10028635C, v19, v16);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  result = swift_bridgeObjectRelease(v9);
  *a2 = v25;
  return result;
}

void sub_10027A784(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char **a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  char *v21;
  _BYTE v24[16];
  _QWORD *v25;
  _QWORD v26[9];
  char v27;
  uint64_t v28;
  _BYTE v29[32];
  void *v30;

  v5 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v29, 0, 0);
  v7 = *(void **)v5;
  v6 = *(_QWORD *)(v5 + 8);
  v8 = *(void **)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v10 = *(_QWORD *)(v5 + 32);
  v11 = *(_QWORD *)(v5 + 40);
  v13 = *(_QWORD *)(v5 + 48);
  v12 = *(_QWORD *)(v5 + 56);
  v14 = *(_QWORD *)(v5 + 64);
  v15 = *(_BYTE *)(v5 + 72);
  v16 = *(_QWORD *)(v5 + 80);
  v26[0] = v7;
  v26[1] = v6;
  v26[2] = v8;
  v26[3] = v9;
  v26[4] = v10;
  v26[5] = v11;
  v26[6] = v13;
  v26[7] = v12;
  v26[8] = v14;
  v27 = v15;
  v28 = v16;
  v25 = v26;
  v17 = v8;
  v18 = v7;
  sub_100166B74(v9, v10);
  sub_100166B74(v11, v13);
  v19 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v16);
  OS_dispatch_queue.sync<A>(execute:)(&v30, a2, v24, v19);

  sub_100012C50(v9, v10);
  sub_100012C50(v11, v13);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v12);
  v20 = v30;
  v21 = sub_10015ED64(a3, 1);

  *a4 = v21;
}

uint64_t sub_10027A930(void *a1, uint64_t a2)
{
  char *v2;
  char *v5;
  void *Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  char *v15;
  id v16;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v5 = &v2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, "willAdoptModelForSelectionStateController:isNavigating:", v2, 0);
    swift_unknownObjectRelease(v7, v8);
  }
  v9 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v10 = swift_allocObject(&unk_100563640, 32, 7);
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = a1;
  v11 = swift_allocObject(&unk_100563668, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_100286648;
  *(_QWORD *)(v11 + 24) = v10;
  v22[4] = sub_100194900;
  v23 = v11;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100016618;
  v22[3] = &unk_100563680;
  v12 = _Block_copy(v22);
  v13 = v23;
  v14 = v9;
  v15 = v2;
  v16 = a1;
  swift_retain(v11);
  swift_release(v13);
  dispatch_sync(v14, v12);

  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 113, 312, 40, 1);
  result = swift_release(v11);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v19 = (void *)swift_unknownObjectWeakLoadStrong(v5);
    if (v19)
    {
      v20 = v19;
      if ((objc_msgSend(v19, "respondsToSelector:", "selectionStateController:didAdoptInstantNoteModelFromArchive:") & 1) != 0)objc_msgSend(v20, "selectionStateController:didAdoptInstantNoteModelFromArchive:", v15, a2);
      swift_release(v10);
      return swift_unknownObjectRelease(v20, v21);
    }
    else
    {
      return swift_release(v10);
    }
  }
  return result;
}

uint64_t sub_10027AB74(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  void **v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void **v9;
  void **v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void **v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  _QWORD v40[9];
  char v41;
  uint64_t v42;
  void **aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v2 = v1;
  if (!a1)
  {
    v38 = 0;
    v39 = 0;
LABEL_13:
    v21 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v22 = JSONEncoder.init()();
    __chkstk_darwin(v22);
    v34 = v2;
    v24 = v23;
    v25 = sub_100012E18((uint64_t *)&unk_1005D6860);
    OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_1002862E0, v33, v25);

    v26 = aBlock;
    v27 = v45;
    v28 = (uint64_t)v46;
    v29 = (uint64_t)v47;
    v30 = v49;
    v40[0] = aBlock;
    v40[1] = v44;
    v40[2] = v45;
    v40[3] = v46;
    v40[4] = v47;
    v40[5] = v48;
    v35 = v48;
    v40[6] = v49;
    v40[7] = v50;
    v37 = v50;
    v40[8] = v51;
    v41 = v52;
    v36 = v53;
    v42 = v53;
    v31 = sub_100016638(&qword_1005D2538, (uint64_t *)&unk_1005D6860, (uint64_t)&protocol conformance descriptor for ICNavigableQueue<A>);
    v32 = dispatch thunk of JSONEncoder.encode<A>(_:)(v40, v25, v31);

    sub_100012C50(v28, v29);
    sub_100012C50(v35, v30);
    swift_release(v22);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v37);
    sub_100012C50((uint64_t)v38, v39);
    return v32;
  }
  v3 = a1;
  v4 = (void **)sub_1000189CC();
  v5 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  __chkstk_darwin(v4);
  v34 = v1;
  v7 = v6;
  v8 = sub_100012E18(&qword_1005D1230);
  OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_100286630, v33, v8);

  v9 = aBlock;
  if (!v4)
  {
    if (!aBlock)
      goto LABEL_8;
LABEL_10:

    goto LABEL_11;
  }
  if (!aBlock)
  {
    v9 = v4;
    goto LABEL_10;
  }
  sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v10 = v4;
  v11 = static NSObject.== infix(_:_:)(v10);

  if ((v11 & 1) != 0)
  {
LABEL_8:

    v38 = 0;
    v39 = 0;
    goto LABEL_13;
  }
LABEL_11:
  v12 = *(void **)&v2[v5];
  v13 = swift_allocObject(&unk_1005635C8, 32, 7);
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v3;
  v14 = swift_allocObject(&unk_1005635F0, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_100286648;
  *(_QWORD *)(v14 + 24) = v13;
  v47 = sub_100194900;
  v48 = v14;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_100016618;
  v46 = &unk_100563608;
  v15 = _Block_copy(&aBlock);
  v16 = v48;
  v17 = v3;
  v18 = v12;
  v19 = v2;
  swift_retain(v14);
  swift_release(v16);
  dispatch_sync(v18, v15);

  _Block_release(v15);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v14, "", 113, 322, 44, 1);
  result = swift_release(v14);
  if ((v15 & 1) == 0)
  {
    v38 = sub_100286648;
    v39 = v13;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

double sub_10027AFA4(uint64_t a1, void *a2, char a3)
{
  double result;
  _BYTE v6[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v6, 33, 0);
  sub_100275A90(a2, a3, 0);
  *(_QWORD *)&result = swift_endAccess(v6).n128_u64[0];
  return result;
}

double sub_10027B010@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  double result;
  _BYTE v18[24];

  v3 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v18, 0, 0);
  v5 = *(void **)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  v15 = v6;
  v16 = v5;
  sub_100166B74(v7, v8);
  sub_100166B74(v9, v10);
  swift_bridgeObjectRetain(v11);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v14).n128_u64[0];
  return result;
}

uint64_t sub_10027B168()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  char *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v2 = swift_allocObject(&unk_1005634D8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_100563500, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100286270;
  *(_QWORD *)(v3 + 24) = v2;
  v10[4] = sub_100194900;
  v11 = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100016618;
  v10[3] = &unk_100563518;
  v4 = _Block_copy(v10);
  v5 = v11;
  v6 = v1;
  v7 = v0;
  swift_retain(v3);
  swift_release(v5);
  dispatch_sync(v6, v4);

  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 113, 334, 40, 1);
  swift_release(v2);
  result = swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_10027B29C(uint64_t a1)
{
  void **v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t result;
  _QWORD aBlock[5];
  uint64_t v10;
  _BYTE v11[24];

  v1 = (void **)(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v11, 33, 0);
  v2 = *v1;
  v3 = swift_allocObject(&unk_100563550, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  v4 = swift_allocObject(&unk_100563578, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_100286298;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_100194900;
  v10 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100016618;
  aBlock[3] = &unk_100563590;
  v5 = _Block_copy(aBlock);
  v6 = v10;
  v7 = v2;
  swift_retain(v4);
  swift_release(v6);
  dispatch_sync(v7, v5);

  _Block_release(v5);
  result = swift_isEscapingClosureAtFileLocation(v4, "", 112, 779, 26, 1);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_endAccess(v11);
    swift_release(v3);
    return swift_release(v4);
  }
  return result;
}

void sub_10027B41C(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  char v38;
  id v39;
  id v40;
  _QWORD *v41;
  void *v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  char *v48;
  char *v49;
  void *Strong;
  void *v51;
  unsigned int v52;
  uint64_t v53;
  Class isa;
  objc_class *v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  id v59;
  void *v60;
  char *v61;
  id v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  void (*v68)();
  void *v69;
  void *v70;
  unsigned int v71;
  uint64_t v72;
  id v73;
  char *v74;
  char *v75;
  void *v76;
  id v77;
  uint64_t v78;
  id v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t *v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t *v95;
  char *v96;
  void *v97;
  void *v98;
  char v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  id v103;
  uint64_t *v104;
  void *v105;
  char *v106;
  objc_super v107;
  _QWORD v108[3];
  char *v109;
  char *v110;
  char v111[24];
  id aBlock[5];
  uint64_t v113;

  v105 = a1;
  v2 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v2);
  v104 = (uint64_t *)((char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = v1;
  v4 = (uint64_t)&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration], v111, 0, 0);
  if (*(_QWORD *)v4)
  {
    v6 = *(_QWORD *)(v4 + 64);
    v5 = *(_QWORD *)(v4 + 72);
    v8 = *(_QWORD *)(v4 + 48);
    v7 = *(_QWORD *)(v4 + 56);
    v9 = *(void **)(v4 + 32);
    v10 = *(_QWORD *)(v4 + 24);
    v11 = *(_QWORD *)(v4 + 8);
    v12 = *(id *)(v4 + 40);
    swift_retain(v11);
    swift_retain(v10);
    v13 = v9;
    sub_100166B74(v8, v7);
    sub_100166B74(v6, v5);

    swift_release(v10);
    swift_release(v11);
    sub_100012C50(v8, v7);
    sub_100012C50(v6, v5);
    if (v9)
    {
      v14 = *(_QWORD *)v4;
      if (*(_QWORD *)v4)
      {
        v16 = *(_QWORD *)(v4 + 64);
        v15 = *(_QWORD *)(v4 + 72);
        v102 = *(_QWORD **)(v4 + 56);
        v17 = *(void **)(v4 + 40);
        v101 = *(_QWORD *)(v4 + 48);
        v19 = *(_QWORD *)(v4 + 24);
        v18 = *(void **)(v4 + 32);
        v21 = *(_QWORD *)(v4 + 8);
        v20 = *(_QWORD *)(v4 + 16);
        v103 = v13;
        v22 = v14;
        v23 = v20;
        v24 = v101;
        v25 = (uint64_t)v102;
        sub_100284B60(v22, v21, v23, v19, v18, v17, v101, (uint64_t)v102, v16, v15);
        swift_release(v19);
        swift_release(v21);

        sub_100012C50(v24, v25);
        v26 = sub_100012C50(v16, v15);
        if (!v17)
        {

          return;
        }
        v27 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
        v28 = v106;
        __chkstk_darwin(v26);
        v100 = v28;
        v30 = v29;
        v31 = v17;
        v32 = sub_100012E18(&qword_1005D67C8);
        OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_100286608, &v101 - 4, v32);

        v34 = aBlock[0];
        if (aBlock[0])
        {
          v35 = v105;
          if (!v105)
          {

            goto LABEL_13;
          }
          sub_1000163BC(0, &qword_1005D67D0, ICTagSelection_ptr);
          v36 = v35;
          v37 = v34;
          v38 = static NSObject.== infix(_:_:)(v37);

          if ((v38 & 1) == 0)
          {
LABEL_13:
            v110 = 0;
            __chkstk_darwin(v33);
            v100 = v28;
            v40 = v39;
            OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_100286608, &v101 - 4, v32);

            v41 = aBlock[0];
            if (!v41)
            {
              v68 = 0;
              goto LABEL_34;
            }
            if (v35 && !objc_msgSend(v35, "isEmpty"))
            {
              v68 = 0;
              v41 = 0;
              goto LABEL_34;
            }
            v109 = 0;
            v42 = *(void **)&v28[v27];
            v43 = (_QWORD *)swift_allocObject(&unk_100563460, 40, 7);
            v43[2] = &v110;
            v43[3] = v28;
            v43[4] = &v109;
            v44 = swift_allocObject(&unk_100563488, 32, 7);
            *(_QWORD *)(v44 + 16) = sub_100286190;
            *(_QWORD *)(v44 + 24) = v43;
            v102 = v43;
            aBlock[4] = sub_100194900;
            v113 = v44;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = (id)1107296256;
            aBlock[2] = sub_100016618;
            aBlock[3] = &unk_1005634A0;
            v45 = _Block_copy(aBlock);
            v46 = v113;
            v47 = v42;
            v48 = v28;
            swift_retain(v44);
            swift_release(v46);
            dispatch_sync(v47, v45);

            _Block_release(v45);
            LOBYTE(v45) = swift_isEscapingClosureAtFileLocation(v44, "", 113, 353, 44, 1);
            swift_release(v44);
            if ((v45 & 1) != 0)
            {
              __break(1u);
              return;
            }
            v49 = &v48[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate];
            Strong = (void *)swift_unknownObjectWeakLoadStrong(&v48[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
            v35 = v105;
            if (Strong
              && (v51 = Strong,
                  v52 = objc_msgSend(Strong, "shouldRevertToDefaultFolderWhenUnselectingTagsForSelectionStateController:", v48), swift_unknownObjectRelease(v51, v53), v52))
            {
              sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
              isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
              v55 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
              v56 = objc_allocWithZone(v55);
              v57 = swift_unknownObjectWeakInit(&v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
              v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
              swift_unknownObjectWeakAssign(v57, 0);
              v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
              v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 0;
              *(_QWORD *)&v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
              v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
              *(_QWORD *)&v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
              *(_QWORD *)&v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = isa;
              v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
              *(_QWORD *)&v56[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
              v107.receiver = v56;
              v107.super_class = v55;
              v58 = (char *)objc_msgSendSuper2(&v107, "init");
              v59 = v110;
              if (v110)
              {
                v101 = type metadata accessor for ICSelectionStateUtilities();
                v60 = *(void **)&v106[v27];
                __chkstk_darwin(v101);
                v100 = v48;
                v61 = (char *)v59;
                v62 = v60;
                v63 = sub_100012E18(&qword_1005D1230);
                OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_10028661C, &v101 - 4, v63);

                v64 = aBlock[0];
                sub_10014BD1C(v4, (uint64_t)aBlock, (uint64_t *)&unk_1005D24E0);
                sub_100285F64(aBlock, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
                v65 = v58;
                v66 = v104;
                sub_1001905E8(v64, (uint64_t)aBlock, v58, v104);

                sub_100285F64(aBlock, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
                v67 = (uint64_t)&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
                swift_beginAccess(&v61[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v108, 33, 0);
                sub_100164108((uint64_t)v66, v67, &qword_1005D1500);
                swift_endAccess(v108);
                v58 = v61;
              }
              v35 = v105;
            }
            else
            {
              v69 = (void *)swift_unknownObjectWeakLoadStrong(v49);
              if (v69
                && (v70 = v69,
                    v71 = objc_msgSend(v69, "shouldRevertToAllTagsWhenUnselectingTagsForSelectionStateController:", v48), swift_unknownObjectRelease(v70, v72), v71))
              {
                v73 = objc_allocWithZone((Class)ICTagSelection);
                v58 = (char *)objc_msgSend(v73, "initWithManagedObjectContext:mode:", v103, 1);
                if (v110)
                {
                  v74 = v110;
                  sub_10015C5CC(v58, 0);

                }
              }
              else
              {
                v58 = v110;
                if (v109)
                {
                  v110 = v109;
                  v75 = v109;
                }
                else
                {
                  if (!v110)
                  {
                    v41 = v102;
                    goto LABEL_33;
                  }
                  v101 = type metadata accessor for ICSelectionStateUtilities();
                  v76 = *(void **)&v106[v27];
                  __chkstk_darwin(v101);
                  v100 = v48;
                  v58 = v58;
                  v77 = v76;
                  v78 = sub_100012E18(&qword_1005D1230);
                  OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_10028661C, &v101 - 4, v78);

                  v79 = aBlock[0];
                  sub_10014BD1C(v4, (uint64_t)aBlock, (uint64_t *)&unk_1005D24E0);
                  sub_100285F64(aBlock, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
                  v80 = v104;
                  sub_1001905E8(v79, (uint64_t)aBlock, 0, v104);
                  sub_100285F64(aBlock, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);

                  v81 = (uint64_t)&v58[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
                  swift_beginAccess(&v58[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v108, 33, 0);
                  sub_100164108((uint64_t)v80, v81, &qword_1005D1500);
                  swift_endAccess(v108);
                }
              }
            }
            v41 = v102;

LABEL_33:
            v68 = sub_100286190;
            v28 = v106;
LABEL_34:
            if (v110)
            {
              v82 = v110;
              sub_10027980C(v82, 1, 0, 0, 0);
LABEL_36:

LABEL_37:
              sub_100012C50((uint64_t)v68, (uint64_t)v41);
              return;
            }
            if (!v35)
              goto LABEL_37;
            v83 = v35;
            if (!objc_msgSend(v83, "isNonEmpty"))
            {
              v82 = v83;
              goto LABEL_36;
            }
            v102 = v41;
            v82 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
            sub_10015C5CC(v83, 0);
            __chkstk_darwin(v84);
            v100 = v28;
            v86 = v85;
            v87 = sub_100012E18(&qword_1005D1230);
            OS_dispatch_queue.sync<A>(execute:)(v108, sub_10028661C, &v101 - 4, v87);

            v88 = (uint64_t *)v108[0];
            if (!v108[0])
            {
LABEL_50:
              sub_10027980C(v82, 1, 0, 0, 0);

              v41 = v102;
              goto LABEL_36;
            }
            v89 = objc_allocWithZone((Class)type metadata accessor for FolderListSelectionValidator());
            v90 = (void *)objc_opt_self(ICAccount);
            v91 = v103;
            v92 = v31;
            v104 = v88;
            v93 = v92;
            v94 = objc_msgSend(v89, "initWithModernContext:htmlContext:hidesSystemPaperNotesInCustomFolders:hidesMathNotesInCustomFolders:hidesCallNotesInCustomFolders:", v91, v92, objc_msgSend(v90, "hidesSystemPaperNotesInCustomFolders"), objc_msgSend(v90, "hidesMathNotesInCustomFolders"), objc_msgSend(v90, "hidesCallNotesInCustomFolders"));

            v95 = v104;
            v96 = v83;
            v97 = (void *)sub_1001BAC5C(v95);
            if (v97)
            {
              v98 = v97;
              v99 = sub_1001BAD84(v97, 0, v105);

              if ((v99 & 1) == 0)
                goto LABEL_49;
            }
            else
            {

            }
            sub_10015C474(v95, 0);
LABEL_49:

            goto LABEL_50;
          }
        }
        else
        {
          v35 = v105;
          if (v105)
            goto LABEL_13;
        }

      }
    }
  }
}

void sub_10027BF70(void **a1, uint64_t a2, void **a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  char *v36;
  void *v37;
  char v40[16];
  void **v41;
  uint64_t (*v42)(_QWORD *);
  uint64_t v43;
  char v44[16];
  void **v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  void *v57;
  char v58[32];

  v3 = a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v58, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v46 = *(void **)v3;
  v5 = v46;
  v47 = v4;
  v48 = v6;
  v49 = v7;
  v50 = v8;
  v51 = v9;
  v52 = v11;
  v53 = v10;
  v54 = v12;
  v55 = v13;
  v56 = v14;
  v45 = &v46;
  v15 = v6;
  v16 = v5;
  sub_100166B74(v7, v8);
  sub_100166B74(v9, v11);
  v17 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v14);
  OS_dispatch_queue.sync<A>(execute:)(&v57, sub_100019380, v44, v17);

  sub_100012C50(v7, v8);
  sub_100012C50(v9, v11);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v10);
  v18 = v57;
  v19 = sub_10015ED64(1, 1);

  v20 = *a1;
  *a1 = v19;

  v22 = *(void **)v3;
  v21 = *(_QWORD *)(v3 + 8);
  v23 = *(void **)(v3 + 16);
  v24 = *(_QWORD *)(v3 + 24);
  v26 = *(_QWORD *)(v3 + 32);
  v25 = *(_QWORD *)(v3 + 40);
  v28 = *(_QWORD *)(v3 + 48);
  v27 = *(_QWORD *)(v3 + 56);
  v29 = *(_QWORD *)(v3 + 64);
  v30 = *(_BYTE *)(v3 + 72);
  v31 = *(_QWORD *)(v3 + 80);
  v46 = v22;
  v47 = v21;
  v48 = v23;
  v49 = v24;
  v50 = v26;
  v51 = v25;
  v52 = v28;
  v53 = v27;
  v54 = v29;
  v55 = v30;
  v56 = v31;
  v41 = &v46;
  v42 = sub_10027C1D8;
  v43 = 0;
  v32 = v23;
  v33 = v22;
  sub_100166B74(v24, v26);
  sub_100166B74(v25, v28);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v31);
  v34 = sub_100012E18(&qword_1005D2540);
  OS_dispatch_queue.sync<A>(execute:)(&v57, sub_10028476C, v40, v34);

  sub_100012C50(v24, v26);
  sub_100012C50(v25, v28);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v27);
  v35 = v57;
  if (v57)
  {
    v36 = sub_10015ED64(1, 1);

  }
  else
  {
    v36 = 0;
  }
  v37 = *a3;
  *a3 = v36;

}

uint64_t sub_10027C1D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _BYTE v16[24];

  v2 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v16[-v10 - 8];
  v12 = *a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v12, v16, 0, 0);
  sub_100012CE8(v12, (uint64_t)v4, &qword_1005D1500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_100286208((uint64_t)v4, (uint64_t)v11);
    sub_100286208((uint64_t)v11, (uint64_t)v9);
    v13 = (char *)&loc_10027C330 + 4 * byte_10045F8C0[swift_getEnumCaseMultiPayload(v9, v5)];
    __asm { BR              X10 }
  }
  sub_100012DDC((uint64_t)v4, &qword_1005D1500);
  return 1;
}

void sub_10027C360()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 8));
  v1 = sub_100012E18(&qword_1005D1398);
  sub_100012DDC(v0 + *(int *)(v1 + 48), &qword_1005CEFD0);
  JUMPOUT(0x10027C340);
}

void sub_10027C38C()
{
  void **v0;
  void *v1;

  v1 = *v0;

  if (v1)
  {

    JUMPOUT(0x10027C344);
  }
  JUMPOUT(0x10027C340);
}

void sub_10027C470(uint64_t a1, int a2, uint64_t a3, char a4, char a5, void *a6, int a7, char a8, void *a9, void *a10, void *a11)
{
  objc_class *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  uint64_t v49;
  void *v50;
  int v51;
  void *v52;
  int v53;
  uint64_t v54;
  char *v55;
  objc_super v56;

  if (a1)
  {
    v49 = 0;
    v50 = a6;
    v52 = a11;
    v51 = a7;
    v17 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
    v18 = a1;
    v19 = objc_allocWithZone(v17);
    v20 = swift_unknownObjectWeakInit(&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
    v53 = a2;
    v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = a2 & 1;
    swift_unknownObjectWeakAssign(v20, a3);
    v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = a4 & 1;
    v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = a8 & 1;
    *(_QWORD *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = a9;
    v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = a5 & 1;
    v21 = v50;
    *(_QWORD *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = v50;
    *(_QWORD *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = a10;
    v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = v51 & 1;
    v22 = v52;
    *(_QWORD *)&v19[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = v52;
    v56.receiver = v19;
    v56.super_class = v17;
    v23 = v18;
    swift_unknownObjectRetain(v18);
    v24 = a9;
    v25 = v21;
    v26 = a10;
    v27 = v22;
    v28 = objc_msgSendSuper2(&v56, "init");
    if (a10 && (v29 = objc_msgSend(v26, "BOOLValue"), (_DWORD)v29))
    {
      v30 = v24;
      v31 = *(void **)(v54 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue);
      __chkstk_darwin(v29);
      v48 = v32;
      v33 = type metadata accessor for ICSelectionStateModel(0);
      v34 = v31;
      v35 = v49;
      OS_dispatch_queue.sync<A>(execute:)(&v55, sub_1002860C8, v47, v33);
      v49 = v35;
      v24 = v30;

      v36 = v55;
    }
    else
    {
      v36 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
    }
    v37 = v23;
    swift_unknownObjectRetain(v23);
    v38 = v28;
    sub_10015C714(v23, v28);
    swift_unknownObjectRelease(v23, v39);

    v40 = v54;
    if (a9)
    {
      v41 = objc_msgSend(v24, "BOOLValue");
      if ((_DWORD)v41)
      {
        __chkstk_darwin(v41);
        v48 = v40;
        v43 = v42;
        v44 = sub_100012E18(&qword_1005D16C0);
        v37 = v23;
        OS_dispatch_queue.sync<A>(execute:)(&v55, sub_1002865F4, v47, v44);

        v45 = *(void **)&v36[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
        *(_QWORD *)&v36[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = v55;

      }
    }
    sub_10027980C(v36, 1, 0, v53 & 1, 0);
    swift_unknownObjectRelease(v37, v46);

  }
}

void sub_10027C9C0(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  if (a1)
  {
    v5 = a1;
    if (objc_msgSend(v5, "ic_isNoteType"))
    {
      v2 = v5;
      sub_10027CDFC(a1, 0, 0, 0, 0, 1, 1, 1, 0);
    }
    else if (objc_msgSend(v5, "ic_isBaseAttachmentType"))
    {
      v3 = v5;
      sub_10027D298(a1, 0, 0, 0, 0, 1, 1, 1, 0);
    }
    else
    {
      if (!objc_msgSend(v5, "ic_isInvitationType"))
      {
LABEL_10:

        return;
      }
      v4 = v5;
      sub_10027CAC0(a1, 1);
    }

    goto LABEL_10;
  }
}

void sub_10027CAC0(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  objc_class *v9;
  _BYTE *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD v22[4];
  objc_super v23;

  v3 = v2;
  v6 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v6);
  v8 = (_QWORD *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v9 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
    v10 = objc_allocWithZone(v9);
    *(_QWORD *)&v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = 0;
    v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = 0;
    v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
    v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
    v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
    v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = a2 & 1;
    v10[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
    v23.receiver = v10;
    v23.super_class = v9;
    v11 = a1;
    v12 = objc_msgSendSuper2(&v23, "init");
    v13 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue);
    __chkstk_darwin(v12);
    v22[-2] = v3;
    v14 = type metadata accessor for ICSelectionStateModel(0);
    v15 = v13;
    OS_dispatch_queue.sync<A>(execute:)(v22, sub_1002860C8, &v22[-4], v14);

    v16 = (char *)v22[0];
    v17 = v12;
    if (objc_msgSend(v11, "ic_isInvitationType"))
    {
      *v8 = a1;
      v8[1] = v17;
      v18 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      swift_storeEnumTagMultiPayload(v8, v18, 5);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
      v19 = (uint64_t)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v22, 33, 0);
      v20 = v11;
      v21 = v17;
      sub_100164108((uint64_t)v8, v19, &qword_1005D1508);
      swift_endAccess(v22);
    }

    sub_10027980C(v16, 1, 0, 0, 0);
  }
}

void sub_10027CDFC(void *a1, void *a2, char a3, char a4, char a5, char a6, int a7, char a8, void *a9)
{
  char *v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  objc_class *v21;
  _BYTE *v22;
  char v23;
  id v24;
  id v25;
  char v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  char *v48;
  void *v49;
  int v50;
  id v51;
  objc_super v52;
  _QWORD v53[4];

  v50 = a7;
  v17 = sub_100012E18(&qword_1005D1508);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v40 = *(void **)&v9[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
    __chkstk_darwin(v18);
    v41 = (uint64_t)v20;
    *(&v48 - 2) = v9;
    v42 = type metadata accessor for ICSelectionStateModel(0);
    v43 = v40;
    OS_dispatch_queue.sync<A>(execute:)(v53, sub_1002860C8, &v48 - 4, v42);

    v30 = (char *)v53[0];
    v44 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v20, 1, 1, v44);
    v45 = (uint64_t)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess(&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v53, 33, 0);
    sub_100164108(v41, v45, &qword_1005D1508);
    swift_endAccess(v53);
    v46 = *(void **)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
    *(_QWORD *)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = a9;
    v47 = a9;

    sub_10027980C(v30, 1, 0, 0, 0);
LABEL_7:

    return;
  }
  v51 = a1;
  if (objc_msgSend(v51, "ic_isNoteType"))
  {
    v48 = v20;
    v49 = a9;
    v21 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
    v22 = objc_allocWithZone(v21);
    *(_QWORD *)&v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = a2;
    v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = a3 & 1;
    v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = a4 & 1;
    v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = a5 & 1;
    v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = a6 & 1;
    v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = v50 & 1;
    v23 = a8 & 1;
    v22[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = a8 & 1;
    v52.receiver = v22;
    v52.super_class = v21;
    v24 = a2;
    v25 = objc_msgSendSuper2(&v52, "init");
    v26 = a8 ^ 1;
    v27 = *(void **)&v9[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
    __chkstk_darwin(v25);
    *(&v48 - 2) = v9;
    v28 = type metadata accessor for ICSelectionStateModel(0);
    v29 = v27;
    OS_dispatch_queue.sync<A>(execute:)(v53, sub_1002860C8, &v48 - 4, v28);

    v30 = (char *)v53[0];
    v31 = v25;
    if (objc_msgSend(v51, "ic_isNoteType"))
    {
      v32 = (uint64_t)v48;
      *(_QWORD *)v48 = a1;
      *(_QWORD *)(v32 + 8) = v31;
      v33 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      swift_storeEnumTagMultiPayload(v32, v33, 4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
      v34 = (uint64_t)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v53, 33, 0);
      v35 = v51;
      v36 = v31;
      sub_100164108(v32, v34, &qword_1005D1508);
      swift_endAccess(v53);
    }

    v37 = *(void **)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
    v38 = v49;
    *(_QWORD *)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = v49;
    v39 = v38;

    sub_10027980C(v30, v23, v26 & 1, 0, 0);
    goto LABEL_7;
  }

}

void sub_10027D298(void *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9)
{
  uint64_t v9;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  objc_class *v41;
  _BYTE *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  id v48;
  char *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  _QWORD v54[3];
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void (*v63)();
  id v64;
  int v65;
  _QWORD aBlock[5];
  uint64_t v67;
  objc_super v68;
  id v69;
  char v70[24];
  _QWORD v71[10];

  v65 = a3;
  if (a1)
  {
    v17 = (uint64_t *)(v9 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration);
    swift_beginAccess(v9 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration, v70, 0, 0);
    v18 = *v17;
    if (*v17)
    {
      v55 = a4;
      v56 = a5;
      v57 = a6;
      v58 = a7;
      v59 = a8;
      v61 = a2;
      v60 = v9;
      v20 = v17[8];
      v19 = v17[9];
      v63 = (void (*)())v17[7];
      v21 = (void *)v17[5];
      v62 = v17[6];
      v22 = v17[3];
      v23 = (void *)v17[4];
      v25 = v17[1];
      v24 = v17[2];
      v64 = a1;
      sub_100284B60(v18, v25, v24, v22, v23, v21, v62, (uint64_t)v63, v20, v19);
      swift_release(v22);
      swift_release(v25);

      sub_100012C50(v62, (uint64_t)v63);
      sub_100012C50(v20, v19);
      if (!v23)
      {

        return;
      }
      sub_10014BD1C((uint64_t)v17, (uint64_t)v71, (uint64_t *)&unk_1005D24E0);
      v26 = v23;
      sub_100285F64(v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
      v27 = (void *)sub_100194224(v64, (uint64_t)v71);
      v29 = v28;
      sub_100285F64(v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
      if (!v27)
      {

        return;
      }

      v30 = v61;
      v69 = v61;
      if (v61)
      {
        v63 = 0;
        v31 = 0;
        v32 = v61;
      }
      else
      {
        v33 = (_QWORD *)swift_allocObject(&unk_1005633E8, 48, 7);
        v34 = v64;
        v33[2] = v26;
        v33[3] = v34;
        v33[4] = v29;
        v33[5] = &v69;
        v35 = swift_allocObject(&unk_100563410, 32, 7);
        *(_QWORD *)(v35 + 16) = sub_100286120;
        *(_QWORD *)(v35 + 24) = v33;
        v31 = (uint64_t)v33;
        aBlock[4] = sub_100194900;
        v67 = v35;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100016618;
        aBlock[3] = &unk_100563428;
        v36 = _Block_copy(aBlock);
        v37 = v67;
        v38 = v34;
        v39 = v26;
        v40 = v29;
        swift_retain(v35);
        swift_release(v37);
        objc_msgSend(v39, "performBlockAndWait:", v36);
        _Block_release(v36);
        LOBYTE(v36) = swift_isEscapingClosureAtFileLocation(v35, "", 113, 633, 49, 1);
        swift_release(v35);
        if ((v36 & 1) != 0)
        {
          __break(1u);
          return;
        }
        v63 = sub_100286120;
        v32 = v69;
      }
      v41 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
      v42 = objc_allocWithZone(v41);
      *(_QWORD *)&v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = v32;
      v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = v65 & 1;
      v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = v55 & 1;
      v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = v56 & 1;
      v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = v57 & 1;
      v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = v58 & 1;
      v42[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = v59 & 1;
      v68.receiver = v42;
      v68.super_class = v41;
      v43 = v30;
      v44 = v32;
      v45 = objc_msgSendSuper2(&v68, "init");
      v46 = *(void **)(v60 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue);
      __chkstk_darwin(v45);
      v54[2] = v60;
      v47 = type metadata accessor for ICSelectionStateModel(0);
      v48 = v46;
      OS_dispatch_queue.sync<A>(execute:)(aBlock, sub_1002860C8, v54, v47);

      v49 = (char *)aBlock[0];
      v50 = v45;
      v51 = v64;
      sub_10015C218(v64, v29, v45);

      v52 = *(void **)&v49[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
      *(_QWORD *)&v49[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = a9;
      v53 = a9;

      sub_10027980C(v49, 1, 0, 0, 0);
      sub_100012C50((uint64_t)v63, v31);
    }
  }
}

void sub_10027D7FC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8, unsigned __int8 a9, unsigned __int8 a10, void (*a11)(void *, void *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  id v16;
  id v17;
  id v18;

  v16 = a3;
  v17 = a4;
  v18 = a1;
  a11(a3, a4, a5, a6, a7, a8, a9, a10, 0);

}

void sub_10027D8B0(void *a1, uint64_t a2, uint64_t a3, void **a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;

  v7 = objc_msgSend(a1, "ic_existingObjectWithID:", a2);
  if (v7)
  {
    v17 = v7;
    v8 = objc_opt_self(ICBaseAttachment);
    v9 = swift_dynamicCastObjCClass(v17, v8);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(a1, "ic_existingObjectWithID:", a3);
      if (v11)
      {
        v12 = v11;
        v13 = objc_opt_self(ICNote);
        v14 = swift_dynamicCastObjCClass(v12, v13);
        if (v14)
        {
          v15 = objc_msgSend((id)objc_opt_self(ICTextViewScrollState), "scrollStateForAttachment:inNote:", v10, v14);

          v16 = *a4;
          *a4 = v15;
LABEL_9:

          return;
        }

      }
    }
    v16 = v17;
    goto LABEL_9;
  }
}

void sub_10027DA0C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, unsigned int a6, unsigned int a7, unsigned int a8, unsigned __int8 a9, unsigned __int8 a10, void *a11, void (*a12)(void *, void *, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, void *))
{
  id v16;
  id v17;
  id v18;
  id v19;

  v16 = a3;
  v17 = a4;
  v18 = a11;
  v19 = a1;
  a12(a3, a4, a5, a6, a7, a8, a9, a10, a11);

}

void sub_10027DB38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44[10];
  _QWORD v45[11];

  v2 = v1;
  v4 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v4);
  v6 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration, v43, 0, 0);
  sub_10014BD1C(v7, (uint64_t)v45, (uint64_t *)&unk_1005D24E0);
  sub_100285F64(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60);
  v8 = (void *)sub_1001933C0(a1, (uint64_t)v45);
  sub_100285F64(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678);
  if (v8)
  {
    v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
    if (objc_msgSend(v8, "ic_isContainerType"))
    {
      sub_10015C714((uint64_t)a1, 0);
LABEL_13:
      sub_10027980C(v9, 1, 0, 0, 0);
LABEL_14:

      return;
    }
    if (objc_msgSend(v8, "ic_isNoteType"))
    {
      v10 = objc_msgSend(v8, "ic_isNoteType");
      if ((_DWORD)v10)
      {
        *v6 = v8;
        v6[1] = 0;
        v11 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
        swift_storeEnumTagMultiPayload(v6, v11, 4);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
        v12 = (uint64_t)&v9[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
        swift_beginAccess(&v9[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v44, 33, 0);
        v13 = v8;
        sub_100164108((uint64_t)v6, v12, &qword_1005D1508);
        swift_endAccess(v44);
      }
    }
    else
    {
      if (!objc_msgSend(v8, "ic_isInvitationType"))
      {
        if (!objc_msgSend(v8, "ic_isBaseAttachmentType")
          || (sub_10014BD1C(v7, (uint64_t)v44, (uint64_t *)&unk_1005D24E0),
              sub_100285F64(v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100284B60), v22 = (void *)sub_100194224(v8, (uint64_t)v44), v24 = v23, sub_100285F64(v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100016678), !v22))
        {
          v29 = a1;
          v30 = Logger.logObject.getter(v29);
          v32 = static os_log_type_t.error.getter(v30, v31);
          if (os_log_type_enabled(v30, v32))
          {
            v33 = (uint8_t *)swift_slowAlloc(12, -1);
            v34 = swift_slowAlloc(32, -1);
            v42 = v34;
            *(_DWORD *)v33 = 136315138;
            v41 = (uint64_t)a1;
            v35 = v29;
            v36 = sub_100012E18(&qword_1005D1230);
            v37 = String.init<A>(describing:)(&v41, v36);
            v39 = v38;
            v41 = sub_1003A4190(v37, v38, &v42);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v33 + 4);

            swift_bridgeObjectRelease(v39);
            _os_log_impl((void *)&_mh_execute_header, v30, v32, "ICSelectionStateController::pushObject(with:): Could not resolve objectID %s", v33, 0xCu);
            swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v34, -1, -1);
            swift_slowDealloc(v33, -1, -1);
          }
          else
          {

          }
          goto LABEL_14;
        }

        sub_10015C218(v8, v24, 0);
        __chkstk_darwin(v25);
        *(_QWORD *)&v40[-16] = v2;
        v27 = v26;
        v28 = sub_100012E18(&qword_1005D6798);
        OS_dispatch_queue.sync<A>(execute:)(&v42, sub_1002865E0, &v40[-32], v28);

        v20 = v42;
        sub_10015C714(v42, 0);

        goto LABEL_12;
      }
      v10 = objc_msgSend(v8, "ic_isInvitationType");
      if ((_DWORD)v10)
      {
        *v6 = v8;
        v6[1] = 0;
        v14 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
        swift_storeEnumTagMultiPayload(v6, v14, 5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
        v15 = (uint64_t)&v9[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
        swift_beginAccess(&v9[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v44, 33, 0);
        v16 = v8;
        sub_100164108((uint64_t)v6, v15, &qword_1005D1508);
        swift_endAccess(v44);
      }
    }
    __chkstk_darwin(v10);
    *(_QWORD *)&v40[-16] = v2;
    v18 = v17;
    v19 = sub_100012E18(&qword_1005D6798);
    OS_dispatch_queue.sync<A>(execute:)(v44, sub_1002865E0, &v40[-32], v19);

    v20 = v44[0];
    sub_10015C714(v44[0], 0);
LABEL_12:
    swift_unknownObjectRelease(v20, v21);
    goto LABEL_13;
  }
}

void sub_10027E154(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void *Strong;
  void *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _BYTE v63[16];
  uint64_t v64;
  _BYTE v65[24];
  _QWORD v66[3];
  _QWORD v67[4];

  v7 = sub_100012E18(&qword_1005D1508);
  v8 = __chkstk_darwin(v7);
  v60 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v61 = (char *)&v59 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v59 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v59 - v15;
  v17 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v20 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue);
  v21 = v3;
  v64 = v3;
  v22 = type metadata accessor for ICSelectionStateModel(0);
  v23 = v20;
  OS_dispatch_queue.sync<A>(execute:)(v67, sub_1002860C8, v63, v22);

  v24 = (char *)v67[0];
  if (!a1)
  {
    if (a2)
    {
      v27 = a2;
      sub_10015C714((uint64_t)a2, 0);

      if ((a3 & 1) == 0)
        goto LABEL_8;
    }
    else
    {
      v30 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v19, 1, 1, v30);
      v31 = (uint64_t)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
      swift_beginAccess(&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v67, 33, 0);
      sub_100164108((uint64_t)v19, v31, &qword_1005D1500);
      swift_endAccess(v67);
      if ((a3 & 1) == 0)
        goto LABEL_8;
    }
LABEL_6:
    v28 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v16, 1, 1, v28);
    v29 = (uint64_t)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess(&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v67, 33, 0);
    sub_100164108((uint64_t)v16, v29, &qword_1005D1508);
    swift_endAccess(v67);
LABEL_21:
    v58 = *(void **)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection];
    *(_QWORD *)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection] = 0;

    *(_QWORD *)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode] = 0;
    goto LABEL_22;
  }
  swift_unknownObjectRetain(a1);
  sub_10015C714(v25, 0);
  swift_unknownObjectRelease(a1, v26);
  if ((a3 & 1) != 0)
    goto LABEL_6;
LABEL_8:
  v32 = (uint64_t)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v67, 0, 0);
  sub_100012CE8(v32, (uint64_t)v14, &qword_1005D1508);
  v33 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v14, 1, v33);
  sub_100012DDC((uint64_t)v14, &qword_1005D1508);
  if (v35 == 1)
  {
    v36 = v21 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v21 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate);
    if (Strong
      && (v38 = Strong,
          v39 = objc_msgSend(Strong, "shouldRevertToMostRecentlySelectedNonSearchObjectOnNavigationTransitionForSelectionStateController:", v21), v41 = swift_unknownObjectRelease(v38, v40), v39))
    {
      __chkstk_darwin(v41);
      *(&v59 - 2) = v21;
      v43 = v42;
      v44 = sub_100012E18(&qword_1005D2540);
      OS_dispatch_queue.sync<A>(execute:)(v66, sub_100286154, &v59 - 4, v44);

      v45 = (void *)v66[0];
      if (!v66[0])
      {
        v48 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v61, 1, 1, v33);
        goto LABEL_20;
      }
      v46 = v66[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess(v66[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v65, 0, 0);
      v47 = v46;
      v48 = (uint64_t)v61;
    }
    else
    {
      v49 = (void *)swift_unknownObjectWeakLoadStrong(v36);
      if (!v49)
        goto LABEL_21;
      v50 = v49;
      v51 = objc_msgSend(v49, "shouldRevertToMostRecentlySelectedSearchResultOnNavigationTransitionForSelectionStateController:", v21);
      v53 = swift_unknownObjectRelease(v50, v52);
      if (!v51)
        goto LABEL_21;
      __chkstk_darwin(v53);
      *(&v59 - 2) = v21;
      v55 = v54;
      v56 = sub_100012E18(&qword_1005D2540);
      OS_dispatch_queue.sync<A>(execute:)(v66, sub_10028613C, &v59 - 4, v56);

      v45 = (void *)v66[0];
      if (!v66[0])
      {
        v48 = (uint64_t)v60;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v60, 1, 1, v33);
        goto LABEL_20;
      }
      v57 = v66[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess(v66[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v65, 0, 0);
      v47 = v57;
      v48 = (uint64_t)v60;
    }
    sub_100012CE8(v47, v48, &qword_1005D1508);

LABEL_20:
    swift_beginAccess(v32, v66, 33, 0);
    sub_100164108(v48, v32, &qword_1005D1508);
    swift_endAccess(v66);
    goto LABEL_21;
  }
LABEL_22:
  sub_10027980C(v24, 1, 0, 0, 0);

}

void sub_10027E73C(void *a1, char a2)
{
  id v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;

  v4 = objc_msgSend(a1, "object");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "objectID");
    v7 = objc_msgSend(v6, "ic_isNoteType");

    if (v7)
    {
      v8 = objc_msgSend(a1, "configuration");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "foundAttachmentObjectID");

        if (v10)
        {
          v11 = v10;
          sub_10027D298(v10, 0, 0, 0, 1, 0, a2 & 1, 1, a1);

LABEL_9:
          swift_unknownObjectRelease(v5, v12);
          return;
        }
      }
      v16 = objc_msgSend(v5, "objectID");
      v17 = objc_msgSend(v16, "ic_isModernNoteType");

      if (v17)
      {
        v18 = objc_opt_self(ICNote);
        v19 = swift_dynamicCastObjCClass(v5, v18);
        if (v19)
        {
          v20 = v19;
          v21 = objc_msgSend(a1, "firstMatchingRangeInNote", swift_unknownObjectRetain(v5).n128_f64[0]);
          if (v21)
          {
            v23 = v21;
            v24 = objc_msgSend(v21, "rangeValue");
            v26 = v25;

            v30 = objc_msgSend((id)objc_opt_self(ICTextViewScrollState), "scrollStateForRange:inNote:", v24, v26, v20);
            swift_unknownObjectRelease(v5, v27);
LABEL_16:
            v28 = objc_msgSend(v5, "objectID");
            sub_10027CDFC(v28, v30, 0, 0, 1, 0, a2 & 1, 1, a1);
            swift_unknownObjectRelease(v5, v29);

            return;
          }
          swift_unknownObjectRelease(v5, v22);
        }
      }
      v30 = 0;
      goto LABEL_16;
    }
    v13 = objc_opt_self(ICAttachment);
    v14 = (void *)swift_dynamicCastObjCClass(v5, v13);
    if (!v14)
      goto LABEL_9;
    v15 = objc_msgSend(v14, "objectID", swift_unknownObjectRetain(v5).n128_f64[0]);
    sub_10027D298(v15, 0, 0, 0, 1, 0, a2 & 1, 1, a1);

    swift_unknownObjectRelease_n(v5, 2);
  }
}

void sub_10027EAEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  char *v4;
  void *v5;
  uint64_t v6;
  char *v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue);
  v2 = type metadata accessor for ICSelectionStateModel(0);
  v3 = v1;
  OS_dispatch_queue.sync<A>(execute:)(&v7, sub_1002860C8, &v6, v2);

  v4 = v7;
  v5 = *(void **)&v7[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = 0;

  sub_10027980C(v4, 1, 0, 0, 0);
}

uint64_t sub_10027EBD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;

  v68 = a1;
  v75 = sub_100012E18(&qword_1005D6810);
  v66 = *(_QWORD *)(v75 - 8);
  v1 = __chkstk_darwin(v75);
  v63 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v74 = (char *)&v54 - v3;
  v72 = sub_100012E18(&qword_1005D6818);
  v61 = *(_QWORD *)(v72 - 8);
  v4 = __chkstk_darwin(v72);
  v59 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v70 = (char *)&v54 - v6;
  v7 = sub_100012E18((uint64_t *)&unk_1005D67E0);
  v67 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v65 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v62 = (char *)&v54 - v11;
  v12 = __chkstk_darwin(v10);
  v64 = (char *)&v54 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - v14;
  v76 = type metadata accessor for _RegexFactory(0);
  v60 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100012E18(&qword_1005D6820);
  __chkstk_darwin(v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for CharacterClass(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100012E18(&qword_1005D6828);
  v55 = *(_QWORD *)(v25 - 8);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v73 = (char *)&v54 - v30;
  static RegexComponent<>.word.getter(v29);
  v57 = type metadata accessor for RegexRepetitionBehavior(0);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
  v31 = v56(v20, 1, 1, v57);
  makeFactory()(v31);
  v32 = sub_100019C6C(&qword_1005D6830, (uint64_t (*)(uint64_t))&type metadata accessor for CharacterClass, (uint64_t)&protocol conformance descriptor for CharacterClass);
  v69 = v15;
  _RegexFactory.oneOrMore<A, B>(_:_:)(v24, v20, &type metadata for Substring, v21, v32);
  sub_100012DDC((uint64_t)v20, &qword_1005D6820);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v54 = *(void (**)(char *, uint64_t))(v60 + 8);
  v54(v17, v76);
  OneOrMore.init(_:)(v15, &type metadata for Substring);
  v58 = sub_100016638(&qword_1005D6838, &qword_1005D6828, (uint64_t)&protocol conformance descriptor for OneOrMore<A>);
  v71 = v25;
  static RegexComponentBuilder.buildExpression<A>(_:)(v28, v25, v58);
  v60 = *(_QWORD *)(v55 + 8);
  ((void (*)(char *, uint64_t))v60)(v28, v25);
  v77 = 58;
  v78 = 0xE100000000000000;
  v33 = sub_100286084();
  v34 = v59;
  One.init<A>(_:)(&v77, &type metadata for Substring, &type metadata for String, v33);
  v55 = sub_100016638(&qword_1005D6848, &qword_1005D6818, (uint64_t)&protocol conformance descriptor for One<A>);
  v35 = v70;
  v36 = v72;
  static RegexComponentBuilder.buildExpression<A>(_:)(v34, v72, v55);
  v61 = *(_QWORD *)(v61 + 8);
  ((void (*)(char *, uint64_t))v61)(v34, v36);
  v37 = v56(v20, 1, 1, v57);
  v77 = 47;
  v78 = 0xE100000000000000;
  makeFactory()(v37);
  v38 = v69;
  _RegexFactory.zeroOrMore<A, B>(_:_:)(&v77, v20, &type metadata for Substring, &type metadata for String, v33);
  sub_100012DDC((uint64_t)v20, &qword_1005D6820);
  swift_bridgeObjectRelease(v78);
  v39 = (uint64_t (*)(char *, uint64_t))v54;
  v54(v17, v76);
  v40 = v63;
  ZeroOrMore.init(_:)(v38, &type metadata for Substring);
  v59 = (char *)sub_100016638((unint64_t *)&unk_1005D6850, &qword_1005D6810, (uint64_t)&protocol conformance descriptor for ZeroOrMore<A>);
  v42 = v74;
  v41 = v75;
  static RegexComponentBuilder.buildExpression<A>(_:)(v40, v75, v59);
  v66 = *(_QWORD *)(v66 + 8);
  ((void (*)(char *, uint64_t))v66)(v40, v41);
  v43 = static RegexComponentBuilder.buildPartialBlock<A>(first:)(v73, v71, v58);
  makeFactory()(v43);
  v44 = sub_100016638((unint64_t *)&unk_1005D67F0, (uint64_t *)&unk_1005D67E0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  v45 = v62;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v38, v7, v44);
  v46 = v65;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v35, v36, v55);
  v47 = v64;
  _RegexFactory.accumulate<A, B, C>(_:_:)(v45, v46, &type metadata for Substring, v7, v7, v44, v44);
  v48 = *(void (**)(char *, uint64_t))(v67 + 8);
  v48(v46, v7);
  v48(v45, v7);
  v49 = v76;
  v50 = v39(v17, v76);
  makeFactory()(v50);
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v47, v7, v44);
  v51 = v42;
  v52 = v75;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)(v51, v75, v59);
  _RegexFactory.accumulate<A, B, C>(_:_:)(v45, v46, &type metadata for Substring, v7, v7, v44, v44);
  v48(v46, v7);
  v48(v45, v7);
  v39(v17, v49);
  v48(v47, v7);
  v48(v69, v7);
  ((void (*)(char *, uint64_t))v66)(v74, v52);
  ((void (*)(char *, uint64_t))v61)(v70, v72);
  return ((uint64_t (*)(char *, uint64_t))v60)(v73, v71);
}

void sub_10027F2C0(void *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;
  id v7;

  v7 = objc_msgSend(a1, "objectWithID:", a2);
  v4 = objc_opt_self(ICNote);
  v5 = (void *)swift_dynamicCastObjCClass(v7, v4);
  if (v5)
  {
    v6 = objc_msgSend(v5, "isMathNote");

    *a3 = v6;
  }
  else
  {

  }
}

void sub_10027F49C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void **v5;
  char *v6;
  void *Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void **aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  id v30;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v4 = sub_100012E18(&qword_1005D6790);
  OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_100284BDC, &v23, v4);

  if ((v25 & 1) == 0)
  {
    v5 = aBlock;
    v6 = &v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate];
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
    if (Strong)
    {
      v8 = Strong;
      objc_msgSend(Strong, "willAdoptModelForSelectionStateController:isNavigating:", v1, 1);
      swift_unknownObjectRelease(v8, v9);
    }
    v30 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
    v10 = *(void **)&v1[v2];
    v11 = (_QWORD *)swift_allocObject(&unk_100562FD8, 40, 7);
    v11[2] = &v30;
    v11[3] = v1;
    v11[4] = v5;
    v12 = swift_allocObject(&unk_100563000, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100284BF4;
    *(_QWORD *)(v12 + 24) = v11;
    v28 = sub_100194900;
    v29 = v12;
    aBlock = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_100016618;
    v27 = &unk_100563018;
    v13 = _Block_copy(&aBlock);
    v14 = v29;
    v15 = v10;
    v16 = v1;
    swift_retain(v12);
    swift_release(v14);
    dispatch_sync(v15, v13);

    _Block_release(v13);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v12, "", 113, 926, 40, 1);
    swift_release(v12);
    if ((v13 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v17 = swift_unknownObjectWeakLoadStrong(v6);
      v18 = v30;
      if (v17)
      {
        v19 = (void *)v17;
        v20 = v30;
        objc_msgSend(v19, "selectionStateController:didAdoptModelFromOldModel:isNavigating:", v16, v20, 1);

        swift_unknownObjectRelease(v19, v21);
        v22 = v30;
        swift_release(v11);

      }
      else
      {
        swift_release(v11);

      }
    }
  }
}

uint64_t sub_10027F6E0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  Class isa;
  objc_class *v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v29[16];
  uint64_t (*v30)();
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  char v35;
  _QWORD v36[9];
  char v37;
  uint64_t v38;
  char v39[24];
  objc_super v40;
  id v41;

  sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
  isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
  v4 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
  v5 = objc_allocWithZone(v4);
  v6 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
  swift_unknownObjectWeakAssign(v6, 0);
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = isa;
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
  v40.receiver = v5;
  v40.super_class = v4;
  v41 = objc_msgSendSuper2(&v40, "init");
  v7 = &a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue], v39, 0, 0);
  v8 = *(void **)v7;
  v26 = *((_QWORD *)v7 + 1);
  v9 = (void *)*((_QWORD *)v7 + 2);
  v10 = *((_QWORD *)v7 + 3);
  v11 = *((_QWORD *)v7 + 4);
  v12 = *((_QWORD *)v7 + 5);
  v14 = *((_QWORD *)v7 + 6);
  v13 = *((_QWORD *)v7 + 7);
  v23 = v7[72];
  v24 = *((_QWORD *)v7 + 8);
  v25 = *((_QWORD *)v7 + 10);
  v15 = swift_allocObject(&unk_1005630C8, 32, 7);
  v16 = v41;
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v16;
  v36[0] = v8;
  v36[1] = v26;
  v36[2] = v9;
  v36[3] = v10;
  v36[4] = v11;
  v36[5] = v12;
  v36[6] = v14;
  v36[7] = v13;
  v36[8] = v24;
  v37 = v23;
  v38 = v25;
  v30 = sub_1002867AC;
  v31 = v15;
  v32 = v36;
  v33 = 1;
  v27 = v9;
  v17 = v8;
  sub_100166B74(v10, v11);
  sub_100166B74(v12, v14);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v25);
  v18 = a1;
  v19 = v41;
  v20 = sub_100012E18(&qword_1005D6790);
  OS_dispatch_queue.sync<A>(execute:)(&v34, sub_100284C30, v29, v20);

  swift_release(v15);
  sub_100012C50(v10, v11);
  sub_100012C50(v12, v14);
  swift_bridgeObjectRelease(v25);
  result = swift_bridgeObjectRelease(v13);
  v22 = v35;
  *(_QWORD *)a2 = v34;
  *(_BYTE *)(a2 + 8) = v22;
  return result;
}

uint64_t sub_10027F9C4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void **v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t result;
  char v30[16];
  void ***p_aBlock;
  _QWORD v32[4];
  void **aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44[32];

  v3 = a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v44, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(uint64_t (**)(uint64_t))(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  aBlock = *(void ***)v3;
  v5 = aBlock;
  v34 = v4;
  v35 = v6;
  v36 = (void *)v7;
  v37 = (uint64_t (*)())v8;
  v38 = v9;
  v39 = v11;
  v40 = v10;
  v41 = v12;
  v42 = v13;
  v43 = v14;
  p_aBlock = &aBlock;
  v15 = v6;
  v16 = v5;
  sub_100166B74(v7, v8);
  sub_100166B74(v9, v11);
  v17 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v14);
  OS_dispatch_queue.sync<A>(execute:)(v32, sub_100019380, v30, v17);

  sub_100012C50(v7, v8);
  sub_100012C50(v9, v11);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v10);
  v18 = (void *)v32[0];
  v19 = sub_10015ED64(0, 1);

  v20 = *a1;
  *a1 = v19;

  swift_beginAccess(v3, v32, 33, 0);
  v21 = *(void ***)v3;
  v22 = swift_allocObject(&unk_100563050, 32, 7);
  *(_QWORD *)(v22 + 16) = v3;
  *(_QWORD *)(v22 + 24) = a3;
  v23 = swift_allocObject(&unk_100563078, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_100286644;
  *(_QWORD *)(v23 + 24) = v22;
  v37 = sub_100194900;
  v38 = v23;
  aBlock = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_100016618;
  v36 = &unk_100563090;
  v24 = _Block_copy(&aBlock);
  v25 = v38;
  v26 = v21;
  swift_retain(v23);
  swift_release(v25);
  dispatch_sync(v26, v24);

  _Block_release(v24);
  result = swift_isEscapingClosureAtFileLocation(v23, "", 112, 700, 26, 1);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_endAccess(v32);
    swift_release(v22);
    return swift_release(v23);
  }
  return result;
}

void sub_10027FC68()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void **v5;
  char *v6;
  void *Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void **aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  id v30;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue;
  v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v4 = sub_100012E18(&qword_1005D6790);
  OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_1002849A8, &v23, v4);

  if ((v25 & 1) == 0)
  {
    v5 = aBlock;
    v6 = &v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate];
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_delegate]);
    if (Strong)
    {
      v8 = Strong;
      objc_msgSend(Strong, "willAdoptModelForSelectionStateController:isNavigating:", v1, 1);
      swift_unknownObjectRelease(v8, v9);
    }
    v30 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ICSelectionStateModel(0)), "init");
    v10 = *(void **)&v1[v2];
    v11 = (_QWORD *)swift_allocObject(&unk_100562E20, 40, 7);
    v11[2] = &v30;
    v11[3] = v1;
    v11[4] = v5;
    v12 = swift_allocObject(&unk_100562E48, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_1002849C0;
    *(_QWORD *)(v12 + 24) = v11;
    v28 = sub_100194900;
    v29 = v12;
    aBlock = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_100016618;
    v27 = &unk_100562E60;
    v13 = _Block_copy(&aBlock);
    v14 = v29;
    v15 = v10;
    v16 = v1;
    swift_retain(v12);
    swift_release(v14);
    dispatch_sync(v15, v13);

    _Block_release(v13);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v12, "", 113, 945, 40, 1);
    swift_release(v12);
    if ((v13 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v17 = swift_unknownObjectWeakLoadStrong(v6);
      v18 = v30;
      if (v17)
      {
        v19 = (void *)v17;
        v20 = v30;
        objc_msgSend(v19, "selectionStateController:didAdoptModelFromOldModel:isNavigating:", v16, v20, 1);

        swift_unknownObjectRelease(v19, v21);
        v22 = v30;
        swift_release(v11);

      }
      else
      {
        swift_release(v11);

      }
    }
  }
}

uint64_t sub_10027FEAC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  Class isa;
  objc_class *v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v29[16];
  uint64_t (*v30)(void **);
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  char v35;
  _QWORD v36[9];
  char v37;
  uint64_t v38;
  char v39[24];
  objc_super v40;
  id v41;

  sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
  isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
  v4 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
  v5 = objc_allocWithZone(v4);
  v6 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
  swift_unknownObjectWeakAssign(v6, 0);
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = isa;
  v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
  v40.receiver = v5;
  v40.super_class = v4;
  v41 = objc_msgSendSuper2(&v40, "init");
  v7 = &a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue], v39, 0, 0);
  v8 = *(void **)v7;
  v26 = *((_QWORD *)v7 + 1);
  v9 = (void *)*((_QWORD *)v7 + 2);
  v10 = *((_QWORD *)v7 + 3);
  v11 = *((_QWORD *)v7 + 4);
  v12 = *((_QWORD *)v7 + 5);
  v14 = *((_QWORD *)v7 + 6);
  v13 = *((_QWORD *)v7 + 7);
  v23 = v7[72];
  v24 = *((_QWORD *)v7 + 8);
  v25 = *((_QWORD *)v7 + 10);
  v15 = swift_allocObject(&unk_100562F10, 32, 7);
  v16 = v41;
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v16;
  v36[0] = v8;
  v36[1] = v26;
  v36[2] = v9;
  v36[3] = v10;
  v36[4] = v11;
  v36[5] = v12;
  v36[6] = v14;
  v36[7] = v13;
  v36[8] = v24;
  v37 = v23;
  v38 = v25;
  v30 = sub_100284A28;
  v31 = v15;
  v32 = v36;
  v33 = 1;
  v27 = v9;
  v17 = v8;
  sub_100166B74(v10, v11);
  sub_100166B74(v12, v14);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v25);
  v18 = a1;
  v19 = v41;
  v20 = sub_100012E18(&qword_1005D6790);
  OS_dispatch_queue.sync<A>(execute:)(&v34, sub_100284A40, v29, v20);

  swift_release(v15);
  sub_100012C50(v10, v11);
  sub_100012C50(v12, v14);
  swift_bridgeObjectRelease(v25);
  result = swift_bridgeObjectRelease(v13);
  v22 = v35;
  *(_QWORD *)a2 = v34;
  *(_BYTE *)(a2 + 8) = v22;
  return result;
}

uint64_t sub_100280190(void **a1, uint64_t a2, void *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  _BYTE v45[24];
  _QWORD v46[11];

  v43 = *a1;
  type metadata accessor for ICSelectionStateUtilities();
  v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration);
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration, v45, 0, 0);
  v5 = *v4;
  v6 = v4[1];
  v8 = (uint64_t (*)())v4[2];
  v7 = v4[3];
  v10 = (void *)v4[4];
  v9 = (void *)v4[5];
  v11 = v4[6];
  v12 = v4[7];
  v14 = v4[8];
  v13 = v4[9];
  if (*v4)
  {
    v15 = (void *)v4[5];
    v16 = v9;
    swift_retain(v6);
    swift_retain(v7);
    v17 = v10;
    sub_100166B74(v11, v12);
    sub_100166B74(v14, v13);
    v9 = v15;
    v18 = v14;
    v19 = v10;
    v20 = v13;
    v21 = v11;
    v22 = v12;
    v23 = v7;
    v24 = v19;
    v25 = (uint64_t (*)())v5;
    v26 = v6;
    v27 = v8;
    v28 = (uint64_t)v8;
    v29 = v23;
  }
  else
  {
    v18 = v4[8];
    v14 = 0;
    v19 = (void *)v4[4];
    v20 = 0;
    v21 = v4[6];
    v11 = 0;
    v22 = v4[7];
    v12 = 0;
    v15 = 0;
    v23 = v7;
    v24 = 0;
    v26 = v6;
    v6 = 0;
    v28 = (uint64_t)v8;
    v29 = 0;
    v27 = variable initialization expression of AsyncChannel.Iterator.active;
    v25 = variable initialization expression of AsyncChannel.Iterator.active;
  }
  v35 = v18;
  v46[0] = v25;
  v46[1] = v6;
  v46[2] = v27;
  v46[3] = v29;
  v46[4] = v24;
  v46[5] = v15;
  v46[6] = v11;
  v46[7] = v12;
  v46[8] = v14;
  v46[9] = v20;
  v36 = v26;
  v37 = v28;
  v38 = v23;
  v39 = v22;
  v40 = v19;
  v41 = v21;
  v42 = v9;
  sub_100284B60(v5, v26, v28, v23, v19, v9, v21, v22, v18, v13);
  v34 = v5;
  v30 = v15;
  v31 = v43;
  swift_retain(v6);
  swift_retain(v29);
  v32 = v24;
  sub_100166B74(v11, v12);
  sub_100166B74(v14, v20);
  sub_10018D654((uint64_t)v31, a3, (uint64_t)v46);

  swift_release(v29);
  swift_release(v6);
  sub_100012C50(v11, v12);
  sub_100012C50(v14, v20);

  swift_release(v29);
  swift_release(v6);
  sub_100012C50(v11, v12);
  sub_100012C50(v14, v20);

  return sub_100016678(v34, v36, v37, v38, v40, v42, v41, v39, v35, v13);
}

uint64_t sub_10028040C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void **v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t result;
  char v30[16];
  void ***p_aBlock;
  _QWORD v32[4];
  void **aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44[32];

  v3 = a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v44, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(uint64_t (**)(uint64_t))(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  aBlock = *(void ***)v3;
  v5 = aBlock;
  v34 = v4;
  v35 = v6;
  v36 = (void *)v7;
  v37 = (uint64_t (*)())v8;
  v38 = v9;
  v39 = v11;
  v40 = v10;
  v41 = v12;
  v42 = v13;
  v43 = v14;
  p_aBlock = &aBlock;
  v15 = v6;
  v16 = v5;
  sub_100166B74(v7, v8);
  sub_100166B74(v9, v11);
  v17 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v14);
  OS_dispatch_queue.sync<A>(execute:)(v32, sub_100019380, v30, v17);

  sub_100012C50(v7, v8);
  sub_100012C50(v9, v11);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v10);
  v18 = (void *)v32[0];
  v19 = sub_10015ED64(0, 1);

  v20 = *a1;
  *a1 = v19;

  swift_beginAccess(v3, v32, 33, 0);
  v21 = *(void ***)v3;
  v22 = swift_allocObject(&unk_100562E98, 32, 7);
  *(_QWORD *)(v22 + 16) = v3;
  *(_QWORD *)(v22 + 24) = a3;
  v23 = swift_allocObject(&unk_100562EC0, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_1002849EC;
  *(_QWORD *)(v23 + 24) = v22;
  v37 = sub_100194900;
  v38 = v23;
  aBlock = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_100016618;
  v36 = &unk_100562ED8;
  v24 = _Block_copy(&aBlock);
  v25 = v38;
  v26 = v21;
  swift_retain(v23);
  swift_release(v25);
  dispatch_sync(v26, v24);

  _Block_release(v24);
  result = swift_isEscapingClosureAtFileLocation(v23, "", 112, 700, 26, 1);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_endAccess(v32);
    swift_release(v22);
    return swift_release(v23);
  }
  return result;
}

void sub_1002806D8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE v20[16];
  _QWORD *v21;
  _QWORD v22[9];
  char v23;
  uint64_t v24;
  _BYTE v25[24];
  void *v26;

  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v25, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v22[0] = *(_QWORD *)v2;
  v4 = (void *)v22[0];
  v22[1] = v3;
  v22[2] = v5;
  v22[3] = v6;
  v22[4] = v8;
  v22[5] = v7;
  v22[6] = v10;
  v22[7] = v9;
  v22[8] = v11;
  v23 = v12;
  v24 = v13;
  v21 = v22;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  v16 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v26, sub_100019380, v20, v16);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v26;
  v18 = sub_1000189CC();
  if (!v18)
    v18 = sub_1000187EC();

  *a2 = v18;
}

void sub_10028084C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE v20[16];
  _QWORD *v21;
  BOOL (*v22)();
  uint64_t v23;
  _QWORD v24[9];
  char v25;
  uint64_t v26;
  _BYTE v27[32];
  void *v28;

  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v27, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v24[0] = *(_QWORD *)v2;
  v4 = (void *)v24[0];
  v24[1] = v3;
  v24[2] = v5;
  v24[3] = v6;
  v24[4] = v8;
  v24[5] = v7;
  v24[6] = v10;
  v24[7] = v9;
  v24[8] = v11;
  v25 = v12;
  v26 = v13;
  v21 = v24;
  v22 = sub_1002809B8;
  v23 = 0;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  v16 = sub_100012E18(&qword_1005D2540);
  OS_dispatch_queue.sync<A>(execute:)(&v28, sub_10028476C, v20, v16);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v28;
  if (v28)
  {
    v18 = sub_1000189CC();

  }
  else
  {
    v18 = 0;
  }
  *a2 = v18;
}

BOOL sub_1002809B8()
{
  void *v0;
  void *v1;

  v0 = (void *)sub_1000189CC();
  v1 = v0;
  if (v0)

  return v1 != 0;
}

id sub_100280A00(char *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  void *v6;
  uint64_t v7;
  char *v8;
  id v9;
  _QWORD v11[5];
  id v12;

  v6 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v11[2] = a1;
  v7 = a3(0);
  v8 = a1;
  v9 = v6;
  OS_dispatch_queue.sync<A>(execute:)(&v12, a4, v11, v7);

  return v12;
}

void sub_100280A9C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void *v19;
  id v20;
  _BYTE v22[16];
  _QWORD *v23;
  _QWORD v24[9];
  char v25;
  uint64_t v26;
  _BYTE v27[24];
  void *v28;

  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v27, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v24[0] = *(_QWORD *)v2;
  v4 = (void *)v24[0];
  v24[1] = v3;
  v24[2] = v5;
  v24[3] = v6;
  v24[4] = v8;
  v24[5] = v7;
  v24[6] = v10;
  v24[7] = v9;
  v24[8] = v11;
  v25 = v12;
  v26 = v13;
  v23 = v24;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  v16 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v28, sub_100019380, v22, v16);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v28;
  v18 = (char *)sub_10015BF18();
  v19 = *(void **)&v18[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState];
  v20 = v19;

  *a2 = v19;
}

uint64_t sub_100280C1C(void *a1)
{
  char *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  char *v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v13[5];
  uint64_t v14;

  v3 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v4 = swift_allocObject(&unk_100562DA8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject(&unk_100562DD0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1002848B0;
  *(_QWORD *)(v5 + 24) = v4;
  v13[4] = sub_100194900;
  v14 = v5;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100016618;
  v13[3] = &unk_100562DE8;
  v6 = _Block_copy(v13);
  v7 = v14;
  v8 = a1;
  swift_retain(v5);
  v9 = v3;
  v10 = v1;
  swift_release(v7);
  dispatch_sync(v9, v6);

  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 113, 1040, 40, 1);
  swift_release(v4);
  result = swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_100280E2C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  char v19[16];
  _QWORD *v20;
  _QWORD v21[9];
  char v22;
  uint64_t v23;
  char v24[24];
  char *v25;

  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v24, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v21[0] = *(_QWORD *)v2;
  v4 = (void *)v21[0];
  v21[1] = v3;
  v21[2] = v5;
  v21[3] = v6;
  v21[4] = v8;
  v21[5] = v7;
  v21[6] = v10;
  v21[7] = v9;
  v21[8] = v11;
  v22 = v12;
  v23 = v13;
  v20 = v21;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  v16 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v25, sub_100019380, v19, v16);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v25;
  *a2 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode];

}

uint64_t sub_100280F88(uint64_t a1)
{
  char *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  char *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v12[5];
  uint64_t v13;

  v3 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v4 = swift_allocObject(&unk_100562D30, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject(&unk_100562D58, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_100284880;
  *(_QWORD *)(v5 + 24) = v4;
  v12[4] = sub_100194900;
  v13 = v5;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100016618;
  v12[3] = &unk_100562D70;
  v6 = _Block_copy(v12);
  v7 = v13;
  v8 = v3;
  v9 = v1;
  swift_retain(v5);
  swift_release(v7);
  dispatch_sync(v8, v6);

  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 113, 1053, 40, 1);
  swift_release(v4);
  result = swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1002810C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[4];
  _QWORD v20[9];
  char v21;
  uint64_t v22;
  char *v23;
  char v24[32];

  v3 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v24, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v8 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v20[0] = *(_QWORD *)v3;
  v5 = (void *)v20[0];
  v20[1] = v4;
  v20[2] = v6;
  v20[3] = v7;
  v20[4] = v9;
  v20[5] = v8;
  v20[6] = v11;
  v20[7] = v10;
  v20[8] = v12;
  v21 = v13;
  v22 = v14;
  v19[2] = v20;
  v15 = v6;
  v16 = v5;
  sub_100166B74(v7, v9);
  sub_100166B74(v8, v11);
  v17 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v14);
  OS_dispatch_queue.sync<A>(execute:)(&v23, sub_100019380, v19, v17);

  sub_100012C50(v7, v9);
  sub_100012C50(v8, v11);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v10);
  v18 = v23;
  *(_QWORD *)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode] = a2;

}

uint64_t sub_100281260(void *a1)
{
  char *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  char *v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v13[5];
  uint64_t v14;

  v3 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v4 = swift_allocObject(&unk_100562CB8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject(&unk_100562CE0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1002847FC;
  *(_QWORD *)(v5 + 24) = v4;
  v13[4] = sub_1000165D0;
  v14 = v5;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100016618;
  v13[3] = &unk_100562CF8;
  v6 = _Block_copy(v13);
  v7 = v14;
  v8 = a1;
  swift_retain(v5);
  v9 = v3;
  v10 = v1;
  swift_release(v7);
  dispatch_sync(v9, v6);

  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 113, 1078, 40, 1);
  swift_release(v4);
  result = swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1002813A4(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  char v25[16];
  _QWORD *v26;
  _QWORD v27[9];
  char v28;
  uint64_t v29;
  char *v30;
  char v31[32];

  v5 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v31, 0, 0);
  v6 = *(_QWORD *)(v5 + 8);
  v8 = *(void **)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v11 = *(_QWORD *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 40);
  v13 = *(_QWORD *)(v5 + 48);
  v12 = *(_QWORD *)(v5 + 56);
  v14 = *(_QWORD *)(v5 + 64);
  v15 = *(_BYTE *)(v5 + 72);
  v16 = *(_QWORD *)(v5 + 80);
  v27[0] = *(_QWORD *)v5;
  v7 = (void *)v27[0];
  v27[1] = v6;
  v27[2] = v8;
  v27[3] = v9;
  v27[4] = v11;
  v27[5] = v10;
  v27[6] = v13;
  v27[7] = v12;
  v27[8] = v14;
  v28 = v15;
  v29 = v16;
  v26 = v27;
  v17 = v8;
  v18 = v7;
  sub_100166B74(v9, v11);
  sub_100166B74(v10, v13);
  v19 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v16);
  OS_dispatch_queue.sync<A>(execute:)(&v30, a3, v25, v19);

  sub_100012C50(v9, v11);
  sub_100012C50(v10, v13);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v12);
  v20 = v30;
  v21 = *(void **)&v30[*a4];
  *(_QWORD *)&v30[*a4] = a2;
  v22 = a2;

}

void sub_100281564(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  _QWORD v36[6];
  id v37[2];
  uint64_t *v38;
  char v39[16];
  void **v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52[32];
  void *v53;

  v38 = a2;
  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v52, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v41 = *(void **)v2;
  v4 = v41;
  v42 = v3;
  v43 = v5;
  v44 = v6;
  v45 = v8;
  v46 = v7;
  v47 = v10;
  v48 = v9;
  v49 = v11;
  v50 = v12;
  v51 = v13;
  v40 = &v41;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  v16 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v53, sub_100019380, v39, v16);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v53;
  v18 = sub_100018628();
  v20 = swift_unknownObjectRelease(v18, v19);
  if (v18)
  {
    v21 = sub_100018628();
  }
  else
  {
    v37[1] = v37;
    v22 = *(_QWORD *)(v2 + 8);
    v24 = *(void **)(v2 + 16);
    v25 = *(_QWORD *)(v2 + 24);
    v26 = *(_QWORD *)(v2 + 32);
    v27 = *(_QWORD *)(v2 + 40);
    v29 = *(_QWORD *)(v2 + 48);
    v28 = *(_QWORD *)(v2 + 56);
    v30 = *(_QWORD *)(v2 + 64);
    v41 = *(void **)v2;
    v23 = v41;
    v42 = v22;
    LOBYTE(v22) = *(_BYTE *)(v2 + 72);
    v31 = *(_QWORD *)(v2 + 80);
    v43 = v24;
    v44 = v25;
    v45 = v26;
    v46 = v27;
    v47 = v29;
    v48 = v28;
    v49 = v30;
    v50 = v22;
    v51 = v31;
    __chkstk_darwin(v20);
    v36[2] = &v41;
    v36[3] = sub_100281804;
    v36[4] = 0;
    v37[0] = v32;
    v33 = v23;
    sub_100166B74(v25, v26);
    sub_100166B74(v27, v29);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v31);
    v34 = sub_100012E18(&qword_1005D2540);
    OS_dispatch_queue.sync<A>(execute:)(&v53, sub_10028476C, v36, v34);

    sub_100012C50(v25, v26);
    sub_100012C50(v27, v29);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v28);
    v35 = v53;
    if (v53)
    {
      v21 = sub_100018628();

    }
    else
    {
      v21 = 0;
    }
  }

  *v38 = v21;
}

uint64_t sub_100281804(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  if (*(_QWORD *)(*a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult))
    return 0;
  result = sub_100018628();
  if (result)
  {
    swift_unknownObjectRelease(result, v2);
    return 1;
  }
  return result;
}

void sub_100281860(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[6];
  _QWORD v53[2];
  uint64_t *v54;
  uint64_t v55;
  char v56[16];
  void **v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69[32];
  void *v70;

  v54 = a2;
  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v69, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v58 = *(void **)v2;
  v4 = v58;
  v59 = v3;
  v60 = v5;
  v61 = v6;
  v62 = v7;
  v63 = v8;
  v64 = v10;
  v65 = v9;
  v66 = v11;
  v67 = v12;
  v68 = v13;
  v57 = &v58;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v7);
  sub_100166B74(v8, v10);
  v16 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v70, sub_100019380, v56, v16);

  sub_100012C50(v6, v7);
  sub_100012C50(v8, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v70;
  v18 = sub_100018628();
  if (!v18)
  {
LABEL_4:
    v23 = sub_100018628();
    if (v23)
    {
      v24 = v23;
      v25 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
      v21 = swift_dynamicCastObjCClass(v24, v25);
      if (v21)
        goto LABEL_6;
      swift_unknownObjectRelease(v24, v26);
    }
    v27 = sub_100018D60();

    if (v27)
      goto LABEL_9;
    v53[1] = v53;
    v29 = *(_QWORD *)(v2 + 8);
    v31 = *(void **)(v2 + 16);
    v32 = *(_QWORD *)(v2 + 24);
    v34 = *(_QWORD *)(v2 + 32);
    v33 = *(_QWORD *)(v2 + 40);
    v36 = *(_QWORD *)(v2 + 48);
    v35 = *(_QWORD *)(v2 + 56);
    v37 = *(_QWORD *)(v2 + 64);
    v58 = *(void **)v2;
    v30 = v58;
    v59 = v29;
    LOBYTE(v29) = *(_BYTE *)(v2 + 72);
    v38 = *(_QWORD *)(v2 + 80);
    v60 = v31;
    v61 = v32;
    v62 = v34;
    v63 = v33;
    v64 = v36;
    v65 = v35;
    v66 = v37;
    v67 = v29;
    v68 = v38;
    __chkstk_darwin(v28);
    v52[2] = &v58;
    v52[3] = sub_100281BA4;
    v52[4] = 0;
    v40 = v39;
    v41 = v30;
    sub_100166B74(v32, v34);
    sub_100166B74(v33, v36);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v38);
    v42 = sub_100012E18(&qword_1005D2540);
    v43 = v55;
    OS_dispatch_queue.sync<A>(execute:)(&v70, sub_10028476C, v52, v42);
    v55 = v43;

    sub_100012C50(v32, v34);
    sub_100012C50(v33, v36);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v35);
    v17 = v70;
    if (!v70)
    {
      v27 = 0;
      goto LABEL_9;
    }
    v44 = sub_100018628();
    if (v44)
    {
      v45 = v44;
      v46 = objc_opt_self(NSManagedObjectID);
      v21 = swift_dynamicCastObjCClass(v45, v46);
      if (v21)
        goto LABEL_6;
      swift_unknownObjectRelease(v45, v47);
    }
    v48 = sub_100018628();
    if (v48)
    {
      v49 = v48;
      v50 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
      v21 = swift_dynamicCastObjCClass(v49, v50);
      if (v21)
        goto LABEL_6;
      swift_unknownObjectRelease(v49, v51);
    }
    v21 = sub_100018D60();
    goto LABEL_6;
  }
  v19 = v18;
  v20 = objc_opt_self(NSManagedObjectID);
  v21 = swift_dynamicCastObjCClass(v19, v20);
  if (!v21)
  {
    swift_unknownObjectRelease(v19, v22);
    goto LABEL_4;
  }
LABEL_6:
  v27 = v21;

LABEL_9:
  *v54 = v27;
}

uint64_t sub_100281BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v0 = sub_100018628();
  if (!v0
    || (v1 = v0,
        v2 = objc_opt_self(NSManagedObjectID),
        v3 = swift_dynamicCastObjCClass(v1, v2),
        swift_unknownObjectRelease(v1, v4),
        !v3))
  {
    v5 = sub_100018628();
    if (!v5
      || (v6 = v5,
          v7 = objc_opt_self(ICVirtualSmartFolderItemIdentifier),
          v8 = swift_dynamicCastObjCClass(v6, v7),
          swift_unknownObjectRelease(v6, v9),
          !v8))
    {
      result = sub_100018D60();
      if (!result)
        return result;

    }
  }
  return 1;
}

void sub_100281C54(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];
  _QWORD v38[2];
  uint64_t *v39;
  uint64_t v40;
  char v41[16];
  void **v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54[32];
  void *v55;

  v39 = a2;
  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v54, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v43 = *(void **)v2;
  v4 = v43;
  v44 = v3;
  v45 = v5;
  v46 = v6;
  v47 = v7;
  v48 = v8;
  v49 = v10;
  v50 = v9;
  v51 = v11;
  v52 = v12;
  v53 = v13;
  v42 = &v43;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v7);
  sub_100166B74(v8, v10);
  v16 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v55, sub_100019380, v41, v16);

  sub_100012C50(v6, v7);
  sub_100012C50(v8, v10);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v9);
  v17 = v55;
  v18 = sub_1000189CC();
  if (!v18)
  {
    v19 = sub_1000187EC();

    if (!v19)
    {
      v38[1] = v38;
      v22 = *(_QWORD *)(v2 + 8);
      v24 = *(void **)(v2 + 16);
      v25 = *(_QWORD *)(v2 + 24);
      v27 = *(_QWORD *)(v2 + 32);
      v26 = *(_QWORD *)(v2 + 40);
      v29 = *(_QWORD *)(v2 + 48);
      v28 = *(_QWORD *)(v2 + 56);
      v30 = *(_QWORD *)(v2 + 64);
      v43 = *(void **)v2;
      v23 = v43;
      v44 = v22;
      LOBYTE(v22) = *(_BYTE *)(v2 + 72);
      v31 = *(_QWORD *)(v2 + 80);
      v45 = v24;
      v46 = v25;
      v47 = v27;
      v48 = v26;
      v49 = v29;
      v50 = v28;
      v51 = v30;
      v52 = v22;
      v53 = v31;
      __chkstk_darwin(v21);
      v37[2] = &v43;
      v37[3] = sub_100281EF0;
      v37[4] = 0;
      v33 = v32;
      v34 = v23;
      sub_100166B74(v25, v27);
      sub_100166B74(v26, v29);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v31);
      v35 = sub_100012E18(&qword_1005D2540);
      v36 = v40;
      OS_dispatch_queue.sync<A>(execute:)(&v55, sub_10028476C, v37, v35);
      v40 = v36;

      sub_100012C50(v25, v27);
      sub_100012C50(v26, v29);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v28);
      v17 = v55;
      if (v55)
      {
        v18 = sub_1000189CC();
        if (!v18)
          v18 = sub_1000187EC();
        goto LABEL_2;
      }
      v19 = 0;
    }
    v20 = v39;
    goto LABEL_5;
  }
LABEL_2:
  v19 = v18;
  v20 = v39;

LABEL_5:
  *v20 = v19;
}

BOOL sub_100281EF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  _BYTE v10[24];

  v2 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v5, v10, 0, 0);
  sub_100012CE8(v5, (uint64_t)v4, &qword_1005D1508);
  v6 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100012DDC((uint64_t)v4, &qword_1005D1508);
  return v7;
}

uint64_t sub_100281FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t result;
  _BYTE v20[16];
  _QWORD *v21;
  char v22;
  _QWORD v23[9];
  char v24;
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;

  v4 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v26, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v7 = *(void **)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v10 = *(_QWORD *)(v4 + 32);
  v9 = *(_QWORD *)(v4 + 40);
  v12 = *(_QWORD *)(v4 + 48);
  v11 = *(_QWORD *)(v4 + 56);
  v13 = *(_QWORD *)(v4 + 64);
  v14 = *(_BYTE *)(v4 + 72);
  v15 = *(_QWORD *)(v4 + 80);
  v23[0] = v6;
  v23[1] = v5;
  v23[2] = v7;
  v23[3] = v8;
  v23[4] = v10;
  v23[5] = v9;
  v23[6] = v12;
  v23[7] = v11;
  v23[8] = v13;
  v24 = v14;
  v25 = v15;
  v21 = v23;
  v22 = 1;
  v16 = v7;
  v17 = v6;
  sub_100166B74(v8, v10);
  sub_100166B74(v9, v12);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v15);
  OS_dispatch_queue.sync<A>(execute:)(&v27, a2, v20, &type metadata for Bool);

  sub_100012C50(v8, v10);
  sub_100012C50(v9, v12);
  swift_bridgeObjectRelease(v15);
  result = swift_bridgeObjectRelease(v11);
  *a3 = v27;
  return result;
}

uint64_t sub_100282134(char *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  char *v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v4 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateAccessQueue];
  v8[2] = a1;
  v5 = a1;
  v6 = v4;
  OS_dispatch_queue.sync<A>(execute:)(&v9, a3, v8, &type metadata for Bool);

  return v9;
}

uint64_t sub_1002821A8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t result;
  _BYTE v18[16];
  _QWORD *v19;
  _QWORD v20[9];
  char v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  v2 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v23, 0, 0);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(v2 + 56);
  v11 = *(_QWORD *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  v20[0] = *(_QWORD *)v2;
  v4 = (void *)v20[0];
  v20[1] = v3;
  v20[2] = v5;
  v20[3] = v6;
  v20[4] = v8;
  v20[5] = v7;
  v20[6] = v10;
  v20[7] = v9;
  v20[8] = v11;
  v21 = v12;
  v22 = v13;
  v19 = v20;
  v14 = v5;
  v15 = v4;
  sub_100166B74(v6, v8);
  sub_100166B74(v7, v10);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v13);
  OS_dispatch_queue.sync<A>(execute:)(&v24, sub_100284604, v18, &type metadata for Bool);

  sub_100012C50(v6, v8);
  sub_100012C50(v7, v10);
  swift_bridgeObjectRelease(v13);
  result = swift_bridgeObjectRelease(v9);
  *a2 = v24;
  return result;
}

void sub_1002822E8(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  unsigned __int8 v41;
  char v42;
  _QWORD v43[4];
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[16];
  void **v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63[32];
  void *v64;

  v48 = a2;
  v46 = a3;
  ObjectType = swift_getObjectType(a2);
  v5 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v63, 0, 0);
  v6 = *(_QWORD *)(v5 + 8);
  v8 = *(void **)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v11 = *(_QWORD *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 40);
  v12 = *(_QWORD *)(v5 + 48);
  v13 = *(_QWORD *)(v5 + 56);
  v14 = *(_QWORD *)(v5 + 64);
  v15 = *(_BYTE *)(v5 + 72);
  v16 = *(_QWORD *)(v5 + 80);
  v52 = *(void **)v5;
  v7 = v52;
  v53 = v6;
  v54 = v8;
  v55 = v9;
  v56 = v11;
  v57 = v10;
  v58 = v12;
  v59 = v13;
  v60 = v14;
  v61 = v15;
  v62 = v16;
  v51 = &v52;
  v47 = v8;
  v17 = v7;
  sub_100166B74(v9, v11);
  sub_100166B74(v10, v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v16);
  v45 = ObjectType;
  OS_dispatch_queue.sync<A>(execute:)(&v64, sub_100019380, v50, ObjectType);

  sub_100012C50(v9, v11);
  sub_100012C50(v10, v12);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v13);
  v18 = v64;
  v19 = sub_1000189CC();
  if (v19)
  {
    v20 = (void *)v19;

  }
  else
  {
    v22 = (void *)sub_1000187EC();

    if (v22)
      goto LABEL_5;
    v20 = (void *)sub_1000189CC();
    if (!v20)
    {
      v20 = (void *)sub_1000187EC();
      if (!v20)
      {
        v42 = 0;
        goto LABEL_11;
      }
    }
  }

LABEL_5:
  v47 = &v44;
  v23 = *(_QWORD *)(v5 + 8);
  v25 = *(void **)(v5 + 16);
  v26 = *(_QWORD *)(v5 + 24);
  v27 = *(_QWORD *)(v5 + 32);
  v28 = *(_QWORD *)(v5 + 40);
  v30 = *(_QWORD *)(v5 + 48);
  v29 = *(_QWORD *)(v5 + 56);
  v31 = *(_QWORD *)(v5 + 64);
  v52 = *(void **)v5;
  v24 = v52;
  v53 = v23;
  LOBYTE(v23) = *(_BYTE *)(v5 + 72);
  v32 = *(_QWORD *)(v5 + 80);
  v54 = v25;
  v55 = v26;
  v56 = v27;
  v57 = v28;
  v58 = v30;
  v59 = v29;
  v60 = v31;
  v61 = v23;
  v62 = v32;
  __chkstk_darwin(v21);
  v43[2] = &v52;
  v34 = v33;
  v35 = v24;
  sub_100166B74(v26, v27);
  sub_100166B74(v28, v30);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v32);
  v36 = v49;
  OS_dispatch_queue.sync<A>(execute:)(&v64, sub_100019380, v43, v45);
  v49 = v36;

  sub_100012C50(v26, v27);
  sub_100012C50(v28, v30);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);
  v37 = v64;
  v38 = sub_1000189CC();
  if (v38)
  {
    v39 = (void *)v38;

  }
  else
  {
    v39 = (void *)sub_1000187EC();

    if (!v39)
    {
      v42 = 1;
      goto LABEL_11;
    }
  }
  v40 = (void *)sub_1000189CC();
  if (!v40)
    v40 = (void *)sub_1000187EC();
  v41 = objc_msgSend(v39, "isEqual:", v40);

  v42 = v41 ^ 1;
LABEL_11:
  *v46 = v42;
}

void sub_100282684(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v39[16];
  _QWORD *v40;
  _QWORD v41[9];
  char v42;
  uint64_t v43;
  _BYTE v44[32];
  void *v45;

  v3 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v44, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 72);
  v14 = *(_QWORD *)(v3 + 80);
  v41[0] = *(_QWORD *)v3;
  v5 = (void *)v41[0];
  v41[1] = v4;
  v41[2] = v6;
  v41[3] = v7;
  v41[4] = v8;
  v41[5] = v9;
  v41[6] = v11;
  v41[7] = v10;
  v41[8] = v12;
  v42 = v13;
  v43 = v14;
  v40 = v41;
  v15 = v6;
  v16 = v5;
  sub_100166B74(v7, v8);
  sub_100166B74(v9, v11);
  v17 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v14);
  OS_dispatch_queue.sync<A>(execute:)(&v45, sub_100019380, v39, v17);

  sub_100012C50(v7, v8);
  sub_100012C50(v9, v11);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v10);
  v18 = v45;
  if (a2)
  {
    v19 = objc_opt_self(NSManagedObjectID);
    v20 = (void *)swift_dynamicCastObjCClass(a2, v19);
    swift_unknownObjectRetain(a2);
    if (v20)
    {
      v21 = sub_100018628();
      if (v21)
      {
        v22 = v21;
        v23 = objc_opt_self(NSManagedObjectID);
        v24 = swift_dynamicCastObjCClass(v22, v23);
        if (v24)
        {
          LOBYTE(v20) = objc_msgSend(v20, "isEqual:", v24);
          swift_unknownObjectRelease(v22, v26);
          swift_unknownObjectRelease(a2, v27);

          goto LABEL_16;
        }
        swift_unknownObjectRelease(v22, v25);
      }
    }
    v30 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
    v20 = (void *)swift_dynamicCastObjCClass(a2, v30);
    if (!v20)
    {

      swift_unknownObjectRelease(a2, v36);
      goto LABEL_16;
    }
    swift_unknownObjectRetain(a2);
    v31 = sub_100018628();
    if (v31)
    {
      v32 = v31;
      v33 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
      v34 = swift_dynamicCastObjCClass(v32, v33);
      if (v34)
      {
        LOBYTE(v20) = objc_msgSend(v20, "isEqual:", v34, swift_unknownObjectRetain(v32).n128_f64[0]);
        swift_unknownObjectRelease_n(v32, 2);

        swift_unknownObjectRelease_n(a2, 2);
        goto LABEL_16;
      }
      swift_unknownObjectRelease(v32, v35);
    }
    swift_unknownObjectRelease_n(a2, 2);

    LOBYTE(v20) = 0;
    goto LABEL_16;
  }
  v28 = sub_100018628();

  LOBYTE(v20) = v28 == 0;
  if (v28)
    swift_unknownObjectRelease(v28, v29);
LABEL_16:
  *a3 = (_BYTE)v20;
}

uint64_t sub_100282A18()
{
  uint64_t v0;
  unint64_t v1;
  void **v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;
  _BYTE v29[24];

  v2 = (void **)(v0 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v29, 33, 0);
  v3 = *v2;
  v27[2] = v2;
  v4 = v3;
  v5 = sub_100012E18((uint64_t *)&unk_1005D6780);
  OS_dispatch_queue.sync<A>(execute:)(&v28, sub_1002845A4, v27, v5);

  v6 = v28;
  v7 = swift_endAccess(v29);
  v8 = (unint64_t)v6 >> 62;
  if (!((unint64_t)v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0xAuLL)
      return v6;
    goto LABEL_3;
  }
  if (v6 < 0)
    v25 = v6;
  else
    v25 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v6);
  if (v26 < 11)
    return v6;
  swift_bridgeObjectRetain(v6);
  v9 = _CocoaArrayWrapper.endIndex.getter(v25);
  result = swift_bridgeObjectRelease(v6);
  if ((v9 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain(v6);
    v10 = _CocoaArrayWrapper.endIndex.getter(v25);
    v21 = swift_bridgeObjectRelease(v6);
    if (v10 < 10)
    {
      __break(1u);
      goto LABEL_27;
    }
LABEL_3:
    if ((v6 & 0xC000000000000001) != 0)
    {
      type metadata accessor for ICSelectionStateModel(0);
      _ArrayBuffer._typeCheckSlowPath(_:)(0);
      _ArrayBuffer._typeCheckSlowPath(_:)(1);
      _ArrayBuffer._typeCheckSlowPath(_:)(2);
      _ArrayBuffer._typeCheckSlowPath(_:)(3);
      _ArrayBuffer._typeCheckSlowPath(_:)(4);
      _ArrayBuffer._typeCheckSlowPath(_:)(5);
      _ArrayBuffer._typeCheckSlowPath(_:)(6);
      _ArrayBuffer._typeCheckSlowPath(_:)(7);
      _ArrayBuffer._typeCheckSlowPath(_:)(8);
      _ArrayBuffer._typeCheckSlowPath(_:)(9);
    }
    if (v8)
    {
      if (v6 < 0)
        v11 = v6;
      else
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v10 = _CocoaArrayWrapper.subscript.getter(0, 10, v11);
      v8 = v12;
      v9 = v13;
      v1 = v14;
      swift_bridgeObjectRelease_n(v6, 2);
      if ((v1 & 1) == 0)
        goto LABEL_11;
    }
    else
    {
      v9 = 0;
      v10 = v6 & 0xFFFFFFFFFFFFFF8;
      v8 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
      v1 = 21;
    }
    v16 = type metadata accessor for __ContiguousArrayStorageBase(0, v7);
    v17 = swift_unknownObjectRetain_n(v10, 2);
    v18 = (_QWORD *)swift_dynamicCastClass(v17, v16);
    if (!v18)
    {
      swift_unknownObjectRelease(v10, v19);
      v18 = _swiftEmptyArrayStorage;
    }
    v20 = v18[2];
    v21 = swift_release(v18);
    if (!__OFSUB__(v1 >> 1, v9))
    {
      v21 = v10;
      if (v20 == (v1 >> 1) - v9)
      {
        v6 = swift_dynamicCastClass(v10, v16);
        swift_unknownObjectRelease(v10, v23);
        if (!v6)
        {
          v6 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_18;
        }
        return v6;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    swift_unknownObjectRelease(v21, v22);
LABEL_11:
    v6 = (uint64_t)sub_10016BD14(v10, v8, v9, v1);
LABEL_18:
    swift_unknownObjectRelease(v10, v15);
    return v6;
  }
  __break(1u);
  return result;
}

void sub_100282CFC(void *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v4 = objc_msgSend(a1, "objectWithID:", a2);
  v5 = objc_opt_self(ICInvitation);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (v6)
  {
    v7 = objc_msgSend(v6, "rootObject");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "objectID");

      if (v9)
      {
        v10 = v9;
        v11 = (void *)sub_1000189CC();
        if (v11 || (v11 = (void *)sub_1000187EC()) != 0)
        {
          sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
          v12 = v10;
          v13 = static NSObject.== infix(_:_:)(v12);

          if ((v13 & 1) != 0)
          {

            v14 = 1;
LABEL_15:
            v15 = v14 & 1;
            goto LABEL_16;
          }
        }
        else
        {

        }
        v16 = sub_100018628();
        if (v16)
        {
          v17 = v16;
          v18 = objc_opt_self(NSManagedObjectID);
          v19 = swift_dynamicCastObjCClass(v17, v18);
          v14 = v19;
          if (v19)
          {
            sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
            v20 = v10;
            v14 = static NSObject.== infix(_:_:)(v20);
            swift_unknownObjectRelease(v17, v21);

          }
          else
          {

            swift_unknownObjectRelease(v17, v22);
          }
        }
        else
        {

          v14 = 0;
        }
        goto LABEL_15;
      }
    }
  }

  v15 = 0;
LABEL_16:
  *a3 = v15;
}

uint64_t sub_100282EE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43[16];
  void **v44;
  _QWORD v45[3];
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57[32];
  char *v58;

  v42 = a2;
  v3 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v57, 0, 0);
  v7 = *(_QWORD *)(v6 + 8);
  v9 = *(void **)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 24);
  v11 = *(_QWORD *)(v6 + 32);
  v12 = *(_QWORD *)(v6 + 40);
  v14 = *(_QWORD *)(v6 + 48);
  v13 = *(_QWORD *)(v6 + 56);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(_BYTE *)(v6 + 72);
  v17 = *(_QWORD *)(v6 + 80);
  v46 = *(void **)v6;
  v8 = v46;
  v47 = v7;
  v48 = v9;
  v49 = v10;
  v50 = v11;
  v51 = v12;
  v52 = v14;
  v53 = v13;
  v54 = v15;
  v55 = v16;
  v56 = v17;
  v44 = &v46;
  v40 = v9;
  v18 = v8;
  sub_100166B74(v10, v11);
  sub_100166B74(v12, v14);
  v19 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v17);
  v20 = v19;
  v21 = v41;
  OS_dispatch_queue.sync<A>(execute:)(v45, sub_100019380, v43, v20);
  v41 = v21;

  sub_100012C50(v10, v11);
  sub_100012C50(v12, v14);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v13);
  v22 = (char *)v45[0];
  v23 = v45[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v45[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v45, 0, 0);
  sub_100012CE8(v23, (uint64_t)v5, &qword_1005D1508);
  v24 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v5, 1, v24);
  result = sub_100012DDC((uint64_t)v5, &qword_1005D1508);
  if ((_DWORD)v23 == 1
    || *(_QWORD *)&v22[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult])
  {
    v40 = &v39;
    v26 = *(_QWORD *)(v6 + 8);
    v28 = *(void **)(v6 + 16);
    v29 = *(_QWORD *)(v6 + 24);
    v31 = *(_QWORD *)(v6 + 32);
    v30 = *(_QWORD *)(v6 + 40);
    v33 = *(_QWORD *)(v6 + 48);
    v32 = *(_QWORD *)(v6 + 56);
    v34 = *(_QWORD *)(v6 + 64);
    v46 = *(void **)v6;
    v27 = v46;
    v47 = v26;
    LOBYTE(v26) = *(_BYTE *)(v6 + 72);
    v35 = *(_QWORD *)(v6 + 80);
    v48 = v28;
    v49 = v29;
    v50 = v31;
    v51 = v30;
    v52 = v33;
    v53 = v32;
    v54 = v34;
    v55 = v26;
    v56 = v35;
    __chkstk_darwin(result);
    *(&v39 - 4) = &v46;
    *(&v39 - 3) = sub_10028324C;
    *(&v39 - 2) = 0;
    v39 = v36;
    v37 = v27;
    sub_100166B74(v29, v31);
    sub_100166B74(v30, v33);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v35);
    v38 = sub_100012E18(&qword_1005D2540);
    OS_dispatch_queue.sync<A>(execute:)(&v58, sub_10028476C, &v39 - 6, v38);

    sub_100012C50(v29, v31);
    sub_100012C50(v30, v33);
    swift_bridgeObjectRelease(v35);
    result = swift_bridgeObjectRelease(v32);
    v22 = v58;
  }
  *v42 = v22;
  return result;
}

BOOL sub_10028324C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[24];

  v2 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *a1;
  v6 = *a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v6, v10, 0, 0);
  sub_100012CE8(v6, (uint64_t)v4, &qword_1005D1508);
  v7 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
  sub_100012DDC((uint64_t)v4, &qword_1005D1508);
  return (_DWORD)v6 != 1
      && *(_QWORD *)(v5 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult) == 0;
}

uint64_t sub_100283344@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43[16];
  void **v44;
  _QWORD v45[3];
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57[32];
  char *v58;

  v42 = a2;
  v3 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_selectionStateQueue, v57, 0, 0);
  v7 = *(_QWORD *)(v6 + 8);
  v9 = *(void **)(v6 + 16);
  v10 = *(_QWORD *)(v6 + 24);
  v11 = *(_QWORD *)(v6 + 32);
  v12 = *(_QWORD *)(v6 + 40);
  v14 = *(_QWORD *)(v6 + 48);
  v13 = *(_QWORD *)(v6 + 56);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(_BYTE *)(v6 + 72);
  v17 = *(_QWORD *)(v6 + 80);
  v46 = *(void **)v6;
  v8 = v46;
  v47 = v7;
  v48 = v9;
  v49 = v10;
  v50 = v11;
  v51 = v12;
  v52 = v14;
  v53 = v13;
  v54 = v15;
  v55 = v16;
  v56 = v17;
  v44 = &v46;
  v40 = v9;
  v18 = v8;
  sub_100166B74(v10, v11);
  sub_100166B74(v12, v14);
  v19 = type metadata accessor for ICSelectionStateModel(0);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v17);
  v20 = v19;
  v21 = v41;
  OS_dispatch_queue.sync<A>(execute:)(v45, sub_100019380, v43, v20);
  v41 = v21;

  sub_100012C50(v10, v11);
  sub_100012C50(v12, v14);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v13);
  v22 = (char *)v45[0];
  v23 = v45[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v45[0] + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v45, 0, 0);
  sub_100012CE8(v23, (uint64_t)v5, &qword_1005D1508);
  v24 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v5, 1, v24);
  result = sub_100012DDC((uint64_t)v5, &qword_1005D1508);
  if ((_DWORD)v23 == 1
    || !*(_QWORD *)&v22[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult])
  {
    v40 = &v39;
    v26 = *(_QWORD *)(v6 + 8);
    v28 = *(void **)(v6 + 16);
    v29 = *(_QWORD *)(v6 + 24);
    v31 = *(_QWORD *)(v6 + 32);
    v30 = *(_QWORD *)(v6 + 40);
    v33 = *(_QWORD *)(v6 + 48);
    v32 = *(_QWORD *)(v6 + 56);
    v34 = *(_QWORD *)(v6 + 64);
    v46 = *(void **)v6;
    v27 = v46;
    v47 = v26;
    LOBYTE(v26) = *(_BYTE *)(v6 + 72);
    v35 = *(_QWORD *)(v6 + 80);
    v48 = v28;
    v49 = v29;
    v50 = v31;
    v51 = v30;
    v52 = v33;
    v53 = v32;
    v54 = v34;
    v55 = v26;
    v56 = v35;
    __chkstk_darwin(result);
    *(&v39 - 4) = &v46;
    *(&v39 - 3) = sub_1002836AC;
    *(&v39 - 2) = 0;
    v39 = v36;
    v37 = v27;
    sub_100166B74(v29, v31);
    sub_100166B74(v30, v33);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v35);
    v38 = sub_100012E18(&qword_1005D2540);
    OS_dispatch_queue.sync<A>(execute:)(&v58, sub_10028476C, &v39 - 6, v38);

    sub_100012C50(v29, v31);
    sub_100012C50(v30, v33);
    swift_bridgeObjectRelease(v35);
    result = swift_bridgeObjectRelease(v32);
    v22 = v58;
  }
  *v42 = v22;
  return result;
}

BOOL sub_1002836AC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[24];

  v2 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *a1;
  v6 = *a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v6, v10, 0, 0);
  sub_100012CE8(v6, (uint64_t)v4, &qword_1005D1508);
  v7 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
  sub_100012DDC((uint64_t)v4, &qword_1005D1508);
  return (_DWORD)v6 != 1
      && *(_QWORD *)(v5 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult) != 0;
}

uint64_t sub_1002837D0(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = 0;
  if (v7)
  {
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a3)
         : *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v15 = v9;
      v11 = a1(&v15);

      if (v4 || (v11 & 1) != 0)
        break;
      v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_14:
        if (a3 < 0)
          v13 = a3;
        else
          v13 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(a3);
        v8 = 0;
        if (!v7)
          return v8;
      }
      else
      {
        ++v8;
        if (v12 == v7)
          return 0;
      }
    }
  }
  return v8;
}

unint64_t sub_1002838E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t i;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void (*v14)(_QWORD *);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(unint64_t, uint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char **);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  _QWORD v59[3];
  char v60[24];
  char *v61;

  v58 = a2;
  v3 = sub_100012E18(&qword_1005D1508);
  v4 = __chkstk_darwin(v3);
  v55 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (unint64_t)&v54 - v6;
  v57 = a1;
  i = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_69;
  v9 = *(_QWORD *)((i & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (!v9)
  {
LABEL_12:
    swift_bridgeObjectRelease(i);
    v22 = *v57;
    if (!((unint64_t)*v57 >> 62))
      return *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22 < 0)
      v51 = *v57;
    else
      v51 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v57);
    v10 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease(v22);
    return v10;
  }
LABEL_3:
  v10 = 0;
  v56 = i & 0xC000000000000001;
  v11 = (uint64_t)&qword_1005D1508;
  while (1)
  {
    if (v56)
      v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, i);
    else
      v12 = (char *)*(id *)(i + 8 * v10 + 32);
    v13 = v12;
    v14 = *(void (**)(_QWORD *))(v58 + 24);
    if (v14)
    {
      v15 = *(_QWORD *)(v58 + 32);
      v59[0] = v12;
      v16 = v9;
      v17 = v12;
      sub_100166B74((uint64_t)v14, v15);
      v14(v59);
      sub_100012C50((uint64_t)v14, v15);

      v9 = v16;
    }
    v18 = (uint64_t)&v13[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess(&v13[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v60, 0, 0);
    sub_100012CE8(v18, v7, &qword_1005D1508);
    v19 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    v20 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    LODWORD(v18) = v20(v7, 1, v19);
    sub_100012DDC(v7, &qword_1005D1508);

    if ((_DWORD)v18 == 1)
      break;
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      if (i < 0)
        v50 = i;
      else
        v50 = i & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(i);
      v9 = _CocoaArrayWrapper.endIndex.getter(v50);
      if (!v9)
        goto LABEL_12;
      goto LABEL_3;
    }
    ++v10;
    if (v21 == v9)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease(i);
  v24 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_79:
    if (v11 < 0)
      v52 = v11;
    else
      v52 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v53 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v11);
    if (v24 != v53)
      goto LABEL_18;
    return v10;
  }
  v11 = *v57;
  if ((unint64_t)*v57 >> 62)
    goto LABEL_79;
  if (v24 != *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    for (i = v10 + 5; ; ++i)
    {
      v7 = i - 4;
      v25 = *v57;
      if ((*v57 & 0xC000000000000001) != 0)
      {
        v26 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v25);
      }
      else
      {
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_59;
        if (v7 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_60;
        v26 = (char *)*(id *)(v25 + 8 * i);
      }
      v27 = v26;
      v28 = *(void (**)(char **))(v58 + 24);
      if (v28)
      {
        v29 = *(_QWORD *)(v58 + 32);
        v61 = v26;
        v30 = v26;
        sub_100166B74((uint64_t)v28, v29);
        v28(&v61);
        sub_100012C50((uint64_t)v28, v29);

      }
      v31 = (uint64_t)&v27[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v27[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v59, 0, 0);
      v32 = v55;
      sub_100012CE8(v31, v55, &qword_1005D1508);
      LODWORD(v31) = v20(v32, 1, v19);
      sub_100012DDC(v32, &qword_1005D1508);

      if ((_DWORD)v31 == 1)
        goto LABEL_46;
      if (v7 != v10)
        break;
LABEL_45:
      if (__OFADD__(v10++, 1))
        goto LABEL_62;
LABEL_46:
      v46 = i - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_61;
      v47 = *v57;
      if ((unint64_t)*v57 >> 62)
      {
        if (v47 < 0)
          v49 = *v57;
        else
          v49 = v47 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v57);
        v48 = _CocoaArrayWrapper.endIndex.getter(v49);
        swift_bridgeObjectRelease(v47);
      }
      else
      {
        v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v46 == v48)
        return v10;
    }
    v33 = *v57;
    if ((*v57 & 0xC000000000000001) != 0)
    {
      v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, *v57);
      v33 = *v57;
      if ((*v57 & 0xC000000000000001) == 0)
      {
LABEL_31:
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_65;
        if (v7 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_66;
        v35 = *(id *)(v33 + 8 * i);
        goto LABEL_34;
      }
    }
    else
    {
      if ((v10 & 0x8000000000000000) != 0)
        goto LABEL_63;
      if (v10 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_64;
      v34 = *(id *)(v33 + 8 * v10 + 32);
      if ((v33 & 0xC000000000000001) == 0)
        goto LABEL_31;
    }
    v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v33);
    v33 = *v57;
LABEL_34:
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v33);
    *v57 = v33;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v33 < 0 || (v33 & 0x4000000000000000) != 0)
    {
      v33 = sub_10026C694(v33);
      *v57 = v33;
    }
    v37 = *(void **)((v33 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
    *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v35;

    v38 = v57;
    specialized Array._endMutation()(v39);
    v40 = *v38;
    v41 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v38);
    *v38 = v40;
    if (!v41 || v40 < 0 || (v40 & 0x4000000000000000) != 0)
    {
      v40 = sub_10026C694(v40);
      *v57 = v40;
    }
    if ((v7 & 0x8000000000000000) != 0)
      goto LABEL_67;
    v42 = v40 & 0xFFFFFFFFFFFFFF8;
    if (v7 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_68;
    v43 = *(void **)(v42 + 8 * i);
    *(_QWORD *)(v42 + 8 * i) = v34;

    specialized Array._endMutation()(v44);
    goto LABEL_45;
  }
  return v10;
}

uint64_t sub_100283E6C(uint64_t (*a1)(id *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  v4 = v2;
  v7 = *v2;
  swift_bridgeObjectRetain(*v2);
  v8 = sub_1002837D0(a1, a2, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_57;
    v10 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
LABEL_58:
      if (v10 < 0)
        v31 = v10;
      else
        v31 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v32 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease(v10);
      if (v11 != v32)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v11 = v8 + 5;
      v35 = a2;
      while (1)
      {
        v12 = v11 - 4;
        v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v13);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v14 = *(id *)(v13 + 8 * v11);
        }
        v15 = v14;
        v36 = v14;
        v10 = a1(&v36);

        if ((v10 & 1) == 0)
          break;
LABEL_32:
        v26 = v11 - 3;
        if (__OFADD__(v12, 1))
          goto LABEL_49;
        v10 = *v4;
        if ((unint64_t)*v4 >> 62)
        {
          if (v10 < 0)
            v28 = *v4;
          else
            v28 = v10 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v4);
          v27 = _CocoaArrayWrapper.endIndex.getter(v28);
          swift_bridgeObjectRelease(v10);
        }
        else
        {
          v27 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v26 == v27)
          return v8;
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1))
          goto LABEL_50;
        goto LABEL_32;
      }
      v10 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, *v4);
        v10 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v12 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v17 = *(id *)(v10 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v8 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v16 = *(id *)(v10 + 8 * v8 + 32);
        if ((v10 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v10);
      v10 = *v4;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
      *v4 = v10;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_10026C694(v10);
        *v4 = v10;
      }
      v19 = *(void **)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v17;

      specialized Array._endMutation()(v20);
      v10 = *v4;
      v21 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
      *v4 = v10;
      if (!v21 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_10026C694(v10);
        *v4 = v10;
      }
      a2 = v35;
      if ((v12 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v22 = v10 & 0xFFFFFFFFFFFFFF8;
      if (v12 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v23 = *(void **)(v22 + 8 * v11);
      *(_QWORD *)(v22 + 8 * v11) = v16;

      v10 = (uint64_t)v4;
      specialized Array._endMutation()(v24);
      goto LABEL_31;
    }
    return v8;
  }
  v29 = *v4;
  if (!((unint64_t)*v4 >> 62))
    return *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v29 < 0)
    v33 = *v4;
  else
    v33 = v29 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v29);
  return v34;
}

void sub_1002841C4(uint64_t a1, uint64_t a2, void **a3, char a4)
{
  sub_100276998(a1, a2, *a3, a4);
}

BOOL sub_1002841CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  _BYTE v11[24];

  v3 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *a2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v6, v11, 0, 0);
  sub_100012CE8(v6, (uint64_t)v5, &qword_1005D1508);
  v7 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1;
  sub_100012DDC((uint64_t)v5, &qword_1005D1508);
  return v8;
}

BOOL sub_1002842A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  _BYTE v11[24];

  v3 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *a2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v6, v11, 0, 0);
  sub_100012CE8(v6, (uint64_t)v5, &qword_1005D1508);
  v7 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1;
  sub_100012DDC((uint64_t)v5, &qword_1005D1508);
  return v8;
}

_QWORD *sub_10028437C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  _QWORD *result;
  __int128 v9[5];
  uint64_t v10;

  v6 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v6;
  v9[4] = *(_OWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 80);
  v7 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v7;
  result = sub_10027725C(v9, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1002843D0(void **a1, uint64_t a2, uint64_t (*a3)(void **))
{
  void *v4;
  void (*v5)(void **);
  id v6;
  void *v8;
  void *v9;

  v4 = *a1;
  v5 = *(void (**)(void **))(a2 + 24);
  v9 = *a1;
  if (v5)
  {
    v8 = v4;
    v6 = v4;
    v5(&v8);

  }
  return a3(&v9) & 1;
}

id sub_100284440@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  id result;
  _OWORD v7[5];
  uint64_t v8;

  v4 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v4;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  result = sub_1000101A0((uint64_t)v7);
  if (!v2)
    *a2 = result;
  return result;
}

id sub_100284494@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t (*v4)(void **);
  id result;
  void *v6;

  v3 = *(void **)(a1 + 16);
  v4 = *(uint64_t (**)(void **))(a1 + 24);
  v6 = v3;
  result = v3;
  if (v4)
    result = (id)v4(&v6);
  *a2 = v3;
  return result;
}

void sub_1002844F0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (uint64_t *)(a1 + 80);
  v5 = sub_1002838E4((uint64_t *)(a1 + 80), a1);
  v6 = v5;
  v7 = *(_QWORD *)(a1 + 80);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v10 = *(_QWORD *)(a1 + 80);
    else
      v10 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 80));
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v7);
    if (v8 >= v6)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
    {
LABEL_3:
      sub_10026D1B0(v6, v8);
      v9 = *v4;
      *a2 = *v4;
      swift_bridgeObjectRetain(v9);
      return;
    }
  }
  __break(1u);
}

void sub_1002845A4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1002844F0(*(_QWORD *)(v1 + 16), a1);
}

void sub_1002845BC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_100282684(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1002845D4(char *a1@<X8>)
{
  uint64_t v1;

  sub_1002822E8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1002845EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1002821A8(*(_QWORD *)(v1 + 16), a1);
}

void sub_100284604(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16) != 0;
}

uint64_t sub_10028461C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100281FE0(*(_QWORD *)(v1 + 16), (uint64_t)sub_10028463C, a1);
}

uint64_t sub_10028463C@<X0>(_BYTE *a1@<X8>)
{
  return sub_100284698((uint64_t (*)(_OWORD *, uint64_t))sub_100275D8C, a1);
}

uint64_t sub_10028465C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100281FE0(*(_QWORD *)(v1 + 16), (uint64_t)sub_10028467C, a1);
}

uint64_t sub_10028467C@<X0>(_BYTE *a1@<X8>)
{
  return sub_100284698((uint64_t (*)(_OWORD *, uint64_t))sub_100275BD0, a1);
}

uint64_t sub_100284698@<X0>(uint64_t (*a1)(_OWORD *, uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t result;
  _OWORD v10[5];
  uint64_t v11;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(v2 + 24);
  v7 = *(_OWORD *)(v5 + 48);
  v10[2] = *(_OWORD *)(v5 + 32);
  v10[3] = v7;
  v10[4] = *(_OWORD *)(v5 + 64);
  v11 = *(_QWORD *)(v5 + 80);
  v8 = *(_OWORD *)(v5 + 16);
  v10[0] = *(_OWORD *)v5;
  v10[1] = v8;
  result = a1(v10, v6);
  if (!v3)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1002846FC(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void **v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  v4 = *(void ***)(v1 + 32);
  v5 = *a1;
  v6 = *(_OWORD *)(v2 + 48);
  v9[2] = *(_OWORD *)(v2 + 32);
  v9[3] = v6;
  v9[4] = *(_OWORD *)(v2 + 64);
  v10 = *(_QWORD *)(v2 + 80);
  v7 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v7;
  return sub_100275F48(v5, (uint64_t)v9, v3, *v4) & 1;
}

void sub_100284754(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100281C54(*(_QWORD *)(v1 + 16), a1);
}

_QWORD *sub_10028476C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1002861AC(a1);
}

uint64_t sub_100284780(void **a1)
{
  uint64_t v1;

  return sub_1002843D0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void **))(v1 + 24)) & 1;
}

void sub_1002847A0(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100281860(*(_QWORD *)(v1 + 16), a1);
}

void sub_1002847B8(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100281564(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002847D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002847FC()
{
  uint64_t v0;

  sub_1002813A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)sub_100019380, &OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
}

uint64_t sub_100284824()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100284834(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100005A68(*(_QWORD *)(v1 + 16), (uint64_t)sub_100019380, &OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult, a1);
}

uint64_t sub_10028485C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100284880()
{
  uint64_t v0;

  sub_1002810C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100284888()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100284898(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100280E2C(*(_QWORD *)(v1 + 16), a1);
}

void sub_1002848B0()
{
  uint64_t v0;

  sub_1002813A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)sub_100019380, &OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection);
}

uint64_t sub_1002848D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002848E8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100005A68(*(_QWORD *)(v1 + 16), (uint64_t)sub_100019380, &OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID, a1);
}

void sub_100284910(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100280A9C(*(_QWORD *)(v1 + 16), a1);
}

void sub_100284928(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100012AF4(*(_QWORD *)(v1 + 16), (uint64_t)sub_100019380, (uint64_t (*)(uint64_t))sub_10015BF18, a1);
}

void sub_100284950(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10028084C(*(_QWORD *)(v1 + 16), a1);
}

void sub_100284968(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1002806D8(*(_QWORD *)(v1 + 16), a1);
}

void sub_100284980(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_100012AF4(*(_QWORD *)(v1 + 16), (uint64_t)sub_100019380, (uint64_t (*)(uint64_t))sub_10015BBCC, a1);
}

uint64_t sub_1002849A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10027FEAC(*(char **)(v1 + 16), a1);
}

uint64_t sub_1002849C0()
{
  uint64_t v0;

  return sub_10028040C(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1002849CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002849DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002849EC()
{
  uint64_t v0;

  sub_1002766BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002849F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100284A04(void **a1)
{
  uint64_t v1;

  return sub_10027793C(*a1, *(_QWORD **)(v1 + 16), **(void ***)(v1 + 24)) & 1;
}

uint64_t sub_100284A28(void **a1)
{
  uint64_t v1;

  return sub_100280190(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100284A40@<X0>(uint64_t a1@<X8>)
{
  return sub_100284C4C((uint64_t (*)(uint64_t, uint64_t, _OWORD *, uint64_t))sub_1002762E0, a1);
}

uint64_t sub_100284A68(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(id *)(a1 + 16);
  v10 = v2;
  sub_100166B74(v3, v4);
  sub_100166B74(v5, v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100284AE4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 80);

  sub_100012C50(v2, v4);
  sub_100012C50(v5, v6);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_100284B60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v15;
  id v16;

  if (result)
  {
    v15 = a6;
    swift_retain(a2);
    swift_retain(a4);
    v16 = a5;
    sub_100166B74(a7, a8);
    return sub_100166B74(a9, a10);
  }
  return result;
}

uint64_t sub_100284BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10027F6E0(*(char **)(v1 + 16), a1);
}

uint64_t sub_100284BF4()
{
  uint64_t v0;

  return sub_10027F9C4(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100284C00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100284C10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100284C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100284C30@<X0>(uint64_t a1@<X8>)
{
  return sub_100284C4C((uint64_t (*)(uint64_t, uint64_t, _OWORD *, uint64_t))sub_1002760B4, a1);
}

uint64_t sub_100284C4C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, _OWORD *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t result;
  char v13;
  _OWORD v14[5];
  uint64_t v15;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(unsigned __int8 *)(v2 + 40);
  v10 = *(_OWORD *)(v8 + 48);
  v14[2] = *(_OWORD *)(v8 + 32);
  v14[3] = v10;
  v14[4] = *(_OWORD *)(v8 + 64);
  v15 = *(_QWORD *)(v8 + 80);
  v11 = *(_OWORD *)(v8 + 16);
  v14[0] = *(_OWORD *)v8;
  v14[1] = v11;
  result = a1(v6, v7, v14, v9);
  if (!v3)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v13 & 1;
  }
  return result;
}

uint64_t sub_100284CB8(char **a1)
{
  uint64_t v1;
  uint64_t (*v2)(char **);
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[5];
  uint64_t v12;

  v2 = *(uint64_t (**)(char **))(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v7 = *a1;
  v8 = *(_OWORD *)(v6 + 48);
  v11[2] = *(_OWORD *)(v6 + 32);
  v11[3] = v8;
  v11[4] = *(_OWORD *)(v6 + 64);
  v12 = *(_QWORD *)(v6 + 80);
  v9 = *(_OWORD *)(v6 + 16);
  v11[0] = *(_OWORD *)v6;
  v11[1] = v9;
  return sub_10027650C(v7, v2, v3, v4, (uint64_t)v11, v5) & 1;
}

uint64_t sub_100284D0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100284D30(id *a1)
{
  uint64_t v1;
  void (*v2)(id *);
  id v3;
  id v4;

  v2 = *(void (**)(id *))(v1 + 16);
  v4 = *a1;
  v3 = v4;
  v2(&v4);

}

uint64_t sub_100284D70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

void sub_100284DA4(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  Class isa;
  objc_class *v31;
  _BYTE *v32;
  uint64_t v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  char *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  NSString v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id (*v60)();
  uint64_t v61;
  _BOOL4 v62;
  void *v63;
  unint64_t *v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  _QWORD *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _QWORD *v80;
  id v81;
  id v82;
  char *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id (*v91)();
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  void *v105;
  void *v106;
  id v107;
  id v108;
  void *v109;
  NSURL *v110;
  void *v111;
  void *v112;
  unsigned int v113;
  double v114;
  void *v115;
  id v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  id (*v122)();
  uint64_t v123;
  uint64_t v124;
  id (*v125)();
  id v126;
  id (*v127)();
  id v128;
  id (*v129)();
  id v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)();
  uint64_t v139;
  uint64_t v140;
  char *v141;
  int v142;
  uint64_t (*v143)(char *, uint64_t, uint64_t);
  _BYTE *v144;
  void *v145;
  uint64_t (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  id (*v149)();
  id v150;
  id (*v151)();
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  id (*v156)();
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t);
  char v161;
  char v162[32];
  char v163[24];
  char v164[8];
  objc_super v165;
  void **aBlock;
  uint64_t v167;
  void *v168;
  void *v169;
  uint64_t (*v170)();
  uint64_t v171;
  id (*v172)();
  uint64_t v173;
  id (*v174)();
  uint64_t v175;

  v159 = a4;
  v160 = a3;
  v150 = a2;
  v5 = sub_100012E18(&qword_1005D67D8);
  __chkstk_darwin(v5);
  v149 = (id (*)())((char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v157 = sub_100012E18((uint64_t *)&unk_1005D67E0);
  v156 = *(id (**)())(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (uint64_t)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D1500);
  v9 = __chkstk_darwin(v8);
  v154 = (uint64_t)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v152 = (uint64_t)&v137 - v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v137 - v13;
  v15 = sub_100012E18(&qword_1005D1508);
  v16 = __chkstk_darwin(v15);
  v153 = (uint64_t)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v137 - v18;
  v20 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v20);
  v22 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v137 - v28;
  sub_100012CE8(a1, (uint64_t)v22, &qword_1005CEFD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_100012DDC((uint64_t)v22, &qword_1005CEFD0);
    if (v160)
      v160(1);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v22, v23);
  sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
  isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
  v31 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
  v32 = objc_allocWithZone(v31);
  v33 = swift_unknownObjectWeakInit(&v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
  v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
  swift_unknownObjectWeakAssign(v33, 0);
  v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
  v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 1;
  *(_QWORD *)&v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
  v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
  *(_QWORD *)&v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
  *(_QWORD *)&v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = isa;
  v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
  *(_QWORD *)&v32[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
  v165.receiver = v32;
  v165.super_class = v31;
  v34 = objc_msgSendSuper2(&v165, "init");
  type metadata accessor for ICSelectionStateModel(0);
  v35 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v148 = v23;
  v35(v27, v29, v23);
  v151 = (id (*)())v34;
  v145 = v34;
  sub_10015D2E0(v27, v34);
  v37 = v36;
  v38 = (uint64_t)&v36[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&v36[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v164, 0, 0);
  sub_100012CE8(v38, (uint64_t)v19, &qword_1005D1508);
  v39 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v143 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
  v40 = v143(v19, 1, v39);
  sub_100012DDC((uint64_t)v19, &qword_1005D1508);
  v41 = v37;
  v42 = (uint64_t)&v37[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  swift_beginAccess(&v37[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v163, 0, 0);
  sub_100012CE8(v42, (uint64_t)v14, &qword_1005D1500);
  v43 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48);
  v147 = v43;
  v146 = v44;
  LODWORD(v37) = ((uint64_t (*)(char *, uint64_t))v44)(v14, 1);
  sub_100012DDC((uint64_t)v14, &qword_1005D1500);
  v142 = (int)v37;
  v45 = v29;
  v46 = v40;
  if ((_DWORD)v37 != 1 || v40 != 1)
  {
    v157 = v42;
    v155 = v38;
    v63 = (void *)sub_1000189CC();
    v64 = &qword_1005D6000;
    v140 = v24;
    v141 = v45;
    v144 = v41;
    v139 = v39;
    if (v63 || (v63 = (void *)sub_1000187EC()) != 0)
    {
      v65 = objc_msgSend(v63, "ic_isModernNoteType");
      v66 = v158;
      if (v65
        && v150
        && objc_msgSend(v150, "ic_behavior") == (id)1
        && (v67 = v66 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration,
            swift_beginAccess(v66 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_utilityConfiguration, v162, 0, 0), *(_QWORD *)v67))
      {
        LODWORD(v156) = v40;
        v68 = *(_QWORD *)(v67 + 64);
        v69 = *(_QWORD *)(v67 + 72);
        v71 = *(_QWORD *)(v67 + 48);
        v70 = *(_QWORD *)(v67 + 56);
        v72 = *(_QWORD **)(v67 + 32);
        v73 = *(_QWORD *)(v67 + 24);
        v74 = *(_QWORD *)(v67 + 8);
        v75 = *(id *)(v67 + 40);
        swift_retain(v74);
        swift_retain(v73);
        v76 = v72;
        sub_100166B74(v71, v70);
        sub_100166B74(v68, v69);

        swift_release(v73);
        swift_release(v74);
        sub_100012C50(v71, v70);
        sub_100012C50(v68, v69);
        if (v72)
        {
          v161 = 0;
          v72 = (_QWORD *)swift_allocObject(&unk_100563258, 40, 7);
          v72[2] = v76;
          v72[3] = v63;
          v72[4] = &v161;
          v77 = swift_allocObject(&unk_100563280, 32, 7);
          *(_QWORD *)(v77 + 16) = sub_100285F24;
          *(_QWORD *)(v77 + 24) = v72;
          v170 = sub_100194900;
          v171 = v77;
          aBlock = _NSConcreteStackBlock;
          v167 = 1107296256;
          v168 = sub_100016618;
          v169 = &unk_100563298;
          v78 = _Block_copy(&aBlock);
          v79 = v171;
          v80 = v76;
          v81 = v63;
          swift_retain(v77);
          swift_release(v79);
          objc_msgSend(v80, "performBlockAndWait:", v78);
          _Block_release(v78);
          LOBYTE(v78) = swift_isEscapingClosureAtFileLocation(v77, "", 113, 868, 49, 1);
          swift_release(v77);
          v82 = v144;
          if ((v78 & 1) != 0)
          {
            __break(1u);
            return;
          }
          v83 = v141;
          v66 = v158;
          v46 = (int)v156;
          v64 = &qword_1005D6000;
          if ((v161 & 1) == 0)
          {
            v136 = v148;
            if (v160)
            {
              v160(2);

              (*(void (**)(char *, uint64_t))(v140 + 8))(v83, v136);
              swift_release(v72);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v148);
              swift_release(v72);

            }
            return;
          }

          v138 = sub_100285F24;
        }
        else
        {

          v138 = 0;
          v66 = v158;
          v46 = (int)v156;
          v64 = &qword_1005D6000;
        }
      }
      else
      {

        v138 = 0;
        v72 = 0;
      }
    }
    else
    {
      v138 = 0;
      v72 = 0;
      v66 = v158;
    }
    v150 = v72;
    v84 = v152;
    sub_100012CE8(v157, v152, &qword_1005D1500);
    v85 = v146(v84, 1, v147);
    v86 = sub_100012DDC(v84, &qword_1005D1500);
    if (v85 == 1)
    {
      __chkstk_darwin(v86);
      *(&v137 - 2) = v66;
      v88 = v87;
      v89 = sub_100012E18(&qword_1005D6798);
      OS_dispatch_queue.sync<A>(execute:)(&aBlock, sub_1002865E0, &v137 - 4, v89);

      v90 = (uint64_t)aBlock;
      v91 = v151;
      sub_10015C714(v90, v145);

      swift_unknownObjectRelease(v90, v92);
    }
    v93 = v66 + v64[232];
    swift_beginAccess(v93, &aBlock, 32, 0);
    if (*(_QWORD *)v93)
    {
      v94 = *(_QWORD *)(v93 + 64);
      v95 = *(_QWORD *)(v93 + 72);
      v97 = *(_QWORD *)(v93 + 48);
      v96 = *(_QWORD *)(v93 + 56);
      v98 = *(void **)(v93 + 32);
      v99 = *(_QWORD *)(v93 + 24);
      v100 = v46;
      v101 = *(_QWORD *)(v93 + 8);
      v102 = *(id *)(v93 + 40);
      swift_retain(v101);
      swift_retain(v99);
      v103 = v98;
      sub_100166B74(v97, v96);
      sub_100166B74(v94, v95);

      swift_release(v99);
      v104 = v101;
      v46 = v100;
      v66 = v158;
      swift_release(v104);
      sub_100012C50(v97, v96);
      sub_100012C50(v94, v95);
      v105 = *(void **)(v93 + 32);
      v106 = *(void **)(v93 + 40);
      v107 = v106;
      v108 = v105;
    }
    else
    {
      v106 = 0;
      v105 = 0;
    }
    *(_QWORD *)&v114 = swift_endAccess(&aBlock).n128_u64[0];
    v115 = *(void **)(v66 + OBJC_IVAR____TtC11MobileNotes26ICSelectionStateController_persistenceConfiguration);
    v116 = objc_msgSend(v115, "makeModernBackgroundContext", v114);
    if (v116)
    {
      v117 = v116;
      v118 = swift_allocObject(&unk_100563230, 24, 7);
      *(_QWORD *)(v118 + 16) = v117;
      v156 = sub_10028664C;
    }
    else
    {
      v156 = 0;
      v118 = 0;
    }
    v119 = objc_msgSend(v115, "makeLegacyBackgroundContext");
    if (v119)
    {
      v120 = v119;
      v121 = swift_allocObject(&unk_100563208, 24, 7);
      *(_QWORD *)(v121 + 16) = v120;
      v122 = sub_100285ED8;
    }
    else
    {
      v122 = 0;
      v121 = 0;
    }
    v142 = v142 != 1;
    LODWORD(v152) = v46 != 1;
    v123 = swift_allocObject(&unk_1005631B8, 17, 7);
    *(_BYTE *)(v123 + 16) = 1;
    v124 = swift_allocObject(&unk_1005631E0, 17, 7);
    *(_BYTE *)(v124 + 16) = 1;
    type metadata accessor for ICSelectionStateUtilities();
    aBlock = (void **)sub_100285EC0;
    v167 = v123;
    v168 = sub_100285EC0;
    v169 = (void *)v124;
    v170 = (uint64_t (*)())v105;
    v171 = (uint64_t)v106;
    v125 = v156;
    v172 = v156;
    v173 = v118;
    v174 = v122;
    v175 = v121;
    v126 = v106;
    v127 = v151;
    v128 = v105;
    v129 = v122;
    v130 = v128;
    sub_100166B74((uint64_t)v125, v118);
    sub_100166B74((uint64_t)v129, v121);
    sub_10018D654((uint64_t)v144, v145, (uint64_t)&aBlock);

    sub_100012C50((uint64_t)v125, v118);
    v151 = v129;
    sub_100012C50((uint64_t)v129, v121);
    v149 = v127;

    v131 = v153;
    sub_100012CE8(v155, v153, &qword_1005D1508);
    LODWORD(v127) = v143((char *)v131, 1, v139) == 1;
    sub_100012DDC(v131, &qword_1005D1508);
    v132 = v154;
    sub_100012CE8(v157, v154, &qword_1005D1500);
    v133 = v146(v132, 1, v147) == 1;
    sub_100012DDC(v132, &qword_1005D1500);
    if (((v152 ^ v127) & 1) != 0 || v142 != v133)
    {
      v135 = v144;
      v144[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason] = 1;
      sub_10027980C(v135, 1, 0, 0, 0);
      v134 = v148;
      if (!v160)
      {
        (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v148);

        swift_release(v124);
        swift_release(v123);

        sub_100012C50((uint64_t)v156, v118);
        sub_100012C50((uint64_t)v151, v121);

        goto LABEL_44;
      }
      v160(0);

      swift_release(v124);
      swift_release(v123);

    }
    else
    {
      v134 = v148;
      if (!v160)
      {
        (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v148);

        swift_release(v124);
        swift_release(v123);

        sub_100012C50((uint64_t)v156, v118);
        sub_100012C50((uint64_t)v151, v121);

        goto LABEL_44;
      }
      v160(1);

      swift_release(v124);
      swift_release(v123);

    }
    sub_100012C50((uint64_t)v156, v118);
    sub_100012C50((uint64_t)v151, v121);

    (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v134);
LABEL_44:
    sub_100012C50((uint64_t)v138, (uint64_t)v150);
    return;
  }
  v47 = sub_100016638((unint64_t *)&unk_1005D67F0, (uint64_t *)&unk_1005D67E0, (uint64_t)&protocol conformance descriptor for Regex<A>);
  v48 = v155;
  v49 = v157;
  v50 = Regex.init<A>(_:)(sub_10027EBD0, 0, &type metadata for Substring, v157, v47);
  URL.scheme.getter(v50);
  v52 = v41;
  if (v51
    && (v53 = v51,
        v54 = String._bridgeToObjectiveC()(),
        swift_bridgeObjectRelease(v53),
        LODWORD(v53) = ICIsNotesURLScheme(v54),
        v54,
        (_DWORD)v53))
  {
    v56 = URL.absoluteString.getter(v55);
    v58 = v57;
    aBlock = (void **)v56;
    v167 = v57;
    v59 = sub_1001BFF58();
    v60 = v149;
    BidirectionalCollection<>.wholeMatch<A>(of:)(v48, &type metadata for String, v49, v59, v47);
    swift_bridgeObjectRelease(v58);
    v61 = sub_100012E18((uint64_t *)&unk_1005D6800);
    v62 = (*(uint64_t (**)(id (*)(), uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v60, 1, v61) == 1;
    sub_100012DDC((uint64_t)v60, &qword_1005D67D8);
  }
  else
  {
    v62 = 1;
  }
  v109 = (void *)objc_opt_self(ICAppURLUtilities);
  URL._bridgeToObjectiveC()(v110);
  v112 = v111;
  v113 = objc_msgSend(v109, "isShowFolderListURL:", v111);

  if (v160)
    v160(v62 & (v113 ^ 1));

  (*((void (**)(uint64_t, uint64_t))v156 + 1))(v48, v49);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v45, v148);
}

uint64_t sub_100285E8C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100285EB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100285EC0()
{
  uint64_t v0;

  return ICArchiveImporter.Configuration.retainsIdentifiers.getter(*(_BYTE *)(v0 + 16));
}

uint64_t sub_100285EC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

id sub_100285ED8()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100285EF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100285F24()
{
  uint64_t v0;

  sub_10027F2C0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 **)(v0 + 32));
}

uint64_t sub_100285F30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100285F40(char **a1@<X8>)
{
  uint64_t v1;

  sub_10027A784(*(_QWORD *)(v1 + 16), (uint64_t)sub_100019380, 0, a1);
}

_QWORD *sub_100285F64(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t sub_100285FB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

double sub_100285FDC()
{
  uint64_t v0;

  return sub_100279B4C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_100285FE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100285FF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

void sub_10028601C()
{
  uint64_t v0;

  sub_100276998(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_10028602C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028603C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t *, uint64_t *);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t *))(v3 + 16);
  v6 = *a1;
  v8 = *a2;
  v9 = v6;
  result = v5(&v9, &v8);
  *a3 = result & 1;
  return result;
}

unint64_t sub_100286084()
{
  unint64_t result;

  result = qword_1005D6840;
  if (!qword_1005D6840)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D6840);
  }
  return result;
}

void sub_1002860C8(char **a1@<X8>)
{
  uint64_t v1;

  sub_10027A784(*(_QWORD *)(v1 + 16), (uint64_t)sub_100019380, 1, a1);
}

uint64_t sub_1002860EC()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100286120()
{
  uint64_t v0;

  sub_10027D8B0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void ***)(v0 + 40));
}

uint64_t sub_10028612C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028613C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100283344(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100286154@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100282EE4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10028616C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100286190()
{
  uint64_t v0;

  sub_10027BF70(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_10028619C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1002861AC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _QWORD *result;
  __int128 v10[5];
  uint64_t v11;

  v5 = v1[2];
  v4 = v1[3];
  v6 = v1[4];
  v7 = *(_OWORD *)(v5 + 48);
  v10[2] = *(_OWORD *)(v5 + 32);
  v10[3] = v7;
  v10[4] = *(_OWORD *)(v5 + 64);
  v11 = *(_QWORD *)(v5 + 80);
  v8 = *(_OWORD *)(v5 + 16);
  v10[0] = *(_OWORD *)v5;
  v10[1] = v8;
  result = sub_10027725C(v10, v4, v6);
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_100286208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028624C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100286270()
{
  uint64_t v0;

  return sub_10027B29C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100286278()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100286298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v2);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1002862D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1002862E0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10027B010(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002862F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286308()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286318@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10027A63C(*(_QWORD *)(v1 + 16), a1);
}

double sub_100286330()
{
  uint64_t v0;

  return sub_10027AFA4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), 1);
}

uint64_t sub_10028634C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10028635C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100284494(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100286374()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286384()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286394()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1002863F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286400()
{
  uint64_t v0;

  return sub_100279034(*(void **)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10028640C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_10028641C()
{
  uint64_t v0;

  return sub_10027AFA4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), 0);
}

uint64_t sub_100286438()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100286448(void *a1)
{
  uint64_t v1;

  return sub_10027941C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100286450(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_100286474(char *a1, void *a2)
{
  uint64_t v2;

  return sub_10027969C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10028647C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2) & 1;
}

uint64_t sub_1002864A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002864B8()
{
  uint64_t v0;

  sub_1002775BC(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1002864C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002864D0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_100282CFC(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1002864EC()
{
  uint64_t v0;

  return (unint64_t)sub_100277A48(*(_QWORD *)(v0 + 16), (SEL *)&selRef_shouldAutomaticallySelectNoteContainerForSelectionStateController_) & 1;
}

unint64_t sub_100286510()
{
  uint64_t v0;

  return (unint64_t)sub_100277A48(*(_QWORD *)(v0 + 16), (SEL *)&selRef_shouldSelectDefaultContainerWhenInappropriateForSelectionStateController_) & 1;
}

uint64_t sub_100286534()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100286558(uint64_t a1)
{
  uint64_t v1;

  sub_100277AAC(a1, v1, (uint64_t)sub_1002865BC);
}

void sub_100286578(uint64_t a1)
{
  uint64_t v1;

  sub_100277AAC(a1, v1, (uint64_t)sub_100286598);
}

void sub_100286598(char *a1@<X8>)
{
  uint64_t v1;

  sub_100277B48(v1, (uint64_t)sub_100019380, 1, a1);
}

void sub_1002865BC(char *a1@<X8>)
{
  uint64_t v1;

  sub_100277B48(v1, (uint64_t)sub_100019380, 0, a1);
}

void sub_1002865E0(uint64_t *a1@<X8>)
{
  sub_1002847A0(a1);
}

void sub_1002865F4(_QWORD *a1@<X8>)
{
  sub_100284834(a1);
}

void sub_100286608(_QWORD *a1@<X8>)
{
  sub_100017788(a1);
}

void sub_10028661C(uint64_t *a1@<X8>)
{
  sub_100284968(a1);
}

void sub_100286630(uint64_t *a1@<X8>)
{
  sub_10001768C(a1);
}

uint64_t sub_1002866B0(void **a1)
{
  return sub_100284A04(a1) & 1;
}

void sub_1002867B0()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._object = (void *)0x80000001004852C0;
  v1._countAndFlagsBits = 0x4E20746E65636552;
  v1._object = (void *)0xEC0000007365746FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000039;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_100601A60 = (__int128)v3;
}

uint64_t sub_100286864@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, id a3@<X4>, uint64_t a4@<X6>, uint64_t *a5@<X8>)
{
  char *v10;
  NSString v11;
  uint64_t v12;
  uint64_t result;

  v10 = sub_10015ED64(1, 1);
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    a3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v11);

  }
  sub_1000163BC(0, (unint64_t *)&unk_1005CF6E0, UIAction_ptr);
  v12 = swift_allocObject(&unk_100563CF8, 32, 7);
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = v10;
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  result = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(a1, a2, 0, 0, a3, 0, 0, 0, 0, 0, 0, sub_100287EAC, v12);
  *a5 = result;
  return result;
}

void sub_1002869A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "selectModel:", a3);

  }
}

void sub_100286A00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD aBlock[5];
  uint64_t v14;
  _QWORD *v15;

  v15 = _swiftEmptyArrayStorage;
  v8 = (_QWORD *)swift_allocObject(&unk_100563C80, 56, 7);
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = &v15;
  v8[5] = a3;
  v8[6] = a4;
  v9 = swift_allocObject(&unk_100563CA8, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100287810;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000165D0;
  v14 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100016618;
  aBlock[3] = &unk_100563CC0;
  v10 = _Block_copy(aBlock);
  v11 = v14;
  swift_bridgeObjectRetain(a1);
  v12 = a2;
  swift_retain(v9);
  objc_msgSend(v12, "performBlockAndWait:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v9, "", 108, 138, 45, 1);
  swift_release(v9);
  if ((v12 & 1) != 0)
    __break(1u);
  else
    swift_release(v8);
}

double sub_100286B60(int64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double result;
  _QWORD v39[4];
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[40];

  v41 = a4;
  v42 = a5;
  v44 = a3;
  v7 = sub_100012E18(&qword_1005D1508);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v39 - v11;
  v13 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v53 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v49 = (uint64_t)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v46 = (uint64_t)v39 - v17;
  v18 = __chkstk_darwin(v16);
  v52 = (uint64_t)v39 - v19;
  __chkstk_darwin(v18);
  v48 = (uint64_t)v39 - v20;
  v21 = a2;
  v22 = sub_100287830(a1, (uint64_t)v21);
  v45 = v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v37 = a1;
    else
      v37 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v23 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (!v23)
      goto LABEL_19;
  }
  else
  {
    v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v23)
      goto LABEL_19;
  }
  if (v23 < 1)
  {
    __break(1u);
    JUMPOUT(0x100287244);
  }
  v24 = 0;
  v51 = a1 & 0xC000000000000001;
  v40 = v22 & 1;
  v39[1] = "-level Shared folder";
  v47 = v13;
  v43 = v12;
  v50 = v23;
  do
  {
    if (v51)
      v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a1);
    else
      v25 = (char *)*(id *)(a1 + 8 * v24 + 32);
    v26 = v25;
    v27 = (uint64_t)&v25[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess(&v25[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v54, 0, 0);
    sub_100287D94(v27, (uint64_t)v12);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v28(v12, 1, v13) != 1)
    {
      v29 = v48;
      sub_100287E1C((uint64_t)v12, v48);
      v30 = v29;
      v31 = v52;
      sub_100287E1C(v30, v52);
      v32 = (char *)&loc_100286DDC + dword_100287244[swift_getEnumCaseMultiPayload(v31, v13)];
      __asm { BR              X9 }
    }
    sub_100287DDC((uint64_t)v12);
    sub_100287D94(v27, (uint64_t)v10);
    if (v28(v10, 1, v13) != 1)
    {
      v33 = v46;
      sub_100287E1C((uint64_t)v10, v46);
      v34 = v33;
      v35 = v49;
      sub_100287E1C(v34, v49);
      v36 = (char *)&loc_100286ED4 + dword_10028725C[swift_getEnumCaseMultiPayload(v35, v13)];
      __asm { BR              X9 }
    }
    sub_100287DDC((uint64_t)v10);

    ++v24;
  }
  while (v50 != v24);
LABEL_19:
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for RecentNotesController()
{
  return objc_opt_self(ICRecentNotesController);
}

Class sub_1002872D4(void *a1)
{
  objc_class *v2;
  Class v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  Class isa;
  id v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *object;
  NSString v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  UIMenuElementSize preferredElementSize;
  uint64_t v30;
  id v31;
  id v32;
  Swift::String v33;
  void *v34;
  NSString v35;
  objc_class *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::OpaquePointer v41;
  _QWORD aBlock[5];
  uint64_t v43;
  UIImage_optional v44;
  Swift::String v45;

  v2 = (objc_class *)objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  v3 = v2;
  if (!v2)
    return v3;
  v4 = -[objc_class workerManagedObjectContext](v2, "workerManagedObjectContext");

  if (!v4)
    return 0;
  v5 = objc_msgSend(a1, "mostRecentSelections");
  v6 = type metadata accessor for ICSelectionStateModel(0);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  v8 = swift_allocObject(&unk_100563C08, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  sub_100286A00(v7, v4, (uint64_t)sub_1002877C4, v8);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  swift_release(v8);
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v37 = v10;
    else
      v37 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v10);
    if (v38)
    {
      v39 = sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v10);
      v12 = _bridgeCocoaArray<A>(_:)(v37, v39);
      swift_bridgeObjectRelease(v10);
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:

    swift_bridgeObjectRelease(v10);
    return 0;
  }
  swift_bridgeObjectRetain(v10);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
  sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  v12 = v10;
LABEL_6:
  swift_bridgeObjectRelease(v10);
  v13 = (void *)objc_opt_self(UIMenu);
  sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v13, "ic_inlineMenuWithChildren:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v16 = (void *)objc_opt_self(UIAction);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v45._countAndFlagsBits = 0xD00000000000003ALL;
  v45._object = (void *)0x8000000100485250;
  v18._countAndFlagsBits = 0x654D207261656C43;
  v18._object = (void *)0xEA0000000000756ELL;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v45)._object;

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v22 = swift_allocObject(&unk_100563C30, 24, 7);
  *(_QWORD *)(v22 + 16) = a1;
  aBlock[4] = sub_1002877F0;
  v43 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002489AC;
  aBlock[3] = &unk_100563C48;
  v23 = _Block_copy(aBlock);
  v24 = v43;
  v25 = a1;
  v26 = objc_msgSend(v16, "ic_actionWithTitle:handler:", v21, v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);

  v27 = sub_100012E18(&qword_1005CF6F0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100451BF0;
  *(_QWORD *)(v28 + 32) = v15;
  *(_QWORD *)(v28 + 40) = v26;
  aBlock[0] = v28;
  specialized Array._endMutation()(v28);
  preferredElementSize = aBlock[0];
  sub_1000163BC(0, (unint64_t *)&unk_1005D8A40, UIMenu_ptr);
  v30 = qword_1005CEB90;
  v31 = v15;
  v32 = v26;
  if (v30 != -1)
    swift_once(&qword_1005CEB90, sub_1002867B0);
  v33 = (Swift::String)xmmword_100601A60;
  v34 = (void *)objc_opt_self(UIImage);
  swift_bridgeObjectRetain(v33._object);
  v35 = String._bridgeToObjectiveC()();
  v36 = (objc_class *)objc_msgSend(v34, "__systemImageNamedSwift:", v35);

  v44.is_nil = String._bridgeToObjectiveC()();
  v44.value.super.isa = v36;
  v3 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v44, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v41).super.super.isa;

  return v3;
}

uint64_t sub_1002877A0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002877C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_100286864(a1, a2, a3, v4, a4);
}

uint64_t sub_1002877CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002877F0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "clearRecentSelections");
}

uint64_t sub_100287800()
{
  return sub_100287E70((void (*)(_QWORD))&_swift_bridgeObjectRelease, 56);
}

double sub_100287810()
{
  uint64_t v0;

  return sub_100286B60(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100287820()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100287830(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v39[4];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  uint64_t v50;

  v3 = v2;
  v39[3] = a2;
  v5 = sub_100012E18(&qword_1005D1508);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v50 = (uint64_t)v39 - v9;
  v10 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v46 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v43 = (uint64_t)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v40 = (uint64_t)v39 - v14;
  v15 = __chkstk_darwin(v13);
  v45 = (uint64_t)v39 - v16;
  __chkstk_darwin(v15);
  v41 = (uint64_t)v39 - v17;
  v47 = a1;
  if (a1 >> 62)
    goto LABEL_17;
  v18 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v47);
  for (; v18; v18 = _CocoaArrayWrapper.endIndex.getter(v37))
  {
    v39[1] = v3;
    v44 = v47 & 0xC000000000000001;
    v19 = 4;
    v48 = v10;
    v42 = v18;
    while (1)
    {
      v3 = v19 - 4;
      v20 = v44
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, v47)
          : (char *)*(id *)(v47 + 8 * v19);
      v21 = v20;
      v22 = v19 - 3;
      if (__OFADD__(v3, 1))
        break;
      v23 = (uint64_t)v8;
      v24 = (uint64_t)&v20[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v49, 0, 0);
      v25 = v50;
      sub_100287D94(v24, v50);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
      if (v26(v25, 1, v10) != 1)
      {
        v27 = v41;
        sub_100287E1C(v50, v41);
        v28 = v27;
        v29 = v45;
        sub_100287E1C(v28, v45);
        v30 = (char *)&loc_100287A64 + dword_100287D64[swift_getEnumCaseMultiPayload(v29, v10)];
        __asm { BR              X9 }
      }
      sub_100287DDC(v50);
      v31 = v24;
      v8 = (char *)v23;
      sub_100287D94(v31, v23);
      v32 = v26(v23, 1, v10);
      if (v32 != 1)
      {
        v33 = v40;
        sub_100287E1C(v23, v40);
        v34 = v33;
        v35 = v43;
        sub_100287E1C(v34, v43);
        v36 = (char *)&loc_100287B70 + dword_100287D7C[swift_getEnumCaseMultiPayload(v35, v10)];
        __asm { BR              X9 }
      }
      sub_100287DDC(v23);

      ++v19;
      v10 = v48;
      if (v22 == v18)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (v47 < 0)
      v37 = v47;
    else
      v37 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v47);
  }
LABEL_21:
  swift_bridgeObjectRelease(v47);
  return 0;
}

uint64_t sub_100287D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D1508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287DDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18(&qword_1005D1508);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100287E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287E60()
{
  return sub_100287E70((void (*)(_QWORD))&_swift_release, 32);
}

uint64_t sub_100287E70(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));

  return swift_deallocObject(v2, a2, 7);
}

void sub_100287EAC(uint64_t a1)
{
  uint64_t v1;

  sub_1002869A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t RenameFolderIntent.name.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t RenameFolderIntent.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return IntentParameter.wrappedValue.setter(v3);
}

void *RenameFolderIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static RenameFolderIntent.persistentIdentifier;
}

unint64_t static RenameFolderIntent.persistentIdentifier.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_100287F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static RenameFolderIntent.title);
  sub_10012A0B0(v10, (uint64_t)static RenameFolderIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x4620656D616E6552, 0xED00007265646C6FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t RenameFolderIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEB98 != -1)
    swift_once(&qword_1005CEB98, sub_100287F48);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static RenameFolderIntent.title);
}

uint64_t static RenameFolderIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEB98 != -1)
    swift_once(&qword_1005CEB98, sub_100287F48);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static RenameFolderIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static RenameFolderIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100485320);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static RenameFolderIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D68D8);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D68E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2B18();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for RenameFolderIntent, v6);
  v7._countAndFlagsBits = 0x7420656D616E6552;
  v7._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10045F980, v8);
  v10 = sub_100012E18(&qword_1005D68E8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._object = (void *)0xEB00000000206F74;
  v11._countAndFlagsBits = 0x207265646C6F6620;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_10045F9A8, v12);
  v14 = sub_100012E18(&qword_1005D68F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for RenameFolderIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for RenameFolderIntent, v6);
}

uint64_t RenameFolderIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  v6 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v5[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[27] = v8;
  v5[28] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  v5[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v5[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  v5[31] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[32] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[33] = swift_task_alloc(v13);
  v5[34] = swift_task_alloc(v13);
  v14 = type metadata accessor for FolderEntity(0);
  v5[35] = v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[36] = swift_task_alloc(v15);
  v5[37] = swift_task_alloc(v15);
  v16 = type metadata accessor for MainActor(0);
  v5[38] = static MainActor.shared.getter(v16);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor, v17);
  v5[39] = v18;
  v5[40] = v19;
  return swift_task_switch(sub_1002886C8, v18, v19);
}

uint64_t sub_1002886C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRelease(v2);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
  {
    v19 = *(_QWORD *)(v0 + 264);
    v18 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 240);
    v49 = *(_QWORD *)(v0 + 256);
    v50 = *(_QWORD *)(v0 + 248);
    v22 = *(_QWORD *)(v0 + 224);
    v21 = *(_QWORD *)(v0 + 232);
    v24 = *(_QWORD *)(v0 + 208);
    v23 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 200);
    swift_release(*(_QWORD *)(v0 + 304));
    v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100485370);
    static Locale.current.getter(v26);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v24);
    v27 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v21, v22, "Folder name prompt when creating a folder via App Intents", 57, 2);
    v28 = IntentParameter.projectedValue.getter(v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v19, v18, v50);
    IntentDialog.init(_:)(v19);
    v29 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v25, 0, 1, v29);
    v30 = type metadata accessor for AppIntentError(0);
    v31 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v30, v31, 0, 0);
    IntentParameter.needsValueError(_:)(v25);
    swift_release(v28);
    v32 = sub_1001BA4E4(v25);
    swift_willThrow(v32);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v18, v50);
    goto LABEL_7;
  }
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 112));
  v4 = *(_QWORD *)(v0 + 120);
  v5 = String.count.getter(*(_QWORD *)(v0 + 112), v4);
  swift_bridgeObjectRelease(v4);
  v6 = ICFolderNameMaxLength;
  if (ICFolderNameMaxLength < v5)
  {
    swift_release(*(_QWORD *)(v0 + 304));
    type metadata accessor for ICError(0);
    v8 = v7;
    *(_QWORD *)(v0 + 136) = 233;
    v9 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v9, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
    *(_QWORD *)(inited + 40) = v11;
    _StringGuts.grow(_:)(49);
    swift_bridgeObjectRelease(0xE000000000000000);
    *(_QWORD *)(v0 + 152) = v6;
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v12._object;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(object);
    v14._countAndFlagsBits = 0x7463617261686320;
    v14._object = (void *)0xEB00000000737265;
    String.append(_:)(v14);
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0x1000000000000024;
    *(_QWORD *)(inited + 56) = 0x8000000100485340;
    v15 = sub_1001356D4(inited);
    v16 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v17 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 128), v0 + 136, v15, v8, v16);
    swift_willThrow(v17);
LABEL_7:
    v33 = *(_QWORD *)(v0 + 288);
    v35 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 272);
    v37 = *(_QWORD *)(v0 + 232);
    v36 = *(_QWORD *)(v0 + 240);
    v38 = *(_QWORD *)(v0 + 224);
    v39 = *(_QWORD *)(v0 + 200);
    swift_task_dealloc(*(_QWORD *)(v0 + 296));
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v42 = *(_QWORD *)(v0 + 184);
  v41 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 168);
  v43 = *(_QWORD *)(v0 + 176);
  IntentParameter.wrappedValue.getter(*(_QWORD **)(v0 + 296));
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 144));
  v45 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 328) = v45;
  v46 = (_QWORD *)swift_allocObject(&unk_100563D30, 48, 7);
  *(_QWORD *)(v0 + 336) = v46;
  v46[2] = v44;
  v46[3] = v43;
  v46[4] = v42;
  v46[5] = v41;
  v47 = unk_1005D0B0C;
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0B08 + dword_1005D0B08);
  swift_retain(v44);
  swift_retain(v43);
  swift_retain(v42);
  swift_retain(v41);
  v48 = (_QWORD *)swift_task_alloc(v47);
  *(_QWORD *)(v0 + 344) = v48;
  *v48 = v0;
  v48[1] = sub_100288B5C;
  return v51(v45, (uint64_t)sub_100289934, (uint64_t)v46);
}

uint64_t sub_100288B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t **v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v4 = *v3;
  v5 = (*v3)[43];
  v4[44] = a1;
  v4[45] = a2;
  v4[46] = v2;
  swift_task_dealloc(v5);
  v7 = (void *)v4[41];
  v6 = v4[42];
  v8 = v4[37];
  if (v2)
  {
    sub_10020148C(v4[37]);
    swift_release(v6);

    v9 = v4[39];
    v10 = v4[40];
    v11 = sub_100288DC8;
  }
  else
  {
    swift_release(v4[42]);

    sub_10020148C(v8);
    v9 = v4[39];
    v10 = v4[40];
    v11 = sub_100288C0C;
  }
  return swift_task_switch(v11, v9, v10);
}

uint64_t sub_100288C0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 360);
  v2 = dword_1005DB974;
  v3 = *(id *)(v0 + 352);
  v4 = v1;
  v5 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 376) = v5;
  *v5 = v0;
  v5[1] = sub_100288C70;
  return FolderEntity.init(for:in:)(*(_QWORD *)(v0 + 288), *(void **)(v0 + 352), *(void **)(v0 + 360));
}

uint64_t sub_100288C70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 376);
  *(_QWORD *)(*v1 + 384) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100288E64;
  else
    v4 = sub_100288CD0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 312), *(_QWORD *)(v2 + 320));
}

uint64_t sub_100288CD0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(v0 + 352);
  v1 = *(void **)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 304));
  v9 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  static IntentResult.result<A>(value:)(v4, v5, v9);

  sub_10020148C(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100288DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 304));
  v1 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100288E64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 304);

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100288F10(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = objc_opt_self(ICFolder);
  v6 = swift_dynamicCastObjCClass(a1, v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = a1;
    sub_100289A7C(v7);
    v10 = v9;
    v12 = v11;

    if (v2)
      return;
LABEL_6:
    *a2 = v10;
    a2[1] = v12;
    return;
  }
  v13 = objc_opt_self(NoteStoreObject);
  v14 = swift_dynamicCastObjCClass(a1, v13);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = a1;
    sub_100289C80(v15);
    v10 = v17;
    v12 = v18;

    if (v2)
      return;
    goto LABEL_6;
  }
  type metadata accessor for ICError(0);
  v20 = v19;
  v34 = 233;
  v21 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
  inited = swift_initStackObject(v21, &v33);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  *(_QWORD *)(inited + 40) = v23;
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v27;
  *(_QWORD *)(inited + 56) = v29;
  v30 = sub_1001356D4(inited);
  v31 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
  v32 = _BridgedStoredNSError.init(_:userInfo:)(&v35, &v34, v30, v20, v31);
  swift_willThrow(v32);
}

uint64_t sub_10028912C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v6 = v1[3];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D68FC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  return RenameFolderIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_1002891A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = _s11MobileNotes18RenameFolderIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t _s11MobileNotes18RenameFolderIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  _BYTE *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _BYTE v59[12];
  unsigned int v60;
  void (*v61)(_BYTE *);
  unsigned int v62;
  void (*v63)(_BYTE *, uint64_t, uint64_t);
  uint64_t v64;
  void (*v65)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void (*v66)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  char v82;
  char v83;

  v0 = sub_100012E18(&qword_1005CEF00);
  __chkstk_darwin(v0);
  v72 = &v59[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = type metadata accessor for InputConnectionBehavior(0);
  v71 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v74 = &v59[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v4 = __chkstk_darwin(v3);
  v70 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v73 = &v59[-v6];
  v7 = sub_100012E18(&qword_1005D1EB0);
  __chkstk_darwin(v7);
  v69 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v9);
  v11 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v59[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = &v59[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = &v59[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  v67 = v22;
  __chkstk_darwin(v22);
  v25 = &v59[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = sub_100012E18((uint64_t *)&unk_1005CEFE0);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 104);
  v62 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v64 = v12;
  v28(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  v63 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0, 0, v18, v15, "Parameter title for Rename Folder intent", 40, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100477D80);
  static Locale.current.getter(v29);
  v28(v15, v27, v12);
  v30 = v11;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0, 0, v18, v15, "Parameter description for folder", 32, 2);
  v66 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v66(v11, 0, 1, v22);
  v31 = type metadata accessor for FolderEntity(0);
  v32 = v69;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v69, 1, 1, v31);
  v33 = type metadata accessor for IntentDialog(0);
  v34 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v65 = v34;
  v35 = v73;
  v34(v73, 1, 1, v33);
  v36 = v70;
  v34(v70, 1, 1, v33);
  v78 = VisibleAccountsQuery.init(requireFolderCreationSupport:)();
  v79 = v37;
  v80 = v38 & 1;
  v81 = v39 & 1;
  v82 = v40 & 1;
  v83 = v41 & 1;
  v60 = enum case for InputConnectionBehavior.default(_:);
  v61 = *(void (**)(_BYTE *))(v71 + 104);
  v42 = v74;
  v61(v74);
  v43 = sub_100127E60();
  v71 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v25, v30, v32, v35, v36, v42, &v78, &type metadata for VisibleFoldersQuery, v43);
  sub_100012E18(&qword_1005CF070);
  v44 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v44);
  v45 = v62;
  v46 = v63;
  v47 = v64;
  v63(v15, v62, v64);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0, 0, v18, v15, "Parameter title for Rename Folder intent", 40, 2);
  v48 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100477DA0);
  static Locale.current.getter(v48);
  v46(v15, v45, v47);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0, 0, v18, v15, "Parameter description for name", 30, 2);
  v49 = v30;
  v66(v30, 0, 1, v67);
  v50 = type metadata accessor for String.IntentInputOptions(0);
  v78 = 0;
  v79 = 0;
  v51 = v72;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v72, 1, 1, v50);
  v52 = v73;
  v65(v73, 1, 1, v33);
  v53 = v74;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v61)(v74, v60, v75);
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v25, v49, &v78, v51, v52, v53);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v76 = 0xD000000000000024;
  v77 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(&v78, &v76, &type metadata for String, &protocol witness table for String);
  v54 = type metadata accessor for AppDependencyManager(0);
  v55 = static AppDependencyManager.shared.getter(v54);
  AppDependency.__allocating_init(key:manager:)(&v78, v55);
  sub_100012E18(&qword_1005CEE50);
  v76 = 0xD000000000000021;
  v77 = 0x8000000100476B70;
  v56 = AnyHashable.init<A>(_:)(&v78, &v76, &type metadata for String, &protocol witness table for String);
  v57 = static AppDependencyManager.shared.getter(v56);
  AppDependency.__allocating_init(key:manager:)(&v78, v57);
  return v71;
}

uint64_t sub_1002898A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002898D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002898F8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_100289934(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_100288F10(a1, a2);
}

unint64_t sub_100289954()
{
  unint64_t result;

  result = qword_1005D6900;
  if (!qword_1005D6900)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RenameFolderIntent, &type metadata for RenameFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D6900);
  }
  return result;
}

unint64_t sub_10028999C()
{
  unint64_t result;

  result = qword_1005D6908;
  if (!qword_1005D6908)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RenameFolderIntent, &type metadata for RenameFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D6908);
  }
  return result;
}

uint64_t sub_1002899E0(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RenameFolderIntent.perform()>>, 1)+ 8);
}

uint64_t sub_100289A04(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static RenameFolderIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for RenameFolderIntent()
{
  return &type metadata for RenameFolderIntent;
}

uint64_t sub_100289A24()
{
  return sub_100016638(&qword_1005D6918, &qword_1005D6920, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100289A50()
{
  return sub_100016638(&qword_1005D6928, &qword_1005D6930, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

void sub_100289A7C(void *a1)
{
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  NSString v13;
  NSString v14;
  unsigned __int8 v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20[2];
  uint64_t v21;

  v2 = objc_msgSend(a1, "managedObjectContext");
  if (!v2)
  {
    type metadata accessor for ICError(0);
    v8 = v7;
    v21 = 225;
    v9 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v10 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v11 = _BridgedStoredNSError.init(_:userInfo:)(v20, &v21, v9, v8, v10);
    swift_willThrow(v11);
    return;
  }
  v3 = v2;
  if ((objc_msgSend(a1, "isSystemFolder") & 1) != 0)
  {
    v4 = sub_10013F4E8();
    v5 = swift_allocError(&type metadata for AppIntentsError, v4, 0, 0);
    *v6 = 14;
  }
  else
  {
    IntentParameter.wrappedValue.getter(v20);
    v12 = v20[1];
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    objc_msgSend(a1, "setTitle:", v13);

    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "updateChangeCountWithReason:", v14);

    v20[0] = 0;
    v15 = objc_msgSend(v3, "save:", v20);
    v16 = v20[0];
    if ((v15 & 1) != 0)
    {
      v17 = v20[0];
      v18 = objc_msgSend(a1, "objectID");
      return;
    }
    v19 = v20[0];
    _convertNSErrorToError(_:)(v16);

  }
  swift_willThrow(v5);

}

void sub_100289C80(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(a1, "managedObjectContext");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10013F4E8();
    v4 = swift_allocError(&type metadata for AppIntentsError, v3, 0, 0);
    *v5 = 15;
    swift_willThrow(v4);

  }
  else
  {
    type metadata accessor for ICError(0);
    v7 = v6;
    v11 = 225;
    v8 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v9 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v10 = _BridgedStoredNSError.init(_:userInfo:)(&v12, &v11, v8, v7, v9);
    swift_willThrow(v10);
  }
}

id sub_100289D7C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _BYTE v11[80];
  uint64_t v12;
  uint64_t v13;

  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "sharedContext");
  if (!v1)
  {
    type metadata accessor for ICError(0);
    v3 = v2;
    v12 = 221;
    v4 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v4, v11);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
    *(_QWORD *)(inited + 40) = v6;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000017;
    *(_QWORD *)(inited + 56) = 0x8000000100485470;
    v7 = sub_1001356D4(inited);
    v8 = sub_100185F98();
    v9 = _BridgedStoredNSError.init(_:userInfo:)(&v13, &v12, v7, v3, v8);
    swift_willThrow(v9);
  }
  return v1;
}

uint64_t sub_100289E78()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = sub_1000A011C();
  if (v0)
  {
    v1 = v0;
    v2 = objc_opt_self(NoteContext);
    result = swift_dynamicCastObjCClass(v1, v2);
    if (result)
      return result;
    swift_unknownObjectRelease(v1, v4);
  }
  type metadata accessor for ICError(0);
  v6 = v5;
  v14 = 221;
  v7 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
  inited = swift_initStackObject(v7, &v13);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 56) = 0x8000000100485450;
  v10 = sub_1001356D4(inited);
  v11 = sub_100185F98();
  v12 = _BridgedStoredNSError.init(_:userInfo:)(&v15, &v14, v10, v6, v11);
  return swift_willThrow(v12);
}

id _sSo20ICUnifiedNoteContextC11MobileNotesE08__sharedC0ABSgvgZ_0()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v4;
  id v5;

  v0 = type metadata accessor for Logger(0);
  __chkstk_darwin(v0);
  v1 = objc_allocWithZone((Class)ICUnifiedNoteContext);
  sub_10028A1B0();
  v2 = sub_100289D7C();
  v4 = (void *)sub_100289E78();
  v5 = objc_msgSend(v1, "initWithModernNoteContext:htmlNoteContext:options:", v2, v4, 0);

  return v5;
}

unint64_t sub_10028A1B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D6938;
  if (!qword_1005D6938)
  {
    v1 = objc_opt_self(ICNoteContext);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D6938);
  }
  return result;
}

void sub_10028A1F0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void *DeleteTablesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static DeleteTablesIntent.persistentIdentifier;
}

unint64_t static DeleteTablesIntent.persistentIdentifier.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_10028A28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static DeleteTablesIntent.title);
  sub_10012A0B0(v10, (uint64_t)static DeleteTablesIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xED000073656C6261);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t DeleteTablesIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEBA0 != -1)
    swift_once(&qword_1005CEBA0, sub_10028A28C);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static DeleteTablesIntent.title);
}

uint64_t static DeleteTablesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEBA0 != -1)
    swift_once(&qword_1005CEBA0, sub_10028A28C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static DeleteTablesIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DeleteTablesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001004854B0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static DeleteTablesIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D6948);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18((uint64_t *)&unk_1005D6950);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2A08();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for DeleteTablesIntent, v6);
  v7._countAndFlagsBits = 0x74206574656C6544;
  v7._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10045FAF0, v8);
  v10 = sub_100012E18(&qword_1005D6960);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x73656C62617420;
  v11._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for DeleteTablesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for DeleteTablesIntent, v6);
}

uint64_t sub_10028A850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D6948);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18((uint64_t *)&unk_1005D6950);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, a1, a2);
  v10._countAndFlagsBits = 0x74206574656C6544;
  v10._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_10045FAF0, v11);
  v13 = sub_100012E18(&qword_1005D6960);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 0x73656C62617420;
  v14._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_10028A9C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D696C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100130768;
  return DeleteTablesIntent.perform()(a1, v4, v5, v6);
}

uint64_t DeleteTablesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = *(_QWORD *)(type metadata accessor for TableEntity(0) - 8);
  v4[9] = v5;
  v4[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10028AA90, 0, 0);
}

uint64_t sub_10028AA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    v5 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 176) = v5;
    *(_QWORD *)(v0 + 104) = *(_QWORD *)(v4 + 72);
    *(_QWORD *)(v0 + 112) = 0;
    sub_100253A98(v1 + ((v5 + 32) & ~(unint64_t)v5), v3);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 24));
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 24);
    v15 = (uint64_t (*)(void))((char *)&dword_1005D0AF8 + dword_1005D0AF8);
    v6 = (_QWORD *)swift_task_alloc(unk_1005D0AFC);
    *(_QWORD *)(v0 + 128) = v6;
    *v6 = v0;
    v6[1] = sub_10028AC48;
    return v15();
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 32));
    v11 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 144) = objc_msgSend(v11, "modernManagedObjectContext");

    v12 = (_QWORD *)swift_allocObject(&unk_100563EA0, 40, 7);
    *(_QWORD *)(v0 + 152) = v12;
    v12[2] = v10;
    v12[3] = v9;
    v12[4] = v8;
    v13 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v10);
    swift_retain(v9);
    swift_retain(v8);
    v14 = (_QWORD *)swift_task_alloc(v13);
    *(_QWORD *)(v0 + 160) = v14;
    *v14 = v0;
    v14[1] = sub_1002706AC;
    return NSManagedObjectContext.perform<A>(_:)(v14, sub_1001476AC, v12, (char *)&type metadata for () + 8);
  }
}

uint64_t sub_10028AC48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 120);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 88));

    v5 = sub_10028AE88;
  }
  else
  {

    v5 = sub_10028ACC8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10028ACC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(void);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 112) + 1;
  sub_100253ADC(*(_QWORD *)(v0 + 80));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 48);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 32));
    v6 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 144) = objc_msgSend(v6, "modernManagedObjectContext");

    v7 = (_QWORD *)swift_allocObject(&unk_100563EA0, 40, 7);
    *(_QWORD *)(v0 + 152) = v7;
    v7[2] = v5;
    v7[3] = v4;
    v7[4] = v3;
    v8 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v5);
    swift_retain(v4);
    swift_retain(v3);
    v9 = (_QWORD *)swift_task_alloc(v8);
    *(_QWORD *)(v0 + 160) = v9;
    *v9 = v0;
    v9[1] = sub_1002706AC;
    return NSManagedObjectContext.perform<A>(_:)(v9, sub_1001476AC, v7, (char *)&type metadata for () + 8);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 112) + 1;
    *(_QWORD *)(v0 + 112) = v12;
    sub_100253A98(*(_QWORD *)(v0 + 88)+ ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))+ v11 * v12, *(_QWORD *)(v0 + 80));
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 24));
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 24);
    v14 = (uint64_t (*)(void))((char *)&dword_1005D0AF8 + dword_1005D0AF8);
    v13 = (_QWORD *)swift_task_alloc(unk_1005D0AFC);
    *(_QWORD *)(v0 + 128) = v13;
    *v13 = v0;
    v13[1] = sub_10028AC48;
    return v14();
  }
}

uint64_t sub_10028AE88()
{
  uint64_t v0;

  sub_100253ADC(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028AEC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = _s11MobileNotes18DeleteTablesIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

void sub_10028AEEC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v2 = objc_opt_self(ICAttachment);
  v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = a1;
    v6 = objc_msgSend(v4, "note");
    if (v6)
    {
      v7 = v6;
      v8 = swift_allocObject(&unk_100563F50, 32, 7);
      *(_QWORD *)(v8 + 16) = v5;
      *(_QWORD *)(v8 + 24) = v7;
      v14[4] = sub_100271128;
      v15 = v8;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 1107296256;
      v14[2] = sub_10028A1F0;
      v14[3] = &unk_100563F68;
      v9 = _Block_copy(v14);
      v10 = v15;
      v11 = v5;
      v12 = v7;
      swift_release(v10);
      objc_msgSend(v12, "enumerateAttachmentsInOrderUsingBlock:", v9);
      _Block_release(v9);
      objc_msgSend(v12, "updateModificationDateAndChangeCountAndSaveImmediately");
      v13 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
      objc_msgSend((id)swift_getObjCClassFromMetadata(v13), "deleteAttachment:", v4);

    }
    else
    {

    }
  }
}

uint64_t _s11MobileNotes18DeleteTablesIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[6];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v47 = *(_QWORD *)(v0 - 8);
  v48 = v0;
  __chkstk_darwin(v0);
  v46 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v45 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v44 = (char *)&v36 - v5;
  v6 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v6);
  v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v39 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocalizedStringResource(0);
  v40 = *(_QWORD *)(v17 - 8);
  v41 = v17;
  __chkstk_darwin(v17);
  v37 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012E18(&qword_1005CEE50);
  v49 = 0xD000000000000021;
  v50 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v51, &v49, &type metadata for String, &protocol witness table for String);
  v19 = type metadata accessor for AppDependencyManager(0);
  v20 = static AppDependencyManager.shared.getter(v19);
  v42 = AppDependency.__allocating_init(key:manager:)(v51, v20);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v49 = 0xD000000000000024;
  v50 = 0x8000000100476B40;
  v21 = AnyHashable.init<A>(_:)(v51, &v49, &type metadata for String, &protocol witness table for String);
  v22 = static AppDependencyManager.shared.getter(v21);
  v38 = AppDependency.__allocating_init(key:manager:)(v51, v22);
  sub_100012E18(&qword_1005CF0B0);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x73656C626154, 0xE600000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 104);
  v25(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v26 = v37;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0, 0, v13, v10, "Parameter title for Delete Tables intent", 40, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100477DC0);
  static Locale.current.getter(v27);
  v25(v10, v24, v8);
  v28 = v43;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0, 0, v13, v10, "Parameter description for tables", 32, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v28, 0, 1, v41);
  v51[0] = 0;
  v29 = type metadata accessor for IntentDialog(0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31 = v44;
  v30(v44, 1, 1, v29);
  v32 = v45;
  v30(v45, 1, 1, v29);
  v33 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, enum case for InputConnectionBehavior.default(_:), v48);
  v34 = sub_10028B55C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v26, v28, v51, v31, v32, v33, v34);
  return v42;
}

uint64_t sub_10028B4B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10028B4DC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_10028B514()
{
  unint64_t result;

  result = qword_1005D6970;
  if (!qword_1005D6970)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteTablesIntent, &type metadata for DeleteTablesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D6970);
  }
  return result;
}

unint64_t sub_10028B55C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DCC40;
  if (!qword_1005DCC40)
  {
    v1 = type metadata accessor for TableEntity(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for TableEntity, v1);
    atomic_store(result, &qword_1005DCC40);
  }
  return result;
}

unint64_t sub_10028B5AC()
{
  unint64_t result;

  result = qword_1005D6980;
  if (!qword_1005D6980)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteTablesIntent, &type metadata for DeleteTablesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D6980);
  }
  return result;
}

unint64_t sub_10028B5F4()
{
  unint64_t result;

  result = qword_1005D6988;
  if (!qword_1005D6988)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteTablesIntent, &type metadata for DeleteTablesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D6988);
  }
  return result;
}

uint64_t sub_10028B638(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of DeleteTablesIntent.perform()>>, 1);
}

uint64_t sub_10028B648(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static DeleteTablesIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for DeleteTablesIntent()
{
  return &type metadata for DeleteTablesIntent;
}

uint64_t sub_10028B668()
{
  return sub_100016638(&qword_1005D6998, (uint64_t *)&unk_1005D69A0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10028B694()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

char *sub_10028B6C0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v11;
  _BYTE *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(void *);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  objc_class *ObjectType;
  objc_super v41;

  ObjectType = (objc_class *)swift_getObjectType(v6);
  v11 = (void *)objc_opt_self(ICNoteContext);
  v12 = v6;
  v13 = objc_msgSend(v11, "sharedContext");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "managedObjectContext");

  }
  else
  {
    v15 = 0;
  }
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_context] = v15;
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_folder] = 0;
  v16 = OBJC_IVAR___ICFolderComposerViewController_smartFolderQuery;
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_smartFolderQuery] = 0;
  v17 = OBJC_IVAR___ICFolderComposerViewController_account;
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_account] = a1;
  v18 = *(void **)&v12[v16];
  *(_QWORD *)&v12[v16] = a4;
  v19 = a1;
  v20 = a4;

  v21 = &v12[OBJC_IVAR___ICFolderComposerViewController_completion];
  *v21 = a5;
  v21[1] = a6;
  v22 = objc_allocWithZone((Class)type metadata accessor for FolderComposerCollectionView());
  swift_retain(a6);
  v23 = objc_msgSend(v22, "init");
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_collectionView] = v23;
  v24 = type metadata accessor for FolderComposerDataSource();
  swift_allocObject(v24, 88, 7);
  v25 = v19;
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource] = sub_10012B8D8((uint64_t)v23, (uint64_t)v25, a2, a3);
  v26 = *(void **)&v12[v17];
  v27 = objc_allocWithZone((Class)type metadata accessor for FolderComposerFilterViewController());
  *(_QWORD *)&v12[OBJC_IVAR___ICFolderComposerViewController_filterViewController] = sub_1002270D8((uint64_t)v26);
  v12[OBJC_IVAR___ICFolderComposerViewController_folderTitleDidAppear] = 0;

  v41.receiver = v12;
  v41.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v29 = *(void **)&v28[OBJC_IVAR___ICFolderComposerViewController_collectionView];
  v30 = v28;
  objc_msgSend(v29, "setDelegate:", v30);
  sub_10028B944(a4);

  swift_release(a6);
  v31 = *(_QWORD *)&v30[OBJC_IVAR___ICFolderComposerViewController_filterViewController];
  v32 = swift_allocObject(&unk_100564088, 24, 7);
  *(_QWORD *)(v32 + 16) = v30;
  v33 = (void (**)(void *))(v31 + OBJC_IVAR___ICFolderComposerFilterViewController_completion);
  v34 = *(_QWORD *)(v31 + OBJC_IVAR___ICFolderComposerFilterViewController_completion);
  v35 = (uint64_t)v33[1];
  *v33 = sub_10028CDEC;
  v33[1] = (void (*)(void *))v32;
  v36 = v30;
  sub_100012C50(v34, v35);
  return v36;
}

void sub_10028B944(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD v24[4];

  if (a1)
  {
    v2 = v1;
    v3 = *(void **)(v1 + OBJC_IVAR___ICFolderComposerViewController_context);
    if (v3)
    {
      v4 = *(void **)(v1 + OBJC_IVAR___ICFolderComposerViewController_account);
      v22 = a1;
      v5 = v3;
      v6 = objc_msgSend(v4, "objectID");
      v7 = objc_msgSend(v22, "filterSelectionWithManagedObjectContext:account:", v5, v6);

      v8 = v7;
      v9 = sub_100227AC4();
      v10 = *(void **)&v9[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];
      *(_QWORD *)&v9[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] = v8;
      v11 = v8;

      sub_100263F50(0, 0, 0);
      v12 = *(_QWORD *)(v2 + OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource);
      v13 = *(void **)(v12 + 56);
      *(_QWORD *)(v12 + 56) = v11;
      v14 = v11;

      sub_10012CB4C();
      v15 = OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection;
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection))
      {

      }
      else
      {
        v16 = objc_msgSend(v14, "copy");
        _bridgeAnyObjectToAny(_:)(v24, v16);
        swift_unknownObjectRelease(v16, v17);
        v18 = sub_1000163BC(0, (unint64_t *)&unk_1005D50E0, ICFilterSelection_ptr);
        v19 = swift_dynamicCast(&v23, v24, (char *)&type metadata for Any + 8, v18, 6);
        v20 = v23;
        if (!v19)
          v20 = 0;
        v21 = *(void **)(v2 + v15);
        *(_QWORD *)(v2 + v15) = v20;

      }
    }
  }
}

void sub_10028BB28(void *a1, uint64_t a2)
{
  id v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;

  v3 = a1;
  v4 = sub_100227AC4();
  v5 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] = v3;
  v6 = v3;

  sub_100263F50(0, 0, 0);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource);
  v8 = sub_100227AC4();
  v9 = *(id *)&v8[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  v10 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v9;
  v11 = v9;

  sub_10012CB4C();
  sub_10028BC78();
}

void sub_10028BC00(void *a1)
{
  char *v2;
  void *v3;
  id v4;

  v2 = sub_100227AC4();
  v3 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection] = a1;
  v4 = a1;

  sub_100263F50(0, 0, 0);
}

void sub_10028BC78()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v1 = *(void **)&v0[OBJC_IVAR___ICFolderComposerViewController_folder];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "navigationItem");
    objc_msgSend(v2, "isSmartFolder");
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v6, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v9 = v8;

    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v3, "setTitle:", v15);

  }
  else
  {
    v3 = objc_msgSend(v0, "navigationItem");
    v5 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource] + 56);
    if (v5)
      objc_msgSend(v5, "isEmpty");
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v14 = v13;

    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    objc_msgSend(v3, "setTitle:", v15);
  }

}

void sub_10028BFBC(uint64_t a1, NSString a2, uint64_t a3, uint64_t a4)
{
  id v5;

  if (a2)
    a2 = String._bridgeToObjectiveC()();
  v5 = a2;
  (*(void (**)(uint64_t))(a4 + 16))(a4);

}

void sub_10028C008(void *a1)
{
  char *v1;
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "managedObjectContext");

  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)&v1[OBJC_IVAR___ICFolderComposerViewController_context] = v4;
  *(_QWORD *)&v1[OBJC_IVAR___ICFolderComposerViewController_folder] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICFolderComposerViewController_smartFolderQuery] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ELL, 0x8000000100485620, "MobileNotes/FolderComposerViewController.swift", 46, 2, 82, 0);
  __break(1u);
}

void sub_10028C0F8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v9, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    v4 = *(void **)&v1[OBJC_IVAR___ICFolderComposerViewController_collectionView];
    objc_msgSend(v2, "addSubview:", v4);

    objc_msgSend(v4, "ic_addAnchorsToFillSuperview");
    sub_10012CB4C();
    sub_10028BC78();
    v5 = objc_msgSend(v1, "navigationItem");
    v6 = sub_1003F23A8();
    objc_msgSend(v5, "setLeftBarButtonItem:", v6);

    v7 = objc_msgSend(v1, "navigationItem");
    v8 = sub_1003F23C0();
    objc_msgSend(v7, "setRightBarButtonItem:", v8);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10028C260()
{
  uint64_t v0;
  void *v1;
  id v2;
  char *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection);
  if (v1)
  {
    if ((*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource) + 72) & 1) != 0)
    {
      LOBYTE(v1) = 1;
    }
    else
    {
      v2 = v1;
      v3 = sub_100227AC4();
      v4 = *(id *)&v3[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

      sub_1000163BC(0, (unint64_t *)&unk_1005D50E0, ICFilterSelection_ptr);
      v5 = v2;
      LOBYTE(v3) = static NSObject.== infix(_:_:)(v5);

      LOBYTE(v1) = v3 ^ 1;
    }
  }
  return v1 & 1;
}

uint64_t sub_10028C32C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  void *v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  NSString v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource];
  v3 = *(_QWORD *)(v2 + 48);
  if (!v3)
    return 0;
  v4 = *(void **)&v1[OBJC_IVAR___ICFolderComposerViewController_folder];
  if (!v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 48));
    goto LABEL_15;
  }
  v5 = objc_msgSend(v4, "title", swift_bridgeObjectRetain(*(_QWORD *)(v2 + 48)).n128_f64[0]);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = *(_QWORD *)(v2 + 48);
  if (!v8)
  {
    if (v9)
      goto LABEL_15;
    goto LABEL_13;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease(v8);
    goto LABEL_15;
  }
  v10 = *(_QWORD *)(v2 + 40);
  if (v6 == v10 && v9 == v8)
  {
    swift_bridgeObjectRelease(v3);
    v13 = v8;
    goto LABEL_28;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v9, 0);
  swift_bridgeObjectRelease(v8);
  if ((v12 & 1) != 0)
  {
LABEL_13:
    v13 = v3;
LABEL_28:
    swift_bridgeObjectRelease(v13);
    return 1;
  }
LABEL_15:
  v14 = (void *)objc_opt_self(ICFolder);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v16 = *(_QWORD *)&v1[OBJC_IVAR___ICFolderComposerViewController_account];
  *(_QWORD *)&v48 = 0;
  LODWORD(v14) = objc_msgSend(v14, "isTitleValid:account:parentFolder:error:", v15, v16, 0, &v48);

  v17 = v48;
  if ((_DWORD)v14)
  {
    v18 = (id)v48;
    return 1;
  }
  v19 = (id)v48;
  v20 = _convertNSErrorToError(_:)(v17);

  swift_willThrow(v21);
  v47 = v20;
  v22 = sub_100012E18(&qword_1005D7A90);
  v23 = sub_1000163BC(0, (unint64_t *)&unk_1005D6A80, NSError_ptr);
  swift_dynamicCast(&v46, &v47, v22, v23, 0);
  v24 = v46;
  v25 = objc_msgSend(v46, "userInfo");
  v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  v29 = v28;
  if (*(_QWORD *)(v26 + 16) && (v30 = sub_100248A98(v27, v28), (v31 & 1) != 0))
  {
    sub_100128424(*(_QWORD *)(v26 + 56) + 32 * v30, (uint64_t)&v48);
  }
  else
  {
    v48 = 0u;
    v49 = 0u;
  }
  swift_bridgeObjectRelease(v29);
  if (*((_QWORD *)&v49 + 1))
  {
    if ((swift_dynamicCast(&v44, &v48, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    {
      v40 = v26;
      goto LABEL_38;
    }
    v32 = v45;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedRecoverySuggestionErrorKey);
    v35 = v34;
    if (*(_QWORD *)(v26 + 16) && (v36 = sub_100248A98(v33, v34), (v37 & 1) != 0))
    {
      sub_100128424(*(_QWORD *)(v26 + 56) + 32 * v36, (uint64_t)&v48);
    }
    else
    {
      v48 = 0u;
      v49 = 0u;
    }
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v26);
    if (*((_QWORD *)&v49 + 1))
    {
      if ((swift_dynamicCast(&v44, &v48, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v41 = v45;
        v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v32);
        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v41);
        objc_msgSend(v1, "ic_showSingleButtonAlertWithTitle:message:", v42, v43);

LABEL_39:
        goto LABEL_40;
      }
      v40 = v32;
LABEL_38:
      swift_bridgeObjectRelease(v40);
      goto LABEL_39;
    }
    v38 = v32;
  }
  else
  {
    v38 = v26;
  }
  swift_bridgeObjectRelease(v38);

  sub_1000160C8((uint64_t)&v48);
LABEL_40:
  swift_errorRelease(v47);
  return 0;
}

void sub_10028C70C(uint64_t a1)
{
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t, id);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v16[4];

  v2 = sub_100227AC4();
  v3 = *(id *)&v2[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterDataSource_filterSelection];

  v4 = objc_msgSend(v3, "copy");
  _bridgeAnyObjectToAny(_:)(v16, v4);
  swift_unknownObjectRelease(v4, v5);
  v6 = sub_1000163BC(0, (unint64_t *)&unk_1005D50E0, ICFilterSelection_ptr);
  v7 = swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v6, 6);
  v8 = v15;
  if (!v7)
    v8 = 0;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11MobileNotes32FolderComposerBaseViewController_initialFilterSelection) = v8;

  v10 = *(void (**)(uint64_t, uint64_t, id))(a1 + OBJC_IVAR___ICFolderComposerViewController_completion);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource);
  v12 = *(_QWORD *)(v11 + 40);
  v13 = *(_QWORD *)(v11 + 48);
  swift_bridgeObjectRetain(v13);
  v14 = v3;
  v10(v12, v13, v3);
  swift_bridgeObjectRelease(v13);

}

void sub_10028CB08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR___ICFolderComposerViewController_completion + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource));

}

uint64_t type metadata accessor for FolderComposerViewController()
{
  return objc_opt_self(ICFolderComposerViewController);
}

char *sub_10028CCCC(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  v6 = objc_msgSend(a1, "account");
  v7 = objc_allocWithZone((Class)type metadata accessor for FolderComposerViewController());
  swift_retain(a3);
  v8 = sub_10028B6C0(v6, 0, 0, 0, a2, a3);
  v9 = *(void **)&v8[OBJC_IVAR___ICFolderComposerViewController_folder];
  *(_QWORD *)&v8[OBJC_IVAR___ICFolderComposerViewController_folder] = a1;
  v10 = v8;
  v11 = a1;

  v12 = *(_QWORD *)&v10[OBJC_IVAR___ICFolderComposerViewController_folderComposerDataSource];
  v13 = *(void **)(v12 + 24);
  *(_QWORD *)(v12 + 24) = a1;
  v14 = v11;

  v15 = objc_msgSend(v14, "smartFolderQueryObjC");
  sub_10028B944(v15);

  swift_release(a3);
  return v10;
}

uint64_t sub_10028CDC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10028CDEC(void *a1)
{
  uint64_t v1;

  sub_10028BB28(a1, *(_QWORD *)(v1 + 16));
}

void sub_10028CDF4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  if ((sub_10028C32C() & 1) != 0)
  {
    v1 = objc_msgSend(v0, "navigationController");
    if (v1)
    {
      v2 = v1;
      v3 = swift_allocObject(&unk_100564150, 24, 7);
      *(_QWORD *)(v3 + 16) = v0;
      v7[4] = sub_10028D184;
      v8 = v3;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_100206734;
      v7[3] = &unk_100564168;
      v4 = _Block_copy(v7);
      v5 = v8;
      v6 = v0;
      swift_release(v5);
      objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v4);
      _Block_release(v4);

    }
  }
}

void sub_10028CED4()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = v0;
  v2 = (void *)sub_10012B48C();
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "endEditing:", 0);

  }
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR___ICFolderComposerViewController_filterViewController], "ic_embedInNavigationControllerForModalPresentation");
  objc_msgSend(v1, "presentViewController:animated:completion:", v4, 1, 0);
  v5 = swift_allocObject(&unk_100564100, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v9[4] = sub_10028D168;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100206734;
  v9[3] = &unk_100564118;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = v1;
  swift_release(v7);
  objc_msgSend(v8, "ic_performBlockAfterActiveTransition:", v6);
  _Block_release(v6);

}

void sub_10028CFFC(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for SmartFolderComposerTextFieldCell();
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5 && !*(_QWORD *)&v1[OBJC_IVAR___ICFolderComposerViewController_folder])
  {
    v6 = OBJC_IVAR___ICFolderComposerViewController_folderTitleDidAppear;
    if ((v1[OBJC_IVAR___ICFolderComposerViewController_folderTitleDidAppear] & 1) == 0)
    {
      v7 = v5;
      v8 = a1;
      v9 = sub_100376928();
      objc_msgSend(v9, "becomeFirstResponder");

      v10 = swift_allocObject(&unk_1005640B0, 24, 7);
      *(_QWORD *)(v10 + 16) = v7;
      v14[4] = sub_10028D128;
      v15 = v10;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 1107296256;
      v14[2] = sub_100206734;
      v14[3] = &unk_1005640C8;
      v11 = _Block_copy(v14);
      v12 = v15;
      v13 = v8;
      swift_release(v12);
      objc_msgSend(v2, "ic_performBlockAfterActiveTransition:", v11);

      _Block_release(v11);
      *((_BYTE *)v2 + v6) = 1;
    }
  }
}

void sub_10028D128()
{
  id v0;

  v0 = sub_100376928();
  objc_msgSend(v0, "selectAll:", 0);

}

id sub_10028D168()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___ICFolderComposerViewController_collectionView), "ic_deselectAllItems");
}

void sub_10028D184()
{
  uint64_t v0;

  sub_10028C70C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10028D18C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10028D1B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_10028BFBC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t CreateFolderIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  int *FolderIntent;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t result;
  _QWORD v47[2];
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD v56[6];

  v53 = a1;
  v1 = type metadata accessor for InputConnectionBehavior(0);
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  __chkstk_darwin(v1);
  v50 = (char *)v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  __chkstk_darwin(v3);
  v49 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005CEF00);
  __chkstk_darwin(v5);
  v48 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v7);
  v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47[1] = sub_100012E18(&qword_1005CEF08);
  v24 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v26(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Parameter title for Create Folder intent", 40, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100477E40);
  static Locale.current.getter(v27);
  v26(v13, v25, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Parameter description for tags", 30, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v20);
  v28 = type metadata accessor for String.IntentInputOptions(0);
  v56[0] = 0;
  v56[1] = 0;
  v29 = v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v48, 1, 1, v28);
  v30 = type metadata accessor for IntentDialog(0);
  v31 = v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v49, 1, 1, v30);
  v32 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, enum case for InputConnectionBehavior.default(_:), v52);
  v33 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v23, v9, v56, v29, v31, v32);
  v34 = v53;
  *v53 = v33;
  FolderIntent = (int *)type metadata accessor for CreateFolderIntent(0);
  v36 = (char *)v34 + FolderIntent[5];
  v37 = type metadata accessor for AccountEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v38 = (char *)v34 + FolderIntent[6];
  v39 = type metadata accessor for FolderEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  v40 = FolderIntent[7];
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v54 = 0xD000000000000024;
  v55 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v56, &v54, &type metadata for String, &protocol witness table for String);
  v41 = type metadata accessor for AppDependencyManager(0);
  v42 = static AppDependencyManager.shared.getter(v41);
  *(uint64_t *)((char *)v34 + v40) = AppDependency.__allocating_init(key:manager:)(v56, v42);
  v43 = FolderIntent[8];
  sub_100012E18(&qword_1005CEE50);
  v54 = 0xD000000000000021;
  v55 = 0x8000000100476B70;
  v44 = AnyHashable.init<A>(_:)(v56, &v54, &type metadata for String, &protocol witness table for String);
  v45 = static AppDependencyManager.shared.getter(v44);
  result = AppDependency.__allocating_init(key:manager:)(v56, v45);
  *(uint64_t *)((char *)v34 + v43) = result;
  return result;
}

uint64_t type metadata accessor for CreateFolderIntent(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D6B70;
  if (!qword_1005D6B70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CreateFolderIntent);
  return result;
}

void *CreateFolderIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateFolderIntent.persistentIdentifier;
}

unint64_t static CreateFolderIntent.persistentIdentifier.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_10028D714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static CreateFolderIntent.title);
  sub_10012A0B0(v10, (uint64_t)static CreateFolderIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x4620657461657243, 0xED00007265646C6FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t CreateFolderIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEBA8 != -1)
    swift_once(&qword_1005CEBA8, sub_10028D714);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static CreateFolderIntent.title);
}

uint64_t static CreateFolderIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEBA8 != -1)
    swift_once(&qword_1005CEBA8, sub_10028D714);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static CreateFolderIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static CreateFolderIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100485670);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static CreateFolderIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t FolderIntent;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  Swift::String v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D6A90);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D6A98);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  v7 = sub_100019C6C(&qword_1005D6AA0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, FolderIntent, v7);
  v8._countAndFlagsBits = 0x6120657461657243;
  v8._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_10045FCD0, v9);
  v11 = sub_100012E18(&qword_1005D6AA8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v11);
  swift_release(KeyPath);
  v12._countAndFlagsBits = 0x7265646C6F6620;
  v12._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  ParameterSummaryString.init(stringInterpolation:)(v5, FolderIntent, v7);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, FolderIntent, v7);
}

uint64_t sub_10028DCF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t CreateFolderIntent.parentAccount.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t FolderIntent;

  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  return sub_100012CE8(v1 + *(int *)(FolderIntent + 20), a1, (uint64_t *)&unk_1005D6AB0);
}

uint64_t CreateFolderIntent.parentAccount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t FolderIntent;

  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  return sub_100164108(a1, v1 + *(int *)(FolderIntent + 20), (uint64_t *)&unk_1005D6AB0);
}

uint64_t (*CreateFolderIntent.parentAccount.modify())()
{
  type metadata accessor for CreateFolderIntent(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t CreateFolderIntent.parentFolder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t FolderIntent;

  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  return sub_100012CE8(v1 + *(int *)(FolderIntent + 24), a1, &qword_1005D1EB0);
}

uint64_t CreateFolderIntent.parentFolder.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t FolderIntent;

  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  return sub_100164108(a1, v1 + *(int *)(FolderIntent + 24), &qword_1005D1EB0);
}

uint64_t (*CreateFolderIntent.parentFolder.modify())()
{
  type metadata accessor for CreateFolderIntent(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t CreateFolderIntent.loggingConfiguration.getter()
{
  uint64_t v1;

  type metadata accessor for CreateFolderIntent(0);
  AppDependency.wrappedValue.getter(&v1);
  return v1;
}

uint64_t CreateFolderIntent.loggingConfiguration.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v9[4];

  type metadata accessor for CreateFolderIntent(0);
  v9[0] = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return AppDependency.wrappedValue.setter(v9);
}

uint64_t (*CreateFolderIntent.loggingConfiguration.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CreateFolderIntent(0);
  v2[4] = AppDependency.wrappedValue.modify(v2);
  return sub_10012A600;
}

uint64_t CreateFolderIntent.$loggingConfiguration.getter()
{
  type metadata accessor for CreateFolderIntent(0);
  return AppDependency.projectedValue.getter();
}

uint64_t CreateFolderIntent.perform()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t FolderIntent;
  unint64_t v24;

  v2[92] = v1;
  v2[91] = a1;
  v3 = type metadata accessor for Logger(0);
  v2[93] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[94] = v4;
  v2[95] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2[96] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[97] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[98] = v7;
  v2[99] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v2[100] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v2[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v2[102] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[103] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[104] = swift_task_alloc(v12);
  v2[105] = swift_task_alloc(v12);
  v13 = type metadata accessor for FolderEntity(0);
  v2[106] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[107] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[108] = swift_task_alloc(v15);
  v2[109] = swift_task_alloc(v15);
  v2[110] = swift_task_alloc(v15);
  v2[111] = swift_task_alloc(v15);
  v2[112] = swift_task_alloc(v15);
  v16 = type metadata accessor for AccountID(0);
  v2[113] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[114] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[115] = swift_task_alloc(v18);
  v2[116] = swift_task_alloc(v18);
  v19 = type metadata accessor for FolderID(0);
  v2[117] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[118] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[119] = swift_task_alloc(v21);
  v2[120] = swift_task_alloc(v21);
  v22 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D1EB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[121] = swift_task_alloc(v22);
  v2[122] = swift_task_alloc(v22);
  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  v2[123] = FolderIntent;
  v2[124] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(FolderIntent - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18((uint64_t *)&unk_1005D6AB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[125] = swift_task_alloc(v24);
  v2[126] = swift_task_alloc(v24);
  return swift_task_switch(sub_10028E1FC, 0, 0);
}

uint64_t sub_10028E1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v49;
  NSObject *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  void *object;
  void *v64;
  Swift::String v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  _QWORD *v87;
  uint64_t v88;
  NSObject *v89;
  id v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t inited;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void *v100;
  NSObject *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  os_log_t log;
  os_log_t loga;
  uint64_t (*v159)(uint64_t, uint64_t);

  v1 = v0 + 632;
  v2 = *(_QWORD *)(v0 + 1008);
  v3 = *(_QWORD *)(v0 + 992);
  v4 = *(_QWORD *)(v0 + 736);
  v5 = *(int *)(*(_QWORD *)(v0 + 984) + 20);
  *(_DWORD *)(v0 + 1152) = v5;
  sub_100012CE8(v4 + v5, v2, (uint64_t *)&unk_1005D6AB0);
  v6 = type metadata accessor for AccountEntity(0);
  *(_QWORD *)(v0 + 1016) = v6;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  *(_QWORD *)(v0 + 1024) = v7;
  v8 = v7(v2, 1, v6);
  sub_100012DDC(v2, (uint64_t *)&unk_1005D6AB0);
  sub_100145220(v4, v3, type metadata accessor for CreateFolderIntent);
  v9 = *(_QWORD *)(v0 + 992);
  if (v8 == 1)
  {
    sub_100145264(*(_QWORD *)(v0 + 992), type metadata accessor for CreateFolderIntent);
    goto LABEL_4;
  }
  v10 = *(_QWORD *)(v0 + 976);
  v11 = *(_QWORD *)(v0 + 856);
  v12 = *(_QWORD *)(v0 + 848);
  sub_100012CE8(v9 + *(int *)(*(_QWORD *)(v0 + 984) + 24), v10, &qword_1005D1EB0);
  sub_100145264(v9, type metadata accessor for CreateFolderIntent);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v12);
  sub_100012DDC(v10, &qword_1005D1EB0);
  if (v13 == 1)
  {
LABEL_4:
    v14 = *(_QWORD *)(v0 + 984);
    v15 = *(_QWORD *)(v0 + 968);
    v16 = *(_QWORD *)(v0 + 856);
    v17 = *(_QWORD *)(v0 + 848);
    v18 = *(_QWORD *)(v0 + 736);
    *(_QWORD *)(v0 + 616) = 0;
    sub_100012CE8(v18 + *(int *)(v14 + 24), v15, &qword_1005D1EB0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v17) == 1)
    {
      sub_100012DDC(*(_QWORD *)(v0 + 968), &qword_1005D1EB0);
      *(_QWORD *)(v0 + 1056) = 0;
      v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1024);
      v20 = *(_QWORD *)(v0 + 1016);
      v21 = *(_QWORD *)(v0 + 1000);
      sub_100012CE8(*(_QWORD *)(v0 + 736) + *(int *)(v0 + 1152), v21, (uint64_t *)&unk_1005D6AB0);
      if (v19(v21, 1, v20) == 1)
      {
        sub_100012DDC(*(_QWORD *)(v0 + 1000), (uint64_t *)&unk_1005D6AB0);
        v22 = *(id *)(v0 + 616);
        if (v22)
        {
          v23 = *(void **)(v0 + 1056);
        }
        else
        {
          AppDependency.wrappedValue.getter((_QWORD *)(v0 + 664));
          v49 = *(void **)(v0 + 664);
          v22 = objc_msgSend(v49, "defaultAccountObjectID");

          *(_QWORD *)(v0 + 616) = v22;
          v23 = *(void **)(v0 + 1056);
          if (!v22)
          {
            type metadata accessor for ICError(0);
            v93 = v92;
            *(_QWORD *)(v0 + 648) = 219;
            v94 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
            inited = swift_initStackObject(v94, v0 + 304);
            *(_OWORD *)(inited + 16) = xmmword_100451C20;
            *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
            *(_QWORD *)(inited + 40) = v96;
            *(_QWORD *)(inited + 72) = &type metadata for String;
            *(_QWORD *)(inited + 48) = 0xD00000000000001DLL;
            *(_QWORD *)(inited + 56) = 0x8000000100485690;
            v97 = sub_1001356D4(inited);
            v98 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
            v99 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 696), v0 + 648, v97, v93, v98);
            v41 = *(_QWORD *)(v0 + 696);
            swift_willThrow(v99);

            goto LABEL_28;
          }
        }
        *(_QWORD *)(v0 + 1112) = v22;
        *(_OWORD *)(v0 + 1096) = 0u;
        *(_QWORD *)(v0 + 1088) = v23;
        v50 = v22;
        IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 568));
        v51 = *(_QWORD *)(v0 + 576);
        if (v51)
        {
          v52 = *(_QWORD *)(v0 + 568);
          v53 = HIBYTE(v51) & 0xF;
          if ((v51 & 0x2000000000000000) == 0)
            v53 = v52 & 0xFFFFFFFFFFFFLL;
          if (v53)
          {
            v54 = String.count.getter(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 576));
            v55 = ICFolderNameMaxLength;
            if (ICFolderNameMaxLength < v54)
            {
              swift_bridgeObjectRelease(v51);
              type metadata accessor for ICError(0);
              v57 = v56;
              *(_QWORD *)(v0 + 640) = 219;
              v58 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
              v59 = v50;
              v60 = swift_initStackObject(v58, v0 + 224);
              *(_OWORD *)(v60 + 16) = xmmword_100451C20;
              *(_QWORD *)(v60 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
              *(_QWORD *)(v60 + 40) = v61;
              _StringGuts.grow(_:)(49);
              swift_bridgeObjectRelease(0xE000000000000000);
              *(_QWORD *)(v0 + 656) = v55;
              v62._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
              object = v62._object;
              String.append(_:)(v62);
              v64 = object;
              v1 = v0 + 632;
              swift_bridgeObjectRelease(v64);
              v65._countAndFlagsBits = 0x7463617261686320;
              v65._object = (void *)0xEB00000000737265;
              String.append(_:)(v65);
              *(_QWORD *)(v60 + 72) = &type metadata for String;
              *(_QWORD *)(v60 + 48) = 0x1000000000000024;
              *(_QWORD *)(v60 + 56) = 0x8000000100485340;
              v66 = sub_1001356D4(v60);
              v67 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
              v68 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 632), v0 + 640, v66, v57, v67);
              v41 = *(_QWORD *)(v0 + 632);
              swift_willThrow(v68);

              v69 = *(void **)(v0 + 616);
LABEL_29:

              goto LABEL_30;
            }
            if (-[NSObject ic_isModernAccountType](v50, "ic_isModernAccountType"))
            {
              AppDependency.wrappedValue.getter((_QWORD *)(v0 + 720));
              v85 = *(void **)(v0 + 720);
              v86 = objc_msgSend(v85, "modernManagedObjectContext");
              *(_QWORD *)(v0 + 1120) = v86;

              v87 = (_QWORD *)swift_allocObject(&unk_100564208, 56, 7);
              *(_QWORD *)(v0 + 1128) = v87;
              v87[2] = v86;
              v87[3] = v50;
              v87[4] = v52;
              v87[5] = v51;
              v87[6] = v23;
              v88 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
              v89 = v50;
              v86;
              v90 = v23;
              v91 = (_QWORD *)swift_task_alloc(v88);
              *(_QWORD *)(v0 + 1136) = v91;
              *v91 = v0;
              v91[1] = sub_10029095C;
              return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 888), sub_1002915DC, v87, *(_QWORD *)(v0 + 848));
            }
            v100 = v23;
            swift_bridgeObjectRelease(v51);
            v101 = v50;
            if (-[NSObject ic_isLegacyAccountType](v50, "ic_isLegacyAccountType"))
            {
              v102 = (uint64_t *)(v0 + 592);
              type metadata accessor for ICError(0);
              v104 = v103;
              *(_QWORD *)(v0 + 600) = 219;
              v105 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
              v106 = swift_initStackObject(v105, v0 + 384);
              *(_OWORD *)(v106 + 16) = xmmword_100451C20;
              *(_QWORD *)(v106 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
              *(_QWORD *)(v106 + 40) = v107;
              *(_QWORD *)(v106 + 72) = &type metadata for String;
              *(_QWORD *)(v106 + 48) = 0xD000000000000021;
              *(_QWORD *)(v106 + 56) = 0x80000001004856E0;
              v108 = sub_1001356D4(v106);
              v109 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
              v110 = (_QWORD *)(v0 + 592);
              v111 = v0 + 600;
              v112 = v108;
              v113 = v104;
            }
            else
            {
              v102 = (uint64_t *)(v0 + 608);
              type metadata accessor for ICError(0);
              v115 = v114;
              *(_QWORD *)(v0 + 584) = 219;
              v116 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
              v117 = swift_initStackObject(v116, v0 + 16);
              *(_OWORD *)(v117 + 16) = xmmword_100454E90;
              *(_QWORD *)(v117 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
              *(_QWORD *)(v117 + 40) = v118;
              *(_QWORD *)(v117 + 72) = &type metadata for String;
              *(_QWORD *)(v117 + 48) = 0xD00000000000002DLL;
              *(_QWORD *)(v117 + 56) = 0x80000001004856B0;
              *(_QWORD *)(v117 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailingObjectIDKey);
              *(_QWORD *)(v117 + 88) = v119;
              *(_QWORD *)(v117 + 120) = sub_1001D76F4();
              *(_QWORD *)(v117 + 96) = v101;
              v101 = v101;
              v120 = sub_1001356D4(v117);
              v109 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
              v110 = (_QWORD *)(v0 + 608);
              v111 = v0 + 584;
              v112 = v120;
              v113 = v115;
            }
            v121 = _BridgedStoredNSError.init(_:userInfo:)(v110, v111, v112, v113, v109);
            v41 = *v102;
            swift_willThrow(v121);

LABEL_28:
            v69 = *(void **)(v0 + 616);
            goto LABEL_29;
          }
          swift_bridgeObjectRelease(*(_QWORD *)(v0 + 576));
        }
        v70 = *(_QWORD *)(v0 + 832);
        v151 = *(_QWORD *)(v0 + 840);
        v153 = *(_QWORD *)(v0 + 824);
        v155 = *(_QWORD *)(v0 + 816);
        log = v50;
        v71 = *(_QWORD *)(v0 + 808);
        v72 = *(_QWORD *)(v0 + 800);
        v73 = *(_QWORD *)(v0 + 792);
        v74 = *(_QWORD *)(v0 + 784);
        v75 = *(_QWORD *)(v0 + 776);
        v76 = *(_QWORD *)(v0 + 768);
        v77 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100485370);
        static Locale.current.getter(v77);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v74 + 104))(v73, enum case for LocalizedStringResource.BundleDescription.main(_:), v75);
        v78 = v71;
        v1 = v0 + 632;
        v79 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v78, 0, 0, v72, v73, "Folder name prompt when creating a folder via App Intents", 57, 2);
        v80 = IntentParameter.projectedValue.getter(v79);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 16))(v70, v151, v155);
        IntentDialog.init(_:)(v70);
        v81 = type metadata accessor for IntentDialog(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v76, 0, 1, v81);
        v82 = type metadata accessor for AppIntentError(0);
        v83 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
        v41 = swift_allocError(v82, v83, 0, 0);
        IntentParameter.needsValueError(_:)(v76);
        swift_release(v80);
        v84 = sub_100012DDC(v76, (uint64_t *)&unk_1005CEE20);
        swift_willThrow(v84);

        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v151, v155);
        v69 = *(void **)(v0 + 616);
        goto LABEL_29;
      }
      v42 = *(_QWORD *)(v0 + 1000);
      v43 = *(_QWORD *)(v0 + 928);
      v44 = *(_QWORD *)(v0 + 920);
      v45 = *(_QWORD *)(v0 + 912);
      v46 = *(_QWORD *)(v0 + 904);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v44, v42, v46);
      sub_100145264(v42, type metadata accessor for AccountEntity);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v44, v46);
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 672));
      v30 = *(_QWORD *)(v0 + 672);
      *(_QWORD *)(v0 + 1064) = v30;
      v159 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D6550 + dword_1005D6550);
      v47 = (_QWORD *)swift_task_alloc(unk_1005D6554);
      *(_QWORD *)(v0 + 1072) = v47;
      *v47 = v0;
      v47[1] = sub_10028FE6C;
      v32 = *(_QWORD *)(v0 + 928);
    }
    else
    {
      v24 = *(_QWORD *)(v0 + 984);
      v25 = *(_QWORD *)(v0 + 968);
      v26 = *(_QWORD *)(v0 + 960);
      v27 = *(_QWORD *)(v0 + 952);
      v28 = *(_QWORD *)(v0 + 944);
      v29 = *(_QWORD *)(v0 + 936);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v25, v29);
      sub_100145264(v25, type metadata accessor for FolderEntity);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v26, v27, v29);
      *(_DWORD *)(v0 + 1156) = *(_DWORD *)(v24 + 32);
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 680));
      v30 = *(_QWORD *)(v0 + 680);
      *(_QWORD *)(v0 + 1032) = v30;
      v159 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005DB980 + dword_1005DB980);
      v31 = (_QWORD *)swift_task_alloc(unk_1005DB984);
      *(_QWORD *)(v0 + 1040) = v31;
      *v31 = v0;
      v31[1] = sub_10028F0BC;
      v32 = *(_QWORD *)(v0 + 960);
    }
    return v159(v32, v30);
  }
  type metadata accessor for ICError(0);
  v34 = v33;
  *(_QWORD *)(v0 + 712) = 219;
  v35 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
  v36 = swift_initStackObject(v35, v0 + 144);
  *(_OWORD *)(v36 + 16) = xmmword_100451C20;
  *(_QWORD *)(v36 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
  *(_QWORD *)(v36 + 40) = v37;
  *(_QWORD *)(v36 + 72) = &type metadata for String;
  *(_QWORD *)(v36 + 48) = 0xD000000000000021;
  *(_QWORD *)(v36 + 56) = 0x8000000100485710;
  v38 = sub_1001356D4(v36);
  v39 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
  v40 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 704), v0 + 712, v38, v34, v39);
  v41 = *(_QWORD *)(v0 + 704);
  swift_willThrow(v40);
LABEL_30:
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 512));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536));
  swift_errorRetain(v41);
  v122 = swift_errorRetain(v41);
  v123 = Logger.logObject.getter(v122);
  v125 = static os_log_type_t.error.getter(v123, v124);
  if (os_log_type_enabled(v123, v125))
  {
    v126 = (uint8_t *)swift_slowAlloc(12, -1);
    v127 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v126 = 138412290;
    swift_errorRetain(v41);
    v128 = _swift_stdlib_bridgeErrorToNSError(v41);
    *(_QWORD *)(v0 + 624) = v128;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v1, v126 + 4);
    *v127 = v128;
    swift_errorRelease(v41);
    swift_errorRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v123, v125, "Folder creation failed with error: %@", v126, 0xCu);
    v129 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v127, 1, v129);
    swift_slowDealloc(v127, -1, -1);
    swift_slowDealloc(v126, -1, -1);
  }
  else
  {
    swift_errorRelease(v41);
    swift_errorRelease(v41);
  }
  v130 = v123;
  v131 = *(_QWORD *)(v0 + 1008);
  v132 = *(_QWORD *)(v0 + 1000);
  v133 = *(_QWORD *)(v0 + 992);
  v134 = *(_QWORD *)(v0 + 976);
  v135 = *(_QWORD *)(v0 + 968);
  v136 = *(_QWORD *)(v0 + 960);
  v141 = *(_QWORD *)(v0 + 952);
  v142 = *(_QWORD *)(v0 + 928);
  v143 = *(_QWORD *)(v0 + 920);
  v144 = *(_QWORD *)(v0 + 896);
  v145 = *(_QWORD *)(v0 + 888);
  v146 = *(_QWORD *)(v0 + 880);
  v147 = *(_QWORD *)(v0 + 872);
  v148 = *(_QWORD *)(v0 + 864);
  v149 = *(_QWORD *)(v0 + 840);
  v150 = *(_QWORD *)(v0 + 832);
  v152 = *(_QWORD *)(v0 + 808);
  v154 = *(_QWORD *)(v0 + 800);
  v156 = *(_QWORD *)(v0 + 792);
  loga = *(os_log_t *)(v0 + 768);
  v137 = *(_QWORD *)(v0 + 760);
  v138 = *(_QWORD *)(v0 + 752);
  v139 = *(_QWORD *)(v0 + 744);

  v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8))(v137, v139);
  swift_willThrow(v140);
  sub_100012C50(0, 0);
  swift_task_dealloc(v131);
  swift_task_dealloc(v132);
  swift_task_dealloc(v133);
  swift_task_dealloc(v134);
  swift_task_dealloc(v135);
  swift_task_dealloc(v136);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v152);
  swift_task_dealloc(v154);
  swift_task_dealloc(v156);
  swift_task_dealloc(loga);
  swift_task_dealloc(v137);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028F0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  v3 = *(void **)(*(_QWORD *)v1 + 1032);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = a1;
  swift_task_dealloc(v2);

  return swift_task_switch(sub_10028F120, 0, 0);
}

uint64_t sub_10028F120()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  id v3;
  void *v4;
  id v5;
  id *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t result;
  id v14;
  void (*v15)();
  NSObject *v16;
  void *v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  void *object;
  Swift::String v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  _QWORD *v73;
  uint64_t v74;
  id v75;
  NSObject *v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  os_log_t log;
  os_log_t loga;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;

  v135 = (uint64_t *)(v0 + 632);
  v1 = *(_QWORD *)(v0 + 1048);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 944) + 8))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 936));
  if (v1)
  {
    v2 = (void **)(v0 + 1048);
    v3 = *(id *)(v0 + 1048);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 688));
    v4 = *(void **)(v0 + 688);
    v5 = objc_msgSend(v4, "managedObjectContextForObjectID:", v3);

    if (v5)
    {
      v6 = (id *)(v0 + 616);
      v7 = (_QWORD *)swift_allocObject(&unk_100564230, 40, 7);
      v7[2] = v5;
      v7[3] = v3;
      v7[4] = v0 + 616;
      v8 = swift_allocObject(&unk_100564258, 32, 7);
      *(_QWORD *)(v8 + 16) = sub_100291628;
      *(_QWORD *)(v8 + 24) = v7;
      *(_QWORD *)(v0 + 496) = sub_1000165D8;
      *(_QWORD *)(v0 + 504) = v8;
      *(_QWORD *)(v0 + 464) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 472) = 1107296256;
      *(_QWORD *)(v0 + 480) = sub_100016618;
      *(_QWORD *)(v0 + 488) = &unk_100564270;
      v9 = _Block_copy((const void *)(v0 + 464));
      v10 = *(_QWORD *)(v0 + 504);
      v11 = v3;
      v12 = v5;
      swift_retain(v8);
      swift_release(v10);
      objc_msgSend(v12, "performBlockAndWait:", v9);

      _Block_release(v9);
      LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v8, "", 109, 55, 53, 1);
      result = swift_release(v8);
      if ((v11 & 1) != 0)
      {
        __break(1u);
        return result;
      }
      v14 = *v6;
      v15 = sub_100291628;
      v16 = *v2;
      if (!*v6)
        goto LABEL_19;
      goto LABEL_13;
    }

    v17 = *v2;
  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)(v0 + 1056) = v17;
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1024);
  v19 = *(_QWORD *)(v0 + 1016);
  v20 = *(_QWORD *)(v0 + 1000);
  sub_100012CE8(*(_QWORD *)(v0 + 736) + *(int *)(v0 + 1152), v20, (uint64_t *)&unk_1005D6AB0);
  if (v18(v20, 1, v19) != 1)
  {
    v22 = *(_QWORD *)(v0 + 1000);
    v23 = *(_QWORD *)(v0 + 928);
    v24 = *(_QWORD *)(v0 + 920);
    v25 = *(_QWORD *)(v0 + 912);
    v26 = *(_QWORD *)(v0 + 904);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v22, v26);
    sub_100145264(v22, type metadata accessor for AccountEntity);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v23, v24, v26);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 672));
    v27 = *(_QWORD *)(v0 + 672);
    *(_QWORD *)(v0 + 1064) = v27;
    v136 = (char *)&dword_1005D6550 + dword_1005D6550;
    v28 = (_QWORD *)swift_task_alloc(unk_1005D6554);
    *(_QWORD *)(v0 + 1072) = v28;
    *v28 = v0;
    v28[1] = sub_10028FE6C;
    return ((uint64_t (*)(_QWORD, uint64_t))v136)(*(_QWORD *)(v0 + 928), v27);
  }
  v21 = (void **)(v0 + 1056);
  sub_100012DDC(*(_QWORD *)(v0 + 1000), (uint64_t *)&unk_1005D6AB0);
  v14 = *(id *)(v0 + 616);
  if (v14)
  {
    v7 = 0;
    v15 = 0;
    v16 = *v21;
  }
  else
  {
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 664));
    v29 = *(void **)(v0 + 664);
    v14 = objc_msgSend(v29, "defaultAccountObjectID");

    v15 = 0;
    v7 = 0;
    *(_QWORD *)(v0 + 616) = v14;
    v16 = *v21;
    if (!v14)
    {
LABEL_19:
      v133 = (uint64_t)v15;
      v134 = (uint64_t)v7;
      type metadata accessor for ICError(0);
      v49 = v48;
      *(_QWORD *)(v0 + 648) = 219;
      v50 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
      inited = swift_initStackObject(v50, v0 + 304);
      *(_OWORD *)(inited + 16) = xmmword_100451C20;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
      *(_QWORD *)(inited + 40) = v52;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = 0xD00000000000001DLL;
      *(_QWORD *)(inited + 56) = 0x8000000100485690;
      v53 = sub_1001356D4(inited);
      v54 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
      v55 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 696), v0 + 648, v53, v49, v54);
      v47 = *(_QWORD *)(v0 + 696);
      swift_willThrow(v55);
LABEL_29:

      goto LABEL_30;
    }
  }
LABEL_13:
  *(_QWORD *)(v0 + 1112) = v14;
  *(_QWORD *)(v0 + 1104) = v15;
  *(_QWORD *)(v0 + 1096) = v7;
  *(_QWORD *)(v0 + 1088) = v16;
  v30 = v14;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 568));
  v31 = *(_QWORD *)(v0 + 576);
  v133 = (uint64_t)v15;
  v134 = (uint64_t)v7;
  if (v31)
  {
    v32 = *(_QWORD *)(v0 + 568);
    v33 = HIBYTE(v31) & 0xF;
    if ((v31 & 0x2000000000000000) == 0)
      v33 = v32 & 0xFFFFFFFFFFFFLL;
    if (v33)
    {
      v34 = String.count.getter(*(_QWORD *)(v0 + 568), v31);
      v35 = ICFolderNameMaxLength;
      if (ICFolderNameMaxLength >= v34)
      {
        if (objc_msgSend(v30, "ic_isModernAccountType"))
        {
          AppDependency.wrappedValue.getter((_QWORD *)(v0 + 720));
          v71 = *(void **)(v0 + 720);
          v72 = objc_msgSend(v71, "modernManagedObjectContext");
          *(_QWORD *)(v0 + 1120) = v72;

          v73 = (_QWORD *)swift_allocObject(&unk_100564208, 56, 7);
          *(_QWORD *)(v0 + 1128) = v73;
          v73[2] = v72;
          v73[3] = v30;
          v73[4] = v32;
          v73[5] = v31;
          v73[6] = v16;
          v74 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
          v75 = v30;
          v72;
          v76 = v16;
          v77 = (_QWORD *)swift_task_alloc(v74);
          *(_QWORD *)(v0 + 1136) = v77;
          *v77 = v0;
          v77[1] = sub_10029095C;
          return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 888), sub_1002915DC, v73, *(_QWORD *)(v0 + 848));
        }
        swift_bridgeObjectRelease(v31);
        if (objc_msgSend(v30, "ic_isLegacyAccountType"))
        {
          v78 = (uint64_t *)(v0 + 592);
          type metadata accessor for ICError(0);
          v80 = v79;
          *(_QWORD *)(v0 + 600) = 219;
          v81 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
          v82 = swift_initStackObject(v81, v0 + 384);
          *(_OWORD *)(v82 + 16) = xmmword_100451C20;
          *(_QWORD *)(v82 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
          *(_QWORD *)(v82 + 40) = v83;
          *(_QWORD *)(v82 + 72) = &type metadata for String;
          *(_QWORD *)(v82 + 48) = 0xD000000000000021;
          *(_QWORD *)(v82 + 56) = 0x80000001004856E0;
          v84 = sub_1001356D4(v82);
          v85 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
          v86 = (_QWORD *)(v0 + 592);
          v87 = v0 + 600;
          v88 = v84;
          v89 = v80;
        }
        else
        {
          v78 = (uint64_t *)(v0 + 608);
          type metadata accessor for ICError(0);
          v91 = v90;
          *(_QWORD *)(v0 + 584) = 219;
          v92 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
          v93 = swift_initStackObject(v92, v0 + 16);
          *(_OWORD *)(v93 + 16) = xmmword_100454E90;
          *(_QWORD *)(v93 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
          *(_QWORD *)(v93 + 40) = v94;
          *(_QWORD *)(v93 + 72) = &type metadata for String;
          *(_QWORD *)(v93 + 48) = 0xD00000000000002DLL;
          *(_QWORD *)(v93 + 56) = 0x80000001004856B0;
          *(_QWORD *)(v93 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailingObjectIDKey);
          *(_QWORD *)(v93 + 88) = v95;
          *(_QWORD *)(v93 + 120) = sub_1001D76F4();
          *(_QWORD *)(v93 + 96) = v30;
          v30 = v30;
          v96 = sub_1001356D4(v93);
          v85 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
          v86 = (_QWORD *)(v0 + 608);
          v87 = v0 + 584;
          v88 = v96;
          v89 = v91;
        }
        v46 = _BridgedStoredNSError.init(_:userInfo:)(v86, v87, v88, v89, v85);
        v47 = *v78;
      }
      else
      {
        swift_bridgeObjectRelease(v31);
        type metadata accessor for ICError(0);
        v37 = v36;
        *(_QWORD *)(v0 + 640) = 219;
        v38 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        v39 = swift_initStackObject(v38, v0 + 224);
        *(_OWORD *)(v39 + 16) = xmmword_100451C20;
        *(_QWORD *)(v39 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
        *(_QWORD *)(v39 + 40) = v40;
        _StringGuts.grow(_:)(49);
        swift_bridgeObjectRelease(0xE000000000000000);
        *(_QWORD *)(v0 + 656) = v35;
        v41._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v41._object;
        String.append(_:)(v41);
        swift_bridgeObjectRelease(object);
        v43._countAndFlagsBits = 0x7463617261686320;
        v43._object = (void *)0xEB00000000737265;
        String.append(_:)(v43);
        *(_QWORD *)(v39 + 72) = &type metadata for String;
        *(_QWORD *)(v39 + 48) = 0x1000000000000024;
        *(_QWORD *)(v39 + 56) = 0x8000000100485340;
        v44 = sub_1001356D4(v39);
        v45 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
        v46 = _BridgedStoredNSError.init(_:userInfo:)(v135, v0 + 640, v44, v37, v45);
        v47 = *v135;
      }
      swift_willThrow(v46);

      goto LABEL_29;
    }
    swift_bridgeObjectRelease(v31);
  }
  v56 = *(_QWORD *)(v0 + 840);
  v57 = *(_QWORD *)(v0 + 832);
  v125 = *(_QWORD *)(v0 + 824);
  v127 = *(_QWORD *)(v0 + 816);
  v58 = *(_QWORD *)(v0 + 808);
  v59 = *(_QWORD *)(v0 + 800);
  v60 = *(_QWORD *)(v0 + 792);
  v129 = v30;
  log = v16;
  v61 = *(_QWORD *)(v0 + 784);
  v62 = *(_QWORD *)(v0 + 776);
  v63 = *(_QWORD *)(v0 + 768);
  v64 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100485370);
  static Locale.current.getter(v64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v60, enum case for LocalizedStringResource.BundleDescription.main(_:), v62);
  v65 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v58, 0, 0, v59, v60, "Folder name prompt when creating a folder via App Intents", 57, 2);
  v66 = IntentParameter.projectedValue.getter(v65);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v57, v56, v127);
  IntentDialog.init(_:)(v57);
  v67 = type metadata accessor for IntentDialog(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v63, 0, 1, v67);
  v68 = type metadata accessor for AppIntentError(0);
  v69 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
  v47 = swift_allocError(v68, v69, 0, 0);
  IntentParameter.needsValueError(_:)(v63);
  swift_release(v66);
  v70 = sub_100012DDC(v63, (uint64_t *)&unk_1005CEE20);
  swift_willThrow(v70);

  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v56, v127);
LABEL_30:

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 512));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536));
  swift_errorRetain(v47);
  v97 = swift_errorRetain(v47);
  v98 = Logger.logObject.getter(v97);
  v100 = static os_log_type_t.error.getter(v98, v99);
  if (os_log_type_enabled(v98, v100))
  {
    v101 = (uint8_t *)swift_slowAlloc(12, -1);
    v102 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v101 = 138412290;
    swift_errorRetain(v47);
    v103 = _swift_stdlib_bridgeErrorToNSError(v47);
    *(_QWORD *)(v0 + 624) = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v135, v101 + 4);
    *v102 = v103;
    swift_errorRelease(v47);
    swift_errorRelease(v47);
    _os_log_impl((void *)&_mh_execute_header, v98, v100, "Folder creation failed with error: %@", v101, 0xCu);
    v104 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v102, 1, v104);
    swift_slowDealloc(v102, -1, -1);
    swift_slowDealloc(v101, -1, -1);
  }
  else
  {
    swift_errorRelease(v47);
    swift_errorRelease(v47);
  }
  v105 = v98;
  v106 = *(_QWORD *)(v0 + 1008);
  v107 = *(_QWORD *)(v0 + 1000);
  v108 = *(_QWORD *)(v0 + 992);
  v109 = *(_QWORD *)(v0 + 976);
  v110 = *(_QWORD *)(v0 + 968);
  v115 = *(_QWORD *)(v0 + 960);
  v116 = *(_QWORD *)(v0 + 952);
  v117 = *(_QWORD *)(v0 + 928);
  v118 = *(_QWORD *)(v0 + 920);
  v119 = *(_QWORD *)(v0 + 896);
  v120 = *(_QWORD *)(v0 + 888);
  v121 = *(_QWORD *)(v0 + 880);
  v122 = *(_QWORD *)(v0 + 872);
  v123 = *(_QWORD *)(v0 + 864);
  v124 = *(_QWORD *)(v0 + 840);
  v126 = *(_QWORD *)(v0 + 832);
  v128 = *(_QWORD *)(v0 + 808);
  v130 = *(_QWORD *)(v0 + 800);
  loga = *(os_log_t *)(v0 + 792);
  v137 = *(_QWORD *)(v0 + 768);
  v111 = *(_QWORD *)(v0 + 760);
  v112 = *(_QWORD *)(v0 + 752);
  v113 = *(_QWORD *)(v0 + 744);

  v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v111, v113);
  swift_willThrow(v114);
  sub_100012C50(v133, v134);
  swift_task_dealloc(v106);
  swift_task_dealloc(v107);
  swift_task_dealloc(v108);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v126);
  swift_task_dealloc(v128);
  swift_task_dealloc(v130);
  swift_task_dealloc(loga);
  swift_task_dealloc(v137);
  swift_task_dealloc(v111);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028FE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1072);
  v3 = *(void **)(*(_QWORD *)v1 + 1064);
  *(_QWORD *)(*(_QWORD *)v1 + 1080) = a1;
  swift_task_dealloc(v2);

  return swift_task_switch(sub_10028FED0, 0, 0);
}

uint64_t sub_10028FED0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *object;
  Swift::String v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  id v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  void *v111;

  v109 = (uint64_t *)(v0 + 632);
  v1 = *(_QWORD *)(v0 + 1080);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 912) + 8))(*(_QWORD *)(v0 + 928), *(_QWORD *)(v0 + 904));
  v2 = *(void **)(v0 + 616);
  *(_QWORD *)(v0 + 616) = v1;

  v3 = *(id *)(v0 + 1080);
  if (v3)
  {
    v4 = *(void **)(v0 + 1056);
  }
  else
  {
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 664));
    v5 = *(void **)(v0 + 664);
    v3 = objc_msgSend(v5, "defaultAccountObjectID");

    *(_QWORD *)(v0 + 616) = v3;
    v4 = *(void **)(v0 + 1056);
    if (!v3)
    {
      type metadata accessor for ICError(0);
      v48 = v47;
      *(_QWORD *)(v0 + 648) = 219;
      v49 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
      inited = swift_initStackObject(v49, v0 + 304);
      *(_OWORD *)(inited + 16) = xmmword_100451C20;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
      *(_QWORD *)(inited + 40) = v51;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = 0xD00000000000001DLL;
      *(_QWORD *)(inited + 56) = 0x8000000100485690;
      v52 = sub_1001356D4(inited);
      v53 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
      v54 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 696), v0 + 648, v52, v48, v53);
      v23 = *(_QWORD *)(v0 + 696);
      swift_willThrow(v54);
LABEL_20:

      goto LABEL_21;
    }
  }
  *(_QWORD *)(v0 + 1112) = v3;
  *(_OWORD *)(v0 + 1096) = 0u;
  *(_QWORD *)(v0 + 1088) = v4;
  v6 = v3;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 568));
  v7 = *(_QWORD *)(v0 + 576);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 568);
    v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v9 = v8 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      v10 = String.count.getter(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 576));
      v11 = ICFolderNameMaxLength;
      if (ICFolderNameMaxLength >= v10)
      {
        if (objc_msgSend(v6, "ic_isModernAccountType"))
        {
          AppDependency.wrappedValue.getter((_QWORD *)(v0 + 720));
          v39 = *(void **)(v0 + 720);
          v40 = objc_msgSend(v39, "modernManagedObjectContext");
          *(_QWORD *)(v0 + 1120) = v40;

          v41 = (_QWORD *)swift_allocObject(&unk_100564208, 56, 7);
          *(_QWORD *)(v0 + 1128) = v41;
          v41[2] = v40;
          v41[3] = v6;
          v41[4] = v8;
          v41[5] = v7;
          v41[6] = v4;
          v42 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
          v43 = v6;
          v40;
          v44 = v4;
          v45 = (_QWORD *)swift_task_alloc(v42);
          *(_QWORD *)(v0 + 1136) = v45;
          *v45 = v0;
          v45[1] = sub_10029095C;
          return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 888), sub_1002915DC, v41, *(_QWORD *)(v0 + 848));
        }
        swift_bridgeObjectRelease(v7);
        if (objc_msgSend(v6, "ic_isLegacyAccountType"))
        {
          v55 = (uint64_t *)(v0 + 592);
          type metadata accessor for ICError(0);
          v57 = v56;
          *(_QWORD *)(v0 + 600) = 219;
          v58 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
          v59 = swift_initStackObject(v58, v0 + 384);
          *(_OWORD *)(v59 + 16) = xmmword_100451C20;
          *(_QWORD *)(v59 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
          *(_QWORD *)(v59 + 40) = v60;
          *(_QWORD *)(v59 + 72) = &type metadata for String;
          *(_QWORD *)(v59 + 48) = 0xD000000000000021;
          *(_QWORD *)(v59 + 56) = 0x80000001004856E0;
          v61 = sub_1001356D4(v59);
          v62 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
          v63 = (_QWORD *)(v0 + 592);
          v64 = v0 + 600;
          v65 = v61;
          v66 = v57;
        }
        else
        {
          v55 = (uint64_t *)(v0 + 608);
          type metadata accessor for ICError(0);
          v68 = v67;
          *(_QWORD *)(v0 + 584) = 219;
          v69 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
          v70 = swift_initStackObject(v69, v0 + 16);
          *(_OWORD *)(v70 + 16) = xmmword_100454E90;
          *(_QWORD *)(v70 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
          *(_QWORD *)(v70 + 40) = v71;
          *(_QWORD *)(v70 + 72) = &type metadata for String;
          *(_QWORD *)(v70 + 48) = 0xD00000000000002DLL;
          *(_QWORD *)(v70 + 56) = 0x80000001004856B0;
          *(_QWORD *)(v70 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailingObjectIDKey);
          *(_QWORD *)(v70 + 88) = v72;
          *(_QWORD *)(v70 + 120) = sub_1001D76F4();
          *(_QWORD *)(v70 + 96) = v6;
          v6 = v6;
          v73 = sub_1001356D4(v70);
          v62 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
          v63 = (_QWORD *)(v0 + 608);
          v64 = v0 + 584;
          v65 = v73;
          v66 = v68;
        }
        v22 = _BridgedStoredNSError.init(_:userInfo:)(v63, v64, v65, v66, v62);
        v23 = *v55;
      }
      else
      {
        swift_bridgeObjectRelease(v7);
        type metadata accessor for ICError(0);
        v13 = v12;
        *(_QWORD *)(v0 + 640) = 219;
        v14 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        v15 = swift_initStackObject(v14, v0 + 224);
        *(_OWORD *)(v15 + 16) = xmmword_100451C20;
        *(_QWORD *)(v15 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
        *(_QWORD *)(v15 + 40) = v16;
        _StringGuts.grow(_:)(49);
        swift_bridgeObjectRelease(0xE000000000000000);
        *(_QWORD *)(v0 + 656) = v11;
        v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v17._object;
        String.append(_:)(v17);
        swift_bridgeObjectRelease(object);
        v19._countAndFlagsBits = 0x7463617261686320;
        v19._object = (void *)0xEB00000000737265;
        String.append(_:)(v19);
        *(_QWORD *)(v15 + 72) = &type metadata for String;
        *(_QWORD *)(v15 + 48) = 0x1000000000000024;
        *(_QWORD *)(v15 + 56) = 0x8000000100485340;
        v20 = sub_1001356D4(v15);
        v21 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
        v22 = _BridgedStoredNSError.init(_:userInfo:)(v109, v0 + 640, v20, v13, v21);
        v23 = *v109;
      }
      swift_willThrow(v22);

      goto LABEL_20;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 576));
  }
  v24 = *(_QWORD *)(v0 + 840);
  v25 = *(_QWORD *)(v0 + 832);
  v103 = *(_QWORD *)(v0 + 824);
  v105 = *(_QWORD *)(v0 + 816);
  v26 = *(_QWORD *)(v0 + 808);
  v111 = v4;
  v27 = *(_QWORD *)(v0 + 800);
  v28 = *(_QWORD *)(v0 + 792);
  v29 = *(_QWORD *)(v0 + 784);
  v107 = v6;
  v30 = *(_QWORD *)(v0 + 776);
  v31 = *(_QWORD *)(v0 + 768);
  v32 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100485370);
  static Locale.current.getter(v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v28, enum case for LocalizedStringResource.BundleDescription.main(_:), v30);
  v33 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, 0, 0, v27, v28, "Folder name prompt when creating a folder via App Intents", 57, 2);
  v34 = IntentParameter.projectedValue.getter(v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v25, v24, v105);
  IntentDialog.init(_:)(v25);
  v35 = type metadata accessor for IntentDialog(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v31, 0, 1, v35);
  v36 = type metadata accessor for AppIntentError(0);
  v37 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
  v23 = swift_allocError(v36, v37, 0, 0);
  IntentParameter.needsValueError(_:)(v31);
  swift_release(v34);
  v38 = sub_100012DDC(v31, (uint64_t *)&unk_1005CEE20);
  swift_willThrow(v38);

  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v24, v105);
LABEL_21:

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 512));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536));
  swift_errorRetain(v23);
  v74 = swift_errorRetain(v23);
  v75 = Logger.logObject.getter(v74);
  v77 = static os_log_type_t.error.getter(v75, v76);
  if (os_log_type_enabled(v75, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc(12, -1);
    v79 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v78 = 138412290;
    swift_errorRetain(v23);
    v80 = _swift_stdlib_bridgeErrorToNSError(v23);
    *(_QWORD *)(v0 + 624) = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v109, v78 + 4);
    *v79 = v80;
    swift_errorRelease(v23);
    swift_errorRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v75, v77, "Folder creation failed with error: %@", v78, 0xCu);
    v81 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v79, 1, v81);
    swift_slowDealloc(v79, -1, -1);
    swift_slowDealloc(v78, -1, -1);
  }
  else
  {
    swift_errorRelease(v23);
    swift_errorRelease(v23);
  }
  v82 = v75;
  v83 = *(_QWORD *)(v0 + 1008);
  v84 = *(_QWORD *)(v0 + 1000);
  v85 = *(_QWORD *)(v0 + 992);
  v86 = *(_QWORD *)(v0 + 976);
  v87 = *(_QWORD *)(v0 + 968);
  v88 = *(_QWORD *)(v0 + 960);
  v93 = *(_QWORD *)(v0 + 952);
  v94 = *(_QWORD *)(v0 + 928);
  v95 = *(_QWORD *)(v0 + 920);
  v96 = *(_QWORD *)(v0 + 896);
  v97 = *(_QWORD *)(v0 + 888);
  v98 = *(_QWORD *)(v0 + 880);
  v99 = *(_QWORD *)(v0 + 872);
  v100 = *(_QWORD *)(v0 + 864);
  v101 = *(_QWORD *)(v0 + 840);
  v102 = *(_QWORD *)(v0 + 832);
  v104 = *(_QWORD *)(v0 + 808);
  v106 = *(_QWORD *)(v0 + 800);
  v108 = *(_QWORD *)(v0 + 792);
  v110 = *(_QWORD *)(v0 + 768);
  v89 = *(_QWORD *)(v0 + 760);
  v90 = *(_QWORD *)(v0 + 752);
  v91 = *(_QWORD *)(v0 + 744);

  v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
  swift_willThrow(v92);
  sub_100012C50(0, 0);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v99);
  swift_task_dealloc(v100);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v106);
  swift_task_dealloc(v108);
  swift_task_dealloc(v110);
  swift_task_dealloc(v89);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029095C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1136);
  *(_QWORD *)(*v1 + 1144) = v0;
  swift_task_dealloc(v3);
  swift_release(*(_QWORD *)(v2 + 1128));
  if (v0)
    v4 = sub_100290C74;
  else
    v4 = sub_1002909C8;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002909C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v15 = *(void **)(v0 + 1112);
  v18 = *(_QWORD *)(v0 + 1096);
  v19 = *(_QWORD *)(v0 + 1104);
  v16 = *(void **)(v0 + 1088);
  v20 = *(_QWORD *)(v0 + 1008);
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 976);
  v25 = *(_QWORD *)(v0 + 968);
  v26 = *(_QWORD *)(v0 + 960);
  v27 = *(_QWORD *)(v0 + 952);
  v28 = *(_QWORD *)(v0 + 928);
  v29 = *(_QWORD *)(v0 + 920);
  v1 = *(_QWORD *)(v0 + 896);
  v2 = *(_QWORD *)(v0 + 888);
  v24 = v2;
  v3 = *(_QWORD *)(v0 + 880);
  v4 = *(_QWORD *)(v0 + 872);
  v5 = *(_QWORD *)(v0 + 864);
  v17 = v5;
  v14 = *(_QWORD *)(v0 + 848);
  v30 = *(_QWORD *)(v0 + 840);
  v31 = *(_QWORD *)(v0 + 832);
  v32 = *(_QWORD *)(v0 + 808);
  v33 = *(_QWORD *)(v0 + 800);
  v34 = *(_QWORD *)(v0 + 792);
  v35 = *(_QWORD *)(v0 + 768);
  v36 = *(_QWORD *)(v0 + 760);

  sub_1002353B8(v2, v1);
  sub_100145220(v1, v3, type metadata accessor for FolderEntity);
  v6 = _s11MobileNotes16OpenFolderIntentVACycfC_0();
  v8 = v7;
  v10 = v9;
  sub_100145220(v3, v4, type metadata accessor for FolderEntity);
  sub_100145220(v4, v5, type metadata accessor for FolderEntity);
  IntentParameter.wrappedValue.setter(v5);
  sub_100145264(v4, type metadata accessor for FolderEntity);
  sub_100145264(v3, type metadata accessor for FolderEntity);
  *(_QWORD *)(v0 + 544) = v6;
  *(_QWORD *)(v0 + 552) = v8;
  *(_QWORD *)(v0 + 560) = v10;
  v11 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v12 = sub_1000192D4();
  static IntentResult.result<A, B>(value:opensIntent:)(v1, v0 + 544, v14, &type metadata for OpenFolderIntent, v11, v12);

  swift_release(v6);
  swift_release(v8);
  swift_release(v10);
  sub_100145264(v1, type metadata accessor for FolderEntity);

  sub_100012C50(v19, v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v1);
  swift_task_dealloc(v24);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v17);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100290C74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(void **)(v0 + 1112);
  v2 = *(void **)(v0 + 1088);

  v3 = *(_QWORD *)(v0 + 1144);
  v38 = *(_QWORD *)(v0 + 1096);
  v39 = *(_QWORD *)(v0 + 1104);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 512));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536));
  swift_errorRetain(v3);
  v4 = swift_errorRetain(v3);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.error.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v3);
    v10 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 624) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632, v8 + 4);
    *v9 = v10;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Folder creation failed with error: %@", v8, 0xCu);
    v11 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }
  v12 = v5;
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 976);
  v17 = *(_QWORD *)(v0 + 968);
  v23 = *(_QWORD *)(v0 + 960);
  v24 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 928);
  v26 = *(_QWORD *)(v0 + 920);
  v27 = *(_QWORD *)(v0 + 896);
  v28 = *(_QWORD *)(v0 + 888);
  v29 = *(_QWORD *)(v0 + 880);
  v30 = *(_QWORD *)(v0 + 872);
  v31 = *(_QWORD *)(v0 + 864);
  v32 = *(_QWORD *)(v0 + 840);
  v33 = *(_QWORD *)(v0 + 832);
  v34 = *(_QWORD *)(v0 + 808);
  v35 = *(_QWORD *)(v0 + 800);
  v36 = *(_QWORD *)(v0 + 792);
  v37 = *(_QWORD *)(v0 + 768);
  v18 = *(_QWORD *)(v0 + 760);
  v19 = *(_QWORD *)(v0 + 752);
  v20 = *(_QWORD *)(v0 + 744);

  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_willThrow(v21);
  sub_100012C50(v39, v38);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100290F98(void *a1, uint64_t a2, void **a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  __objc2_prot *v9;

  v4 = objc_msgSend(a1, "ic_existingObjectWithID:", a2);
  if (v4)
  {
    v5 = v4;
    v9 = &OBJC_PROTOCOL___ICFolderObject;
    v6 = objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(v4, 1, &v9, 0, 0, 0), "account");
    v7 = objc_msgSend(v6, "objectID");

    v8 = *a3;
    *a3 = v7;

  }
  else
  {
    __break(1u);
  }
}

void sub_100291050(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X8>)
{
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unsigned __int8 v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _BYTE v45[80];

  v44 = 0;
  v7 = objc_msgSend(a1, "existingObjectWithID:error:", a2, &v44);
  v8 = v44;
  if (!v7)
  {
    v27 = v44;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v28);
    return;
  }
  v9 = v7;
  v41 = a4;
  v10 = objc_opt_self(ICAccount);
  v11 = swift_dynamicCastObjCClassUnconditional(v9, v10, 0, 0, 0);
  v12 = (void *)objc_opt_self(ICFolder);
  v13 = v8;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "deduplicatingTitle:account:", v14, v11);

  if (v15)
  {
    v16 = objc_msgSend(v12, "newFolderInAccount:", v11);
    objc_msgSend(v16, "setTitle:", v15);

    if (!a3)
      goto LABEL_6;
    v44 = 0;
    v17 = a3;
    v18 = objc_msgSend(a1, "existingObjectWithID:error:", v17, &v44, v41);
    v19 = v44;
    if (v18)
    {
      v20 = v18;
      v21 = objc_opt_self(ICFolder);
      v22 = swift_dynamicCastObjCClassUnconditional(v20, v21, 0, 0, 0);
      v23 = v19;
      objc_msgSend(v16, "setParent:", v22);

LABEL_6:
      v44 = 0;
      v24 = objc_msgSend(a1, "save:", &v44, v41);
      v25 = v44;
      if ((v24 & 1) != 0)
      {
        v26 = v44;
        sub_1003DCB84(v16, v42);
      }
      else
      {
        v37 = v44;
        _convertNSErrorToError(_:)(v25);

        swift_willThrow(v38);
      }
      goto LABEL_12;
    }
    v39 = v44;
    _convertNSErrorToError(_:)(v19);

    swift_willThrow(v40);
  }
  else
  {
    type metadata accessor for ICError(0);
    v30 = v29;
    v43 = 219;
    v31 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v31, v45);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
    *(_QWORD *)(inited + 40) = v33;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000020;
    *(_QWORD *)(inited + 56) = 0x8000000100485740;
    v34 = sub_1001356D4(inited);
    v35 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v36 = _BridgedStoredNSError.init(_:userInfo:)(&v44, &v43, v34, v30, v35);
    swift_willThrow(v36);
  }
LABEL_12:

}

uint64_t sub_1002913A4()
{
  uint64_t v1;

  AppDependency.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1002913DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D6A90);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D6A98);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, a1, a2);
  v10._countAndFlagsBits = 0x6120657461657243;
  v10._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_10045FCD0, v11);
  v13 = sub_100012E18(&qword_1005D6AA8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 0x7265646C6F6620;
  v14._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_10029154C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6AC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100130768;
  return CreateFolderIntent.perform()(a1);
}

uint64_t sub_1002915A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002915DC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100291050(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 48), a1);
}

uint64_t sub_1002915FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100291628()
{
  uint64_t v0;

  sub_100290F98(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_100291634()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100291644()
{
  return sub_100019C6C((unint64_t *)&unk_1005D6AF0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
}

uint64_t sub_100291670()
{
  return sub_100019C6C(&qword_1005D6AA0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
}

uint64_t sub_10029169C()
{
  return sub_100019C6C(&qword_1005D6B00, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
}

uint64_t sub_1002916C8()
{
  return sub_100019C6C((unint64_t *)&unk_1005D6B08, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
}

uint64_t sub_1002916F4(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateFolderIntent.perform()>>, 1)+ 8);
}

uint64_t sub_100291718(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateFolderIntent.parameterSummary>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for CreateFolderIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for AccountEntity(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain(v4);
    if (v13(v10, 1, v11))
    {
      v14 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for AccountID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      v16 = *(int *)(v11 + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = *(int *)(v11 + 24);
      v21 = &v9[v20];
      v22 = &v10[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
      v25 = swift_bridgeObjectRetain(v23);
      v24(v9, 0, 1, v11, v25);
    }
    v26 = a3[6];
    v27 = (char *)v7 + v26;
    v28 = (char *)a2 + v26;
    v29 = (int *)type metadata accessor for FolderEntity(0);
    v30 = *((_QWORD *)v29 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
    {
      v31 = sub_100012E18(&qword_1005D1EB0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = type metadata accessor for FolderID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v27, v28, v32);
      v33 = v29[5];
      v34 = &v27[v33];
      v35 = &v28[v33];
      v36 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      v37 = v29[6];
      v38 = &v27[v37];
      v39 = &v28[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      v41 = v29[7];
      v42 = &v27[v41];
      v43 = &v28[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v27[v29[8]] = v28[v29[8]];
      v27[v29[9]] = v28[v29[9]];
      v45 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v30 + 56);
      swift_bridgeObjectRetain(v40);
      v46 = swift_bridgeObjectRetain(v44);
      v45(v27, 0, 1, v29, v46);
    }
    v47 = a3[7];
    v48 = a3[8];
    v49 = *(uint64_t *)((char *)a2 + v47);
    *(uint64_t *)((char *)v7 + v47) = v49;
    v4 = *(uint64_t *)((char *)a2 + v48);
    *(uint64_t *)((char *)v7 + v48) = v4;
    swift_retain(v49);
  }
  swift_retain(v4);
  return v7;
}

uint64_t destroy for CreateFolderIntent(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for AccountEntity(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for AccountID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = &v4[*(int *)(v5 + 20)];
    v8 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[*(int *)(v5 + 24) + 8]);
  }
  v9 = (char *)a1 + a2[6];
  v10 = (int *)type metadata accessor for FolderEntity(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    v11 = type metadata accessor for FolderID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    v12 = &v9[v10[5]];
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[7] + 8]);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[7]));
  return swift_release(*(_QWORD *)((char *)a1 + a2[8]));
}

uint64_t *initializeWithCopy for CreateFolderIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AccountEntity(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for AccountID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
    v15 = *(int *)(v10 + 20);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = *(int *)(v10 + 24);
    v20 = &v8[v19];
    v21 = &v9[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v11 + 56);
    v24 = swift_bridgeObjectRetain(v22);
    v23(v8, 0, 1, v10, v24);
  }
  v25 = a3[6];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = (int *)type metadata accessor for FolderEntity(0);
  v29 = *((_QWORD *)v28 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100012E18(&qword_1005D1EB0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for FolderID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v26, v27, v31);
    v32 = v28[5];
    v33 = &v26[v32];
    v34 = &v27[v32];
    v35 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = v28[6];
    v37 = &v26[v36];
    v38 = &v27[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v28[7];
    v41 = &v26[v40];
    v42 = &v27[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v26[v28[8]] = v27[v28[8]];
    v26[v28[9]] = v27[v28[9]];
    v44 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v29 + 56);
    swift_bridgeObjectRetain(v39);
    v45 = swift_bridgeObjectRetain(v43);
    v44(v26, 0, 1, v28, v45);
  }
  v46 = a3[7];
  v47 = a3[8];
  v48 = *(uint64_t *)((char *)a2 + v46);
  *(uint64_t *)((char *)a1 + v46) = v48;
  v49 = *(uint64_t *)((char *)a2 + v47);
  *(uint64_t *)((char *)a1 + v47) = v49;
  swift_retain(v48);
  swift_retain(v49);
  return a1;
}

uint64_t *assignWithCopy for CreateFolderIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  int *v31;
  uint64_t v32;
  uint64_t (*v33)(_BYTE *, uint64_t, int *);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _QWORD, uint64_t, int *, __n128);
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for AccountEntity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = type metadata accessor for AccountID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      v17 = *(int *)(v11 + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v20 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(int *)(v11 + 24);
      v22 = &v9[v21];
      v23 = &v10[v21];
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v24 = *((_QWORD *)v23 + 1);
      *((_QWORD *)v22 + 1) = v24;
      v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
      v26 = swift_bridgeObjectRetain(v24);
      v25(v9, 0, 1, v11, v26);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_100145264((uint64_t)v9, type metadata accessor for AccountEntity);
LABEL_6:
    v27 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v59 = type metadata accessor for AccountID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v9, v10, v59);
  v60 = *(int *)(v11 + 20);
  v61 = &v9[v60];
  v62 = &v10[v60];
  v63 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  v64 = *(int *)(v11 + 24);
  v65 = &v9[v64];
  v66 = &v10[v64];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v67 = *((_QWORD *)v66 + 1);
  v68 = *((_QWORD *)v65 + 1);
  *((_QWORD *)v65 + 1) = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v68);
LABEL_7:
  v28 = a3[6];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = (int *)type metadata accessor for FolderEntity(0);
  v32 = *((_QWORD *)v31 - 1);
  v33 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v69 = type metadata accessor for FolderID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 24))(v29, v30, v69);
      v70 = v31[5];
      v71 = &v29[v70];
      v72 = &v30[v70];
      v73 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v71, v72, v73);
      v74 = v31[6];
      v75 = &v29[v74];
      v76 = &v30[v74];
      *v75 = *v76;
      v77 = v76[1];
      v78 = v75[1];
      v75[1] = v77;
      swift_bridgeObjectRetain(v77);
      swift_bridgeObjectRelease(v78);
      v79 = v31[7];
      v80 = &v29[v79];
      v81 = &v30[v79];
      *v80 = *v81;
      v82 = v81[1];
      v83 = v80[1];
      v80[1] = v82;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRelease(v83);
      v29[v31[8]] = v30[v31[8]];
      v29[v31[9]] = v30[v31[9]];
      goto LABEL_13;
    }
    sub_100145264((uint64_t)v29, type metadata accessor for FolderEntity);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    v51 = sub_100012E18(&qword_1005D1EB0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_13;
  }
  v36 = type metadata accessor for FolderID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v29, v30, v36);
  v37 = v31[5];
  v38 = &v29[v37];
  v39 = &v30[v37];
  v40 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = v31[6];
  v42 = &v29[v41];
  v43 = &v30[v41];
  *v42 = *v43;
  v44 = v43[1];
  v42[1] = v44;
  v45 = v31[7];
  v46 = &v29[v45];
  v47 = &v30[v45];
  *v46 = *v47;
  v48 = v47[1];
  v46[1] = v48;
  v29[v31[8]] = v30[v31[8]];
  v29[v31[9]] = v30[v31[9]];
  v49 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *, __n128))(v32 + 56);
  swift_bridgeObjectRetain(v44);
  v50 = swift_bridgeObjectRetain(v48);
  v49(v29, 0, 1, v31, v50);
LABEL_13:
  v52 = a3[7];
  v53 = *(uint64_t *)((char *)a2 + v52);
  v54 = *(uint64_t *)((char *)a1 + v52);
  *(uint64_t *)((char *)a1 + v52) = v53;
  swift_retain(v53);
  swift_release(v54);
  v55 = a3[8];
  v56 = *(uint64_t *)((char *)a2 + v55);
  v57 = *(uint64_t *)((char *)a1 + v55);
  *(uint64_t *)((char *)a1 + v55) = v56;
  swift_retain(v56);
  swift_release(v57);
  return a1;
}

_QWORD *initializeWithTake for CreateFolderIntent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for AccountEntity(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for AccountID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = *(int *)(v9 + 20);
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)&v7[*(int *)(v9 + 24)] = *(_OWORD *)&v8[*(int *)(v9 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = (int *)type metadata accessor for FolderEntity(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_100012E18(&qword_1005D1EB0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for FolderID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v18, v19, v23);
    v24 = v20[5];
    v25 = &v18[v24];
    v26 = &v19[v24];
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
    *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
    v18[v20[8]] = v19[v20[8]];
    v18[v20[9]] = v19[v20[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  v28 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  return a1;
}

uint64_t *assignWithTake for CreateFolderIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AccountEntity(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = type metadata accessor for AccountID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      v16 = *(int *)(v10 + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)&v8[*(int *)(v10 + 24)] = *(_OWORD *)&v9[*(int *)(v10 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_100145264((uint64_t)v8, type metadata accessor for AccountEntity);
LABEL_6:
    v20 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v40 = type metadata accessor for AccountID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v8, v9, v40);
  v41 = *(int *)(v10 + 20);
  v42 = &v8[v41];
  v43 = &v9[v41];
  v44 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  v45 = *(int *)(v10 + 24);
  v46 = &v8[v45];
  v47 = &v9[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  v50 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease(v50);
LABEL_7:
  v21 = a3[6];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = (int *)type metadata accessor for FolderEntity(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v51 = type metadata accessor for FolderID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v22, v23, v51);
      v52 = v24[5];
      v53 = &v22[v52];
      v54 = &v23[v52];
      v55 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
      v56 = v24[6];
      v57 = &v22[v56];
      v58 = (uint64_t *)&v23[v56];
      v60 = *v58;
      v59 = v58[1];
      v61 = v57[1];
      *v57 = v60;
      v57[1] = v59;
      swift_bridgeObjectRelease(v61);
      v62 = v24[7];
      v63 = &v22[v62];
      v64 = (uint64_t *)&v23[v62];
      v66 = *v64;
      v65 = v64[1];
      v67 = v63[1];
      *v63 = v66;
      v63[1] = v65;
      swift_bridgeObjectRelease(v67);
      v22[v24[8]] = v23[v24[8]];
      v22[v24[9]] = v23[v24[9]];
      goto LABEL_13;
    }
    sub_100145264((uint64_t)v22, type metadata accessor for FolderEntity);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v34 = sub_100012E18(&qword_1005D1EB0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  v29 = type metadata accessor for FolderID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v22, v23, v29);
  v30 = v24[5];
  v31 = &v22[v30];
  v32 = &v23[v30];
  v33 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  *(_OWORD *)&v22[v24[6]] = *(_OWORD *)&v23[v24[6]];
  *(_OWORD *)&v22[v24[7]] = *(_OWORD *)&v23[v24[7]];
  v22[v24[8]] = v23[v24[8]];
  v22[v24[9]] = v23[v24[9]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_13:
  v35 = a3[7];
  v36 = *(uint64_t *)((char *)a1 + v35);
  *(uint64_t *)((char *)a1 + v35) = *(uint64_t *)((char *)a2 + v35);
  swift_release(v36);
  v37 = a3[8];
  v38 = *(uint64_t *)((char *)a1 + v37);
  *(uint64_t *)((char *)a1 + v37) = *(uint64_t *)((char *)a2 + v37);
  swift_release(v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateFolderIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100292728);
}

uint64_t sub_100292728(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100012E18(&qword_1005D1EB0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CreateFolderIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002927DC);
}

char *sub_1002927DC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100012E18((uint64_t *)&unk_1005D6AB0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100012E18(&qword_1005D1EB0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_100292880(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100018C7C(319, qword_1005D6B80, type metadata accessor for AccountEntity);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100018C7C(319, (unint64_t *)&qword_1005D3C90, type metadata accessor for FolderEntity);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_10029293C()
{
  return sub_100016638(&qword_1005D6BC8, &qword_1005D6BD0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100292968()
{
  return sub_100016638(&qword_1005D6BD8, &qword_1005D6BE0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100292994()
{
  return sub_100016638(&qword_1005D6BE8, &qword_1005D6BE0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1002929C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v3 = type metadata accessor for Participant(0);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v4 = __chkstk_darwin(v3);
  v33 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v32 = (char *)v29 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = _swiftEmptyArrayStorage;
  if (!v7)
    return (uint64_t)v8;
  v29[1] = v1;
  v36 = _swiftEmptyArrayStorage;
  sub_100137028(0, v7, 0);
  result = sub_100242C1C(a1);
  v10 = result;
  v12 = v11;
  v14 = v13 & 1;
  v30 = a1;
  v31 = a1 + 56;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v31 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v12)
      goto LABEL_16;
    v15 = *(_QWORD *)(a1 + 48);
    v17 = v34;
    v16 = v35;
    v18 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v32, v15 + *(_QWORD *)(v34 + 72) * v10, v35);
    v19 = v33;
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v33, v18, v16);
    v21 = Participant.handle.getter(v20);
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v8 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
    {
      sub_100137028(0, v8[2] + 1, 1);
      v8 = v36;
    }
    v25 = v8[2];
    v24 = v8[3];
    if (v25 >= v24 >> 1)
    {
      sub_100137028(v24 > 1, v25 + 1, 1);
      v8 = v36;
    }
    v8[2] = v25 + 1;
    v26 = &v8[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
    a1 = v30;
    result = sub_1003CCBC0(v10, v12, v14 & 1, v30);
    v10 = result;
    v12 = v27;
    v14 = v28 & 1;
    if (!--v7)
    {
      sub_1001EDA28(result, v27, v28 & 1);
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100292C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100292C1C(a1, a2, a3, (uint64_t)&unk_100564740, (uint64_t)&type metadata for Bool, (uint64_t)&unk_1005D6EF8);
}

uint64_t sub_100292C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD v37[3];
  _QWORD v38[4];

  v13 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v15, &qword_1005D4680);
  v16 = type metadata accessor for TaskPriority(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  v35 = v6;
  v36 = a5;
  v19 = a6;
  if (v18 == 1)
  {
    sub_100012DDC((uint64_t)v15, &qword_1005D4680);
    v20 = 12544;
    v21 = *(_QWORD *)(a3 + 16);
    if (v21)
    {
LABEL_3:
      v22 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v21);
      v24 = swift_unknownObjectRetain(v21);
      v25 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v22, v24);
      v27 = v26;
      swift_unknownObjectRelease(v21, v26);
      goto LABEL_6;
    }
  }
  else
  {
    v28 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    v20 = v28 | 0x3100;
    v21 = *(_QWORD *)(a3 + 16);
    if (v21)
      goto LABEL_3;
  }
  v25 = 0;
  v27 = 0;
LABEL_6:
  v29 = *v35;
  v30 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v30 + 16) = a2;
  *(_QWORD *)(v30 + 24) = a3;
  v31 = (_QWORD *)(v27 | v25);
  if (v27 | v25)
  {
    v38[0] = 0;
    v38[1] = 0;
    v31 = v38;
    v38[2] = v25;
    v38[3] = v27;
  }
  v37[0] = 1;
  v37[1] = v31;
  v37[2] = v29;
  v32 = swift_task_create(v20, v37, v36, v19, v30);
  return swift_release(v32);
}

void RealtimeCollaborationController.postLocalSelection(_:asDelta:)(unint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  id v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  char **v35;
  char *v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  char *v60;
  char v61[24];
  char *v62;
  uint64_t v63;

  v3 = v2;
  LODWORD(v60) = a2;
  v59 = a1;
  v4 = sub_100012E18(&qword_1005D6C48);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v57 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EditNoteActivity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D6C50);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FastSync.SelectionMessage(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v23 = (char *)&v51 - v22;
  v24 = *(_QWORD *)&v3[OBJC_IVAR___ICRealtimeCollaborationController_messageController];
  if (v24)
  {
    v53 = v21;
    v54 = v20;
    v55 = v5;
    v56 = v4;
    v25 = *(void **)&v3[OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument];
    if (v25)
    {
      v26 = &v3[OBJC_IVAR___ICRealtimeCollaborationController_activeSession];
      swift_beginAccess(&v3[OBJC_IVAR___ICRealtimeCollaborationController_activeSession], &v62, 0, 0);
      if (*(_QWORD *)v26)
      {
        swift_retain(v24);
        v27 = v25;
        v28 = (char *)RealtimeCollaborationSelectionDocument.mergeLocalSelection(_:)(v59);
        v52 = v27;
        if ((v60 & 1) != 0)
        {
          if (v29 >> 60 == 15)
          {
            swift_release(v24);

            return;
          }
          v41 = v28;
          v40 = v29;
          sub_10013DCA0((uint64_t)v28, v29);
          v59 = v40;
          v60 = v41;
          v51 = (uint64_t)v41;
        }
        else
        {
          v59 = v29;
          v60 = v28;
          v38 = objc_msgSend(v27, "archivedData");
          v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v40 = v39;

        }
        v42 = (uint64_t)&v3[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine];
        swift_beginAccess(&v3[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine], v61, 0, 0);
        sub_100012CE8(v42, (uint64_t)v15, &qword_1005D6C50);
        v43 = type metadata accessor for FastSyncStateMachine(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v15, 1, v43) == 1)
        {
          __break(1u);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
          v44 = sub_100145264((uint64_t)v15, type metadata accessor for FastSyncStateMachine);
          v45 = v57;
          EditNoteActivity.replicaID.getter(v44);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          v46 = v51;
          sub_10013DCA0(v51, v40);
          FastSync.SelectionMessage.init(replicaID:selectionStateData:)(v45, v46, v40);
          v48 = v53;
          v47 = v54;
          (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v19, v23, v54);
          v49 = sub_100012E18(&qword_1005CF780);
          v50 = v58;
          AsyncStream.Continuation.yield(_:)(v19, v49);

          sub_1001672D8((uint64_t)v60, v59);
          sub_10013DD30(v46, v40);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v56);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v47);
          swift_release(v24);
        }
      }
    }
  }
  else
  {
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v30 = type metadata accessor for Logger(0);
    sub_10012A0B0(v30, (uint64_t)qword_1005D6BF0);
    v60 = v3;
    v31 = Logger.logObject.getter(v60);
    v33 = static os_log_type_t.error.getter(v31, v32);
    if (os_log_type_enabled(v31, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = (char **)swift_slowAlloc(8, -1);
      *(_DWORD *)v34 = 138412290;
      v62 = v60;
      v36 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v34 + 4);
      *v35 = v60;

      _os_log_impl((void *)&_mh_execute_header, v31, v33, "%@: Message controller wasn't available when we tried to send a selection update.", v34, 0xCu);
      v37 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v35, 1, v37);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t RealtimeCollaborationController.removeSelection(forParticipantID:)(uint64_t result)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v2 = *(void **)(v1 + OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument);
  if (v2)
  {
    v3 = result;
    v4 = v2;
    v5 = RealtimeCollaborationSelectionDocument.removeSelection(forParticipantID:)(v3);
    v7 = v6;

    return sub_1001672D8(v5, v7);
  }
  return result;
}

uint64_t RealtimeCollaborationController.localParticipantID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(v1 + OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument);
  if (v3)
  {
    v4 = v3;
    RealtimeCollaborationSelectionDocument.localParticipantID.getter();

    v5 = type metadata accessor for UUID(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = type metadata accessor for UUID(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t RealtimeCollaborationController.participantSelections.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(v0 + OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = RealtimeCollaborationSelectionDocument.selections.getter();

  return v3;
}

uint64_t sub_10029344C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D6BF0);
  sub_10012A0B0(v0, (uint64_t)qword_1005D6BF0);
  return static Logger.realtimeCollaboration.getter();
}

uint64_t sub_100293494()
{
  uint64_t v0;

  v0 = sub_100012E18(&qword_1005D6E60);
  sub_10012B334(v0, qword_1005D6C08);
  sub_10012A0B0(v0, (uint64_t)qword_1005D6C08);
  return static Logger.verboseRealtimeCollaboration.getter();
}

uint64_t sub_1002934E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OSSignposter(0);
  sub_10012B334(v4, qword_1005D6C20);
  sub_10012A0B0(v4, (uint64_t)qword_1005D6C20);
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v5 = sub_10012A0B0(v0, (uint64_t)qword_1005D6BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)(v3);
}

uint64_t sub_1002935C8(uint64_t a1)
{
  return sub_100293610(a1, 0xD00000000000002DLL, 0x8000000100485C20, &qword_1005D6C38);
}

uint64_t sub_1002935EC(uint64_t a1)
{
  return sub_100293610(a1, 0xD00000000000002ELL, 0x8000000100485B80, &qword_1005D6C40);
}

uint64_t sub_100293610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;

  v26 = a3;
  v27 = a4;
  v25 = a2;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS.QoSClass(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000163BC(0, (unint64_t *)&qword_1005CEF30, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.userInitiated(_:), v13);
  v17 = static OS_dispatch_queue.global(qos:)(v16);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  static DispatchQoS.unspecified.getter(v18);
  v28 = _swiftEmptyArrayStorage;
  v19 = sub_100019C6C((unint64_t *)&qword_1005D6870, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v20 = sub_100012E18((uint64_t *)&unk_1005CEF40);
  v21 = sub_100016638((unint64_t *)&qword_1005D6880, (uint64_t *)&unk_1005CEF40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v20, v21, v7, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v24);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v25, v26, v12, v9, v6, v17);
  *v27 = result;
  return result;
}

uint64_t sub_10029384C()
{
  uint64_t result;

  result = sub_10029386C();
  byte_100601AB8 = result & 1;
  return result;
}

uint64_t sub_10029386C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  NSObject *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  const char *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  Swift::String v45;
  Swift::String v46;
  void *object;
  void *v48;
  Swift::String v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  _BYTE v57[4];
  int v58;
  uint64_t v59;
  os_log_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  ValueMetadata *v67;
  unint64_t v68;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v57[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __chkstk_darwin(v2);
  v7 = &v57[-v6];
  v8 = __chkstk_darwin(v5);
  v10 = &v57[-v9];
  __chkstk_darwin(v8);
  v12 = &v57[-v11];
  v67 = &type metadata for NotesFeature;
  v68 = sub_1000199D4();
  v64 = (uint64_t)"RealtimeCollaboration";
  v65 = 21;
  v66 = 2;
  v13 = isFeatureEnabled(_:)(&v64);
  v14 = sub_1000153C0(&v64);
  if ((v13 & 1) == 0)
  {
    v20 = static Logger.realtimeCollaboration.getter(v14);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Fast sync is disabled by the feature flag", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  v15 = objc_msgSend((id)objc_opt_self(ICDeviceSupport), "isRunningUnitTests");
  if ((v15 & 1) != 0)
  {
    v16 = static Logger.realtimeCollaboration.getter(v15);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Fast sync is disabled in unit tests", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v7, v0);
    return 0;
  }
  v24 = objc_msgSend((id)objc_opt_self(ICCloudConfiguration), "sharedConfiguration");
  v25 = objc_msgSend(v24, "fastSyncEnabled");

  if (!v25)
  {
    v53 = static Logger.realtimeCollaboration.getter(v26);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Fast Sync is disabled by the cloud configuration", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v10, v0);
    return 0;
  }
  v27 = swift_allocObject(&unk_100564470, 40, 7);
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  *(_WORD *)(v27 + 32) = 256;
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v28 = sub_10012A0B0(v0, (uint64_t)qword_1005D6BF0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v12, v28, v0);
  v29 = swift_allocObject(&unk_100564498, 17, 7);
  *(_BYTE *)(v29 + 16) = 2;
  if ((sub_1002A66AC(v29, v27) & 1) == 0)
  {
    v30 = static os_log_type_t.fault.getter();
    v31 = v30;
    v32 = Logger.logObject.getter(v30);
    v33 = v31;
    if (os_log_type_enabled(v32, v31))
    {
      v34 = swift_slowAlloc(32, -1);
      v61 = swift_slowAlloc(64, -1);
      v63 = v61;
      *(_DWORD *)v34 = 136315650;
      v60 = v32;
      v35 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
      v37 = v36;
      v64 = sub_1003A4190(v35, v36, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v34 + 4);
      swift_bridgeObjectRelease(v37);
      *(_WORD *)(v34 + 12) = 2048;
      v64 = 82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v34 + 14);
      *(_WORD *)(v34 + 22) = 2080;
      v59 = v34 + 24;
      v64 = 0;
      v65 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease(v65);
      v64 = 0xD000000000000021;
      v65 = 0x8000000100485A90;
      v38 = sub_100293E70(v27);
      v58 = v33;
      v39 = v38;
      v41 = v40;
      v43 = v42;
      v62._countAndFlagsBits = StaticString.description.getter("TelephonyUtilities", 18, 2);
      v62._object = v44;
      v45._countAndFlagsBits = 47;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      v46._countAndFlagsBits = StaticString.description.getter(v39, v41, v43);
      object = v46._object;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(object);
      v48 = v62._object;
      String.append(_:)(v62);
      swift_bridgeObjectRelease(v48);
      v49._countAndFlagsBits = 0x7369642073617720;
      v49._object = (void *)0xEE002E64656C6261;
      String.append(_:)(v49);
      v50 = v65;
      v64 = sub_1003A4190(v64, v65, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v59);
      swift_bridgeObjectRelease(v50);
      v32 = v60;
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v58, "Failed assertion at %s:%lu: %s", (uint8_t *)v34, 0x20u);
      v51 = v61;
      swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v34, -1, -1);
    }

  }
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v12, v0);
  swift_release(v27);
  swift_release(v29);
  return 1;
}

const char *sub_100293E70(uint64_t a1)
{
  const char *result;
  uint64_t v3;
  _BYTE v4[24];

  v3 = a1 + 16;
  result = *(const char **)(a1 + 16);
  if (*(_BYTE *)(v3 + 17) == 1)
  {
    swift_beginAccess(v3, v4, 1, 0);
    result = "sharePlayLite";
    *(_QWORD *)(a1 + 16) = "sharePlayLite";
    *(_QWORD *)(a1 + 24) = 13;
    *(_WORD *)(a1 + 32) = 2;
  }
  return result;
}

id static RealtimeCollaborationController.checkFastSyncEnabled(with:)(void *a1)
{
  return sub_1002A6CF8(a1);
}

uint64_t RealtimeCollaborationController.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___ICRealtimeCollaborationController_id);
}

uint64_t RealtimeCollaborationController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___ICRealtimeCollaborationController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___ICRealtimeCollaborationController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t RealtimeCollaborationController.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR___ICRealtimeCollaborationController_delegate;
  swift_beginAccess(v3, v6, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1, v4);
}

void (*RealtimeCollaborationController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___ICRealtimeCollaborationController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_1001FC978;
}

BOOL RealtimeCollaborationController.hasActiveSession.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___ICRealtimeCollaborationController_activeSession);
  swift_beginAccess(v0 + OBJC_IVAR___ICRealtimeCollaborationController_activeSession, v3, 0, 0);
  return *v1 != 0;
}

uint64_t RealtimeCollaborationController.activeSession.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___ICRealtimeCollaborationController_activeSession);
  swift_beginAccess(v0 + OBJC_IVAR___ICRealtimeCollaborationController_activeSession, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t RealtimeCollaborationController.activeSession.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___ICRealtimeCollaborationController_activeSession);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*RealtimeCollaborationController.activeSession.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___ICRealtimeCollaborationController_activeSession, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t RealtimeCollaborationController.currentNoteID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v1 = type metadata accessor for EditNoteActivity(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = v0 + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine;
  swift_beginAccess(v0 + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine, v11, 0, 0);
  v6 = type metadata accessor for FastSyncStateMachine(0);
  v7 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
    v7 = EditNoteActivity.noteID.getter(v8);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v7;
}

char *RealtimeCollaborationController.__allocating_init(id:cloudConfiguration:noteContext:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return RealtimeCollaborationController.init(id:cloudConfiguration:noteContext:)(a1, a2, a3);
}

char *RealtimeCollaborationController.init(id:cloudConfiguration:noteContext:)(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  id v49;
  char *v50;
  objc_super v51;
  uint64_t v52;

  v4 = v3;
  v49 = a3;
  v47 = a1;
  ObjectType = swift_getObjectType(v3);
  v48 = (objc_class *)ObjectType;
  v7 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v7);
  v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005CF0C8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR___ICRealtimeCollaborationController_eventReporter;
  v52 = ObjectType;
  v14 = v4;
  v15 = sub_100012E18(&qword_1005CF0B8);
  String.init<A>(describing:)(&v52, v15);
  v17 = v16;
  v18 = objc_allocWithZone((Class)ICNAEventReporter);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v20 = objc_msgSend(v18, "initWithSubTrackerName:", v19);

  *(_QWORD *)&v4[v13] = v20;
  swift_unknownObjectWeakInit(&v14[OBJC_IVAR___ICRealtimeCollaborationController_delegate], 0);
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_activeSession] = 0;
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_paperKitController] = 0;
  v21 = &v14[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine];
  v22 = type metadata accessor for FastSyncStateMachine(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = OBJC_IVAR___ICRealtimeCollaborationController_mergeableFieldStateCache;
  v24 = sub_100012E18(&qword_1005CF0C0);
  v25 = swift_allocObject(v24, 28, 7);
  *(_DWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 16) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v14[v23] = v25;
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_messageController] = 0;
  v26 = OBJC_IVAR___ICRealtimeCollaborationController_contextNotifications;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v9);
  v27 = sub_100012E18(&qword_1005CF0D0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  *(_QWORD *)&v14[v26] = sub_1001255C8((uint64_t)v12);
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_watchForContextChangesTask] = 0;
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument] = 0;
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_id] = v47;
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_cloudConfiguration] = a2;
  v28 = a2;
  v29 = v49;
  v30 = objc_msgSend(v49, "workerManagedObjectContext");
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_context] = v30;
  v31 = v29;
  v32 = objc_msgSend(v29, "workerManagedObjectContext");
  *(_QWORD *)&v14[OBJC_IVAR___ICRealtimeCollaborationController_analyticsContext] = v32;

  v51.receiver = v14;
  v51.super_class = v48;
  v33 = (char *)objc_msgSendSuper2(&v51, "init");
  v34 = type metadata accessor for TaskPriority(0);
  v35 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v50, 1, 1, v34);
  v36 = swift_allocObject(&unk_1005643A8, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v33);
  v37 = *(void **)&v33[OBJC_IVAR___ICRealtimeCollaborationController_context];
  type metadata accessor for MainActor(0);
  v38 = v33;
  v39 = v37;
  v40 = swift_retain(v36);
  v41 = static MainActor.shared.getter(v40);
  v42 = (_QWORD *)swift_allocObject(&unk_1005643D0, 48, 7);
  v42[2] = v41;
  v42[3] = &protocol witness table for MainActor;
  v42[4] = v39;
  v42[5] = v36;
  swift_release(v36);
  v43 = sub_1002EDE48(v35, (uint64_t)&unk_1005D6CD0, (uint64_t)v42);

  v44 = *(_QWORD *)&v38[OBJC_IVAR___ICRealtimeCollaborationController_watchForContextChangesTask];
  *(_QWORD *)&v38[OBJC_IVAR___ICRealtimeCollaborationController_watchForContextChangesTask] = v43;
  swift_release(v44);
  return v38;
}

void RealtimeCollaborationController.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  objc_class *ObjectType;
  objc_super v3;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___ICRealtimeCollaborationController_watchForContextChangesTask];
  if (v1)
  {
    ObjectType = (objc_class *)swift_getObjectType(v0);
    swift_retain(v1);
    Task.cancel()();
    swift_release(v1);
    v3.receiver = v0;
    v3.super_class = ObjectType;
    objc_msgSendSuper2(&v3, "dealloc");
  }
  else
  {
    __break(1u);
  }
}

uint64_t RealtimeCollaborationController.joinGroupActivity(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  id v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  int v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  id v63;
  char *v64;
  uint64_t v65;
  NSObject *v66;
  uint64_t v67;
  os_log_type_t v68;
  uint64_t v69;
  char **v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char **v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t);
  id v114;
  NSObject *v115;
  uint64_t v116;
  os_log_type_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  os_log_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(_QWORD, _QWORD, _QWORD);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160[3];
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char v164[32];

  v156 = a2;
  v157 = 0;
  v159 = a1;
  v3 = type metadata accessor for FastSyncError(0);
  v154 = *(_QWORD *)(v3 - 8);
  v155 = v3;
  v4 = __chkstk_darwin(v3);
  v144 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v146 = (char *)&v142 - v7;
  v8 = __chkstk_darwin(v6);
  v152 = (char *)&v142 - v9;
  v10 = __chkstk_darwin(v8);
  v153 = (char *)&v142 - v11;
  __chkstk_darwin(v10);
  v151 = (os_log_t)((char *)&v142 - v12);
  v13 = sub_100012E18(&qword_1005D2218);
  __chkstk_darwin(v13);
  v148 = (uint64_t)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EditNoteActivity(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v149 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v143 = (char *)&v142 - v20;
  v21 = __chkstk_darwin(v19);
  v145 = (char *)&v142 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v142 - v23;
  v25 = sub_100012E18(&qword_1005D6C50);
  v26 = __chkstk_darwin(v25);
  v147 = (uint64_t)&v142 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v29 = (char *)&v142 - v28;
  v30 = v2;
  v31 = (uint64_t)&v2[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine];
  swift_beginAccess(v31, v164, 0, 0);
  sub_100012CE8(v31, (uint64_t)v29, &qword_1005D6C50);
  v32 = type metadata accessor for FastSyncStateMachine(0);
  v33 = *(_QWORD *)(v32 - 8);
  v150 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v34 = v150(v29, 1, v32);
  sub_100012DDC((uint64_t)v29, &qword_1005D6C50);
  v158 = v16;
  if (v34 == 1)
  {
    v35 = v30;
    v36 = *(_QWORD *)&v30[OBJC_IVAR___ICRealtimeCollaborationController_id];
    v37 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v24, v159, v15);
    v38 = v148;
    sub_100012CE8(v156, v148, &qword_1005D2218);
    v39 = v147;
    v40 = v38;
    v41 = (uint64_t)v157;
    sub_10018746C(v36, (uint64_t)v24, v40, v147);
    if (v41)
    {
      v42 = v154;
      v43 = v155;
      v44 = v158;
      v45 = v152;
      v46 = v35;
      v47 = v37;
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
    swift_beginAccess(v31, v160, 33, 0);
    sub_1002A6EE8(v39, v31);
    swift_endAccess(v160);
  }
  else
  {
    v35 = v30;
    v37 = v159;
    v41 = (uint64_t)v157;
  }
  v48 = swift_allocObject(&unk_1005643F8, 24, 7);
  v46 = v35;
  *(_QWORD *)(v48 + 16) = v35;
  swift_beginAccess(v31, v160, 33, 0);
  result = v150((char *)v31, 1, v32);
  v44 = v158;
  v50 = v156;
  if ((_DWORD)result != 1)
  {
    v51 = v35;
    v47 = v37;
    sub_10018A46C(v37, v50, (uint64_t)&unk_1005D6CE0, v48);
    v42 = v154;
    v43 = v155;
    if (!v41)
    {
      swift_endAccess(v160);
      return swift_release(v48);
    }
    swift_endAccess(v160);
    swift_release(v48);
    v45 = v152;
LABEL_9:
    v52 = v151;
    v160[0] = v41;
    swift_errorRetain(v41);
    v53 = sub_100012E18(&qword_1005D7A90);
    v54 = v15;
    if (!swift_dynamicCast(v52, v160, v53, v43, 0))
    {
      swift_errorRelease(v160[0]);
      if (qword_1005CEBB0 != -1)
        swift_once(&qword_1005CEBB0, sub_10029344C);
      v61 = type metadata accessor for Logger(0);
      sub_10012A0B0(v61, (uint64_t)qword_1005D6BF0);
      v62 = v149;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v149, v47, v54);
      v63 = v46;
      swift_errorRetain(v41);
      v64 = (char *)v63;
      v65 = swift_errorRetain(v41);
      v66 = Logger.logObject.getter(v65);
      v68 = static os_log_type_t.error.getter(v66, v67);
      if (os_log_type_enabled(v66, v68))
      {
        v69 = swift_slowAlloc(32, -1);
        v70 = (char **)swift_slowAlloc(16, -1);
        v156 = swift_slowAlloc(32, -1);
        v160[0] = v156;
        *(_DWORD *)v69 = 138412802;
        v157 = (void (*)(_QWORD, _QWORD, _QWORD))v41;
        v71 = v54;
        v162 = v64;
        v72 = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v69 + 4);
        *v70 = v64;

        *(_WORD *)(v69 + 12) = 2080;
        v73 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
        v74 = v149;
        v75 = dispatch thunk of CustomStringConvertible.description.getter(v71, v73);
        v77 = v76;
        v162 = (char *)sub_1003A4190(v75, v76, v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v69 + 14);
        swift_bridgeObjectRelease(v77);
        v78 = v71;
        v41 = (uint64_t)v157;
        (*(void (**)(char *, uint64_t))(v158 + 8))(v74, v78);
        *(_WORD *)(v69 + 22) = 2112;
        swift_errorRetain(v41);
        v79 = _swift_stdlib_bridgeErrorToNSError(v41);
        v162 = (char *)v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v69 + 24);
        v70[1] = (char *)v79;
        swift_errorRelease(v41);
        swift_errorRelease(v41);
        _os_log_impl((void *)&_mh_execute_header, v66, v68, "%@: Error transitioning to new activity %s: %@", (uint8_t *)v69, 0x20u);
        v80 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v70, 2, v80);
        v81 = v70;
        v47 = v159;
        swift_slowDealloc(v81, -1, -1);
        v82 = v156;
        swift_arrayDestroy(v156, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v82, -1, -1);
        swift_slowDealloc(v69, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v44 + 8))(v62, v54);
        swift_errorRelease(v41);
        swift_errorRelease(v41);
      }

      swift_errorRetain(v41);
      sub_100295B38(v41, 0, v47, 0);
      swift_errorRelease(v41);
      v107 = v41;
      return swift_errorRelease(v107);
    }
    swift_errorRelease(v41);
    v55 = v52;
    v56 = v153;
    (*(void (**)(char *, os_log_t, uint64_t))(v42 + 32))(v153, v55, v43);
    v57 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    v57(v45, v56, v43);
    v58 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v45, v43);
    if (v58 == enum case for FastSyncError.unsupportedNote(_:))
    {
      (*(void (**)(char *, uint64_t))(v42 + 96))(v45, v43);
      swift_bridgeObjectRelease(*((_QWORD *)v45 + 1));
      v59 = v146;
      v60 = v145;
    }
    else
    {
      v59 = v146;
      v60 = v145;
      if (v58 != enum case for FastSyncError.fastSyncDisabled(_:))
      {
        v108 = v57;
        if (qword_1005CEBB0 != -1)
          swift_once(&qword_1005CEBB0, sub_10029344C);
        v109 = type metadata accessor for Logger(0);
        sub_10012A0B0(v109, (uint64_t)qword_1005D6BF0);
        v110 = v44;
        v111 = v143;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v143, v47, v54);
        v112 = v144;
        v113 = (void (*)(_QWORD, _QWORD, _QWORD))v108;
        v108(v144, v153, v43);
        v114 = v46;
        v115 = Logger.logObject.getter(v114);
        v117 = static os_log_type_t.error.getter(v115, v116);
        v118 = v117;
        if (os_log_type_enabled(v115, v117))
        {
          v119 = swift_slowAlloc(32, -1);
          LODWORD(v156) = v118;
          v120 = v119;
          v121 = swift_slowAlloc(16, -1);
          v157 = v113;
          v122 = v54;
          v123 = (_QWORD *)v121;
          v124 = swift_slowAlloc(32, -1);
          v161 = (uint64_t)v114;
          v162 = (char *)v124;
          *(_DWORD *)v120 = 138412802;
          v151 = v115;
          v125 = v114;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v120 + 4);
          *v123 = v114;

          v43 = v155;
          *(_WORD *)(v120 + 12) = 2080;
          v126 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
          v127 = dispatch thunk of CustomStringConvertible.description.getter(v122, v126);
          v129 = v128;
          v161 = sub_1003A4190(v127, v128, (uint64_t *)&v162);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v120 + 14);
          swift_bridgeObjectRelease(v129);
          v130 = v122;
          v113 = v157;
          (*(void (**)(char *, uint64_t))(v158 + 8))(v111, v130);
          *(_WORD *)(v120 + 22) = 2112;
          v131 = sub_100019C6C(&qword_1005DB2B0, (uint64_t (*)(uint64_t))&type metadata accessor for FastSyncError, (uint64_t)&protocol conformance descriptor for FastSyncError);
          v132 = swift_allocError(v43, v131, 0, 0);
          v133 = v144;
          v113(v134, v144, v43);
          v135 = _swift_stdlib_bridgeErrorToNSError(v132);
          v161 = v135;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v120 + 24);
          v123[1] = v135;
          v136 = *(void (**)(char *, uint64_t))(v154 + 8);
          v136(v133, v43);
          v115 = v151;
          _os_log_impl((void *)&_mh_execute_header, v151, (os_log_type_t)v156, "%@: Error transitioning to new activity %s: %@", (uint8_t *)v120, 0x20u);
          v137 = sub_100012E18(&qword_1005D3A30);
          swift_arrayDestroy(v123, 2, v137);
          swift_slowDealloc(v123, -1, -1);
          swift_arrayDestroy(v124, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v124, -1, -1);
          swift_slowDealloc(v120, -1, -1);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v54);
          v136 = *(void (**)(char *, uint64_t))(v42 + 8);
          v136(v112, v43);
        }

        v138 = sub_100019C6C(&qword_1005DB2B0, (uint64_t (*)(uint64_t))&type metadata accessor for FastSyncError, (uint64_t)&protocol conformance descriptor for FastSyncError);
        v139 = swift_allocError(v43, v138, 0, 0);
        v140 = v153;
        v113(v141, v153, v43);
        sub_100295B38(v139, 0, v159, 0);
        swift_errorRelease(v139);
        v136(v140, v43);
        v136(v152, v43);
        goto LABEL_32;
      }
    }
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v83 = type metadata accessor for Logger(0);
    sub_10012A0B0(v83, (uint64_t)qword_1005D6BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v60, v47, v54);
    v57(v59, v153, v43);
    v84 = v46;
    v157 = (void (*)(_QWORD, _QWORD, _QWORD))v57;
    v85 = v60;
    v86 = v84;
    v87 = Logger.logObject.getter(v84);
    v88 = static os_log_type_t.info.getter();
    v89 = v54;
    LODWORD(v156) = v88;
    v90 = v59;
    if (os_log_type_enabled(v87, v88))
    {
      v91 = v59;
      v92 = swift_slowAlloc(32, -1);
      v93 = (_QWORD *)swift_slowAlloc(16, -1);
      v152 = (char *)swift_slowAlloc(32, -1);
      v161 = (uint64_t)v86;
      v162 = v152;
      *(_DWORD *)v92 = 138412802;
      v151 = v87;
      v94 = v86;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v92 + 4);
      *v93 = v86;

      v43 = v155;
      *(_WORD *)(v92 + 12) = 2080;
      v95 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
      v96 = dispatch thunk of CustomStringConvertible.description.getter(v89, v95);
      v98 = v97;
      v161 = sub_1003A4190(v96, v97, (uint64_t *)&v162);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v92 + 14);
      swift_bridgeObjectRelease(v98);
      (*(void (**)(char *, uint64_t))(v158 + 8))(v85, v89);
      *(_WORD *)(v92 + 22) = 2112;
      v99 = sub_100019C6C(&qword_1005DB2B0, (uint64_t (*)(uint64_t))&type metadata accessor for FastSyncError, (uint64_t)&protocol conformance descriptor for FastSyncError);
      v100 = swift_allocError(v43, v99, 0, 0);
      v157(v101, v59, v43);
      v102 = _swift_stdlib_bridgeErrorToNSError(v100);
      v161 = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162, v92 + 24);
      v93[1] = v102;
      v103 = *(void (**)(char *, uint64_t))(v154 + 8);
      v103(v91, v43);
      v87 = v151;
      _os_log_impl((void *)&_mh_execute_header, v151, (os_log_type_t)v156, "%@: Error transitioning to new activity %s: %@", (uint8_t *)v92, 0x20u);
      v104 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v93, 2, v104);
      v105 = v93;
      v47 = v159;
      swift_slowDealloc(v105, -1, -1);
      v106 = v152;
      swift_arrayDestroy(v152, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v106, -1, -1);
      swift_slowDealloc(v92, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v44 + 8))(v85, v89);
      v103 = *(void (**)(char *, uint64_t))(v42 + 8);
      v103(v90, v43);
    }

    sub_100295B38(1, 4, v47, 0);
    v103(v153, v43);
LABEL_32:
    v107 = v160[0];
    return swift_errorRelease(v107);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002959B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1002959CC, 0, 0);
}

uint64_t sub_1002959CC()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  v0[4] = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  v0[5] = v3;
  v0[6] = v4;
  return swift_task_switch(sub_100295A34, v3, v4);
}

uint64_t sub_100295A34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[8] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1005D58F4);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_100295AD0;
  return FastSync.PresenceAction.perform(onJoinActivity:onLeaveActivity:)((uint64_t)&unk_1005D6F00, v2, (uint64_t)&unk_1005D6F08, v3);
}

uint64_t sub_100295AD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  v3 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1002A8414, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_100295B38(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[7];
  unint64_t v25;
  _OWORD v26[4];
  __int128 v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v8 = type metadata accessor for EditNoteActivity(0);
  v24[5] = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v24[2] = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v24[3] = (char *)v24 - v11;
  v12 = sub_100012E18((uint64_t *)&unk_1005D86E0);
  inited = swift_initStackObject(v12, &v31);
  *(_OWORD *)(inited + 16) = xmmword_100454E90;
  v29 = 0xD000000000000011;
  v30 = 0x8000000100485C70;
  v14 = AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v29, &type metadata for String, &protocol witness table for String);
  v24[6] = a3;
  v15 = EditNoteActivity.noteID.getter(v14);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v16;
  v29 = 0xD000000000000015;
  v30 = 0x8000000100485C90;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), &v29, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 168) = &type metadata for RealtimeCollaborationController.GroupActivityState;
  *(_QWORD *)(inited + 144) = a1;
  *(_BYTE *)(inited + 152) = a2;
  sub_10013ADF8(a1, a2);
  v17 = sub_100136444(inited);
  if (a4)
  {
    *(_QWORD *)&v27 = 0x70756F7247434352;
    *((_QWORD *)&v27 + 1) = 0xEF6E6F6973736553;
    swift_retain(a4);
    AnyHashable.init<A>(_:)(&v29, &v27, &type metadata for String, &protocol witness table for String);
    v28 = (void *)sub_100012E18(&qword_1005D4AC0);
    *(_QWORD *)&v27 = a4;
    sub_1000160B8(&v27, v26);
    swift_retain(a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    v25 = v17;
    sub_10024ECC4(v26, (uint64_t)&v29, isUniquelyReferenced_nonNull_native);
    v17 = v25;
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_10018550C((uint64_t)&v29);
    swift_release(a4);
  }
  v19 = EditNoteActivity.noteTitle.getter();
  if (v20)
  {
    v21 = v19;
    v22 = v20;
    strcpy((char *)&v27, "RCCNoteTitle");
    BYTE13(v27) = 0;
    HIWORD(v27) = -5120;
    AnyHashable.init<A>(_:)(&v29, &v27, &type metadata for String, &protocol witness table for String);
    v28 = &type metadata for String;
    *(_QWORD *)&v27 = v21;
    *((_QWORD *)&v27 + 1) = v22;
    sub_1000160B8(&v27, v26);
    v23 = swift_isUniquelyReferenced_nonNull_native(v17);
    v25 = v17;
    sub_10024ECC4(v26, (uint64_t)&v29, v23);
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_10018550C((uint64_t)&v29);
  }
  __asm { BR              X10 }
}

void sub_100295E10()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  Class isa;

  *(_QWORD *)(v0 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  *(_QWORD *)(v0 + 136) = v7;
  sub_10013ADF8(v2, v1);
  AnyHashable.init<A>(_:)((_QWORD *)(v0 + 160), v0 + 128, &type metadata for String, &protocol witness table for String);
  swift_getErrorValue(v2, v0 + 120, v0 + 96);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 152) = v9;
  v10 = sub_10012D160((_QWORD *)(v0 + 128));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v10, v8, v9);
  sub_1000160B8((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 64));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  *(_QWORD *)(v0 + 56) = v3;
  sub_10024ECC4((_OWORD *)(v0 + 64), v0 + 160, isUniquelyReferenced_nonNull_native);
  v12 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10018550C(v0 + 160);
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v13 = type metadata accessor for Logger(0);
  sub_10012A0B0(v13, (uint64_t)qword_1005D6BF0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v0 + 48), v6);
  sub_10013ADF8(v2, v1);
  sub_10013ADF8(v2, v1);
  sub_10013ADF8(v2, v1);
  v14 = sub_10013ADF8(v2, v1);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.error.getter(v15, v16);
  v18 = v17;
  if (os_log_type_enabled(v15, v17))
  {
    v19 = v6;
    v20 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v0 + 24) = swift_slowAlloc(8, -1);
    v21 = swift_slowAlloc(64, -1);
    *(_QWORD *)(v0 + 48) = v21;
    *(_QWORD *)(v0 + 160) = v21;
    *(_DWORD *)v20 = 136315650;
    v22 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
    *(_QWORD *)(v0 + 16) = v15;
    v23 = dispatch thunk of CustomStringConvertible.description.getter(v19, v22);
    *(_DWORD *)(v0 + 8) = v18;
    v24 = v4;
    v26 = v25;
    *(_QWORD *)(v0 + 128) = sub_1003A4190(v23, v25, (uint64_t *)(v0 + 160));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v20 + 4);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 8))(v24, v19);
    *(_WORD *)(v20 + 12) = 2080;
    v27 = sub_1002A57D0(v2, v1);
    v29 = v28;
    *(_QWORD *)(v0 + 128) = sub_1003A4190(v27, v28, (uint64_t *)(v0 + 160));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v20 + 14);
    swift_bridgeObjectRelease(v29);
    sub_100251F00(v2, v1);
    sub_100251F00(v2, v1);
    *(_WORD *)(v20 + 22) = 2112;
    sub_10013ADF8(v2, v1);
    v30 = _swift_stdlib_bridgeErrorToNSError(v2);
    *(_QWORD *)(v0 + 128) = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v20 + 24);
    v31 = *(uint64_t **)(v0 + 24);
    *v31 = v30;
    sub_100251F00(v2, v1);
    sub_100251F00(v2, v1);
    v32 = *(NSObject **)(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)*(_DWORD *)(v0 + 8), "%s: %s (error: %@)", (uint8_t *)v20, 0x20u);
    v33 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v31, 1, v33);
    swift_slowDealloc(v31, -1, -1);
    v34 = *(_QWORD *)(v0 + 48);
    swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    sub_100251F00(v2, v1);
  }
  else
  {
    sub_100251F00(v2, v1);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_100251F00(v2, v1);
    sub_100251F00(v2, v1);
    sub_100251F00(v2, v1);
    sub_100251F00(v2, v1);

  }
  v35 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1005CEBE0 != -1)
    swift_once(&qword_1005CEBE0, sub_1002A579C);
  v36 = qword_100601AC0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v35, "postNotificationName:object:userInfo:", v36, *(_QWORD *)(v0 + 32), isa);

}

Swift::Void __swiftcall RealtimeCollaborationController.leaveGroupActivity()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  NSObject *v22;
  uint64_t v23;
  char **v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  char **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  char **v43;
  uint64_t v44;
  os_log_t v45;
  char *v46;
  char *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  char v56[32];

  v1 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EditNoteActivity(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Logger(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D6C50);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v40 - v13;
  v15 = (uint64_t)&v0[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine];
  swift_beginAccess(&v0[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine], v56, 0, 0);
  sub_100012CE8(v15, (uint64_t)v14, &qword_1005D6C50);
  v16 = type metadata accessor for FastSyncStateMachine(0);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  v17 = v52(v14, 1, v16);
  sub_100012DDC((uint64_t)v14, &qword_1005D6C50);
  if (v17 != 1)
  {
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v18 = v53;
    v19 = sub_10012A0B0(v53, (uint64_t)qword_1005D6BF0);
    v20 = (char *)v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v8, v19, v18);
    v21 = v0;
    v22 = Logger.logObject.getter(v21);
    v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, (os_log_type_t)v48))
    {
      v41 = v6;
      v45 = v22;
      v46 = v8;
      v47 = v3;
      v23 = swift_slowAlloc(22, -1);
      v24 = (char **)swift_slowAlloc(8, -1);
      v44 = swift_slowAlloc(32, -1);
      v54 = (uint64_t)v21;
      v55[0] = v44;
      *(_DWORD *)v23 = 138412546;
      v20 = v21;
      v42 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v23 + 4);
      v43 = v24;
      *v24 = v21;

      *(_WORD *)(v23 + 12) = 2080;
      sub_100012CE8(v15, (uint64_t)v12, &qword_1005D6C50);
      if (v52(v12, 1, v16) == 1)
        goto LABEL_12;
      v40 = v23 + 14;
      v26 = v49;
      v25 = v50;
      v27 = v41;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v41, v12, v50);
      v28 = sub_100145264((uint64_t)v12, type metadata accessor for FastSyncStateMachine);
      v29 = EditNoteActivity.noteID.getter(v28);
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
      v54 = sub_1003A4190(v29, v31, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v42, v40);

      swift_bridgeObjectRelease(v31);
      v32 = v45;
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v48, "%@: Responding to leaveActivity(note=%s)", (uint8_t *)v23, 0x16u);
      v33 = sub_100012E18(&qword_1005D3A30);
      v34 = v43;
      swift_arrayDestroy(v43, 1, v33);
      swift_slowDealloc(v34, -1, -1);
      v35 = v44;
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      v36 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v46, v53);
      v3 = v47;
    }
    else
    {

      v36 = (*((uint64_t (**)(char *, uint64_t))v20 + 1))(v8, v18);
    }
    static TaskPriority.high.getter(v36);
    v37 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v3, 0, 1, v37);
    v38 = swift_allocObject(&unk_100564420, 24, 7);
    *(_QWORD *)(v38 + 16) = v21;
    swift_beginAccess(v15, v55, 33, 0);
    if (v52((char *)v15, 1, v16) != 1)
    {
      v39 = v21;
      sub_100189148();
      swift_endAccess(v55);
      swift_release(v38);
      sub_100012DDC((uint64_t)v3, &qword_1005D4680);
      return;
    }
    __break(1u);
LABEL_12:

    __break(1u);
  }
}

uint64_t sub_100296A00(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6D7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100145358;
  return sub_100296A50(a1);
}

uint64_t sub_100296A50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[10] = a1;
  v2[11] = v1;
  v3 = type metadata accessor for FastSync.LeaveActivityAction(0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EditNoteActivity(0);
  v2[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[14] = v5;
  v2[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[16] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v2[17] = v8;
  v2[18] = v9;
  return swift_task_switch(sub_100296B04, v8, v9);
}

uint64_t sub_100296B04()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t **v19;

  v1 = (_QWORD *)(v0[11] + OBJC_IVAR___ICRealtimeCollaborationController_activeSession);
  v2 = swift_beginAccess(v1, v0 + 2, 1, 0);
  v3 = *v1;
  if (!*v1)
  {
    EditNoteActivity.id.getter(v2);
    v15 = v16;
    goto LABEL_7;
  }
  v5 = v0[14];
  v4 = v0[15];
  v6 = v0[13];
  v7 = swift_retain(*v1);
  GroupSession.activity.getter(v7);
  v8 = swift_release(v3);
  v9 = EditNoteActivity.id.getter(v8);
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v13 = EditNoteActivity.id.getter(v12);
  v15 = v14;
  if (!v11)
  {
LABEL_7:
    swift_bridgeObjectRelease(v15);
    goto LABEL_10;
  }
  if (v9 == v13 && v11 == v14)
  {
    swift_bridgeObjectRelease_n(v11, 2);
LABEL_9:
    v18 = *v1;
    *v1 = 0;
    swift_release(v18);
    goto LABEL_10;
  }
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v14, 0);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v11);
  if ((v17 & 1) != 0)
    goto LABEL_9;
LABEL_10:
  sub_100295B38(3, 4, v0[10], 0);
  v19 = (uint64_t **)swift_task_alloc(dword_1005D58E4);
  v0[19] = (uint64_t)v19;
  *v19 = v0;
  v19[1] = (uint64_t *)sub_100296C70;
  return FastSync.LeaveActivityAction.perform()();
}

uint64_t sub_100296C70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100296DE8;
  else
    v4 = sub_100296CD0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_100296CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release(*(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 88);
  sub_100145220(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 96), type metadata accessor for FastSync.LeaveActivityAction);
  v2 = v1 + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine;
  swift_beginAccess(v2, v0 + 40, 33, 0);
  v3 = type metadata accessor for FastSyncStateMachine(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    result = swift_errorRelease(0);
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 80);
    sub_100189E00();
    swift_endAccess(v0 + 40);
    sub_100145264(v5, type metadata accessor for FastSync.LeaveActivityAction);
    swift_errorRetain(0);
    sub_100295B38(0, 3, v6, 0);
    swift_errorRelease(0);
    swift_errorRelease(0);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_100296DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;

  v1 = v0 + 40;
  swift_release(*(_QWORD *)(v0 + 128));
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 88);
  v4 = type metadata accessor for Logger(0);
  sub_10012A0B0(v4, (uint64_t)qword_1005D6BF0);
  v5 = v3;
  swift_errorRetain(v2);
  v6 = v5;
  v7 = swift_errorRetain(v2);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.error.getter(v8, v9);
  v11 = os_log_type_enabled(v8, v10);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(void **)(v0 + 88);
  if (v11)
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v14 = 138412546;
    *(_QWORD *)(v0 + 64) = v13;
    v16 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v14 + 4);
    *v15 = v13;

    *(_WORD *)(v14 + 12) = 2112;
    swift_errorRetain(v12);
    v17 = _swift_stdlib_bridgeErrorToNSError(v12);
    *(_QWORD *)(v0 + 72) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v14 + 14);
    v15[1] = v17;
    v1 = v0 + 40;
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "%@: Failed to leave group session provider: %@", (uint8_t *)v14, 0x16u);
    v18 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v15, 2, v18);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {

    swift_errorRelease(v12);
    swift_errorRelease(v12);
  }
  v19 = *(_QWORD *)(v0 + 160);

  v20 = *(_QWORD *)(v0 + 88);
  sub_100145220(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 96), type metadata accessor for FastSync.LeaveActivityAction);
  v21 = v20 + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine;
  swift_beginAccess(v21, v1, 33, 0);
  v22 = type metadata accessor for FastSyncStateMachine(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22) == 1)
  {
    result = swift_errorRelease(v19);
    __break(1u);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 80);
    sub_100189E00();
    swift_endAccess(v1);
    sub_100145264(v24, type metadata accessor for FastSync.LeaveActivityAction);
    swift_errorRetain(v19);
    sub_100295B38(v19, 3, v25, 0);
    swift_errorRelease(v19);
    swift_errorRelease(v19);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

void RealtimeCollaborationController.shareChanged(for:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  _QWORD *v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  NSObject *v57;
  uint64_t v58;
  os_log_type_t v59;
  uint64_t v60;
  char **v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  os_log_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  char *v91;
  id v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  os_log_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _BYTE v123[16];
  uint64_t v124;
  _BYTE v125[32];

  v120 = a2;
  v121 = a1;
  v117 = sub_100012E18(&qword_1005D2210);
  v119 = *(_QWORD *)(v117 - 8);
  v3 = __chkstk_darwin(v117);
  v107 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v111 = (char *)&v105 - v5;
  v6 = sub_100012E18(&qword_1005D2218);
  v7 = __chkstk_darwin(v6);
  v112 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v113 = (void (*)(char *, uint64_t))((char *)&v105 - v9);
  v118 = type metadata accessor for EditNoteActivity(0);
  v10 = *(_QWORD **)(v118 - 8);
  v11 = __chkstk_darwin(v118);
  v108 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v114 = (char *)&v105 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v105 - v15;
  v17 = sub_100012E18(&qword_1005D6C50);
  v18 = __chkstk_darwin(v17);
  v115 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v105 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v105 - v23;
  v116 = v2;
  v25 = (uint64_t)&v2[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine];
  swift_beginAccess(&v2[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine], v125, 0, 0);
  sub_100012CE8(v25, (uint64_t)v24, &qword_1005D6C50);
  v26 = type metadata accessor for FastSyncStateMachine(0);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  v28 = v27(v24, 1, v26);
  v29 = sub_100012DDC((uint64_t)v24, &qword_1005D6C50);
  if (v28 == 1)
    return;
  v30 = EditNoteActivity.noteID.getter(v29);
  v32 = v31;
  v110 = v25;
  sub_100012CE8(v25, (uint64_t)v22, &qword_1005D6C50);
  v109 = v26;
  if (v27(v22, 1, v26) == 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v33 = v27;
  v34 = (void (*)(char *, char *, uint64_t))v10[2];
  v35 = v118;
  v34(v16, v22, v118);
  v36 = sub_100145264((uint64_t)v22, type metadata accessor for FastSyncStateMachine);
  v37 = EditNoteActivity.noteID.getter(v36);
  v39 = v38;
  v40 = (void (*)(char *, uint64_t))v10[1];
  v40(v16, v35);
  if (v30 == v37 && v32 == v39)
  {
    swift_bridgeObjectRelease_n(v32, 2);
    v41 = v110;
  }
  else
  {
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v37, v39, 0);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v32);
    v41 = v110;
    if ((v42 & 1) == 0)
    {
      if (qword_1005CEBB0 != -1)
        swift_once(&qword_1005CEBB0, sub_10029344C);
      v90 = type metadata accessor for Logger(0);
      sub_10012A0B0(v90, (uint64_t)qword_1005D6BF0);
      v91 = v108;
      v34(v108, (char *)v121, v35);
      v92 = v116;
      v93 = Logger.logObject.getter(v92);
      v94 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = swift_slowAlloc(22, -1);
        v113 = v40;
        v96 = v95;
        v97 = (_QWORD *)swift_slowAlloc(8, -1);
        v121 = swift_slowAlloc(32, -1);
        v122 = (char *)v121;
        *(_DWORD *)v96 = 138412546;
        v124 = (uint64_t)v92;
        v98 = v92;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v96 + 4);
        *v97 = v92;

        *(_WORD *)(v96 + 12) = 2080;
        v100 = EditNoteActivity.noteID.getter(v99);
        v102 = v101;
        v124 = sub_1003A4190(v100, v101, (uint64_t *)&v122);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v96 + 14);
        swift_bridgeObjectRelease(v102);
        v113(v91, v118);
        _os_log_impl((void *)&_mh_execute_header, v93, v94, "%@: Ignoring updated share for unrelated note: %s", (uint8_t *)v96, 0x16u);
        v103 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v97, 1, v103);
        swift_slowDealloc(v97, -1, -1);
        v104 = v121;
        swift_arrayDestroy(v121, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        swift_slowDealloc(v96, -1, -1);
      }
      else
      {

        v40(v91, v35);
      }

      return;
    }
  }
  v43 = (void (*)(char *, uint64_t, uint64_t))v34;
  v44 = v117;
  v10 = (_QWORD *)CloudRecordSnapshot.id.getter(v117);
  v45 = (char *)v115;
  sub_100012CE8(v41, (uint64_t)v115, &qword_1005D6C50);
  v46 = v109;
  if (v33(v45, 1, v109) == 1)
  {
LABEL_32:

    __break(1u);
LABEL_33:
    __break(1u);
    return;
  }
  v47 = v113;
  sub_100012CE8((uint64_t)&v45[*(int *)(v46 + 20)], (uint64_t)v113, &qword_1005D2218);
  sub_100145264((uint64_t)v45, type metadata accessor for FastSyncStateMachine);
  v48 = v119;
  if ((*(unsigned int (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v119 + 48))(v47, 1, v44) == 1)
  {
    sub_100012DDC((uint64_t)v47, &qword_1005D2218);

    v49 = v121;
    v50 = v114;
    goto LABEL_16;
  }
  v51 = (void *)CloudRecordSnapshot.id.getter(v44);
  v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 8);
  ((void (*)(_QWORD, uint64_t))v115)(v47, v44);
  sub_1000163BC(0, &qword_1005DB1B0, CKRecordID_ptr);
  v52 = v10;
  v53 = static NSObject.== infix(_:_:)(v52);

  v49 = v121;
  v50 = v114;
  if ((v53 & 1) == 0)
  {
LABEL_16:
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v115 = v33;
    v66 = type metadata accessor for Logger(0);
    v67 = sub_10012A0B0(v66, (uint64_t)qword_1005D6BF0);
    v43(v50, v49, v35);
    v68 = v111;
    v114 = *(char **)(v48 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v114)(v111, v120, v44);
    v69 = v116;
    v70 = (char *)v67;
    v71 = Logger.logObject.getter(v69);
    v72 = static os_log_type_t.debug.getter();
    LODWORD(v116) = v72;
    if (os_log_type_enabled(v71, v72))
    {
      v73 = swift_slowAlloc(32, -1);
      v74 = swift_slowAlloc(16, -1);
      v113 = v40;
      v75 = (_QWORD *)v74;
      v107 = (char *)swift_slowAlloc(32, -1);
      v122 = v107;
      *(_DWORD *)v73 = 138412802;
      v108 = v70;
      v106 = v71;
      v124 = (uint64_t)v69;
      v76 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v73 + 4);
      *v75 = v69;

      v44 = v117;
      *(_WORD *)(v73 + 12) = 2080;
      v78 = EditNoteActivity.noteID.getter(v77);
      v80 = v79;
      v124 = sub_1003A4190(v78, v79, (uint64_t *)&v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v73 + 14);
      swift_bridgeObjectRelease(v80);
      v113(v50, v35);
      *(_WORD *)(v73 + 22) = 2112;
      v81 = CloudRecordSnapshot.id.getter(v44);
      v124 = v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v73 + 24);
      v75[1] = v81;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v68, v44);
      v82 = v106;
      _os_log_impl((void *)&_mh_execute_header, v106, (os_log_type_t)v116, "%@: Active note %s has updated its share to %@", (uint8_t *)v73, 0x20u);
      v83 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v75, 2, v83);
      swift_slowDealloc(v75, -1, -1);
      v84 = v107;
      swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v84, -1, -1);
      v85 = v73;
      v48 = v119;
      v49 = v121;
      swift_slowDealloc(v85, -1, -1);

    }
    else
    {

      v40(v50, v35);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v68, v44);

    }
    v86 = (uint64_t)v112;
    v87 = v110;
    ((void (*)(char *, uint64_t, uint64_t))v114)(v112, v120, v44);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v86, 0, 1, v44);
    v88 = swift_allocObject(&unk_100564448, 24, 7);
    *(_QWORD *)(v88 + 16) = v69;
    swift_beginAccess(v87, &v122, 33, 0);
    if (v115((char *)v87, 1, v109) != 1)
    {
      v89 = v69;
      sub_10018A46C(v49, v86, (uint64_t)&unk_1005D6D00, v88);
      swift_endAccess(&v122);
      swift_release(v88);
      sub_100012DDC(v86, &qword_1005D2218);
      return;
    }
    goto LABEL_33;
  }
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v54 = type metadata accessor for Logger(0);
  sub_10012A0B0(v54, (uint64_t)qword_1005D6BF0);
  v55 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v107, v120, v44);
  v56 = (char *)v116;
  v57 = Logger.logObject.getter(v56);
  v59 = static os_log_type_t.error.getter(v57, v58);
  if (os_log_type_enabled(v57, v59))
  {
    v60 = swift_slowAlloc(22, -1);
    v61 = (char **)swift_slowAlloc(16, -1);
    *(_DWORD *)v60 = 138412546;
    v122 = v56;
    v62 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, v123, v60 + 4);
    *v61 = v56;

    *(_WORD *)(v60 + 12) = 2112;
    v63 = v117;
    v64 = CloudRecordSnapshot.id.getter(v117);
    v122 = (char *)v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, v123, v60 + 14);
    v61[1] = (char *)v64;
    ((void (*)(char *, uint64_t))v115)(v55, v63);
    _os_log_impl((void *)&_mh_execute_header, v57, v59, "%@: Received share changed notification but CKShare recordID was unchanged: %@", (uint8_t *)v60, 0x16u);
    v65 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v61, 2, v65);
    swift_slowDealloc(v61, -1, -1);
    swift_slowDealloc(v60, -1, -1);
  }
  else
  {

    ((void (*)(char *, uint64_t))v115)(v55, v44);
  }

}

uint64_t sub_100297E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100297E54, 0, 0);
}

uint64_t sub_100297E54()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  v0[4] = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  v0[5] = v3;
  v0[6] = v4;
  return swift_task_switch(sub_100297EBC, v3, v4);
}

uint64_t sub_100297EBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_task_alloc(32);
  v0[8] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(dword_1005D58F4);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_100297F58;
  return FastSync.PresenceAction.perform(onJoinActivity:onLeaveActivity:)((uint64_t)&unk_1005D6D60, v2, (uint64_t)&unk_1005D6D70, v3);
}

uint64_t sub_100297F58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  v3 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100297FC0, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100297FC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100297FF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6D84);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100298040;
  return sub_10029808C(a1);
}

uint64_t sub_100298040()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10029808C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[8] = a1;
  v2[9] = v1;
  v3 = sub_100012E18(&qword_1005D4680);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EditNoteActivity(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[14] = v6;
  v2[15] = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  v2[16] = v8;
  v2[17] = v9;
  return swift_task_switch(sub_100298148, v8, v9);
}

uint64_t sub_100298148()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (__cdecl *v7)();

  v1 = (_QWORD *)v0[8];
  v2 = v1[1];
  ObjectType = swift_getObjectType(*v1);
  v4 = dispatch thunk of GroupSessionProvider.activity.getter(ObjectType, v2);
  static Task<>.checkCancellation()(v4);
  sub_100295B38(0, 4, v0[13], 0);
  v7 = (uint64_t (__cdecl *)())((char *)&dword_1005D58D8 + dword_1005D58D8);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D58DC);
  v0[18] = v5;
  *v5 = v0;
  v5[1] = sub_100298310;
  return v7();
}

uint64_t sub_100298310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD **)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 144);
  v6[19] = a1;
  v6[20] = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = v6[16];
    v9 = v6[17];
    v10 = sub_100298544;
  }
  else
  {
    v6[21] = a2;
    v11 = v6[16];
    v12 = v6[17];
    swift_unknownObjectRetain(a1);
    v10 = sub_100298398;
    v8 = v11;
    v9 = v12;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_100298398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(void **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 120));
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  swift_unknownObjectRetain(v2);
  v6 = v4;
  v7 = static MainActor.shared.getter(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_1005644C0, 56, 7);
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v2;
  v8[5] = v1;
  v8[6] = v6;
  v9 = sub_1002EDE48(v3, (uint64_t)&unk_1005D6D90, (uint64_t)v8);
  v10 = &v6[OBJC_IVAR___ICRealtimeCollaborationController_stateMachine];
  swift_beginAccess(v10, v0 + 40, 33, 0);
  v11 = type metadata accessor for FastSyncStateMachine(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 104);
    sub_100188E24();
    swift_endAccess(v0 + 40);
    sub_100295B38(2, 4, v14, 0);
    swift_release(v9);
    swift_unknownObjectRelease(v13, v15);
    v16 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v16, *(_QWORD *)(v0 + 88));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_100298544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 72) + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine;
  swift_beginAccess(v2, v0 + 16, 33, 0);
  v3 = type metadata accessor for FastSyncStateMachine(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 104);
    sub_100188A38();
    swift_endAccess(v0 + 16);
    swift_errorRetain(v1);
    sub_100295B38(v1, 3, v5, 0);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v6, *(_QWORD *)(v0 + 88));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_100298668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6D7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1002A8418;
  return sub_100296A50(a1);
}

uint64_t sub_1002986B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD *v10;

  v8 = type metadata accessor for MainActor(0);
  v5[2] = v8;
  v5[3] = static MainActor.shared.getter(v8);
  ObjectType = swift_getObjectType(a4);
  v10 = (_QWORD *)swift_task_alloc(dword_1005D6D9C);
  v5[4] = v10;
  *v10 = v5;
  v10[1] = sub_100298744;
  return sub_1002987E4(a4, ObjectType, a5);
}

uint64_t sub_100298744()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_1002987B4, v3, v4);
}

uint64_t sub_1002987B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002987E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;

  v4[27] = a3;
  v4[28] = v3;
  v4[25] = a1;
  v4[26] = a2;
  v5 = type metadata accessor for CancellationError(0);
  v4[29] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[30] = v6;
  v4[31] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  v4[32] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[33] = v8;
  v4[34] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18((uint64_t *)&unk_1005D06A0);
  v4[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v4[36] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[37] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[38] = swift_task_alloc(v12);
  v4[39] = swift_task_alloc(v12);
  v4[40] = swift_task_alloc(v12);
  v13 = type metadata accessor for Logger(0);
  v4[41] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v4[42] = v14;
  v4[43] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EditNoteActivity(0);
  v4[44] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v4[45] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[46] = swift_task_alloc(v17);
  v4[47] = swift_task_alloc(v17);
  v4[48] = swift_task_alloc(v17);
  v18 = sub_100012E18(&qword_1005D2218);
  v4[49] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D6C50) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[50] = swift_task_alloc(v19);
  v4[51] = swift_task_alloc(v19);
  v4[52] = swift_task_alloc(v19);
  v20 = sub_100012E18(&qword_1005D6DA0);
  v4[53] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v4[54] = v21;
  v4[55] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100012E18(&qword_1005D6DA8);
  v4[56] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v4[57] = v23;
  v4[58] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MainActor(0);
  v4[59] = v24;
  v4[60] = static MainActor.shared.getter(v24);
  v26 = dispatch thunk of Actor.unownedExecutor.getter(v24, &protocol witness table for MainActor, v25);
  v4[61] = v26;
  v4[62] = v27;
  return swift_task_switch(sub_100298A38, v26, v27);
}

uint64_t sub_100298A38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[54];
  v1 = v0[55];
  v3 = v0[53];
  v4 = v0[28];
  GroupSessionProvider.sessions.getter(v0[26], v0[27]);
  GroupSession.Sessions.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = OBJC_IVAR___ICRealtimeCollaborationController_stateMachine;
  v0[63] = OBJC_IVAR___ICRealtimeCollaborationController_cloudConfiguration;
  v0[64] = v5;
  v0[65] = OBJC_IVAR___ICRealtimeCollaborationController_context;
  v0[66] = OBJC_IVAR___ICRealtimeCollaborationController_messageController;
  v0[67] = OBJC_IVAR___ICRealtimeCollaborationController_paperKitController;
  v0[68] = OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument;
  v6 = swift_beginAccess(v4 + v5, v0 + 2, 0, 0);
  v0[69] = static MainActor.shared.getter(v6);
  v7 = sub_100016638(&qword_1005D6DB0, &qword_1005D6DA8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[70] = v8;
  *v8 = v0;
  v8[1] = sub_100298B74;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, v0[56], v7);
}

uint64_t sub_100298B74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t (*v13)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 560);
  *(_QWORD *)(*v1 + 568) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 552);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v6);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002993B8;
  }
  else
  {
    if (v4)
    {
      v10 = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
      v9 = v12;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_100298C38;
  }
  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_100298C38()
{
  _QWORD *v0;

  swift_release(v0[69]);
  v0[72] = v0[16];
  return swift_task_switch(sub_100298C78, v0[61], v0[62]);
}

uint64_t sub_100298C78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  os_log_type_t v45;
  _BOOL4 v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;

  v2 = *(_QWORD *)(v1 + 576);
  if (!v2)
  {
    v12 = *(_QWORD *)(v1 + 480);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 456) + 8))(*(_QWORD *)(v1 + 464), *(_QWORD *)(v1 + 448));
    swift_release(v12);
    goto LABEL_6;
  }
  v3 = *(_QWORD *)(v1 + 568);
  static Task<>.checkCancellation()(a1);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 248);
    v5 = *(_QWORD *)(v1 + 232);
    *(_QWORD *)(v1 + 176) = v3;
    swift_errorRetain(v3);
    v6 = sub_100012E18(&qword_1005D7A90);
    if (swift_dynamicCast(v4, v1 + 176, v6, v5, 0))
    {
      v7 = *(_QWORD *)(v1 + 576);
      v8 = *(_QWORD *)(v1 + 480);
      v10 = *(_QWORD *)(v1 + 240);
      v9 = *(_QWORD *)(v1 + 248);
      v11 = *(_QWORD *)(v1 + 232);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 456) + 8))(*(_QWORD *)(v1 + 464), *(_QWORD *)(v1 + 448));
      swift_release(v7);
      swift_release(v8);
      swift_errorRelease(v3);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      swift_errorRelease(*(_QWORD *)(v1 + 176));
LABEL_6:
      v13 = *(_QWORD *)(v1 + 440);
      v15 = *(_QWORD *)(v1 + 408);
      v14 = *(_QWORD *)(v1 + 416);
      v17 = *(_QWORD *)(v1 + 392);
      v16 = *(_QWORD *)(v1 + 400);
      v19 = *(_QWORD *)(v1 + 376);
      v18 = *(_QWORD *)(v1 + 384);
      v20 = *(_QWORD *)(v1 + 368);
      v21 = *(_QWORD *)(v1 + 344);
      v79 = *(_QWORD *)(v1 + 320);
      v80 = *(_QWORD *)(v1 + 312);
      v81 = *(_QWORD *)(v1 + 304);
      v82 = *(_QWORD *)(v1 + 280);
      v83 = *(_QWORD *)(v1 + 272);
      v84 = *(_QWORD *)(v1 + 248);
      swift_task_dealloc(*(_QWORD *)(v1 + 464));
      swift_task_dealloc(v13);
      swift_task_dealloc(v14);
      swift_task_dealloc(v15);
      swift_task_dealloc(v16);
      swift_task_dealloc(v17);
      swift_task_dealloc(v18);
      swift_task_dealloc(v19);
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v79);
      swift_task_dealloc(v80);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    swift_errorRelease(*(_QWORD *)(v1 + 176));
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v39 = *(void **)(v1 + 224);
    sub_10012A0B0(*(_QWORD *)(v1 + 328), (uint64_t)qword_1005D6BF0);
    v40 = v39;
    swift_errorRetain(v3);
    v41 = v40;
    v42 = swift_errorRetain(v3);
    v43 = Logger.logObject.getter(v42);
    v45 = static os_log_type_t.error.getter(v43, v44);
    v46 = os_log_type_enabled(v43, v45);
    v47 = *(void **)(v1 + 224);
    if (v46)
    {
      v48 = swift_slowAlloc(22, -1);
      v49 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v48 = 138412546;
      v85 = v43;
      *(_QWORD *)(v1 + 168) = v47;
      v50 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 168, v1 + 176, v48 + 4);
      *v49 = v47;

      *(_WORD *)(v48 + 12) = 2112;
      swift_errorRetain(v3);
      v51 = _swift_stdlib_bridgeErrorToNSError(v3);
      *(_QWORD *)(v1 + 104) = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 104, v1 + 112, v48 + 14);
      v49[1] = v51;
      v43 = v85;
      swift_errorRelease(v3);
      swift_errorRelease(v3);
      _os_log_impl((void *)&_mh_execute_header, v85, v45, "%@: Retrying after group session unexpectedly failed: %@", (uint8_t *)v48, 0x16u);
      v52 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v49, 2, v52);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {

      swift_errorRelease(v3);
      swift_errorRelease(v3);
    }
    v55 = *(_QWORD *)(v1 + 512);
    v56 = *(_QWORD *)(v1 + 400);
    v57 = *(_QWORD *)(v1 + 224);

    sub_100012CE8(v57 + v55, v56, &qword_1005D6C50);
    v58 = type metadata accessor for FastSyncStateMachine(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v56, 1, v58);
    if ((_DWORD)result != 1)
    {
      v59 = *(_QWORD *)(v1 + 576);
      v60 = *(_QWORD *)(v1 + 400);
      v62 = *(_QWORD *)(v1 + 360);
      v61 = *(_QWORD *)(v1 + 368);
      v63 = *(_QWORD *)(v1 + 352);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v61, v60, v63);
      swift_errorRetain(v3);
      sub_100145264(v60, type metadata accessor for FastSyncStateMachine);
      swift_retain(v59);
      sub_100295B38(v3, 2, v61, v59);
      swift_release(v59);
      swift_errorRelease(v3);
      swift_release(v59);
      swift_errorRelease(v3);
      v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
      *(_QWORD *)(v1 + 552) = static MainActor.shared.getter(v64);
      v65 = sub_100016638(&qword_1005D6DB0, &qword_1005D6DA8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
      v66 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v1 + 560) = v66;
      *v66 = v1;
      v66[1] = sub_100298B74;
      return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 128, *(_QWORD *)(v1 + 448), v65);
    }
    goto LABEL_24;
  }
  v23 = *(_QWORD *)(v1 + 504);
  v24 = *(_QWORD *)(v1 + 416);
  v25 = *(_QWORD *)(v1 + 224);
  v26 = v25 + *(_QWORD *)(v1 + 512);
  v27 = type metadata accessor for GroupSessionMessenger(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = swift_retain(v2);
  v29 = GroupSessionMessenger.init<A>(session:)(v28);
  v30 = *(void **)(v25 + v23);
  *(_QWORD *)(v1 + 584) = v30;
  sub_100012CE8(v26, v24, &qword_1005D6C50);
  v31 = type metadata accessor for FastSyncStateMachine(0);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
  result = v32(v24, 1, v31);
  if ((_DWORD)result != 1)
  {
    v33 = *(_QWORD *)(v1 + 392);
    sub_100012CE8(*(_QWORD *)(v1 + 416) + *(int *)(v31 + 20), v33, &qword_1005D2218);
    v34 = sub_100012E18(&qword_1005D2210);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
    v37 = v30;
    v38 = *(_QWORD *)(v1 + 392);
    if (v36 == 1)
    {
      sub_100012DDC(*(_QWORD *)(v1 + 392), &qword_1005D2218);
    }
    else
    {
      v53 = CloudRecordSnapshot<>.isOwnedByCurrentUser.getter();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v34);
      if ((v53 & 1) == 0)
      {
        v54 = &selRef_sharedCloudDatabase;
LABEL_20:
        v68 = *(_QWORD *)(v1 + 408);
        v67 = *(_QWORD *)(v1 + 416);
        v69 = *(_QWORD *)(v1 + 224) + *(_QWORD *)(v1 + 512);
        v70 = objc_msgSend(*(id *)(v67 + *(int *)(v31 + 24)), *v54);
        sub_100145264(v67, type metadata accessor for FastSyncStateMachine);
        sub_100012CE8(v69, v68, &qword_1005D6C50);
        result = v32(v68, 1, v31);
        if ((_DWORD)result != 1)
        {
          v71 = *(_QWORD *)(v1 + 520);
          v72 = *(_QWORD *)(v1 + 408);
          v73 = *(_QWORD *)(v1 + 224);
          (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 360) + 16))(*(_QWORD *)(v1 + 384), v72, *(_QWORD *)(v1 + 352));
          sub_100145264(v72, type metadata accessor for FastSyncStateMachine);
          v74 = *(void **)(v73 + v71);
          v75 = type metadata accessor for RealtimeCollaborationMessageController(0);
          swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
          v76 = dword_1005DB004;
          v77 = v74;
          v78 = (_QWORD *)swift_task_alloc(v76);
          *(_QWORD *)(v1 + 592) = v78;
          *v78 = v1;
          v78[1] = sub_100299418;
          return RealtimeCollaborationMessageController.init(messenger:cloudConfiguration:cloudDatabase:activity:context:)(v29, (uint64_t)v37, (uint64_t)v70, *(_QWORD *)(v1 + 384), (uint64_t)v77);
        }
        goto LABEL_23;
      }
    }
    v54 = &selRef_privateCloudDatabase;
    goto LABEL_20;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1002993B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 568);
  v1 = sub_100012E18(&qword_1005D7A90);
  v2 = swift_dynamicCast(v1, v0 + 136, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100299418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 592);
  v3[75] = a1;
  v3[76] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100299C74;
  else
    v5 = sub_100299484;
  return swift_task_switch(v5, v3[61], v3[62]);
}

uint64_t sub_100299484()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  NSObject *v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  Swift::String v71;
  Swift::String v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t **v92;
  uint64_t v94;
  os_log_type_t type[8];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  os_log_type_t v99;
  os_log_type_t v100[8];
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103[14];

  v101 = v0 + 19;
  v1 = v0[76];
  v2 = v0[75];
  v3 = (void *)v0[73];
  v4 = v0[66];
  v5 = v0[47];
  v6 = v0[28];
  v7 = *(_QWORD *)(v6 + v4);
  *(_QWORD *)(v6 + v4) = v2;
  swift_retain(v2);
  v8 = swift_release(v7);
  GroupSession.activity.getter(v8);
  v9 = type metadata accessor for RealtimeCollaborationPaperKitController(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = v3;
  swift_retain(v2);
  v11 = RealtimeCollaborationPaperKitController.init(activity:messageController:cloudConfiguration:)(v5, v2, v10);
  v12 = (char *)v0[28];
  if (v1)
  {
    v13 = v12;
    swift_errorRetain(v1);
    v14 = v13;
    v15 = swift_errorRetain(v1);
    v16 = static Logger.realtimeCollaboration.getter(v15);
    v17 = static os_log_type_t.fault.getter(v16);
    LOBYTE(v13) = v17;
    v18 = Logger.logObject.getter(v17);
    v19 = v13;
    v20 = os_log_type_enabled(v18, (os_log_type_t)v13);
    v22 = v0[42];
    v21 = v0[43];
    v23 = v0[41];
    v24 = (void *)v0[28];
    if (v20)
    {
      v97 = v0[43];
      v25 = swift_slowAlloc(32, -1);
      v94 = swift_slowAlloc(64, -1);
      v103[0] = v94;
      *(_DWORD *)v25 = 136315650;
      v26 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
      v96 = v23;
      v28 = v27;
      v0[19] = sub_1003A4190(v26, v27, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, v0 + 20, v25 + 4);
      swift_bridgeObjectRelease(v28);
      *(_WORD *)(v25 + 12) = 2048;
      v0[20] = 483;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 20, v0 + 21, v25 + 14);
      *(_WORD *)(v25 + 22) = 2080;
      v0[9] = 0;
      v0[10] = 0xE000000000000000;
      _StringGuts.grow(_:)(58);
      v29 = v0[10];
      v0[11] = v0[9];
      v0[12] = v29;
      v30 = objc_msgSend(v24, "description");
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

      v34._countAndFlagsBits = v31;
      v34._object = v33;
      String.append(_:)(v34);
      swift_bridgeObjectRelease(v33);
      v35._countAndFlagsBits = 0xD000000000000036;
      v35._object = (void *)0x8000000100485B20;
      String.append(_:)(v35);
      v0[23] = v1;
      v36 = sub_100012E18(&qword_1005D7A90);
      _print_unlocked<A, B>(_:_:)(v0 + 23, v0 + 11, v36, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v37 = v0[12];
      v0[24] = sub_1003A4190(v0[11], v37, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 25, v25 + 24);
      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed assertion at %s:%lu: %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy(v94, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      swift_errorRelease(v1);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v97, v96);
    }
    else
    {
      swift_errorRelease(v1);

      swift_errorRelease(v1);
      swift_errorRelease(v1);
      v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
  }
  else
  {
    v39 = v0[67];
    v40 = *(_QWORD *)&v12[v39];
    *(_QWORD *)&v12[v39] = v11;
    v38 = swift_release(v40);
  }
  v42 = v0[45];
  v41 = v0[46];
  v43 = v0[44];
  v44 = v0[36];
  v45 = v0[37];
  v46 = v0[35];
  v47 = GroupSession.activity.getter(v38);
  v48 = EditNoteActivity.noteID.getter(v47);
  v50 = v49;
  v51 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v51(v41, v43);
  UUID.init(uuidString:)(v48, v50);
  swift_bridgeObjectRelease(v50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
  {
    sub_100012DDC(v0[35], (uint64_t *)&unk_1005D06A0);
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v52 = v0[72];
    sub_10012A0B0(v0[41], (uint64_t)qword_1005D6BF0);
    v53 = swift_retain_n(v52, 2);
    v54 = static os_log_type_t.fault.getter(v53);
    v55 = v54;
    v56 = Logger.logObject.getter(v54);
    v57 = os_log_type_enabled(v56, v55);
    v58 = v0[72];
    if (v57)
    {
      v59 = v0[46];
      *(_QWORD *)type = v0[44];
      v99 = v55;
      v60 = swift_slowAlloc(32, -1);
      v98 = swift_slowAlloc(64, -1);
      v103[0] = v98;
      *(_DWORD *)v60 = 136315650;
      v61 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
      v63 = v62;
      v0[14] = sub_1003A4190(v61, v62, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 14, v0 + 15, v60 + 4);
      swift_bridgeObjectRelease(v63);
      *(_WORD *)(v60 + 12) = 2048;
      v0[15] = 489;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 15, v0 + 16, v60 + 14);
      *(_WORD *)(v60 + 22) = 2080;
      v0[7] = 0;
      v0[8] = 0xE000000000000000;
      _StringGuts.grow(_:)(67);
      v64 = v0[8];
      v0[5] = v0[7];
      v0[6] = v64;
      v65._countAndFlagsBits = 0xD00000000000002DLL;
      v65._object = (void *)0x8000000100485AD0;
      String.append(_:)(v65);
      v67 = GroupSession.activity.getter(v66);
      v68 = EditNoteActivity.noteID.getter(v67);
      v70 = v69;
      v51(v59, *(_QWORD *)type);
      v71._countAndFlagsBits = v68;
      v71._object = v70;
      String.append(_:)(v71);
      swift_bridgeObjectRelease(v70);
      v72._object = (void *)0x8000000100485B00;
      v72._countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v72);
      v73 = v0[6];
      v0[18] = sub_1003A4190(v0[5], v73, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v101, v60 + 24);
      swift_bridgeObjectRelease(v73);
      _os_log_impl((void *)&_mh_execute_header, v56, v99, "Failed assertion at %s:%lu: %s", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy(v98, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v60, -1, -1);
    }

    v74 = swift_release_n(v58, 2);
  }
  else
  {
    v76 = v0[39];
    v75 = v0[40];
    v78 = v0[37];
    v77 = v0[38];
    v79 = v0[36];
    v81 = v0[33];
    v80 = v0[34];
    v82 = v0[32];
    *(_QWORD *)v100 = v0[28];
    v102 = v0[68];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v75, v0[35], v79);
    v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v76, v75, v79);
    v84 = GroupSession.localParticipant.getter(v83);
    Participant.id.getter(v84);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
    v85 = objc_allocWithZone((Class)type metadata accessor for RealtimeCollaborationSelectionDocument(0));
    v86 = RealtimeCollaborationSelectionDocument.init(identity:localParticipantID:)(v76, v77);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v75, v79);
    v87 = *(void **)(*(_QWORD *)v100 + v102);
    *(_QWORD *)(*(_QWORD *)v100 + v102) = v86;

  }
  v88 = v0[75];
  v89 = v0[72];
  v90 = v0[28];
  v0[77] = static MainActor.shared.getter(v74);
  v91 = (_QWORD *)swift_task_alloc(48);
  v0[78] = (uint64_t)v91;
  v91[2] = v90;
  v91[3] = v89;
  v91[4] = v88;
  v92 = (uint64_t **)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[79] = (uint64_t)v92;
  *v92 = v0;
  v92[1] = (uint64_t *)sub_10029A138;
  v103[12] = (uint64_t)&type metadata for () + 8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100299C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;

  v1 = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  swift_errorRetain(v1);
  v4 = sub_100012E18(&qword_1005D7A90);
  if (swift_dynamicCast(v2, v0 + 176, v4, v3, 0))
  {
    v5 = *(_QWORD *)(v0 + 576);
    v6 = *(_QWORD *)(v0 + 480);
    v8 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 248);
    v9 = *(_QWORD *)(v0 + 232);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    swift_release(v5);
    swift_release(v6);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    v10 = *(_QWORD *)(v0 + 440);
    v12 = *(_QWORD *)(v0 + 408);
    v11 = *(_QWORD *)(v0 + 416);
    v14 = *(_QWORD *)(v0 + 392);
    v13 = *(_QWORD *)(v0 + 400);
    v16 = *(_QWORD *)(v0 + 376);
    v15 = *(_QWORD *)(v0 + 384);
    v17 = *(_QWORD *)(v0 + 368);
    v18 = *(_QWORD *)(v0 + 344);
    v46 = *(_QWORD *)(v0 + 320);
    v47 = *(_QWORD *)(v0 + 312);
    v48 = *(_QWORD *)(v0 + 304);
    v49 = *(_QWORD *)(v0 + 280);
    v50 = *(_QWORD *)(v0 + 272);
    v51 = *(_QWORD *)(v0 + 248);
    swift_task_dealloc(*(_QWORD *)(v0 + 464));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v20 = *(void **)(v0 + 224);
    sub_10012A0B0(*(_QWORD *)(v0 + 328), (uint64_t)qword_1005D6BF0);
    v21 = v20;
    swift_errorRetain(v1);
    v22 = v21;
    v23 = swift_errorRetain(v1);
    v24 = Logger.logObject.getter(v23);
    v26 = static os_log_type_t.error.getter(v24, v25);
    v27 = os_log_type_enabled(v24, v26);
    v28 = *(void **)(v0 + 224);
    if (v27)
    {
      v29 = swift_slowAlloc(22, -1);
      v30 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v29 = 138412546;
      v52 = v24;
      *(_QWORD *)(v0 + 168) = v28;
      v31 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v29 + 4);
      *v30 = v28;

      *(_WORD *)(v29 + 12) = 2112;
      swift_errorRetain(v1);
      v32 = _swift_stdlib_bridgeErrorToNSError(v1);
      *(_QWORD *)(v0 + 104) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v29 + 14);
      v30[1] = v32;
      v24 = v52;
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v52, v26, "%@: Retrying after group session unexpectedly failed: %@", (uint8_t *)v29, 0x16u);
      v33 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v30, 2, v33);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {

      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }
    v34 = *(_QWORD *)(v0 + 512);
    v35 = *(_QWORD *)(v0 + 400);
    v36 = *(_QWORD *)(v0 + 224);

    sub_100012CE8(v36 + v34, v35, &qword_1005D6C50);
    v37 = type metadata accessor for FastSyncStateMachine(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v35, 1, v37);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 576);
      v39 = *(_QWORD *)(v0 + 400);
      v41 = *(_QWORD *)(v0 + 360);
      v40 = *(_QWORD *)(v0 + 368);
      v42 = *(_QWORD *)(v0 + 352);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v39, v42);
      swift_errorRetain(v1);
      sub_100145264(v39, type metadata accessor for FastSyncStateMachine);
      swift_retain(v38);
      sub_100295B38(v1, 2, v40, v38);
      swift_release(v38);
      swift_errorRelease(v1);
      swift_release(v38);
      swift_errorRelease(v1);
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      *(_QWORD *)(v0 + 552) = static MainActor.shared.getter(v43);
      v44 = sub_100016638(&qword_1005D6DB0, &qword_1005D6DA8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
      v45 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 560) = v45;
      *v45 = v0;
      v45[1] = sub_100298B74;
      return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 128, *(_QWORD *)(v0 + 448), v44);
    }
  }
  return result;
}

uint64_t sub_10029A138()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 632);
  *(_QWORD *)(*(_QWORD *)v1 + 640) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[61];
    v5 = v2[62];
    v6 = sub_10029A2A4;
  }
  else
  {
    v7 = v2[78];
    swift_release(v2[77]);
    swift_task_dealloc(v7);
    v4 = v2[61];
    v5 = v2[62];
    v6 = sub_10029A1B0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10029A1B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[75];
  v2 = v0[72];
  v3 = v0[68];
  v4 = v0[67];
  v5 = v0[66];
  v6 = v0[28];
  RealtimeCollaborationMessageController.finish()();
  v7 = *(_QWORD *)(v6 + v5);
  *(_QWORD *)(v6 + v5) = 0;
  swift_release(v7);
  v8 = *(_QWORD *)(v6 + v4);
  *(_QWORD *)(v6 + v4) = 0;
  swift_release(v8);
  v9 = *(void **)(v6 + v3);
  *(_QWORD *)(v6 + v3) = 0;
  swift_release(v2);
  swift_release(v1);

  v0[69] = static MainActor.shared.getter(v10);
  v11 = sub_100016638(&qword_1005D6DB0, &qword_1005D6DA8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[70] = v12;
  *v12 = v0;
  v12[1] = sub_100298B74;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, v0[56], v11);
}

uint64_t sub_10029A2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  _BOOL4 v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 600);
  v3 = *(_QWORD *)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 536);
  v5 = *(_QWORD *)(v0 + 528);
  v6 = *(_QWORD *)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 616));
  swift_task_dealloc(v1);
  RealtimeCollaborationMessageController.finish()();
  v7 = *(_QWORD *)(v6 + v5);
  *(_QWORD *)(v6 + v5) = 0;
  swift_release(v7);
  v8 = *(_QWORD *)(v6 + v4);
  *(_QWORD *)(v6 + v4) = 0;
  swift_release(v8);
  v9 = *(void **)(v6 + v3);
  *(_QWORD *)(v6 + v3) = 0;
  swift_release(v2);

  v10 = *(_QWORD *)(v0 + 640);
  *(_QWORD *)(v0 + 176) = v10;
  v11 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 232);
  swift_errorRetain(v10);
  v13 = sub_100012E18(&qword_1005D7A90);
  if (swift_dynamicCast(v11, v0 + 176, v13, v12, 0))
  {
    v14 = *(_QWORD *)(v0 + 576);
    v15 = *(_QWORD *)(v0 + 480);
    v17 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 232);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 448));
    swift_release(v14);
    swift_release(v15);
    swift_errorRelease(v10);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    v19 = *(_QWORD *)(v0 + 440);
    v21 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 416);
    v23 = *(_QWORD *)(v0 + 392);
    v22 = *(_QWORD *)(v0 + 400);
    v25 = *(_QWORD *)(v0 + 376);
    v24 = *(_QWORD *)(v0 + 384);
    v26 = *(_QWORD *)(v0 + 368);
    v27 = *(_QWORD *)(v0 + 344);
    v55 = *(_QWORD *)(v0 + 320);
    v56 = *(_QWORD *)(v0 + 312);
    v57 = *(_QWORD *)(v0 + 304);
    v58 = *(_QWORD *)(v0 + 280);
    v59 = *(_QWORD *)(v0 + 272);
    v60 = *(_QWORD *)(v0 + 248);
    swift_task_dealloc(*(_QWORD *)(v0 + 464));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v29 = *(void **)(v0 + 224);
    sub_10012A0B0(*(_QWORD *)(v0 + 328), (uint64_t)qword_1005D6BF0);
    v30 = v29;
    swift_errorRetain(v10);
    v31 = v30;
    v32 = swift_errorRetain(v10);
    v33 = Logger.logObject.getter(v32);
    v35 = static os_log_type_t.error.getter(v33, v34);
    v36 = os_log_type_enabled(v33, v35);
    v37 = *(void **)(v0 + 224);
    if (v36)
    {
      v38 = swift_slowAlloc(22, -1);
      v39 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v38 = 138412546;
      v61 = v33;
      *(_QWORD *)(v0 + 168) = v37;
      v40 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v38 + 4);
      *v39 = v37;

      *(_WORD *)(v38 + 12) = 2112;
      swift_errorRetain(v10);
      v41 = _swift_stdlib_bridgeErrorToNSError(v10);
      *(_QWORD *)(v0 + 104) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v38 + 14);
      v39[1] = v41;
      v33 = v61;
      swift_errorRelease(v10);
      swift_errorRelease(v10);
      _os_log_impl((void *)&_mh_execute_header, v61, v35, "%@: Retrying after group session unexpectedly failed: %@", (uint8_t *)v38, 0x16u);
      v42 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v39, 2, v42);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

      swift_errorRelease(v10);
      swift_errorRelease(v10);
    }
    v43 = *(_QWORD *)(v0 + 512);
    v44 = *(_QWORD *)(v0 + 400);
    v45 = *(_QWORD *)(v0 + 224);

    sub_100012CE8(v45 + v43, v44, &qword_1005D6C50);
    v46 = type metadata accessor for FastSyncStateMachine(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v44, 1, v46);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v47 = *(_QWORD *)(v0 + 576);
      v48 = *(_QWORD *)(v0 + 400);
      v50 = *(_QWORD *)(v0 + 360);
      v49 = *(_QWORD *)(v0 + 368);
      v51 = *(_QWORD *)(v0 + 352);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
      swift_errorRetain(v10);
      sub_100145264(v48, type metadata accessor for FastSyncStateMachine);
      swift_retain(v47);
      sub_100295B38(v10, 2, v49, v47);
      swift_release(v47);
      swift_errorRelease(v10);
      swift_release(v47);
      swift_errorRelease(v10);
      v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      *(_QWORD *)(v0 + 552) = static MainActor.shared.getter(v52);
      v53 = sub_100016638(&qword_1005D6DB0, &qword_1005D6DA8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
      v54 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 560) = v54;
      *v54 = v0;
      v54[1] = sub_100298B74;
      return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 128, *(_QWORD *)(v0 + 448), v53);
    }
  }
  return result;
}

void *sub_10029A7C4(void *a1, id a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t ObjectType;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v34 = 0;
  objc_msgSend(a2, "rangeForAttachment:withTextAttachment:", a1, &v34);
  v5 = v34;
  if (v34)
  {
    v6 = objc_opt_self(ICSystemPaperTextAttachment);
    v7 = swift_dynamicCastObjCClass(v5, v6);
    v8 = v5;
    if (v7)
    {
      v9 = v8;
      v10 = objc_msgSend(a2, "viewForBaseTextAttachmentNoCreate:", v7);
      if (v10)
      {
        v11 = v10;
        ObjectType = swift_getObjectType(v10);
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PaperKitStreamableAttachment))
          v13 = v11;
        else
          v13 = 0;
        if (v13)
        {

          return v13;
        }

      }
    }
  }
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v14 = type metadata accessor for Logger(0);
  sub_10012A0B0(v14, (uint64_t)qword_1005D6BF0);
  v15 = v2;
  v16 = a1;
  v17 = v15;
  v18 = v16;
  v19 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.error.getter(v19, v20);
  if (os_log_type_enabled(v19, v21))
  {
    v22 = swift_slowAlloc(22, -1);
    v31 = v5;
    v23 = (_QWORD *)swift_slowAlloc(8, -1);
    v32 = swift_slowAlloc(32, -1);
    v33 = (uint64_t)v17;
    v34 = (void *)v32;
    *(_DWORD *)v22 = 138412546;
    v24 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v22 + 4);
    *v23 = v17;

    *(_WORD *)(v22 + 12) = 2080;
    v25 = objc_msgSend(v18, "ic_loggingDescription");
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v33 = sub_1003A4190(v26, v28, (uint64_t *)&v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v22 + 14);

    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "%@: Could not find PaperKit attachment view for attachment: %s", (uint8_t *)v22, 0x16u);
    v29 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v23, 1, v29);
    swift_slowDealloc(v23, -1, -1);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

  }
  return 0;
}

void RealtimeCollaborationController.updatePaperKitMessenger(for:layoutManager:)(uint64_t a1, uint64_t a2)
{
  sub_10029C278(a1, a2, (uint64_t (*)(void))sub_10029A7C4, (void (*)(void))RealtimeCollaborationController.configurePaperKitAttachmentViewIfNecessary(_:));
}

Swift::Void __swiftcall RealtimeCollaborationController.configurePaperKitAttachmentViewIfNecessary(_:)(UIView a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  uint64_t v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  __objc2_meth_list **p_inst_meths;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  unint64_t v28;
  Class v29;
  objc_class *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  id v35;
  objc_class *v36;
  id v37;
  uint64_t v38;
  os_log_type_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  Swift::String v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  Swift::String v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  Swift::String v75;
  void *v76;
  Swift::String v77;
  unint64_t v78;
  Class v79;
  objc_class *v80;
  uint64_t v81;
  uint64_t v82;
  Class v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  Class v87;
  uint64_t v88;
  uint64_t v89;
  objc_class *v90;
  os_log_type_t type;
  uint64_t v92;
  uint64_t v93;
  objc_class *v94;
  char v95[24];
  uint64_t v96[3];
  objc_class *v97;
  uint64_t v98;
  unint64_t v99[2];
  Class v100;
  uint64_t v101;

  v2 = v1;
  v3 = *(_QWORD *)&v1[OBJC_IVAR___ICRealtimeCollaborationController_paperKitController];
  if (v3)
  {
    ObjectType = swift_getObjectType(a1.super.super.isa);
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PaperKitStreamableAttachment);
    if (v6)
      v7 = v6;
    else
      v7 = 0;
    if (v6)
      isa = a1.super.super.isa;
    else
      isa = 0;
    if (isa)
    {
      v100 = isa;
      v101 = v7;
      v9 = swift_getObjectType(isa);
      v98 = (uint64_t)isa;
      v10 = a1.super.super.isa;
      swift_retain(v3);
      v11 = dispatch thunk of PaperKitStreamableAttachment.liveStreamMessenger.getter(v9, v7);
      p_inst_meths = &OBJC_PROTOCOL___ICNoteBrowseNavigationItemConfigurationDataSource.inst_meths;
      if (!v11 || (v14 = v11, swift_unknownObjectRelease(v11, v12), v14 != v3))
      {
        if (qword_1005CEBB0 != -1)
          swift_once(&qword_1005CEBB0, sub_10029344C);
        v15 = type metadata accessor for Logger(0);
        sub_10012A0B0(v15, (uint64_t)qword_1005D6BF0);
        swift_retain_n(v3, 2);
        v16 = v2;
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc(32, -1);
          v20 = (_QWORD *)swift_slowAlloc(16, -1);
          v92 = swift_slowAlloc(32, -1);
          v96[0] = v92;
          *(_DWORD *)v19 = 138412802;
          type = v18;
          v98 = (uint64_t)v16;
          v21 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v19 + 4);
          *v20 = v16;

          *(_WORD *)(v19 + 12) = 2080;
          v98 = 0;
          v99[0] = 0xE000000000000000;
          swift_retain(v3);
          _StringGuts.grow(_:)(52);
          v22._object = (void *)0x80000001004857E0;
          v22._countAndFlagsBits = 0xD000000000000031;
          String.append(_:)(v22);
          v23 = type metadata accessor for EditNoteActivity(0);
          v24 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
          v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v23, v24);
          object = v25._object;
          String.append(_:)(v25);
          swift_bridgeObjectRelease(object);
          v27._countAndFlagsBits = 41;
          v27._object = (void *)0xE100000000000000;
          String.append(_:)(v27);
          swift_release(v3);
          v28 = v99[0];
          v98 = sub_1003A4190(v98, v99[0], v96);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v19 + 14);
          swift_release_n(v3, 2);
          swift_bridgeObjectRelease(v28);
          *(_WORD *)(v19 + 22) = 2112;
          swift_beginAccess(&v100, v95, 0, 0);
          v29 = v100;
          v98 = (uint64_t)v100;
          v30 = v100;
          p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___ICNoteBrowseNavigationItemConfigurationDataSource + 24);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v19 + 24);
          v20[1] = v29;
          _os_log_impl((void *)&_mh_execute_header, v17, type, "%@: Updating PaperKit messenger to %s for attachment view %@", (uint8_t *)v19, 0x20u);
          v31 = sub_100012E18(&qword_1005D3A30);
          swift_arrayDestroy(v20, 2, v31);
          swift_slowDealloc(v20, -1, -1);
          swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v92, -1, -1);
          swift_slowDealloc(v19, -1, -1);

        }
        else
        {

          swift_release_n(v3, 2);
        }
        v58 = sub_100019C6C(&qword_1005D6D08, type metadata accessor for RealtimeCollaborationPaperKitController, (uint64_t)&protocol conformance descriptor for RealtimeCollaborationPaperKitController);
        swift_beginAccess(&v100, &v98, 33, 0);
        v59 = (uint64_t)v100;
        v7 = v101;
        v60 = swift_getObjectType(v100);
        v96[0] = v59;
        swift_retain(v3);
        dispatch thunk of PaperKitStreamableAttachment.liveStreamMessenger.setter(v3, v58, v60, v7);
        isa = (Class)v96[0];
        v100 = (Class)v96[0];
        v101 = v7;
        swift_endAccess(&v98);
      }
      v61 = swift_getObjectType(isa);
      v98 = (uint64_t)isa;
      v62 = dispatch thunk of PaperKitStreamableAttachment.participantDetailsDataSource.getter(v61, v7);
      if (v62 && (v64 = v62, swift_unknownObjectRelease(v62, v63), v64 == v3))
      {

      }
      else
      {
        if (p_inst_meths[374] != (__objc2_meth_list *)-1)
          swift_once(&qword_1005CEBB0, sub_10029344C);
        v65 = type metadata accessor for Logger(0);
        sub_10012A0B0(v65, (uint64_t)qword_1005D6BF0);
        swift_retain_n(v3, 2);
        v66 = v2;
        v67 = Logger.logObject.getter(v66);
        v68 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = swift_slowAlloc(32, -1);
          v70 = (_QWORD *)swift_slowAlloc(16, -1);
          v94 = (objc_class *)swift_slowAlloc(32, -1);
          v97 = v94;
          v98 = (uint64_t)v66;
          *(_DWORD *)v69 = 138412802;
          v71 = v66;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v69 + 4);
          *v70 = v66;

          *(_WORD *)(v69 + 12) = 2080;
          v98 = 0;
          v99[0] = 0xE000000000000000;
          _StringGuts.grow(_:)(52);
          v72._object = (void *)0x80000001004857E0;
          v72._countAndFlagsBits = 0xD000000000000031;
          String.append(_:)(v72);
          v73 = type metadata accessor for EditNoteActivity(0);
          v74 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
          v75._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v73, v74);
          v76 = v75._object;
          String.append(_:)(v75);
          swift_bridgeObjectRelease(v76);
          v77._countAndFlagsBits = 41;
          v77._object = (void *)0xE100000000000000;
          String.append(_:)(v77);
          v78 = v99[0];
          v98 = sub_1003A4190(v98, v99[0], (uint64_t *)&v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v69 + 14);
          swift_release_n(v3, 2);
          swift_bridgeObjectRelease(v78);
          *(_WORD *)(v69 + 22) = 2112;
          swift_beginAccess(&v100, v96, 0, 0);
          v79 = v100;
          v98 = (uint64_t)v100;
          v80 = v100;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v69 + 24);
          v70[1] = v79;
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "%@: Updating PaperKit data source to %s for attachment view %@", (uint8_t *)v69, 0x20u);
          v81 = sub_100012E18(&qword_1005D3A30);
          swift_arrayDestroy(v70, 2, v81);
          swift_slowDealloc(v70, -1, -1);
          swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v94, -1, -1);
          swift_slowDealloc(v69, -1, -1);

        }
        else
        {

          swift_release_n(v3, 2);
        }
        v82 = sub_100019C6C(&qword_1005D6D10, type metadata accessor for RealtimeCollaborationPaperKitController, (uint64_t)&protocol conformance descriptor for RealtimeCollaborationPaperKitController);
        swift_beginAccess(&v100, &v98, 33, 0);
        v83 = v100;
        v84 = v101;
        v85 = swift_getObjectType(v100);
        v97 = v83;
        swift_retain(v3);
        dispatch thunk of PaperKitStreamableAttachment.participantDetailsDataSource.setter(v3, v82, v85, v84);
        v100 = v97;
        v101 = v84;
        v86 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note), "showsCollaboratorCursors", swift_endAccess(&v98).n128_f64[0]);
        swift_beginAccess(&v100, &v98, 33, 0);
        v87 = v100;
        v88 = v101;
        v89 = swift_getObjectType(v100);
        v97 = v87;
        dispatch thunk of PaperKitStreamableAttachment.showParticipantCursors.setter(v86, v89, v88);
        v90 = v97;
        swift_endAccess(&v98);

      }
      swift_release(v3);
    }
    else
    {
      v32 = qword_1005CEBB0;
      swift_retain(v3);
      if (v32 != -1)
        swift_once(&qword_1005CEBB0, sub_10029344C);
      v33 = type metadata accessor for Logger(0);
      sub_10012A0B0(v33, (uint64_t)qword_1005D6BF0);
      v34 = a1.super.super.isa;
      v35 = v2;
      v36 = v34;
      v37 = v35;
      v38 = static os_log_type_t.fault.getter(v37);
      v39 = v38;
      v40 = Logger.logObject.getter(v38);
      v41 = v39;
      if (os_log_type_enabled(v40, v39))
      {
        v42 = swift_slowAlloc(32, -1);
        v93 = swift_slowAlloc(64, -1);
        v96[0] = v93;
        *(_DWORD *)v42 = 136315650;
        v43 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
        v45 = v44;
        v98 = sub_1003A4190(v43, v44, v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v42 + 4);
        swift_bridgeObjectRelease(v45);
        *(_WORD *)(v42 + 12) = 2048;
        v98 = 439;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v42 + 14);
        *(_WORD *)(v42 + 22) = 2080;
        v98 = 0;
        v99[0] = 0xE000000000000000;
        _StringGuts.grow(_:)(45);
        v46 = v99[0];
        v47 = objc_msgSend(v37, "description");
        v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v50 = v49;
        swift_bridgeObjectRelease(v46);

        v98 = v48;
        v99[0] = v50;
        v51._countAndFlagsBits = 0xD000000000000029;
        v51._object = (void *)0x80000001004857B0;
        String.append(_:)(v51);
        v52 = -[objc_class ic_loggingDescription](v36, "ic_loggingDescription");
        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
        v55 = v54;

        v56._countAndFlagsBits = v53;
        v56._object = v55;
        String.append(_:)(v56);
        swift_bridgeObjectRelease(v55);
        v57 = v99[0];
        v98 = sub_1003A4190(v98, v99[0], v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v42 + 24);
        swift_bridgeObjectRelease(v57);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Failed assertion at %s:%lu: %s", (uint8_t *)v42, 0x20u);
        swift_arrayDestroy(v93, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v93, -1, -1);
        swift_slowDealloc(v42, -1, -1);
        swift_release(v3);

      }
      else
      {

        swift_release(v3);
      }
    }
  }
}

void RealtimeCollaborationController.removePaperKitMessengerIfNecessary(for:layoutManager:)(uint64_t a1, uint64_t a2)
{
  sub_10029C278(a1, a2, (uint64_t (*)(void))sub_10029A7C4, (void (*)(void))RealtimeCollaborationController.removePaperKitMessengerIfNecessary(for:));
}

Swift::Void __swiftcall RealtimeCollaborationController.removePaperKitMessengerIfNecessary(for:)(UIView a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  objc_class *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  Class v16;
  objc_class *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  objc_class *v22;
  id v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  Swift::String v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  Swift::String v41;
  unint64_t v42;
  Class v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  uint64_t v47;
  Class v48;
  NSObject *log;
  uint64_t v50[3];
  Class v51;
  uint64_t v52;
  unint64_t v53[2];
  Class v54;
  uint64_t v55;

  ObjectType = swift_getObjectType(a1.super.super.isa);
  v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PaperKitStreamableAttachment);
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    isa = a1.super.super.isa;
  else
    isa = 0;
  if (isa)
  {
    v54 = isa;
    v55 = v5;
    v7 = qword_1005CEBB0;
    v8 = a1.super.super.isa;
    if (v7 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v9 = type metadata accessor for Logger(0);
    sub_10012A0B0(v9, (uint64_t)qword_1005D6BF0);
    v10 = v1;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v13 = 138412546;
      v52 = (uint64_t)v10;
      v15 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v13 + 4);
      *v14 = v10;

      *(_WORD *)(v13 + 12) = 2112;
      swift_beginAccess(&v54, v50, 0, 0);
      v16 = v54;
      v52 = (uint64_t)v54;
      v17 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v13 + 14);
      v14[1] = v16;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%@: Clearing PaperKit messenger and data source for attachment view %@", (uint8_t *)v13, 0x16u);
      v18 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v14, 2, v18);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    swift_beginAccess(&v54, &v52, 33, 0);
    v43 = v54;
    v44 = v55;
    v45 = swift_getObjectType(v54);
    v51 = v43;
    dispatch thunk of PaperKitStreamableAttachment.liveStreamMessenger.setter(0, 0, v45, v44);
    v46 = v51;
    v47 = swift_getObjectType(v51);
    v51 = v46;
    dispatch thunk of PaperKitStreamableAttachment.participantDetailsDataSource.setter(0, 0, v47, v44);
    v48 = v51;
    swift_endAccess(&v52);

  }
  else
  {
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v19 = type metadata accessor for Logger(0);
    sub_10012A0B0(v19, (uint64_t)qword_1005D6BF0);
    v20 = a1.super.super.isa;
    v21 = v1;
    v22 = v20;
    v23 = v21;
    v24 = static os_log_type_t.fault.getter(v23);
    v25 = v24;
    log = Logger.logObject.getter(v24);
    if (os_log_type_enabled(log, v25))
    {
      v26 = swift_slowAlloc(32, -1);
      v27 = swift_slowAlloc(64, -1);
      v50[0] = v27;
      *(_DWORD *)v26 = 136315650;
      v28 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
      v30 = v29;
      v52 = sub_1003A4190(v28, v29, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v26 + 4);
      swift_bridgeObjectRelease(v30);
      *(_WORD *)(v26 + 12) = 2048;
      v52 = 425;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v26 + 14);
      *(_WORD *)(v26 + 22) = 2080;
      v52 = 0;
      v53[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(45);
      v31 = v53[0];
      v32 = objc_msgSend(v23, "description");
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;
      swift_bridgeObjectRelease(v31);

      v52 = v33;
      v53[0] = v35;
      v36._object = (void *)0x80000001004857B0;
      v36._countAndFlagsBits = 0xD000000000000029;
      String.append(_:)(v36);
      v37 = -[objc_class ic_loggingDescription](v22, "ic_loggingDescription");
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v40 = v39;

      v41._countAndFlagsBits = v38;
      v41._object = v40;
      String.append(_:)(v41);
      swift_bridgeObjectRelease(v40);
      v42 = v53[0];
      v52 = sub_1003A4190(v52, v53[0], v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v26 + 24);
      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, log, v25, "Failed assertion at %s:%lu: %s", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
  }
}

id sub_10029BB94(void *a1, id a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t ObjectType;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;

  v66 = 0;
  v5 = objc_msgSend(a2, "rangeForAttachment:withTextAttachment:", a1, &v66);
  v6 = v66;
  if (!v66
    || (v7 = v5,
        v8 = objc_opt_self(ICSystemPaperTextAttachment),
        (v9 = swift_dynamicCastObjCClass(v6, v8)) == 0))
  {
    v18 = qword_1005CEBB0;
    v19 = v6;
    if (v18 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v20 = type metadata accessor for Logger(0);
    sub_10012A0B0(v20, (uint64_t)qword_1005D6BF0);
    v21 = v2;
    v22 = a1;
    v23 = v21;
    v24 = v22;
    v25 = Logger.logObject.getter(v24);
    v27 = static os_log_type_t.error.getter(v25, v26);
    if (os_log_type_enabled(v25, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      v63 = swift_slowAlloc(32, -1);
      v65 = (uint64_t)v23;
      v66 = (void *)v63;
      *(_DWORD *)v28 = 138412546;
      v30 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v28 + 4);
      *v29 = v23;

      *(_WORD *)(v28 + 12) = 2080;
      v31 = objc_msgSend(v24, "ic_loggingDescription");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

      v65 = sub_1003A4190(v32, v34, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v28 + 14);

      swift_bridgeObjectRelease(v34);
      _os_log_impl((void *)&_mh_execute_header, v25, v27, "%@: Could not find PaperKit text attachment for attachment: %s", (uint8_t *)v28, 0x16u);
      v35 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v29, 1, v35);
      swift_slowDealloc(v29, -1, -1);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v10 = (void *)v9;
  v11 = v6;
  v12 = objc_msgSend(v10, "viewIdentifier");
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v14 = v13;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
  }
  v15 = objc_msgSend(a2, "existingAttachmentViewForIdentifier:", v12);

  if (v15)
  {
    ObjectType = swift_getObjectType(v15);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PaperKitStreamableAttachment))
      v17 = v15;
    else
      v17 = 0;
    if (v17)
      goto LABEL_10;

  }
  v36 = objc_msgSend(a2, "textContainer");
  if (!v36)
  {
LABEL_29:
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v46 = type metadata accessor for Logger(0);
    sub_10012A0B0(v46, (uint64_t)qword_1005D6BF0);
    v47 = v2;
    v48 = a1;
    v49 = v47;
    v50 = v48;
    v51 = Logger.logObject.getter(v50);
    v53 = static os_log_type_t.error.getter(v51, v52);
    if (os_log_type_enabled(v51, v53))
    {
      v54 = swift_slowAlloc(22, -1);
      v55 = (_QWORD *)swift_slowAlloc(8, -1);
      v64 = swift_slowAlloc(32, -1);
      v65 = (uint64_t)v49;
      v66 = (void *)v64;
      *(_DWORD *)v54 = 138412546;
      v56 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v54 + 4);
      *v55 = v49;

      *(_WORD *)(v54 + 12) = 2080;
      v57 = objc_msgSend(v50, "ic_loggingDescription");
      v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v60 = v59;

      v65 = sub_1003A4190(v58, v60, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v54 + 14);

      swift_bridgeObjectRelease(v60);
      _os_log_impl((void *)&_mh_execute_header, v51, v53, "%@: Could not find PaperKit attachment view for attachment: %s", (uint8_t *)v54, 0x16u);
      v61 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v55, 1, v61);
      swift_slowDealloc(v55, -1, -1);
      swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v64, -1, -1);
      swift_slowDealloc(v54, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v37 = v36;
  v38 = objc_opt_self(ICTK2TextContainer);
  v39 = (void *)swift_dynamicCastObjCClass(v37, v38);
  if (!v39 || (v40 = objc_msgSend(v39, "tk2TextView")) == 0)
  {
    v41 = v37;
LABEL_28:

    goto LABEL_29;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "_pk_viewProviderForAttachment:atCharacterIndex:createIfNeeded:", v10, v7, 0);
  if (!v42)
  {

    goto LABEL_28;
  }
  v43 = v42;
  v44 = objc_msgSend(v42, "view");

  if (!v44)
    goto LABEL_29;
  v45 = swift_getObjectType(v44);
  if (swift_conformsToProtocol2(v45, &protocol descriptor for PaperKitStreamableAttachment))
    v17 = v44;
  else
    v17 = 0;
  v41 = v44;
  if (!v17)
    goto LABEL_28;
LABEL_10:

  return v17;
}

void RealtimeCollaborationController.updatePaperKitMessenger(for:textLayoutManager:)(uint64_t a1, uint64_t a2)
{
  sub_10029C278(a1, a2, (uint64_t (*)(void))sub_10029BB94, (void (*)(void))RealtimeCollaborationController.configurePaperKitAttachmentViewIfNecessary(_:));
}

void RealtimeCollaborationController.removePaperKitMessengerIfNecessary(for:textLayoutManager:)(uint64_t a1, uint64_t a2)
{
  sub_10029C278(a1, a2, (uint64_t (*)(void))sub_10029BB94, (void (*)(void))RealtimeCollaborationController.removePaperKitMessengerIfNecessary(for:));
}

void sub_10029C278(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void))
{
  uint64_t v5;
  id v6;

  v5 = a3();
  if (v5)
  {
    v6 = (id)v5;
    a4();

  }
}

void sub_10029C2D4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(id, id), void (*a6)(void))
{
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;

  v14 = a3;
  v10 = a4;
  v11 = a1;
  v12 = a5(v14, v10);
  if (v12)
  {
    v13 = (void *)v12;
    a6();

    v10 = v11;
    v11 = v13;
  }

}

void sub_10029C368(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t (*a6)(id, id))
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;

  v10 = a4;
  v11 = a5;
  v17 = a1;
  v12 = a6(v10, v11);
  if (v12)
  {
    v14 = (void *)v12;
    v15 = v13;
    ObjectType = swift_getObjectType(v12);
    dispatch thunk of PaperKitStreamableAttachment.showParticipantCursors.setter(a3, ObjectType, v15);

  }
  else
  {

  }
}

uint64_t sub_10029C4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a2;
  v5[3] = a3;
  v6 = sub_100012E18(&qword_1005D4680);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  v5[8] = v9;
  v5[9] = v10;
  return swift_task_switch(sub_10029C574, v9, v10);
}

uint64_t sub_10029C574()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  id v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v2 = v0[5];
  v1 = v0[6];
  v4 = (void *)v0[3];
  v3 = v0[4];
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1005644E8, 48, 7);
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  v7[5] = v4;
  swift_retain(v3);
  v8 = v4;
  sub_1002CF954(v1, (uint64_t)&unk_1005D6DD0, (uint64_t)v7);
  sub_100012DDC(v1, &qword_1005D4680);
  v6(v1, 1, 1, v5);
  v9 = (_QWORD *)swift_allocObject(&unk_100564510, 56, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v8;
  v9[5] = v3;
  v9[6] = v2;
  swift_retain(v3);
  v10 = v8;
  swift_retain(v2);
  sub_1002CF954(v1, (uint64_t)&unk_1005D6DE0, (uint64_t)v9);
  sub_100012DDC(v1, &qword_1005D4680);
  v13 = (uint64_t (*)(uint64_t))((char *)&dword_1005D7E58 + dword_1005D7E58);
  v11 = (_QWORD *)swift_task_alloc(unk_1005D7E5C);
  v0[10] = v11;
  *v11 = v0;
  v11[1] = sub_10029C6E8;
  return v13(1);
}

uint64_t sub_10029C6E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10029C784;
  else
    v4 = sub_10029C748;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_10029C748()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029C784()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029C7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_100012E18(&qword_1005D6EB8);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D6EC0);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D6EC8);
  v5[9] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[10] = v10;
  v5[11] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005D6ED0);
  v5[12] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[13] = v12;
  v5[14] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D6ED8);
  v5[15] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[16] = v14;
  v5[17] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10029C8CC, 0, 0);
}

uint64_t sub_10029C8CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[13];
  v1 = v0[14];
  v4 = v0[11];
  v3 = v0[12];
  v5 = v0[9];
  v6 = v0[10];
  GroupSession.$state.getter();
  v7 = sub_100016638(&qword_1005D6EE0, &qword_1005D6ED0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher<>.values.getter(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncPublisher.makeAsyncIterator()(v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = sub_100016638(&qword_1005D6EE8, &qword_1005D6ED8, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v0[18] = v8;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[19] = v9;
  *v9 = v0;
  v9[1] = sub_10029C9E0;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[8], v0[15], v8);
}

uint64_t sub_10029C9E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 152));
  if (v0)
  {
    *(_QWORD *)(v2 + 168) = v0;
    v3 = sub_10029CBF4;
  }
  else
  {
    *(_QWORD *)(v2 + 160) = 0;
    v3 = sub_10029CA48;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10029CA48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;

  v1 = v0[8];
  v2 = v0[5];
  v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = v0[17];
    v5 = v0[14];
    v6 = v0[11];
    v7 = v0[7];
    (*(void (**)(uint64_t, _QWORD))(v0[16] + 8))(v4, v0[15]);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v1);
    swift_task_dealloc(v7);
    v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  v9 = v0[20];
  v10 = v0[7];
  v11 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v10, v1, v2);
  sub_10029CCBC(v11, v10);
  if (v9)
  {
    v13 = v0[16];
    v12 = v0[17];
    v15 = v0[14];
    v14 = v0[15];
    v16 = v0[11];
    v18 = v0[7];
    v17 = v0[8];
    (*(void (**)(uint64_t, _QWORD))(v0[6] + 8))(v18, v0[5]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_task_dealloc(v12);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  (*(void (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[7], v0[5]);
  v20 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[22] = v20;
  *v20 = v0;
  v20[1] = sub_10029CC54;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[8], v0[15], v0[18]);
}

uint64_t sub_10029CBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 168);
  v1 = sub_100012E18(&qword_1005D7A90);
  v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_10029CC54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 176));
  if (v0)
  {
    *(_QWORD *)(v2 + 168) = v0;
    v3 = sub_10029CBF4;
  }
  else
  {
    *(_QWORD *)(v2 + 160) = 0;
    v3 = sub_10029CA48;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10029CCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  Swift::String v39;
  void *object;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  void *v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];
  uint64_t v57;
  uint64_t v58;

  v4 = type metadata accessor for EditNoteActivity(0);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D6EB8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v50 - v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v50 - v12, a2, v7);
  v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v13, v7);
  if ((_DWORD)v14 != enum case for GroupSession.State.invalidated<A>(_:))
  {
    if ((_DWORD)v14 == enum case for GroupSession.State.waiting<A>(_:))
    {
      v31 = 0;
    }
    else
    {
      if ((_DWORD)v14 != enum case for GroupSession.State.joined<A>(_:))
      {
        v34 = type metadata accessor for FastSyncError(0);
        v53 = v34;
        v35 = sub_100019C6C(&qword_1005DB2B0, (uint64_t (*)(uint64_t))&type metadata accessor for FastSyncError, (uint64_t)&protocol conformance descriptor for FastSyncError);
        swift_allocError(v34, v35, 0, 0);
        v37 = v36;
        v56[0] = 0;
        v56[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(44);
        v38 = swift_bridgeObjectRelease(v56[1]);
        strcpy((char *)v56, "Unknown state ");
        HIBYTE(v56[1]) = -18;
        GroupSession.state.getter(v38);
        v39._countAndFlagsBits = String.init<A>(reflecting:)(v11, v7);
        object = v39._object;
        String.append(_:)(v39);
        swift_bridgeObjectRelease(object);
        v41._object = (void *)0x8000000100485C50;
        v41._countAndFlagsBits = 0xD000000000000019;
        String.append(_:)(v41);
        GroupSession.activity.getter(v42);
        v43 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
        v44 = v55;
        v45._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v55, v43);
        v46 = v45._object;
        String.append(_:)(v45);
        swift_bridgeObjectRelease(v46);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v44);
        v47._countAndFlagsBits = 46;
        v47._object = (void *)0xE100000000000000;
        String.append(_:)(v47);
        v48 = v56[1];
        *v37 = v56[0];
        v37[1] = v48;
        v49 = (*(uint64_t (**)(_QWORD *, _QWORD))(*(_QWORD *)(v53 - 8) + 104))(v37, enum case for FastSyncError.sessionUnknownState(_:));
        swift_willThrow(v49);
        return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v13, v7);
      }
      v31 = 1;
    }
    GroupSession.activity.getter(v14);
    sub_100295B38(v31, 1, (uint64_t)v6, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v6, v55);
  }
  (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v13, v7);
  v15 = *v13;
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v16 = type metadata accessor for Logger(0);
  sub_10012A0B0(v16, (uint64_t)qword_1005D6BF0);
  swift_retain(a1);
  swift_errorRetain(v15);
  swift_retain(a1);
  v17 = swift_errorRetain(v15);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v52 = (uint64_t *)swift_slowAlloc(8, -1);
    v21 = swift_slowAlloc(32, -1);
    v53 = v21;
    v56[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v51 = v20 + 4;
    GroupSession.activity.getter(v21);
    v22 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
    v23 = v55;
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v55, v22);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v23);
    v57 = sub_1003A4190(v24, v26, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v51);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v20 + 12) = 2112;
    swift_errorRetain(v15);
    v27 = _swift_stdlib_bridgeErrorToNSError(v15);
    v57 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v20 + 14);
    v28 = v52;
    *v52 = v27;
    swift_errorRelease(v15);
    swift_errorRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s: Responding to session invalidation (error: %@).", (uint8_t *)v20, 0x16u);
    v29 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v28, 1, v29);
    swift_slowDealloc(v28, -1, -1);
    v30 = v53;
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {
    swift_release_n(a1, 2);
    swift_errorRelease(v15);
    swift_errorRelease(v15);
  }

  return swift_willThrow(v32);
}

uint64_t sub_10029D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc(dword_1005D6DEC);
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_100130768;
  v10[8] = a6;
  v10[9] = a4;
  v10[7] = a5;
  v10[10] = swift_getObjectType(a4);
  return swift_task_switch(sub_10029D30C, 0, 0);
}

uint64_t sub_10029D2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = swift_getObjectType(v2);
  return swift_task_switch(sub_10029D30C, 0, 0);
}

uint64_t sub_10029D30C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 96) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_10029D378, v3, v4);
}

uint64_t sub_10029D378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 96));
  v2 = v1 + OBJC_IVAR___ICRealtimeCollaborationController_delegate;
  swift_beginAccess(v2, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "realtimeCollaborationControllerSessionWillBegin:") & 1) != 0)
      objc_msgSend(v4, "realtimeCollaborationControllerSessionWillBegin:", *(_QWORD *)(v0 + 72));
    swift_unknownObjectRelease(v4, v5);
  }
  return swift_task_switch(sub_10029D41C, 0, 0);
}

uint64_t sub_10029D41C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  if (qword_1005CEBC8 != -1)
    swift_once(&qword_1005CEBC8, sub_1002935C8);
  v1 = qword_1005D6C38;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1005D6DF0 + dword_1005D6DF0);
  v2 = (_QWORD *)swift_task_alloc(unk_1005D6DF4);
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_10029D4B0;
  return v4(v1);
}

uint64_t sub_10029D4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10029D6CC;
  else
    v3 = sub_10029D514;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10029D514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 120) = static MainActor.shared.getter(a1);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
  return swift_task_switch(sub_10029D574, v4, v5);
}

uint64_t sub_10029D574()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 120));
  sub_10029DCCC(v1);
  return swift_task_switch(sub_10029D5C0, 0, 0);
}

uint64_t sub_10029D5C0()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t *v3;
  int8x16_t **v4;

  v1 = v0[5].i64[0];
  v2 = v0[3].i64[1];
  v3 = (int8x16_t *)swift_task_alloc(48);
  v0[8].i64[0] = (uint64_t)v3;
  v3[1] = vextq_s8(v0[4], v0[4], 8uLL);
  v3[2].i64[0] = v2;
  v3[2].i64[1] = v1;
  v4 = (int8x16_t **)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[8].i64[1] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (int8x16_t *)sub_10029D664;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v4, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_1005D6E00, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10029D664()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10029D6C0, 0, 0);
}

uint64_t sub_10029D6C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029D6CC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;

  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v1 = v0[14];
  v2 = (void *)v0[9];
  v3 = type metadata accessor for Logger(0);
  sub_10012A0B0(v3, (uint64_t)qword_1005D6BF0);
  v4 = v2;
  swift_errorRetain(v1);
  v5 = v4;
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.error.getter(v7, v8);
  v10 = os_log_type_enabled(v7, v9);
  v11 = v0[14];
  v12 = (void *)v0[9];
  if (v10)
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v13 = 138412546;
    v0[5] = v12;
    v15 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 5, v0 + 6, v13 + 4);
    *v14 = v12;

    *(_WORD *)(v13 + 12) = 2112;
    swift_errorRetain(v11);
    v16 = _swift_stdlib_bridgeErrorToNSError(v11);
    v0[6] = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 6, v0 + 7, v13 + 14);
    v14[1] = v16;
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "%@: Error joining group session: %@", (uint8_t *)v13, 0x16u);
    v17 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v14, 2, v17);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }
  v18 = v0[14];
  v19 = v0[11];

  v20 = swift_errorRetain(v18);
  v0[18] = static MainActor.shared.getter(v20);
  v22 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor, v21);
  return swift_task_switch(sub_10029D924, v22, v23);
}

uint64_t sub_10029D924()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v2 = v0[7];
  swift_release(v0[18]);
  sub_10029DE54(v2, v1);
  swift_errorRelease(v1);
  return swift_task_switch(sub_10029D988, 0, 0);
}

uint64_t sub_10029D988()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029D9BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100012E18(&qword_1005D6E88);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10029DA1C, 0, 0);
}

uint64_t sub_10029DA1C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[4];
  v2 = (_QWORD *)v0[5];
  v4 = v0[2];
  v3 = v0[3];
  *v2 = v3;
  swift_storeEnumTagMultiPayload(v2, v1, 0);
  v5 = sub_100012E18(&qword_1005D6E90);
  v6 = swift_allocObject(v5, ((*(unsigned int *)(v5 + 48) + 3) & 0x1FFFFFFFCLL) + 4, *(unsigned __int16 *)(v5 + 52) | 3);
  v0[6] = v6;
  *(_DWORD *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_100012CE8((uint64_t)v2, v6 + *(_QWORD *)(class metadata base offset for ManagedBuffer + *(_QWORD *)v6 + 16), &qword_1005D6E88);
  swift_retain(v3);
  sub_100012DDC((uint64_t)v2, &qword_1005D6E88);
  v7 = swift_task_alloc(32);
  v0[7] = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v4;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[8] = v8;
  *v8 = v0;
  v8[1] = sub_10029DB54;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v8, &unk_1005D6EA0, v7, sub_1002A7BC0, v6, 0, 0, (char *)&type metadata for () + 8);
}

uint64_t sub_10029DB54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10029DC3C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_10029DBC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10029DBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_setDeallocating(v2);
  sub_100012DDC(v2 + *(_QWORD *)(class metadata base offset for ManagedBuffer + *(_QWORD *)v2 + 16), &qword_1005D6E88);
  swift_deallocClassInstance(v2, *(unsigned int *)(*(_QWORD *)v2 + 48), *(unsigned __int16 *)(*(_QWORD *)v2 + 52));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029DC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_setDeallocating(v1);
  sub_100012DDC(v1 + *(_QWORD *)(class metadata base offset for ManagedBuffer + *(_QWORD *)v1 + 16), &qword_1005D6E88);
  swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029DCCC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  _BYTE v18[24];
  char v19[24];

  v3 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = &v1[OBJC_IVAR___ICRealtimeCollaborationController_activeSession];
  swift_beginAccess(&v1[OBJC_IVAR___ICRealtimeCollaborationController_activeSession], v19, 1, 0);
  v7 = *(_QWORD *)v6;
  *(_QWORD *)v6 = a1;
  swift_release(v7);
  v8 = &v1[OBJC_IVAR___ICRealtimeCollaborationController_delegate];
  swift_beginAccess(&v1[OBJC_IVAR___ICRealtimeCollaborationController_delegate], v18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = Strong;
    v11 = objc_msgSend(Strong, "respondsToSelector:", "realtimeCollaborationControllerSessionDidBegin:");
    swift_retain(a1);
    if ((v11 & 1) != 0)
      objc_msgSend(v10, "realtimeCollaborationControllerSessionDidBegin:", v1);
    swift_unknownObjectRelease(v10, v12);
  }
  else
  {
    swift_retain(a1);
  }
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject(&unk_100564628, 48, 7);
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v1;
  v14[5] = a1;
  swift_retain(a1);
  v15 = v1;
  v16 = sub_1002D0324((uint64_t)v5, (uint64_t)&unk_1005D6E70, (uint64_t)v14);
  swift_release(v16);
  return sub_100012DDC((uint64_t)v5, &qword_1005D4680);
}

uint64_t sub_10029DE54(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  char v26[24];
  _QWORD v27[3];

  v3 = v2;
  v6 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v6);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)&v2[OBJC_IVAR___ICRealtimeCollaborationController_messageController];
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount);
    v11 = (_QWORD *)(v10 + 16);
    v12 = (os_unfair_lock_s *)(v10 + 24);
    swift_retain(v9);
    os_unfair_lock_lock(v12);
    sub_100393BA4(v11, v27);
    os_unfair_lock_unlock(v12);
    v13 = v27[0];
    swift_release(v9);
  }
  else
  {
    v13 = 0;
  }
  v14 = &v3[OBJC_IVAR___ICRealtimeCollaborationController_activeSession];
  swift_beginAccess(&v3[OBJC_IVAR___ICRealtimeCollaborationController_activeSession], v27, 1, 0);
  v15 = *(_QWORD *)v14;
  *(_QWORD *)v14 = 0;
  swift_release(v15);
  v16 = &v3[OBJC_IVAR___ICRealtimeCollaborationController_delegate];
  swift_beginAccess(&v3[OBJC_IVAR___ICRealtimeCollaborationController_delegate], v26, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
  if (Strong)
  {
    v18 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "realtimeCollaborationControllerSessionDidTerminate:") & 1) != 0)objc_msgSend(v18, "realtimeCollaborationControllerSessionDidTerminate:", v3);
    swift_unknownObjectRelease(v18, v19);
  }
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
  v21 = (_QWORD *)swift_allocObject(&unk_100564678, 64, 7);
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = v3;
  v21[5] = a1;
  v21[6] = v13;
  v21[7] = a2;
  v22 = v3;
  swift_retain(a1);
  swift_errorRetain(a2);
  v23 = sub_1002D0324((uint64_t)v8, (uint64_t)&unk_1005D6E80, (uint64_t)v21);
  swift_release(v23);
  return sub_100012DDC((uint64_t)v8, &qword_1005D4680);
}

uint64_t sub_10029E044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  return swift_task_switch(sub_10029E060, 0, 0);
}

uint64_t sub_10029E060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = v0[9];
  v2 = v0[10];
  v3 = (void *)v0[8];
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D4680) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = swift_task_alloc(v4);
  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject(&unk_100564538, 56, 7);
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v3;
  v8[5] = v1;
  v8[6] = v2;
  v9 = v3;
  swift_retain(v1);
  swift_retain(v2);
  sub_100292C1C(v5, (uint64_t)&unk_1005D6E10, (uint64_t)v8, (uint64_t)&unk_1005645D8, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1005D6E50);
  sub_100012DDC(v5, &qword_1005D4680);
  swift_task_dealloc(v5);
  v10 = swift_task_alloc(v4);
  v7(v10, 1, 1, v6);
  v11 = (_QWORD *)swift_allocObject(&unk_100564560, 48, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v9;
  v11[5] = v1;
  v12 = v9;
  swift_retain(v1);
  sub_100292C1C(v10, (uint64_t)&unk_1005D6E20, (uint64_t)v11, (uint64_t)&unk_1005645D8, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1005D6E50);
  sub_100012DDC(v10, &qword_1005D4680);
  swift_task_dealloc(v10);
  if (!sub_100403584(2, 18, 0, 0))
    return swift_task_switch(sub_10029E4C4, 0, 0);
  v13 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.awaitAllRemainingTasks(isolation:)[1]);
  v0[11] = v13;
  v14 = sub_100012E18(&qword_1005D6E28);
  *v13 = v0;
  v13[1] = sub_10029E298;
  return TaskGroup.awaitAllRemainingTasks(isolation:)(0, 0, v14);
}

uint64_t sub_10029E298()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_10029E2EC, 0, 0);
}

uint64_t sub_10029E2EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_1005CEBD0 != -1)
    swift_once(&qword_1005CEBD0, sub_1002935EC);
  v1 = v0[10];
  v2 = qword_1005D6C40;
  v3 = swift_task_alloc(32);
  v0[12] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_10029E3BC;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0x6E6F28657661656CLL, 0xEA0000000000293ALL, sub_1002A7704, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10029E3BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10029E418, 0, 0);
}

uint64_t sub_10029E418()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 112) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_10029E480, v3, v4);
}

uint64_t sub_10029E480()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_10029DE54(v1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029E4C4()
{
  uint64_t v0;

  return swift_taskGroup_wait_next_throwing(v0 + 128, **(_QWORD **)(v0 + 56), sub_10029E4E0, v0 + 16);
}

uint64_t sub_10029E4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  *(_QWORD *)(v1 + 120) = v0;
  if (v0)
  {
    v2 = sub_10029E520;
  }
  else if ((*(_BYTE *)(v1 + 128) & 1) != 0)
  {
    v2 = sub_10029E2EC;
  }
  else
  {
    v2 = sub_10029E4C4;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10029E520()
{
  uint64_t v0;

  return swift_unexpectedError(*(_QWORD *)(v0 + 120), "_Concurrency/TaskGroup.swift", 28, 1, 648);
}

uint64_t sub_10029E53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1005D6E5C);
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_100145358;
  return sub_10029E5A0(a5, a6);
}

uint64_t sub_10029E5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = type metadata accessor for EditNoteActivity(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[8] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[9] = swift_task_alloc(v7);
  v3[10] = swift_task_alloc(v7);
  v8 = sub_100012E18((uint64_t *)&unk_1005DB2A0);
  v3[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[12] = v9;
  v3[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10029E644, 0, 0);
}

uint64_t sub_10029E644()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_100012E18(&qword_1005CF788);
  AsyncStream.makeAsyncIterator()(v1);
  v2 = OBJC_IVAR___ICRealtimeCollaborationController_mergeableFieldStateCache;
  v0[14] = OBJC_IVAR___ICRealtimeCollaborationController_context;
  v0[15] = v2;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[16] = v3;
  *v3 = v0;
  v3[1] = sub_10029E6FC;
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v0[11]);
}

uint64_t sub_10029E6FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_10029E750, 0, 0);
}

uint64_t sub_10029E750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 120);
    v5 = *(_QWORD *)(v1 + 72);
    v4 = *(_QWORD *)(v1 + 80);
    v24 = v5;
    v7 = *(_QWORD *)(v1 + 56);
    v6 = *(_QWORD *)(v1 + 64);
    v9 = *(char **)(v1 + 40);
    v8 = *(_QWORD *)(v1 + 48);
    v26 = *(void **)&v9[*(_QWORD *)(v1 + 112)];
    GroupSession.activity.getter(a1);
    v25 = *(_QWORD *)&v9[v3];
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v10(v5, v4, v8);
    v11 = *(unsigned __int8 *)(v7 + 80);
    v12 = (v11 + 24) & ~v11;
    v13 = (v6 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
    v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
    v16 = swift_allocObject(&unk_100564600, v15 + 8, v11 | 7);
    *(_QWORD *)(v1 + 136) = v16;
    *(_QWORD *)(v16 + 16) = v2;
    v10(v16 + v12, v24, v8);
    *(_QWORD *)(v16 + v13) = v26;
    *(_QWORD *)(v16 + v14) = v9;
    *(_QWORD *)(v16 + v15) = v25;
    v17 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    v26;
    swift_retain(v25);
    v18 = v9;
    v19 = (_QWORD *)swift_task_alloc(v17);
    *(_QWORD *)(v1 + 144) = v19;
    *v19 = v1;
    v19[1] = sub_10029E8F8;
    return NSManagedObjectContext.perform<A>(_:)(v19, sub_1002A78E0, v16, (char *)&type metadata for () + 8);
  }
  else
  {
    v21 = *(_QWORD *)(v1 + 104);
    v22 = *(_QWORD *)(v1 + 80);
    v23 = *(_QWORD *)(v1 + 72);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 96) + 8))(v21, *(_QWORD *)(v1 + 88));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10029E8F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_release(v1);
  return swift_task_switch(sub_10029E954, 0, 0);
}

uint64_t sub_10029E954()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 128) = v1;
  *v1 = v0;
  v1[1] = sub_10029E6FC;
  return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, *(_QWORD *)(v0 + 88));
}

uint64_t sub_10029E9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D6E34);
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_100145358;
  return sub_10029EA0C(a5);
}

uint64_t sub_10029EA0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for FastSync.SelectionMessage(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v5);
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v2[14] = swift_task_alloc(v5);
  v2[15] = swift_task_alloc(v5);
  v2[16] = swift_task_alloc(v5);
  v2[17] = swift_task_alloc(v5);
  v2[18] = swift_task_alloc(v5);
  v6 = sub_100012E18(&qword_1005DB270);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D6E38);
  v2[20] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[21] = v8;
  v2[22] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v2[23] = v9;
  v2[24] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v2[25] = v11;
  v2[26] = v12;
  return swift_task_switch(sub_10029EB4C, v11, v12);
}

uint64_t sub_10029EB4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[8];
  v0[5] = _swiftEmptyArrayStorage;
  v2 = sub_100012E18(&qword_1005CF770);
  AsyncStream.makeAsyncIterator()(v2);
  v3 = OBJC_IVAR___ICRealtimeCollaborationController_delegate;
  v0[27] = OBJC_IVAR___ICRealtimeCollaborationController_selectionDocument;
  v0[28] = v3;
  v4 = swift_beginAccess(v1 + v3, v0 + 2, 0, 0);
  v5 = static MainActor.shared.getter(v4);
  v0[29] = v5;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[30] = v6;
  *v6 = v0;
  v6[1] = sub_10029EC34;
  return AsyncStream.Iterator.next(isolation:)(v0[19], v5, &protocol witness table for MainActor, v0[20]);
}

uint64_t sub_10029EC34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 232);
  swift_task_dealloc(*(_QWORD *)(*v0 + 240));
  swift_release(v2);
  return swift_task_switch(sub_10029EC88, *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208));
}

uint64_t sub_10029EC88()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, unint64_t, uint64_t, __n128);
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void *Strong;
  void *v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t (*v125)(unint64_t, _QWORD, _QWORD);
  uint64_t v126;
  unint64_t v128;
  unint64_t *v129;
  uint64_t (*v130)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(unint64_t, uint64_t, uint64_t);
  uint64_t (*v135)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v136;
  void *v137;
  uint64_t v138;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 168);
    v4 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 112);
    v131 = *(_QWORD *)(v0 + 104);
    v133 = *(_QWORD *)(v0 + 96);
    v136 = *(_QWORD *)(v0 + 88);
    swift_release(*(_QWORD *)(v0 + 192));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v131);
    swift_task_dealloc(v133);
    swift_task_dealloc(v136);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 64);
  v15 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, __n128))(v3 + 32);
  ((void (*)(_QWORD, uint64_t, uint64_t))v15)(*(_QWORD *)(v0 + 144), v1, v2);
  v16 = *(void **)(v14 + v13);
  if (!v16)
  {
    if (qword_1005CEBB0 != -1)
LABEL_63:
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v41 = *(_QWORD *)(v0 + 144);
    v42 = *(_QWORD *)(v0 + 96);
    v43 = *(_QWORD *)(v0 + 72);
    v44 = *(_QWORD *)(v0 + 80);
    v45 = type metadata accessor for Logger(0);
    sub_10012A0B0(v45, (uint64_t)qword_1005D6BF0);
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
    v47 = v46(v42, v41, v43);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.debug.getter();
    v50 = os_log_type_enabled(v48, v49);
    v51 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v53 = *(_QWORD *)(v0 + 80);
    if (v50)
    {
      v54 = swift_slowAlloc(12, -1);
      v135 = v15;
      v55 = swift_slowAlloc(32, -1);
      v138 = v55;
      *(_DWORD *)v54 = 136315138;
      v56 = sub_100019C6C(&qword_1005D6E40, (uint64_t (*)(uint64_t))&type metadata accessor for FastSync.SelectionMessage, (uint64_t)&protocol conformance descriptor for FastSync.SelectionMessage);
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v52, v56);
      v59 = v58;
      *(_QWORD *)(v54 + 4) = sub_1003A4190(v57, v58, &v138);
      swift_bridgeObjectRelease(v59);
      v60 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v60(v51, v52);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "No selection document — queueing Fast Sync selection {message: %s}", (uint8_t *)v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      v61 = v55;
      v15 = v135;
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      v60 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v60(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
    }

    v46(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 72));
    v62 = *(_QWORD *)(v0 + 40);
    if ((swift_isUniquelyReferenced_nonNull_native(v62) & 1) == 0)
      v62 = sub_10016B3C8(0, *(_QWORD *)(v62 + 16) + 1, 1, v62);
    v64 = *(_QWORD *)(v62 + 16);
    v63 = *(_QWORD *)(v62 + 24);
    if (v64 >= v63 >> 1)
      v62 = sub_10016B3C8(v63 > 1, v64 + 1, 1, v62);
    v65 = *(_QWORD *)(v0 + 144);
    v67 = *(_QWORD *)(v0 + 80);
    v66 = *(_QWORD *)(v0 + 88);
    v68 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v62 + 16) = v64 + 1;
    ((void (*)(unint64_t, uint64_t, uint64_t))v15)(v62+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v64, v66, v68);
    *(_QWORD *)(v0 + 40) = v62;
    v69 = ((uint64_t (*)(uint64_t, uint64_t))v60)(v65, v68);
    goto LABEL_43;
  }
  v17 = v16;
  v18 = ((uint64_t (*)(void))FastSync.SelectionMessage.selectionStateData.getter)();
  v20 = v19;
  v137 = v17;
  v21 = RealtimeCollaborationSelectionDocument.merge(with:)();
  sub_10013DD30(v18, v20);
  type metadata accessor for ICCRMergeResult(0);
  if (!v21)
  {
    v134 = (void (*)(unint64_t, uint64_t, uint64_t))v15;
    if (qword_1005CEBB0 != -1)
      goto LABEL_65;
    goto LABEL_22;
  }
  if (v21 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 72));

    goto LABEL_43;
  }
  if (v21 != 2)
  {
    *(_QWORD *)(v0 + 48) = v21;
    return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v22, v0 + 48, v22, &type metadata for UInt);
  }
  v129 = (unint64_t *)(v0 + 40);
  v23 = *(_QWORD *)(v0 + 40);
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
    v40 = 0;
    goto LABEL_37;
  }
  v25 = *(_QWORD *)(v0 + 80);
  v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v132 = *(_QWORD *)(v25 + 72);
  v134 = (void (*)(unint64_t, uint64_t, uint64_t))v0;
  v130 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, __n128))(v25 + 16);
  v28 = swift_bridgeObjectRetain(v23);
  v0 = 0;
  v128 = v26;
  while (1)
  {
    v29 = v24;
    v30 = *((_QWORD *)v134 + 17);
    v31 = v27;
    v33 = *((_QWORD *)v134 + 9);
    v32 = *((_QWORD *)v134 + 10);
    v34 = v130(v30, v27 + v26, v33, v28);
    v35 = FastSync.SelectionMessage.selectionStateData.getter(v34);
    v37 = v36;
    v38 = RealtimeCollaborationSelectionDocument.merge(with:)();
    sub_10013DD30(v35, v37);
    v39 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v39(v30, v33);
    if (v38)
      break;
    ++v0;
    v26 += v132;
    v24 = v29;
    v27 = v31;
    if (v29 == v0)
    {
      result = swift_bridgeObjectRelease(v31);
      v40 = *(_QWORD *)(*v129 + 16);
      goto LABEL_36;
    }
  }
  result = swift_bridgeObjectRelease(v31);
  v40 = v0 + 1;
  if (__OFADD__(v0, 1))
  {
LABEL_72:
    __break(1u);
    return result;
  }
  v15 = v130;
  v97 = *v129;
  v98 = *(_QWORD *)(*v129 + 16);
  if (v40 == v98)
  {
LABEL_35:
    v24 = v0;
LABEL_36:
    v0 = (unint64_t)v134;
    if (v40 >= v24)
    {
LABEL_37:
      v99 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 224);
      sub_10026F220(v24, v40);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v99);
      if (Strong)
      {
        v101 = Strong;
        v102 = objc_msgSend(Strong, "respondsToSelector:", "realtimeCollaborationControllerDidChangeSelectionState:");
        v104 = *(_QWORD *)(v0 + 144);
        v106 = *(_QWORD *)(v0 + 72);
        v105 = *(_QWORD *)(v0 + 80);
        if ((v102 & 1) != 0)
        {
          objc_msgSend(v101, "realtimeCollaborationControllerDidChangeSelectionState:", *(_QWORD *)(v0 + 64));

          swift_unknownObjectRelease(v101, v107);
        }
        else
        {
          swift_unknownObjectRelease(v101, v103);

        }
        v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
      }
      else
      {
        v108 = *(_QWORD *)(v0 + 144);
        v110 = *(_QWORD *)(v0 + 72);
        v109 = *(_QWORD *)(v0 + 80);

        v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
      }
      goto LABEL_43;
    }
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v113 = v132 + v26;
  v114 = v0 + 1;
  while (1)
  {
    if (v114 >= v98)
    {
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    v115 = *((_QWORD *)v134 + 17);
    v116 = *((_QWORD *)v134 + 9);
    v117 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t))v15)(v115, v97 + v113, v116);
    v118 = FastSync.SelectionMessage.selectionStateData.getter(v117);
    v120 = v119;
    v121 = RealtimeCollaborationSelectionDocument.merge(with:)();
    sub_10013DD30(v118, v120);
    result = ((uint64_t (*)(uint64_t, uint64_t))v39)(v115, v116);
    if (v121)
    {
      v15 = v130;
      goto LABEL_58;
    }
    v15 = v130;
    if (v114 != v0)
    {
      if ((v0 & 0x8000000000000000) != 0)
        goto LABEL_67;
      v122 = *v129;
      v123 = *(_QWORD *)(*v129 + 16);
      if (v0 >= v123)
        goto LABEL_68;
      result = ((uint64_t (*)(_QWORD, unint64_t, _QWORD))v130)(*((_QWORD *)v134 + 16), v122 + v128 + v0 * v132, *((_QWORD *)v134 + 9));
      if (v114 >= v123)
        goto LABEL_69;
      ((void (*)(_QWORD, unint64_t, _QWORD))v130)(*((_QWORD *)v134 + 15), v122 + v113, *((_QWORD *)v134 + 9));
      result = swift_isUniquelyReferenced_nonNull_native(v122);
      *((_QWORD *)v134 + 5) = v122;
      if ((result & 1) == 0)
      {
        result = sub_10026C6D4(v122);
        v122 = result;
        *v129 = result;
      }
      if (v0 >= *(_QWORD *)(v122 + 16))
        goto LABEL_70;
      v124 = v122 + v128 + v0 * v132;
      v125 = *(uint64_t (**)(unint64_t, _QWORD, _QWORD))(*((_QWORD *)v134 + 10) + 40);
      result = v125(v124, *((_QWORD *)v134 + 15), *((_QWORD *)v134 + 9));
      v126 = *((_QWORD *)v134 + 5);
      if (v114 >= *(_QWORD *)(v126 + 16))
        goto LABEL_71;
      result = v125(v126 + v113, *((_QWORD *)v134 + 16), *((_QWORD *)v134 + 9));
    }
    if (__OFADD__(v0++, 1))
      break;
LABEL_58:
    v40 = v114 + 1;
    if (__OFADD__(v114, 1))
      goto LABEL_62;
    v97 = *v129;
    v98 = *(_QWORD *)(*v129 + 16);
    ++v114;
    v113 += v132;
    if (v40 == v98)
      goto LABEL_35;
  }
  __break(1u);
LABEL_65:
  swift_once(&qword_1005CEBB0, sub_10029344C);
LABEL_22:
  v70 = *(_QWORD *)(v0 + 144);
  v71 = *(_QWORD *)(v0 + 112);
  v73 = *(_QWORD *)(v0 + 72);
  v72 = *(_QWORD *)(v0 + 80);
  v74 = type metadata accessor for Logger(0);
  sub_10012A0B0(v74, (uint64_t)qword_1005D6BF0);
  v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16);
  v76 = v75(v71, v70, v73);
  v77 = Logger.logObject.getter(v76);
  v78 = static os_log_type_t.debug.getter();
  v79 = os_log_type_enabled(v77, v78);
  v80 = *(_QWORD *)(v0 + 112);
  v82 = *(_QWORD *)(v0 + 72);
  v81 = *(_QWORD *)(v0 + 80);
  if (v79)
  {
    v83 = swift_slowAlloc(12, -1);
    v84 = swift_slowAlloc(32, -1);
    v138 = v84;
    *(_DWORD *)v83 = 136315138;
    v85 = sub_100019C6C(&qword_1005D6E40, (uint64_t (*)(uint64_t))&type metadata accessor for FastSync.SelectionMessage, (uint64_t)&protocol conformance descriptor for FastSync.SelectionMessage);
    v86 = dispatch thunk of CustomStringConvertible.description.getter(v82, v85);
    v88 = v87;
    *(_QWORD *)(v83 + 4) = sub_1003A4190(v86, v87, &v138);
    swift_bridgeObjectRelease(v88);
    v89 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
    v89(v80, v82);
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "Cannot merge Fast Sync selection — queueing {message: %s}", (uint8_t *)v83, 0xCu);
    swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v84, -1, -1);
    swift_slowDealloc(v83, -1, -1);
  }
  else
  {
    v89 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
    v89(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 72));
  }

  v75(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 72));
  v90 = *(_QWORD *)(v0 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native(v90) & 1) == 0)
    v90 = sub_10016B3C8(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
  v92 = *(_QWORD *)(v90 + 16);
  v91 = *(_QWORD *)(v90 + 24);
  if (v92 >= v91 >> 1)
    v90 = sub_10016B3C8(v91 > 1, v92 + 1, 1, v90);
  v93 = *(_QWORD *)(v0 + 144);
  v94 = *(_QWORD *)(v0 + 104);
  v96 = *(_QWORD *)(v0 + 72);
  v95 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v90 + 16) = v92 + 1;
  v134(v90+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v92, v94, v96);

  *(_QWORD *)(v0 + 40) = v90;
  v69 = ((uint64_t (*)(uint64_t, uint64_t))v89)(v93, v96);
LABEL_43:
  v111 = static MainActor.shared.getter(v69);
  *(_QWORD *)(v0 + 232) = v111;
  v112 = (unint64_t *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 240) = v112;
  *v112 = v0;
  v112[1] = (unint64_t)sub_10029EC34;
  return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 152), v111, &protocol witness table for MainActor, *(_QWORD *)(v0 + 160));
}

uint64_t sub_10029F690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_10029F6A8, 0, 0);
}

uint64_t sub_10029F6A8()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  char *v8;
  _QWORD *v9;

  v2 = (char *)v0[2];
  v1 = v0[3];
  v3 = *(void **)&v2[OBJC_IVAR___ICRealtimeCollaborationController_analyticsContext];
  v4 = *(void **)&v2[OBJC_IVAR___ICRealtimeCollaborationController_eventReporter];
  v5 = (_QWORD *)swift_allocObject(&unk_100564650, 48, 7);
  v0[4] = v5;
  v5[2] = v1;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v4;
  v6 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v3;
  v7 = v4;
  swift_retain(v1);
  v8 = v2;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v0[5] = v9;
  *v9 = v0;
  v9[1] = sub_10029F778;
  return NSManagedObjectContext.perform<A>(_:)(v9, sub_1002A7A2C, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_10029F778()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  swift_release(v1);
  return swift_task_switch(sub_10029F7D4, 0, 0);
}

uint64_t sub_10029F7D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029F7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_10029F7F8, 0, 0);
}

uint64_t sub_10029F7F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  id v8;
  char *v9;
  _QWORD *v10;

  v2 = v0[4];
  v1 = v0[5];
  v4 = (char *)v0[2];
  v3 = v0[3];
  v5 = *(void **)&v4[OBJC_IVAR___ICRealtimeCollaborationController_analyticsContext];
  v6 = *(void **)&v4[OBJC_IVAR___ICRealtimeCollaborationController_eventReporter];
  v7 = (_QWORD *)swift_allocObject(&unk_1005646A0, 64, 7);
  v0[6] = v7;
  v7[2] = v3;
  v7[3] = v5;
  v7[4] = v4;
  v7[5] = v6;
  v7[6] = v1;
  v7[7] = v2;
  v5;
  v8 = v6;
  swift_retain(v3);
  v9 = v4;
  swift_errorRetain(v1);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to NSManagedObjectContext.perform<A>(_:)[1]);
  v0[7] = v10;
  *v10 = v0;
  v10[1] = sub_10029F8DC;
  return NSManagedObjectContext.perform<A>(_:)(v10, sub_1002A7B38, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_10029F8DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_release(v1);
  return swift_task_switch(sub_10029F7D4, 0, 0);
}

void sub_10029F938(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  NSObject *v30;
  int v31;
  char v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_signpost_id_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  os_unfair_lock_s *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  id v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  NSObject *v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char **v70;
  char *v71;
  uint64_t *v72;
  uint64_t *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  NSString v85;
  id v86;
  id v87;
  NSString v88;
  NSObject *v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  char *v98;
  uint64_t v99;
  os_signpost_type_t v100;
  uint64_t v101;
  char *v102;
  int v103;
  const char *v104;
  uint64_t v105;
  uint8_t *v106;
  os_signpost_id_t v107;
  uint64_t v108;
  uint8_t *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t *v113;
  char *v114;
  uint64_t *v115;
  char *v116;
  uint64_t v117;
  os_log_type_t v118;
  NSObject *v119;
  _BOOL4 v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t *v125;
  id v126;
  uint64_t v127;
  uint64_t *v128;
  void *v129;
  void *v130;
  Swift::String v131;
  Swift::String v132;
  id v133;
  uint64_t v134;
  void *v135;
  void *v136;
  Swift::String v137;
  void *v138;
  unint64_t v139;
  unint64_t *v140;
  uint64_t *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  NSObject *v145;
  uint64_t v146;
  os_signpost_type_t v147;
  char v148;
  uint64_t v149;
  char *v150;
  int v151;
  const char *v152;
  uint64_t v153;
  char *v154;
  uint8_t *v155;
  os_signpost_id_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint8_t *v167;
  NSObject *v168;
  uint64_t v169;
  os_signpost_type_t v170;
  os_signpost_id_t v171;
  void *v172;
  uint64_t v173;
  os_signpost_type_t v174;
  os_signpost_id_t v175;
  char *v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  uint64_t *v180;
  int v181;
  uint64_t v182;
  void *v183;
  __int128 v184;
  unint64_t *v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  NSObject *v191;
  char *v192;
  char *v193;
  __int128 v194;
  int v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  os_unfair_lock_s *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  void (*v210)(char *, uint64_t);
  id v211;
  char *v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  void (*v220)(char *, char *, uint64_t);
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;

  v213 = a3;
  v215 = a2;
  v205 = type metadata accessor for OSSignposter(0);
  v177 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v176 = (char *)&v176 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for OSSignpostError(0);
  v199 = *(_QWORD *)(v200 - 8);
  v9 = __chkstk_darwin(v200);
  v187 = (char *)&v176 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v189 = (char *)&v176 - v11;
  v188 = sub_100012E18(&qword_1005D6E60);
  __chkstk_darwin(v188);
  v197 = (uint64_t)&v176 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for OSSignpostID(0);
  v214 = *(_QWORD *)(v221 - 8);
  v13 = __chkstk_darwin(v221);
  v192 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v176 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v176 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v176 - v21;
  if ((unint64_t)a1 >> 62)
  {
LABEL_47:
    if (a1 < 0)
      v160 = a1;
    else
      v160 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v23 = _CocoaArrayWrapper.endIndex.getter(v160);
    v209 = v20;
    if (v23)
      goto LABEL_3;
  }
  else
  {
    v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v209 = v20;
    if (v23)
    {
LABEL_3:
      v208 = a4;
      v211 = (id)objc_opt_self(ICCloudContext);
      v204 = a1 & 0xC000000000000001;
      v198 = &v226;
      v196 = a5 + 2;
      v206 = (os_unfair_lock_s *)(a5 + 3);
      v195 = enum case for OSSignpostError.doubleEnd(_:);
      v185 = &v224;
      v24 = 4;
      *(_QWORD *)&v25 = 136315138;
      v194 = v25;
      v193 = (char *)&type metadata for Any + 8;
      v186 = 0x8000000100485C00;
      *(_QWORD *)&v25 = 138412546;
      v178 = v25;
      *(_QWORD *)&v25 = 136315650;
      v184 = v25;
      v183 = (void *)0x8000000100485BC0;
      v201 = v17;
      v212 = v22;
      v203 = a1;
      v202 = v23;
      while (1)
      {
        a4 = (char *)(v24 - 4);
        v216 = v24;
        if (v204)
          v26 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, a1);
        else
          v26 = (uint64_t *)*(id *)(a1 + 8 * v24);
        a5 = v26;
        if (__OFADD__(a4, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v218 = a4 + 1;
        if (qword_1005CEBC0 != -1)
          swift_once(&qword_1005CEBC0, sub_1002934E0);
        v27 = sub_10012A0B0(v205, (uint64_t)qword_1005D6C20);
        v28 = a5;
        v29 = ((uint64_t (*)(void))static OSSignpostID.exclusive.getter)();
        v30 = OSSignposter.logHandle.getter(v29);
        v31 = static os_signpost_type_t.begin.getter();
        v32 = OS_os_log.signpostsEnabled.getter();
        v33 = v221;
        v217 = v27;
        if ((v32 & 1) != 0)
        {
          v220 = *(void (**)(char *, char *, uint64_t))(v214 + 16);
          v220(v20, v22, v221);
          v34 = (uint8_t *)swift_slowAlloc(12, -1);
          v35 = swift_slowAlloc(32, -1);
          v223 = v35;
          *(_DWORD *)v34 = v194;
          v36 = objc_msgSend(v28, "ic_loggingIdentifier");
          LODWORD(v222) = v31;
          v37 = v36;
          v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v40 = v39;

          v41 = v214;
          v42 = v38;
          v20 = v209;
          v225 = sub_1003A4190(v42, v40, &v223);
          v33 = v221;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v198, v34 + 4);

          v43 = swift_bridgeObjectRelease(v40);
          v44 = OSSignpostID.rawValue.getter(v43);
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v30, (os_signpost_type_t)v222, v44, "Merge", "Record ID: %s", v34, 0xCu);
          swift_arrayDestroy(v35, 1, v193);
          v45 = v35;
          v22 = v212;
          swift_slowDealloc(v45, -1, -1);
          swift_slowDealloc(v34, -1, -1);

          (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v33);
          v46 = v220;
        }
        else
        {

          v41 = v214;
          v46 = *(void (**)(char *, char *, uint64_t))(v214 + 16);
        }
        v47 = v206;
        v220 = v46;
        v46(v20, v22, v33);
        v48 = type metadata accessor for OSSignpostIntervalState(0);
        swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
        v17 = (char *)OSSignpostIntervalState.init(id:isOpen:)(v20, 1);
        v49 = *(void (**)(char *, uint64_t))(v41 + 8);
        v49(v22, v33);
        v50 = objc_msgSend(v211, "sharedContext");
        EditNoteActivity.accountID.getter(v50);
        v52 = v51;
        v53 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v52);
        v222 = v28;
        v54 = objc_msgSend(v50, "existingCloudObjectForRecord:accountID:context:", v28, v53, v213);

        v55 = v54;
        v219 = v17;
        if (!v54)
        {
          if (qword_1005CEBB8 != -1)
            swift_once(&qword_1005CEBB8, sub_100293494);
          v56 = sub_10012A0B0(v188, (uint64_t)qword_1005D6C08);
          v57 = v197;
          sub_100012CE8(v56, v197, &qword_1005D6E60);
          v58 = type metadata accessor for Logger(0);
          v59 = *(_QWORD *)(v58 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58) == 1)
          {
            sub_100012DDC(v57, &qword_1005D6E60);
          }
          else
          {
            v190 = v59;
            v210 = v49;
            v60 = v222;
            v61 = v208;
            v62 = v208;
            v63 = v60;
            v64 = v62;
            v65 = Logger.logObject.getter(v64);
            v66 = static os_log_type_t.debug.getter();
            v67 = v66;
            v191 = v65;
            if (os_log_type_enabled(v65, v66))
            {
              v68 = swift_slowAlloc(22, -1);
              v180 = v63;
              v69 = v68;
              v70 = (char **)swift_slowAlloc(8, -1);
              v182 = swift_slowAlloc(32, -1);
              v223 = v182;
              *(_DWORD *)v69 = v178;
              v181 = v67;
              v225 = (uint64_t)v64;
              v71 = v64;
              v72 = v198;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v198, v69 + 4);
              *v70 = v61;

              *(_WORD *)(v69 + 12) = 2080;
              v179 = v69 + 14;
              v73 = v180;
              v74 = objc_msgSend(v180, "ic_loggingDescription");
              v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
              v77 = v76;

              v225 = sub_1003A4190(v75, v77, &v223);
              v78 = v72;
              v47 = v206;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, v78, v179);

              swift_bridgeObjectRelease(v77);
              v79 = v191;
              _os_log_impl((void *)&_mh_execute_header, v191, (os_log_type_t)v181, "%@: Creating new cloud object for record: %s", (uint8_t *)v69, 0x16u);
              v80 = sub_100012E18(&qword_1005D3A30);
              swift_arrayDestroy(v70, 1, v80);
              swift_slowDealloc(v70, -1, -1);
              v81 = v182;
              swift_arrayDestroy(v182, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v81, -1, -1);
              swift_slowDealloc(v69, -1, -1);

            }
            else
            {

            }
            (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v197, v58);
            v20 = v209;
            v49 = v210;
            v22 = v212;
          }
          v82 = objc_msgSend(v211, "sharedContext");
          EditNoteActivity.accountID.getter(v82);
          v84 = v83;
          v85 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v84);
          v86 = objc_msgSend(v82, "newCloudObjectForRecord:accountID:context:", v222, v85, v213);

          if (!v86)
          {
            v55 = 0;
            v17 = v219;
            goto LABEL_34;
          }
          v87 = v86;
          v88 = String._bridgeToObjectiveC()();
          objc_msgSend(v87, "clearChangeCountWithReason:", v88);

          v55 = v87;
          v17 = v219;
        }
        v89 = v54;
        v90 = -[NSObject identifier](v55, "identifier");
        if (!v90)
        {

LABEL_34:
          if (qword_1005CEBB0 != -1)
            swift_once(&qword_1005CEBB0, sub_10029344C);
          v112 = type metadata accessor for Logger(0);
          sub_10012A0B0(v112, (uint64_t)qword_1005D6BF0);
          v113 = v222;
          v114 = v208;
          v115 = v113;
          v116 = v114;
          v117 = static os_log_type_t.fault.getter(v116);
          v118 = v117;
          v119 = Logger.logObject.getter(v117);
          v120 = os_log_type_enabled(v119, v118);
          v210 = v49;
          if (v120)
          {
            v121 = swift_slowAlloc(32, -1);
            v222 = (uint64_t *)swift_slowAlloc(64, -1);
            v225 = (uint64_t)v222;
            *(_DWORD *)v121 = v184;
            LODWORD(v191) = v118;
            v122 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
            v124 = v123;
            v223 = sub_1003A4190(v122, v123, &v225);
            v125 = v185;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, v185, v121 + 4);
            swift_bridgeObjectRelease(v124);
            *(_WORD *)(v121 + 12) = 2048;
            v223 = 627;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, v125, v121 + 14);
            *(_WORD *)(v121 + 22) = 2080;
            v190 = v121 + 24;
            v223 = 0;
            v224 = 0xE000000000000000;
            _StringGuts.grow(_:)(55);
            v126 = objc_msgSend(v116, "description");
            v127 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
            v128 = v115;
            v130 = v129;

            v131._countAndFlagsBits = v127;
            v131._object = v130;
            String.append(_:)(v131);
            swift_bridgeObjectRelease(v130);
            v132._countAndFlagsBits = 0xD000000000000033;
            v132._object = v183;
            String.append(_:)(v132);
            v133 = objc_msgSend(v128, "ic_loggingDescription");
            v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
            v136 = v135;

            v137._countAndFlagsBits = v134;
            v137._object = v136;
            String.append(_:)(v137);
            v138 = v136;
            v115 = v128;
            swift_bridgeObjectRelease(v138);
            v139 = v224;
            v223 = sub_1003A4190(v223, v224, &v225);
            v140 = v125;
            v17 = v219;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, v140, v190);
            swift_bridgeObjectRelease(v139);
            _os_log_impl((void *)&_mh_execute_header, v119, (os_log_type_t)v191, "Failed assertion at %s:%lu: %s", (uint8_t *)v121, 0x20u);
            v141 = v222;
            swift_arrayDestroy(v222, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v141, -1, -1);
            v142 = v121;
            v49 = v210;
            swift_slowDealloc(v142, -1, -1);
          }

          v143 = v192;
          v145 = OSSignposter.logHandle.getter(v144);
          v146 = OSSignpostIntervalState.signpostID.getter();
          v147 = static os_signpost_type_t.end.getter(v146);
          v148 = OS_os_log.signpostsEnabled.getter();
          v20 = v209;
          if ((v148 & 1) != 0)
          {
            v222 = v115;
            v149 = swift_retain(v17);
            v150 = v187;
            checkForErrorAndConsumeState(state:)(v149);
            swift_release(v17);
            v151 = (*(uint64_t (**)(char *, uint64_t))(v199 + 88))(v150, v200);
            v152 = "[Error] Interval already ended";
            if (v151 != v195)
            {
              (*(void (**)(char *, uint64_t))(v199 + 8))(v187, v200);
              v152 = "";
            }
            v153 = v221;
            v220(v20, v143, v221);
            v154 = v143;
            v155 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v155 = 0;
            v156 = OSSignpostID.rawValue.getter(v155);
            v157 = v153;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v145, v147, v156, "Merge", v152, v155, 2u);
            swift_slowDealloc(v155, -1, -1);

            v158 = v154;
            v49 = v210;
            v210(v158, v153);
            v159 = v20;
            v22 = v212;
            v115 = v222;
          }
          else
          {

            v159 = v143;
            v22 = v212;
            v157 = v221;
          }
          v49(v159, v157);

          v111 = v17;
          goto LABEL_44;
        }
        v91 = v90;
        v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v94 = v93;

        os_unfair_lock_lock(v47);
        v95 = v207;
        sub_1002A0B04(v196, v92, v94, v208, v222, v55, v215);
        v207 = v95;
        if (v95)
        {
          os_unfair_lock_unlock(v47);
          __break(1u);
          return;
        }
        os_unfair_lock_unlock(v47);
        swift_bridgeObjectRelease(v94);
        -[NSObject setNeedsInitialFetchFromCloud:](v55, "setNeedsInitialFetchFromCloud:", 0);

        v97 = OSSignposter.logHandle.getter(v96);
        v17 = v201;
        v98 = v219;
        v99 = OSSignpostIntervalState.signpostID.getter();
        v100 = static os_signpost_type_t.end.getter(v99);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          v101 = swift_retain(v98);
          v102 = v189;
          checkForErrorAndConsumeState(state:)(v101);
          swift_release(v98);
          v103 = (*(uint64_t (**)(char *, uint64_t))(v199 + 88))(v102, v200);
          v104 = "[Error] Interval already ended";
          if (v103 != v195)
          {
            (*(void (**)(char *, uint64_t))(v199 + 8))(v189, v200);
            v104 = "";
          }
          v105 = v221;
          v220(v20, v17, v221);
          v106 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v106 = 0;
          v107 = OSSignpostID.rawValue.getter(v106);
          v108 = v105;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v97, v100, v107, "Merge", v104, v106, 2u);
          v109 = v106;
          v17 = v201;
          swift_slowDealloc(v109, -1, -1);

          v49(v17, v105);
          v110 = v20;
          v22 = v212;
          v98 = v219;
        }
        else
        {

          v110 = v17;
          v108 = v221;
        }
        v49(v110, v108);

        v111 = v98;
LABEL_44:
        swift_release(v111);
        a1 = v203;
        if (v218 == (char *)v202)
          break;
        v24 = v216 + 1;
      }
    }
  }
  swift_bridgeObjectRelease(a1);
  if (qword_1005CEBC0 != -1)
    swift_once(&qword_1005CEBC0, sub_1002934E0);
  v161 = v205;
  v162 = sub_10012A0B0(v205, (uint64_t)qword_1005D6C20);
  v163 = v177;
  v164 = v176;
  v165 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v177 + 16))(v176, v162, v161);
  v166 = v209;
  static OSSignpostID.exclusive.getter(v165);
  v167 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v167 = 0;
  v168 = OSSignposter.logHandle.getter(v167);
  v169 = static os_signpost_type_t.begin.getter();
  v170 = v169;
  v171 = OSSignpostID.rawValue.getter(v169);
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v168, v170, v171, "Save", "", v167, 2u);
  v172 = v213;
  NSManagedObjectContext.ic_save(withLogDescription:_:)(0x636E795374736146, 0xEE00656772654D20, _swiftEmptyArrayStorage);
  v173 = static os_signpost_type_t.end.getter(objc_msgSend(v172, "reset"));
  v174 = v173;
  v175 = OSSignpostID.rawValue.getter(v173);
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v168, v174, v175, "Save", "", v167, 2u);

  swift_slowDealloc(v167, -1, -1);
  (*(void (**)(char *, uint64_t))(v214 + 8))(v166, v221);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v164, v161);
}

uint64_t sub_1002A0B04(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, NSObject *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t *v80;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  id v86;
  os_log_t v87;
  int v88;
  uint64_t v89;
  id v90;
  id v91;
  unsigned int (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v94 = a7;
  v102 = a3;
  v12 = sub_100012E18(&qword_1005D6E60);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v84 - v16;
  v100 = a1;
  v18 = *a1;
  v19 = *(_QWORD *)(v18 + 16);
  v95 = a6;
  if (v19)
  {
    v20 = v102;
    swift_bridgeObjectRetain(v102);
    v21 = sub_100248A98(a2, v20);
    if ((v22 & 1) != 0)
    {
      v23 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v21);
      swift_bridgeObjectRelease(v102);
      goto LABEL_6;
    }
    swift_bridgeObjectRelease(v102);
  }
  v23 = objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
LABEL_6:
  if (qword_1005CEBB8 != -1)
    swift_once(&qword_1005CEBB8, sub_100293494);
  v93 = sub_10012A0B0(v12, (uint64_t)qword_1005D6C08);
  sub_100012CE8(v93, (uint64_t)v17, &qword_1005D6E60);
  v24 = type metadata accessor for Logger(0);
  v97 = *(_QWORD *)(v24 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  v101 = v24;
  v92 = v25;
  v26 = ((uint64_t (*)(char *, uint64_t))v25)(v17, 1);
  v98 = v15;
  v99 = a2;
  v96 = (uint64_t)a5;
  v90 = a4;
  if (v26 == 1)
  {
    sub_100012DDC((uint64_t)v17, &qword_1005D6E60);
    v27 = v101;
  }
  else
  {
    v28 = a4;
    v29 = a5;
    v91 = v23;
    v30 = v23;
    v31 = v28;
    v32 = v29;
    v33 = v30;
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.debug.getter();
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v37 = swift_slowAlloc(32, -1);
      v88 = v36;
      v38 = v37;
      v85 = swift_slowAlloc(16, -1);
      v86 = v33;
      v39 = (_QWORD *)v85;
      v89 = swift_slowAlloc(32, -1);
      v105 = v89;
      *(_DWORD *)v38 = 138412802;
      v103 = (uint64_t)v31;
      v87 = v34;
      v40 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v38 + 4);
      *v39 = v31;

      *(_WORD *)(v38 + 12) = 2080;
      v41 = objc_msgSend(v32, "ic_loggingIdentifier");
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      v103 = sub_1003A4190(v42, v44, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v38 + 14);

      swift_bridgeObjectRelease(v44);
      *(_WORD *)(v38 + 22) = 2112;
      v45 = v86;
      v103 = (uint64_t)v86;
      v46 = v86;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v38 + 24);
      v47 = v85;
      *(_QWORD *)(v85 + 8) = v45;

      v34 = v87;
      _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v88, "%@: Field state prior to merge record %s: %@", (uint8_t *)v38, 0x20u);
      v48 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v47, 2, v48);
      swift_slowDealloc(v47, -1, -1);
      v49 = v89;
      swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

    }
    v15 = v98;
    v27 = v101;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v17, v101);
    a2 = v99;
    v23 = v91;
  }
  v50 = v95;
  EditNoteActivity.accountID.getter(-[NSObject setMergingRecord:](v95, "setMergingRecord:", 1));
  v52 = v51;
  v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v52);
  v54 = (void *)v96;
  -[NSObject mergeCloudKitRecord:accountID:approach:mergeableFieldState:](v50, "mergeCloudKitRecord:accountID:approach:mergeableFieldState:", v96, v53, 1, v23);

  -[NSObject setMergingRecord:](v50, "setMergingRecord:", 0);
  sub_100012CE8(v93, (uint64_t)v15, &qword_1005D6E60);
  if (v92(v15, 1, v27) == 1)
  {
    sub_100012DDC((uint64_t)v15, &qword_1005D6E60);
  }
  else
  {
    v55 = v90;
    v56 = v54;
    v57 = v23;
    v58 = v55;
    v59 = v23;
    v60 = v58;
    v61 = v56;
    v62 = v57;
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.debug.getter();
    v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v66 = swift_slowAlloc(32, -1);
      v95 = v63;
      v67 = v66;
      v68 = (_QWORD *)swift_slowAlloc(16, -1);
      v96 = swift_slowAlloc(32, -1);
      v105 = v96;
      *(_DWORD *)v67 = 138412802;
      v91 = v59;
      v103 = (uint64_t)v60;
      LODWORD(v94) = v65;
      v69 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v67 + 4);
      *v68 = v60;

      *(_WORD *)(v67 + 12) = 2080;
      v70 = objc_msgSend(v61, "ic_loggingIdentifier");
      v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v73 = v72;

      v103 = sub_1003A4190(v71, v73, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v67 + 14);

      swift_bridgeObjectRelease(v73);
      *(_WORD *)(v67 + 22) = 2112;
      v103 = (uint64_t)v62;
      v74 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v67 + 24);
      v23 = v91;
      v68[1] = v91;

      v75 = v95;
      _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v94, "%@: Field state after merge record %s: %@", (uint8_t *)v67, 0x20u);
      v76 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v68, 2, v76);
      swift_slowDealloc(v68, -1, -1);
      v77 = v96;
      swift_arrayDestroy(v96, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v67, -1, -1);

    }
    else
    {

      v23 = v59;
    }
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v101);
    a2 = v99;
  }
  v78 = v102;
  swift_bridgeObjectRetain(v102);
  v79 = v23;
  v80 = v100;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v100);
  v105 = *v80;
  *v80 = 0x8000000000000000;
  sub_10024EDFC((uint64_t)v79, a2, v78, isUniquelyReferenced_nonNull_native);
  v82 = *v80;
  *v80 = v105;

  swift_bridgeObjectRelease(v78);
  return swift_bridgeObjectRelease(v82);
}

uint64_t sub_1002A12B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v5[30] = a4;
  v5[31] = a5;
  v6 = type metadata accessor for NSManagedObjectContext.ObjectIDNotification(0);
  v5[32] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[33] = v7;
  v5[34] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D6F10);
  v5[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D6F18);
  v5[36] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[37] = v10;
  v5[38] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v5[39] = v11;
  v5[40] = static MainActor.shared.getter(v11);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v12);
  v5[41] = v13;
  v5[42] = v14;
  return swift_task_switch(sub_1002A139C, v13, v14);
}

uint64_t sub_1002A139C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v1 = *(_BYTE **)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248) + 16;
  sub_1000163BC(0, (unint64_t *)&unk_1005D39D0, NSManagedObjectContext_ptr);
  v4 = static NSManagedObjectContext.didMergeChangesNotifications(context:)(v2);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  *(_QWORD *)(v0 + 344) = v5;
  *(_QWORD *)(v0 + 352) = v9;
  v11 = static NSManagedObjectContext.didSaveNotifications(context:)(v2);
  *(_QWORD *)(v0 + 360) = v12;
  *(_QWORD *)(v0 + 368) = v13;
  *(_QWORD *)(v0 + 144) = v4;
  *(_QWORD *)(v0 + 152) = v6;
  *(_QWORD *)(v0 + 160) = v8;
  *(_QWORD *)(v0 + 168) = v10;
  *(_QWORD *)(v0 + 176) = v11;
  *(_QWORD *)(v0 + 184) = v12;
  *(_QWORD *)(v0 + 192) = v14;
  *(_QWORD *)(v0 + 200) = v13;
  v15 = sub_100012E18(&qword_1005D6F20);
  v16 = sub_100016638(&qword_1005D6F28, &qword_1005D6F20, (uint64_t)&protocol conformance descriptor for AsyncUncheckedSendableMapSequence<A, B>);
  merge<A, B>(_:_:)(v0 + 144, v0 + 176, v15, v15, v16, v16, v0 + 16);
  v17 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 16);
  v24 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 88) = v24;
  v23 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 104) = v23;
  v22 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 120) = v22;
  *(_QWORD *)(v0 + 136) = v17;
  v18 = sub_100012E18(&qword_1005D6F30);
  AsyncMerge2Sequence.makeAsyncIterator()(v18, v1);
  swift_release(v17);
  swift_release(v22);
  swift_release(v23);
  swift_release(v24);
  v19 = swift_beginAccess(v3, v0 + 208, 0, 0);
  *(_QWORD *)(v0 + 376) = static MainActor.shared.getter(v19);
  v20 = (_QWORD *)swift_task_alloc(dword_1005DD5F4);
  *(_QWORD *)(v0 + 384) = v20;
  *v20 = v0;
  v20[1] = sub_1002A1570;
  return AsyncMerge2Sequence.Iterator.next()(*(_QWORD *)(v0 + 280), *(_QWORD **)(v0 + 288));
}

uint64_t sub_1002A1570()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t (*v12)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 384));
  v3 = v2[47];
  if (v0)
  {
    v2[50] = v0;
    if (v3)
    {
      ObjectType = swift_getObjectType(v3);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v5);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v12 = sub_1002A1824;
  }
  else
  {
    v2[49] = v3;
    if (v3)
    {
      v9 = swift_getObjectType(v3);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
      v8 = v11;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v12 = sub_1002A1640;
  }
  return swift_task_switch(v12, v6, v8);
}

uint64_t sub_1002A1640()
{
  _QWORD *v0;

  swift_release(v0[49]);
  return swift_task_switch(sub_1002A1678, v0[41], v0[42]);
}

uint64_t sub_1002A1678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 360);
    v5 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 344);
    v6 = *(_QWORD *)(v0 + 352);
    v8 = *(_QWORD *)(v0 + 320);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
    swift_release(v8);
    swift_release(v6);
    swift_release(v7);
    swift_release(v5);
    swift_release(v4);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 248) + 16;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 272), v1, v2);
    Strong = swift_unknownObjectWeakLoadStrong(v9);
    *(_QWORD *)(v0 + 408) = Strong;
    if (Strong)
    {
      v11 = (_QWORD *)swift_task_alloc(dword_1005D6F3C);
      *(_QWORD *)(v0 + 416) = v11;
      *v11 = v0;
      v11[1] = sub_1002A1884;
      return sub_1002A1A28(*(_QWORD *)(v0 + 272));
    }
    v13 = *(_QWORD *)(v0 + 360);
    v14 = *(_QWORD *)(v0 + 368);
    v16 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 296);
    v24 = *(_QWORD *)(v0 + 304);
    v18 = *(_QWORD *)(v0 + 288);
    v19 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = *(_QWORD *)(v0 + 256);
    swift_release(*(_QWORD *)(v0 + 320));
    swift_release(v15);
    swift_release(v16);
    swift_release(v14);
    swift_release(v13);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v24, v18);
  }
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v23);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A1824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 232) = *(_QWORD *)(v0 + 400);
  v1 = sub_100012E18(&qword_1005D7A90);
  v2 = swift_dynamicCast(v1, v0 + 232, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1002A1884()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 416));
  return swift_task_switch(sub_1002A18D0, *(_QWORD *)(v1 + 328), *(_QWORD *)(v1 + 336));
}

uint64_t sub_1002A18D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 424) = static MainActor.shared.getter(v4);
  v5 = (_QWORD *)swift_task_alloc(dword_1005DD5F4);
  *(_QWORD *)(v0 + 432) = v5;
  *v5 = v0;
  v5[1] = sub_1002A1958;
  return AsyncMerge2Sequence.Iterator.next()(*(_QWORD *)(v0 + 280), *(_QWORD **)(v0 + 288));
}

uint64_t sub_1002A1958()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t (*v12)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 432));
  v3 = v2[53];
  if (v0)
  {
    v2[50] = v0;
    if (v3)
    {
      ObjectType = swift_getObjectType(v3);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v5);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v12 = sub_1002A1824;
  }
  else
  {
    v2[49] = v3;
    if (v3)
    {
      v9 = swift_getObjectType(v3);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
      v8 = v11;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v12 = sub_1002A1640;
  }
  return swift_task_switch(v12, v6, v8);
}

uint64_t sub_1002A1A28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v2[14] = a1;
  v2[15] = v1;
  v3 = sub_100012E18(&qword_1005DB340);
  v2[16] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[17] = v4;
  v2[18] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSSignpostError(0);
  v2[19] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[20] = v6;
  v2[21] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSSignpostID(0);
  v2[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[23] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v9);
  v2[25] = swift_task_alloc(v9);
  v2[26] = swift_task_alloc(v9);
  v2[27] = swift_task_alloc(v9);
  v10 = sub_100012E18(&qword_1005D6E60);
  v2[28] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[29] = swift_task_alloc(v11);
  v2[30] = swift_task_alloc(v11);
  v12 = type metadata accessor for Logger(0);
  v2[31] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[32] = v13;
  v2[33] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E18(&qword_1005D6C50);
  v2[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FastSyncStateMachine(0);
  v2[35] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[36] = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v2[37] = v17;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[38] = swift_task_alloc(v18);
  v2[39] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v2[40] = static MainActor.shared.getter(v19);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor, v20);
  v2[41] = v21;
  v2[42] = v22;
  return swift_task_switch(sub_1002A1BF8, v21, v22);
}

uint64_t sub_1002A1BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  os_log_type_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  void *v44;
  uint64_t v45;
  unsigned int (*v46)(_QWORD, _QWORD, _QWORD);
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_signpost_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint8_t *v71;
  os_signpost_id_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  void *v88;
  uint8_t *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  NSObject *log;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  os_log_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR___ICRealtimeCollaborationController_messageController);
  *(_QWORD *)(v0 + 344) = v2;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 320));
LABEL_34:
    v75 = *(_QWORD *)(v0 + 304);
    v77 = *(_QWORD *)(v0 + 264);
    v76 = *(_QWORD *)(v0 + 272);
    v79 = *(_QWORD *)(v0 + 232);
    v78 = *(_QWORD *)(v0 + 240);
    v81 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 216);
    v83 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 200);
    v119 = *(os_log_t *)(v0 + 168);
    v123 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v119);
    swift_task_dealloc(v123);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = v1 + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine;
  swift_beginAccess(v1 + OBJC_IVAR___ICRealtimeCollaborationController_stateMachine, v0 + 16, 0, 0);
  sub_100012CE8(v6, v5, &qword_1005D6C50);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3);
  v8 = *(_QWORD *)(v0 + 272);
  if (v7 == 1)
  {
    swift_release(*(_QWORD *)(v0 + 320));
    v9 = &qword_1005D6C50;
LABEL_33:
    sub_100012DDC(v8, v9);
    goto LABEL_34;
  }
  sub_1002A7D84(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 312));
  v10 = qword_1005CEBB0;
  swift_retain(v2);
  if (v10 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v12 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 248);
  v14 = sub_10012A0B0(v13, (uint64_t)qword_1005D6BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  v15 = swift_allocObject(&unk_100564498, 17, 7);
  *(_BYTE *)(v15 + 16) = 2;
  v16 = sub_1002A6498(v15);
  if ((v16 & 1) != 0)
  {
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 256) + 8);
    v17(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  }
  else
  {
    v18 = static os_log_type_t.fault.getter(v16);
    v19 = v18;
    v20 = Logger.logObject.getter(v18);
    v21 = v19;
    v22 = os_log_type_enabled(v20, v19);
    v24 = *(_QWORD *)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 264);
    v25 = *(_QWORD *)(v0 + 248);
    if (v22)
    {
      v120 = *(_QWORD *)(v0 + 256);
      v26 = swift_slowAlloc(32, -1);
      v114 = swift_slowAlloc(64, -1);
      v124 = v114;
      *(_DWORD *)v26 = 136315650;
      v27 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
      v116 = v25;
      v29 = v28;
      *(_QWORD *)(v0 + 88) = sub_1003A4190(v27, v28, &v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v26 + 4);
      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v26 + 12) = 2048;
      *(_QWORD *)(v0 + 96) = 704;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v26 + 14);
      *(_WORD *)(v26 + 22) = 2080;
      *(_QWORD *)(v0 + 104) = sub_1003A4190(0xD000000000000037, 0x8000000100485E20, &v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112, v26 + 24);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed assertion at %s:%lu: %s", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy(v114, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v114, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v17 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v17(v23, v116);
    }
    else
    {

      v17 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v17(v23, v25);
    }
  }
  v30 = swift_release(v15);
  v31 = (void *)NSManagedObjectContext.ObjectIDNotification.insertedObjectIDs.getter(v30);
  v32 = NSManagedObjectContext.ObjectIDNotification.updatedObjectIDs.getter();
  sub_1001412B8(v32, v31);
  v34 = v33;
  if (qword_1005CEBB8 != -1)
    swift_once(&qword_1005CEBB8, sub_100293494);
  v35 = *(_QWORD *)(v0 + 248);
  v36 = *(_QWORD *)(v0 + 256);
  v37 = *(_QWORD *)(v0 + 240);
  v121 = sub_10012A0B0(*(_QWORD *)(v0 + 224), (uint64_t)qword_1005D6C08);
  sub_100012CE8(v121, v37, &qword_1005D6E60);
  v38 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v36 + 48);
  if (v38(v37, 1, v35) == 1)
  {
    v39 = sub_100012DDC(*(_QWORD *)(v0 + 240), &qword_1005D6E60);
  }
  else
  {
    v40 = *(id *)(v0 + 120);
    swift_bridgeObjectRetain_n(v34, 2);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.debug.getter();
    v43 = os_log_type_enabled(v41, v42);
    v44 = *(void **)(v0 + 120);
    if (v43)
    {
      v45 = swift_slowAlloc(22, -1);
      v112 = (_QWORD *)swift_slowAlloc(8, -1);
      v117 = swift_slowAlloc(32, -1);
      v124 = v117;
      *(_DWORD *)v45 = 138412546;
      *(_QWORD *)(v0 + 72) = v44;
      log = v41;
      v46 = v38;
      v47 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v45 + 4);
      *v112 = v44;

      v38 = v46;
      *(_WORD *)(v45 + 12) = 2080;
      v48 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
      v49 = sub_100167280();
      v50 = Set.debugDescription.getter(v34, v48, v49);
      v52 = v51;
      *(_QWORD *)(v0 + 80) = sub_1003A4190(v50, v51, &v124);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v45 + 14);
      swift_bridgeObjectRelease_n(v34, 2);
      swift_bridgeObjectRelease(v52);
      _os_log_impl((void *)&_mh_execute_header, log, v42, "%@: Notified of changed objects: %s", (uint8_t *)v45, 0x16u);
      v53 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v112, 1, v53);
      swift_slowDealloc(v112, -1, -1);
      swift_arrayDestroy(v117, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v117, -1, -1);
      swift_slowDealloc(v45, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(v34, 2);

    }
    v39 = ((uint64_t (*)(_QWORD, _QWORD))v17)(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  }
  v54 = *(_QWORD *)(v0 + 120);
  v55 = (void *)NSManagedObjectContext.ObjectIDNotification.context.getter(v39);
  v56 = objc_msgSend(v55, "persistentStoreCoordinator");

  v57 = objc_msgSend(*(id *)(v54 + OBJC_IVAR___ICRealtimeCollaborationController_context), "persistentStoreCoordinator");
  v58 = v57;
  if (v56)
  {
    if (!v57)
    {
      v61 = *(_QWORD *)(v0 + 320);

      goto LABEL_31;
    }
    sub_1000163BC(0, &qword_1005D6F40, NSPersistentStoreCoordinator_ptr);
    v59 = v56;
    v60 = static NSObject.== infix(_:_:)(v59);

    if ((v60 & 1) == 0)
    {
      v61 = *(_QWORD *)(v0 + 320);
LABEL_31:
      swift_bridgeObjectRelease(v34);
      swift_release(v61);
      v73 = *(_QWORD *)(v0 + 248);
      v74 = *(_QWORD *)(v0 + 232);
      sub_100012CE8(v121, v74, &qword_1005D6E60);
      if (v38(v74, 1, v73) != 1)
      {
        v85 = Logger.logObject.getter(*(id *)(v0 + 120));
        v86 = static os_log_type_t.debug.getter();
        v87 = os_log_type_enabled(v85, v86);
        v88 = *(void **)(v0 + 120);
        if (v87)
        {
          v89 = (uint8_t *)swift_slowAlloc(12, -1);
          v118 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v89 = 138412290;
          *(_QWORD *)(v0 + 40) = v88;
          v90 = v88;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v89 + 4);
          *v118 = v88;

          _os_log_impl((void *)&_mh_execute_header, v85, v86, "%@: Ignoring context notification because the PSC doesn't match", v89, 0xCu);
          v91 = sub_100012E18(&qword_1005D3A30);
          swift_arrayDestroy(v118, 1, v91);
          swift_slowDealloc(v118, -1, -1);
          swift_slowDealloc(v89, -1, -1);
          swift_release(v2);

        }
        else
        {

          swift_release(v2);
        }
        v110 = *(_QWORD *)(v0 + 248);
        v111 = *(_QWORD *)(v0 + 232);
        sub_100145264(*(_QWORD *)(v0 + 312), type metadata accessor for FastSyncStateMachine);
        v17(v111, v110);
        goto LABEL_34;
      }
      v8 = *(_QWORD *)(v0 + 232);
      sub_100145264(*(_QWORD *)(v0 + 312), type metadata accessor for FastSyncStateMachine);
      swift_release(v2);
      v9 = &qword_1005D6E60;
      goto LABEL_33;
    }
  }
  else if (v57)
  {
    v61 = *(_QWORD *)(v0 + 320);

    goto LABEL_31;
  }
  if (qword_1005CEBC0 != -1)
    swift_once(&qword_1005CEBC0, sub_1002934E0);
  v122 = v34;
  v62 = type metadata accessor for OSSignposter(0);
  v63 = sub_10012A0B0(v62, (uint64_t)qword_1005D6C20);
  *(_QWORD *)(v0 + 352) = v63;
  v64 = static OSSignpostID.exclusive.getter(v63);
  v65 = OSSignposter.logHandle.getter(v64);
  v66 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v67 = *(_QWORD *)(v0 + 208);
    v68 = *(_QWORD *)(v0 + 176);
    v69 = *(_QWORD *)(v0 + 184);
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
    v70(v67, *(_QWORD *)(v0 + 216), v68);
    v71 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v71 = 0;
    v72 = OSSignpostID.rawValue.getter(v71);
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v65, v66, v72, "Make CKRecords", "", v71, 2u);
    swift_slowDealloc(v71, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v68);
  }
  else
  {
    v92 = *(_QWORD *)(v0 + 184);

    v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
  }
  *(_QWORD *)(v0 + 360) = v70;
  v94 = *(_QWORD *)(v0 + 304);
  v93 = *(_QWORD *)(v0 + 312);
  v95 = *(_QWORD *)(v0 + 288);
  v115 = *(_QWORD *)(v0 + 296);
  v96 = *(_QWORD *)(v0 + 208);
  v97 = *(_QWORD *)(v0 + 216);
  v99 = *(_QWORD *)(v0 + 176);
  v98 = *(_QWORD *)(v0 + 184);
  v100 = *(void **)(v0 + 120);
  v70(v96, v97, v99);
  v101 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v101, *(unsigned int *)(v101 + 48), *(unsigned __int16 *)(v101 + 52));
  *(_QWORD *)(v0 + 368) = OSSignpostIntervalState.init(id:isOpen:)(v96, 1);
  v102 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  *(_QWORD *)(v0 + 376) = v102;
  v102(v97, v99);
  sub_100145220(v93, v94, type metadata accessor for FastSyncStateMachine);
  v103 = *(unsigned __int8 *)(v95 + 80);
  v104 = (v103 + 32) & ~v103;
  v105 = swift_allocObject(&unk_100564768, v104 + v115, v103 | 7);
  *(_QWORD *)(v0 + 384) = v105;
  *(_QWORD *)(v105 + 16) = v122;
  *(_QWORD *)(v105 + 24) = v100;
  sub_1002A7D84(v94, v105 + v104);
  v106 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v107 = v100;
  v108 = (_QWORD *)swift_task_alloc(v106);
  *(_QWORD *)(v0 + 392) = v108;
  v109 = sub_100012E18(&qword_1005CF7A0);
  *v108 = v0;
  v108[1] = sub_1002A2748;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 48, sub_1002A7EDC, v105, v109);
}

uint64_t sub_1002A2748()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 384);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  swift_release(v2);
  return swift_task_switch(sub_1002A279C, *(_QWORD *)(v1 + 328), *(_QWORD *)(v1 + 336));
}

uint64_t sub_1002A279C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *format;
  os_signpost_type_t v45;
  uint64_t v46;
  uint64_t v47;

  swift_release(*(_QWORD *)(v0 + 320));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_bridgeObjectRetain_n(v1, 2);
  v3 = OSSignposter.logHandle.getter(v2);
  v4 = OSSignpostIntervalState.signpostID.getter();
  v5 = static os_signpost_type_t.end.getter(v4);
  v6 = (unint64_t)v1 >> 62;
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v45 = v5;
    v7 = *(_QWORD *)(v0 + 368);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 152);
    v11 = swift_retain(v7);
    checkForErrorAndConsumeState(state:)(v11);
    swift_release(v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v9, v10) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v12 = 0;
      format = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
      format = "Count: %ld";
      v12 = 1;
    }
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 360))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
    v16 = swift_slowAlloc(12, -1);
    *(_BYTE *)v16 = 0;
    *(_BYTE *)(v16 + 1) = v12;
    *(_WORD *)(v16 + 2) = 2048;
    if (v6)
    {
      if (v1 < 0)
        v43 = v1;
      else
        v43 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v17 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease(v1);
    }
    else
    {
      v17 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v18 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
    v20 = *(_QWORD *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 200);
    v21 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease(v1);
    *(_QWORD *)(v0 + 64) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v16 + 4);
    v22 = swift_bridgeObjectRelease(v1);
    v23 = OSSignpostID.rawValue.getter(v22);
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, v45, v23, "Make CKRecords", format, (uint8_t *)v16, 0xCu);
    swift_slowDealloc(v16, -1, -1);

    v18(v19, v21);
    v18(v20, v21);
    v6 = (unint64_t)v1 >> 62;
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
    v14 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease_n(v1, 2);

    v13(v14, v15);
  }
  if (v6)
  {
    if (v1 < 0)
      v42 = v1;
    else
      v42 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v24 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v24 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v25 = *(_QWORD *)(v0 + 368);
  v26 = *(_QWORD *)(v0 + 344);
  v27 = *(_QWORD *)(v0 + 312);
  if (v24)
  {
    v29 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 56) = v1;
    swift_bridgeObjectRetain(v1);
    v31 = sub_100012E18(&qword_1005CF798);
    AsyncStream.Continuation.yield(_:)(v0 + 56, v31);
    swift_release(v25);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    sub_100145264(v27, type metadata accessor for FastSyncStateMachine);
    swift_release(v26);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    sub_100145264(*(_QWORD *)(v0 + 312), type metadata accessor for FastSyncStateMachine);
    swift_release(v25);
    swift_bridgeObjectRelease(v1);
    swift_release(v26);
  }
  v32 = *(_QWORD *)(v0 + 304);
  v34 = *(_QWORD *)(v0 + 264);
  v33 = *(_QWORD *)(v0 + 272);
  v36 = *(_QWORD *)(v0 + 232);
  v35 = *(_QWORD *)(v0 + 240);
  v38 = *(_QWORD *)(v0 + 208);
  v37 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  v46 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002A2B68(void **a1@<X0>, void (**a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, void (***a4)(char *, uint64_t)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  id v24;
  void (**v25)(char *, uint64_t);
  void *v26;
  uint64_t v27;
  void *v28;
  void (**v29)(char *, uint64_t);
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  void (**v40)(char *, uint64_t);
  uint64_t v41;
  char v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (**v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (**v58)(char *, uint64_t);
  void (**v59)(char *, uint64_t);
  char *v60;
  id v61;
  char *v62;
  void (**v63)(char *, uint64_t);
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char **v70;
  void (**v71)(char *, uint64_t);
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  id v76;
  char *v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  const char *v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  id v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  id v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  id v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  os_log_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (**v116)(os_log_t, uint64_t, uint64_t);
  void (**v117)(char *, uint64_t);
  os_unfair_lock_s *v118;
  uint64_t *v119;
  os_unfair_lock_s *v120;
  void (**v121)(char *, uint64_t);
  id v122;
  void (**v123)(char *, uint64_t);
  id v124;
  NSObject *v125;
  os_log_type_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  void (**v131)(char *, uint64_t);
  void (**v132)(char *, uint64_t);
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  os_log_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  id v149;
  uint64_t v150;
  _QWORD *v151;
  char *v152;
  id v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  os_log_t v157;
  uint64_t v158;
  uint64_t v159;
  void (**v160)(char *, uint64_t);
  uint64_t v161;
  char v162;
  uint64_t v163;
  id v164;
  os_log_t v165;
  uint64_t v166;
  char **v167;
  void (**v168)(char *, uint64_t);
  id v169;
  os_log_t v170;
  void (**v171)(char *, uint64_t);
  void (***v172)(char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  void (**v175)(char *, uint64_t);
  uint64_t v176;

  v5 = v4;
  v10 = sub_100012E18(&qword_1005D6E60);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v163 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v170 = (os_log_t)((char *)&v163 - v14);
  v15 = type metadata accessor for FastSyncStateMachine(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v163 - v19;
  v21 = *a1;
  v22 = objc_msgSend(v21, "ic_isModernNoteType");
  v172 = a4;
  if ((v22 & 1) == 0 && !objc_msgSend(v21, "ic_isBaseAttachmentType"))
    goto LABEL_19;
  v173 = v4;
  v23 = *(void (**)(char *, uint64_t))((char *)a2 + OBJC_IVAR___ICRealtimeCollaborationController_context);
  v175 = 0;
  v24 = objc_msgSend(v23, "existingObjectWithID:error:", v21, &v175);
  v25 = v175;
  if (!v24)
  {
    v53 = v175;
    v54 = _convertNSErrorToError(_:)(v25);

    swift_willThrow(v55);
    swift_errorRelease(v54);
    v5 = 0;
    a4 = v172;
    goto LABEL_19;
  }
  v26 = v24;
  v171 = a2;
  v27 = objc_opt_self(ICCloudSyncingObject);
  v28 = (void *)swift_dynamicCastObjCClass(v26, v27);
  v29 = v25;
  if (!v28 || (v169 = v28, (v30 = objc_msgSend(v28, "identifier")) == 0))
  {

    a4 = v172;
    v5 = v173;
    a2 = v171;
LABEL_19:
    if (qword_1005CEBB8 != -1)
      swift_once(&qword_1005CEBB8, sub_100293494);
    v56 = sub_10012A0B0(v10, (uint64_t)qword_1005D6C08);
    sub_100012CE8(v56, (uint64_t)v13, &qword_1005D6E60);
    v57 = type metadata accessor for Logger(0);
    v58 = *(void (***)(char *, uint64_t))(v57 - 8);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v58[6])(v13, 1, v57) == 1)
    {
      sub_100012DDC((uint64_t)v13, &qword_1005D6E60);
      v59 = 0;
    }
    else
    {
      v173 = v5;
      v60 = a2;
      v61 = v21;
      v62 = v60;
      v63 = (void (**)(char *, uint64_t))v61;
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.debug.getter();
      v66 = v65;
      if (os_log_type_enabled(v64, v65))
      {
        v67 = swift_slowAlloc(22, -1);
        LODWORD(v169) = v66;
        v68 = v67;
        v167 = (char **)swift_slowAlloc(16, -1);
        *(_DWORD *)v68 = 138412546;
        v170 = v64;
        v171 = v58;
        v175 = (void (**)(char *, uint64_t))v62;
        v168 = (void (**)(char *, uint64_t))&v176;
        v69 = v62;
        v58 = v171;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, &v176, v68 + 4);
        v70 = v167;
        *v167 = v62;

        *(_WORD *)(v68 + 12) = 2112;
        v175 = v63;
        v71 = v63;
        v64 = v170;
        a4 = v172;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, v168, v68 + 14);
        v70[1] = (char *)v63;

        _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v169, "%@: Skipping object because it is not relevant: %@", (uint8_t *)v68, 0x16u);
        v72 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v70, 2, v72);
        swift_slowDealloc(v70, -1, -1);
        swift_slowDealloc(v68, -1, -1);
      }
      else
      {

      }
      v58[1](v13, v57);
      v59 = 0;
    }
    goto LABEL_63;
  }
  v31 = v30;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v34 = v33;

  v37 = EditNoteActivity.noteID.getter(v35);
  v38 = v32;
  v39 = v32 == v37 && v34 == v36;
  v40 = v171;
  v168 = (void (**)(char *, uint64_t))v38;
  if (v39)
  {
    swift_bridgeObjectRelease(v34);
    sub_100145220(a3, (uint64_t)v20, type metadata accessor for FastSyncStateMachine);
    goto LABEL_28;
  }
  v41 = v36;
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v34, v37, v36, 0);
  swift_bridgeObjectRelease(v41);
  sub_100145220(a3, (uint64_t)v20, type metadata accessor for FastSyncStateMachine);
  if ((v42 & 1) != 0)
  {
LABEL_28:
    sub_100145264((uint64_t)v20, type metadata accessor for FastSyncStateMachine);
    goto LABEL_29;
  }
  v43 = objc_msgSend(v169, "parentCloudObject");
  if (!v43
    || (v44 = v43, v45 = objc_msgSend(v43, "identifier"), v44, !v45))
  {
    EditNoteActivity.noteID.getter(v43);
    v52 = v112;
    goto LABEL_46;
  }
  v167 = (char **)static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v47 = v46;

  v48 = v47;
  v50 = EditNoteActivity.noteID.getter(v49);
  v52 = v51;
  if (!v48)
  {
LABEL_46:
    sub_100145264((uint64_t)v20, type metadata accessor for FastSyncStateMachine);
    swift_bridgeObjectRelease(v34);
    v34 = v52;
LABEL_47:
    swift_bridgeObjectRelease(v34);
    v113 = v170;
    if (qword_1005CEBB8 != -1)
      swift_once(&qword_1005CEBB8, sub_100293494);
    v114 = sub_10012A0B0(v10, (uint64_t)qword_1005D6C08);
    sub_100012CE8(v114, (uint64_t)v113, &qword_1005D6E60);
    v115 = type metadata accessor for Logger(0);
    v116 = *(unsigned int (***)(os_log_t, uint64_t, uint64_t))(v115 - 8);
    if (v116[6](v113, 1, v115) == 1)
    {

      sub_100012DDC((uint64_t)v113, &qword_1005D6E60);
      v59 = 0;
      a4 = v172;
    }
    else
    {
      v171 = (void (**)(char *, uint64_t))v116;
      sub_100145220(a3, (uint64_t)v18, type metadata accessor for FastSyncStateMachine);
      v121 = v40;
      v122 = v26;
      v123 = v121;
      v124 = v122;
      v125 = Logger.logObject.getter(v124);
      v126 = static os_log_type_t.debug.getter();
      v127 = v126;
      if (os_log_type_enabled(v125, v126))
      {
        v128 = swift_slowAlloc(32, -1);
        v129 = swift_slowAlloc(8, -1);
        v164 = v124;
        v130 = (_QWORD *)v129;
        v166 = v129;
        v168 = (void (**)(char *, uint64_t))swift_slowAlloc(64, -1);
        v174 = (uint64_t)v123;
        v175 = v168;
        *(_DWORD *)v128 = 138412802;
        LODWORD(v167) = v127;
        v131 = v123;
        v165 = v125;
        v132 = v131;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v128 + 4);
        *v130 = v123;

        *(_WORD *)(v128 + 12) = 2080;
        v133 = objc_msgSend(v169, "shortLoggingDescription");
        v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
        v136 = v135;

        v137 = v134;
        v113 = v170;
        v174 = sub_1003A4190(v137, v136, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v128 + 14);
        v138 = v164;

        v139 = swift_bridgeObjectRelease(v136);
        *(_WORD *)(v128 + 22) = 2080;
        v140 = EditNoteActivity.noteID.getter(v139);
        v142 = v141;
        v174 = sub_1003A4190(v140, v141, (uint64_t *)&v175);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v128 + 24);
        swift_bridgeObjectRelease(v142);
        sub_100145264((uint64_t)v18, type metadata accessor for FastSyncStateMachine);
        v143 = v165;
        _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v167, "%@: Skipping object %s because it isn't parented to note %s", (uint8_t *)v128, 0x20u);
        v144 = sub_100012E18(&qword_1005D3A30);
        v145 = v166;
        swift_arrayDestroy(v166, 1, v144);
        swift_slowDealloc(v145, -1, -1);
        v146 = (uint64_t)v168;
        swift_arrayDestroy(v168, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v146, -1, -1);
        swift_slowDealloc(v128, -1, -1);

      }
      else
      {

        sub_100145264((uint64_t)v18, type metadata accessor for FastSyncStateMachine);
      }
      a4 = v172;
      v171[1]((char *)v113, v115);
      v59 = 0;
    }
    goto LABEL_63;
  }
  if (v167 == (char **)v50 && v48 == v51)
  {
    swift_bridgeObjectRelease(v48);
    sub_100145264((uint64_t)v20, type metadata accessor for FastSyncStateMachine);
    swift_bridgeObjectRelease(v48);
    goto LABEL_29;
  }
  v161 = v48;
  v162 = _stringCompareWithSmolCheck(_:_:expecting:)(v167, v48, v50, v51, 0);
  swift_bridgeObjectRelease(v52);
  sub_100145264((uint64_t)v20, type metadata accessor for FastSyncStateMachine);
  swift_bridgeObjectRelease(v161);
  if ((v162 & 1) == 0)
  {
    v40 = v171;
    goto LABEL_47;
  }
LABEL_29:
  v73 = v169;
  if ((objc_msgSend(v169, "isUnsupported") & 1) != 0)
  {
    swift_bridgeObjectRelease(v34);
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v74 = type metadata accessor for Logger(0);
    sub_10012A0B0(v74, (uint64_t)qword_1005D6BF0);
    v75 = v171;
    v76 = v26;
    v77 = v75;
    v78 = v76;
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc(22, -1);
      v82 = swift_slowAlloc(8, -1);
      v170 = v79;
      v83 = (_QWORD *)v82;
      v168 = (void (**)(char *, uint64_t))v82;
      v171 = (void (**)(char *, uint64_t))swift_slowAlloc(32, -1);
      v174 = (uint64_t)v77;
      v175 = v171;
      *(_DWORD *)v81 = 138412546;
      v84 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 4);
      *v83 = v77;

      *(_WORD *)(v81 + 12) = 2080;
      v85 = objc_msgSend(v169, "shortLoggingDescription");
      v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
      v88 = v87;

      v174 = sub_1003A4190(v86, v88, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 14);

      swift_bridgeObjectRelease(v88);
      v89 = "%@: Skipping record because it is unsupported: %s";
LABEL_60:
      v157 = v170;
      _os_log_impl((void *)&_mh_execute_header, v170, v80, v89, (uint8_t *)v81, 0x16u);
      v158 = sub_100012E18(&qword_1005D3A30);
      v159 = (uint64_t)v168;
      swift_arrayDestroy(v168, 1, v158);
      swift_slowDealloc(v159, -1, -1);
      v160 = v171;
      swift_arrayDestroy(v171, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v160, -1, -1);
      swift_slowDealloc(v81, -1, -1);

LABEL_62:
      v59 = 0;
      a4 = v172;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  v90 = objc_msgSend(v73, "needsInitialFetchFromCloudCheckingParent");
  v91 = v173;
  if ((v90 & 1) != 0)
  {
    swift_bridgeObjectRelease(v34);
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v92 = type metadata accessor for Logger(0);
    sub_10012A0B0(v92, (uint64_t)qword_1005D6BF0);
    v93 = v171;
    v94 = v26;
    v77 = v93;
    v78 = v94;
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc(22, -1);
      v95 = swift_slowAlloc(8, -1);
      v170 = v79;
      v96 = (_QWORD *)v95;
      v168 = (void (**)(char *, uint64_t))v95;
      v171 = (void (**)(char *, uint64_t))swift_slowAlloc(32, -1);
      v174 = (uint64_t)v77;
      v175 = v171;
      *(_DWORD *)v81 = 138412546;
      v97 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 4);
      *v96 = v77;

      *(_WORD *)(v81 + 12) = 2080;
      v98 = objc_msgSend(v169, "shortLoggingDescription");
      v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
      v101 = v100;

      v174 = sub_1003A4190(v99, v101, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 14);

      swift_bridgeObjectRelease(v101);
      v89 = "%@: Skipping record because it is a placeholder: %s";
      goto LABEL_60;
    }
LABEL_61:

    goto LABEL_62;
  }
  if (objc_msgSend(v73, "isSharedViaICloud")
    && (objc_msgSend(v73, "isSharedReadOnly") & 1) != 0)
  {
    swift_bridgeObjectRelease(v34);
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v102 = type metadata accessor for Logger(0);
    sub_10012A0B0(v102, (uint64_t)qword_1005D6BF0);
    v103 = v171;
    v104 = v26;
    v77 = v103;
    v78 = v104;
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc(22, -1);
      v105 = swift_slowAlloc(8, -1);
      v170 = v79;
      v106 = (_QWORD *)v105;
      v168 = (void (**)(char *, uint64_t))v105;
      v171 = (void (**)(char *, uint64_t))swift_slowAlloc(32, -1);
      v174 = (uint64_t)v77;
      v175 = v171;
      *(_DWORD *)v81 = 138412546;
      v107 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 4);
      *v106 = v77;

      *(_WORD *)(v81 + 12) = 2080;
      v108 = objc_msgSend(v169, "shortLoggingDescription");
      v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v108);
      v111 = v110;

      v174 = sub_1003A4190(v109, v111, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 14);

      swift_bridgeObjectRelease(v111);
      v89 = "%@: Skipping record because the current user does not have write permissions: %s";
      goto LABEL_60;
    }
    goto LABEL_61;
  }
  if (!objc_msgSend(v73, "hasAllMandatoryFields"))
  {
    swift_bridgeObjectRelease(v34);
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v147 = type metadata accessor for Logger(0);
    sub_10012A0B0(v147, (uint64_t)qword_1005D6BF0);
    v148 = v171;
    v149 = v26;
    v77 = v148;
    v78 = v149;
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc(22, -1);
      v150 = swift_slowAlloc(8, -1);
      v170 = v79;
      v151 = (_QWORD *)v150;
      v168 = (void (**)(char *, uint64_t))v150;
      v171 = (void (**)(char *, uint64_t))swift_slowAlloc(32, -1);
      v174 = (uint64_t)v77;
      v175 = v171;
      *(_DWORD *)v81 = 138412546;
      v152 = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 4);
      *v151 = v77;

      *(_WORD *)(v81 + 12) = 2080;
      v153 = objc_msgSend(v169, "shortLoggingDescription");
      v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(v153);
      v156 = v155;

      v174 = sub_1003A4190(v154, v156, (uint64_t *)&v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v81 + 14);

      swift_bridgeObjectRelease(v156);
      v89 = "%@: Skipping record because it is missing mandatory fields: %s";
      goto LABEL_60;
    }
    goto LABEL_61;
  }
  v117 = v171;
  v118 = *(os_unfair_lock_s **)((char *)v171 + OBJC_IVAR___ICRealtimeCollaborationController_mergeableFieldStateCache);
  v119 = (uint64_t *)&v118[4];
  v120 = v118 + 6;
  os_unfair_lock_lock(v118 + 6);
  sub_1002A3C70(v119, (uint64_t)v168, v34, v117, v73, &v175);
  if (!v91)
  {
    os_unfair_lock_unlock(v120);
    v59 = v175;
    swift_bridgeObjectRelease(v34);

    a4 = v172;
LABEL_63:
    *a4 = v59;
    return;
  }
  os_unfair_lock_unlock(v120);
  __break(1u);
}

uint64_t sub_1002A3C70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, id a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  NSDictionary v28;
  int v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  id v48;
  _QWORD *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  objc_class *v56;
  id v57;
  NSObject *v58;
  id v59;
  char v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  os_log_type_t v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  void *v75;
  Swift::String v76;
  Swift::String v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  char *v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  int v93;
  uint64_t v94;
  id v95;
  _QWORD *v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  id v104;
  _QWORD *v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  objc_class *v111;
  char v112;
  uint64_t v113;
  uint64_t result;
  id v115;
  _QWORD *v116;
  uint64_t v117;
  id v118;
  uint64_t *v119;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v121;
  id v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  NSObject *v128;
  os_log_type_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  id v135;
  id v136;
  id v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  id v145;
  _QWORD *v146;
  int v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  NSObject *v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  objc_class *v157;
  id v158;
  uint64_t v159;
  NSObject *isa;
  id v161;
  id v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  unint64_t v166[2];
  uint64_t v167;
  uint64_t v168;

  v155 = a6;
  v162 = a4;
  v10 = type metadata accessor for Logger(0);
  v11 = *(NSObject **)(v10 - 8);
  __chkstk_darwin(v10);
  v156 = (char *)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D6E60);
  v14 = __chkstk_darwin(v13);
  v150 = (uint64_t)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v145 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v145 - v19;
  v153 = a1;
  v21 = *a1;
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain(a3);
    v22 = sub_100248A98(a2, a3);
    if ((v23 & 1) != 0)
    {
      v24 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_bridgeObjectRelease(a3);
      goto LABEL_6;
    }
    swift_bridgeObjectRelease(a3);
  }
  v24 = objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
LABEL_6:
  v158 = v18;
  v152 = a2;
  v154 = a3;
  v161 = v24;
  v25 = objc_msgSend(v24, "copy");
  v164 = a5;
  if (v25)
  {
    v26 = v25;
    v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    a5 = v164;
    v28.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28.super.isa = 0;
  }
  if (qword_1005CEBB8 != -1)
    swift_once(&qword_1005CEBB8, sub_100293494);
  v159 = sub_10012A0B0(v13, (uint64_t)qword_1005D6C08);
  sub_100012CE8(v159, (uint64_t)v20, &qword_1005D6E60);
  isa = v11[6].isa;
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v20, 1, v10);
  v163 = v10;
  v157 = v28.super.isa;
  if (v29 == 1)
  {
    sub_100012DDC((uint64_t)v20, &qword_1005D6E60);
  }
  else
  {
    v30 = v162;
    v31 = a5;
    v32 = v161;
    v33 = v30;
    v34 = v31;
    v35 = v32;
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.debug.getter();
    v38 = v37;
    v149 = v36;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc(32, -1);
      v40 = (_QWORD *)swift_slowAlloc(16, -1);
      v146 = v40;
      v148 = swift_slowAlloc(32, -1);
      v165 = v148;
      *(_DWORD *)v39 = 138412802;
      v151 = v11;
      v147 = v38;
      v167 = (uint64_t)v33;
      v145 = v35;
      v41 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v39 + 4);
      *v40 = v33;

      *(_WORD *)(v39 + 12) = 2080;
      v42 = objc_msgSend(v34, "shortLoggingDescription");
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v45 = v44;

      v167 = sub_1003A4190(v43, v45, &v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v39 + 14);

      v46 = v45;
      v11 = v151;
      swift_bridgeObjectRelease(v46);
      *(_WORD *)(v39 + 22) = 2112;
      v47 = v145;
      v167 = (uint64_t)v145;
      v48 = v145;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v39 + 24);
      v49 = v146;
      v146[1] = v47;

      v50 = v149;
      _os_log_impl((void *)&_mh_execute_header, v149, (os_log_type_t)v147, "%@: Previous field state for object %s: %@", (uint8_t *)v39, 0x20u);
      v51 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v49, 2, v51);
      swift_slowDealloc(v49, -1, -1);
      v52 = v148;
      swift_arrayDestroy(v148, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v39, -1, -1);

    }
    else
    {

    }
    v28.super.isa = v157;
    v10 = v163;
    ((void (*)(char *, uint64_t))v11[1].isa)(v20, v163);
  }
  v53 = v156;
  if (qword_1005CEBB0 != -1)
    swift_once(&qword_1005CEBB0, sub_10029344C);
  v54 = sub_10012A0B0(v10, (uint64_t)qword_1005D6BF0);
  ((void (*)(char *, uint64_t, uint64_t))v11[2].isa)(v53, v54, v10);
  v55 = swift_allocObject(&unk_100564498, 17, 7);
  *(_BYTE *)(v55 + 16) = 2;
  v56 = v28.super.isa;
  v57 = v162;
  v58 = v11;
  v59 = v161;
  v60 = sub_1002A7F84(v55, (uint64_t)v59, (uint64_t)v28.super.isa);

  v161 = v57;
  if ((v60 & 1) != 0)
  {

    v62 = (char *)v58[1].isa;
    ((void (*)(char *, uint64_t))v62)(v53, v10);
  }
  else
  {
    v151 = v58;
    v63 = static os_log_type_t.fault.getter(v61);
    v64 = v63;
    v65 = Logger.logObject.getter(v63);
    if (os_log_type_enabled(v65, v64))
    {
      v66 = swift_slowAlloc(32, -1);
      v149 = v56;
      v67 = v66;
      v162 = (id)swift_slowAlloc(64, -1);
      v167 = (uint64_t)v162;
      *(_DWORD *)v67 = 136315650;
      v68 = StaticString.description.getter("MobileNotes/RealtimeCollaborationController.swift", 49, 2);
      v70 = v69;
      v165 = sub_1003A4190(v68, v69, &v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166, v67 + 4);
      swift_bridgeObjectRelease(v70);
      *(_WORD *)(v67 + 12) = 2048;
      v165 = 774;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166, v67 + 14);
      *(_WORD *)(v67 + 22) = 2080;
      v165 = 0;
      v166[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(64);
      LODWORD(v148) = v64;
      v71 = v161;
      v72 = objc_msgSend(v161, "description");
      v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v75 = v74;

      v76._countAndFlagsBits = v73;
      v76._object = v75;
      String.append(_:)(v76);
      swift_bridgeObjectRelease(v75);
      v77._object = (void *)0x8000000100485E60;
      v77._countAndFlagsBits = 0xD00000000000003ELL;
      String.append(_:)(v77);
      v78 = v166[0];
      v165 = sub_1003A4190(v165, v166[0], &v167);
      v28.super.isa = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166, v67 + 24);
      swift_bridgeObjectRelease(v78);
      v57 = v71;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v148, "Failed assertion at %s:%lu: %s", (uint8_t *)v67, 0x20u);
      v79 = v162;
      swift_arrayDestroy(v162, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      v80 = v67;
      v56 = (objc_class *)v149;
      swift_slowDealloc(v80, -1, -1);

      v62 = (char *)v151[1].isa;
      v81 = v156;
    }
    else
    {
      v57 = v161;

      v62 = (char *)v151[1].isa;
      v81 = v53;
    }
    v10 = v163;
    ((void (*)(char *, uint64_t))v62)(v81, v163);
  }
  swift_release(v55);
  v82 = v164;
  v162 = objc_msgSend(v164, "makeCloudKitRecordForApproach:mergeableFieldState:", 1, v59);
  v83 = (uint64_t)v158;
  sub_100012CE8(v159, (uint64_t)v158, &qword_1005D6E60);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))isa)(v83, 1, v10) == 1)
  {
    sub_100012DDC(v83, &qword_1005D6E60);
    v84 = v82;
    if (!v28.super.isa)
      goto LABEL_35;
  }
  else
  {
    v156 = v62;
    v85 = v57;
    v86 = v82;
    v87 = v59;
    v88 = v85;
    v89 = v86;
    v90 = v87;
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.debug.getter();
    v93 = v92;
    v151 = v91;
    if (os_log_type_enabled(v91, v92))
    {
      v94 = swift_slowAlloc(32, -1);
      v95 = v59;
      v96 = (_QWORD *)swift_slowAlloc(16, -1);
      v146 = v96;
      v148 = swift_slowAlloc(32, -1);
      v165 = v148;
      *(_DWORD *)v94 = 138412802;
      v147 = v93;
      v149 = v56;
      v167 = (uint64_t)v88;
      v97 = v88;
      v145 = v90;
      v98 = v97;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v94 + 4);
      *v96 = v88;
      v59 = v95;

      *(_WORD *)(v94 + 12) = 2080;
      v99 = objc_msgSend(v89, "shortLoggingDescription");
      v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
      v102 = v101;

      v167 = sub_1003A4190(v100, v102, &v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v94 + 14);

      v103 = v102;
      v56 = (objc_class *)v149;
      swift_bridgeObjectRelease(v103);
      *(_WORD *)(v94 + 22) = 2112;
      v167 = (uint64_t)v145;
      v104 = v145;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v94 + 24);
      v105 = v146;
      v146[1] = v95;

      v106 = v151;
      _os_log_impl((void *)&_mh_execute_header, v151, (os_log_type_t)v147, "%@: Next field state for object %s: %@", (uint8_t *)v94, 0x20u);
      v107 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v105, 2, v107);
      swift_slowDealloc(v105, -1, -1);
      v108 = v148;
      swift_arrayDestroy(v148, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v108, -1, -1);
      v109 = v94;
      v83 = (uint64_t)v158;
      swift_slowDealloc(v109, -1, -1);

    }
    else
    {

    }
    v10 = v163;
    v62 = v156;
    ((void (*)(uint64_t, uint64_t))v156)(v83, v163);
    v84 = v164;
    if (!v157)
      goto LABEL_35;
  }
  sub_1000163BC(0, &qword_1005D6F48, NSDictionary_ptr);
  v110 = v59;
  v111 = v56;
  v112 = static NSObject.== infix(_:_:)(v110);

  if ((v112 & 1) == 0)
  {
LABEL_35:
    v117 = v154;
    swift_bridgeObjectRetain(v154);
    v118 = v59;
    v119 = v153;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v153);
    v165 = *v119;
    *v119 = 0x8000000000000000;
    sub_10024EDFC((uint64_t)v118, v152, v117, isUniquelyReferenced_nonNull_native);
    v121 = *v119;
    *v119 = v165;

    swift_bridgeObjectRelease(v117);
    result = swift_bridgeObjectRelease(v121);
    v116 = v155;
    v115 = v162;
    goto LABEL_36;
  }
  v113 = v150;
  sub_100012CE8(v159, v150, &qword_1005D6E60);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))isa)(v113, 1, v10) == 1)
  {

    result = sub_100012DDC(v113, &qword_1005D6E60);
    v115 = 0;
    v116 = v155;
  }
  else
  {
    v122 = v161;
    v123 = v84;
    v124 = v122;
    v125 = v123;
    v126 = v124;
    v127 = v125;
    v128 = Logger.logObject.getter(v127);
    v129 = static os_log_type_t.debug.getter();
    v130 = v129;
    if (os_log_type_enabled(v128, v129))
    {
      v131 = swift_slowAlloc(22, -1);
      LODWORD(v161) = v130;
      v132 = v131;
      v133 = swift_slowAlloc(8, -1);
      v158 = v127;
      v159 = v133;
      v134 = (_QWORD *)v133;
      v164 = (id)swift_slowAlloc(32, -1);
      v165 = (uint64_t)v164;
      *(_DWORD *)v132 = 138412546;
      isa = v128;
      v167 = (uint64_t)v126;
      v156 = v62;
      v135 = v126;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v132 + 4);
      *v134 = v126;

      *(_WORD *)(v132 + 12) = 2080;
      v136 = v158;
      v137 = objc_msgSend(v158, "shortLoggingDescription");
      v138 = static String._unconditionallyBridgeFromObjectiveC(_:)(v137);
      v140 = v139;

      v141 = v138;
      v10 = v163;
      v167 = sub_1003A4190(v141, v140, &v165);
      v62 = v156;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v132 + 14);

      swift_bridgeObjectRelease(v140);
      v128 = isa;
      _os_log_impl((void *)&_mh_execute_header, isa, (os_log_type_t)v161, "%@: Skipping object %s because nothing has changed", (uint8_t *)v132, 0x16u);
      v142 = sub_100012E18(&qword_1005D3A30);
      v143 = v159;
      swift_arrayDestroy(v159, 1, v142);
      swift_slowDealloc(v143, -1, -1);
      v144 = v164;
      swift_arrayDestroy(v164, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v144, -1, -1);
      swift_slowDealloc(v132, -1, -1);
    }
    else
    {

    }
    v116 = v155;
    result = ((uint64_t (*)(uint64_t, uint64_t))v62)(v150, v10);
    v115 = 0;
  }
LABEL_36:
  *v116 = v115;
  return result;
}

void sub_1002A4AE0(uint64_t a1, uint64_t a2, NSObject *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *ObjCClassFromMetadata;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  void *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSNumber v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  Class isa;
  Class v33;
  uint64_t v34;
  Class v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  NSObject *v46;
  NSObject *v47;
  NSObject **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject **v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a4;
  v59 = a3;
  v6 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EditNoteActivity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v13);
  v15 = GroupSession.activity.getter(ObjCClassFromMetadata);
  EditNoteActivity.noteID.getter(v15);
  v17 = v16;
  v18 = *(void (**)(_QWORD, _QWORD))(v10 + 8);
  v19 = v9;
  v20 = v18;
  v18(v12, v19);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v22 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v21, a2);

  if (v22)
  {
    v23 = sub_100012E18(&qword_1005CF6F0);
    v24 = swift_allocObject(v23, 40, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100456F30;
    v25.super.super.isa = Int64._bridgeToObjectiveC()().super.super.isa;
    *(NSNumber *)(v24 + 32) = v25;
    v65 = v24;
    v26 = specialized Array._endMutation()(v25.super.super.isa);
    v27 = v65;
    v28 = GroupSession.id.getter(v26);
    UUID.uuidString.getter(v28);
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v61);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    sub_1002A4F90();
    v33 = Int._bridgeToObjectiveC()().super.super.isa;
    v34 = GroupSession.activeParticipants.getter(v33);
    swift_bridgeObjectRelease(v34);
    v35 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v62, "submitFastSyncSessionStartForNote:sessionID:participantVersions:numUniqueAccounts:numUniqueDevices:", v22, v31, isa, v33, v35);

  }
  else
  {
    v36 = v59;
    v62 = v20;
    v37 = a1;
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v38 = type metadata accessor for Logger(0);
    sub_10012A0B0(v38, (uint64_t)qword_1005D6BF0);
    v39 = v36;
    swift_retain_n(a1, 2);
    v40 = v39;
    v41 = Logger.logObject.getter(v40);
    v43 = static os_log_type_t.error.getter(v41, v42);
    v44 = v43;
    if (os_log_type_enabled(v41, v43))
    {
      v45 = swift_slowAlloc(22, -1);
      v58 = (NSObject **)swift_slowAlloc(8, -1);
      v61 = swift_slowAlloc(32, -1);
      v65 = v61;
      *(_DWORD *)v45 = 138412546;
      LODWORD(v60) = v44;
      v63 = (uint64_t)v40;
      v46 = v40;
      v59 = v41;
      v47 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v45 + 4);
      v48 = v58;
      *v58 = v40;

      *(_WORD *)(v45 + 12) = 2080;
      v50 = GroupSession.activity.getter(v49);
      v51 = EditNoteActivity.noteID.getter(v50);
      v53 = v52;
      ((void (*)(char *, uint64_t))v62)(v12, v19);
      v63 = sub_1003A4190(v51, v53, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v45 + 14);
      swift_release_n(v37, 2);
      swift_bridgeObjectRelease(v53);
      v54 = v59;
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "%@: Couldn't find note with %s in the MOC. Not submitting analytics.", (uint8_t *)v45, 0x16u);
      v55 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v48, 1, v55);
      swift_slowDealloc(v48, -1, -1);
      v56 = v61;
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v45, -1, -1);

    }
    else
    {

      swift_release_n(a1, 2);
    }
  }
}

uint64_t sub_1002A4F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = GroupSession.activeParticipants.getter(v3);
  swift_retain(v0);
  sub_1002A68F8(v6, v0);
  v8 = v7;
  swift_bridgeObjectRelease(v6);
  v9 = swift_release(v0);
  if ((v8 & 1) != 0)
  {
    v10 = static Logger.realtimeCollaboration.getter(v9);
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.error.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v14 = 134217984;
      v21 = -1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v14 + 4);
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "Detected a scenario where the unique accounts couldn't be reliably detected. Returning %ld.", v14, 0xCu);
      swift_slowDealloc(v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return -1;
  }
  else
  {
    v16 = GroupSession.activeParticipants.getter(v9);
    v17 = sub_1002929C0(v16);
    swift_bridgeObjectRelease(v16);
    v18 = sub_10020C330(v17);
    swift_bridgeObjectRelease(v17);
    v15 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRelease(v18);
  }
  return v15;
}

void sub_1002A5134(uint64_t a1, uint64_t a2, void *a3, void *a4, NSObject *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *ObjCClassFromMetadata;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD);
  uint64_t v21;
  void *v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSNumber v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSArray v34;
  NSNumber v35;
  uint64_t v36;
  NSNumber v37;
  void *v38;
  NSNumber v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  NSObject *v45;
  uint64_t v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  Class isa;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  os_log_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v67 = a4;
  v65 = a5;
  v66 = a6;
  v62 = a3;
  v8 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EditNoteActivity(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v15);
  v17 = GroupSession.activity.getter(ObjCClassFromMetadata);
  EditNoteActivity.noteID.getter(v17);
  v19 = v18;
  v20 = *(void (**)(_QWORD, _QWORD))(v12 + 8);
  v21 = v11;
  v22 = v20;
  v20(v14, v21);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v24 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v23, a2);

  if (v24)
  {
    v25 = sub_100012E18(&qword_1005CF6F0);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100456F30;
    v27.super.super.isa = Int64._bridgeToObjectiveC()().super.super.isa;
    *(NSNumber *)(v26 + 32) = v27;
    v70 = v26;
    v28 = specialized Array._endMutation()(v27.super.super.isa);
    v29 = v70;
    v30 = GroupSession.id.getter(v28);
    UUID.uuidString.getter(v30);
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v64);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
    v34.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29);
    sub_1002A4F90();
    v35.super.super.isa = Int._bridgeToObjectiveC()().super.super.isa;
    v36 = GroupSession.activeParticipants.getter(v35.super.super.isa);
    swift_bridgeObjectRelease(v36);
    v37.super.super.isa = Int._bridgeToObjectiveC()().super.super.isa;
    if (v65)
    {
      v38 = (void *)_convertErrorToNSError(_:)(v65);
      objc_msgSend(v38, "code");

      v39.super.super.isa = Int._bridgeToObjectiveC()().super.super.isa;
    }
    else
    {
      v39.super.super.isa = 0;
    }
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v67, "submitFastSyncSessionEndForNote:sessionID:participantVersions:numUniqueAccounts:numUniqueDevices:errorCode:numIgnoredMessages:", v24, v33, v34.super.isa, v35.super.super.isa, v37.super.super.isa, v39.super.super.isa, isa);

  }
  else
  {
    v40 = v62;
    v67 = v22;
    v41 = a1;
    if (qword_1005CEBB0 != -1)
      swift_once(&qword_1005CEBB0, sub_10029344C);
    v42 = type metadata accessor for Logger(0);
    sub_10012A0B0(v42, (uint64_t)qword_1005D6BF0);
    v43 = v40;
    swift_retain_n(a1, 2);
    v44 = v43;
    v45 = Logger.logObject.getter(v44);
    v47 = static os_log_type_t.error.getter(v45, v46);
    v48 = v47;
    if (os_log_type_enabled(v45, v47))
    {
      v49 = swift_slowAlloc(22, -1);
      v65 = v45;
      v50 = v49;
      v63 = swift_slowAlloc(8, -1);
      v66 = swift_slowAlloc(32, -1);
      v70 = v66;
      *(_DWORD *)v50 = 138412546;
      LODWORD(v64) = v48;
      v68 = (uint64_t)v44;
      v51 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v50 + 4);
      v52 = v63;
      *(_QWORD *)v63 = v44;

      *(_WORD *)(v50 + 12) = 2080;
      v54 = GroupSession.activity.getter(v53);
      v55 = EditNoteActivity.noteID.getter(v54);
      v57 = v56;
      ((void (*)(char *, uint64_t))v67)(v14, v21);
      v68 = sub_1003A4190(v55, v57, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v50 + 14);
      swift_release_n(v41, 2);
      swift_bridgeObjectRelease(v57);
      v58 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v64, "%@: Couldn't find note with %s in the MOC. Not submitting analytics.", (uint8_t *)v50, 0x16u);
      v59 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v52, 1, v59);
      swift_slowDealloc(v52, -1, -1);
      v60 = v66;
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {

      swift_release_n(v41, 2);
    }
  }
}

uint64_t RealtimeCollaborationController.description.getter()
{
  uint64_t v0;
  uint64_t ObjectType;
  Swift::String v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  uint64_t v7;

  ObjectType = swift_getObjectType(v0);
  v7 = _typeName(_:qualified:)(ObjectType, 0);
  v2._countAndFlagsBits = 91;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 93;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return v7;
}

void RealtimeCollaborationController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MobileNotes.RealtimeCollaborationController", 43, "init()", 6, 0);
  __break(1u);
}

void sub_1002A5784(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_QWORD *)(*v1 + OBJC_IVAR___ICRealtimeCollaborationController_id);
}

NSString sub_1002A579C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100601AC0 = (uint64_t)result;
  return result;
}

uint64_t sub_1002A57D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002A5810
                                                                     + 4 * a5[a2]))(0xD00000000000001DLL, 0x8000000100485DB0);
}

uint64_t sub_1002A5810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  if (a1 == 1)
    return v1 - 5;
  else
    return v1;
}

uint64_t sub_1002A585C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002A5888 + 4 * byte_10045FE95[a1]))(v1 - 3, 0x8000000100485DF0);
}

uint64_t sub_1002A5888()
{
  uint64_t v0;

  return v0 + 12;
}

uint64_t sub_1002A58E8()
{
  uint64_t v0;

  return sub_1002A57D0(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1002A58F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[5];
  uint64_t v47;
  _QWORD *v48;

  v45 = a1;
  v43 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v43);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100012E18(&qword_1005D6EA8);
  v4 = *(_QWORD *)(v44 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v44);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D6E88);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v37 - v11);
  v42 = v1;
  sub_100012CE8(v1, (uint64_t)&v37 - v11, &qword_1005D6E88);
  v41 = v7;
  result = swift_getEnumCaseMultiPayload(v12, v7);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 2)
    {
      v14 = type metadata accessor for CancellationError(0);
      v15 = sub_100019C6C(&qword_1005D7A60, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
      swift_allocError(v14, v15, 0, 0);
      v16 = CancellationError.init()();
      swift_willThrow(v16);
      return v14;
    }
    __break(1u);
    goto LABEL_9;
  }
  v40 = v3;
  v17 = *v12;
  v18 = swift_allocObject(&unk_1005646C8, 24, 7);
  *(_QWORD *)(v18 + 16) = 0;
  v19 = (uint64_t *)(v18 + 16);
  v20 = v44;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v38((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v45, v44);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(&unk_1005646F0, v22 + v5, v21 | 7);
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v17;
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v25 = v18;
  v26 = v17;
  v24(v23 + v22, v6, v20);
  aBlock[4] = sub_1002A7CBC;
  v47 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100206734;
  aBlock[3] = &unk_100564708;
  v39 = _Block_copy(aBlock);
  v48 = _swiftEmptyArrayStorage;
  v27 = sub_100019C6C((unint64_t *)&qword_1005D6380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v25);
  swift_retain(v17);
  v28 = sub_100012E18((uint64_t *)&unk_1005D8530);
  v29 = sub_100016638((unint64_t *)&qword_1005D6390, (uint64_t *)&unk_1005D8530, (uint64_t)&protocol conformance descriptor for [A]);
  v30 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v28, v29, v43, v27);
  v31 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = DispatchWorkItem.init(flags:block:)(v30, v39);
  swift_release(v47);
  swift_beginAccess(v19, aBlock, 1, 0);
  v33 = *v19;
  *v19 = v32;
  result = swift_release(v33);
  v34 = *v19;
  if (!*v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v35 = (char *)v10 + *(int *)(sub_100012E18(&qword_1005D6EB0) + 48);
  swift_retain(v34);
  v36 = v42;
  sub_100012DDC(v42, &qword_1005D6E88);
  *v10 = v34;
  v38(v35, v45, v44);
  swift_storeEnumTagMultiPayload(v10, v41, 1);
  result = sub_1002A7BC8((uint64_t)v10, v36);
  v14 = *v19;
  if (*v19)
  {
    swift_retain(*v19);
    swift_release(v26);
    swift_release(v25);
    return v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

void sub_1002A5CD4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = (_QWORD *)(a1 + 16);
  swift_beginAccess(a1 + 16, v11, 0, 0);
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = swift_retain(v3);
  v5 = dispatch thunk of DispatchWorkItem.isCancelled.getter(v4);
  swift_release(v3);
  if ((v5 & 1) != 0)
    return;
  GroupSession.join()();
  swift_beginAccess(v2, &v10, 0, 0);
  v6 = *v2;
  if (!*v2)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v7 = swift_retain(*v2);
  v8 = dispatch thunk of DispatchWorkItem.isCancelled.getter(v7);
  swift_release(v6);
  if ((v8 & 1) != 0)
  {
    GroupSession.leave()();
  }
  else
  {
    v9 = sub_100012E18(&qword_1005D6EA8);
    CheckedContinuation.resume(returning:)(v9, v9);
  }
}

uint64_t sub_1002A5DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1002A5DD4, 0, 0);
}

uint64_t sub_1002A5DD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_1002A5E74;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0x3A6E6F286E696F6ALL, 0xE900000000000029, sub_1002A7C10, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_1002A5E74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1002A5EE8, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1002A5EE8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A5F1C(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(_QWORD *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  v4 = sub_1002A58F4(a1);
  os_unfair_lock_unlock(v3);
  v5 = swift_retain(v4);
  OS_dispatch_queue.async(execute:)(v5);
  return swift_release_n(v4, 2);
}

void sub_1002A5FE4(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = a1 + *(_QWORD *)(class metadata base offset for ManagedBuffer + *(_QWORD *)a1 + 16);
  v2 = (os_unfair_lock_s *)(a1 + ((*(unsigned int *)(*(_QWORD *)a1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_1002A6054(v1);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_1002A6054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_100012E18(&qword_1005D6E88);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D6EA8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002A7BC8(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload(v4, v2) == 1)
  {
    v9 = *(_QWORD *)v4;
    v10 = sub_100012E18(&qword_1005D6EB0);
    v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v10 + 48)], v5);
    dispatch thunk of DispatchWorkItem.cancel()(v11);
    v12 = type metadata accessor for CancellationError(0);
    v13 = sub_100019C6C(&qword_1005D7A60, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    v14 = swift_allocError(v12, v13, 0, 0);
    CancellationError.init()();
    v17 = v14;
    CheckedContinuation.resume(throwing:)(&v17, v5);
    swift_release(v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_100012DDC((uint64_t)v4, &qword_1005D6E88);
  }
  return swift_storeEnumTagMultiPayload(a1, v2, 2);
}

uint64_t sub_1002A61F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v27 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005D46A0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = swift_allocObject(&unk_100564588, v15 + v13, v14 | 7);
  *(_QWORD *)(v16 + 16) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_1002A7784;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100206734;
  aBlock[3] = &unk_1005645A0;
  v17 = _Block_copy(aBlock);
  v18 = swift_retain(a3);
  static DispatchQoS.unspecified.getter(v18);
  v28 = _swiftEmptyArrayStorage;
  v19 = sub_100019C6C((unint64_t *)&qword_1005D6380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100012E18((uint64_t *)&unk_1005D8530);
  v21 = sub_100016638((unint64_t *)&qword_1005D6390, (uint64_t *)&unk_1005D8530, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v20, v21, v5, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  return swift_release(v30);
}

uint64_t sub_1002A645C()
{
  uint64_t v0;

  GroupSession.leave()();
  v0 = sub_100012E18(&qword_1005D46A0);
  return CheckedContinuation.resume(returning:)(v0, v0);
}

uint64_t sub_1002A6498(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  _BYTE v18[24];

  v2 = type metadata accessor for TaskPriority(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __chkstk_darwin(v4);
  v9 = &v18[-v8 - 8];
  v12 = *(unsigned __int8 *)(a1 + 16);
  v11 = (_BYTE *)(a1 + 16);
  v10 = v12;
  if (v12 == 2)
  {
    v13 = static Task<>.currentPriority.getter(v7);
    static TaskPriority.userInitiated.getter(v13);
    v14 = static TaskPriority.>= infix(_:_:)(v9, v6);
    v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v6, v2);
    v15(v9, v2);
    swift_beginAccess(v11, v18, 1, 0);
    *v11 = v14 & 1;
  }
  else
  {
    v14 = v10 & 1;
  }
  return v14 & 1;
}

uint64_t sub_1002A6590(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1002A8418;
  return v6(a1);
}

uint64_t sub_1002A65F4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1002A665C;
  return v5(v2 + 32);
}

uint64_t sub_1002A665C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1002A66AC(uint64_t a1, uint64_t a2)
{
  int v2;
  _BYTE *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  _QWORD v11[2];
  char v12;
  ValueMetadata *v13;
  unint64_t v14;

  v3 = (_BYTE *)(a1 + 16);
  v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 2)
  {
    v4 = sub_100293E70(a2);
    v6 = v5;
    v8 = v7;
    v13 = &type metadata for TelephonyUtilitiesFeature;
    v14 = sub_10013FA34();
    v11[0] = v4;
    v11[1] = v6;
    v12 = v8;
    v9 = isFeatureEnabled(_:)(v11);
    sub_1000153C0(v11);
    swift_beginAccess(v3, v11, 1, 0);
    *v3 = v9 & 1;
  }
  else
  {
    v9 = v2 & 1;
  }
  return v9 & 1;
}

uint64_t _s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005CEBD8 != -1)
    swift_once(&qword_1005CEBD8, sub_10029384C);
  if (byte_100601AB8 == 1)
  {
    v6 = objc_msgSend(a1, "account");
    if (v6
      || (v8 = objc_msgSend(a1, "folder")) != 0
      && (v10 = v8, v6 = objc_msgSend(v8, "account"), v10, v6))
    {
      v7 = objc_msgSend(v6, "isPrimaryiCloudAccount");

      if ((v7 & 1) != 0)
        return 1;
    }
    v11 = static Logger.realtimeCollaboration.getter(v8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Fast sync is disabled for non-primary iCloud account", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 0;
}

void sub_1002A68F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  int64_t v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, unint64_t, uint64_t, __n128);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  char *v62;
  uint64_t v63;
  int64_t v64;

  v59 = a2;
  v3 = type metadata accessor for UUID(0);
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  v4 = __chkstk_darwin(v3);
  v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v55 = (char *)&v51 - v6;
  v7 = type metadata accessor for Participant(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v51 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v51 - v15;
  __chkstk_darwin(v14);
  v62 = (char *)&v51 - v17;
  v63 = a1;
  v18 = *(_QWORD *)(a1 + 56);
  v60 = a1 + 56;
  v19 = 1 << *(_BYTE *)(a1 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v61 = (unint64_t)(v19 + 63) >> 6;
  v22 = swift_bridgeObjectRetain(a1);
  v23 = 0;
  v52 = v16;
  v53 = v13;
  while (v21)
  {
    v25 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v64 = v23;
    v26 = v25 | (v23 << 6);
LABEL_23:
    v31 = v62;
    v32 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
    v32(v62, *(_QWORD *)(v63 + 48) + *(_QWORD *)(v8 + 72) * v26, v7, v22);
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v16, v31, v7);
    v34 = Participant.handle.getter(v33);
    v36 = v35;
    swift_bridgeObjectRelease(v35);
    if ((v36 & 0x2000000000000000) != 0)
      v37 = HIBYTE(v36) & 0xF;
    else
      v37 = v34 & 0xFFFFFFFFFFFFLL;
    v38 = ((uint64_t (*)(char *, char *, uint64_t))v32)(v13, v16, v7);
    if (v37)
    {
      v24 = *(void (**)(char *, uint64_t))(v8 + 8);
      v24(v13, v7);
      v24(v16, v7);
      v23 = v64;
    }
    else
    {
      v39 = v55;
      v40 = Participant.id.getter(v38);
      v41 = v54;
      v42 = GroupSession.localParticipant.getter(v40);
      v43 = v8;
      v44 = v56;
      Participant.id.getter(v42);
      v45 = *(void (**)(char *, uint64_t))(v43 + 8);
      v45(v41, v7);
      v46 = sub_100019C6C((unint64_t *)&unk_1005D1B70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v47 = v58;
      LOBYTE(v41) = dispatch thunk of static Equatable.== infix(_:_:)(v39, v44, v58, v46);
      v48 = *(void (**)(char *, uint64_t))(v57 + 8);
      v49 = v44;
      v8 = v43;
      v13 = v53;
      v48(v49, v47);
      v50 = v39;
      v16 = v52;
      v48(v50, v47);
      v45(v13, v7);
      v45(v16, v7);
      v23 = v64;
      if ((v41 & 1) == 0)
      {
LABEL_28:
        swift_release(v63);
        return;
      }
    }
  }
  v27 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v27 >= v61)
    goto LABEL_28;
  v28 = *(_QWORD *)(v60 + 8 * v27);
  v29 = v23 + 1;
  if (v28)
    goto LABEL_22;
  v29 = v23 + 2;
  if (v23 + 2 >= v61)
    goto LABEL_28;
  v28 = *(_QWORD *)(v60 + 8 * v29);
  if (v28)
    goto LABEL_22;
  v29 = v23 + 3;
  if (v23 + 3 >= v61)
    goto LABEL_28;
  v28 = *(_QWORD *)(v60 + 8 * v29);
  if (v28)
    goto LABEL_22;
  v29 = v23 + 4;
  if (v23 + 4 >= v61)
    goto LABEL_28;
  v28 = *(_QWORD *)(v60 + 8 * v29);
  if (v28)
  {
LABEL_22:
    v21 = (v28 - 1) & v28;
    v64 = v29;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    goto LABEL_23;
  }
  v30 = v23 + 5;
  if (v23 + 5 >= v61)
    goto LABEL_28;
  v28 = *(_QWORD *)(v60 + 8 * v30);
  if (v28)
  {
    v29 = v23 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v61)
      goto LABEL_28;
    v28 = *(_QWORD *)(v60 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_30:
  __break(1u);
}

id sub_1002A6CF8(void *a1)
{
  char v2;
  char v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  char v11;
  ValueMetadata *v12;
  unint64_t v13;

  v12 = &type metadata for TelephonyUtilitiesFeature;
  v13 = sub_10013FA34();
  v9 = "sharePlayLite";
  v10 = 13;
  v11 = 2;
  v2 = isFeatureEnabled(_:)(&v9);
  sub_1000153C0(&v9);
  if ((v2 & 1) == 0)
    goto LABEL_5;
  v12 = &type metadata for NotesFeature;
  v13 = sub_1000199D4();
  v9 = "RealtimeCollaboration";
  v10 = 21;
  v11 = 2;
  v3 = isFeatureEnabled(_:)(&v9);
  sub_1000153C0(&v9);
  if ((v3 & 1) == 0
    || (objc_msgSend((id)objc_opt_self(ICDeviceSupport), "isRunningUnitTests") & 1) != 0
    || (result = objc_msgSend(a1, "fastSyncEnabled"), !(_DWORD)result))
  {
LABEL_5:
    v5 = type metadata accessor for FastSyncError(0);
    v6 = sub_100019C6C(&qword_1005DB2B0, (uint64_t (*)(uint64_t))&type metadata accessor for FastSyncError, (uint64_t)&protocol conformance descriptor for FastSyncError);
    swift_allocError(v5, v6, 0, 0);
    v8 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, enum case for FastSyncError.fastSyncDisabled(_:), v5);
    return (id)swift_willThrow(v8);
  }
  return result;
}

uint64_t sub_1002A6E48()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A6E70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D6CCC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100145358;
  return sub_1002A12B4(a1, v4, v5, v7, v6);
}

uint64_t sub_1002A6EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D6C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A6F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D6CDC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100145358;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_1002959CC, 0, 0);
}

uint64_t sub_1002A6F94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A6FB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6CEC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100145358;
  v4 = (_QWORD *)swift_task_alloc(dword_1005D6D7C);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_100145358;
  return sub_100296A50(a1);
}

uint64_t sub_1002A7030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D6CFC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100130768;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100297E54, 0, 0);
}

uint64_t sub_1002A7094()
{
  return type metadata accessor for RealtimeCollaborationController(0);
}

uint64_t type metadata accessor for RealtimeCollaborationController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D6D40;
  if (!qword_1005D6D40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RealtimeCollaborationController);
  return result;
}

void sub_1002A70D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = "\b";
  v4[6] = &unk_10045FF28;
  v4[7] = &unk_10045FF28;
  sub_1002A718C(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = &unk_10045FF28;
    v4[11] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[12] = &unk_10045FF28;
    v4[13] = &unk_10045FF28;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
}

void sub_1002A718C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D6D50)
  {
    v2 = type metadata accessor for FastSyncStateMachine(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, &qword_1005D6D50);
  }
}

uint64_t sub_1002A71E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002A71F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002A7200(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6D5C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100145358;
  v4 = (_QWORD *)swift_task_alloc(dword_1005D6D84);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_100298040;
  return sub_10029808C(a1);
}

uint64_t sub_1002A7278(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D6D6C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100145358;
  v4 = (_QWORD *)swift_task_alloc(dword_1005D6D7C);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1002A8418;
  return sub_100296A50(a1);
}

uint64_t sub_1002A72F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  swift_unknownObjectRelease(*(_QWORD *)(v2 + 32), v3);

  return swift_deallocObject(v2, 56, 7);
}

uint64_t sub_1002A7324(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D6D8C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100145358;
  return sub_1002986B8(a1, v4, v5, v6, v7);
}

uint64_t sub_1002A73A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1005D6DBC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_100130768;
  return sub_10029C4E0(a1, a2, v6, v7, v8);
}

uint64_t sub_1002A7420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 32));

  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_1002A7454(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D6DCC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100145358;
  return sub_10029C7C0(a1, v4, v5, v7, v6);
}

uint64_t sub_1002A74D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1005D6DDC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100145358;
  return sub_10029D244(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002A7550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v5 = *(_QWORD *)(v2 + 32);
  v6 = swift_task_alloc(dword_1005D6DFC);
  v7 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_100145358;
  *(_QWORD *)(v6 + 80) = v5;
  *(_OWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 56) = a2;
  return swift_task_switch(sub_10029E060, 0, 0);
}

uint64_t sub_1002A75CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);

  swift_release(*(_QWORD *)(v2 + 40));
  swift_release(*(_QWORD *)(v2 + 48));
  return swift_deallocObject(v2, 56, 7);
}

uint64_t sub_1002A7608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc(dword_1005D6E0C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_100145358;
  v5 = (_QWORD *)swift_task_alloc(dword_1005D6E5C);
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_100145358;
  return sub_10029E5A0(v2, v3);
}

uint64_t sub_1002A768C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc(dword_1005D6E1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100145358;
  v4 = (_QWORD *)swift_task_alloc(dword_1005D6E34);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_100145358;
  return sub_10029EA0C(v2);
}

uint64_t sub_1002A7704(uint64_t a1)
{
  uint64_t v1;

  return sub_1002A61F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002A770C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100012E18(&qword_1005D46A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002A7784()
{
  sub_100012E18(&qword_1005D46A0);
  return sub_1002A645C();
}

uint64_t sub_1002A77B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D6E4C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100145358;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1005D6E48 + dword_1005D6E48))(a1, v4);
}

uint64_t sub_1002A7828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for EditNoteActivity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_1002A78E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for EditNoteActivity(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10029F938(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(char **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002A795C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);

  swift_release(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_1002A7990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1005D6E6C);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_100145358;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_10029F6A8, 0, 0);
}

uint64_t sub_1002A79F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1002A7A2C()
{
  uint64_t v0;

  sub_1002A4AE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(NSObject **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1002A7A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);

  swift_release(*(_QWORD *)(v2 + 40));
  swift_errorRelease(*(_QWORD *)(v2 + 56));
  return swift_deallocObject(v2, 64, 7);
}

uint64_t sub_1002A7A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1005D6E7C);
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_100145358;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  return swift_task_switch(sub_10029F7F8, 0, 0);
}

uint64_t sub_1002A7AF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_errorRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1002A7B38()
{
  uint64_t v0;

  sub_1002A5134(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(NSObject **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1002A7B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1005D6E9C);
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_100145358;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_1002A5DD4, 0, 0);
}

void sub_1002A7BC0()
{
  uint64_t v0;

  sub_1002A5FE4(v0);
}

uint64_t sub_1002A7BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D6E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A7C10(uint64_t a1)
{
  uint64_t v1;

  return sub_1002A5F1C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002A7C18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A7C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100012E18(&qword_1005D6EA8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002A7CBC()
{
  uint64_t v0;

  sub_100012E18(&qword_1005D6EA8);
  sub_1002A5CD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002A7CF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A7D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D6EF4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100145358;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1005D6EF0 + dword_1005D6EF0))(a1, v4);
}

uint64_t sub_1002A7D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FastSyncStateMachine(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A7DC8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for FastSyncStateMachine(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = v0 + v4;
  v7 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  v8 = v0 + v4 + v1[5];
  v9 = sub_100012E18(&qword_1005D2210);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);

  v11 = v6 + v1[8];
  sub_100186344(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[9] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

id sub_1002A7EDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FastSyncStateMachine(0) - 8) + 80);
  v4 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v5 = v10;
  v11 = v1 + ((v3 + 32) & ~v3);
  sub_100349888((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1002A7F6C, (uint64_t)&v9, v4);
  v7 = v6;
  result = objc_msgSend(*(id *)(v5 + OBJC_IVAR___ICRealtimeCollaborationController_context), "reset");
  *a1 = v7;
  return result;
}

void sub_1002A7F6C(void **a1@<X0>, void (***a2)(char *, uint64_t)@<X8>)
{
  uint64_t v2;

  sub_1002A2B68(a1, *(void (***)(char *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1002A7F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _BYTE *v4;
  char v5;
  _BYTE v8[24];

  v4 = (_BYTE *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 == 2)
  {
    v5 = a3;
    if (a3)
    {
      sub_1000163BC(0, &qword_1005D6F48, NSDictionary_ptr);
      v5 = static NSObject.== infix(_:_:)(a2);
    }
    swift_beginAccess(v4, v8, 1, 0);
    *v4 = v5 & 1;
  }
  else
  {
    v5 = v3 & 1;
  }
  return v5 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RealtimeCollaborationController.GroupActivityState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10013ADF8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for RealtimeCollaborationController.GroupActivityState(uint64_t a1)
{
  return sub_100251F00(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for RealtimeCollaborationController.GroupActivityState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10013ADF8(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_100251F00(v5, v6);
  return a1;
}

uint64_t assignWithTake for RealtimeCollaborationController.GroupActivityState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_100251F00(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for RealtimeCollaborationController.GroupActivityState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RealtimeCollaborationController.GroupActivityState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1002A818C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1002A81A4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RealtimeCollaborationController.GroupActivityState()
{
  return &type metadata for RealtimeCollaborationController.GroupActivityState;
}

_QWORD *initializeBufferWithCopyOfBuffer for RealtimeCollaborationController.GroupSessionState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL)
    swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for RealtimeCollaborationController.GroupSessionState(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_errorRelease(result);
  return result;
}

unint64_t *assignWithCopy for RealtimeCollaborationController.GroupSessionState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
      swift_errorRetain(*a2);
    *a1 = v4;
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_errorRelease(v3);
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain(*a2);
    v5 = *a1;
    *a1 = v4;
    swift_errorRelease(v5);
  }
  return a1;
}

_QWORD *initializeWithTake for RealtimeCollaborationController.GroupSessionState(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for RealtimeCollaborationController.GroupSessionState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {
    swift_errorRelease(v3);
LABEL_6:
    *a1 = v4;
    return a1;
  }
  *a1 = v4;
  swift_errorRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for RealtimeCollaborationController.GroupSessionState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RealtimeCollaborationController.GroupSessionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1002A83C8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1002A83E0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for RealtimeCollaborationController.GroupSessionState()
{
  return &type metadata for RealtimeCollaborationController.GroupSessionState;
}

uint64_t type metadata accessor for TagAssignmentDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D6F60;
  if (!qword_1005D6F60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TagAssignmentDataSource);
  return result;
}

uint64_t sub_1002A8470(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = "\b";
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_100601AC8);
}

_QWORD *sub_1002A84CC@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_1002A84E0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

id sub_1002A84E8(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  int v10;
  char v11;

  v6 = (uint64_t *)&a1[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  v7 = *(_QWORD *)&a1[OBJC_IVAR___ICTagContainerCell_selectionDidChange];
  v8 = *(_QWORD *)&a1[OBJC_IVAR___ICTagContainerCell_selectionDidChange + 8];
  *v6 = a4;
  v6[1] = a5;
  sub_100166B74(a4, a5);
  result = (id)sub_100012C50(v7, v8);
  v10 = a1[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem];
  a1[OBJC_IVAR___ICTagContainerCell_includesAllTagsItem] = 0;
  if (v10 == 1)
    result = objc_msgSend(a1, "setNeedsUpdateConfiguration");
  v11 = a1[OBJC_IVAR___ICTagContainerCell_hasGroupInset];
  a1[OBJC_IVAR___ICTagContainerCell_hasGroupInset] = 1;
  if ((v11 & 1) == 0)
  {
    objc_msgSend(a1, "setNeedsLayout");
    objc_msgSend(a1, "layoutIfNeeded");
    return objc_msgSend(a1, "setNeedsUpdateConfiguration");
  }
  return result;
}

uint64_t sub_1002A85BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v11;

  v11 = 0;
  v6 = type metadata accessor for TagContainerCell();
  v7 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, &v11, v6, &type metadata for TagAssignmentItem);
  v8 = OBJC_IVAR___ICTagContainerCell_allowsContextualMenu;
  *(_BYTE *)(v7 + OBJC_IVAR___ICTagContainerCell_allowsContextualMenu) = 0;
  v9 = sub_100228DBC();
  v9[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_allowsContextualMenu] = *(_BYTE *)(v7 + v8);

  return v7;
}

id sub_1002A8650(uint64_t a1)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = (uint64_t *)(a1 + OBJC_IVAR___ICTagDetailCell_text);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR___ICTagDetailCell_text + 8);
  *v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease(v9);
  return sub_100343E48();
}

uint64_t sub_1002A871C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v7 = sub_100012E18((uint64_t *)&unk_1005D6350);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1002A8898(a1);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_10012D210((uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v16 = *(void **)(v3 + qword_1005D6F50);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(v16, "cellForItemAtIndexPath:", isa);

  if (v18)
  {
    v19 = type metadata accessor for TagContainerCell();
    if (swift_dynamicCastClass(v18, v19))
      sub_1002296C8(a1 & 1, a2, a3);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1002A8898(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v2 = v1;
  v4 = sub_100012E18(&qword_1005D6FD0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1002A908C();
  v9 = sub_1002A90D0();
  NSDiffableDataSourceSnapshot.init()(&type metadata for TagAssignmentSection, &type metadata for TagAssignmentItem, v8, v9);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100556040);
  v10 = *(void **)(v2 + qword_1005D6F58);
  if (v10)
  {
    v11 = (void *)objc_opt_self(ICHashtag);
    v12 = v10;
    v13 = objc_msgSend(v11, "allVisibleHashtagsInContext:", v12);
    v14 = sub_1002A9114();
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v18 = v15;
      else
        v18 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);

      swift_bridgeObjectRelease_n(v15, 2);
      if (v19)
        goto LABEL_4;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease(v15);

      if (v16)
      {
LABEL_4:
        v21 = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(&off_100556068, &v21, v4);
      }
    }
  }
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v7, a1 & 1, 0, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1002A8A54()
{
  uint64_t v0;

}

void sub_1002A8A80(uint64_t a1)
{

}

void sub_1002A8AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_release(a3);
  _swift_stdlib_reportUnimplementedInitializer("MobileNotes.TagAssignmentDataSource", 35, "init(collectionView:cellProvider:)", 34, 0);
  __break(1u);
}

uint64_t sub_1002A8AEC()
{
  return type metadata accessor for TagAssignmentDataSource(0);
}

ValueMetadata *type metadata accessor for TagAssignmentItem()
{
  return &type metadata for TagAssignmentItem;
}

uint64_t _s11MobileNotes20TagAssignmentSectionOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002A8B4C + 4 * asc_10045FFB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002A8B6C + 4 * byte_10045FFB5[v4]))();
}

_BYTE *sub_1002A8B4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002A8B6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002A8B74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002A8B7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002A8B84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002A8B8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TagAssignmentSection()
{
  return &type metadata for TagAssignmentSection;
}

unint64_t sub_1002A8BAC()
{
  unint64_t result;

  result = qword_1005D6FB0;
  if (!qword_1005D6FB0)
  {
    result = swift_getWitnessTable(&unk_1004600C0, &type metadata for TagAssignmentSection);
    atomic_store(result, (unint64_t *)&qword_1005D6FB0);
  }
  return result;
}

unint64_t sub_1002A8BF4()
{
  unint64_t result;

  result = qword_1005D6FB8;
  if (!qword_1005D6FB8)
  {
    result = swift_getWitnessTable(&unk_100460160, &type metadata for TagAssignmentItem);
    atomic_store(result, (unint64_t *)&qword_1005D6FB8);
  }
  return result;
}

id sub_1002A8C38(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v9 = sub_100012E18(&qword_1005D6FC0);
  v49 = *(_QWORD *)(v9 - 8);
  v50 = *(_QWORD *)(v49 + 64);
  v51 = v9;
  v10 = __chkstk_darwin(v9);
  v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v47 = (char *)&v44 - v12;
  v46 = sub_100012E18(&qword_1005D6FC8);
  v13 = *(_QWORD *)(v46 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v46);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - v16;
  v18 = qword_1005D6F58;
  *(_QWORD *)(v4 + qword_1005D6F58) = 0;
  *(_QWORD *)(v4 + qword_1005D6F50) = a1;
  v19 = *(void **)(v4 + v18);
  *(_QWORD *)(v4 + v18) = a2;
  v45 = a1;
  v20 = a2;

  v21 = swift_allocObject(&unk_100564A00, 32, 7);
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  sub_100166B74(a3, a4);
  v22 = type metadata accessor for TagContainerCell();
  UICollectionView.CellRegistration.init(handler:)(sub_1002A8F54, v21, v22, &type metadata for TagAssignmentItem);
  v23 = v46;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v46);
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = swift_allocObject(&unk_100564A28, v25 + v14, v24 | 7);
  v27 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v26 + v25, (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
  v28 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v45, sub_1002A8F68, v26);
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v31 = v30;
  v32 = type metadata accessor for TagDetailCell();
  v33 = v28;
  v34 = v47;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v29, v31, sub_1002A8650, 0, v32);
  v36 = v48;
  v35 = v49;
  v37 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v48, v34, v51);
  v38 = *(unsigned __int8 *)(v35 + 80);
  v39 = v35;
  v40 = (v38 + 16) & ~v38;
  v41 = swift_allocObject(&unk_100564A50, v40 + v50, v38 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v41 + v40, v36, v37);
  v42 = v33;
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_1002A9028, v41);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v37);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v27);
  return v42;
}

uint64_t sub_1002A8F28()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1002A8F54(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002A84E8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1002A8F5C()
{
  return sub_1002A8FCC(&qword_1005D6FC8);
}

uint64_t sub_1002A8F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D6FC8) - 8) + 80);
  return sub_1002A85BC(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_1002A8FC0()
{
  return sub_1002A8FCC(&qword_1005D6FC0);
}

uint64_t sub_1002A8FCC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_100012E18(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1002A9028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D6FC0) - 8) + 80);
  v7 = v4 + ((v6 + 16) & ~v6);
  v8 = type metadata accessor for TagDetailCell();
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v7, a4, v8);
}

unint64_t sub_1002A908C()
{
  unint64_t result;

  result = qword_1005D6FD8;
  if (!qword_1005D6FD8)
  {
    result = swift_getWitnessTable(&unk_100460080, &type metadata for TagAssignmentSection);
    atomic_store(result, (unint64_t *)&qword_1005D6FD8);
  }
  return result;
}

unint64_t sub_1002A90D0()
{
  unint64_t result;

  result = qword_1005D6FE0;
  if (!qword_1005D6FE0)
  {
    result = swift_getWitnessTable(&unk_100460120, &type metadata for TagAssignmentItem);
    atomic_store(result, (unint64_t *)&qword_1005D6FE0);
  }
  return result;
}

unint64_t sub_1002A9114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D86F0;
  if (!qword_1005D86F0)
  {
    v1 = objc_opt_self(ICHashtag);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D86F0);
  }
  return result;
}

void *OpenTopLevelFolderIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenTopLevelFolderIntent.persistentIdentifier;
}

unint64_t static OpenTopLevelFolderIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1002A9180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static OpenTopLevelFolderIntent.title);
  sub_10012A0B0(v10, (uint64_t)static OpenTopLevelFolderIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100486020);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for Open Top-Level Folder intent", 38, 2);
}

uint64_t OpenTopLevelFolderIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEBE8 != -1)
    swift_once(&qword_1005CEBE8, sub_1002A9180);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static OpenTopLevelFolderIntent.title);
}

uint64_t static OpenTopLevelFolderIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEBE8 != -1)
    swift_once(&qword_1005CEBE8, sub_1002A9180);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static OpenTopLevelFolderIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *OpenTopLevelFolderIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenTopLevelFolderIntent.openAppWhenRun;
}

uint64_t static OpenTopLevelFolderIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000004ELL, 0x8000000100485FD0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static OpenTopLevelFolderIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D6FF0);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D6FF8);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185864();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenTopLevelFolderIntent, v6);
  v7._countAndFlagsBits = 0x656874206E65704FLL;
  v7._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100460198, v8);
  v10 = sub_100012E18(&qword_1005D7000);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x7265646C6F6620;
  v11._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for OpenTopLevelFolderIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for OpenTopLevelFolderIntent, v6);
}

uint64_t sub_1002A9744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D6FF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D6FF8);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, a1, a2);
  v10._countAndFlagsBits = 0x656874206E65704FLL;
  v10._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100460198, v11);
  v13 = sub_100012E18(&qword_1005D7000);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 0x7265646C6F6620;
  v14._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_1002A98B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s11MobileNotes24OpenTopLevelFolderIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11MobileNotes24OpenTopLevelFolderIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  _QWORD v44[6];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v41 = *(_QWORD *)(v0 - 8);
  v42 = v0;
  __chkstk_darwin(v0);
  v40 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v39 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v38 = (char *)&v37 - v5;
  v6 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100012E18(&qword_1005CF0D8);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Title for target parameter to Open Notes Top-Level Folder intent", 64, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, 0x8000000100477EC0);
  static Locale.current.getter(v26);
  v25(v12, v24, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for top-level folder", 42, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  LOBYTE(v44[0]) = 4;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v38;
  v28(v38, 1, 1, v27);
  v30 = v39;
  v28(v39, 1, 1, v27);
  v31 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  v32 = sub_100128358();
  v33 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v22, v8, v44, v29, v30, v31, &off_100555E58, v32);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v43[0] = 0xD000000000000024;
  v43[1] = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v44, v43, &type metadata for String, &protocol witness table for String);
  v34 = type metadata accessor for AppDependencyManager(0);
  v35 = static AppDependencyManager.shared.getter(v34);
  AppDependency.__allocating_init(key:manager:)(v44, v35);
  return v33;
}

uint64_t sub_1002A9CCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1002A9CF8()
{
  unint64_t result;

  result = qword_1005D7008;
  if (!qword_1005D7008)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenTopLevelFolderIntent, &type metadata for OpenTopLevelFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7008);
  }
  return result;
}

unint64_t sub_1002A9D48()
{
  unint64_t result;

  result = qword_1005D7010;
  if (!qword_1005D7010)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenTopLevelFolderIntent, &type metadata for OpenTopLevelFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7010);
  }
  return result;
}

unint64_t sub_1002A9D90()
{
  unint64_t result;

  result = qword_1005D7018;
  if (!qword_1005D7018)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenTopLevelFolderIntent, &type metadata for OpenTopLevelFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7018);
  }
  return result;
}

uint64_t sub_1002A9DD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenTopLevelFolderIntent.perform()>>, 1);
}

uint64_t sub_1002A9DE4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static OpenTopLevelFolderIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for OpenTopLevelFolderIntent()
{
  return &type metadata for OpenTopLevelFolderIntent;
}

uint64_t sub_1002A9E04()
{
  return sub_100016638(&qword_1005D7028, (uint64_t *)&unk_1005D7030, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

id sub_1002A9E30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(id, char *, _QWORD *, __n128);
  id v14;
  __n128 v15;
  void *v16;
  _QWORD v18[4];

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(uint64_t (**)(id, char *, _QWORD *, __n128))(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v18[3] = swift_getObjectType(a4);
  v18[0] = a4;
  swift_retain(v12);
  v14 = a2;
  v15 = swift_unknownObjectRetain(a4);
  v16 = (void *)v13(v14, v11, v18, v15);

  swift_release(v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1000153C0(v18);
  return v16;
}

id sub_1002A9F28(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  char *v56;
  id v57;
  objc_super v58;
  char *v59;
  uint64_t v60;
  objc_super v61;
  _QWORD aBlock[5];
  uint64_t v63;

  v4 = v3;
  v58.super_class = (Class)swift_getObjectType(v4);
  v49 = sub_100012E18(&qword_1005D7090);
  v60 = *(_QWORD *)(v49 - 8);
  v8 = *(_QWORD *)(v60 + 64);
  v9 = __chkstk_darwin(v49);
  v56 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v59 = (char *)&v49 - v10;
  v11 = sub_100012E18(&qword_1005D7098);
  v52 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  v12 = *(_QWORD *)(v52 + 64);
  v13 = __chkstk_darwin(v11);
  v51 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - v14;
  v58.receiver = v4;
  v4[OBJC_IVAR____TtC11MobileNotes13TagDataSource_includesAllTagsItem] = 1;
  v4[OBJC_IVAR____TtC11MobileNotes13TagDataSource_includesNewTagItem] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes13TagDataSource_modernBackgroundManagedObjectContext] = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes13TagDataSource_modernViewContext] = a3;
  v16 = swift_allocObject(&unk_100564CE0, 24, 7);
  v54 = a1;
  swift_unknownObjectWeakInit(v16 + 16, a1);
  v17 = swift_allocObject(&unk_100564D08, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = type metadata accessor for TagCell();
  v19 = a3;
  v50 = a2;
  v55 = v15;
  UICollectionView.CellRegistration.init(handler:)(sub_1002AB1A0, v17, v18, (char *)&type metadata for Any + 8);
  v20 = swift_allocObject(&unk_100564CE0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, a1);
  v21 = swift_allocObject(&unk_100564D30, 32, 7);
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v20;
  v22 = type metadata accessor for TagEditingCell();
  v57 = v19;
  v23 = v59;
  UICollectionView.CellRegistration.init(handler:)(sub_1002AB1D4, v21, v22, (char *)&type metadata for Any + 8);
  v24 = v60;
  v25 = v56;
  v26 = v49;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v56, v23, v49);
  v28 = v51;
  v27 = v52;
  v29 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v15, v53);
  v30 = *(unsigned __int8 *)(v24 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = *(unsigned __int8 *)(v27 + 80);
  v33 = v27;
  v34 = (v8 + v32 + v31) & ~v32;
  v35 = swift_allocObject(&unk_100564D58, v34 + v12, v30 | v32 | 7);
  v36 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v37 = v26;
  v36(v35 + v31, v25, v26);
  v38 = v33;
  v39 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v35 + v34, v28, v29);
  v40 = objc_msgSend(objc_allocWithZone((Class)ICFolderListSectionIdentifier), "initWithSectionType:", 8);
  v41 = objc_allocWithZone((Class)ICTagCoreDataIndexer);
  v42 = v50;
  v43 = objc_msgSend(v41, "initWithModernManagedObjectContext:sectionIdentifier:", v50, v40);
  aBlock[4] = sub_1002AB298;
  v63 = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002A9E30;
  aBlock[3] = &unk_100564D70;
  v44 = _Block_copy(aBlock);
  v45 = v63;
  swift_retain(v35);
  swift_release(v45);
  v61 = v58;
  v46 = v54;
  v47 = objc_msgSendSuper2(&v61, "initWithCollectionView:cellProvider:indexer:", v54, v44, v43);
  _Block_release(v44);

  swift_release(v35);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v37);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v55, v39);
  return v47;
}

uint64_t sub_1002AA348(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char v45;
  void *v46;
  id v47;
  _BYTE v48[32];
  char v49[24];

  v8 = a4 + 16;
  swift_beginAccess(a4 + 16, v49, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v8);
  if (!result)
    return result;
  v10 = (char *)result;
  sub_100128424(a3, (uint64_t)v48);
  v11 = sub_1000163BC(0, (unint64_t *)&unk_1005D70B0, ICTagNewTagItemIdentifier_ptr);
  if (swift_dynamicCast(&v47, v48, (char *)&type metadata for Any + 8, v11, 6))
  {

    +[ICTagCell newTagImage]_0();
    v13 = v12;
    sub_1003B9AFC(v12);

    a1[OBJC_IVAR___ICTagCell_isExcluded] = 0;
    sub_1003B747C();
LABEL_15:

    goto LABEL_16;
  }
  sub_100128424(a3, (uint64_t)v48);
  v14 = sub_1000163BC(0, &qword_1005D89B0, ICTagAllTagsItemIdentifier_ptr);
  if (swift_dynamicCast(&v47, v48, (char *)&type metadata for Any + 8, v14, 6))
  {

    v15 = objc_msgSend((id)objc_opt_self(ICTagAllTagsItemIdentifier), "displayText");
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = v10[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 3];
    v20 = (uint64_t *)&a1[OBJC_IVAR___ICTagCell_displayText];
    v21 = *(_QWORD *)&a1[OBJC_IVAR___ICTagCell_displayText + 8];
    *v20 = v16;
    v20[1] = v18;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRelease(v21);
    objc_msgSend(*(id *)&a1[OBJC_IVAR___ICTagCell_imageView], "setImage:", 0);
    sub_1003B9AFC(0);
    a1[OBJC_IVAR___ICTagCell_includeSymbolPrefix] = 0;
    a1[OBJC_IVAR___ICTagCell_hasGroupInset] = v19;
    sub_1003B7138();
    sub_1003B8EB4();
    swift_bridgeObjectRelease(v18);
    v22 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection], "mode") == (id)2;
    a1[OBJC_IVAR___ICTagCell_isExcluded] = v22;
    sub_1003B747C();
    goto LABEL_15;
  }
  sub_100128424(a3, (uint64_t)v48);
  v23 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  if ((swift_dynamicCast(&v47, v48, (char *)&type metadata for Any + 8, v23, 6) & 1) == 0)
    goto LABEL_15;
  v24 = v47;
  if (!objc_msgSend(v47, "ic_isHashtagType"))
  {

    goto LABEL_15;
  }
  v25 = objc_msgSend(a5, "objectWithID:", v24);
  v26 = objc_opt_self(ICHashtag);
  v27 = (void *)swift_dynamicCastObjCClass(v25, v26);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "displayText");
    v46 = v25;
    if (v29)
    {
      v30 = v29;
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v33 = v32;

    }
    else
    {
      v31 = 0;
      v33 = 0;
    }
    v45 = v10[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 3];
    v34 = (uint64_t *)&a1[OBJC_IVAR___ICTagCell_displayText];
    v35 = *(_QWORD *)&a1[OBJC_IVAR___ICTagCell_displayText + 8];
    *v34 = v31;
    v34[1] = v33;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRelease(v35);
    objc_msgSend(*(id *)&a1[OBJC_IVAR___ICTagCell_imageView], "setImage:", 0);
    sub_1003B9AFC(0);
    a1[OBJC_IVAR___ICTagCell_includeSymbolPrefix] = 1;
    a1[OBJC_IVAR___ICTagCell_hasGroupInset] = v45;
    sub_1003B7138();
    sub_1003B8EB4();
    swift_bridgeObjectRelease(v33);
    objc_msgSend(a1, "ic_annotateWithTag:", v28);
    v36 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection], "excludedObjectIDs");
    v37 = sub_100167280();
    v38 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v36, v23, v37);

    v39 = objc_msgSend(v28, "objectID");
    LOBYTE(v36) = sub_100379FD0(v39, v38);

    swift_bridgeObjectRelease(v38);
    a1[OBJC_IVAR___ICTagCell_isExcluded] = v36 & 1;
    sub_1003B747C();

    goto LABEL_15;
  }

LABEL_16:
  sub_100128424(a3, (uint64_t)v48);
  v40 = sub_100012E18(&qword_1005D70C0);
  v41 = swift_dynamicCast(&v47, v48, (char *)&type metadata for Any + 8, v40, 6);
  v43 = v47;
  if (!v41)
    v43 = 0;
  v44 = *(_QWORD *)&a1[OBJC_IVAR___ICTagCell_identifier];
  *(_QWORD *)&a1[OBJC_IVAR___ICTagCell_identifier] = v43;
  return swift_unknownObjectRelease(v44, v42);
}

void sub_1002AA814(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  id v39[3];
  __int128 v40;
  __int128 v41;
  _UNKNOWN **v42;

  v9 = sub_100012E18(&qword_1005CFE60);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory.DeleteOptions(0);
  v37 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100128424(a3, (uint64_t)&v40);
  v19 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  if ((swift_dynamicCast(v39, &v40, (char *)&type metadata for Any + 8, v19, 6) & 1) != 0)
  {
    v20 = v39[0];
    if (objc_msgSend(v39[0], "ic_isHashtagType"))
    {
      v36 = v12;
      v21 = objc_msgSend(a4, "objectWithID:", v20);
      v22 = objc_opt_self(ICHashtag);
      v23 = swift_dynamicCastObjCClass(v21, v22);
      if (v23)
      {
        v24 = (void *)v23;
        v25 = a5 + 16;
        v26 = v21;
        sub_1002B87B4(v24);
        v35 = v26;

        swift_beginAccess(v25, v39, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v25);
        if (Strong)
        {
          v28 = Strong;
          *((_QWORD *)&v41 + 1) = type metadata accessor for TagCollectionView();
          v42 = &off_100567770;
          *(_QWORD *)&v40 = v28;
        }
        else
        {
          v42 = 0;
          v40 = 0u;
          v41 = 0u;
        }
        v29 = a1 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate;
        swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate, v38, 33, 0);
        sub_1002AB320((uint64_t)&v40, v29);
        swift_endAccess(v38);
        v30 = sub_100012E18(&qword_1005CFE70);
        v31 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
        v32 = swift_allocObject(v30, ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72), *(unsigned __int8 *)(v31 + 80) | 7);
        *(_OWORD *)(v32 + 16) = xmmword_100451C20;
        (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v15);
        v33 = type metadata accessor for UICellAccessory.LayoutDimension(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 1, 1, v33);
        UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(2, v11, 0, 0);
        static UICellAccessory.delete(displayed:options:actionHandler:)(v18, v14, 0, 0);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v36);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        UICollectionViewListCell.accessories.setter(v32);

      }
      else
      {

      }
    }
    else
    {

    }
  }
}

uint64_t sub_1002AAB5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[32];

  v10 = type metadata accessor for TagCollectionView();
  v11 = swift_dynamicCastClass(a1, v10);
  if (v11 && *(_BYTE *)(v11 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration) == 2)
  {
    sub_100128424(a3, (uint64_t)v17);
    v12 = type metadata accessor for TagEditingCell();
    v13 = a1;
    v14 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v17, v12, (char *)&type metadata for Any + 8);

  }
  else
  {
    sub_100128424(a3, (uint64_t)v17);
    v15 = type metadata accessor for TagCell();
    v14 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a5, a2, v17, v15, (char *)&type metadata for Any + 8);
  }
  sub_1000160C8((uint64_t)v17);
  return v14;
}

_QWORD *sub_1002AAC60(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *result;
  _QWORD *v15;
  _QWORD aBlock[5];
  uint64_t v17;
  _QWORD *v18;

  v2 = v1;
  v4 = objc_msgSend(v2, "indexer");
  v5 = objc_opt_self(ICTagCoreDataIndexer);
  v6 = swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
  {

    return _swiftEmptyArrayStorage;
  }
  v7 = v6;
  v18 = _swiftEmptyArrayStorage;
  v8 = (_QWORD *)swift_allocObject(&unk_100564C68, 40, 7);
  v8[2] = &v18;
  v8[3] = v7;
  v8[4] = a1;
  v9 = swift_allocObject(&unk_100564C90, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1002AAF8C;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000165D0;
  v17 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100016618;
  aBlock[3] = &unk_100564CA8;
  v10 = _Block_copy(aBlock);
  v11 = v17;
  v12 = v4;
  v13 = a1;
  swift_retain(v9);
  swift_release(v11);
  objc_msgSend(v13, "performBlockAndWait:", v10);

  _Block_release(v10);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v9, "", 97, 86, 45, 1);
  result = (_QWORD *)swift_release(v9);
  if ((v13 & 1) == 0)
  {
    v15 = v18;
    swift_release(v8);
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002AAE04(uint64_t *a1, id a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;

  v5 = objc_msgSend(a2, "objectIDs");
  v6 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  v8 = a3;
  v9 = sub_1002AAFA8(v7, v8);
  swift_bridgeObjectRelease(v7);

  v10 = *a1;
  *a1 = (uint64_t)v9;
  return swift_bridgeObjectRelease(v10);
}

uint64_t type metadata accessor for TagDataSource()
{
  return objc_opt_self(_TtC11MobileNotes13TagDataSource);
}

uint64_t sub_1002AAF60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002AAF8C()
{
  uint64_t v0;

  return sub_1002AAE04(*(uint64_t **)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1002AAF98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1002AAFA8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(a2, "objectWithID:", v6);
      v10 = objc_opt_self(ICHashtag);
      v11 = swift_dynamicCastObjCClass(v9, v10);

      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v14);
      }
      else
      {

      }
      ++v5;
      if (v8 == v4)
        goto LABEL_20;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002AB150()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002AB174()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AB1A0(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002AA348(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1002AB1A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002AB1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1002AA814(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1002AB1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_100012E18(&qword_1005D7090);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_100012E18(&qword_1005D7098);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1002AB298(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(sub_100012E18(&qword_1005D7090) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D7098) - 8) + 80);
  return sub_1002AAB5C(a1, a2, a3, v3 + v8, v3 + ((v8 + v9 + v10) & ~v10));
}

uint64_t sub_1002AB320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18((uint64_t *)&unk_1005D70A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void TagEntity.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;

  v3 = a1;
  TagID.init(_:)();
  v4 = objc_msgSend(v3, "objectID");
  v5 = objc_msgSend(v4, "URIRepresentation");

  v6 = type metadata accessor for TagEntity(0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v5);

  v7 = objc_msgSend(v3, "standardizedContent");
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xE000000000000000;
  }
  v12 = (uint64_t *)(a2 + *(int *)(v6 + 24));
  *v12 = v9;
  v12[1] = v11;
  v13 = objc_msgSend(v3, "displayText");
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v17 = v16;

  }
  else
  {

    v15 = 0;
    v17 = 0xE000000000000000;
  }
  v18 = (uint64_t *)(a2 + *(int *)(v6 + 28));
  *v18 = v15;
  v18[1] = v17;
}

uint64_t type metadata accessor for TagEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D71F8;
  if (!qword_1005D71F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TagEntity);
  return result;
}

uint64_t sub_1002AB4D8()
{
  uint64_t result;
  uint64_t v1;

  result = _s11MobileNotes18VisibleTablesQueryVACycfC_0();
  static TagEntity.defaultQuery = result;
  *(_QWORD *)algn_100601AF8 = v1;
  return result;
}

uint64_t *TagEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_1005CEBF0 != -1)
    swift_once(&qword_1005CEBF0, sub_1002AB4D8);
  return &static TagEntity.defaultQuery;
}

uint64_t static TagEntity.defaultQuery.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1005CEBF0 != -1)
    swift_once(&qword_1005CEBF0, sub_1002AB4D8);
  v0 = static TagEntity.defaultQuery;
  v1 = *(_QWORD *)algn_100601AF8;
  swift_retain(static TagEntity.defaultQuery);
  swift_retain(v1);
  return v0;
}

uint64_t sub_1002AB59C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static TagEntity.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static TagEntity.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(6775124, 0xE300000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "App entity name", 15, 2);
  LocalizedStringResource.init(stringLiteral:)(0x67617420646C6C25, 0xE900000000000073);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v2, 0, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t TagEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEBF8 != -1)
    swift_once(&qword_1005CEBF8, sub_1002AB59C);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static TagEntity.typeDisplayRepresentation);
}

uint64_t static TagEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEBF8 != -1)
    swift_once(&qword_1005CEBF8, sub_1002AB59C);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static TagEntity.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t TagEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TagID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TagEntity.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TagID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t TagEntity.managedObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TagEntity.managedObjectURI.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TagEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TagEntity.managedObjectURI.modify())()
{
  type metadata accessor for TagEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t TagEntity.standardizedContent.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TagEntity(0) + 24));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t TagEntity.standardizedContent.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TagEntity(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TagEntity.standardizedContent.modify())()
{
  type metadata accessor for TagEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t TagEntity.displayText.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TagEntity(0) + 28));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t TagEntity.displayText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TagEntity(0) + 28));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TagEntity.displayText.modify())()
{
  type metadata accessor for TagEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t TagEntity.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for TagID(0);
  v5 = sub_100019C6C(&qword_1005D70C8, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  v6 = type metadata accessor for TagEntity(0);
  v7 = type metadata accessor for URL(0);
  v8 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(a1, v7, v8);
  v9 = (uint64_t *)(v1 + *(int *)(v6 + 24));
  v10 = *v9;
  v11 = v9[1];
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease(v11);
  v12 = (uint64_t *)(v2 + *(int *)(v6 + 28));
  v13 = *v12;
  v14 = v12[1];
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(a1, v13, v14);
  return swift_bridgeObjectRelease(v14);
}

Swift::Int TagEntity.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[9];

  v1 = v0;
  Hasher.init(_seed:)(v14, 0);
  v2 = type metadata accessor for TagID(0);
  v3 = sub_100019C6C(&qword_1005D70C8, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
  dispatch thunk of Hashable.hash(into:)(v14, v2, v3);
  v4 = type metadata accessor for TagEntity(0);
  v5 = type metadata accessor for URL(0);
  v6 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v14, v5, v6);
  v7 = (uint64_t *)(v0 + *(int *)(v4 + 24));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(v14, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = (uint64_t *)(v1 + *(int *)(v4 + 28));
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  String.hash(into:)(v14, v11, v12);
  swift_bridgeObjectRelease(v12);
  return Hasher._finalize()();
}

Swift::Int sub_1002ABD1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[9];

  v3 = v1;
  Hasher.init(_seed:)(v15, 0);
  v4 = type metadata accessor for TagID(0);
  v5 = sub_100019C6C(&qword_1005D70C8, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
  dispatch thunk of Hashable.hash(into:)(v15, v4, v5);
  v6 = type metadata accessor for URL(0);
  v7 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v15, v6, v7);
  v8 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  v9 = *v8;
  v10 = v8[1];
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v15, v9, v10);
  swift_bridgeObjectRelease(v10);
  v11 = (uint64_t *)(v3 + *(int *)(a1 + 28));
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain(v13);
  String.hash(into:)(v15, v12, v13);
  swift_bridgeObjectRelease(v13);
  return Hasher._finalize()();
}

uint64_t sub_1002ABE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v2;
  v6 = type metadata accessor for TagID(0);
  v7 = sub_100019C6C(&qword_1005D70C8, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
  dispatch thunk of Hashable.hash(into:)(a1, v6, v7);
  v8 = type metadata accessor for URL(0);
  v9 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(a1, v8, v9);
  v10 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  String.hash(into:)(a1, v11, v12);
  swift_bridgeObjectRelease(v12);
  v13 = (uint64_t *)(v4 + *(int *)(a2 + 28));
  v14 = *v13;
  v15 = v13[1];
  swift_bridgeObjectRetain(v15);
  String.hash(into:)(a1, v14, v15);
  return swift_bridgeObjectRelease(v15);
}

Swift::Int sub_1002ABF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[9];

  v4 = v2;
  Hasher.init(_seed:)(v16, a1);
  v5 = type metadata accessor for TagID(0);
  v6 = sub_100019C6C(&qword_1005D70C8, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
  dispatch thunk of Hashable.hash(into:)(v16, v5, v6);
  v7 = type metadata accessor for URL(0);
  v8 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v16, v7, v8);
  v9 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  v10 = *v9;
  v11 = v9[1];
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(v16, v10, v11);
  swift_bridgeObjectRelease(v11);
  v12 = (uint64_t *)(v4 + *(int *)(a2 + 28));
  v13 = *v12;
  v14 = v12[1];
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(v16, v13, v14);
  swift_bridgeObjectRelease(v14);
  return Hasher._finalize()();
}

uint64_t sub_1002AC040@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEBF0 != -1)
    swift_once(&qword_1005CEBF0, sub_1002AB4D8);
  v2 = static TagEntity.defaultQuery;
  v3 = *(_QWORD *)algn_100601AF8;
  *a1 = static TagEntity.defaultQuery;
  a1[1] = v3;
  swift_retain(v2);
  return swift_retain(v3);
}

uint64_t sub_1002AC09C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t TagEntity.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  uint64_t v8;

  v1 = objc_msgSend((id)objc_opt_self(NSString), "ic_hashtagCharacterString");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  v8 = v2;
  v3 = (uint64_t *)(v0 + *(int *)(type metadata accessor for TagEntity(0) + 28));
  v4 = *v3;
  v5 = (void *)v3[1];
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  return v8;
}

uint64_t TagEntity.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 2);
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v5);
  v6 = objc_msgSend((id)objc_opt_self(NSString), "ic_hashtagCharacterString");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  v12 = *(Swift::String *)(v1 + *(int *)(type metadata accessor for TagEntity(0) + 28));
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v12);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
  return LocalizedStringResource.init(stringInterpolation:)(v4);
}

uint64_t sub_1002AC28C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;

  v3 = objc_msgSend((id)objc_opt_self(NSString), "ic_hashtagCharacterString");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  v5 = (uint64_t *)(v1 + *(int *)(a1 + 28));
  v6 = *v5;
  v7 = (void *)v5[1];
  swift_bridgeObjectRetain(v7);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  return v4;
}

uint64_t TagEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::String v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  _QWORD v27[2];

  v2 = v1;
  v27[1] = a1;
  v3 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 2);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
  v17 = objc_msgSend((id)objc_opt_self(NSString), "ic_hashtagCharacterString");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  v23 = *(Swift::String *)(v2 + *(int *)(type metadata accessor for TagEntity(0) + 28));
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v23);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
  LocalizedStringResource.init(stringInterpolation:)(v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
  v25 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
  return DisplayRepresentation.init(title:subtitle:image:)(v15, v8, v5);
}

uint64_t sub_1002AC540(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C(&qword_1005D7130, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t TagEntity.init(for:in:)(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v6 = type metadata accessor for TagEntity(0);
  v3[5] = v6;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2;
  v8 = a3;
  return swift_task_switch(sub_1002AC604, 0, 0);
}

uint64_t sub_1002AC604()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;

  v2 = (void *)v0[3];
  v1 = (void *)v0[4];
  v3 = swift_allocObject(&unk_100564DA8, 32, 7);
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v5 = v2;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v4);
  v0[8] = v7;
  *v7 = v0;
  v7[1] = sub_1002AC69C;
  return NSManagedObjectContext.perform<A>(_:)(v0[6], sub_10013B1FC, v3, v0[5]);
}

uint64_t sub_1002AC69C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002726C4;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 56));
    v4 = sub_1002AC708;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002AC708()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);

  sub_1002ACEDC(v1, v4);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TagEntity.init(for:in:includeContents:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1002AC788, 0, 0);
}

uint64_t sub_1002AC788()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = (void *)v0[3];
  v1 = (void *)v0[4];
  v3 = swift_allocObject(&unk_100564DD0, 32, 7);
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v5 = v1;
  v6 = v2;
  v7 = (_QWORD *)swift_task_alloc(v4);
  v0[6] = v7;
  v8 = type metadata accessor for TagEntity(0);
  *v7 = v0;
  v7[1] = sub_1002727E0;
  return NSManagedObjectContext.perform<A>(_:)(v0[2], sub_1002AD9DC, v3, v8);
}

void sub_1002AC82C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;

  v12 = 0;
  v4 = objc_msgSend(a1, "existingObjectWithID:error:", a2, &v12);
  v5 = v12;
  if (v4)
  {
    v6 = v4;
    v7 = objc_opt_self(ICHashtag);
    v8 = (void *)swift_dynamicCastObjCClassUnconditional(v6, v7, 0, 0, 0);
    v9 = v5;
    TagEntity.init(_:)(v8, a3);
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v5);

    swift_willThrow(v11);
  }
}

uint64_t TagEntity.init(for:in:includeContents:noteContext:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  id v9;
  id v10;

  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  v8 = type metadata accessor for TagEntity(0);
  v5[6] = v8;
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2;
  v10 = a3;
  return swift_task_switch(sub_1002AC984, 0, 0);
}

uint64_t sub_1002AC984()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;

  v2 = (void *)v0[3];
  v1 = (void *)v0[4];
  v3 = swift_allocObject(&unk_100564DF8, 32, 7);
  v0[8] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v5 = v2;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v4);
  v0[9] = v7;
  *v7 = v0;
  v7[1] = sub_1002ACA1C;
  return NSManagedObjectContext.perform<A>(_:)(v0[7], sub_1002AD9DC, v3, v0[6]);
}

uint64_t sub_1002ACA1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100272CB8;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 64));
    v4 = sub_1002ACA88;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002ACA88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(void **)(v0 + 24);

  sub_1002ACEDC(v1, v4);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static TagEntity.managedObjectID(for:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D70F0 + dword_1005D70F0);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D70F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100158D18;
  return v7(a1, a2);
}

void sub_1002ACB64(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  void *v4;
  NSString v5;
  id v6;

  v4 = (void *)objc_opt_self(ICHashtag);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "hashtagObjectIDWithStandardizedContent:context:", v5, a1);

  *a2 = v6;
}

uint64_t sub_1002ACBF0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D70D4);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100145358;
  return TagEntity.init(for:in:)(a1, a2, a3);
}

uint64_t sub_1002ACC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[4] = a3;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  return swift_task_switch(sub_1002ACC74, 0, 0);
}

uint64_t sub_1002ACC74()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;

  v2 = (void *)v0[3];
  v1 = (void *)v0[4];
  v3 = swift_allocObject(&unk_100564E20, 32, 7);
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v5 = v1;
  v6 = v2;
  v7 = (_QWORD *)swift_task_alloc(v4);
  v0[7] = v7;
  *v7 = v0;
  v7[1] = sub_1002730F4;
  return NSManagedObjectContext.perform<A>(_:)(v0[2], sub_1002AD9DC, v3, v0[5]);
}

uint64_t sub_1002ACD0C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc(dword_1005D70E4);
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_100130768;
  return TagEntity.init(for:in:includeContents:noteContext:)(a1, a2, a3, 0, a5);
}

uint64_t sub_1002ACD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D70F0 + dword_1005D70F0);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D70F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100159034;
  return v7(a1, a2);
}

uint64_t _s11MobileNotes9TagEntityV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  if ((static TagID.== infix(_:_:)() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for TagEntity(0);
  if ((static URL.== infix(_:_:)(a1 + v4[5], a2 + v4[5]) & 1) == 0)
    return 0;
  v5 = v4[6];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  v10 = v6 == *v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *v8, v9, 0), result = 0, (v11 & 1) != 0))
  {
    v13 = v4[7];
    v14 = *(_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v16[1];
    if (v14 == *v16 && v15 == v17)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, *v16, v17, 0);
  }
  return result;
}

uint64_t sub_1002ACEB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002ACEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TagEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002ACF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_1002ACF38, 0, 0);
}

uint64_t sub_1002ACF38()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = objc_msgSend(*(id *)(v0 + 32), "modernManagedObjectContext");
  *(_QWORD *)(v0 + 40) = v1;
  v2 = (void *)objc_opt_self(ICHashtag);
  TagID.displayText.getter();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = objc_msgSend(v2, "standardizedHashtagRepresentationForDisplayText:", v5);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = (_QWORD *)swift_allocObject(&unk_100564E48, 40, 7);
  *(_QWORD *)(v0 + 48) = v10;
  v10[2] = v7;
  v10[3] = v9;
  v10[4] = v1;
  v11 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v1;
  v12 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 56) = v12;
  v13 = sub_100012E18(&qword_1005D1230);
  *v12 = v0;
  v12[1] = sub_1002AD06C;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 16, sub_10013B1E0, v10, v13);
}

uint64_t sub_1002AD06C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_release(v1);
  return swift_task_switch(sub_1002AD0C8, 0, 0);
}

uint64_t sub_1002AD0C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002AD0F8()
{
  return sub_100019C6C(&qword_1005D3E30, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD124()
{
  return sub_100019C6C(&qword_1005D70F8, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD150()
{
  return sub_100019C6C(&qword_1005D7100, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD17C()
{
  return sub_100019C6C(&qword_1005D7108, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD1AC()
{
  return sub_100019C6C((unint64_t *)&unk_1005DB510, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
}

uint64_t sub_1002AD1D8()
{
  return sub_100019C6C(&qword_1005D7110, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD204()
{
  return sub_100019C6C(&qword_1005D7118, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD230()
{
  return sub_100019C6C(&qword_1005D3E20, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD25C()
{
  return sub_100019C6C(&qword_1005D70C8, (uint64_t (*)(uint64_t))&type metadata accessor for TagID, (uint64_t)&protocol conformance descriptor for TagID);
}

unint64_t sub_1002AD28C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D7120;
  if (!qword_1005D7120)
  {
    v1 = sub_10001537C(&qword_1005D7128);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D7120);
  }
  return result;
}

uint64_t sub_1002AD2D8()
{
  return sub_100019C6C(&qword_1005D7130, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD304()
{
  return sub_100019C6C(&qword_1005D7138, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
}

uint64_t sub_1002AD330(uint64_t a1)
{
  uint64_t result;

  result = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TagEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for TagID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (uint64_t *)((char *)a1 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v19);
  }
  return a1;
}

uint64_t destroy for TagEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for TagID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t initializeWithCopy for TagEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for TagID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v18);
  return a1;
}

uint64_t assignWithCopy for TagEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for TagID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t initializeWithTake for TagEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for TagID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for TagEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = type metadata accessor for TagID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TagEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AD7C0);
}

uint64_t sub_1002AD7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for TagID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TagEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AD878);
}

uint64_t sub_1002AD878(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for TagID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1002AD920(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for TagID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100460628;
      v5[3] = &unk_100460628;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002AD9B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002AD9DC(uint64_t a1@<X8>)
{
  sub_10013B1FC(a1);
}

void sub_1002ADA64()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  char *v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for FolderComposerFolderViewController(0);
  objc_msgSendSuper2(&v13, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10032EC38();
    objc_msgSend(v2, "addSubview:", v3);

    v4 = sub_10032EC38();
    objc_msgSend(v4, "ic_addAnchorsToFillSuperview");

    v5 = objc_msgSend(v0, "navigationItem");
    v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v5, "setTitle:", v11);

    v12 = sub_1002ADCEC();
    objc_msgSend(v12, "reloadDataAnimated:", 0);

  }
  else
  {
    __break(1u);
  }
}

char *sub_1002ADCEC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  char *result;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  void *v17;
  id v18;

  v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController____lazy_storage___folderSelectionDataSource;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController____lazy_storage___folderSelectionDataSource);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController____lazy_storage___folderSelectionDataSource);
LABEL_8:
    v18 = v2;
    return v3;
  }
  v4 = v0;
  result = (char *)objc_msgSend((id)objc_opt_self(NoteContext), "sharedContext");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, "managedObjectContext");

    v8 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "managedObjectContext");

    }
    else
    {
      v10 = 0;
    }
    v11 = *(void **)(v4 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController_accountObjectID);
    v12 = *(id *)(v4 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController_folderSelection);
    v13 = v11;
    v14 = sub_10032EC38();
    v15 = objc_allocWithZone((Class)type metadata accessor for FolderComposerFolderSelectionDataSource(0));
    v16 = sub_1001754CC(v7, v10, v12, v13, v14);
    v17 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v16;
    v3 = v16;

    v2 = 0;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1002ADE74()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController____lazy_storage___folderSelectionDataSource));
}

id sub_1002ADEB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFolderViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002ADF2C()
{
  return type metadata accessor for FolderComposerFolderViewController(0);
}

uint64_t type metadata accessor for FolderComposerFolderViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D7268;
  if (!qword_1005D7268)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FolderComposerFolderViewController);
  return result;
}

uint64_t sub_1002ADF70(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = "\b";
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 216);
}

void sub_1002ADFC0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Class isa;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  id v16;
  NSString v17;
  char **v18;
  id v19;
  _QWORD *v20;
  char v21;
  id v22;
  Class v23;
  id v24;

  v1 = v0;
  v2 = sub_10032EC38();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v2, "cellForItemAtIndexPath:", isa);

  if (v24)
  {
    v4 = objc_opt_self(ICFolderOutlineCollectionViewCell);
    v5 = (void *)swift_dynamicCastObjCClass(v24, v4);
    if (v5
      && (v6 = v5, (v7 = objc_msgSend(v5, "noteContainer")) != 0)
      && (v8 = v7, v9 = objc_msgSend(v7, "identifier"), v8, v9))
    {
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v13 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController_folderSelection;
      v14 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFolderViewController_folderSelection), "folderIdentifiers");
      v15 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String);

      LOBYTE(v14) = sub_100263A64(v10, v12, v15);
      swift_bridgeObjectRelease(v15);
      v16 = *(id *)(v1 + v13);
      v17 = String._bridgeToObjectiveC()();
      v18 = &selRef_removeFolderIdentifier_;
      if ((v14 & 1) == 0)
        v18 = &selRef_addFolderIdentifier_;
      objc_msgSend(v16, *v18, v17);

      v19 = objc_msgSend(*(id *)(v1 + v13), "folderIdentifiers");
      v20 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String);

      v21 = sub_100263A64(v10, v12, v20);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v20);
      objc_msgSend(v6, "setShowsCheckmark:", v21 & 1);
      v22 = sub_10032EC38();
      v23 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "deselectItemAtIndexPath:animated:", v23, 0);

    }
    else
    {

    }
  }
}

uint64_t static ICViewControllerManager.createDonation(of:transcript:date:isFeedbackPositive:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  *(_BYTE *)(v5 + 344) = a4;
  *(_QWORD *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 64) = v4;
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a2;
  v6 = sub_100012E18((uint64_t *)&unk_1005D06A0);
  *(_QWORD *)(v5 + 72) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D7280);
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D7288);
  *(_QWORD *)(v5 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D7290);
  *(_QWORD *)(v5 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  *(_QWORD *)(v5 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  *(_QWORD *)(v5 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SpeechDonation(0);
  *(_QWORD *)(v5 + 120) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v5 + 128) = v13;
  *(_QWORD *)(v5 + 136) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SpeechDonation.TranscriptionEvaluation(0);
  *(_QWORD *)(v5 + 144) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v5 + 152) = v15;
  *(_QWORD *)(v5 + 160) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  *(_QWORD *)(v5 + 168) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v5 + 176) = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 184) = swift_task_alloc(v18);
  *(_QWORD *)(v5 + 192) = swift_task_alloc(v18);
  *(_QWORD *)(v5 + 200) = swift_task_alloc(v18);
  *(_QWORD *)(v5 + 208) = swift_task_alloc(v18);
  *(_QWORD *)(v5 + 216) = swift_task_alloc(v18);
  v19 = type metadata accessor for URL(0);
  *(_QWORD *)(v5 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AudioBufferSequence(0);
  *(_QWORD *)(v5 + 232) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v5 + 240) = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 248) = swift_task_alloc(v22);
  *(_QWORD *)(v5 + 256) = swift_task_alloc(v22);
  *(_QWORD *)(v5 + 264) = swift_task_alloc(v22);
  return swift_task_switch(sub_1002AE44C, 0, 0);
}

uint64_t sub_1002AE44C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  v1 = v0[28];
  v2 = v0[5];
  v3 = objc_msgSend(objc_allocWithZone((Class)AVAudioFormat), "initWithCommonFormat:sampleRate:channels:interleaved:", 3, 1, 0, 16000.0);
  v0[34] = v3;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;
  AudioBufferSequence.init(url:processingFormat:)(v1, v3);
  v5 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[30] + 32))(v0[33], v0[32], v0[29]);
  v0[2] = _swiftEmptyArrayStorage;
  AudioBufferSequence.makeAsyncIterator()(v5);
  v6 = sub_1002AF394();
  v0[35] = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[36] = v7;
  *v7 = v0;
  v7[1] = sub_1002AE70C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 3, v0[29], v6);
}

uint64_t sub_1002AE70C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 288));
  if (v0)
  {
    *(_QWORD *)(v2 + 304) = v0;
    v3 = sub_1002AEAA4;
  }
  else
  {
    *(_DWORD *)(v2 + 336) = 960000;
    v3 = sub_1002AE77C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002AE77C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 24);
  return swift_task_switch(sub_1002AE798, 0, 0);
}

uint64_t sub_1002AE798()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  unsigned int v3;
  unsigned int v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
LABEL_6:
    v9 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 232);
    v11 = *(unsigned __int8 *)(v0 + 344);
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 8);
    *(_QWORD *)(v0 + 320) = v12;
    v13 = v12(v9, v10);
    if (v11 == 1)
      v14 = static SpeechDonation.TranscriptionEvaluation.accurate.getter(v13);
    else
      v14 = static SpeechDonation.TranscriptionEvaluation.inaccurate.getter(v13);
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 96);
    v39 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 56);
    v23 = (id)ICNotesAppBundleIdentifier(v14);
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v41 = v25;
    v42 = v24;

    v26 = static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v40 = *(_QWORD *)(v0 + 16);
    static Locale.current.getter(v26);
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v29 = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v16, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v17);
    v30 = type metadata accessor for TaskHint(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v39, 1, 1, v30);
    v31 = type metadata accessor for SpeechDonation.AudioSource(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v43, 1, 1, v31);
    SpeechDonation.init(donorBundleID:recordingDate:audioBuffers:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)(v42, v41, v19, v40, v18, v27, v29, v20, &_swiftEmptySetSingleton, v39, v43);
    v32 = (_QWORD *)swift_task_alloc(async function pointer to SpeechDonation.donate()[1]);
    *(_QWORD *)(v0 + 328) = v32;
    *v32 = v0;
    v32[1] = sub_1002AED50;
    return SpeechDonation.donate()(*(_QWORD *)(v0 + 72));
  }
  v2 = (_QWORD *)(v0 + 16);
  v3 = *(_DWORD *)(v0 + 336);
  v4 = objc_msgSend(*(id *)(v0 + 296), "frameLength");
  *(_DWORD *)(v0 + 340) = v4;
  if (v3 < v4)
  {
    v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(*(_QWORD *)(v0 + 64)), "trimBuffer:toFrameLength:", v1, *(unsigned int *)(v0 + 336));
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = *(_QWORD *)((*(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v6 = *(_QWORD *)((*(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v7 >= v6 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v7 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v5);
    specialized Array._endMutation()(v8);

    goto LABEL_6;
  }
  v34 = v1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
  v36 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v35 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
  specialized Array._endMutation()(v37);

  v38 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 312) = v38;
  *v38 = v0;
  v38[1] = sub_1002AECDC;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 24, *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 280));
}

uint64_t sub_1002AEAA4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[4] = v0[38];
  v1 = sub_100012E18(&qword_1005D7A90);
  swift_willThrowTypedImpl(v0 + 4, v1, &protocol self-conformance witness table for Error);
  swift_bridgeObjectRelease(v0[2]);
  return swift_task_switch(sub_1002AEB0C, 0, 0);
}

uint64_t sub_1002AEB0C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 8);
  v2 = v1(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  v3 = static Logger.audioTranscription.getter(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Audio Donation: Failure iterating audio buffer", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 264);
  v8 = *(void **)(v0 + 272);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 176);
  swift_errorRelease(*(_QWORD *)(v0 + 304));

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v1(v7, v9);
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 224);
  v18 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 192);
  v21 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 112);
  v25 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 80);
  v29 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002AECDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 312));
  if (v0)
  {
    *(_QWORD *)(v2 + 304) = v0;
    v3 = sub_1002AEAA4;
  }
  else
  {
    *(_DWORD *)(v2 + 336) -= *(_DWORD *)(v2 + 340);
    v3 = sub_1002AE77C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002AED50()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_1002AEDA4, 0, 0);
}

uint64_t sub_1002AEDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = type metadata accessor for UUID(0);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  if ((_DWORD)v3 != 1)
  {
    if (*(_BYTE *)(v0 + 344) == 1)
    {
      v4 = (uint64_t *)(v0 + 208);
      v9 = static Logger.audioTranscription.getter(v3);
      v6 = Logger.logObject.getter(v9);
      v7 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = "Audio Donation: Success reporting positive feedback";
        goto LABEL_9;
      }
    }
    else
    {
      v4 = (uint64_t *)(v0 + 200);
      v10 = static Logger.audioTranscription.getter(v3);
      v6 = Logger.logObject.getter(v10);
      v7 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = "Audio Donation: Success reporting negative feedback";
        goto LABEL_9;
      }
    }
LABEL_10:
    v42 = *v4;
    goto LABEL_11;
  }
  v4 = (uint64_t *)(v0 + 192);
  v5 = static Logger.audioTranscription.getter(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v6, v7))
    goto LABEL_10;
  v8 = "Audio Donation: Failure";
LABEL_9:
  v42 = *v4;
  v11 = (uint8_t *)swift_slowAlloc(2, -1);
  *(_WORD *)v11 = 0;
  _os_log_impl((void *)&_mh_execute_header, v6, v7, v8, v11, 2u);
  swift_slowDealloc(v11, -1, -1);
LABEL_11:
  v12 = v6;
  v13 = *(void **)(v0 + 272);
  v38 = *(_QWORD *)(v0 + 264);
  v40 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
  v15 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 72);
  v36 = *(_QWORD *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v42, v15);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  v40(v38, v36);
  sub_1002AF3DC(v34);
  v22 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 248);
  v25 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 200);
  v26 = *(_QWORD *)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 192);
  v30 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 136);
  v33 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v37 = *(_QWORD *)(v0 + 96);
  v39 = *(_QWORD *)(v0 + 88);
  v41 = *(_QWORD *)(v0 + 80);
  v43 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002AF1B8(void *a1, void *a2, void *a3, char a4, void *aBlock, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;

  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v6[5] = _Block_copy(aBlock);
  swift_getObjCClassMetadata(a6);
  v12 = dword_1005D727C;
  v13 = a1;
  v14 = a2;
  v15 = a3;
  v16 = (_QWORD *)swift_task_alloc(v12);
  v6[6] = v16;
  *v16 = v6;
  v16[1] = sub_1002AF26C;
  return static ICViewControllerManager.createDonation(of:transcript:date:isFeedbackPositive:)((uint64_t)v13, (uint64_t)v14, (uint64_t)v15, a4);
}

uint64_t sub_1002AF26C()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  void *v3;
  void *v4;
  uint64_t v6;

  v1 = *(void (***)(_QWORD))(*v0 + 40);
  v3 = *(void **)(*v0 + 24);
  v2 = *(void **)(*v0 + 32);
  v4 = *(void **)(*v0 + 16);
  v6 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1002AF2E4(uint64_t result, uint64_t a2, uint64_t a3, int a4, void *__dst, uint64_t a6)
{
  uint64_t v7;
  const void *v8;

  if (__OFADD__(result, a2 - result))
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = a2 - result;
  if (a2 < result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!a3)
    return 0;
  if (v7 <= a6)
  {
    if (__dst)
    {
      v8 = (const void *)(a3 + 2 * result);
      if (v8 != __dst || a3 + 2 * a2 <= (unint64_t)__dst)
        memmove(__dst, v8, 2 * v7);
    }
    return v7;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1002AF394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D7298;
  if (!qword_1005D7298)
  {
    v1 = type metadata accessor for AudioBufferSequence(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AudioBufferSequence, v1);
    atomic_store(result, (unint64_t *)&qword_1005D7298);
  }
  return result;
}

uint64_t sub_1002AF3DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18((uint64_t *)&unk_1005D06A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1002AF41C(void *a1, uint64_t a2)
{
  uint64_t *v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  id v10;
  id v11;
  void **v12;
  id v13;
  unsigned int v14;
  void *v15;

  v4 = (uint64_t *)objc_msgSend(a1, "int16ChannelData");
  v5 = objc_msgSend(a1, "format");
  v6 = objc_msgSend(v5, "channelCount");

  if (v6)
    v7 = *v4;
  else
    v7 = 0;
  v8 = objc_msgSend(a1, "frameLength");
  v9 = objc_msgSend(a1, "frameLength");
  v10 = objc_msgSend(a1, "format");
  v11 = objc_msgSend(objc_allocWithZone((Class)AVAudioPCMBuffer), "initWithPCMFormat:frameCapacity:", v10, a2);

  if (v11)
  {
    objc_msgSend(v11, "setFrameLength:", objc_msgSend(v11, "frameCapacity"));
    v12 = (void **)objc_msgSend(v11, "int16ChannelData");
    v13 = objc_msgSend(v11, "format");
    v14 = objc_msgSend(v13, "channelCount");

    if (v14)
      v15 = *v12;
    else
      v15 = 0;
    if (v9 >= a2)
      a2 = a2;
    else
      a2 = v9;
    sub_1002AF2E4(0, a2, v7, v8, v15, objc_msgSend(v11, "frameLength"));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002AF5BC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002AF5F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  v7 = *(void **)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = (_QWORD *)swift_task_alloc(dword_1005D72A4);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_100145358;
  return ((uint64_t (*)(void *, void *, void *, char, void *, uint64_t))((char *)&dword_1005D72A0
                                                                                + dword_1005D72A0))(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_1002AF68C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1005D9E24);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_100145358;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1005D9E20 + dword_1005D9E20))(v2, v3, v4);
}

uint64_t sub_1002AF708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_1002AF734(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D9E34);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100130768;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1005D9E30 + dword_1005D9E30))(a1, v4, v5, v6);
}

void sub_1002AF7B8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v4 = sub_100012E18(&qword_1005D7370);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_1005650F8, v8 + v6, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10016EF18;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10016EB00;
  aBlock[3] = &unk_100565110;
  v10 = _Block_copy(aBlock);
  swift_release(v12);
  objc_msgSend(a2, "performDecisionWithCompletion:", v10);
  _Block_release(v10);
}

uint64_t MoveNotesToFolderIntent.perform()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v2[11] = a1;
  v2[12] = v1;
  v3 = type metadata accessor for FolderEntity(0);
  v2[13] = v3;
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[15] = v4;
  v2[16] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v2[17] = v6;
  v2[18] = v7;
  return swift_task_switch(sub_1002AF97C, v6, v7);
}

void sub_1002AF97C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  Class isa;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;

  v1 = *(void **)(*(_QWORD *)(v0 + 96) + 16);
  *(_QWORD *)(v0 + 152) = v1;
  if (!v1)
  {
    swift_release(*(_QWORD *)(v0 + 128));
    type metadata accessor for ICError(0);
    v33 = v32;
    *(_QWORD *)(v0 + 24) = 222;
    v34 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v35 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v36 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 16), v0 + 24, v34, v33, v35);
    swift_willThrow(v36);
LABEL_8:
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = v1;
  v3 = objc_msgSend(v2, "rootViewController");
  *(_QWORD *)(v0 + 160) = v3;
  if (!v3)
  {
    swift_release(*(_QWORD *)(v0 + 128));
    type metadata accessor for ICError(0);
    v38 = v37;
    *(_QWORD *)(v0 + 40) = 222;
    v39 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v40 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v41 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 32), v0 + 40, v39, v38, v40);
    swift_willThrow(v41);

    goto LABEL_8;
  }
  v42 = v3;
  v4 = *(_QWORD **)(v0 + 112);
  v43 = *(_QWORD *)(v0 + 104);
  v5 = *(uint64_t **)(v0 + 96);
  v6 = v5[1];
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 48));
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *v5;
  v10 = v5[3];
  v9 = v5[4];
  v11 = v2;
  swift_retain(v8);
  swift_retain(v6);
  swift_retain(v10);
  swift_retain(v9);
  sub_1002B0FB0(v7);
  v13 = v12;
  swift_release(v8);
  swift_release(v6);

  swift_release(v10);
  swift_release(v9);
  swift_bridgeObjectRelease(v7);
  IntentParameter.wrappedValue.getter(v4);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 64));
  v14 = *(void **)(v0 + 64);
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v43 + 20));
  v16 = v15;
  v17 = objc_msgSend(v14, "managedObjectIDForURIRepresentation:", v15);

  if (v17)
  {
    v18 = objc_msgSend(v14, "managedObjectContextForObjectID:", v17);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)(v0 + 112);
      v21 = *(_QWORD *)(v0 + 120);
      v22 = objc_msgSend(v18, "objectWithID:", v17);
      *(_QWORD *)(v0 + 168) = v22;

      *(_QWORD *)(v0 + 72) = &OBJC_PROTOCOL___ICFolderObject;
      v23 = swift_dynamicCastObjCProtocolUnconditional(v22, 1, v0 + 72, 0, 0, 0);
      sub_10020148C(v20);
      v24 = sub_1002AFF84(v13);
      swift_bridgeObjectRelease(v13);
      v25 = objc_allocWithZone((Class)ICMoveDecisionController);
      v26 = v42;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v24);
      v28 = objc_msgSend(v25, "initWithSourceObjects:presentingViewController:", isa, v26);
      *(_QWORD *)(v0 + 176) = v28;

      *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(objc_msgSend(v28, "setDestination:", v23));
      v30 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor, v29);
      *(_QWORD *)(v0 + 192) = v30;
      *(_QWORD *)(v0 + 200) = v31;
      swift_task_switch(sub_1002AFD64, v30, v31);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1002AFD64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v1[22];
  v3 = static MainActor.shared.getter(a1);
  v1[26] = v3;
  v4 = swift_task_alloc(32);
  v1[27] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[28] = v5;
  v6 = sub_100012E18((uint64_t *)&unk_1005D72D0);
  *v5 = v1;
  v5[1] = sub_1002AFE28;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 10, v3, &protocol witness table for MainActor, 0xD000000000000011, 0x800000010047C2B0, sub_1002B1150, v4, v6);
}

uint64_t sub_1002AFE28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 216);
  v3 = *(_QWORD *)(*v0 + 208);
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002AFE90, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_1002AFE90()
{
  _QWORD *v0;

  swift_release(v0[23]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_task_switch(sub_1002AFED0, v0[17], v0[18]);
}

uint64_t sub_1002AFED0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(v0 + 168);
  v1 = *(void **)(v0 + 176);
  v4 = *(void **)(v0 + 152);
  v3 = *(void **)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = swift_release(*(_QWORD *)(v0 + 128));
  static IntentResult.result<>()(v6);

  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double MoveNotesToFolderIntent.init()@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1002B1158((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1002AFF84(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_1001370EC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v3 = v17;
      do
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v6 = sub_100012E18((uint64_t *)&unk_1005D1F10);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_1001370EC(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1001370EC(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v3[2] = v8 + 1;
        sub_1000160B8(v16, &v3[4 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v3 = v17;
      do
      {
        v15 = *v9;
        v10 = v15;
        v11 = sub_100012E18((uint64_t *)&unk_1005D1F10);
        swift_dynamicCast(v16, &v15, v11, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_1001370EC(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_1001370EC(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_1000160B8(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002B01C0(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  void **v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v15;
  _QWORD v16[3];
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_100137204(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (void **)(a1 + 48);
    do
    {
      v5 = (uint64_t)*(v4 - 1);
      v6 = *v4;
      v16[0] = *(v4 - 2);
      v16[1] = v5;
      v16[2] = v6;
      swift_bridgeObjectRetain_n(v5, 2);
      v7 = v6;
      v8 = sub_100012E18(&qword_1005D19E8);
      v9 = sub_100012E18((uint64_t *)&unk_1005D7360);
      swift_dynamicCast(&v17, v16, v8, v9, 7);
      v10 = v17;
      v15 = v18;

      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100137204(0, v2[2] + 1, 1);
        v2 = v19;
      }
      v12 = v2[2];
      v11 = v2[3];
      if (v12 >= v11 >> 1)
      {
        sub_100137204(v11 > 1, v12 + 1, 1);
        v2 = v19;
      }
      v2[2] = v12 + 1;
      v13 = &v2[3 * v12];
      v13[4] = v10;
      *(_OWORD *)(v13 + 5) = v15;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1002B0334(uint64_t a1)
{
  return sub_1002B06B4(a1, (unint64_t *)&unk_1005D7350, ICSearchSuggestion_ptr);
}

uint64_t sub_1002B0348(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_1001370EC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_1001370EC(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1001370EC(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_1000160B8(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_1001370EC(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_1001370EC(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_1000160B8(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002B05A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_100128424(v4, (uint64_t)v10);
      v5 = sub_1000163BC(0, &qword_1005D7348, UIWindow_ptr);
      v6 = swift_dynamicCast(&v11, v10, (char *)&type metadata for Any + 8, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_1002B06A0(uint64_t a1)
{
  return sub_1002B06B4(a1, (unint64_t *)&qword_1005D3D00, NSObject_ptr);
}

uint64_t sub_1002B06B4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  id *v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v29 = _swiftEmptyArrayStorage;
  result = sub_100137258(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v9 = 0;
      do
      {
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
        v10 = sub_1000163BC(0, a2, a3);
        swift_dynamicCast(&v26, &v25, v10, &type metadata for AnyHashable, 7);
        v7 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
        {
          sub_100137258(0, v7[2] + 1, 1);
          v7 = v29;
        }
        v12 = v7[2];
        v11 = v7[3];
        if (v12 >= v11 >> 1)
        {
          sub_100137258(v11 > 1, v12 + 1, 1);
          v7 = v29;
        }
        ++v9;
        v7[2] = v12 + 1;
        v13 = &v7[5 * v12];
        v14 = v26;
        v15 = v27;
        v13[8] = v28;
        *((_OWORD *)v13 + 2) = v14;
        *((_OWORD *)v13 + 3) = v15;
      }
      while (v6 != v9);
    }
    else
    {
      v16 = (id *)(a1 + 32);
      v17 = sub_1000163BC(0, a2, a3);
      do
      {
        v25 = *v16;
        v18 = v25;
        swift_dynamicCast(&v26, &v25, v17, &type metadata for AnyHashable, 7);
        v7 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
        {
          sub_100137258(0, v7[2] + 1, 1);
          v7 = v29;
        }
        v20 = v7[2];
        v19 = v7[3];
        if (v20 >= v19 >> 1)
        {
          sub_100137258(v19 > 1, v20 + 1, 1);
          v7 = v29;
        }
        v7[2] = v20 + 1;
        v21 = &v7[5 * v20];
        v22 = v26;
        v23 = v27;
        v21[8] = v28;
        *((_OWORD *)v21 + 2) = v22;
        *((_OWORD *)v21 + 3) = v23;
        ++v16;
        --v6;
      }
      while (v6);
    }
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

void *MoveNotesToFolderIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static MoveNotesToFolderIntent.persistentIdentifier;
}

uint64_t sub_1002B0918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static MoveNotesToFolderIntent.title);
  sub_10012A0B0(v10, (uint64_t)static MoveNotesToFolderIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100486290);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t MoveNotesToFolderIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC00 != -1)
    swift_once(&qword_1005CEC00, sub_1002B0918);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static MoveNotesToFolderIntent.title);
}

uint64_t static MoveNotesToFolderIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC00 != -1)
    swift_once(&qword_1005CEC00, sub_1002B0918);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static MoveNotesToFolderIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *MoveNotesToFolderIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static MoveNotesToFolderIntent.openAppWhenRun;
}

uint64_t static MoveNotesToFolderIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x8000000100486260);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static MoveNotesToFolderIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D72E0);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D72E8);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100019B6C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 2, &type metadata for MoveNotesToFolderIntent, v6);
  v7._countAndFlagsBits = 0x6568742065766F4DLL;
  v7._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100460688, v8);
  v10 = sub_100012E18(&qword_1005D72F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x74207365746F6E20;
  v11._object = (void *)0xEE0020656874206FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_1004606B0, v12);
  v14 = sub_100012E18(&qword_1005D7300);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x7265646C6F6620;
  v15._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for MoveNotesToFolderIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for MoveNotesToFolderIntent, v6);
}

uint64_t sub_1002B0F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D72C4);
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v2;
  v5[1] = sub_1001802C4;
  return MoveNotesToFolderIntent.perform()(a1);
}

void sub_1002B0FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __objc2_prot *v17;
  void *v18;
  _QWORD *v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v19 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v3 = type metadata accessor for NoteEntity(0);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    while (1)
    {
      AppDependency.wrappedValue.getter(&v18);
      v7 = v18;
      URL._bridgeToObjectiveC()((NSURL *)*(int *)(v3 + 20));
      v9 = v8;
      v10 = objc_msgSend(v7, "managedObjectIDForURIRepresentation:", v8);

      if (!v10)
        break;
      v11 = objc_msgSend(v7, "managedObjectContextForObjectID:", v10);
      if (!v11)
        goto LABEL_8;
      v12 = v11;
      v13 = objc_msgSend(v11, "objectWithID:", v10);

      v17 = &OBJC_PROTOCOL___ICSearchIndexableNote;
      v14 = swift_dynamicCastObjCProtocolUnconditional(v13, 1, &v17, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v15 = v19[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
      specialized ContiguousArray._endMutation()(v16);
      v5 += v6;
      if (!--v2)
        return;
    }
    __break(1u);
LABEL_8:
    __break(1u);
  }
}

void sub_1002B1150(uint64_t a1)
{
  uint64_t v1;

  sub_1002AF7B8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002B1158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t result;
  uint64_t *v60;
  unint64_t v61;
  char *v62;
  unsigned int v63;
  void (*v64)(char *);
  void (*v65)(char *);
  uint64_t v66;
  unsigned int v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD v81[2];
  char v82;
  char v83;
  char v84;
  char v85;

  v75 = a1;
  v78 = type metadata accessor for InputConnectionBehavior(0);
  v74 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v73 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v77 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v76 = (char *)&v62 - v5;
  v6 = sub_100012E18(&qword_1005D1EB0);
  __chkstk_darwin(v6);
  v72 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v70 = v21;
  __chkstk_darwin(v21);
  v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100012E18((uint64_t *)&unk_1005CEFE0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v25);
  v26 = *(void (**)(char *))(v12 + 104);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v67 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v66 = v11;
  v26(v14);
  v65 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for Move Notes to Folder intent", 47, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x8000000100477F50);
  static Locale.current.getter(v28);
  ((void (*)(char *, uint64_t, uint64_t))v26)(v14, v27, v11);
  v62 = v10;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for folder", 32, 2);
  v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v69(v10, 0, 1, v21);
  v29 = type metadata accessor for FolderEntity(0);
  v30 = v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v72, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v68 = v32;
  v33 = v76;
  v32(v76, 1, 1, v31);
  v34 = v77;
  v32(v77, 1, 1, v31);
  v81[0] = sub_100143988();
  v81[1] = v35;
  v82 = v36 & 1;
  v83 = v37 & 1;
  v84 = v38 & 1;
  v85 = v39 & 1;
  v63 = enum case for InputConnectionBehavior.default(_:);
  v64 = *(void (**)(char *))(v74 + 104);
  v40 = v73;
  v64(v73);
  v61 = sub_100127E60();
  v41 = v24;
  v42 = v24;
  v43 = v62;
  v74 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v42, v62, v30, v33, v34, v40, v81, &type metadata for VisibleFoldersQuery, v61);
  v72 = (char *)sub_100012E18(&qword_1005CEE58);
  v44 = String.LocalizationValue.init(stringLiteral:)(0x7365746F4ELL, 0xE500000000000000);
  static Locale.current.getter(v44);
  v45 = v67;
  v46 = v66;
  v47 = (void (*)(char *, uint64_t, uint64_t))v65;
  ((void (*)(char *, _QWORD, uint64_t))v65)(v14, v67, v66);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for Move Notes to Folder intent", 47, 2);
  v48 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000032, 0x8000000100477F80);
  static Locale.current.getter(v48);
  v47(v14, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for notes", 31, 2);
  v69(v43, 0, 1, v70);
  v81[0] = 0;
  v49 = v76;
  v50 = v68;
  v68(v76, 1, 1, v31);
  v51 = v77;
  v50(v77, 1, 1, v31);
  ((void (*)(char *, _QWORD, uint64_t))v64)(v40, v63, v78);
  v52 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v53 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v41, v43, v81, v49, v51, v40, v52);
  sub_100012E18(&qword_1005CEE50);
  v79 = 0xD000000000000021;
  v80 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v81, &v79, &type metadata for String, &protocol witness table for String);
  v54 = type metadata accessor for AppDependencyManager(0);
  v55 = static AppDependencyManager.shared.getter(v54);
  v56 = AppDependency.__allocating_init(key:manager:)(v81, v55);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v79 = 0xD000000000000024;
  v80 = 0x8000000100476B40;
  v57 = AnyHashable.init<A>(_:)(v81, &v79, &type metadata for String, &protocol witness table for String);
  v58 = static AppDependencyManager.shared.getter(v57);
  result = AppDependency.__allocating_init(key:manager:)(v81, v58);
  v60 = v75;
  *v75 = v74;
  v60[1] = v53;
  v60[2] = 0;
  v60[3] = v56;
  v60[4] = result;
  return result;
}

uint64_t sub_1002B1828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002B1850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1002B187C()
{
  unint64_t result;

  result = qword_1005D7308;
  if (!qword_1005D7308)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MoveNotesToFolderIntent, &type metadata for MoveNotesToFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7308);
  }
  return result;
}

uint64_t sub_1002B18C0()
{
  return sub_100019C6C((unint64_t *)&unk_1005D7310, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
}

uint64_t sub_1002B18F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MoveNotesToFolderIntent.perform()>>, 1);
}

uint64_t sub_1002B1900(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static MoveNotesToFolderIntent.parameterSummary>>, 1);
}

uint64_t destroy for MoveNotesToFolderIntent(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));

  swift_release(*(_QWORD *)(a1 + 24));
  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t *initializeWithCopy for MoveNotesToFolderIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  a1[2] = (uint64_t)v6;
  a1[3] = v5;
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v3);
  swift_retain(v4);
  v8 = v6;
  swift_retain(v5);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for MoveNotesToFolderIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a1[2];
  v9 = (void *)a2[2];
  a1[2] = (uint64_t)v9;
  v10 = v9;

  v11 = a2[3];
  v12 = a1[3];
  a1[3] = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a2[4];
  v14 = a1[4];
  a1[4] = v13;
  swift_retain(v13);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for MoveNotesToFolderIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);

  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for MoveNotesToFolderIntent()
{
  return &type metadata for MoveNotesToFolderIntent;
}

uint64_t sub_1002B1ACC()
{
  return sub_100016638(&qword_1005D7338, &qword_1005D7340, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002B1AF8()
{
  return sub_100016638((unint64_t *)&qword_1005D1B40, (uint64_t *)&unk_1005D0690, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1002B1B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100012E18(&qword_1005D7370);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002B1B88@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    v7 = __CocoaSet.makeIterator()(result);
    v8 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    v9 = sub_1001452A0((unint64_t *)&qword_1005D4AD8, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    Set.Iterator.init(_cocoa:)(v7, v8, v9);
    result = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
  }
  else
  {
    v13 = -1;
    v14 = -1 << *(_BYTE *)(result + 32);
    v15 = ~v14;
    v10 = result + 56;
    v16 = -v14;
    if (v16 < 64)
      v13 = ~(-1 << v16);
    v12 = v13 & *(_QWORD *)(result + 56);
    v11 = (unint64_t)v15;
  }
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v10;
  *(_OWORD *)(a4 + 16) = v11;
  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

Swift::Int sub_1002B1C88(uint64_t a1)
{
  return sub_1002B1D18(a1, (uint64_t *)&unk_1005D8B10, (unint64_t *)&unk_1005D90A0, ICFolder_ptr, (unint64_t *)&qword_1005D4C20);
}

Swift::Int sub_1002B1CAC(uint64_t a1)
{
  return sub_1002B1D18(a1, (uint64_t *)&unk_1005D8B10, (unint64_t *)&qword_1005D86F0, ICHashtag_ptr, &qword_1005D4160);
}

Swift::Int sub_1002B1CD0(uint64_t a1)
{
  return sub_1002B1D18(a1, (uint64_t *)&unk_1005D8B10, &qword_1005CFAC0, ICAttachment_ptr, (unint64_t *)&qword_1005D1D20);
}

Swift::Int sub_1002B1CF4(uint64_t a1)
{
  return sub_1002B1D18(a1, (uint64_t *)&unk_1005D8B10, &qword_1005CFAD0, ICInlineAttachment_ptr, (unint64_t *)&qword_1005D4C18);
}

Swift::Int sub_1002B1D18(uint64_t a1, uint64_t *a2, unint64_t *a3, _QWORD *a4, unint64_t *a5)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[6];

  v7 = a1;
  v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (v9)
      goto LABEL_5;
LABEL_11:
    v10 = &_swiftEmptySetSingleton;
    if (v8)
      goto LABEL_6;
LABEL_12:
    v19 = -1 << *(_BYTE *)(v7 + 32);
    v44 = v7 + 56;
    v16 = ~v19;
    v20 = -v19;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v18 = v21 & *(_QWORD *)(v7 + 56);
    swift_bridgeObjectRetain(v7);
    result = swift_retain(v10);
    v17 = 0;
    goto LABEL_16;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v9 = __CocoaSet.count.getter(a1);
  if (!v9)
    goto LABEL_11;
LABEL_5:
  sub_100012E18(a2);
  v10 = (_QWORD *)static _SetStorage.allocate(capacity:)(v9);
  if (!v8)
    goto LABEL_12;
LABEL_6:
  if (v7 < 0)
    v11 = v7;
  else
    v11 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  swift_retain(v10);
  v12 = __CocoaSet.makeIterator()(v11);
  v13 = sub_1000163BC(0, a3, a4);
  v14 = sub_1001452A0(a5, a3, a4);
  result = Set.Iterator.init(_cocoa:)(v12, v13, v14);
  v7 = v46[1];
  v44 = v46[2];
  v16 = v46[3];
  v17 = v46[4];
  v18 = v46[5];
LABEL_16:
  v22 = (unint64_t)(v16 + 64) >> 6;
  v23 = (char *)(v10 + 7);
  while (v7 < 0)
  {
    v27 = __CocoaSet.Iterator.next()(result);
    if (!v27)
      goto LABEL_50;
    v45 = v27;
    v28 = sub_1000163BC(0, a3, a4);
    swift_dynamicCast(v46, &v45, (char *)&type metadata for Swift.AnyObject + 8, v28, 7);
    v29 = (void *)v46[0];
LABEL_41:
    result = NSObject._rawHashValue(seed:)(v10[5]);
    v35 = -1 << *((_BYTE *)v10 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)&v23[8 * (v36 >> 6)]) != 0)
    {
      v24 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)&v23[8 * (v36 >> 6)])) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_51;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)&v23[8 * v37];
      }
      while (v41 == -1);
      v24 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)&v23[(v24 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v24;
    *(_QWORD *)(v10[6] + 8 * v24) = v29;
    ++v10[2];
  }
  if (v18)
  {
    v25 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v26 = v25 | (v17 << 6);
LABEL_40:
    v29 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v26);
    v46[0] = v29;
    v34 = v29;
    goto LABEL_41;
  }
  v30 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v30 >= v22)
      goto LABEL_50;
    v31 = *(_QWORD *)(v44 + 8 * v30);
    v32 = v17 + 1;
    if (!v31)
    {
      v32 = v17 + 2;
      if (v17 + 2 >= v22)
        goto LABEL_50;
      v31 = *(_QWORD *)(v44 + 8 * v32);
      if (!v31)
      {
        v32 = v17 + 3;
        if (v17 + 3 >= v22)
          goto LABEL_50;
        v31 = *(_QWORD *)(v44 + 8 * v32);
        if (!v31)
        {
          v32 = v17 + 4;
          if (v17 + 4 >= v22)
            goto LABEL_50;
          v31 = *(_QWORD *)(v44 + 8 * v32);
          if (!v31)
          {
            v32 = v17 + 5;
            if (v17 + 5 >= v22)
              goto LABEL_50;
            v31 = *(_QWORD *)(v44 + 8 * v32);
            if (!v31)
            {
              v33 = v17 + 6;
              while (v22 != v33)
              {
                v31 = *(_QWORD *)(v44 + 8 * v33++);
                if (v31)
                {
                  v32 = v33 - 1;
                  goto LABEL_39;
                }
              }
LABEL_50:
              v46[0] = 0;
              swift_release(v10);
              sub_1001452E0(v7);
              return (Swift::Int)v10;
            }
          }
        }
      }
    }
LABEL_39:
    v18 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v32 << 6);
    v17 = v32;
    goto LABEL_40;
  }
LABEL_51:
  __break(1u);
  return result;
}

id sub_1002B20BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  id result;
  uint64_t v13;

  v3 = v2;
  v6 = type metadata accessor for FastSyncControllerPool(0);
  v7 = *(_QWORD *)(v2 + *(int *)(v6 + 32));
  if (!*(_QWORD *)(v7 + 16))
    return 0;
  v8 = v6;
  swift_bridgeObjectRetain(a2);
  v9 = sub_100249354(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
  result = (id)swift_bridgeObjectRelease(a2);
  v13 = *(_QWORD *)(v3 + *(int *)(v8 + 28));
  if ((v13 & 0xC000000000000001) != 0)
    return (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v13);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return *(id *)(v13 + 8 * v11 + 32);
  }
  __break(1u);
  return result;
}

char *sub_1002B2188(id *a1, uint64_t a2)
{
  char *result;
  uint64_t v4;

  result = (char *)objc_msgSend(*a1, "realtimeCollaborationController");
  if (result)
  {
    v4 = *(_QWORD *)&result[OBJC_IVAR___ICRealtimeCollaborationController_id];

    return (char *)(v4 == *(_QWORD *)(a2 + OBJC_IVAR___ICRealtimeCollaborationController_id));
  }
  return result;
}

uint64_t sub_1002B21EC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v5 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for FastSyncControllerPool(0) + 36));
  swift_bridgeObjectRetain_n(v5, 2);
  v6 = sub_1002B1B88(v5, (uint64_t)sub_1002B2354, 0, (uint64_t)&v20);
  v7 = v21;
  v19 = v20;
  v8 = OBJC_IVAR___ICRealtimeCollaborationController_id;
  v9 = sub_1001BF578(v6);
  if (!v9)
  {
    v17 = 1;
    goto LABEL_12;
  }
  v11 = (void *)v9;
  v12 = v10;
  do
  {
    if (!v12)
      goto LABEL_4;
    if (*(_QWORD *)&v12[OBJC_IVAR___ICRealtimeCollaborationController_id] != *(_QWORD *)(a2 + v8))
    {

      v11 = v12;
LABEL_4:

      goto LABEL_5;
    }
    v15 = objc_msgSend(v11, "editorIdentifier");
    v16 = objc_msgSend(a1, "editorIdentifier");

    if (v15 != v16)
    {
      v17 = 0;
      goto LABEL_12;
    }
LABEL_5:
    v11 = (void *)sub_1001BF578(v13);
    v12 = v14;
  }
  while (v11);
  v17 = 1;
LABEL_12:
  sub_1001452E0(v19);
  swift_bridgeObjectRelease(v5);
  swift_release(v7);
  return v17;
}

id sub_1002B2354@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v3;
  id result;

  v3 = *a1;
  *a2 = *a1;
  result = objc_msgSend(v3, "realtimeCollaborationController");
  a2[1] = result;
  return result;
}

char *sub_1002B2394(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  char *v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  NSObject *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v80;
  Class isa;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108[4];

  v6 = v5;
  v91 = a5;
  v99 = a3;
  v102 = a1;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v96 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v88 - v13;
  v15 = sub_100012E18(&qword_1005D7428);
  v16 = __chkstk_darwin(v15);
  v103 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v88 - v18;
  v20 = type metadata accessor for EditNoteActivity(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v100 = a2;
  v97 = v24;
  v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v23, a2, v20);
  v105 = EditNoteActivity.id.getter(v25);
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v98 = v20;
  v28(v23, v20);
  v94 = type metadata accessor for FastSyncControllerPool(0);
  v29 = *(int *)(v94 + 20);
  v104 = v6;
  v30 = v6 + v29;
  v31 = v27;
  v32 = *(char **)(v10 + 16);
  v92 = v30;
  v93 = v32;
  ((void (*)(char *))v32)(v14);
  v33 = a4;
  swift_bridgeObjectRetain_n(v27, 2);
  v106 = (char *)v33;
  v101 = v14;
  v34 = Logger.logObject.getter(v106);
  v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc(22, -1);
    v37 = (_QWORD *)swift_slowAlloc(8, -1);
    v89 = (_QWORD *)swift_slowAlloc(32, -1);
    v108[0] = (uint64_t)v89;
    *(_DWORD *)v36 = 138412546;
    v107 = v106;
    v90 = v10;
    v38 = v106;
    v95 = v19;
    v39 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v36 + 4);
    *v37 = v106;

    *(_WORD *)(v36 + 12) = 2080;
    swift_bridgeObjectRetain(v31);
    v40 = v105;
    v107 = (char *)sub_1003A4190(v105, v31, v108);
    v19 = v95;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v36 + 14);
    swift_bridgeObjectRelease_n(v31, 3);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%@: requested to join activity for note %s", (uint8_t *)v36, 0x16u);
    v41 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v37, 1, v41);
    swift_slowDealloc(v37, -1, -1);
    v42 = v89;
    swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    v43 = *(void (**)(char *, uint64_t))(v90 + 8);
    v43(v101, v9);
    v44 = v40;
  }
  else
  {

    swift_bridgeObjectRelease_n(v31, 2);
    v43 = *(void (**)(char *, uint64_t))(v10 + 8);
    v43(v101, v9);
    v44 = v105;
  }
  v45 = v104;
  v46 = sub_1002B20BC(v44, v31);
  if (v46)
  {
    v47 = v46;
    swift_bridgeObjectRelease(v31);
    sub_1002B2BC8(v47, v106, v100);

    v48 = 2;
  }
  else
  {
    v49 = sub_1002B2FC0();
    if (v49)
    {
      v50 = (void *)v49;
      v51 = v96;
      ((void (*)(char *, unint64_t, uint64_t))v93)(v96, v92, v9);
      v52 = v106;
      swift_bridgeObjectRetain_n(v31, 2);
      v53 = v50;
      v93 = v52;
      v101 = (char *)v53;
      v54 = Logger.logObject.getter(v101);
      v55 = static os_log_type_t.info.getter();
      v56 = v55;
      if (os_log_type_enabled(v54, v55))
      {
        v57 = swift_slowAlloc(32, -1);
        v58 = swift_slowAlloc(16, -1);
        v92 = v31;
        v89 = (_QWORD *)v58;
        v59 = swift_slowAlloc(32, -1);
        v91 = v59;
        *(_DWORD *)v57 = 138412802;
        LODWORD(v90) = v56;
        v95 = v19;
        v60 = v93;
        v107 = v93;
        v108[0] = v59;
        v61 = v54;
        v62 = v93;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v57 + 4);
        v63 = v89;
        *v89 = v60;

        *(_WORD *)(v57 + 12) = 2112;
        v107 = v101;
        v64 = v101;
        v19 = v95;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v57 + 14);
        v63[1] = v50;

        *(_WORD *)(v57 + 22) = 2080;
        swift_bridgeObjectRetain(v92);
        v65 = v105;
        v107 = (char *)sub_1003A4190(v105, v92, v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v57 + 24);
        swift_bridgeObjectRelease_n(v92, 3);
        _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v90, "%@: reassigning %@ to join group activity %s.", (uint8_t *)v57, 0x20u);
        v66 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v63, 2, v66);
        v31 = v92;
        swift_slowDealloc(v63, -1, -1);
        v67 = v91;
        swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v67, -1, -1);
        v68 = v57;
        v45 = v104;
        swift_slowDealloc(v68, -1, -1);

        v43(v96, v9);
      }
      else
      {

        swift_bridgeObjectRelease_n(v31, 2);
        v74 = v101;

        v75 = v93;
        v43(v51, v9);
        v65 = v105;
      }
      v76 = v101;
      v77 = *(_QWORD *)&v101[OBJC_IVAR___ICRealtimeCollaborationController_id];
      v78 = *(int *)(v94 + 32);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v45 + v78));
      v108[0] = *(_QWORD *)(v45 + v78);
      *(_QWORD *)(v45 + v78) = 0x8000000000000000;
      sub_10024EF68(v77, v65, v31, isUniquelyReferenced_nonNull_native);
      v80 = *(_QWORD *)(v45 + v78);
      *(_QWORD *)(v45 + v78) = v108[0];
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v80);
      isa = Bool._bridgeToObjectiveC()().super.super.isa;
      swift_beginAccess(&unk_1005D7379, v108, 32, 0);
      objc_setAssociatedObject(v93, &unk_1005D7379, isa, (void *)3);
      swift_endAccess(v108);

      v82 = sub_100012E18(&qword_1005D7430);
      v83 = (uint64_t)&v19[*(int *)(v82 + 48)];
      v84 = *(int *)(v82 + 64);
      v97(v19, v100, v98);
      sub_1002B57A4(v99, v83);
      v48 = 0;
      *(_QWORD *)&v19[v84] = v76;
    }
    else
    {
      v69 = sub_1002B30A0(v106, v44, v31);
      swift_bridgeObjectRelease(v31);
      v70 = &v69[OBJC_IVAR___ICRealtimeCollaborationController_delegate];
      swift_beginAccess(&v69[OBJC_IVAR___ICRealtimeCollaborationController_delegate], v108, 1, 0);
      swift_unknownObjectWeakAssign(v70, v91);
      v71 = sub_100012E18(&qword_1005D7430);
      v72 = (uint64_t)&v19[*(int *)(v71 + 48)];
      v73 = *(int *)(v71 + 64);
      v97(v19, v100, v98);
      sub_1002B57A4(v99, v72);
      v48 = 0;
      *(_QWORD *)&v19[v73] = v69;
    }
  }
  v85 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  swift_storeEnumTagMultiPayload(v19, v85, v48);
  v86 = v103;
  sub_1002B5800((uint64_t)v19, v103);
  sub_1002B5800(v86, v102);
  return v106;
}

void sub_1002B2BC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  id v39;
  Class isa;
  _BYTE v41[12];
  int v42;
  os_log_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52[3];

  v4 = v3;
  v8 = type metadata accessor for EditNoteActivity(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v41[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50 = type metadata accessor for FastSyncControllerPool(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, v4 + *(int *)(v50 + 20), v12);
  v48 = v9;
  v49 = v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  v16 = a2;
  v17 = a1;
  v18 = v16;
  v19 = v17;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc(32, -1);
    v47 = v4;
    v24 = v23;
    v25 = swift_slowAlloc(16, -1);
    v43 = v20;
    v26 = v19;
    v27 = (_QWORD *)v25;
    v44 = (void *)swift_slowAlloc(32, -1);
    v51 = (uint64_t)v18;
    v52[0] = v44;
    *(_DWORD *)v24 = 138412802;
    v42 = v22;
    v45 = v13;
    v46 = v12;
    v28 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v24 + 4);
    *v27 = v18;

    *(_WORD *)(v24 + 12) = 2112;
    v51 = (uint64_t)v26;
    v29 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v24 + 14);
    v27[1] = v26;

    *(_WORD *)(v24 + 22) = 2080;
    v31 = EditNoteActivity.id.getter(v30);
    v33 = v32;
    v51 = sub_1003A4190(v31, v32, (uint64_t *)v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v24 + 24);
    swift_bridgeObjectRelease(v33);
    (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v11, v49);
    v34 = v43;
    _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v42, "%@: using existing %@ for activity %s.", (uint8_t *)v24, 0x20u);
    v35 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v27, 2, v35);
    v36 = v27;
    v19 = v26;
    swift_slowDealloc(v36, -1, -1);
    v37 = v44;
    swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v15, v46);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v11, v49);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_1002B47B8(v18);
  v38 = v18;
  sub_100303B08((Swift::Int *)v52, v38);

  swift_beginAccess(&unk_1005D7378, v52, 32, 0);
  v39 = v19;
  objc_setAssociatedObject(v38, &unk_1005D7378, v39, 0);
  swift_endAccess(v52);
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  swift_beginAccess(&unk_1005D7379, v52, 32, 0);
  objc_setAssociatedObject(v38, &unk_1005D7379, isa, (void *)3);
  swift_endAccess(v52);

}

uint64_t sub_1002B2FC0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  swift_beginAccess(&unk_1005D7378, v7, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_1005D7378);
  swift_endAccess(v7);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v1, v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10014BD1C((uint64_t)v6, (uint64_t)v7, &qword_1005CF190);
  if (v8)
  {
    v3 = type metadata accessor for RealtimeCollaborationController(0);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1000160C8((uint64_t)v7);
    return 0;
  }
}

char *sub_1002B30A0(void *a1, uint64_t a2, unint64_t a3)
{
  void **v3;
  void **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  void (*v17)(uint64_t *, os_log_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  void (*v32)(_QWORD, _QWORD);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  char *v57;
  uint64_t v58;
  os_log_t v59;
  os_log_type_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *, os_log_t, uint64_t);
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  id v81;
  char *v82;
  os_log_t v83;
  uint64_t v84;
  void (*v85)(uint64_t *, os_log_t, uint64_t);
  void **v86;
  int *v87;
  id v88;
  char *v89;
  Class isa;
  uint64_t v91;
  uint64_t v92;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  void *v102;
  os_log_t v103;
  void (*v104)(uint64_t *, os_log_t, uint64_t);
  void **v105;
  int *v106;
  uint64_t v107;
  id v108;
  void *v109;
  uint64_t v110;
  id v111[4];

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v101 = (uint64_t *)((char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __chkstk_darwin(v10);
  v100 = (char *)&v97 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v97 - v14;
  v108 = a1;
  v109 = a1;
  v16 = (int *)type metadata accessor for FastSyncControllerPool(0);
  v17 = *(void (**)(uint64_t *, os_log_t, uint64_t))(v9 + 16);
  v103 = (os_log_t)((char *)v4 + v16[5]);
  v104 = v17;
  ((void (*)(char *))v17)(v15);
  v18 = swift_allocObject(&unk_100565290, 17, 7);
  *(_BYTE *)(v18 + 16) = 2;
  v19 = sub_1002B6424(v18, (uint64_t (*)(void))sub_1002B63E0);
  v106 = v16;
  v107 = v8;
  if ((v19 & 1) == 0)
  {
    v20 = static os_log_type_t.fault.getter(v19);
    v21 = v20;
    v22 = Logger.logObject.getter(v20);
    if (os_log_type_enabled(v22, v21))
    {
      v23 = swift_slowAlloc(32, -1);
      v102 = (void *)swift_slowAlloc(64, -1);
      v111[0] = v102;
      *(_DWORD *)v23 = 136315650;
      v97 = v23 + 4;
      v24 = StaticString.description.getter("MobileNotes/FastSyncControllerPool.swift", 40, 2);
      v98 = v21;
      v25 = a2;
      v26 = v4;
      v27 = a3;
      v29 = v28;
      v110 = sub_1003A4190(v24, v28, (uint64_t *)v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v97);
      v30 = v29;
      a3 = v27;
      v4 = v26;
      a2 = v25;
      swift_bridgeObjectRelease(v30);
      *(_WORD *)(v23 + 12) = 2048;
      v110 = 132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v23 + 14);
      *(_WORD *)(v23 + 22) = 2080;
      v110 = sub_1003A4190(0xD000000000000065, 0x8000000100486310, (uint64_t *)v111);
      v16 = v106;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v23 + 24);
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v98, "Failed assertion at %s:%lu: %s", (uint8_t *)v23, 0x20u);
      v31 = v102;
      swift_arrayDestroy(v102, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      v32 = *(void (**)(_QWORD, _QWORD))(v9 + 8);
      v33 = v15;
      v34 = v107;
      goto LABEL_6;
    }

  }
  v32 = *(void (**)(_QWORD, _QWORD))(v9 + 8);
  v33 = v15;
  v34 = v8;
LABEL_6:
  v102 = v32;
  v32(v33, v34);
  swift_release(v18);
  v35 = (uint64_t)v4 + v16[10];
  v36 = *(_QWORD *)v35;
  v37 = *(_QWORD *)(*(_QWORD *)v35 + 16);
  v105 = v4;
  if (v37)
  {
    v38 = sub_100242C1C(v36);
    v40 = v39;
    v42 = v41 & 1;
    v43 = sub_1002B5D24(v38, v39);
    sub_1001EDA28(v38, v40, v42);
    v44 = *(uint64_t *)((char *)v4 + v16[7]);
    v99 = a2;
    if ((v44 & 0xC000000000000001) != 0)
    {
      v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v44);
      v45 = v107;
      v46 = v101;
LABEL_11:
      v104(v46, v103, v45);
      v48 = v108;
      swift_bridgeObjectRetain_n(a3, 2);
      v49 = v47;
      v50 = v48;
      v51 = (char *)v49;
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc(32, -1);
        v55 = (_QWORD *)swift_slowAlloc(16, -1);
        v104 = (void (*)(uint64_t *, os_log_t, uint64_t))swift_slowAlloc(32, -1);
        v110 = (uint64_t)v50;
        v111[0] = v104;
        *(_DWORD *)v54 = 138412802;
        v103 = v52;
        v56 = v50;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v54 + 4);
        *v55 = v50;

        *(_WORD *)(v54 + 12) = 2112;
        v110 = (uint64_t)v51;
        v57 = v51;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v54 + 14);
        v55[1] = v51;

        *(_WORD *)(v54 + 22) = 2080;
        swift_bridgeObjectRetain(a3);
        v58 = v99;
        v110 = sub_1003A4190(v99, a3, (uint64_t *)v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v54 + 24);
        swift_bridgeObjectRelease_n(a3, 3);
        v59 = v103;
        v60 = v53;
        a2 = v58;
        _os_log_impl((void *)&_mh_execute_header, v103, v60, "%@: allocated %@ from pool to activity %s.", (uint8_t *)v54, 0x20u);
        v61 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v55, 2, v61);
        swift_slowDealloc(v55, -1, -1);
        v62 = v104;
        swift_arrayDestroy(v104, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v54, -1, -1);

        ((void (*)(uint64_t *, uint64_t))v102)(v101, v107);
        v51 = v57;
      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2);
        ((void (*)(uint64_t *, uint64_t))v102)(v46, v45);
        a2 = v99;
      }
      goto LABEL_21;
    }
    v45 = v107;
    v46 = v101;
    if ((v43 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v43 < *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v47 = *(id *)(v44 + 8 * v43 + 32);
      goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    v46 = (uint64_t *)((char *)v4 + v16[7]);
    v35 = *v46;
    if (!((unint64_t)*v46 >> 62))
    {
      v63 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_15;
    }
  }
  if (v35 < 0)
    v96 = v35;
  else
    v96 = v35 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v35);
  v63 = _CocoaArrayWrapper.endIndex.getter(v96);
  swift_bridgeObjectRelease(v35);
LABEL_15:
  v64 = *v4;
  v65 = *(void **)((char *)v4 + v16[6]);
  v66 = objc_allocWithZone((Class)type metadata accessor for RealtimeCollaborationController(0));
  v67 = RealtimeCollaborationController.init(id:cloudConfiguration:noteContext:)(v63, v64, v65);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
  v69 = *(_QWORD *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v68 = *(_QWORD *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v69 >= v68 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
  v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v67);
  specialized Array._endMutation()(v70);
  v71 = v100;
  v72 = v107;
  v104((uint64_t *)v100, v103, v107);
  v73 = v108;
  swift_bridgeObjectRetain_n(a3, 2);
  v51 = v67;
  v74 = v73;
  v75 = Logger.logObject.getter(v74);
  v76 = static os_log_type_t.debug.getter();
  v77 = v76;
  if (os_log_type_enabled(v75, v76))
  {
    v78 = swift_slowAlloc(32, -1);
    v79 = (_QWORD *)swift_slowAlloc(16, -1);
    v104 = (void (*)(uint64_t *, os_log_t, uint64_t))swift_slowAlloc(32, -1);
    v110 = (uint64_t)v74;
    v111[0] = v104;
    *(_DWORD *)v78 = 138412802;
    v103 = v75;
    v80 = v74;
    LODWORD(v101) = v77;
    v81 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v78 + 4);
    *v79 = v74;

    *(_WORD *)(v78 + 12) = 2112;
    v110 = (uint64_t)v51;
    v82 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v78 + 14);
    v79[1] = v51;

    *(_WORD *)(v78 + 22) = 2080;
    swift_bridgeObjectRetain(a3);
    v110 = sub_1003A4190(a2, a3, (uint64_t *)v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, v111, v78 + 24);
    swift_bridgeObjectRelease_n(a3, 3);
    v83 = v103;
    _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v101, "%@: empty controller pool: allocated new %@ to activity %s.", (uint8_t *)v78, 0x20u);
    v84 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v79, 2, v84);
    swift_slowDealloc(v79, -1, -1);
    v85 = v104;
    swift_arrayDestroy(v104, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1, -1);
    swift_slowDealloc(v78, -1, -1);

    ((void (*)(char *, uint64_t))v102)(v100, v107);
    v51 = v82;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    ((void (*)(char *, uint64_t))v102)(v71, v72);
  }
LABEL_21:
  v86 = v105;
  v87 = v106;
  v88 = v108;
  sub_100303B08((Swift::Int *)v111, v88);

  swift_beginAccess(&unk_1005D7378, v111, 32, 0);
  v89 = v51;
  objc_setAssociatedObject(v88, &unk_1005D7378, v89, 0);
  swift_endAccess(v111);
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  swift_beginAccess(&unk_1005D7379, v111, 32, 0);
  objc_setAssociatedObject(v88, &unk_1005D7379, isa, (void *)3);
  swift_endAccess(v111);

  v91 = *(_QWORD *)&v89[OBJC_IVAR___ICRealtimeCollaborationController_id];
  v92 = v87[8];
  swift_bridgeObjectRetain(a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void **)((char *)v86 + v92));
  v111[0] = *(void **)((char *)v86 + v92);
  *(void **)((char *)v86 + v92) = (void *)0x8000000000000000;
  sub_10024EF68(v91, a2, a3, isUniquelyReferenced_nonNull_native);
  v94 = *(uint64_t *)((char *)v86 + v92);
  *(void **)((char *)v86 + v92) = v111[0];
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v94);
  return v89;
}

uint64_t sub_1002B3AD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD);
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v41)(char *, uint64_t);
  void *v42;
  Class v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  Class isa;
  uint64_t v66;
  Swift::Int v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  os_log_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(_QWORD *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[4];

  v7 = type metadata accessor for Logger(0);
  v99 = *(void (**)(char *, uint64_t))(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v96 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v95 = (char *)&v87 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v87 - v12;
  v14 = sub_100012E18(&qword_1005D7438);
  __chkstk_darwin(v14);
  v100 = (_QWORD **)((char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for EditNoteActivity(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = (void *)sub_1002B2FC0();
  if (!v97)
  {
    v39 = sub_100012E18(&qword_1005D7428);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a3, 1, 1, v39);
  }
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v98 = EditNoteActivity.id.getter(v20);
  v21 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23 = v22;
  v21(v19, v16);
  v24 = type metadata accessor for FastSyncControllerPool(0);
  v25 = (void (*)(_QWORD))*((_QWORD *)v99 + 2);
  v91 = v3 + *(int *)(v24 + 20);
  v92 = (void (*)(_QWORD *, uint64_t, uint64_t))v25;
  v25(v13);
  v26 = a2;
  swift_bridgeObjectRetain_n(v23, 2);
  v27 = v26;
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.debug.getter();
  v30 = os_log_type_enabled(v28, v29);
  v93 = v7;
  v94 = a3;
  if (v30)
  {
    v31 = swift_slowAlloc(22, -1);
    v87 = (_QWORD *)swift_slowAlloc(8, -1);
    v89 = swift_slowAlloc(32, -1);
    v103[0] = v89;
    *(_DWORD *)v31 = 138412546;
    v88 = v28;
    v101 = (uint64_t)v27;
    v32 = v27;
    v90 = v3;
    v33 = v24;
    v34 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v31 + 4);
    v35 = v87;
    *v87 = v27;

    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain(v23);
    v101 = sub_1003A4190(v98, v23, v103);
    v7 = v93;
    v24 = v33;
    v3 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v31 + 14);
    swift_bridgeObjectRelease_n(v23, 3);
    v36 = v88;
    _os_log_impl((void *)&_mh_execute_header, v88, v29, "%@: start leaving activity for note %s", (uint8_t *)v31, 0x16u);
    v37 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v35, 1, v37);
    swift_slowDealloc(v35, -1, -1);
    v38 = v89;
    swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v23, 2);
  }
  v41 = (void (*)(char *, uint64_t))*((_QWORD *)v99 + 1);
  v41(v13, v7);
  v42 = v97;
  if ((sub_1002B21EC(v27, (uint64_t)v97) & 1) == 0)
  {
    v64 = (uint64_t *)(v3 + *(int *)(v24 + 36));

    swift_beginAccess(&unk_1005D7378, v103, 32, 0);
    objc_setAssociatedObject(v27, &unk_1005D7378, 0, 0);
    swift_endAccess(v103);
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    swift_beginAccess(&unk_1005D7379, v103, 32, 0);
    objc_setAssociatedObject(v27, &unk_1005D7379, isa, (void *)3);
    swift_endAccess(v103);

    v66 = sub_100012E18(&qword_1005D7428);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v100, 1, 1, v66);
    v67 = sub_1002B1D18(*v64, &qword_1005D7450, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr, (unint64_t *)&qword_1005D4AD8);
    v68 = v42;
    sub_1002B5EE0(v67, (uint64_t)v68);
    v70 = v69;
    swift_bridgeObjectRelease(v67);

    v71 = v96;
    v92(v96, v91, v7);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v70);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.debug.getter();
    v75 = os_log_type_enabled(v73, v74);
    v76 = v98;
    if (v75)
    {
      v77 = swift_slowAlloc(22, -1);
      v99 = v41;
      v78 = v77;
      v97 = (void *)swift_slowAlloc(64, -1);
      v103[0] = (uint64_t)v97;
      *(_DWORD *)v78 = 136315394;
      swift_bridgeObjectRetain(v23);
      v101 = sub_1003A4190(v76, v23, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v78 + 4);
      swift_bridgeObjectRelease_n(v23, 3);
      *(_WORD *)(v78 + 12) = 2080;
      type metadata accessor for ID(0);
      v80 = v79;
      swift_bridgeObjectRetain(v70);
      v82 = Array.description.getter(v81, v80);
      v84 = v83;
      swift_bridgeObjectRelease(v70);
      v101 = sub_1003A4190(v82, v84, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v78 + 14);
      swift_bridgeObjectRelease_n(v70, 2);
      swift_bridgeObjectRelease(v84);
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Remaining editors for activity %s: %s", (uint8_t *)v78, 0x16u);
      v85 = (uint64_t)v97;
      swift_arrayDestroy(v97, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      v63 = v96;
      goto LABEL_11;
    }

    swift_bridgeObjectRelease_n(v70, 2);
    swift_bridgeObjectRelease_n(v23, 2);

    v86 = v71;
LABEL_14:
    v41(v86, v7);
    return sub_10014BD1C((uint64_t)v100, v94, &qword_1005D7438);
  }
  swift_bridgeObjectRetain(v23);
  sub_1003AE594(v98, v23);
  swift_bridgeObjectRelease(v23);
  v43 = Bool._bridgeToObjectiveC()().super.super.isa;
  swift_beginAccess(&unk_1005D7379, v103, 32, 0);
  objc_setAssociatedObject(v27, &unk_1005D7379, v43, (void *)3);
  swift_endAccess(v103);

  v44 = sub_100012E18(&qword_1005D7428);
  v45 = *(int *)(v44 + 48);
  v46 = v100;
  *v100 = v42;
  v47 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  swift_storeEnumTagMultiPayload(v46, v47, 1);
  *(_QWORD *)((char *)v46 + v45) = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v46, 0, 1, v44);
  v48 = v95;
  v92(v95, v91, v7);
  v49 = v27;
  v50 = v42;
  v51 = v49;
  swift_bridgeObjectRetain(v23);
  v52 = v50;
  v53 = Logger.logObject.getter(v52);
  v54 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v53, v54))
  {

    swift_bridgeObjectRelease_n(v23, 2);
    v86 = v48;
    goto LABEL_14;
  }
  v55 = swift_slowAlloc(22, -1);
  v99 = v41;
  v56 = v55;
  v96 = (char *)swift_slowAlloc(8, -1);
  v97 = (void *)swift_slowAlloc(32, -1);
  v103[0] = (uint64_t)v97;
  *(_DWORD *)v56 = 138412546;
  v57 = v23;
  v101 = (uint64_t)v51;
  v58 = v52;
  v59 = v51;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v56 + 4);
  v60 = v96;
  *(_QWORD *)v96 = v51;

  *(_WORD *)(v56 + 12) = 2080;
  swift_bridgeObjectRetain(v57);
  v101 = sub_1003A4190(v98, v57, v103);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v56 + 14);
  swift_bridgeObjectRelease_n(v57, 3);
  _os_log_impl((void *)&_mh_execute_header, v53, v54, "%@: last editor for activity %s.", (uint8_t *)v56, 0x16u);
  v61 = sub_100012E18(&qword_1005D3A30);
  swift_arrayDestroy((char *)v60, 1, v61);
  swift_slowDealloc((char *)v60, -1, -1);
  v62 = (uint64_t)v97;
  swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v62, -1, -1);
  swift_slowDealloc(v56, -1, -1);

  v63 = v95;
LABEL_11:
  v99(v63, v93);
  return sub_10014BD1C((uint64_t)v100, v94, &qword_1005D7438);
}

uint64_t sub_1002B4494(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v37)(char *, char *, uint64_t);
  int v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = type metadata accessor for EditNoteActivity(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v44 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - v9;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B47B8(a2);
  v15 = type metadata accessor for FastSyncControllerPool(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v2 + *(int *)(v15 + 20), v11);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v10, a1, v5);
  v17 = a2;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc(22, -1);
    v43 = v11;
    v22 = v21;
    v23 = swift_slowAlloc(8, -1);
    v37 = (uint64_t (*)(char *, char *, uint64_t))v16;
    v24 = (_QWORD *)v23;
    v40 = swift_slowAlloc(32, -1);
    v45 = (uint64_t)v17;
    v46 = v40;
    *(_DWORD *)v22 = 138412546;
    v39 = v18;
    v42 = v14;
    v38 = v20;
    v25 = v17;
    v41 = v12;
    v26 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v22 + 4);
    *v24 = v17;

    *(_WORD *)(v22 + 12) = 2080;
    v27 = v44;
    v28 = v37(v44, v10, v5);
    v29 = EditNoteActivity.id.getter(v28);
    v31 = v30;
    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32(v27, v5);
    v45 = sub_1003A4190(v29, v31, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v22 + 14);
    swift_bridgeObjectRelease(v31);
    v32(v10, v5);
    v33 = v39;
    _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v38, "%@: finished leaving activity for note %s", (uint8_t *)v22, 0x16u);
    v34 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v24, 1, v34);
    swift_slowDealloc(v24, -1, -1);
    v35 = v40;
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1002B47B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  NSObject *v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  NSObject *v59;
  NSObject *v60;
  char *v61;
  _QWORD *v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  Class isa;
  uint64_t v67;
  os_log_t v68;
  _QWORD *v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[2];
  uint64_t v77;
  _QWORD v78[4];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v67 - v9;
  v11 = sub_1002B2FC0();
  if (v11)
  {
    v12 = (void *)v11;
    v73 = v5;
    v74 = v4;
    v13 = (int *)type metadata accessor for FastSyncControllerPool(0);
    v14 = *(_QWORD *)(v2 + v13[8]);
    __chkstk_darwin(v13);
    *(&v67 - 2) = (uint64_t)v12;
    swift_bridgeObjectRetain(v14);
    v16 = (char *)sub_1002B61E8(v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002B5D04);
    v18 = v17;
    swift_bridgeObjectRelease(v14);
    if (v18)
    {
      v72 = v16;
      v19 = *(_QWORD *)(v2 + v13[9]);
      v20 = swift_allocObject(&unk_100565268, 24, 7);
      *(_QWORD *)(v20 + 16) = v12;
      v77 = v19;
      v78[0] = sub_1002B63D8;
      v78[1] = v20;
      v78[2] = sub_1002B4E84;
      v78[3] = 0;
      v22 = v73;
      v21 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v10, v2 + v13[5], v74);
      swift_bridgeObjectRetain_n(v19, 3);
      v23 = a1;
      swift_retain_n(v20, 2);
      v24 = v23;
      v25 = v12;
      swift_bridgeObjectRetain(v18);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.debug.getter();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc(32, -1);
        v71 = v25;
        v31 = v30;
        v32 = swift_slowAlloc(8, -1);
        v67 = v19;
        v33 = (_QWORD *)v32;
        v70 = swift_slowAlloc(64, -1);
        v75 = (uint64_t)v24;
        v76[0] = v70;
        *(_DWORD *)v31 = 138412802;
        LODWORD(v69) = v29;
        v34 = v24;
        v68 = v27;
        v35 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v31 + 4);
        *v33 = v24;
        v36 = v33;

        *(_WORD *)(v31 + 12) = 2080;
        swift_bridgeObjectRetain(v18);
        v75 = sub_1003A4190((uint64_t)v72, v18, v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v31 + 14);
        swift_bridgeObjectRelease_n(v18, 3);
        *(_WORD *)(v31 + 22) = 2080;
        v37 = v67;
        swift_bridgeObjectRetain(v67);
        swift_retain(v20);
        sub_1002B5844(&v77);
        v39 = v38;
        swift_release(v20);
        swift_bridgeObjectRelease(v37);
        v40 = Array.description.getter(v39, &type metadata for String);
        v42 = v41;
        swift_release(v39);
        v75 = sub_1003A4190(v40, v42, v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v31 + 24);
        swift_release_n(v20, 2);
        swift_bridgeObjectRelease_n(v37, 2);
        swift_bridgeObjectRelease(v42);
        v43 = v68;
        _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v69, "%@: remaining editors for activity %s: %s.", (uint8_t *)v31, 0x20u);
        v44 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v36, 1, v44);
        swift_slowDealloc(v36, -1, -1);
        v45 = v70;
        swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v45, -1, -1);
        swift_slowDealloc(v31, -1, -1);

        swift_release(v20);
        swift_bridgeObjectRelease(v37);

        (*(void (**)(char *, uint64_t))(v73 + 8))(v10, v74);
      }
      else
      {

        swift_bridgeObjectRelease_n(v18, 2);
        swift_release_n(v20, 3);
        swift_bridgeObjectRelease_n(v19, 3);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
      }
    }
    else
    {
      v47 = v73;
      v46 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v8, v2 + v13[5], v74);
      v48 = a1;
      v49 = v12;
      v50 = v48;
      v51 = (char *)v49;
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.debug.getter();
      v54 = v53;
      if (os_log_type_enabled(v52, v53))
      {
        v55 = swift_slowAlloc(22, -1);
        v72 = v51;
        v56 = v55;
        v57 = swift_slowAlloc(16, -1);
        v70 = (uint64_t)v52;
        v58 = (_QWORD *)v57;
        *(_DWORD *)v56 = 138412546;
        LODWORD(v71) = v54;
        v59 = v50;
        v77 = (uint64_t)v50;
        v68 = (os_log_t)(v56 + 4);
        v69 = v78;
        v60 = v50;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v68);
        *v58 = v50;

        *(_WORD *)(v56 + 12) = 2112;
        v77 = (uint64_t)v72;
        v61 = v72;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v69, v56 + 14);
        v62 = v58;
        v63 = v70;
        v62[1] = v12;

        v50 = v59;
        v47 = v73;
        v46 = v74;
        _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v71, "%@: %@ was not reassigned: moving into pool.", (uint8_t *)v56, 0x16u);
        v64 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v62, 2, v64);
        swift_slowDealloc(v62, -1, -1);
        v65 = v56;
        v51 = v72;
        swift_slowDealloc(v65, -1, -1);
      }
      else
      {

        v63 = v50;
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v46);
      swift_beginAccess(&unk_1005D7378, &v77, 32, 0);
      objc_setAssociatedObject(v50, &unk_1005D7378, 0, 0);
      swift_endAccess(&v77);
      isa = Bool._bridgeToObjectiveC()().super.super.isa;
      swift_beginAccess(&unk_1005D7379, &v77, 32, 0);
      objc_setAssociatedObject(v50, &unk_1005D7379, isa, (void *)3);
      swift_endAccess(&v77);

      sub_100303A10(&v77, *(_QWORD *)&v51[OBJC_IVAR___ICRealtimeCollaborationController_id]);
    }
  }
}

void sub_1002B4E84(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, "identifierDescription");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

Swift::Int sub_1002B4ED8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v4, v1, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

uint64_t sub_1002B4F30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(a1, v4, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1002B4F74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t ICArchiveCreator.softwareIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_1002B4FF4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

uint64_t ICNoteEditorBaseViewController.realtimeCollaborationController.getter()
{
  if (qword_1005CEBD8 != -1)
    swift_once(&qword_1005CEBD8, sub_10029384C);
  if (byte_100601AB8 == 1 && (sub_1002B50FC() & 1) != 0)
    return sub_1002B2FC0();
  else
    return 0;
}

uint64_t sub_1002B50FC()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t result;
  unsigned __int8 v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  swift_beginAccess(&unk_1005D7379, v6, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_1005D7379);
  swift_endAccess(v6);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v1, v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10014BD1C((uint64_t)v5, (uint64_t)v6, &qword_1005CF190);
  if (v7)
  {
    result = swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return v4;
  }
  else
  {
    sub_1000160C8((uint64_t)v6);
    return 0;
  }
  return result;
}

void **sub_1002B51D4(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Logger(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = *(void **)((char *)a2 + v14);
    *(void **)((char *)v7 + v14) = v16;
    v17 = *(void **)((char *)a2 + v15);
    *(void **)((char *)v7 + v15) = v17;
    v18 = a3[8];
    v19 = a3[9];
    v20 = *(void **)((char *)a2 + v18);
    *(void **)((char *)v7 + v18) = v20;
    v21 = *(void **)((char *)a2 + v19);
    *(void **)((char *)v7 + v19) = v21;
    v22 = a3[10];
    v23 = *(void **)((char *)a2 + v22);
    *(void **)((char *)v7 + v22) = v23;
    v24 = v16;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v23);
  }
  return v7;
}

uint64_t sub_1002B52D0(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[7]));
  swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[8]));
  swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[9]));
  return swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[10]));
}

void **sub_1002B535C(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = a3[6];
  v14 = a3[7];
  v15 = *(void **)((char *)a2 + v13);
  *(void **)((char *)a1 + v13) = v15;
  v16 = *(void **)((char *)a2 + v14);
  *(void **)((char *)a1 + v14) = v16;
  v17 = a3[8];
  v18 = a3[9];
  v19 = *(void **)((char *)a2 + v17);
  *(void **)((char *)a1 + v17) = v19;
  v20 = *(void **)((char *)a2 + v18);
  *(void **)((char *)a1 + v18) = v20;
  v21 = a3[10];
  v22 = *(void **)((char *)a2 + v21);
  *(void **)((char *)a1 + v21) = v22;
  v23 = v15;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v22);
  return a1;
}

void **sub_1002B5430(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = *(void **)((char *)a2 + v13);
  v15 = *(void **)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = v14;
  v16 = v14;

  v17 = a3[7];
  v18 = *(void **)((char *)a2 + v17);
  v19 = *(uint64_t *)((char *)a1 + v17);
  *(void **)((char *)a1 + v17) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = a3[8];
  v21 = *(void **)((char *)a2 + v20);
  v22 = *(uint64_t *)((char *)a1 + v20);
  *(void **)((char *)a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[9];
  v24 = *(void **)((char *)a2 + v23);
  v25 = *(uint64_t *)((char *)a1 + v23);
  *(void **)((char *)a1 + v23) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[10];
  v27 = *(void **)((char *)a2 + v26);
  v28 = *(uint64_t *)((char *)a1 + v26);
  *(void **)((char *)a1 + v26) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  return a1;
}

_QWORD *sub_1002B5530(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

void **sub_1002B55D0(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)((char *)a1 + v11);
  *(void **)((char *)a1 + v11) = *(void **)((char *)a2 + v11);

  v13 = a3[7];
  v14 = *(uint64_t *)((char *)a1 + v13);
  *(void **)((char *)a1 + v13) = *(void **)((char *)a2 + v13);
  swift_bridgeObjectRelease(v14);
  v15 = a3[8];
  v16 = *(uint64_t *)((char *)a1 + v15);
  *(void **)((char *)a1 + v15) = *(void **)((char *)a2 + v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[9];
  v18 = *(uint64_t *)((char *)a1 + v17);
  *(void **)((char *)a1 + v17) = *(void **)((char *)a2 + v17);
  swift_bridgeObjectRelease(v18);
  v19 = a3[10];
  v20 = *(uint64_t *)((char *)a1 + v19);
  *(void **)((char *)a1 + v19) = *(void **)((char *)a2 + v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_1002B56A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B56B4);
}

uint64_t sub_1002B56B4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

char *sub_1002B5730(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Logger(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1002B57A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D2218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FastSyncControllerPool.PresenceAction(uint64_t a1)
{
  return sub_100010414(a1, qword_1005D74C8, (uint64_t)&nominal type descriptor for FastSyncControllerPool.PresenceAction);
}

uint64_t sub_1002B5800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002B5844(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(id *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  const void *v42;
  BOOL v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void (*v51)(id *__return_ptr, _QWORD *);
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  _QWORD v64[6];
  _QWORD v65[2];

  v2 = (uint64_t (*)(id *))a1[1];
  v65[0] = *a1;
  v1 = v65[0];
  v3 = a1[2];
  v51 = (void (*)(id *__return_ptr, _QWORD *))a1[3];
  v4 = a1[4];
  v55 = v4;
  if ((v65[0] & 0xC000000000000001) != 0)
  {
    if (v65[0] < 0)
      v5 = v65[0];
    else
      v5 = v65[0] & 0xFFFFFFFFFFFFFF8;
    sub_10021FD58(v65);
    swift_retain(v3);
    swift_retain(v4);
    v6 = __CocoaSet.makeIterator()(v5);
    v7 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    v8 = sub_1001452A0((unint64_t *)&qword_1005D4AD8, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    v9 = Set.Iterator.init(_cocoa:)(v6, v7, v8);
    v1 = v64[1];
    v60 = v64[2];
    v10 = v64[3];
    v11 = v64[4];
    v12 = v64[5];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(v65[0] + 32);
    v60 = v65[0] + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(v65[0] + 56);
    sub_10021FD58(v65);
    swift_retain(v3);
    v9 = swift_retain(v4);
    v11 = 0;
  }
  v56 = 0;
  v16 = (unint64_t)(v10 + 64) >> 6;
  v54 = _swiftEmptyArrayStorage;
  v52 = &_swiftEmptyArrayStorage[4];
  while (1)
  {
    if (v1 < 0)
    {
      v19 = __CocoaSet.Iterator.next()(v9);
      if (!v19)
        goto LABEL_55;
      v20 = v19;
      v61 = v19;
      v21 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
      swift_unknownObjectRetain(v20);
      swift_dynamicCast(v64, &v61, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
      v22 = (id)v64[0];
      swift_unknownObjectRelease(v20, v23);
      if (!v22)
        goto LABEL_55;
      goto LABEL_28;
    }
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v11 << 6);
      goto LABEL_27;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if (v24 >= v16)
      goto LABEL_55;
    v25 = *(_QWORD *)(v60 + 8 * v24);
    if (!v25)
      break;
LABEL_26:
    v12 = (v25 - 1) & v25;
    v18 = __clz(__rbit64(v25)) + (v24 << 6);
    v11 = v24;
LABEL_27:
    v22 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v18);
    if (!v22)
      goto LABEL_55;
LABEL_28:
    v62 = v22;
    if ((v2(&v62) & 1) != 0)
    {
      v64[0] = v22;
      v51(&v62, v64);

      v28 = v62;
      v29 = v63;
      v30 = v56;
      if (!v56)
      {
        v49 = v63;
        v50 = v62;
        v31 = v54;
        v32 = v54[3];
        if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_62;
        v33 = v32 & 0xFFFFFFFFFFFFFFFELL;
        if (v33 <= 1)
          v34 = 1;
        else
          v34 = v33;
        v57 = v34;
        v35 = sub_100012E18(&qword_1005D0EF0);
        v36 = (_QWORD *)swift_allocObject(v35, 16 * v34 + 32, 7);
        v37 = j__malloc_size(v36);
        v38 = v37 - 32;
        if (v37 < 32)
          v38 = v37 - 17;
        v39 = v38 >> 4;
        v36[2] = v57;
        v36[3] = 2 * (v38 >> 4);
        v40 = (unint64_t)(v36 + 4);
        v41 = v54[3] >> 1;
        if (v54[2])
        {
          v42 = v54 + 4;
          if (v36 != v54 || v40 >= (unint64_t)v42 + 16 * v41)
          {
            v58 = v38 >> 4;
            v53 = v54[3] >> 1;
            memmove(v36 + 4, v42, 16 * v41);
            v41 = v53;
            v40 = (unint64_t)(v36 + 4);
            v39 = v58;
          }
          v31 = v54;
          v54[2] = 0;
        }
        v52 = (_QWORD *)(v40 + 16 * v41);
        v59 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
        v9 = swift_release(v31);
        v30 = v59;
        v54 = v36;
        v29 = v49;
        v28 = v50;
      }
      v43 = __OFSUB__(v30, 1);
      v44 = v30 - 1;
      if (v43)
        goto LABEL_60;
      v56 = v44;
      *v52 = v28;
      v52[1] = v29;
      v52 += 2;
    }
    else
    {

    }
  }
  v26 = v11 + 2;
  if (v11 + 2 >= v16)
    goto LABEL_55;
  v25 = *(_QWORD *)(v60 + 8 * v26);
  if (v25)
    goto LABEL_22;
  v27 = v11 + 3;
  if (v11 + 3 >= v16)
    goto LABEL_55;
  v25 = *(_QWORD *)(v60 + 8 * v27);
  if (v25)
    goto LABEL_25;
  v26 = v11 + 4;
  if (v11 + 4 >= v16)
    goto LABEL_55;
  v25 = *(_QWORD *)(v60 + 8 * v26);
  if (v25)
  {
LABEL_22:
    v24 = v26;
    goto LABEL_26;
  }
  v27 = v11 + 5;
  if (v11 + 5 >= v16)
    goto LABEL_55;
  v25 = *(_QWORD *)(v60 + 8 * v27);
  if (v25)
  {
LABEL_25:
    v24 = v27;
    goto LABEL_26;
  }
  v24 = v11 + 6;
  if (v11 + 6 >= v16)
    goto LABEL_55;
  v25 = *(_QWORD *)(v60 + 8 * v24);
  if (v25)
    goto LABEL_26;
  v45 = v11 + 7;
  while (v16 != v45)
  {
    v25 = *(_QWORD *)(v60 + 8 * v45++);
    if (v25)
    {
      v24 = v45 - 1;
      goto LABEL_26;
    }
  }
LABEL_55:
  sub_1001452E0(v1);
  swift_release(v55);
  swift_release(v3);
  v46 = v54[3];
  if (v46 < 2)
    return;
  v47 = v46 >> 1;
  v43 = __OFSUB__(v47, v56);
  v48 = v47 - v56;
  if (!v43)
  {
    v54[2] = v48;
    return;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

BOOL sub_1002B5D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return *(_QWORD *)(*(_QWORD *)(v3 + 16) + OBJC_IVAR___ICRealtimeCollaborationController_id) == a3;
}

uint64_t sub_1002B5D24(unint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  if ((a1 & 0x8000000000000000) != 0 || (v7 = *v3, 1 << *(_BYTE *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v11 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_100307FF4();
    v7 = v11;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * a1);
  sub_10030A9DC(a1);
  v9 = *v3;
  *v3 = v11;
  swift_bridgeObjectRelease(v9);
  return v8;
}

uint64_t sub_1002B5DF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = __CocoaSet.makeIterator()(result);
    v4 = sub_1000163BC(0, &qword_1005D7440, ICNoteEditorBaseViewController_ptr);
    v5 = sub_1001452A0(&qword_1005D7448, &qword_1005D7440, ICNoteEditorBaseViewController_ptr);
    Set.Iterator.init(_cocoa:)(v3, v4, v5);
    result = v13;
    v6 = v14;
    v7 = v15;
    v8 = v16;
  }
  else
  {
    v9 = -1;
    v10 = -1 << *(_BYTE *)(result + 32);
    v11 = ~v10;
    v6 = result + 56;
    v12 = -v10;
    if (v12 < 64)
      v9 = ~(-1 << v12);
    v8 = v9 & *(_QWORD *)(result + 56);
    v7 = (unint64_t)v11;
  }
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  return result;
}

void sub_1002B5EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  swift_bridgeObjectRetain(a1);
  isUniquelyReferenced_nonNull_native = sub_1002B5DF4(v3, (uint64_t)v30);
  v5 = v30[0];
  v28 = v30[1];
  v6 = v32;
  v7 = v33;
  v8 = OBJC_IVAR___ICRealtimeCollaborationController_id;
  v25 = v31;
  v27 = (unint64_t)(v31 + 64) >> 6;
  v26 = _swiftEmptyArrayStorage;
  while (1)
  {
    v9 = v6;
    if ((v5 & 0x8000000000000000) == 0)
      break;
    v12 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
    if (!v12)
      goto LABEL_33;
    v13 = v12;
    v29 = v12;
    v14 = sub_1000163BC(0, &qword_1005D7440, ICNoteEditorBaseViewController_ptr);
    swift_unknownObjectRetain(v13);
    swift_dynamicCast(&v34, &v29, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
    v15 = v34;
    swift_unknownObjectRelease(v13, v16);
    v6 = v9;
    if (!v15)
      goto LABEL_33;
LABEL_26:
    v20 = (char *)objc_msgSend(v15, "realtimeCollaborationController", v25);
    if (v20
      && (v21 = *(_QWORD *)&v20[OBJC_IVAR___ICRealtimeCollaborationController_id],
          v20,
          v21 == *(_QWORD *)(a2 + v8)))
    {
      v22 = objc_msgSend(v15, "editorIdentifier");

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v26);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_10016B3DC(0, v26[2] + 1, 1, v26);
        v26 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v24 = v26[2];
      v23 = v26[3];
      if (v24 >= v23 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_10016B3DC((_QWORD *)(v23 > 1), v24 + 1, 1, v26);
        v26 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v26[2] = v24 + 1;
      v26[v24 + 4] = v22;
    }
    else
    {

    }
  }
  if (v7)
  {
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v6 << 6);
LABEL_25:
    v15 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v11);
    if (!v15)
      goto LABEL_33;
    goto LABEL_26;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v27)
      goto LABEL_33;
    v18 = *(_QWORD *)(v28 + 8 * v17);
    ++v6;
    if (!v18)
    {
      v6 = v9 + 2;
      if (v9 + 2 >= v27)
        goto LABEL_33;
      v18 = *(_QWORD *)(v28 + 8 * v6);
      if (!v18)
      {
        v6 = v9 + 3;
        if (v9 + 3 >= v27)
          goto LABEL_33;
        v18 = *(_QWORD *)(v28 + 8 * v6);
        if (!v18)
        {
          v6 = v9 + 4;
          if (v9 + 4 >= v27)
            goto LABEL_33;
          v18 = *(_QWORD *)(v28 + 8 * v6);
          if (!v18)
          {
            v6 = v9 + 5;
            if (v9 + 5 >= v27)
              goto LABEL_33;
            v18 = *(_QWORD *)(v28 + 8 * v6);
            if (!v18)
            {
              v19 = v9 + 6;
              while (v27 != v19)
              {
                v18 = *(_QWORD *)(v28 + 8 * v19++);
                if (v18)
                {
                  v6 = v19 - 1;
                  goto LABEL_24;
                }
              }
LABEL_33:
              sub_1001452E0(v5);
              return;
            }
          }
        }
      }
    }
LABEL_24:
    v7 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v6 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_1002B61E8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t j;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  j = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (j << 6); ; i = __clz(__rbit64(v13)) + (j << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain(v17);
    if ((a2(v16, v17, v18) & 1) != 0)
    {
      swift_release(a1);
      return v16;
    }
    result = swift_bridgeObjectRelease(v17);
    if (v7)
      goto LABEL_4;
LABEL_5:
    v12 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v12 >= v19)
      goto LABEL_24;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++j;
    if (v13)
      goto LABEL_19;
    j = v12 + 1;
    if (v12 + 1 >= v19)
      goto LABEL_24;
    v13 = *(_QWORD *)(v4 + 8 * j);
    if (v13)
      goto LABEL_19;
    j = v12 + 2;
    if (v12 + 2 >= v19)
      goto LABEL_24;
    v13 = *(_QWORD *)(v4 + 8 * j);
    if (v13)
      goto LABEL_19;
    j = v12 + 3;
    if (v12 + 3 >= v19)
      goto LABEL_24;
    v13 = *(_QWORD *)(v4 + 8 * j);
    if (v13)
      goto LABEL_19;
    v14 = v12 + 4;
    if (v14 >= v19)
    {
LABEL_24:
      swift_release(a1);
      return 0;
    }
    v13 = *(_QWORD *)(v4 + 8 * v14);
    for (j = v14; !v13; ++v14)
    {
      j = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_27;
      if (j >= v19)
        goto LABEL_24;
      v13 = *(_QWORD *)(v4 + 8 * j);
    }
LABEL_19:
    v7 = (v13 - 1) & v13;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1002B63B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

char *sub_1002B63D8(id *a1)
{
  uint64_t v1;

  return sub_1002B2188(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_1002B63E0()
{
  void *v0;
  void *v1;

  v0 = (void *)sub_1002B2FC0();
  v1 = v0;
  if (v0)

  return v1 == 0;
}

uint64_t sub_1002B6414()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002B6424(uint64_t a1, uint64_t (*a2)(void))
{
  int v2;
  _BYTE *v3;
  char v4;
  _BYTE v6[24];

  v3 = (_BYTE *)(a1 + 16);
  v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 2)
  {
    v4 = a2();
    swift_beginAccess(v3, v6, 1, 0);
    *v3 = v4 & 1;
  }
  else
  {
    v4 = v2 & 1;
  }
  return v4 & 1;
}

char *sub_1002B6490(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v17[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v17);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v18 = *a2;
      *(_QWORD *)a1 = *a2;
      v19 = v18;
      v20 = a1;
      v21 = a3;
      v22 = 1;
LABEL_11:
      swift_storeEnumTagMultiPayload(v20, v21, v22);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_100012E18(&qword_1005D7430);
      v11 = *(int *)(v10 + 48);
      v12 = &a1[v11];
      v13 = (char *)a2 + v11;
      v14 = sub_100012E18(&qword_1005D2210);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100012E18(&qword_1005D2218);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v23 = *(int *)(v10 + 64);
      v24 = *(char **)((char *)a2 + v23);
      *(_QWORD *)&a1[v23] = v24;
      v25 = v24;
      v20 = a1;
      v21 = a3;
      v22 = 0;
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1002B661C(id *a1, uint64_t a2)
{
  id *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      return;
    v4 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
    v5 = sub_100012E18(&qword_1005D7430);
    v6 = (char *)v2 + *(int *)(v5 + 48);
    v7 = sub_100012E18(&qword_1005D2210);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v2 = (id *)((char *)v2 + *(int *)(v5 + 64));
  }

}

void **sub_1002B66E8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v15 = *a2;
    *a1 = *a2;
    v16 = v15;
    v17 = a1;
    v18 = a3;
    v19 = 1;
LABEL_9:
    swift_storeEnumTagMultiPayload(v17, v18, v19);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = sub_100012E18(&qword_1005D7430);
    v9 = *(int *)(v8 + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_100012E18(&qword_1005D2210);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100012E18(&qword_1005D2218);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v20 = *(int *)(v8 + 64);
    v21 = *(void **)((char *)a2 + v20);
    *(void **)((char *)a1 + v20) = v21;
    v22 = v21;
    v17 = a1;
    v18 = a3;
    v19 = 0;
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **sub_1002B684C(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;

  if (a1 != a2)
  {
    sub_1002B69C0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *a2;
      *a1 = *a2;
      v16 = v15;
      v17 = a1;
      v18 = a3;
      v19 = 1;
LABEL_10:
      swift_storeEnumTagMultiPayload(v17, v18, v19);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_100012E18(&qword_1005D7430);
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_100012E18(&qword_1005D2210);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_100012E18(&qword_1005D2218);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v20 = *(int *)(v8 + 64);
      v21 = *(void **)((char *)a2 + v20);
      *(void **)((char *)a1 + v20) = v21;
      v22 = v21;
      v17 = a1;
      v18 = a3;
      v19 = 0;
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1002B69C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1002B69FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_100012E18(&qword_1005D7430);
    v8 = *(int *)(v7 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_100012E18(&qword_1005D2210);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100012E18(&qword_1005D2218);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1002B6B38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1002B69C0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_100012E18(&qword_1005D7430);
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_100012E18(&qword_1005D2210);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100012E18(&qword_1005D2218);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1002B6C84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[32];
  _QWORD v8[2];

  v2 = type metadata accessor for EditNoteActivity(319);
  if (v3 <= 0x3F)
  {
    sub_100186C04(319);
    if (v5 > 0x3F)
    {
      return v4;
    }
    else
    {
      swift_getTupleTypeLayout3(v7, *(_QWORD *)(v2 - 8) + 64, *(_QWORD *)(v4 - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
      v8[0] = v7;
      v8[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v8);
      return 0;
    }
  }
  return v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ActivityID(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for ActivityID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for ActivityID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityID()
{
  return &type metadata for ActivityID;
}

unint64_t sub_1002B6E74()
{
  unint64_t result;

  result = qword_1005D7500;
  if (!qword_1005D7500)
  {
    result = swift_getWitnessTable(&unk_1004608E4, &type metadata for ActivityID);
    atomic_store(result, (unint64_t *)&qword_1005D7500);
  }
  return result;
}

id sub_1002B6F6C()
{
  return sub_1002B86F4(type metadata accessor for TagEditingTextField);
}

uint64_t type metadata accessor for TagEditingTextField()
{
  return objc_opt_self(ICTagEditingTextField);
}

uint64_t sub_1002B6F98()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag);
  if (v1 && (v2 = objc_msgSend(v1, "displayText")) != 0)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField), "text"));
  if (!v7)
  {
    if (v6)
      goto LABEL_14;
LABEL_19:
    v14 = 0;
    return v14 & 1;
  }
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v11 = v10;

  if (!v6)
  {
    if (v11)
    {
      v15 = v11;
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  if (!v11)
  {
LABEL_14:
    v15 = v6;
LABEL_17:
    swift_bridgeObjectRelease(v15);
    v14 = 1;
    return v14 & 1;
  }
  if (v4 == v9 && v6 == v11)
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v11);
    goto LABEL_19;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v9, v11, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v11);
  v14 = v13 ^ 1;
  return v14 & 1;
}

uint64_t (*sub_1002B70C0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1002B7104()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField);
  v2 = objc_msgSend(v1, "text");
  if (!v2)
    goto LABEL_5;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v5;

  swift_bridgeObjectRelease(v6);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
LABEL_5:
    v8 = objc_msgSend(v1, "text");
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    v13 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag);
    if (v13 && (v14 = objc_msgSend(v13, "displayText")) != 0)
    {
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      if (!v12)
        goto LABEL_11;
    }
    else
    {
      v16 = 0;
      v18 = 0;
      if (!v12)
      {
LABEL_11:
        if (v18)
        {
          v19 = v18;
LABEL_20:
          swift_bridgeObjectRelease(v19);
          LOBYTE(v7) = 1;
          return v7 & 1;
        }
LABEL_18:
        LOBYTE(v7) = 0;
        return v7 & 1;
      }
    }
    if (!v18)
    {
      v19 = v12;
      goto LABEL_20;
    }
    if (v10 != v16 || v12 != v18)
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v16, v18, 0);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v18);
      LOBYTE(v7) = v20 ^ 1;
      return v7 & 1;
    }
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v18);
    goto LABEL_18;
  }
  return v7 & 1;
}

id sub_1002B7284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC11MobileNotes14TagEditingCell____lazy_storage___listContentView;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell____lazy_storage___listContentView);
  if (v6)
  {
    v7 = *(id *)(v1 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell____lazy_storage___listContentView);
  }
  else
  {
    v8 = sub_1002B88D4();
    static UIListContentConfiguration.cell()(v8);
    v9 = (void *)UIListContentView.init(configuration:)(v4);
    v10 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v9;
    v7 = v9;

    v6 = 0;
  }
  v11 = v6;
  return v7;
}

id sub_1002B7338(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  void *v10;
  char *v11;
  unsigned int v12;
  double v13;
  uint64_t v14;
  id v15;
  double v16;
  objc_super v18;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag] = 0;
  v9 = &v4[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes14TagEditingCell____lazy_storage___listContentView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldHorizontalPadding] = 0x4028000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_contentViewCornerRadius] = 0x4020000000000000;
  v10 = (void *)objc_opt_self(UIDevice);
  v11 = v4;
  v12 = objc_msgSend(v10, "ic_isVision");
  v13 = 8.0;
  if (v12)
    v13 = 0.0;
  *(double *)&v11[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldVerticalPadding] = v13;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldLeadingPadding] = 0x4030000000000000;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_separatorLeadingPadding] = 0x4030000000000000;
  v14 = OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TagEditingTextField()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagObjectID] = 0;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for TagEditingCell();
  v15 = objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
  sub_1002B7644(v16);

  return v15;
}

id sub_1002B74C8(void *a1)
{
  char *v1;
  char *v3;
  void *v4;
  char *v5;
  unsigned int v6;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  double v12;
  objc_super v14;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag] = 0;
  v3 = &v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell____lazy_storage___listContentView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldHorizontalPadding] = 0x4028000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_contentViewCornerRadius] = 0x4020000000000000;
  v4 = (void *)objc_opt_self(UIDevice);
  v5 = v1;
  v6 = objc_msgSend(v4, "ic_isVision");
  v7 = 8.0;
  if (v6)
    v7 = 0.0;
  *(double *)&v5[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldVerticalPadding] = v7;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldLeadingPadding] = 0x4030000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_separatorLeadingPadding] = 0x4030000000000000;
  v8 = OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TagEditingTextField()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagObjectID] = 0;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for TagEditingCell();
  v9 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    sub_1002B7644(v12);

  }
  return v10;
}

id sub_1002B7644(double a1)
{
  char *v1;
  void *v2;
  double v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;

  v2 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField];
  LODWORD(a1) = 1148846080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, a1);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v3);
  objc_msgSend(v2, "setUserInteractionEnabled:", 1);
  objc_msgSend(v2, "setDelegate:", v1);
  objc_msgSend(v2, "setReturnKeyType:", 9);
  objc_msgSend(v2, "addTarget:action:forControlEvents:", v1, "textChanged:", 0x20000);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v2, "setFont:", v4);

  sub_1002B830C();
  objc_msgSend(v1, "setIsAccessibilityElement:", 1);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v1, "setAccessibilityHint:", v10);

  return objc_msgSend(v1, "setFocusEffect:", 0);
}

void sub_1002B7848(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  id v25;
  void *v26;
  id v27;
  id v28;
  unsigned int v29;
  void (*v30)(char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD v47[3];
  uint64_t v48;
  void *v49;

  v2 = v1;
  v4 = type metadata accessor for UIBackgroundConfiguration(0);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D7610);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v42 - v15;
  sub_1002B855C();
  static UIListContentConfiguration.cell()(v17);
  v19 = type metadata accessor for UICellConfigurationState(0, v18);
  v48 = v19;
  v49 = &protocol witness table for UICellConfigurationState;
  v20 = sub_10012D160(v47);
  v21 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v43 = a1;
  v22 = a1;
  v23 = v21;
  v21(v20, v22, v19);
  v46 = v16;
  UIListContentConfiguration.updated(for:)(v47);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v14, v10);
  sub_1000153C0(v47);
  v25 = objc_msgSend(v1, "window");
  if (!v25)
    goto LABEL_6;
  v26 = v25;
  v27 = objc_msgSend(v25, "rootViewController");

  if (!v27)
    goto LABEL_6;
  v28 = objc_msgSend(v27, "view");

  if (v28)
  {
    v29 = objc_msgSend(v28, "ic_hasCompactWidth");

    if (v29)
    {
      v30 = v24;
      static UIBackgroundConfiguration._listInsetGroupedCell()();
LABEL_7:
      v48 = v19;
      v49 = &protocol witness table for UICellConfigurationState;
      v31 = sub_10012D160(v47);
      v23(v31, v43, v19);
      UIBackgroundConfiguration.updated(for:)(v47);
      v33 = v44;
      v32 = v45;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v45);
      sub_1000153C0(v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v32);
      UICollectionViewCell.backgroundConfiguration.setter(v9);
      v34 = sub_1002B7284();
      v48 = v10;
      v49 = &protocol witness table for UIListContentConfiguration;
      v35 = sub_10012D160(v47);
      v36 = v46;
      (*(void (**)(_QWORD *, char *, uint64_t))(v11 + 16))(v35, v46, v10);
      UIListContentView.configuration.setter(v47);

      v37 = objc_msgSend(v2, "separatorLayoutGuide");
      v38 = objc_msgSend(v37, "leadingAnchor");

      v39 = sub_1002B7284();
      v40 = objc_msgSend(v39, "leadingAnchor");

      v41 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v40, 16.0);
      objc_msgSend(v41, "setActive:", 1);

      v30(v36, v10);
      return;
    }
LABEL_6:
    v30 = v24;
    static UIBackgroundConfiguration.listSidebarCell()();
    goto LABEL_7;
  }
  __break(1u);
}

id sub_1002B7E70()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField];
  v2 = OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag];
  if (v3)
  {
    v4 = objc_msgSend(v3, "displayText");
    v5 = v4;
    if (v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v7 = v6;

      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
    }
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, "setText:", v5);

  v8 = *(void **)&v0[v2];
  if (v8)
  {
    v9 = objc_msgSend(v8, "displayText");
    v10 = v9;
    if (v9)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
    }
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v0, "setAccessibilityLabel:", v10);

  return objc_msgSend(v1, "becomeFirstResponder");
}

void sub_1002B7F9C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  NSString v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void (*v40)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t);
  id v41;
  char *v42;
  _BYTE v43[32];

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField];
  v7 = objc_msgSend(v6, "markedTextRange");

  if (!v7)
  {
    v8 = objc_msgSend(v6, "text");
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v12 = v11;

      v13 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "ic_hashtagAllowedCharacterSet");
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      v14 = String.removingCharacters(notContainedIn:)(v5, v10, v12);
      v16 = v15;
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease(v12);
      v17 = sub_10036F0A8(75, v14, v16);
      v19 = v18;
      v21 = v20;
      v23 = v22;
      swift_bridgeObjectRelease(v16);
      v24 = static String._fromSubstring(_:)(v17, v19, v21, v23);
      v26 = v25;
      swift_bridgeObjectRelease(v23);
      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "setText:", v27);

      v28 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setAccessibilityLabel:", v28);

      v30 = sub_1002B70C0((uint64_t)v43);
      if (*(_QWORD *)(v29 + 24))
      {
        v31 = v29;
        v32 = sub_1002B7104();
        v33 = *(_QWORD *)(v31 + 24);
        v34 = *(_QWORD *)(v31 + 32);
        sub_1002B88AC(v31, v33);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v34 + 24))(v32 & 1, v33, v34);
      }
      ((void (*)(_BYTE *, _QWORD))v30)(v43, 0);
      v36 = sub_1002B70C0((uint64_t)v43);
      v37 = *(_QWORD *)(v35 + 24);
      if (v37)
      {
        v38 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag];
        v39 = *(_QWORD *)(v35 + 32);
        sub_1002B88AC(v35, *(_QWORD *)(v35 + 24));
        v40 = *(void (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v39 + 48);
        v41 = v38;
        v42 = v1;
        v40(v38, v24, v26, v1, v37, v39);
      }
      else
      {
        swift_bridgeObjectRelease(v26);
      }
      ((void (*)(_BYTE *, _QWORD))v36)(v43, 0);
    }
  }
}

uint64_t sub_1002B830C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005D7610);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIListContentConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField];
  v15 = static UIListContentConfiguration.cell()(v11);
  UIListContentConfiguration.textProperties.getter(v15);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v17 = (void *)UIListContentConfiguration.TextProperties.color.getter(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v14, "setTextColor:", v17);

  v18 = objc_msgSend(v1, "layer");
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v20 = objc_msgSend(v19, "CGColor");

  objc_msgSend(v18, "setBorderColor:", v20);
  v21 = objc_msgSend(v1, "layer");
  objc_msgSend(v21, "setBorderWidth:", 0.0);

  v22 = objc_msgSend(v1, "layer");
  objc_msgSend(v22, "setCornerRadius:", 0.0);

  static UIBackgroundConfiguration.clear()(v23);
  v24 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 0, 1, v24);
  return UICollectionViewCell.backgroundConfiguration.setter(v4);
}

void sub_1002B855C()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = sub_1002B7284();
  v2 = objc_msgSend(v1, "superview");

  if (!v2)
  {
    v3 = sub_1002B7284();
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v4 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField];
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = objc_msgSend(v0, "contentView");
    v6 = sub_1002B7284();
    objc_msgSend(v5, "addSubview:", v6);

    v7 = objc_msgSend(v0, "contentView");
    objc_msgSend(v7, "addSubview:", v4);

    objc_msgSend(v4, "ic_applyRoundedCornersWithRadius:", 8.0);
    objc_msgSend(v4, "ic_addAnchorsToFillSuperviewWithHorizontalPadding:verticalPadding:usesSafeAreaLayoutGuide:", 0, 12.0, *(double *)&v0[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textFieldVerticalPadding]);
    v8 = objc_msgSend(v0, "contentView");
    objc_msgSend(v8, "ic_applyRoundedCornersWithRadius:", 8.0);

    v9 = sub_1002B7284();
    objc_msgSend(v9, "ic_addAnchorsToFillSuperview");

  }
}

id sub_1002B86E8()
{
  return sub_1002B86F4(type metadata accessor for TagEditingCell);
}

id sub_1002B86F4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for TagEditingCell()
{
  return objc_opt_self(_TtC11MobileNotes14TagEditingCell);
}

void sub_1002B87B4(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSString v11;
  id v12;

  v2 = OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag;
  v3 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag] = a1;
  v4 = a1;

  v5 = *(void **)&v1[v2];
  if (v5)
  {
    v6 = objc_msgSend(v5, "displayText");
    if (v6)
    {
      v7 = v6;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

      v10 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField];
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setText:", v11);

      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
      objc_msgSend(v1, "setAccessibilityLabel:", v12);

    }
  }
}

uint64_t sub_1002B88AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1002B88D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D7618;
  if (!qword_1005D7618)
  {
    v1 = objc_opt_self(UIListContentView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D7618);
  }
  return result;
}

uint64_t sub_1002B8910()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD v4[5];
  _BYTE v5[24];
  _QWORD v6[3];
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate, v5, 0, 0);
  sub_1002B8DB8(v1, (uint64_t)v6);
  if (!v7)
  {
    sub_100012DDC((uint64_t)v6, (uint64_t *)&unk_1005D70A0);
    return 1;
  }
  v2 = *(unsigned __int8 *)(*sub_10012D19C(v6, v7) + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_isRenamingTags);
  sub_100012DDC((uint64_t)v6, (uint64_t *)&unk_1005D70A0);
  if (v2 != 1)
    return 1;
  sub_1002B8DB8(v1, (uint64_t)v6);
  if (v7)
  {
    sub_10012D11C((uint64_t)v6, (uint64_t)v4);
    sub_100012DDC((uint64_t)v6, (uint64_t *)&unk_1005D70A0);
    sub_10012D19C(v4, v4[3]);
    sub_1002FEA20();
    sub_1000153C0(v4);
  }
  else
  {
    sub_100012DDC((uint64_t)v6, (uint64_t *)&unk_1005D70A0);
  }
  return 0;
}

BOOL sub_1002B8A18(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "ic_hashtagAllowedCharacterSet");
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v9 = String.removingCharacters(notContainedIn:)(v7, a1, a2);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease(v11);
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (v12)
    return 1;
  v14 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v14 = a1 & 0xFFFFFFFFFFFFLL;
  return v14 == 0;
}

void sub_1002B8B20()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  _QWORD v30[5];
  _BYTE v31[24];
  _BYTE v32[24];
  uint64_t v33;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_textField);
  v2 = objc_msgSend(v1, "text");
  if (v2)
  {
    v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    v7 = objc_msgSend(v6, "ic_withoutHashtagPrefix");

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag;
    v12 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_hashtag);
    if (v12)
    {
      v13 = objc_msgSend(v12, "displayText");
      if (v13)
      {
        v14 = v13;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v17 = v16;

        if (v8 == v15 && v10 == v17)
        {
          swift_bridgeObjectRelease_n(v10, 2);
          return;
        }
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v15, v17, 0);
        swift_bridgeObjectRelease(v17);
        if ((v19 & 1) != 0)
        {
          swift_bridgeObjectRelease(v10);
          return;
        }
      }
    }
    objc_msgSend(v1, "resignFirstResponder");
    swift_bridgeObjectRelease(v10);
    v20 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v20 = v8 & 0xFFFFFFFFFFFFLL;
    if (v20)
    {
      v21 = v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate;
      swift_beginAccess(v0 + OBJC_IVAR____TtC11MobileNotes14TagEditingCell_tagEditingCellRenameDelegate, v31, 0, 0);
      sub_1002B8DB8(v21, (uint64_t)v32);
      if (v33)
      {
        sub_10012D11C((uint64_t)v32, (uint64_t)v30);
        sub_100012DDC((uint64_t)v32, (uint64_t *)&unk_1005D70A0);
        sub_10012D19C(v30, v30[3]);
        sub_1002FEA20();
        sub_1000153C0(v30);
      }
      else
      {
        sub_100012DDC((uint64_t)v32, (uint64_t *)&unk_1005D70A0);
      }
    }
    else
    {
      v22 = *(void **)(v0 + v11);
      if (v22 && (v23 = objc_msgSend(v22, "displayText")) != 0)
      {
        v24 = v23;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

        v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26);
        v27 = v28;
      }
      else
      {
        v27 = 0;
      }
      objc_msgSend(v1, "setText:", v27);

    }
  }
}

uint64_t sub_1002B8DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18((uint64_t *)&unk_1005D70A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *GetLinkedNotesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static GetLinkedNotesIntent.persistentIdentifier;
}

unint64_t static GetLinkedNotesIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1002B8E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static GetLinkedNotesIntent.title);
  sub_10012A0B0(v10, (uint64_t)static GetLinkedNotesIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001004865B0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t GetLinkedNotesIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC08 != -1)
    swift_once(&qword_1005CEC08, sub_1002B8E2C);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static GetLinkedNotesIntent.title);
}

uint64_t static GetLinkedNotesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC08 != -1)
    swift_once(&qword_1005CEC08, sub_1002B8E2C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static GetLinkedNotesIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static GetLinkedNotesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100486540);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static GetLinkedNotesIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D7620);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D7628);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2A4C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for GetLinkedNotesIntent, v6);
  v7._object = (void *)0x8000000100486590;
  v7._countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004609D0, v8);
  v10 = sub_100012E18(&qword_1005D7630);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for GetLinkedNotesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for GetLinkedNotesIntent, v6);
}

void (*DeleteFoldersIntent.entities.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10012A894;
}

uint64_t GetLinkedNotesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v4 = *(_QWORD *)(type metadata accessor for NoteEntity(0) - 8);
  v3[7] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v5);
  v3[9] = swift_task_alloc(v5);
  v3[10] = swift_task_alloc(v5);
  return swift_task_switch(sub_1002B949C, 0, 0);
}

uint64_t sub_1002B949C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  IntentParameter.wrappedValue.getter(*(_QWORD **)(v0 + 80));
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 88) = v3;
  v4 = swift_allocObject(&unk_100565390, 32, 7);
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = unk_1005D0AEC;
  v8 = (char *)&dword_1005D0AE8 + dword_1005D0AE8;
  swift_retain(v2);
  swift_retain(v1);
  v6 = (_QWORD *)swift_task_alloc(v5);
  *(_QWORD *)(v0 + 104) = v6;
  *v6 = v0;
  v6[1] = sub_1002B9578;
  return ((uint64_t (*)(uint64_t, void (*)(void *@<X0>, _QWORD *@<X8>), uint64_t))v8)(v3, sub_1002BA5BC, v4);
}

uint64_t sub_1002B9578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v3[14] = a1;
  v3[15] = v1;
  swift_task_dealloc(v4);
  v6 = (void *)v3[11];
  v5 = v3[12];
  v7 = v3[10];
  if (v1)
  {
    sub_10014FFE0(v7);
    swift_release(v5);

    v8 = sub_1002B99D8;
  }
  else
  {
    swift_release(v5);

    sub_10014FFE0(v7);
    v8 = sub_1002B961C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1002B961C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD **)(v0 + 112);
  v2 = v1[2];
  *(_QWORD *)(v0 + 128) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 136) = 0;
    *(_QWORD *)(v0 + 144) = _swiftEmptyArrayStorage;
    v3 = (void *)v1[4];
    *(_QWORD *)(v0 + 152) = v3;
    v4 = (void *)v1[5];
    *(_QWORD *)(v0 + 160) = v4;
    v5 = dword_1005D7854;
    v6 = v3;
    v7 = v4;
    v8 = v6;
    v9 = v7;
    v10 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_1002B9768;
    return NoteEntity.init(for:in:)(*(_QWORD *)(v0 + 72), (uint64_t)v8, (uint64_t)v9);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease(v1);
    *(_QWORD *)(v0 + 24) = _swiftEmptyArrayStorage;
    v15 = sub_100012E18(qword_1005D3AD0);
    v16 = sub_100130EAC();
    static IntentResult.result<A>(value:)(v0 + 24, v15, v16);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002B9768()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 112));
    swift_bridgeObjectRelease(v4);
    v5 = sub_1002B9A28;
  }
  else
  {
    v5 = sub_1002B97E0;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002B97E0()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 144);
  sub_10014FF9C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v1);
  v3 = *(_QWORD *)(v0 + 144);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v3 = sub_10016A824(0, *(_QWORD *)(v3 + 16) + 1, 1, *(_QWORD *)(v0 + 144));
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  if (v5 >= v4 >> 1)
    v3 = sub_10016A824(v4 > 1, v5 + 1, 1, v3);
  v7 = *(void **)(v0 + 152);
  v6 = *(void **)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 136) + 1;
  *(_QWORD *)(v3 + 16) = v5 + 1;
  sub_100243780(v9, v3+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v5);

  sub_10014FFE0(v10);
  if (v12 == v8)
  {
    v14 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
    *(_QWORD *)(v0 + 24) = v3;
    v16 = sub_100012E18(qword_1005D3AD0);
    v17 = sub_100130EAC();
    static IntentResult.result<A>(value:)(v0 + 24, v16, v17);
    swift_bridgeObjectRelease(v3);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 136) + 1;
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = v3;
    v20 = *(_QWORD *)(v0 + 112) + 16 * v19;
    v21 = *(void **)(v20 + 32);
    *(_QWORD *)(v0 + 152) = v21;
    v22 = *(void **)(v20 + 40);
    *(_QWORD *)(v0 + 160) = v22;
    v23 = dword_1005D7854;
    v24 = v21;
    v25 = v22;
    v26 = v24;
    v27 = v25;
    v28 = (_QWORD *)swift_task_alloc(v23);
    *(_QWORD *)(v0 + 168) = v28;
    *v28 = v0;
    v28[1] = sub_1002B9768;
    return NoteEntity.init(for:in:)(*(_QWORD *)(v0 + 72), (uint64_t)v26, (uint64_t)v27);
  }
}

uint64_t sub_1002B99D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B9A28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 160);

  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002B9A84(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = objc_opt_self(ICNote);
  v6 = swift_dynamicCastObjCClass(a1, v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = a1;
    sub_1002BA700(v7);
    v10 = v9;

    if (!v2)
      *a2 = v10;
  }
  else
  {
    v11 = objc_opt_self(NoteObject);
    if (swift_dynamicCastObjCClass(a1, v11))
    {
      *a2 = _swiftEmptyArrayStorage;
    }
    else
    {
      type metadata accessor for ICError(0);
      v13 = v12;
      v27 = 234;
      v14 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
      inited = swift_initStackObject(v14, &v26);
      *(_OWORD *)(inited + 16) = xmmword_100451C20;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(_QWORD *)(inited + 40) = v16;
      v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = v20;
      *(_QWORD *)(inited + 56) = v22;
      v23 = sub_1001356D4(inited);
      v24 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
      v25 = _BridgedStoredNSError.init(_:userInfo:)(&v28, &v27, v23, v13, v24);
      swift_willThrow(v25);
    }
  }
}

uint64_t sub_1002B9C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  int v30;
  void (*v31)(char *, char *, uint64_t);
  char v32;
  char *v33;
  uint64_t v34;
  void *v35;
  NSURL *v36;
  void *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  uint64_t v50;

  v45 = a5;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v43 = (uint64_t)&v43 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  v17 = sub_100012E18(&qword_1005CEFD0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v43 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v43 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v43 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v29((char *)&v43 - v27, 1, 1, v6);
  sub_100012CE8(a1, (uint64_t)v49, &qword_1005CF190);
  v46 = v14;
  if (v50)
  {
    v30 = swift_dynamicCast(v26, v49, (char *)&type metadata for Any + 8, v6, 6);
    v29(v26, v30 ^ 1u, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v26, 1, v6) != 1)
    {
      sub_100012DDC((uint64_t)v28, &qword_1005CEFD0);
      v31 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v31(v16, v26, v6);
      v31(v28, v16, v6);
      v29(v28, 0, 1, v6);
LABEL_9:
      v33 = v46;
      goto LABEL_10;
    }
  }
  else
  {
    sub_100012DDC((uint64_t)v49, &qword_1005CF190);
    v29(v26, 1, 1, v6);
  }
  sub_100012DDC((uint64_t)v26, &qword_1005CEFD0);
  sub_100012CE8(a1, (uint64_t)v49, &qword_1005CF190);
  if (!v50)
  {
    sub_100012DDC((uint64_t)v49, &qword_1005CF190);
    goto LABEL_9;
  }
  v32 = swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  v33 = v46;
  if ((v32 & 1) != 0)
  {
    v34 = v48;
    URL.init(string:)(v47, v48);
    swift_bridgeObjectRelease(v34);
    sub_100012DDC((uint64_t)v28, &qword_1005CEFD0);
    sub_100157FAC((uint64_t)v23, (uint64_t)v28);
  }
LABEL_10:
  sub_100012CE8((uint64_t)v28, (uint64_t)v20, &qword_1005CEFD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v20, 1, v6) == 1)
  {
    sub_100012DDC((uint64_t)v28, &qword_1005CEFD0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v20, v6);
    v35 = (void *)objc_opt_self(ICAppURLUtilities);
    URL._bridgeToObjectiveC()(v36);
    v38 = v37;
    LODWORD(v35) = objc_msgSend(v35, "isShowNoteURL:", v37);

    if ((_DWORD)v35)
    {
      v39 = v44;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v44, v33, v6);
      v40 = v43;
      sub_100303608(v43, v39);
      v41 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v41(v40, v6);
      v41((uint64_t)v33, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v6);
    }
    v20 = v28;
  }
  return sub_100012DDC((uint64_t)v20, &qword_1005CEFD0);
}

uint64_t sub_1002BA07C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1005D763C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100130768;
  return GetLinkedNotesIntent.perform()(a1, v5, v4);
}

uint64_t sub_1002BA0E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s11MobileNotes09GetLinkedB6IntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11MobileNotes09GetLinkedB6IntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  _QWORD v49[6];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v46 = *(_QWORD *)(v0 - 8);
  v47 = v0;
  __chkstk_darwin(v0);
  v45 = (char *)v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v44 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v43 = (char *)v41 - v5;
  v6 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  __chkstk_darwin(v6);
  v42 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v8);
  v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[1] = sub_100012E18((uint64_t *)&unk_1005CEE90);
  v25 = String.LocalizationValue.init(stringLiteral:)(1702129486, 0xE400000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for note to get links from", 42, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100477FF0);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for note", 30, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for NoteEntity(0);
  v30 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v42, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v43;
  v32(v43, 1, 1, v31);
  v34 = v44;
  v32(v44, 1, 1, v31);
  v35 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, enum case for InputConnectionBehavior.default(_:), v47);
  v36 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v37 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v24, v10, v30, v33, v34, v35, v36);
  sub_100012E18(&qword_1005CEE50);
  v48[0] = 0xD000000000000021;
  v48[1] = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v49, v48, &type metadata for String, &protocol witness table for String);
  v38 = type metadata accessor for AppDependencyManager(0);
  v39 = static AppDependencyManager.shared.getter(v38);
  AppDependency.__allocating_init(key:manager:)(v49, v39);
  return v37;
}

uint64_t sub_1002BA568@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002BA590()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002BA5BC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1002B9A84(a1, a2);
}

unint64_t sub_1002BA5D8()
{
  unint64_t result;

  result = qword_1005D7640;
  if (!qword_1005D7640)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GetLinkedNotesIntent, &type metadata for GetLinkedNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7640);
  }
  return result;
}

unint64_t sub_1002BA620()
{
  unint64_t result;

  result = qword_1005D7648;
  if (!qword_1005D7648)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GetLinkedNotesIntent, &type metadata for GetLinkedNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7648);
  }
  return result;
}

uint64_t sub_1002BA664(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of GetLinkedNotesIntent.perform()>>, 1)+ 8);
}

uint64_t sub_1002BA688(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static GetLinkedNotesIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for GetLinkedNotesIntent()
{
  return &type metadata for GetLinkedNotesIntent;
}

uint64_t sub_1002BA6A8()
{
  return sub_100016638(&qword_1005D7658, &qword_1005D7660, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002BA6D4()
{
  return sub_100016638(&qword_1005D0040, &qword_1005D0048, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

void sub_1002BA700(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  __n128 v72;
  int64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v77;
  int64_t v78;
  void *v79;
  NSURL *v80;
  void *v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  char *v96;
  _QWORD v97[2];
  char *v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  id v105;
  _QWORD *v106;
  char *v107;
  int64_t v108;
  int64_t v109;
  id v110;
  unint64_t v111;
  _QWORD aBlock[5];
  uint64_t v113;
  _QWORD v114[7];
  uint64_t v115;

  v2 = sub_100012E18(&qword_1005CEFD0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)v97 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v102 = (char *)v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v97 - v13;
  __chkstk_darwin(v12);
  v101 = (char *)v97 - v15;
  v16 = objc_msgSend(a1, "managedObjectContext");
  v110 = v16;
  if (!v16)
    goto LABEL_5;
  v103 = v7;
  v115 = (uint64_t)&_swiftEmptySetSingleton;
  v17 = objc_msgSend(a1, "textStorage");
  if (v17)
  {
    v18 = v17;
    v111 = (unint64_t)NSLinkAttributeName;
    v19 = objc_msgSend(v17, "ic_range");
    v109 = v20;
    v21 = swift_allocObject(&unk_100565438, 24, 7);
    *(_QWORD *)(v21 + 16) = &v115;
    v22 = swift_allocObject(&unk_100565460, 32, 7);
    v99 = sub_1002BB264;
    *(_QWORD *)(v22 + 16) = sub_1002BB264;
    *(_QWORD *)(v22 + 24) = v21;
    v100 = v21;
    aBlock[4] = sub_100147B3C;
    v113 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003DA3F0;
    aBlock[3] = &unk_100565478;
    v23 = _Block_copy(aBlock);
    v24 = v113;
    swift_retain(v22);
    swift_release(v24);
    objc_msgSend(v18, "enumerateAttribute:inRange:options:usingBlock:", v111, v19, v109, 0, v23);

    _Block_release(v23);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v22, "", 111, 66, 89, 1);
    v16 = (id)swift_release(v22);
    if ((v18 & 1) != 0)
    {
      __break(1u);
LABEL_5:
      type metadata accessor for ICError((uint64_t)v16);
      v26 = v25;
      v115 = 225;
      v27 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
      v28 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
      v29 = _BridgedStoredNSError.init(_:userInfo:)(aBlock, &v115, v27, v26, v28);
      swift_willThrow(v29);
      return;
    }
  }
  else
  {
    v99 = 0;
    v100 = 0;
  }
  v30 = objc_msgSend(a1, "inlineAttachments");
  v107 = v14;
  if (!v30)
    goto LABEL_53;
  v31 = v30;
  v32 = sub_1000163BC(0, &qword_1005CFAD0, ICInlineAttachment_ptr);
  v33 = sub_1002BB1FC();
  v34 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v31, v32, v33);

  v105 = (id)v32;
  if ((v34 & 0xC000000000000001) != 0)
  {
    if (v34 < 0)
      v36 = v34;
    else
      v36 = v34 & 0xFFFFFFFFFFFFFF8;
    v37 = __CocoaSet.makeIterator()(v36);
    v35 = Set.Iterator.init(_cocoa:)(v37, v32, v33);
    v38 = v114[1];
    v109 = v114[2];
    v39 = v114[3];
    v40 = v114[4];
    v41 = v114[5];
  }
  else
  {
    v40 = 0;
    v42 = -1 << *(_BYTE *)(v34 + 32);
    v43 = *(_QWORD *)(v34 + 56);
    v109 = v34 + 56;
    v44 = ~v42;
    v45 = -v42;
    if (v45 < 64)
      v46 = ~(-1 << v45);
    else
      v46 = -1;
    v41 = v46 & v43;
    v39 = v44;
    v38 = v34;
  }
  v106 = (_QWORD *)(v38 & 0x7FFFFFFFFFFFFFFFLL);
  v97[1] = v39;
  v108 = (unint64_t)(v39 + 64) >> 6;
  v104 = (char *)&type metadata for Swift.AnyObject + 8;
  v111 = v38;
  v98 = v5;
  if ((v38 & 0x8000000000000000) == 0)
    goto LABEL_21;
LABEL_18:
  v47 = __CocoaSet.Iterator.next()(v35);
  if (!v47)
  {
    v38 = v111;
LABEL_52:
    sub_1001452E0(v38);
    v14 = v107;
LABEL_53:
    v68 = *(_QWORD *)(v115 + 56);
    v108 = v115 + 56;
    v69 = 1 << *(_BYTE *)(v115 + 32);
    v70 = -1;
    if (v69 < 64)
      v70 = ~(-1 << v69);
    v71 = v70 & v68;
    v109 = (unint64_t)(v69 + 63) >> 6;
    v111 = v115;
    v72 = swift_bridgeObjectRetain(v115);
    v73 = 0;
    v106 = _swiftEmptyArrayStorage;
    while (1)
    {
      do
      {
        if (v71)
        {
          v74 = __clz(__rbit64(v71));
          v71 &= v71 - 1;
          v75 = v74 | (v73 << 6);
        }
        else
        {
          if (__OFADD__(v73++, 1))
          {
            __break(1u);
            goto LABEL_96;
          }
          if (v73 >= v109)
            goto LABEL_93;
          v77 = *(_QWORD *)(v108 + 8 * v73);
          if (!v77)
          {
            v78 = v73 + 1;
            if (v73 + 1 >= v109)
              goto LABEL_93;
            v77 = *(_QWORD *)(v108 + 8 * v78);
            if (!v77)
            {
              v78 = v73 + 2;
              if (v73 + 2 >= v109)
                goto LABEL_93;
              v77 = *(_QWORD *)(v108 + 8 * v78);
              if (!v77)
              {
                v78 = v73 + 3;
                if (v73 + 3 >= v109)
                {
LABEL_93:
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(v5, 1, 1, v8, v72);

                  swift_release(v111);
                  goto LABEL_94;
                }
                v77 = *(_QWORD *)(v108 + 8 * v78);
                if (!v77)
                {
                  while (1)
                  {
                    v73 = v78 + 1;
                    if (__OFADD__(v78, 1))
                      goto LABEL_97;
                    if (v73 >= v109)
                      goto LABEL_93;
                    v77 = *(_QWORD *)(v108 + 8 * v73);
                    ++v78;
                    if (v77)
                      goto LABEL_68;
                  }
                }
              }
            }
            v73 = v78;
          }
LABEL_68:
          v71 = (v77 - 1) & v77;
          v75 = __clz(__rbit64(v77)) + (v73 << 6);
        }
        (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v5, *(_QWORD *)(v111 + 48) + *(_QWORD *)(v9 + 72) * v75, v8, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
        {

          swift_release(v111);
LABEL_94:
          swift_bridgeObjectRelease(v115);
          sub_100012C50((uint64_t)v99, v100);
          return;
        }
        v79 = (void *)objc_opt_self(ICAppURLUtilities);
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v5, v8);
        URL._bridgeToObjectiveC()(v80);
        v82 = v81;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        v83 = objc_msgSend(v79, "predicateForNotesMentionedInURL:", v82);

      }
      while (!v83);
      v84 = (void *)objc_opt_self(ICNote);
      v85 = objc_msgSend(v84, "notesMatchingPredicate:context:", v83, v110);
      v86 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
      v87 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v85, v86);

      if ((unint64_t)v87 >> 62)
      {
        if (v87 < 0)
          v88 = v87;
        else
          v88 = v87 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v87);
        v89 = _CocoaArrayWrapper.endIndex.getter(v88);
        swift_bridgeObjectRelease(v87);
        if (v89)
          goto LABEL_82;
LABEL_73:

        swift_bridgeObjectRelease(v87);
      }
      else
      {
        if (!*(_QWORD *)((v87 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_73;
LABEL_82:
        if ((v87 & 0xC000000000000001) != 0)
        {
          v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v87);
        }
        else
        {
          if (!*(_QWORD *)((v87 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_98;
          v90 = *(id *)(v87 + 32);
        }
        v91 = v90;
        swift_bridgeObjectRelease(v87);
        v105 = objc_msgSend(v91, "objectID");
        v104 = (char *)v110;
        if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) != 0)
          v92 = v106;
        else
          v92 = sub_10016B4F0(0, v106[2] + 1, 1, v106);
        v94 = v92[2];
        v93 = v92[3];
        if (v94 >= v93 >> 1)
          v92 = sub_10016B4F0((_QWORD *)(v93 > 1), v94 + 1, 1, v92);
        v92[2] = v94 + 1;
        v106 = v92;
        v95 = &v92[2 * v94];
        v96 = v104;
        v95[4] = v105;
        v95[5] = v96;

        v14 = v107;
      }
    }
  }
  v48 = v47;
  v114[0] = v47;
  swift_unknownObjectRetain(v47);
  swift_dynamicCast(aBlock, v114, v104, v105, 7);
  v49 = (id)aBlock[0];
  swift_unknownObjectRelease(v48, v50);
  v51 = v40;
  v52 = v41;
  v38 = v111;
  if (!v49)
    goto LABEL_52;
  while (1)
  {
    if (!objc_msgSend(v49, "isLinkAttachment"))
    {

      v40 = v51;
      v41 = v52;
      if (v38 < 0)
        goto LABEL_18;
      goto LABEL_21;
    }
    v57 = objc_msgSend(v49, "tokenContentIdentifier");
    if (v57)
    {
      v58 = v57;
      v59 = (id)NotesAppURLForNoteIdentifierOrTokenContentIdentifier();

      if (v59)
      {
        v60 = (uint64_t)v107;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v59);

        v61 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
        v62 = (uint64_t)v103;
        v61(v103, v60, v8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v62, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v62, 1, v8) != 1)
        {
          v63 = v101;
          v61(v101, v62, v8);
          v64 = v102;
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v102, v63, v8);
          v65 = (uint64_t)v107;
          sub_100303608((uint64_t)v107, v64);

          v66 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
          v66(v65, v8);
          v67 = v63;
          v5 = v98;
          v35 = ((uint64_t (*)(char *, uint64_t))v66)(v67, v8);
          goto LABEL_48;
        }
      }
      else
      {
        v62 = (uint64_t)v103;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v103, 1, 1, v8);
      }

      v35 = sub_100012DDC(v62, &qword_1005CEFD0);
    }
    else
    {

    }
LABEL_48:
    v40 = v51;
    v41 = v52;
    v38 = v111;
    if ((v111 & 0x8000000000000000) != 0)
      goto LABEL_18;
LABEL_21:
    if (!v41)
      break;
    v52 = (v41 - 1) & v41;
    v53 = __clz(__rbit64(v41)) | (v40 << 6);
    v51 = v40;
LABEL_37:
    v49 = *(id *)(*(_QWORD *)(v38 + 48) + 8 * v53);
    if (!v49)
      goto LABEL_52;
  }
  v54 = v40 + 1;
  if (!__OFADD__(v40, 1))
  {
    if (v54 >= v108)
      goto LABEL_52;
    v55 = *(_QWORD *)(v109 + 8 * v54);
    v51 = v40 + 1;
    if (!v55)
    {
      v51 = v40 + 2;
      if (v40 + 2 >= v108)
        goto LABEL_52;
      v55 = *(_QWORD *)(v109 + 8 * v51);
      if (!v55)
      {
        v51 = v40 + 3;
        if (v40 + 3 >= v108)
          goto LABEL_52;
        v55 = *(_QWORD *)(v109 + 8 * v51);
        if (!v55)
        {
          v51 = v40 + 4;
          if (v40 + 4 >= v108)
            goto LABEL_52;
          v55 = *(_QWORD *)(v109 + 8 * v51);
          if (!v55)
          {
            v56 = v40 + 5;
            do
            {
              if (v108 == v56)
                goto LABEL_52;
              v55 = *(_QWORD *)(v109 + 8 * v56++);
            }
            while (!v55);
            v51 = v56 - 1;
          }
        }
      }
    }
    v52 = (v55 - 1) & v55;
    v53 = __clz(__rbit64(v55)) + (v51 << 6);
    goto LABEL_37;
  }
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
}

unint64_t sub_1002BB1FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D4C18;
  if (!qword_1005D4C18)
  {
    v1 = sub_1000163BC(255, &qword_1005CFAD0, ICInlineAttachment_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D4C18);
  }
  return result;
}

uint64_t sub_1002BB254()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BB264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002B9C6C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1002BB26C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BB27C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  char v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  Class v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  int v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  double v78;
  double v79;
  id v80;
  double v81;
  double v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  double v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  Class isa;
  void *v114;
  id v115;
  id v116;
  double v117;
  id v118;
  uint64_t v119;
  id v121;
  id v122;
  char *v123;
  void (*v124)(char *, uint64_t);
  id v125;
  Class v126;
  uint64_t v127;
  id v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132[3];

  v1 = v0;
  v2 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v2);
  v4 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v127 - v10;
  v12 = v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_prefersPopover];
  v13 = sub_1002BC394();
  v14 = v13;
  v131 = v9;
  if (v12 != 1)
  {
    objc_msgSend(v13, "setPreferredDatePickerStyle:", 3);

    v19 = sub_1002BC51C();
    objc_msgSend(v19, "setHidden:", 1);

    v20 = sub_1002BC394();
    v21 = objc_msgSend(v20, "superview");

    v22 = objc_msgSend(v1, "contentView");
    v23 = v22;
    v130 = v6;
    if (v21)
    {
      if (v22)
      {
        sub_1000163BC(0, (unint64_t *)&qword_1005D8340, UIView_ptr);
        v24 = v21;
        v25 = static NSObject.== infix(_:_:)(v24);

        if ((v25 & 1) != 0)
        {
LABEL_31:
          v115 = objc_msgSend(v1, "separatorLayoutGuide");
          v73 = objc_msgSend(v115, "leadingAnchor");

          v116 = objc_msgSend(v1, "contentView");
          v75 = objc_msgSend(v116, "leadingAnchor");

          objc_msgSend(v1, "directionalLayoutMargins");
          v76 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v75, v117 + 44.0);
          v6 = v130;
          goto LABEL_32;
        }
LABEL_25:
        v77 = sub_1002BC394();
        objc_msgSend(v77, "_appliedInsetsToEdgeOfContent");
        v79 = v78;

        v80 = sub_1002BC394();
        objc_msgSend(v80, "_appliedInsetsToEdgeOfContent");
        v82 = v81;

        v83 = objc_msgSend(v1, "contentView");
        v84 = sub_1002BC394();
        objc_msgSend(v83, "addSubview:", v84);

        v85 = sub_100012E18(&qword_1005CF6F0);
        v86 = swift_allocObject(v85, 64, 7);
        *(_OWORD *)(v86 + 16) = xmmword_100451BE0;
        v87 = sub_1002BC394();
        v88 = objc_msgSend(v87, "topAnchor");

        v89 = objc_msgSend(v1, "contentView");
        v90 = objc_msgSend(v89, "topAnchor");

        v91 = objc_msgSend(v88, "constraintEqualToAnchor:", v90);
        *(_QWORD *)(v86 + 32) = v91;
        v92 = sub_1002BC394();
        v93 = objc_msgSend(v92, "bottomAnchor");

        v94 = objc_msgSend(v1, "contentView");
        v95 = objc_msgSend(v94, "bottomAnchor");

        v96 = objc_msgSend(v93, "constraintEqualToAnchor:", v95);
        *(_QWORD *)(v86 + 40) = v96;
        v97 = sub_1002BC394();
        v98 = objc_msgSend(v97, "leadingAnchor");

        v99 = objc_msgSend(v1, "contentView");
        v100 = objc_msgSend(v99, "leadingAnchor");

        if (objc_msgSend(v1, "ic_isRTL"))
          v101 = v82;
        else
          v101 = v79;
        v102 = objc_msgSend(v98, "constraintEqualToAnchor:constant:", v100, v101);

        *(_QWORD *)(v86 + 48) = v102;
        v103 = sub_1002BC394();
        v104 = objc_msgSend(v103, "trailingAnchor");

        v105 = objc_msgSend(v1, "contentView");
        v106 = objc_msgSend(v105, "trailingAnchor");

        if (!objc_msgSend(v1, "ic_isRTL"))
          v79 = v82;
        v107 = v5;
        v108 = v11;
        v109 = objc_opt_self(NSLayoutConstraint);
        v110 = objc_msgSend(v104, "constraintEqualToAnchor:constant:", v106, -v79);

        *(_QWORD *)(v86 + 56) = v110;
        v132[0] = v86;
        specialized Array._endMutation()(v111);
        v112 = v132[0];
        sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v112);
        v114 = (void *)v109;
        v11 = v108;
        v5 = v107;
        objc_msgSend(v114, "activateConstraints:", isa);

        goto LABEL_31;
      }
      v23 = v21;
    }
    else if (!v22)
    {
      goto LABEL_31;
    }

    goto LABEL_25;
  }
  objc_msgSend(v13, "setPreferredDatePickerStyle:", 2);

  v15 = sub_1002BC51C();
  objc_msgSend(v15, "setHidden:", 0);

  v16 = sub_1002BC51C();
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText + 8];
  if (v17)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText
                                          + 8]);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v16, "setText:", v18);

  v26 = sub_1002BC484();
  v27 = objc_msgSend(v26, "superview");

  if (!v27)
  {
    v129 = v11;
    v130 = v6;
    v28 = objc_msgSend(v1, "contentView");
    v29 = sub_1002BC484();
    objc_msgSend(v28, "addSubview:", v29);

    v30 = sub_1002BC484();
    v31 = objc_msgSend(v30, "leadingAnchor");

    v32 = objc_msgSend(v1, "contentView");
    v33 = objc_msgSend(v32, "layoutMarginsGuide");

    v34 = objc_msgSend(v33, "leadingAnchor");
    v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);

    v36 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_inlineStackViewLeadingAnchor;
    v37 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_inlineStackViewLeadingAnchor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_inlineStackViewLeadingAnchor] = v35;

    v38 = *(void **)&v1[v36];
    if (v38)
      objc_msgSend(v38, "setActive:", 1);
    v128 = (id)objc_opt_self(NSLayoutConstraint);
    v39 = sub_100012E18(&qword_1005CF6F0);
    v40 = swift_allocObject(v39, 56, 7);
    *(_OWORD *)(v40 + 16) = xmmword_100454060;
    v41 = sub_1002BC484();
    v42 = objc_msgSend(v41, "topAnchor");

    v43 = objc_msgSend(v1, "contentView");
    v44 = objc_msgSend(v43, "layoutMarginsGuide");

    v45 = objc_msgSend(v44, "topAnchor");
    v46 = objc_msgSend(v42, "constraintEqualToAnchor:", v45);

    *(_QWORD *)(v40 + 32) = v46;
    v47 = sub_1002BC484();
    v48 = objc_msgSend(v47, "trailingAnchor");

    v49 = objc_msgSend(v1, "contentView");
    v50 = objc_msgSend(v49, "layoutMarginsGuide");

    v51 = objc_msgSend(v50, "trailingAnchor");
    v52 = objc_msgSend(v48, "constraintEqualToAnchor:", v51);

    *(_QWORD *)(v40 + 40) = v52;
    v53 = sub_1002BC484();
    v54 = objc_msgSend(v53, "bottomAnchor");

    v55 = objc_msgSend(v1, "contentView");
    v56 = objc_msgSend(v55, "layoutMarginsGuide");

    v57 = objc_msgSend(v56, "bottomAnchor");
    v58 = objc_msgSend(v54, "constraintEqualToAnchor:", v57);

    *(_QWORD *)(v40 + 48) = v58;
    v132[0] = v40;
    specialized Array._endMutation()(v59);
    v60 = v132[0];
    sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
    v61 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v60);
    objc_msgSend(v128, "activateConstraints:", v61);

    v11 = v129;
    v6 = v130;
  }
  v62 = sub_1002BC484();
  v63 = sub_1002BC51C();
  objc_msgSend(v62, "addArrangedSubview:", v63);

  v64 = sub_1002BC484();
  v65 = sub_1002BC394();
  objc_msgSend(v64, "addArrangedSubview:", v65);

  v67 = ICAccessibilityAccessibilityLargerTextSizesEnabled(v66);
  v68 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_inlineStackViewLeadingAnchor];
  if (v67)
  {
    if (v68)
      objc_msgSend(v68, "setConstant:", 0.0);
    v69 = sub_1002BC484();
    objc_msgSend(v69, "setAxis:", 1);

    v70 = sub_1002BC484();
    objc_msgSend(v70, "setAlignment:", 1);
  }
  else
  {
    if (v68)
      objc_msgSend(v68, "setConstant:", 44.0);
    v71 = sub_1002BC484();
    objc_msgSend(v71, "setAxis:", 0);

    v70 = sub_1002BC484();
    objc_msgSend(v70, "setAlignment:", 3);
  }

  v72 = objc_msgSend(v1, "separatorLayoutGuide");
  v73 = objc_msgSend(v72, "leadingAnchor");

  v74 = sub_1002BC484();
  v75 = objc_msgSend(v74, "leadingAnchor");

  v76 = objc_msgSend(v73, "constraintEqualToAnchor:", v75);
LABEL_32:
  v118 = v76;

  objc_msgSend(v118, "setActive:", 1);
  v119 = (uint64_t)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date], v132, 0, 0);
  sub_1001CE8D4(v119, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1002BC9C8((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  v121 = sub_1002BC394();
  v122 = objc_msgSend(v121, "date");

  v123 = v131;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v122);

  LOBYTE(v121) = Date.isSameDay(as:)(v11);
  v124 = *(void (**)(char *, uint64_t))(v6 + 8);
  v124(v123, v5);
  if ((v121 & 1) == 0)
  {
    v125 = sub_1002BC394();
    v126 = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v125, "setDate:animated:", v126, 0);

  }
  return ((uint64_t (*)(char *, uint64_t))v124)(v11, v5);
}

void sub_1002BC010()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellDatePicker(0);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = sub_1002BC484();
  objc_msgSend(v1, "removeFromSuperview");

  v2 = sub_1002BC394();
  objc_msgSend(v2, "removeFromSuperview");

  v3 = objc_msgSend(objc_allocWithZone((Class)UIDatePicker), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "_setSelectionBarIgnoresInset:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setPreferredDatePickerStyle:", 3);
  objc_msgSend(v3, "setDatePickerMode:", 1);
  objc_msgSend(v3, "addTarget:action:forControlEvents:", v0, "dateSelectionChanged:", 4096);
  v4 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker] = v3;

}

uint64_t sub_1002BC160(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  uint64_t v14;
  void (*v16)(_BYTE *);
  uint64_t v17;
  _BYTE v19[24];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v8 = __chkstk_darwin(v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = &v19[-v11 - 8];
  v13 = objc_msgSend(a1, "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v13);

  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date], v19, 33, 0);
  sub_1001CE91C((uint64_t)v12, v14);
  objc_msgSend(v1, "setNeedsUpdateConfiguration", swift_endAccess(v19).n128_f64[0]);
  sub_1002BC9C8((uint64_t)v12);
  sub_1001CE8D4(v14, (uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    return sub_1002BC9C8((uint64_t)v10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v10, v3);
  v16 = *(void (**)(_BYTE *))&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_dateSelectionChanged];
  if (v16)
  {
    v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_dateSelectionChanged + 8];
    swift_retain(v17);
    v16(v6);
    sub_100012C50((uint64_t)v16, v17);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_1002BC394()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIDatePicker), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "_setSelectionBarIgnoresInset:", 1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setPreferredDatePickerStyle:", 3);
    objc_msgSend(v4, "setDatePickerMode:", 1);
    objc_msgSend(v4, "addTarget:action:forControlEvents:", v0, "dateSelectionChanged:", 4096);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1002BC484()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___compactStackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___compactStackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___compactStackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setSpacing:", 4.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1002BC51C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___inlineLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___inlineLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___inlineLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
    v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v4, "setFont:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1002BC5FC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  objc_super v14;

  v9 = &v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_dateSelectionChanged];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_prefersPopover] = 1;
  v12 = &v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText];
  *v12 = 0;
  v12[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_inlineStackViewLeadingAnchor] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___compactStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___inlineLabel] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for FolderComposerFilterCellDatePicker(0);
  return objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
}

id sub_1002BC720(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_dateSelectionChanged];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_date];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_prefersPopover] = 1;
  v6 = &v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_popoverLeadingText];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___datePicker] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker_inlineStackViewLeadingAnchor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___compactStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellDatePicker____lazy_storage___inlineLabel] = 0;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FolderComposerFilterCellDatePicker(0);
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_1002BC82C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellDatePicker(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002BC8F0()
{
  return type metadata accessor for FolderComposerFilterCellDatePicker(0);
}

uint64_t type metadata accessor for FolderComposerFilterCellDatePicker(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D76B8;
  if (!qword_1005D76B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FolderComposerFilterCellDatePicker);
  return result;
}

void sub_1002BC934(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100460B18;
  sub_100019C18(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100460B30;
    v4[3] = &unk_100460B18;
    v4[4] = &unk_100460B48;
    v4[5] = &unk_100460B48;
    v4[6] = &unk_100460B48;
    v4[7] = &unk_100460B48;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

uint64_t sub_1002BC9C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1002BCA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v8))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = sub_1002BCCC4();

      sub_1001D9188((uint64_t)v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_15;
    }
    __break(1u);
LABEL_11:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002BCB18()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "identifier");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t sub_1002BCB7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1002BCBB8(uint64_t a1, uint64_t a2)
{
  return sub_1002BD094(a1, a2, (SEL *)&selRef_localizedName);
}

uint64_t sub_1002BCBC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BCB7C(a1);
}

uint64_t sub_1002BCBD8()
{
  return 0;
}

uint64_t sub_1002BCBE4(uint64_t *a1)
{
  void **v1;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD v8[4];
  _OWORD v9[4];

  v3 = *v1;
  objc_msgSend(v3, "persistPendingChanges");
  v4 = v3;
  sub_1002BDE84(a1);
  sub_1001FFB24(v4, a1, (uint64_t)v9);
  if (qword_1005CECD0 != -1)
    swift_once(&qword_1005CECD0, sub_100334524);
  v8[0] = v9[0];
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  v5 = sub_1002001FC();
  v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v8, &type metadata for ICAccountArchiveModel, v5);
  sub_10021FCC0(v9);
  return v6;
}

void *sub_1002BCCC4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *result;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v1 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = _s3TagVMa(0);
  v4 = *(_QWORD *)(v46 - 8);
  v5 = __chkstk_darwin(v46);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v41 - v8;
  v10 = objc_msgSend(v0, "account");
  if (!v10)
    return &_swiftEmptySetSingleton;
  v11 = v10;
  v12 = objc_msgSend(v0, "visibleInlineAttachments");
  v13 = sub_1000163BC(0, &qword_1005CFAD0, ICInlineAttachment_ptr);
  v14 = sub_1002BB1FC();
  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

  v16 = v11;
  sub_1002BDF40(v15, v16);
  v18 = v17;
  swift_bridgeObjectRelease(v15);

  if (!((unint64_t)v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_4;
LABEL_25:
    swift_bridgeObjectRelease(v18);
    v36 = _swiftEmptyArrayStorage;
LABEL_26:
    v39 = sub_10020C3C4((uint64_t)v36);

    swift_bridgeObjectRelease(v36);
    return (void *)v39;
  }
  if (v18 < 0)
    v40 = v18;
  else
    v40 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v19 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease(v18);
  if (!v19)
    goto LABEL_25;
LABEL_4:
  v47 = _swiftEmptyArrayStorage;
  result = (void *)sub_1001372C8(0, v19 & ~(v19 >> 63), 0);
  if ((v19 & 0x8000000000000000) == 0)
  {
    v21 = 0;
    v42 = v16;
    v43 = v18 & 0xC000000000000001;
    v44 = v19;
    v45 = v18;
    do
    {
      if (v43)
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v18);
      else
        v22 = *(id *)(v18 + 8 * v21 + 32);
      v23 = v22;
      v24 = type metadata accessor for Date(0);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
      v26 = 1;
      v25(v7, 1, 1, v24);
      v27 = objc_msgSend(v23, "creationDate");
      if (v27)
      {
        v28 = v27;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

        v26 = 0;
      }
      v25(v3, v26, 1, v24);
      sub_1001CE964((uint64_t)v3, (uint64_t)v7);
      v29 = objc_msgSend(v23, "displayText");
      if (v29)
      {
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;

      }
      else
      {

        v31 = 0;
        v33 = 0xE000000000000000;
      }
      v34 = v44;
      v35 = (uint64_t *)&v7[*(int *)(v46 + 20)];
      *v35 = v31;
      v35[1] = v33;
      sub_10021FC7C((uint64_t)v7, (uint64_t)v9);
      v36 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
      {
        sub_1001372C8(0, v36[2] + 1, 1);
        v36 = v47;
      }
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
      {
        sub_1001372C8(v37 > 1, v38 + 1, 1);
        v36 = v47;
      }
      ++v21;
      v36[2] = v38 + 1;
      sub_10021FC7C((uint64_t)v9, (uint64_t)v36+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v38);
      v18 = v45;
    }
    while (v34 != v21);
    swift_bridgeObjectRelease(v45);
    v16 = v42;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002BD088(uint64_t a1, uint64_t a2)
{
  return sub_1002BD094(a1, a2, (SEL *)&selRef_title);
}

uint64_t sub_1002BD094(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*v3, *a3);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v5;
}

uint64_t sub_1002BD0E4()
{
  id *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = objc_msgSend(*v0, "visibleNotesInFolder");
  v2 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v4 = sub_1002BCA08(v3);
  swift_bridgeObjectRelease(v3);
  v5 = sub_10020C3C4((uint64_t)v4);
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1002BD184(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002BD270(a1, a2, a3, type metadata accessor for ICFolderArchiveModel, (void (*)(id, uint64_t *))sub_10033B604, &qword_1005D76D8, (uint64_t)&unk_100463AC4);
}

uint64_t sub_1002BD1B8()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, "title");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void *sub_1002BD21C()
{
  return sub_1002BCCC4();
}

uint64_t sub_1002BD23C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002BD270(a1, a2, a3, type metadata accessor for ICNoteArchiveModel, (void (*)(id, uint64_t *))sub_1003EA248, &qword_1005D76D0, (uint64_t)&unk_100468674);
}

uint64_t sub_1002BD270(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(id, uint64_t *), unint64_t *a6, uint64_t a7)
{
  void **v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v13 = a4(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v21 - v14;
  v16 = *v7;
  objc_msgSend(v16, "persistPendingChanges");
  v17 = v16;
  sub_1002BDE84(a1);
  a5(v17, a1);
  if (qword_1005CECD0 != -1)
    swift_once(&qword_1005CECD0, sub_100334524);
  v18 = sub_100019C6C(a6, a4, a7);
  v19 = dispatch thunk of JSONEncoder.encode<A>(_:)(v15, v13, v18);
  sub_100145264((uint64_t)v15, a4);
  return v19;
}

uint64_t sub_1002BD3A4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, "isPasswordProtected"))
  {
    v7 = 0;
LABEL_6:
    v11 = type metadata accessor for URL(v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  v7 = objc_msgSend(v2, "media");
  if (!v7)
    goto LABEL_6;
  v8 = v7;
  v9 = objc_msgSend(v7, "mediaURL");

  if (v9)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  else
  {
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  return sub_10014BD1C((uint64_t)v6, a1, &qword_1005CEFD0);
}

id sub_1002BD4FC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, "media");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "cryptoStrategy");

  if (v3)
  {
    v4 = objc_msgSend(v3, "decryptedData");
    swift_unknownObjectRelease(v3, v5);
    if (v4)
    {
      v3 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);

      return v3;
    }
    return 0;
  }
  return v3;
}

void *sub_1002BD5AC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void (*v21)(uint64_t, char *, uint64_t);
  id v22;
  void *v23;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - v7;
  v9 = objc_msgSend(v1, "attachmentModel");
  v10 = objc_opt_self(ICAttachmentPaperBundleModel);
  v11 = swift_dynamicCastObjCClass(v9, v10);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = sub_100012E18(&qword_1005D0EC8);
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(unsigned __int8 *)(v3 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject(v13, v16 + 2 * v14, v15 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_100454E90;
    v18 = v17 + v16;
    v19 = v9;
    v20 = objc_msgSend(v12, "paperBundleDatabaseSubdirectoryURL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

    v21 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
    v21(v18, v8, v2);
    v22 = objc_msgSend(v12, "paperBundleAssetsSubdirectoryURL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v21(v18 + v14, v6, v2);
    v23 = sub_10012890C(v17);
    swift_setDeallocating(v17);
    swift_arrayDestroy(v18, 2, v2);
    swift_deallocClassInstance(v17, 32, 7);

  }
  else
  {

    return &_swiftEmptySetSingleton;
  }
  return v23;
}

id sub_1002BD788()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  id v26;
  id v27;
  uint64_t v29;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005D76C8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v29 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v29 - v9;
  v11 = objc_msgSend(v1, "attachmentModel");
  v12 = objc_opt_self(ICAttachmentInlineDrawingModel);
  v13 = swift_dynamicCastObjCClass(v11, v12);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = v11;
    v16 = objc_msgSend(v14, "newDrawingFromMergeableData");
    if (v16)
    {
      v17 = v16;
      static PKDrawing._unconditionallyBridgeFromObjectiveC(_:)();

      v18 = type metadata accessor for PKDrawing(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
    }
    else
    {
      v18 = ((uint64_t (*)(void))type metadata accessor for PKDrawing)();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
    }
    sub_10014BD1C((uint64_t)v8, (uint64_t)v10, &qword_1005D76C8);
    sub_1002BDEB8((uint64_t)v10, (uint64_t)v5);
    type metadata accessor for PKDrawing(0);
    v24 = *(_QWORD *)(v18 - 8);
    isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v5, 1, v18) != 1)
    {
      isa = PKDrawing._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v18);
    }
    v26 = objc_msgSend((id)objc_opt_self(ICAttachmentInlineDrawingModel), "generateImageForAttachment:fromDrawing:fullResolution:appearanceInfo:", v1, isa, 1, 0);

    if (v26)
    {
      v27 = objc_msgSend(v26, "ic_PNGData");
      v22 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v27);

    }
    else
    {

      v22 = 0;
    }
    sub_1002BDF00((uint64_t)v10);
  }
  else
  {
    v19 = objc_opt_self(ICAttachmentSystemPaperModel);
    if (swift_dynamicCastObjCClass(v11, v19))
    {
      v20 = (void *)objc_opt_self(ICAttachmentSystemPaperModel);
      v21 = objc_msgSend((id)objc_opt_self(ICAppearanceInfo), "appearanceInfoWithType:", 0);
      v22 = objc_msgSend(v20, "generateImageForAttachment:fullResolution:appearanceInfo:", v1, 1, v21);

      if (v22)
      {
        v23 = objc_msgSend(v22, "ic_PNGData");

        v22 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
      }

    }
    else
    {

      return 0;
    }
  }
  return v22;
}

uint64_t sub_1002BDAA8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (objc_msgSend(v0, "attachmentType") != 14 && objc_msgSend(v0, "attachmentType") != 15)
    return 0;
  v1 = objc_msgSend(v0, "fallbackPDFData");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t sub_1002BDB38(uint64_t *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for ICAttachmentArchiveModel(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "persistPendingChanges");
  v6 = objc_msgSend(v1, "media");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "persistPendingChanges");

  }
  v8 = v1;
  sub_1002BDE84(a1);
  sub_1001EF4E4(v8, (uint64_t)a1, (uint64_t)v5);
  if (qword_1005CECD0 != -1)
    swift_once(&qword_1005CECD0, sub_100334524);
  v9 = sub_100019C6C(&qword_1005D42E0, type metadata accessor for ICAttachmentArchiveModel, (uint64_t)&unk_10045A824);
  v10 = dispatch thunk of JSONEncoder.encode<A>(_:)(v5, v3, v9);
  sub_100145264((uint64_t)v5, type metadata accessor for ICAttachmentArchiveModel);
  return v10;
}

uint64_t sub_1002BDC94()
{
  return sub_1002BCB18();
}

uint64_t sub_1002BDCB4()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = *v0;
  v2 = objc_msgSend(*v0, "userTitle");
  if (!v2)
  {
    v2 = objc_msgSend(v1, "title");
    if (!v2)
      return 0;
  }
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

void *sub_1002BDD40()
{
  id *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*v0, "media");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "filename");

    v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  }
  return v2;
}

uint64_t sub_1002BDDC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BD3A4(a1);
}

id sub_1002BDDE4()
{
  return sub_1002BD4FC();
}

void *sub_1002BDE04()
{
  return sub_1002BD5AC();
}

id sub_1002BDE24()
{
  return sub_1002BD788();
}

uint64_t sub_1002BDE44()
{
  return sub_1002BDAA8();
}

uint64_t sub_1002BDE64(uint64_t *a1)
{
  return sub_1002BDB38(a1);
}

uint64_t *sub_1002BDE84(uint64_t *a1)
{
  sub_1001F410C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_1002BDEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D76C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002BDF00(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18(&qword_1005D76C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1002BDF40(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  unint64_t v40;

  v2 = a1;
  v40 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_1000163BC(0, &qword_1005CFAD0, ICInlineAttachment_ptr);
    v6 = sub_1002BB1FC();
    v7 = Set.Iterator.init(_cocoa:)(v4, v5, v6);
    v2 = v39[1];
    v37 = v39[2];
    v8 = v39[3];
    v9 = v39[4];
    v10 = v39[5];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v37 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v14 = (unint64_t)(v8 + 64) >> 6;
  while (v2 < 0)
  {
    v18 = __CocoaSet.Iterator.next()(v7);
    if (!v18)
      goto LABEL_43;
    v19 = v18;
    v38 = v18;
    v20 = sub_1000163BC(0, &qword_1005CFAD0, ICInlineAttachment_ptr);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(v39, &v38, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
    v21 = (id)v39[0];
    swift_unknownObjectRelease(v19, v22);
    v17 = v9;
    v15 = v10;
    if (!v21)
      goto LABEL_43;
LABEL_31:
    if (!objc_msgSend(v21, "isHashtagAttachment")
      || (v25 = objc_msgSend(v21, "tokenContentIdentifier")) == 0)
    {

      goto LABEL_12;
    }
    v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v29 = a2;
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v31 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithStandardizedContent:onlyVisible:account:", v30, 1, v29);

    v9 = v17;
    v10 = v15;
    if (v31)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v33 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v32 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v33 >= v32 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
      v7 = specialized Array._endMutation()(v34);
LABEL_12:
      v9 = v17;
      v10 = v15;
    }
  }
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
LABEL_30:
    v21 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_43;
    goto LABEL_31;
  }
  v17 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v17 >= v14)
      goto LABEL_43;
    v23 = *(_QWORD *)(v37 + 8 * v17);
    if (!v23)
    {
      v24 = v9 + 2;
      if (v9 + 2 >= v14)
        goto LABEL_43;
      v23 = *(_QWORD *)(v37 + 8 * v24);
      if (v23)
        goto LABEL_28;
      v24 = v9 + 3;
      if (v9 + 3 >= v14)
        goto LABEL_43;
      v23 = *(_QWORD *)(v37 + 8 * v24);
      if (v23)
        goto LABEL_28;
      v24 = v9 + 4;
      if (v9 + 4 >= v14)
        goto LABEL_43;
      v23 = *(_QWORD *)(v37 + 8 * v24);
      if (v23)
      {
LABEL_28:
        v17 = v24;
      }
      else
      {
        v17 = v9 + 5;
        if (v9 + 5 >= v14)
          goto LABEL_43;
        v23 = *(_QWORD *)(v37 + 8 * v17);
        if (!v23)
        {
          v35 = v9 + 6;
          while (v14 != v35)
          {
            v23 = *(_QWORD *)(v37 + 8 * v35++);
            if (v23)
            {
              v17 = v35 - 1;
              goto LABEL_29;
            }
          }
LABEL_43:
          sub_1001452E0(v2);
          return;
        }
      }
    }
LABEL_29:
    v15 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v17 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_1002BE2F8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BF2E0(a1, a2, a3 & 1);
}

id sub_1002BE310(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id result;
  void *v8;
  uint64_t v9;
  void *ObjCClassFromMetadata;
  NSString v11;
  id v12;

  result = objc_msgSend(v3, "managedObjectContext");
  if (result)
  {
    v8 = result;
    if ((a3 & 1) == 0
      || (v9 = sub_1000163BC(0, (unint64_t *)&qword_1005D58B8, ICAccount_ptr),
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v9),
          v11 = String._bridgeToObjectiveC()(),
          v12 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v11, v8),
          v11,
          !v12))
    {
      v12 = sub_1002BEBE8(a1, a2, a3 & 1);
    }

    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002BE3FC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BEBE8(a1, a2, a3 & 1);
}

id sub_1002BE414()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)objc_opt_self(ICNote);
  v2 = objc_msgSend(v0, "defaultFolder");
  v3 = objc_msgSend(v1, "newEmptyNoteInFolder:", v2);

  return v3;
}

uint64_t sub_1002BE488()
{
  return sub_1002BEB6C();
}

id sub_1002BE49C(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  void *v4;
  void *v5;
  id result;
  void *v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  void *ObjCClassFromMetadata;
  NSString v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  NSString v29;
  id v30;

  v5 = v4;
  result = objc_msgSend(v5, "managedObjectContext");
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend(v5, "canAddSubfolder");
    if ((a3 & 1) == 0)
    {
      if (v12)
      {
        v13 = objc_msgSend((id)objc_opt_self(ICFolder), "newFolderInParentFolder:", v5);
LABEL_18:
        v27 = v13;

        return v27;
      }
      v23 = objc_msgSend(v5, "account");
      a3 = sub_1002BEBE8(a1, a2, 0);

      return a3;
    }
    if (!v12)
    {
      v24 = sub_10016E9D4();
      v25 = swift_allocError(&type metadata for ICArchiveImporter.Errors, v24, 0, 0);
      *v26 = 2;
      swift_willThrow(v25);

      return a3;
    }
    if (!objc_msgSend(v5, "canAddSubfolder"))
    {
      v13 = v5;
      goto LABEL_18;
    }
    v14 = sub_1000163BC(0, (unint64_t *)&unk_1005D90A0, ICFolder_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v14);
    v16 = String._bridgeToObjectiveC()();
    a3 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v16, v11);

    if (a3)
    {
      if ((static NSObject.== infix(_:_:)(a3) & 1) != 0)
        goto LABEL_26;
      v17 = objc_msgSend(v5, "objectID");
      v18 = v17;
      if (a4)
      {
        v19 = objc_msgSend(a4, "objectID");
        v20 = v19;
        if (v18)
        {
          if (v19)
          {
            sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
            v21 = v18;
            v22 = static NSObject.== infix(_:_:)(v21);

            if ((v22 & 1) != 0)
              goto LABEL_26;
            goto LABEL_24;
          }
        }
        else
        {
          v18 = v19;
          if (!v19)
            goto LABEL_26;
        }
      }
      else if (!v17)
      {
        goto LABEL_26;
      }

LABEL_24:
      if (objc_msgSend(a3, "isMovable"))
      {
        objc_msgSend(a3, "unmarkForDeletion");
        objc_msgSend(a3, "setParent:", v5);

        return a3;
      }
LABEL_26:
      objc_msgSend(a3, "unmarkForDeletion");

      return a3;
    }
    v28 = (void *)objc_opt_self(ICFolder);
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v28, "newFolderWithIdentifier:parentFolder:", v29, v5);

    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002BE7AC(uint64_t a1, uint64_t a2, __int16 a3, void *a4, id a5, double a6)
{
  void *v6;
  void *v7;
  id result;
  void *v15;
  unsigned int v16;
  id v17;
  uint64_t v18;
  void *ObjCClassFromMetadata;
  NSString v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char v26;
  id v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  NSString v33;

  v7 = v6;
  result = objc_msgSend(v7, "managedObjectContext");
  if (result)
  {
    v15 = result;
    v16 = objc_msgSend(v7, "canMoveAddOrDeleteContents");
    if ((a3 & 1) == 0)
    {
      if (v16)
      {
        v17 = objc_msgSend((id)objc_opt_self(ICNote), "newEmptyNoteInFolder:", v7);

        return v17;
      }
      v27 = objc_msgSend(v7, "account");
      v28 = objc_msgSend(v27, "defaultFolder");

      a5 = (id)sub_1002BE7AC(a1, a2, a3 & 0x100, a4, a5, a6);
      return a5;
    }
    if (!v16)
    {
      v29 = sub_10016E9D4();
      v30 = swift_allocError(&type metadata for ICArchiveImporter.Errors, v29, 0, 0);
      *v31 = 2;
      swift_willThrow(v30);

      return a5;
    }
    v18 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v18);
    v20 = String._bridgeToObjectiveC()();
    a5 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v20, v15);

    if (!a5)
    {
      v32 = (void *)objc_opt_self(ICNote);
      v33 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v32, "newEmptyNoteWithIdentifier:folder:", v33, v7);

      return v17;
    }
    v21 = objc_msgSend(v7, "objectID");
    v22 = v21;
    if (a4)
    {
      v23 = objc_msgSend(a4, "objectID");
      v24 = v23;
      if (v22)
      {
        if (v23)
        {
          sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
          v25 = v22;
          v26 = static NSObject.== infix(_:_:)(v25);

          if ((v26 & 1) != 0)
            goto LABEL_22;
          goto LABEL_20;
        }
      }
      else
      {
        v22 = v23;
        if (!v23)
          goto LABEL_22;
      }
    }
    else if (!v21)
    {
      goto LABEL_22;
    }

LABEL_20:
    if (objc_msgSend(a5, "isMovable"))
    {
      objc_msgSend(a5, "unmarkForDeletion");
      objc_msgSend(a5, "setFolder:", v7);
LABEL_23:

      return a5;
    }
LABEL_22:
    objc_msgSend(a5, "unmarkForDeletion");
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002BEABC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BF140(a1, a2, a3 & 1);
}

id sub_1002BEAD4(uint64_t a1, uint64_t a2, __int16 a3, void *a4)
{
  return sub_1002BE49C(a1, a2, (id)(a3 & 0x101), a4);
}

id sub_1002BEAF0(uint64_t a1, uint64_t a2, __int16 a3, void *a4, void *a5, double a6)
{
  return sub_1002BE7AC(a1, a2, a3 & 0x101, a4, a5, a6);
}

uint64_t sub_1002BEB0C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BEF64(a1, a2, a3 & 1);
}

id sub_1002BEB24(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BFB50(a1, a2, a3 & 1);
}

id sub_1002BEB3C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BF6AC(a1, a2, a3 & 1);
}

uint64_t sub_1002BEB54(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BED64(a1, a2, a3 & 1);
}

uint64_t sub_1002BEB6C()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v0 = sub_10016E9D4();
  v1 = swift_allocError(&type metadata for ICArchiveImporter.Errors, v0, 0, 0);
  *v2 = 1;
  return swift_willThrow(v1);
}

id sub_1002BEBB8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BF8D0(a1, a2, a3 & 1);
}

id sub_1002BEBD0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002BF45C(a1, a2, a3 & 1);
}

id sub_1002BEBE8(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  id result;
  void *v7;
  uint64_t v8;
  void *ObjCClassFromMetadata;
  NSString v10;
  id v11;
  void *v12;
  NSString v13;

  v4 = v3;
  result = objc_msgSend(v3, "managedObjectContext");
  if (result)
  {
    v7 = result;
    if ((a3 & 1) != 0)
    {
      v8 = sub_1000163BC(0, (unint64_t *)&unk_1005D90A0, ICFolder_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v8);
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v10, v7);

      if (v11)
      {
        if (objc_msgSend(v11, "isMovable"))
          objc_msgSend(v11, "setParent:", 0);
        else
          objc_msgSend(v11, "unmarkForDeletion");
      }
      else
      {
        v12 = (void *)objc_opt_self(ICFolder);
        v13 = String._bridgeToObjectiveC()();
        v11 = objc_msgSend(v12, "newFolderWithIdentifier:account:", v13, v4);

        v7 = v13;
      }
    }
    else
    {
      v11 = objc_msgSend((id)objc_opt_self(ICFolder), "newFolderInAccount:", v4);
    }

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BED64(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v4;
  void *v5;
  id v8;
  void *v9;
  id v10;
  NSString v11;
  NSString v12;
  NSString v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  v5 = v3;
  v8 = objc_msgSend(v5, "note");
  if (!v8 || (v9 = v8, v4 = objc_msgSend(v8, "account"), v9, !v4))
  {
    v14 = sub_10016E9D4();
    v15 = swift_allocError(&type metadata for ICArchiveImporter.Errors, v14, 0, 0);
    *v16 = 1;
    swift_willThrow(v15);
    return (uint64_t)v4;
  }
  swift_bridgeObjectRetain(a2);
  v10 = v4;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v4 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithDisplayText:account:createIfNecessary:", v11, v10, 1);

  if (v4)
  {
    if ((a3 & 1) != 0)
    {
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "setDisplayText:", v12);

      objc_msgSend(v4, "unmarkForDeletion");
      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "updateChangeCountWithReason:", v13);

    }
    else
    {

    }
    return (uint64_t)v4;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000015, 0x8000000100483830, "MobileNotes/ICImportableObject.swift", 36, 2, 37, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002BEF64(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v4;
  id v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  NSString v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;

  v7 = objc_msgSend(v3, "account");
  if (!v7)
  {
    v13 = sub_10016E9D4();
    v14 = swift_allocError(&type metadata for ICArchiveImporter.Errors, v13, 0, 0);
    *v15 = 1;
    swift_willThrow(v14);
    return (uint64_t)v4;
  }
  v8 = v7;
  swift_bridgeObjectRetain(a2);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v4 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithDisplayText:account:createIfNecessary:", v10, v9, 1);

  if (v4)
  {
    if ((a3 & 1) != 0)
    {
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "setDisplayText:", v11);

      objc_msgSend(v4, "unmarkForDeletion");
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "updateChangeCountWithReason:", v12);

    }
    else
    {

    }
    return (uint64_t)v4;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000015, 0x8000000100483830, "MobileNotes/ICImportableObject.swift", 36, 2, 37, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002BF140(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v6;
  id v7;
  NSString v8;
  id v9;
  NSString v10;
  NSString v11;
  uint64_t result;

  v6 = objc_msgSend(v3, "account");
  swift_bridgeObjectRetain(a2);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithDisplayText:account:createIfNecessary:", v8, v7, 1);

  if (v9)
  {
    if ((a3 & 1) != 0)
    {
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setDisplayText:", v10);

      objc_msgSend(v9, "unmarkForDeletion");
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "updateChangeCountWithReason:", v11);

      v7 = v11;
    }

    return (uint64_t)v9;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000015, 0x8000000100483830, "MobileNotes/ICImportableObject.swift", 36, 2, 37, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BF2E0(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v6;
  NSString v7;
  id v8;
  NSString v9;
  NSString v10;
  uint64_t result;

  swift_bridgeObjectRetain(a2);
  v6 = v3;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v8 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithDisplayText:account:createIfNecessary:", v7, v6, 1);

  if (v8)
  {
    if ((a3 & 1) != 0)
    {
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "setDisplayText:", v9);

      objc_msgSend(v8, "unmarkForDeletion");
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "updateChangeCountWithReason:", v10);

    }
    return (uint64_t)v8;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000015, 0x8000000100483830, "MobileNotes/ICImportableObject.swift", 36, 2, 37, 0);
    __break(1u);
  }
  return result;
}

id sub_1002BF45C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  void *v12;
  uint64_t v13;
  void *ObjCClassFromMetadata;
  NSString v15;
  id v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v3, "managedObjectContext");
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = result;
  result = objc_msgSend(v3, "note");
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v12 = result;
  if ((a3 & 1) != 0)
  {
    v13 = sub_1000163BC(0, &qword_1005CFAD0, ICInlineAttachment_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v13);
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v15, v11);

    if (v16)
    {
      objc_msgSend(v16, "setNote:", v12);
      objc_msgSend(v16, "setParentAttachment:", v3);
      objc_msgSend(v16, "unmarkForDeletion");
      v17 = String._bridgeToObjectiveC()();
      objc_msgSend(v16, "updateChangeCountWithReason:", v17);

      return v16;
    }
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v4, "addInlineAttachmentWithIdentifier:", v21);
  }
  else
  {
    v18 = UUID.init()(result);
    UUID.uuidString.getter(v18);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v22 = objc_msgSend(v4, "addInlineAttachmentWithIdentifier:", v21);
  }
  v23 = v22;

  return v23;
}

id sub_1002BF6AC(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  uint64_t v12;
  void *ObjCClassFromMetadata;
  NSString v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  uint64_t v23;

  v4 = v3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v3, "managedObjectContext");
  if (result)
  {
    v11 = result;
    if ((a3 & 1) != 0)
    {
      v12 = sub_1000163BC(0, &qword_1005CFAD0, ICInlineAttachment_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v12);
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v14, v11);

      if (v15)
      {
        objc_msgSend(v15, "setNote:", v3);
        objc_msgSend(v15, "setParentAttachment:", 0);
        objc_msgSend(v15, "unmarkForDeletion");
        v16 = String._bridgeToObjectiveC()();
        objc_msgSend(v15, "updateChangeCountWithReason:", v16);

        return v15;
      }
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v4, "addInlineAttachmentWithIdentifier:", v20);
    }
    else
    {
      v17 = UUID.init()(result);
      UUID.uuidString.getter(v17);
      v19 = v18;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
      v21 = objc_msgSend(v4, "addInlineAttachmentWithIdentifier:", v20);
    }
    v22 = v21;

    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002BF8D0(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  void *v12;
  uint64_t v13;
  void *ObjCClassFromMetadata;
  NSString v15;
  id v16;
  NSString v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  NSString v24;
  uint64_t v25;

  v4 = v3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v4, "managedObjectContext");
  if (result)
  {
    v11 = result;
    result = objc_msgSend(v4, "note");
    if (result)
    {
      v12 = result;
      if ((a3 & 1) != 0)
      {
        v13 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v13);
        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v15, v11);

        if (v16)
        {
          objc_msgSend(v16, "setNote:", v12);
          objc_msgSend(v16, "setParentAttachment:", v4);
          objc_msgSend(v16, "unmarkForDeletion");
          v17 = String._bridgeToObjectiveC()();
          objc_msgSend(v16, "updateChangeCountWithReason:", v17);

          return v16;
        }
        v23 = (void *)objc_opt_self(ICAttachment);
        v24 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend(v23, "newAttachmentWithIdentifier:note:", v24, v12);

      }
      else
      {
        v18 = (void *)objc_opt_self(ICAttachment);
        v19 = UUID.init()(v18);
        UUID.uuidString.getter(v19);
        v21 = v20;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v21);
        v16 = objc_msgSend(v18, "newAttachmentWithIdentifier:note:", v22, v12);

      }
      objc_msgSend(v16, "setParentAttachment:", v4);

      return v16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1002BFB50(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  uint64_t v12;
  void *ObjCClassFromMetadata;
  NSString v14;
  id v15;
  NSString v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  NSString v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v3, "managedObjectContext");
  if (result)
  {
    v11 = result;
    if ((a3 & 1) != 0)
    {
      v12 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v12);
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(ObjCClassFromMetadata, "cloudObjectWithIdentifier:context:", v14, v11);

      if (!v15)
      {
        v21 = (void *)objc_opt_self(ICAttachment);
        v22 = String._bridgeToObjectiveC()();
        v23 = objc_msgSend(v21, "newAttachmentWithIdentifier:note:", v22, v4);

        return v23;
      }
      objc_msgSend(v15, "setNote:", v3);
      objc_msgSend(v15, "setParentAttachment:", 0);
      objc_msgSend(v15, "unmarkForDeletion");
      v16 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "updateChangeCountWithReason:", v16);
    }
    else
    {
      v17 = (void *)objc_opt_self(ICAttachment);
      v18 = UUID.init()(v17);
      UUID.uuidString.getter(v18);
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      v15 = objc_msgSend(v17, "newAttachmentWithIdentifier:note:", v16, v4);
    }

    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FolderComposerFilterFooter()
{
  return objc_opt_self(_TtC11MobileNotes26FolderComposerFilterFooter);
}

uint64_t PinNotesIntent.operation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for FavoriteOperation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void *PinNotesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static PinNotesIntent.persistentIdentifier;
}

unint64_t static PinNotesIntent.persistentIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1002C00AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static PinNotesIntent.title);
  sub_10012A0B0(v10, (uint64_t)static PinNotesIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001004867C0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t PinNotesIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC10 != -1)
    swift_once(&qword_1005CEC10, sub_1002C00AC);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static PinNotesIntent.title);
}

uint64_t static PinNotesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC10 != -1)
    swift_once(&qword_1005CEC10, sub_1002C00AC);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static PinNotesIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static PinNotesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100486740);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static PinNotesIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D7710);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D7718);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2AD4();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 2, &type metadata for PinNotesIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100460CA0, v8);
  v10 = sub_100012E18(&qword_1005D7720);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x2065687420;
  v11._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_100460CC8, v12);
  v14 = sub_100012E18(&qword_1005D7728);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x7365746F6E20;
  v15._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for PinNotesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for PinNotesIntent, v6);
}

uint64_t PinNotesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5[32] = a4;
  v5[33] = a5;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  v6 = type metadata accessor for NoteEntity(0);
  v5[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[35] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[36] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[37] = swift_task_alloc(v9);
  v5[38] = swift_task_alloc(v9);
  v5[39] = swift_task_alloc(v9);
  v10 = type metadata accessor for Logger(0);
  v5[40] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[41] = v11;
  v5[42] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FavoriteOperation(0);
  v5[43] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[44] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[45] = swift_task_alloc(v14);
  v5[46] = swift_task_alloc(v14);
  return swift_task_switch(sub_1002C0784, 0, 0);
}

uint64_t sub_1002C0784()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  Swift::String v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void (*v57)(_QWORD *, uint64_t);
  Swift::String v58;
  Swift::String v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *log;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  BOOL v110;
  uint64_t (*v111)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  unint64_t v119;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 208));
  v1 = *(void **)(v0 + 208);
  v115 = objc_msgSend(v1, "modernManagedObjectContext");
  *(_QWORD *)(v0 + 376) = v115;

  v2 = swift_allocObject(&unk_1005657A0, 24, 7);
  *(_QWORD *)(v0 + 384) = v2;
  v3 = _swiftEmptyArrayStorage;
  *(_QWORD *)(v2 + 16) = _swiftEmptyArrayStorage;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 168));
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
  *(_QWORD *)(v2 + 16) = _swiftEmptyArrayStorage;
  if (!isUniquelyReferenced_nonNull_native || v5 > _swiftEmptyArrayStorage[3] >> 1)
  {
    if (_swiftEmptyArrayStorage[2] <= v5)
      v7 = v5;
    else
      v7 = _swiftEmptyArrayStorage[2];
    v3 = (_QWORD *)sub_10016B830(isUniquelyReferenced_nonNull_native, v7, 0, (unint64_t)_swiftEmptyArrayStorage);
  }
  v8 = *(_QWORD **)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v2 + 16) = v3;
  IntentParameter.wrappedValue.getter(v8);
  v11 = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 88))(v8, v9);
  v12 = v11;
  *(_DWORD *)(v0 + 520) = v11;
  v13 = enum case for FavoriteOperation.add(_:);
  *(_DWORD *)(v0 + 524) = enum case for FavoriteOperation.add(_:);
  if (v11 != v13 && v11 != enum case for FavoriteOperation.remove(_:))
  {
    v14 = *(_QWORD *)(v0 + 256);
    v15 = *(_QWORD *)(v0 + 264);
    v17 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 248);
    swift_retain(v17);
    swift_retain(v16);
    swift_retain(v14);
    swift_retain(v15);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 96));
    Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    swift_release(v17);
    swift_release(v16);
    swift_release(v14);
    swift_release(v15);
    swift_retain_n(v17, 2);
    swift_retain_n(v16, 2);
    swift_retain_n(v14, 2);
    v18 = swift_retain_n(v15, 2);
    v19 = Logger.logObject.getter(v18);
    v21 = static os_log_type_t.error.getter(v19, v20);
    v112 = v2;
    if (os_log_type_enabled(v19, v21))
    {
      v22 = *(_QWORD **)(v0 + 360);
      v99 = *(_QWORD *)(v0 + 352);
      v100 = *(_QWORD *)(v0 + 344);
      v106 = *(_QWORD *)(v0 + 320);
      v107 = *(_QWORD *)(v0 + 336);
      v104 = *(_QWORD *)(v0 + 264);
      v105 = *(_QWORD *)(v0 + 328);
      v103 = *(_QWORD *)(v0 + 256);
      v23 = *(_QWORD *)(v0 + 240);
      v102 = *(_QWORD *)(v0 + 248);
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v118 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = IntentParameter.wrappedValue.getter(v22);
      v27 = FavoriteOperation.rawValue.getter(v26);
      log = v19;
      v29 = v28;
      (*(void (**)(_QWORD *, uint64_t))(v99 + 8))(v22, v100);
      *(_QWORD *)(v0 + 176) = sub_1003A4190(v27, v29, &v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v24 + 4);
      swift_bridgeObjectRelease(v29);
      swift_release_n(v23, 2);
      swift_release_n(v102, 2);
      swift_release_n(v103, 2);
      swift_release_n(v104, 2);
      _os_log_impl((void *)&_mh_execute_header, log, v21, "Unknown pin note operation type %s — unable to change pinned status", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v107, v106);
    }
    else
    {
      v39 = *(_QWORD *)(v0 + 328);
      v38 = *(_QWORD *)(v0 + 336);
      v40 = *(_QWORD *)(v0 + 320);
      v42 = *(_QWORD *)(v0 + 256);
      v41 = *(_QWORD *)(v0 + 264);
      v43 = *(_QWORD *)(v0 + 248);
      swift_release_n(*(_QWORD *)(v0 + 240), 2);
      swift_release_n(v43, 2);
      swift_release_n(v42, 2);
      swift_release_n(v41, 2);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    v44 = *(_QWORD **)(v0 + 360);
    v108 = *(_QWORD **)(v0 + 368);
    v46 = *(_QWORD *)(v0 + 344);
    v45 = *(_QWORD *)(v0 + 352);
    type metadata accessor for ICError(0);
    v48 = v47;
    *(_QWORD *)(v0 + 160) = 224;
    v49 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v49, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
    *(_QWORD *)(inited + 40) = v51;
    v118 = 0;
    v119 = 0xE000000000000000;
    _StringGuts.grow(_:)(67);
    v52._object = (void *)0x8000000100486760;
    v52._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v52);
    v53 = IntentParameter.wrappedValue.getter(v44);
    v54 = FavoriteOperation.rawValue.getter(v53);
    v56 = v55;
    v57 = *(void (**)(_QWORD *, uint64_t))(v45 + 8);
    v57(v44, v46);
    v58._countAndFlagsBits = v54;
    v58._object = v56;
    String.append(_:)(v58);
    swift_bridgeObjectRelease(v56);
    v59._countAndFlagsBits = 0xD000000000000021;
    v59._object = (void *)0x8000000100486790;
    String.append(_:)(v59);
    v60 = v118;
    v61 = v119;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v60;
    *(_QWORD *)(inited + 56) = v61;
    v62 = sub_1001356D4(inited);
    v63 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v64 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 152), v0 + 160, v62, v48, v63);
    swift_willThrow(v64);

    v57(v108, v46);
    swift_release(v112);
    goto LABEL_18;
  }
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 184));
  v30 = *(_QWORD *)(v0 + 184);
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v113 = v2;
    v33 = *(_QWORD *)(v0 + 272);
    v32 = *(_QWORD *)(v0 + 280);
    v34 = v30 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v35 = *(_QWORD *)(v32 + 72);
    swift_bridgeObjectRetain(v30);
    while (1)
    {
      v36 = *(_QWORD *)(v0 + 312);
      sub_10014FF9C(v34, v36);
      v37 = *(_BYTE *)(v36 + *(int *)(v33 + 24));
      sub_10014FFE0(v36);
      if ((v37 & 1) == 0)
        break;
      v34 += v35;
      if (!--v31)
      {
        swift_bridgeObjectRelease_n(v30, 2);
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n(v30, 2);
    if (v12 == v13)
    {
      v71 = sub_10013F4E8();
      v72 = swift_allocError(&type metadata for AppIntentsError, v71, 0, 0);
      *v73 = 13;
      swift_willThrow(v72);
      swift_release(v113);

LABEL_18:
      v65 = *(_QWORD *)(v0 + 360);
      v66 = *(_QWORD *)(v0 + 336);
      v68 = *(_QWORD *)(v0 + 304);
      v67 = *(_QWORD *)(v0 + 312);
      v69 = *(_QWORD *)(v0 + 296);
      swift_task_dealloc(*(_QWORD *)(v0 + 368));
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  }
LABEL_22:
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 192));
  v74 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 392) = v74;
  v75 = *(_QWORD *)(v74 + 16);
  *(_QWORD *)(v0 + 400) = v75;
  if (v75)
  {
    v77 = *(_QWORD *)(v0 + 280);
    v76 = *(_QWORD *)(v0 + 288);
    LODWORD(v78) = *(_DWORD *)(v77 + 80);
    *(_DWORD *)(v0 + 528) = v78;
    v78 = v78;
    v79 = (v78 + 64) & ~v78;
    *(_QWORD *)(v0 + 408) = *(_QWORD *)(v77 + 72);
    *(_QWORD *)(v0 + 416) = 0;
    v109 = *(_QWORD *)(v0 + 384);
    v81 = *(_QWORD *)(v0 + 296);
    v80 = *(_QWORD *)(v0 + 304);
    v82 = *(_QWORD *)(v0 + 256);
    v114 = *(_QWORD *)(v0 + 264);
    v84 = *(_QWORD *)(v0 + 240);
    v83 = *(_QWORD *)(v0 + 248);
    v110 = *(_DWORD *)(v0 + 520) == *(_DWORD *)(v0 + 524);
    v85 = v79 + v76;
    v86 = v78 | 7;
    sub_10014FF9C(v74 + ((v78 + 32) & ~v78), v80);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 200));
    v116 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 424) = v116;
    sub_10014FF9C(v80, v81);
    v87 = swift_allocObject(&unk_1005657C8, v85, v86);
    *(_QWORD *)(v0 + 432) = v87;
    *(_BYTE *)(v87 + 16) = v110;
    *(_QWORD *)(v87 + 24) = v109;
    *(_QWORD *)(v87 + 32) = v84;
    *(_QWORD *)(v87 + 40) = v83;
    *(_QWORD *)(v87 + 48) = v82;
    *(_QWORD *)(v87 + 56) = v114;
    sub_100243780(v81, v87 + v79);
    v88 = unk_1005D0B54;
    v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0B50 + dword_1005D0B50);
    swift_retain(v84);
    swift_retain(v83);
    swift_retain(v82);
    swift_retain(v109);
    swift_retain(v114);
    v89 = (_QWORD *)swift_task_alloc(v88);
    *(_QWORD *)(v0 + 440) = v89;
    *v89 = v0;
    v89[1] = sub_1002C10D0;
    return v111((uint64_t)v111, v116, (uint64_t)sub_1002C26C4, v87);
  }
  else
  {
    swift_bridgeObjectRelease(v74);
    v90 = *(_QWORD *)(v0 + 384);
    swift_beginAccess(v90 + 16, v0 + 128, 0, 0);
    v91 = *(_QWORD *)(v90 + 16);
    if (*(_QWORD *)(v91 + 16))
    {
      v92 = *(void **)(v0 + 376);
      v93 = swift_allocObject(&unk_1005657F0, 24, 7);
      *(_QWORD *)(v0 + 456) = v93;
      *(_QWORD *)(v93 + 16) = v92;
      v94 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
      v95 = v92;
      v96 = (_QWORD *)swift_task_alloc(v94);
      *(_QWORD *)(v0 + 464) = v96;
      *v96 = v0;
      v96[1] = sub_1002C1448;
      return NSManagedObjectContext.perform<A>(_:)(v96, sub_1002C2750, v93, (char *)&type metadata for () + 8);
    }
    else
    {
      *(_QWORD *)(v0 + 480) = v91;
      swift_bridgeObjectRetain(v91);
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 216));
      v97 = *(_QWORD *)(v0 + 216);
      *(_QWORD *)(v0 + 488) = v97;
      v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0270 + dword_1005D0270);
      v98 = (_QWORD *)swift_task_alloc(unk_1005D0274);
      *(_QWORD *)(v0 + 496) = v98;
      *v98 = v0;
      v98[1] = sub_1002C154C;
      return v117(v91, v97, 1);
    }
  }
}

uint64_t sub_1002C10D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 440);
  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc(v3);
  v5 = (void *)v2[53];
  v4 = v2[54];
  if (v0)
  {
    swift_bridgeObjectRelease(v2[49]);
    swift_release(v4);

    v6 = sub_1002C16B8;
  }
  else
  {
    swift_release(v2[54]);

    v6 = sub_1002C1160;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002C1160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 416) + 1;
  sub_10014FFE0(*(_QWORD *)(v0 + 304));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 392));
    v3 = *(_QWORD *)(v0 + 384);
    swift_beginAccess(v3 + 16, v0 + 128, 0, 0);
    v4 = *(_QWORD *)(v3 + 16);
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = *(void **)(v0 + 376);
      v6 = swift_allocObject(&unk_1005657F0, 24, 7);
      *(_QWORD *)(v0 + 456) = v6;
      *(_QWORD *)(v6 + 16) = v5;
      v7 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
      v8 = v5;
      v9 = (_QWORD *)swift_task_alloc(v7);
      *(_QWORD *)(v0 + 464) = v9;
      *v9 = v0;
      v9[1] = sub_1002C1448;
      return NSManagedObjectContext.perform<A>(_:)(v9, sub_1002C2750, v6, (char *)&type metadata for () + 8);
    }
    else
    {
      *(_QWORD *)(v0 + 480) = v4;
      swift_bridgeObjectRetain(v4);
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 216));
      v25 = *(_QWORD *)(v0 + 216);
      *(_QWORD *)(v0 + 488) = v25;
      v32 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1005D0270 + dword_1005D0270);
      v26 = (_QWORD *)swift_task_alloc(unk_1005D0274);
      *(_QWORD *)(v0 + 496) = v26;
      *v26 = v0;
      v26[1] = sub_1002C154C;
      return v32(v4, v25, 1);
    }
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 408);
    v12 = *(_QWORD *)(v0 + 416) + 1;
    *(_QWORD *)(v0 + 416) = v12;
    v13 = *(unsigned __int8 *)(v0 + 528);
    v29 = *(_QWORD *)(v0 + 384);
    v15 = *(_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 256);
    v30 = *(_QWORD *)(v0 + 264);
    v27 = *(_DWORD *)(v0 + 520) == *(_DWORD *)(v0 + 524);
    v17 = (v13 + 64) & ~v13;
    v19 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 288) + v17;
    v21 = v13 | 7;
    sub_10014FF9C(*(_QWORD *)(v0 + 392) + ((v13 + 32) & ~v13) + v11 * v12, v14);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 200));
    v31 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v0 + 424) = v31;
    sub_10014FF9C(v14, v15);
    v22 = swift_allocObject(&unk_1005657C8, v20, v21);
    *(_QWORD *)(v0 + 432) = v22;
    *(_BYTE *)(v22 + 16) = v27;
    *(_QWORD *)(v22 + 24) = v29;
    *(_QWORD *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v18;
    *(_QWORD *)(v22 + 48) = v16;
    *(_QWORD *)(v22 + 56) = v30;
    sub_100243780(v15, v22 + v17);
    v23 = unk_1005D0B54;
    v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0B50 + dword_1005D0B50);
    swift_retain(v19);
    swift_retain(v18);
    swift_retain(v16);
    swift_retain(v29);
    swift_retain(v30);
    v24 = (_QWORD *)swift_task_alloc(v23);
    *(_QWORD *)(v0 + 440) = v24;
    *v24 = v0;
    v24[1] = sub_1002C10D0;
    return v28((uint64_t)v28, v31, (uint64_t)sub_1002C26C4, v22);
  }
}

uint64_t sub_1002C1448()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 464);
  *(_QWORD *)(*v1 + 472) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002C174C;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 456));
    v4 = sub_1002C14B4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002C14B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0[48] + 16);
  v0[60] = v1;
  swift_bridgeObjectRetain(v1);
  AppDependency.wrappedValue.getter(v0 + 27);
  v2 = v0[27];
  v0[61] = v2;
  v5 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1005D0270 + dword_1005D0270);
  v3 = (_QWORD *)swift_task_alloc(unk_1005D0274);
  v0[62] = v3;
  *v3 = v0;
  v3[1] = sub_1002C154C;
  return v5(v1, v2, 1);
}

uint64_t sub_1002C154C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 496);
  *(_QWORD *)(*v2 + 504) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 480);

  swift_bridgeObjectRelease(v6);
  if (v1)
  {
    v7 = sub_1002C17E0;
  }
  else
  {
    *(_QWORD *)(v4 + 512) = a1;
    v7 = sub_1002C15D0;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1002C15D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 512);
  v3 = *(void **)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 336);
  v10 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 224) = v1;
  v7 = sub_100012E18(qword_1005D3AD0);
  v8 = sub_100130EAC();
  static IntentResult.result<A>(value:)(v0 + 224, v7, v8);

  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C16B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 304);

  sub_10014FFE0(v2);
  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C174C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 384);

  swift_release(v1);
  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C17E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 384);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 296);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002C1868(void *a1, char a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[4];
  uint64_t v54;
  uint64_t v55;

  v52 = a8;
  v49 = a6;
  v50 = a5;
  v51 = a4;
  v48 = (unint64_t *)a3;
  v11 = type metadata accessor for NoteEntity(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for NoteID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_opt_self(ICNote);
  v22 = swift_dynamicCastObjCClass(a1, v21);
  if (v22)
  {
    v23 = (void *)v22;
    v24 = a1;
    if (objc_msgSend(v23, "isPinned") == (a2 & 1))
    {
      v48 = (unint64_t *)v24;
      v32 = v51;
      swift_retain(v51);
      v33 = v50;
      swift_retain(v50);
      v34 = v49;
      swift_retain(v49);
      swift_retain(a7);
      AppDependency.wrappedValue.getter(v53);
      v35 = (uint64_t)v16;
      Logger.init(subsystem:category:)(v53[0], v53[1], v53[2], v53[3]);
      swift_release(a7);
      swift_release(v34);
      swift_release(v33);
      swift_release(v32);
      v36 = sub_10014FF9C(v52, (uint64_t)v13);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc(22, -1);
        v40 = swift_slowAlloc(64, -1);
        v53[0] = v40;
        *(_DWORD *)v39 = 136315394;
        v41 = NoteID.managedIdentifier.getter();
        v43 = v42;
        v54 = sub_1003A4190(v41, v42, v53);
        v52 = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v39 + 4);
        swift_bridgeObjectRelease(v43);
        sub_10014FFE0((uint64_t)v13);
        *(_WORD *)(v39 + 12) = 2080;
        if ((a2 & 1) != 0)
          v44 = 0x64656E6E6970;
        else
          v44 = 0x64656E6E69706E75;
        if ((a2 & 1) != 0)
          v45 = 0xE600000000000000;
        else
          v45 = 0xE800000000000000;
        v54 = sub_1003A4190(v44, v45, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v39 + 14);
        swift_bridgeObjectRelease(v45);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Note %s is already %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v47);
      }
      else
      {

        sub_10014FFE0((uint64_t)v13);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
      }
    }
    else
    {
      v25 = v48 + 2;
      objc_msgSend(v23, "setIsPinned:");
      v26 = sub_10014B4A4();
      ICSearchIndexableNote<>.entityIdentifier.getter(v26);
      swift_beginAccess(v25, v53, 33, 0);
      v27 = *v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
      *v25 = v27;
      v29 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_10016B830(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        *v25 = v27;
      }
      v31 = *(_QWORD *)(v27 + 16);
      v30 = *(_QWORD *)(v27 + 24);
      if (v31 >= v30 >> 1)
      {
        v27 = sub_10016B830(v30 > 1, v31 + 1, 1, v27);
        *v25 = v27;
      }
      *(_QWORD *)(v27 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v27+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v31, v20, v17);
      swift_endAccess(v53);

    }
  }
}

id sub_1002C1CC0(void *a1)
{
  unsigned int v1;
  id v2;
  id v4;
  id v5;

  v5 = 0;
  v1 = objc_msgSend(a1, "save:", &v5);
  v2 = v5;
  if (v1)
    return v5;
  v4 = v5;
  _convertNSErrorToError(_:)(v2);

  return (id)swift_willThrow();
}

uint64_t sub_1002C1D68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v6 = v1[3];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D7734);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  return PinNotesIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_1002C1DE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = _s11MobileNotes03PinB6IntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t _s11MobileNotes03PinB6IntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64x2_t v50;
  int16x8_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  unsigned int v65;
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  void (*v70)(char *);
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD v78[3];
  char v79;
  unsigned __int32 v80;

  v75 = type metadata accessor for InputConnectionBehavior(0);
  v71 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v74 = (char *)&v59 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2 = __chkstk_darwin(v1);
  v73 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v72 = (char *)&v59 - v4;
  v5 = sub_100012E18(&qword_1005CF0E8);
  __chkstk_darwin(v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7;
  v8 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v8);
  v61 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  __chkstk_darwin(v10);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  __chkstk_darwin(v21);
  v60 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100012E18(&qword_1005CF0F0);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x65676E616843, 0xE600000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v65 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v63 = v12;
  v26(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  v64 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for Pin Notes intent", 36, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x8000000100478050);
  static Locale.current.getter(v27);
  v26(v14, v25, v12);
  v28 = v61;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for operation", 35, 2);
  v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v66(v28, 0, 1, v21);
  v29 = type metadata accessor for FavoriteOperation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  v30 = type metadata accessor for IntentDialog(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v62 = v31;
  v32 = v72;
  v31(v72, 1, 1, v30);
  v33 = v73;
  v31(v73, 1, 1, v30);
  v69 = enum case for InputConnectionBehavior.default(_:);
  v70 = *(void (**)(char *))(v71 + 104);
  v34 = v74;
  v70(v74);
  v35 = sub_100019C6C(&qword_1005CF0F8, (uint64_t (*)(uint64_t))&type metadata accessor for FavoriteOperation, (uint64_t)&protocol conformance descriptor for FavoriteOperation);
  dispatch thunk of static CaseIterable.allCases.getter(v78, v29, v35);
  v36 = v78[0];
  v37 = sub_100019C6C(&qword_1005CF100, (uint64_t (*)(uint64_t))&type metadata accessor for FavoriteOperation, (uint64_t)&protocol conformance descriptor for FavoriteOperation);
  v38 = v60;
  v71 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v60, v28, v59, v32, v33, v34, v36, v37);
  sub_100012E18(&qword_1005CEE58);
  v39 = String.LocalizationValue.init(stringLiteral:)(0x7365746F4ELL, 0xE500000000000000);
  static Locale.current.getter(v39);
  v40 = v65;
  v42 = v63;
  v41 = v64;
  v64(v14, v65, v63);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for Pin Notes intent", 36, 2);
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x8000000100478080);
  static Locale.current.getter(v43);
  v41(v14, v40, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for notes", 31, 2);
  v66(v28, 0, 1, v67);
  v76 = 0;
  v44 = v72;
  v45 = v62;
  v62(v72, 1, 1, v30);
  v46 = v73;
  v45(v73, 1, 1, v30);
  v78[0] = sub_1001E8EEC();
  v78[1] = v47;
  v78[2] = v48;
  v79 = v49 & 1;
  v50 = (uint64x2_t)vdupq_n_s64(v49);
  v51 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v50, (uint64x2_t)xmmword_100451C10), (int32x4_t)vshlq_u64(v50, (uint64x2_t)xmmword_100451C00));
  *(int8x8_t *)v51.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v51), (int8x8_t)0x1000100010001);
  v80 = vmovn_s16(v51).u32[0];
  v52 = v74;
  ((void (*)(char *, _QWORD, uint64_t))v70)(v74, v69, v75);
  v53 = sub_100127D40();
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v38, v28, &v76, v44, v46, v52, v78, &type metadata for VisibleNotesQuery, v53);
  sub_100012E18(&qword_1005CEE50);
  v76 = 0xD000000000000021;
  v77 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v78, &v76, &type metadata for String, &protocol witness table for String);
  v54 = type metadata accessor for AppDependencyManager(0);
  v55 = static AppDependencyManager.shared.getter(v54);
  AppDependency.__allocating_init(key:manager:)(v78, v55);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v76 = 0xD000000000000024;
  v77 = 0x8000000100476B40;
  v56 = AnyHashable.init<A>(_:)(v78, &v76, &type metadata for String, &protocol witness table for String);
  v57 = static AppDependencyManager.shared.getter(v56);
  AppDependency.__allocating_init(key:manager:)(v78, v57);
  return v71;
}

uint64_t sub_1002C251C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002C2544@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002C256C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C2590()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for NoteEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  v7 = (char *)v0 + v4;
  v8 = type metadata accessor for NoteID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = &v7[v1[5]];
  v10 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  swift_release(*(_QWORD *)&v7[v1[8]]);
  swift_release(*(_QWORD *)&v7[v1[9]]);
  swift_release(*(_QWORD *)&v7[v1[10]]);
  swift_release(*(_QWORD *)&v7[v1[11]]);
  swift_release(*(_QWORD *)&v7[v1[12]]);
  swift_release(*(_QWORD *)&v7[v1[13]]);
  swift_release(*(_QWORD *)&v7[v1[14]]);

  return swift_deallocObject(v0, v5, v6);
}

void sub_1002C26C4(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoteEntity(0) - 8) + 80);
  sub_1002C1868(a1, *(_BYTE *)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3));
}

uint64_t sub_1002C272C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002C2750()
{
  uint64_t v0;

  return sub_1002C1CC0(*(void **)(v0 + 16));
}

unint64_t sub_1002C276C()
{
  unint64_t result;

  result = qword_1005D7738;
  if (!qword_1005D7738)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PinNotesIntent, &type metadata for PinNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7738);
  }
  return result;
}

unint64_t sub_1002C27B8()
{
  unint64_t result;

  result = qword_1005D7740;
  if (!qword_1005D7740)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PinNotesIntent, &type metadata for PinNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7740);
  }
  return result;
}

unint64_t sub_1002C2800()
{
  unint64_t result;

  result = qword_1005D7748;
  if (!qword_1005D7748)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PinNotesIntent, &type metadata for PinNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7748);
  }
  return result;
}

uint64_t sub_1002C2844(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PinNotesIntent.perform()>>, 1)+ 8);
}

uint64_t sub_1002C2868(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static PinNotesIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for PinNotesIntent()
{
  return &type metadata for PinNotesIntent;
}

uint64_t sub_1002C2888()
{
  return sub_100016638(&qword_1005D7758, &qword_1005D7760, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002C28B4()
{
  return sub_100016638(&qword_1005D0040, &qword_1005D0048, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t DeleteTagsIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[12] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v4[13] = v7;
  v4[14] = v8;
  return swift_task_switch(sub_1002C2950, v7, v8);
}

uint64_t sub_1002C2950()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "ic_viewControllerManager");
    *(_QWORD *)(v0 + 120) = v3;
    if (v3)
    {
      v4 = (uint64_t)v3;
      v5 = *(_QWORD *)(v0 + 72);
      v6 = *(_QWORD *)(v0 + 80);
      IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 48));
      v7 = *(_QWORD *)(v0 + 48);
      v8 = v2;
      swift_retain(v5);
      swift_retain(v6);
      sub_1002C3758(v7);
      v10 = v9;
      *(_QWORD *)(v0 + 128) = v9;
      swift_release(v5);
      swift_release(v6);

      swift_bridgeObjectRelease(v7);
      v11 = (_QWORD *)swift_task_alloc(dword_1005D7774);
      *(_QWORD *)(v0 + 136) = v11;
      *v11 = v0;
      v11[1] = sub_1002C2B70;
      return sub_1002C3260(v10, (uint64_t)v8, v4);
    }
    v18 = *(_QWORD *)(v0 + 96);
    type metadata accessor for ICError(0);
    v20 = v19;
    *(_QWORD *)(v0 + 40) = 222;
    v21 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v22 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v23 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 32), v0 + 40, v21, v20, v22);
    swift_willThrow(v23);

    swift_release(v18);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
    type metadata accessor for ICError(0);
    v14 = v13;
    *(_QWORD *)(v0 + 24) = 222;
    v15 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v16 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v17 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 16), v0 + 24, v15, v14, v16);
    swift_willThrow(v17);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C2B70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[13];
    v5 = v2[14];
    v6 = sub_1002C2C34;
  }
  else
  {
    swift_bridgeObjectRelease(v2[16]);
    v4 = v2[13];
    v5 = v2[14];
    v6 = sub_1002C2BDC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1002C2BDC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 88);
  v3 = swift_release(*(_QWORD *)(v0 + 96));
  static IntentResult.result<>()(v3);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C2C34()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *DeleteTagsIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static DeleteTagsIntent.persistentIdentifier;
}

uint64_t sub_1002C2C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static DeleteTagsIntent.title);
  sub_10012A0B0(v10, (uint64_t)static DeleteTagsIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEB00000000736761);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t DeleteTagsIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC18 != -1)
    swift_once(&qword_1005CEC18, sub_1002C2C98);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static DeleteTagsIntent.title);
}

uint64_t static DeleteTagsIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC18 != -1)
    swift_once(&qword_1005CEC18, sub_1002C2C98);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static DeleteTagsIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *DeleteTagsIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static DeleteTagsIntent.openAppWhenRun;
}

uint64_t static DeleteTagsIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100486800);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static DeleteTagsIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D7778);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D7780);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100019748();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for DeleteTagsIntent, v6);
  v7._countAndFlagsBits = 0x74206574656C6544;
  v7._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100460E78, v8);
  v10 = sub_100012E18(&qword_1005D7788);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x7367617420;
  v11._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for DeleteTagsIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for DeleteTagsIntent, v6);
}

uint64_t sub_1002C3260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[7] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  return swift_task_switch(sub_1002C32D0, v6, v7);
}

uint64_t sub_1002C32D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = objc_opt_self(ICWindow);
  v3 = objc_msgSend((id)swift_dynamicCastObjCClass(v1, v2), "ic_topmostPresentedViewController");
  if (v3 || (v3 = objc_msgSend(*(id *)(v0 + 40), "rootViewController")) != 0)
  {
    v5 = *(void **)(v0 + 40);
    v4 = *(void **)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = v4;
    v8 = v5;
    v9 = objc_msgSend(v7, "noteEditorViewController");
    v10 = objc_msgSend(v9, "eventReporter");

    v11 = objc_allocWithZone((Class)type metadata accessor for TagDeletionAlertController());
    v12 = sub_100214EA4(v4, v5, v10, 5);

    v12[OBJC_IVAR____TtC11MobileNotes26TagDeletionAlertController_shouldSendNotification] = 1;
    sub_100394C7C(v6);
    if (v13)
    {
      v14 = v13;
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = *(_QWORD *)(v0 + 32);
    v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, 0, 0);

    v18 = sub_100214870(v16);
    objc_msgSend(v17, "addAction:", v18);
    v19 = sub_100215020();
    objc_msgSend(v17, "addAction:", v19);

    objc_msgSend(v3, "presentViewController:animated:completion:", v17, 1, 0);
    v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    type metadata accessor for ICError(0);
    v23 = v22;
    *(_QWORD *)(v0 + 24) = 222;
    v24 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v25 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v26 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 16), v0 + 24, v24, v23, v25);
    swift_willThrow(v26);
    v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v20();
}

uint64_t sub_1002C3554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D7778);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D7780);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, a1, a2);
  v10._countAndFlagsBits = 0x74206574656C6544;
  v10._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100460E78, v11);
  v13 = sub_100012E18(&qword_1005D7788);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 0x7367617420;
  v14._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_1002C36C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D776C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100130768;
  return DeleteTagsIntent.perform()(a1, v4, v5, v6);
}

uint64_t sub_1002C3730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = _s11MobileNotes16DeleteTagsIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

void sub_1002C3758(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v19 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v3 = type metadata accessor for TagEntity(0);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    while (1)
    {
      AppDependency.wrappedValue.getter(&v18);
      v7 = v18;
      URL._bridgeToObjectiveC()((NSURL *)*(int *)(v3 + 20));
      v9 = v8;
      v10 = objc_msgSend(v7, "managedObjectIDForURIRepresentation:", v8);

      if (!v10)
        break;
      v11 = objc_msgSend(v7, "managedObjectContextForObjectID:", v10);
      if (!v11)
        goto LABEL_8;
      v12 = v11;
      v13 = objc_msgSend(v11, "objectWithID:", v10);

      v14 = objc_opt_self(ICHashtag);
      v15 = swift_dynamicCastObjCClassUnconditional(v13, v14, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v16 = v19[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      specialized ContiguousArray._endMutation()(v17);
      v5 += v6;
      if (!--v2)
        return;
    }
    __break(1u);
LABEL_8:
    __break(1u);
  }
}

uint64_t _s11MobileNotes16DeleteTagsIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  _QWORD v44[6];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v41 = *(_QWORD *)(v0 - 8);
  v42 = v0;
  __chkstk_darwin(v0);
  v40 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v39 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v38 = (char *)&v37 - v5;
  v6 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100012E18(&qword_1005CEE68);
  v23 = String.LocalizationValue.init(stringLiteral:)(1936154964, 0xE400000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for Delete Tags intent", 38, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x80000001004780E0);
  static Locale.current.getter(v26);
  v25(v12, v24, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for tags", 30, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  v44[0] = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v38;
  v28(v38, 1, 1, v27);
  v30 = v39;
  v28(v39, 1, 1, v27);
  v31 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  v32 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v33 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v22, v8, v44, v29, v30, v31, v32);
  sub_100012E18(&qword_1005CEE50);
  v43[0] = 0xD000000000000021;
  v43[1] = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v44, v43, &type metadata for String, &protocol witness table for String);
  v34 = type metadata accessor for AppDependencyManager(0);
  v35 = static AppDependencyManager.shared.getter(v34);
  AppDependency.__allocating_init(key:manager:)(v44, v35);
  return v33;
}

uint64_t sub_1002C3CF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1002C3D20()
{
  unint64_t result;

  result = qword_1005D7790;
  if (!qword_1005D7790)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteTagsIntent, &type metadata for DeleteTagsIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7790);
  }
  return result;
}

uint64_t sub_1002C3D68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of DeleteTagsIntent.perform()>>, 1);
}

uint64_t sub_1002C3D78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static DeleteTagsIntent.parameterSummary>>, 1);
}

void destroy for DeleteTagsIntent(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));

}

uint64_t *_s11MobileNotes16DeleteTagsIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = (uint64_t)v5;
  swift_retain(v3);
  swift_retain(v4);
  v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for DeleteTagsIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a1[2];
  v9 = (void *)a2[2];
  a1[2] = (uint64_t)v9;
  v10 = v9;

  return a1;
}

_QWORD *assignWithTake for DeleteTagsIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = (void *)a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for DeleteTagsIntent()
{
  return &type metadata for DeleteTagsIntent;
}

uint64_t sub_1002C3ED0()
{
  return sub_100016638(&qword_1005D77B0, &qword_1005D77B8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002C3EFC()
{
  return sub_100016638((unint64_t *)&qword_1005D1B40, (uint64_t *)&unk_1005D0690, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t SetAttachmentSizeIntent.target.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for AttachmentEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100270EC4(a1, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100270F08(a1);
}

void *OpenAttachmentIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenAttachmentIntent.persistentIdentifier;
}

unint64_t static OpenAttachmentIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1002C3FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static OpenAttachmentIntent.title);
  sub_10012A0B0(v10, (uint64_t)static OpenAttachmentIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x747441206E65704FLL, 0xEF746E656D686361);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t OpenAttachmentIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC20 != -1)
    swift_once(&qword_1005CEC20, sub_1002C3FD0);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static OpenAttachmentIntent.title);
}

uint64_t static OpenAttachmentIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC20 != -1)
    swift_once(&qword_1005CEC20, sub_1002C3FD0);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static OpenAttachmentIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *OpenAttachmentIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenAttachmentIntent.openAppWhenRun;
}

uint64_t static OpenAttachmentIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000027, 0x8000000100486840);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static OpenAttachmentIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D77C8);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D77D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185970();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenAttachmentIntent, v6);
  v7._countAndFlagsBits = 0x656874206E65704FLL;
  v7._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100461028, v8);
  v10 = sub_100012E18(&qword_1005D77D8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x6D68636174746120;
  v11._object = (void *)0xEB00000000746E65;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for OpenAttachmentIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for OpenAttachmentIntent, v6);
}

uint64_t sub_1002C45A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for AttachmentEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100270EC4(a1, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100270F08(a1);
}

uint64_t sub_1002C4620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D77C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D77D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, a1, a2);
  v10._countAndFlagsBits = 0x656874206E65704FLL;
  v10._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100461028, v11);
  v13 = sub_100012E18(&qword_1005D77D8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 0x6D68636174746120;
  v14._object = (void *)0xEB00000000746E65;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_1002C4798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = _s11MobileNotes20OpenAttachmentIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t _s11MobileNotes20OpenAttachmentIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD v43[2];
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD v52[6];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v48 = *(_QWORD *)(v0 - 8);
  v49 = v0;
  __chkstk_darwin(v0);
  v47 = (char *)v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v46 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v45 = (char *)v43 - v5;
  v6 = sub_100012E18(&qword_1005CF108);
  __chkstk_darwin(v6);
  v44 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v8);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[1] = sub_100012E18((uint64_t *)&unk_1005CF110);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x656D686361747441, 0xEA0000000000746ELL);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for Open Attachment intent", 42, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, 0x8000000100478140);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for attachment", 36, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for AttachmentEntity(0);
  v30 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v44, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v45;
  v32(v45, 1, 1, v31);
  v34 = v46;
  v32(v46, 1, 1, v31);
  v35 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for InputConnectionBehavior.default(_:), v49);
  v36 = sub_1002C4E98((unint64_t *)&qword_1005D2C60, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  v37 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v24, v10, v30, v33, v34, v35, v36);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v50 = 0xD000000000000024;
  v51 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v52, &v50, &type metadata for String, &protocol witness table for String);
  v38 = type metadata accessor for AppDependencyManager(0);
  v39 = static AppDependencyManager.shared.getter(v38);
  AppDependency.__allocating_init(key:manager:)(v52, v39);
  sub_100012E18(&qword_1005CEE50);
  v50 = 0xD000000000000021;
  v51 = 0x8000000100476B70;
  v40 = AnyHashable.init<A>(_:)(v52, &v50, &type metadata for String, &protocol witness table for String);
  v41 = static AppDependencyManager.shared.getter(v40);
  AppDependency.__allocating_init(key:manager:)(v52, v41);
  return v37;
}

uint64_t sub_1002C4C88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002C4CB0()
{
  return sub_1002C4E98(&qword_1005D77E0, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

unint64_t sub_1002C4CD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1002C4CF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002C4CF8()
{
  unint64_t result;

  result = qword_1005D7810;
  if (!qword_1005D7810)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAttachmentIntent, &type metadata for OpenAttachmentIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7810);
  }
  return result;
}

unint64_t sub_1002C4D40()
{
  unint64_t result;

  result = qword_1005D7818;
  if (!qword_1005D7818)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAttachmentIntent, &type metadata for OpenAttachmentIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7818);
  }
  return result;
}

uint64_t sub_1002C4D84()
{
  return sub_1002C4E98(&qword_1005D2B98, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

unint64_t sub_1002C4DB0()
{
  unint64_t result;

  result = qword_1005D7820;
  if (!qword_1005D7820)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAttachmentIntent, &type metadata for OpenAttachmentIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7820);
  }
  return result;
}

unint64_t sub_1002C4DF8()
{
  unint64_t result;

  result = qword_1005D7828;
  if (!qword_1005D7828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAttachmentIntent, &type metadata for OpenAttachmentIntent);
    atomic_store(result, (unint64_t *)&qword_1005D7828);
  }
  return result;
}

uint64_t sub_1002C4E3C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenAttachmentIntent.perform()>>, 1);
}

uint64_t sub_1002C4E4C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static OpenAttachmentIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for OpenAttachmentIntent()
{
  return &type metadata for OpenAttachmentIntent;
}

uint64_t sub_1002C4E6C()
{
  return sub_100016638(&qword_1005D7838, (uint64_t *)&unk_1005D7840, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002C4E98(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AttachmentEntity(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NoteEntity.init(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for NoteEntity(0);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[8] = v6;
  v3[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource(0);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C4FC0, 0, 0);
}

uint64_t sub_1002C4FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  int *v34;
  unsigned int v35;
  uint64_t v36;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v36 = *(_QWORD *)(v0 + 56);
  v34 = *(int **)(v0 + 40);
  v31 = *(void **)(v0 + 24);
  v32 = *(void **)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = v34[7];
  *(_DWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v6 + v7) = 0;
  v8 = v6;
  v9 = v34[8];
  *(_DWORD *)(v0 + 124) = v9;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v10 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v10);
  v35 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v11 = *(void (**)(uint64_t))(v5 + 104);
  v11(v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v9) = EntityProperty<>.init(title:)(v1);
  v12 = v34[9];
  *(_DWORD *)(v0 + 128) = v12;
  v13 = String.LocalizationValue.init(stringLiteral:)(0x7972616D6D7553, 0xE700000000000000);
  static Locale.current.getter(v13);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v12) = EntityProperty<>.init(title:)(v1);
  v14 = v34[10];
  *(_DWORD *)(v0 + 132) = v14;
  sub_100012E18((uint64_t *)&unk_1005D7860);
  v15 = String.LocalizationValue.init(stringLiteral:)(2036625218, 0xE400000000000000);
  static Locale.current.getter(v15);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  v33 = v1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v14) = EntityProperty<>.init(title:)(v1);
  v16 = v34[11];
  *(_DWORD *)(v0 + 136) = v16;
  sub_100012E18((uint64_t *)&unk_1005CF120);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v17);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  v18 = sub_100019C6C((unint64_t *)&qword_1005D7870, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  *(_QWORD *)(v8 + v16) = EntityProperty<>.init(title:)(v1, v18);
  v19 = v34[12];
  *(_DWORD *)(v0 + 140) = v19;
  sub_100012E18((uint64_t *)&unk_1005D3E40);
  v20 = String.LocalizationValue.init(stringLiteral:)(1936154964, 0xE400000000000000);
  static Locale.current.getter(v20);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  v21 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  *(_QWORD *)(v8 + v19) = EntityProperty<>.init(title:)(v1, v21);
  v30 = v34[13];
  *(_DWORD *)(v0 + 144) = v30;
  sub_100012E18(&qword_1005CF130);
  v22 = String.LocalizationValue.init(stringLiteral:)(0x6E6F697461657243, 0xED00006574614420);
  static Locale.current.getter(v22);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v30) = EntityProperty<>.init(title:)(v1);
  v23 = v34[14];
  *(_DWORD *)(v0 + 148) = v23;
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001004781D0);
  static Locale.current.getter(v24);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v23) = EntityProperty<>.init(title:)(v33);
  *(_QWORD *)(v8 + v34[15]) = 0;
  v25 = dword_1005D7884;
  v26 = v31;
  v27 = v32;
  v28 = (_QWORD *)swift_task_alloc(v25);
  *(_QWORD *)(v0 + 104) = v28;
  *v28 = v0;
  v28[1] = sub_1002C54CC;
  return NoteEntity.init(for:in:includeContents:noteContext:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 1, 0);
}

uint64_t sub_1002C54CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002C5644;
  else
    v3 = sub_1002C5530;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002C5530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(int *)(v0 + 140);
  v11 = *(int *)(v0 + 144);
  v12 = *(int *)(v0 + 148);
  v3 = *(int *)(v0 + 132);
  v2 = *(int *)(v0 + 136);
  v5 = *(int *)(v0 + 124);
  v4 = *(int *)(v0 + 128);
  v6 = *(int *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_release(*(_QWORD *)(v9 + v5));
  swift_release(*(_QWORD *)(v9 + v4));
  swift_release(*(_QWORD *)(v9 + v3));
  swift_release(*(_QWORD *)(v9 + v2));
  swift_release(*(_QWORD *)(v9 + v1));
  swift_release(*(_QWORD *)(v9 + v11));
  swift_release(*(_QWORD *)(v9 + v12));
  sub_10013B170(v7, v9, type metadata accessor for NoteEntity);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C5644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(int *)(v0 + 144);
  v3 = *(int *)(v0 + 136);
  v2 = *(int *)(v0 + 140);
  v4 = *(int *)(v0 + 128);
  v5 = *(int *)(v0 + 132);
  v7 = *(int *)(v0 + 120);
  v6 = *(int *)(v0 + 124);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(int *)(v0 + 148);
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_release(*(_QWORD *)(v9 + v6));
  swift_release(*(_QWORD *)(v9 + v4));
  swift_release(*(_QWORD *)(v9 + v5));
  swift_release(*(_QWORD *)(v9 + v3));
  swift_release(*(_QWORD *)(v9 + v2));
  swift_release(*(_QWORD *)(v9 + v1));
  swift_release(*(_QWORD *)(v9 + v12));
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for NoteEntity(uint64_t a1)
{
  return sub_100010414(a1, qword_1005D79F0, (uint64_t)&nominal type descriptor for NoteEntity);
}

uint64_t sub_1002C5750()
{
  type metadata accessor for NoteEntity(0);
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1002C577C()
{
  type metadata accessor for NoteEntity(0);
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1002C57A8()
{
  type metadata accessor for NoteEntity(0);
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1002C57D4()
{
  type metadata accessor for NoteEntity(0);
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1002C5800()
{
  type metadata accessor for NoteEntity(0);
  return EntityProperty.projectedValue.getter();
}

uint64_t sub_1002C582C()
{
  type metadata accessor for NoteEntity(0);
  return EntityProperty.projectedValue.getter();
}

void sub_1002C5858(char a1)
{
  sub_1002C58A0(a1);
}

void sub_1002C587C(char a1)
{
  sub_1002C58A0(a1);
}

void sub_1002C58A0(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for String.StandardComparator(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1002C5944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(v6, a2);
  static String.StandardComparator.localizedStandard.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v3, v2);
  ((void (*)(uint64_t, uint64_t, _QWORD))SortDescriptor.init<A>(_:comparator:order:))(KeyPath, v4, v5 & 1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v2);
}

void sub_1002C5A00()
{
  JUMPOUT(0x1002C5A08);
}

uint64_t sub_1002C5A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_100012E18(&qword_1005D1080);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v8, &qword_1005D1080);
  v9 = type metadata accessor for ManagedEntityContextType(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v8, v9);
    if (v11 != enum case for ManagedEntityContextType.modern(_:))
    {
      if (v11 == enum case for ManagedEntityContextType.html(_:))
      {
        v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
        v13 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v17);
        v19 = v18;
        swift_release(v17);
        if (v19)
          return v13;
        __break(1u);
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      return 0;
    }
  }
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v13 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v12);
  v15 = v14;
  result = swift_release(v12);
  if (v15)
    return v13;
  __break(1u);
  return result;
}

uint64_t static NoteEntity.managedObjectID(for:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D7890 + dword_1005D7890);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D7894);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100158D18;
  return v7(a1, a2);
}

int8x8_t sub_1002C5C14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64x2_t v3;
  int16x8_t v4;
  int8x8_t result;

  static NoteEntity.defaultQuery = sub_1001E964C();
  unk_100601BC0 = v0;
  qword_100601BC8 = v1;
  byte_100601BD0 = v2 & 1;
  v3 = (uint64x2_t)vdupq_n_s64(v2);
  v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_100451C10), (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_100451C00));
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  result = vmovn_s16(v4);
  *(_DWORD *)&byte_100601BD1 = result.i32[0];
  return result;
}

uint64_t *NoteEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_1005CEC28 != -1)
    swift_once(&qword_1005CEC28, sub_1002C5C14);
  return &static NoteEntity.defaultQuery;
}

uint64_t static NoteEntity.defaultQuery.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1005CEC28 != -1)
    swift_once(&qword_1005CEC28, sub_1002C5C14);
  v0 = static NoteEntity.defaultQuery;
  v1 = unk_100601BC0;
  v2 = qword_100601BC8;
  swift_retain(static NoteEntity.defaultQuery);
  swift_retain(v1);
  swift_retain(v2);
  return v0;
}

uint64_t sub_1002C5D88()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static NoteEntity.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static NoteEntity.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(1702129486, 0xE400000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "App entity name", 15, 2);
  LocalizedStringResource.init(stringLiteral:)(0x746F6E20646C6C25, 0xEA00000000007365);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v2, 0, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t NoteEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC30 != -1)
    swift_once(&qword_1005CEC30, sub_1002C5D88);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static NoteEntity.typeDisplayRepresentation);
}

uint64_t static NoteEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC30 != -1)
    swift_once(&qword_1005CEC30, sub_1002C5D88);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static NoteEntity.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t NoteEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NoteID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NoteEntity.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NoteID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t NoteEntity.managedObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NoteEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NoteEntity.managedObjectURI.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NoteEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NoteEntity.managedObjectURI.modify())()
{
  type metadata accessor for NoteEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t NoteEntity.isModernNote.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NoteEntity(0) + 24));
}

uint64_t NoteEntity.isModernNote.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NoteEntity(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*NoteEntity.isModernNote.modify())()
{
  type metadata accessor for NoteEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

void *NoteEntity.noteContext.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for NoteEntity(0) + 28));
  v2 = v1;
  return v1;
}

void NoteEntity.noteContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for NoteEntity(0) + 28);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*NoteEntity.noteContext.modify())()
{
  type metadata accessor for NoteEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

void sub_1002C6298(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v93 = a8;
  v90 = a6;
  v91 = a7;
  v88 = a4;
  v89 = a5;
  v87 = a3;
  v100 = a2;
  v101 = a1;
  v80 = a9;
  v95 = a10;
  v96 = a11;
  v12 = sub_100012E18(&qword_1005D1EB0);
  v13 = __chkstk_darwin(v12);
  v94 = (uint64_t)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v92 = (uint64_t)&v78 - v15;
  v16 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v17 = __chkstk_darwin(v16);
  v85 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v84 = (uint64_t)&v78 - v19;
  v20 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = v20;
  __chkstk_darwin(v20);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Locale(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v31);
  v33 = (char *)&v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (int *)type metadata accessor for NoteEntity(0);
  v86 = v34[7];
  *(_QWORD *)(a9 + v86) = 0;
  v99 = v34[8];
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v35 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v35);
  v36 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
  v38 = v22;
  v79 = v22;
  v37(v24, enum case for LocalizedStringResource.BundleDescription.main(_:), v22);
  v39 = v37;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v24, "Parameter title for Find Notes intent", 37, 2);
  v83 = EntityProperty<>.init(title:)(v33);
  v40 = v80;
  *(_QWORD *)(v80 + v99) = v83;
  v41 = v34[9];
  v98 = v34;
  v99 = v41;
  v42 = String.LocalizationValue.init(stringLiteral:)(0x7972616D6D7553, 0xE700000000000000);
  static Locale.current.getter(v42);
  v39(v24, v36, v38);
  v43 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v24, "Parameter title for Find Notes intent", 37, 2);
  v82 = EntityProperty<>.init(title:)(v33);
  *(_QWORD *)(v40 + v99) = v82;
  v99 = v34[10];
  sub_100012E18((uint64_t *)&unk_1005D7860);
  v44 = String.LocalizationValue.init(stringLiteral:)(2036625218, 0xE400000000000000);
  static Locale.current.getter(v44);
  v45 = v24;
  v46 = v36;
  LODWORD(v97) = v36;
  v47 = v79;
  v39(v45, v36, v79);
  v48 = v39;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v43, "Parameter title for Find Notes intent", 37, 2);
  v49 = EntityProperty<>.init(title:)(v33);
  v50 = v98;
  *(_QWORD *)(v40 + v99) = v49;
  v99 = v50[11];
  v81 = sub_100012E18((uint64_t *)&unk_1005CF120);
  v51 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v51);
  v48(v43, v46, v47);
  v52 = v43;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v43, "Parameter title for Find Notes intent", 37, 2);
  v53 = sub_100019C6C((unint64_t *)&qword_1005D7870, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v54 = EntityProperty<>.init(title:)(v33, v53);
  *(_QWORD *)(v40 + v99) = v54;
  v55 = v40;
  v81 = v50[12];
  sub_100012E18((uint64_t *)&unk_1005D3E40);
  v56 = String.LocalizationValue.init(stringLiteral:)(1936154964, 0xE400000000000000);
  static Locale.current.getter(v56);
  v57 = v97;
  v58 = v47;
  v48(v52, v97, v47);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v52, "Parameter title for Find Notes intent", 37, 2);
  v59 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v60 = EntityProperty<>.init(title:)(v33, v59);
  *(_QWORD *)(v55 + v81) = v60;
  v61 = v98;
  v78 = v98[13];
  sub_100012E18(&qword_1005CF130);
  v62 = String.LocalizationValue.init(stringLiteral:)(0x6E6F697461657243, 0xED00006574614420);
  static Locale.current.getter(v62);
  v48(v52, v57, v58);
  v63 = v52;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v52, "Parameter title for Find Notes intent", 37, 2);
  v81 = EntityProperty<>.init(title:)(v33);
  *(_QWORD *)(v55 + v78) = v81;
  v64 = v61[14];
  v65 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001004781D0);
  static Locale.current.getter(v65);
  v48(v63, v97, v58);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v30, 0, 0, v27, v63, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v55 + v64) = EntityProperty<>.init(title:)(v33);
  *(_QWORD *)(v55 + v61[15]) = 0;
  v66 = v55;
  v67 = type metadata accessor for NoteID(0);
  v97 = *(_QWORD *)(v67 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v55, v101, v67);
  v68 = v100;
  v69 = objc_msgSend(v100, "URIRepresentation");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v69);

  *(_BYTE *)(v66 + v61[6]) = objc_msgSend(v68, "ic_isModernNoteType");
  v102 = v87;
  v103 = v88;
  EntityProperty.wrappedValue.setter(&v102);
  v102 = v89;
  v103 = v90;
  EntityProperty.wrappedValue.setter(&v102);
  v70 = v91;
  v71 = v84;
  sub_100012CE8(v91, v84, (uint64_t *)&unk_1005D7B20);
  v72 = v85;
  sub_100012CE8(v71, v85, (uint64_t *)&unk_1005D7B20);
  EntityProperty.wrappedValue.setter(v72);
  sub_100012DDC(v71, (uint64_t *)&unk_1005D7B20);
  v73 = v93;
  sub_100012CE8(v93, v71, (uint64_t *)&unk_1005D7B20);
  sub_100012CE8(v71, v72, (uint64_t *)&unk_1005D7B20);
  EntityProperty.wrappedValue.setter(v72);
  sub_100012DDC(v71, (uint64_t *)&unk_1005D7B20);
  v74 = v95;
  v75 = v92;
  sub_100012CE8(v95, v92, &qword_1005D1EB0);
  v76 = v94;
  sub_100012CE8(v75, v94, &qword_1005D1EB0);
  EntityProperty.wrappedValue.setter(v76);
  sub_100012DDC(v75, &qword_1005D1EB0);

  sub_100012DDC(v74, &qword_1005D1EB0);
  sub_100012DDC(v73, (uint64_t *)&unk_1005D7B20);
  sub_100012DDC(v70, (uint64_t *)&unk_1005D7B20);
  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v101, v67);
  v77 = v86;

  *(_QWORD *)(v66 + v77) = v96;
}

uint64_t sub_1002C6ADC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2[41] = a1;
  v2[42] = v1;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005CEEA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[43] = swift_task_alloc(v3);
  v2[44] = swift_task_alloc(v3);
  v4 = sub_100012E18((uint64_t *)&unk_1005D7AB8);
  v2[45] = v4;
  v2[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2FA0);
  v2[47] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[48] = swift_task_alloc(v6);
  v2[49] = swift_task_alloc(v6);
  v7 = sub_100012E18(&qword_1005D7AC8);
  v2[50] = v7;
  v2[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D7AD0);
  v2[52] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AttributedString.CharacterView(0);
  v2[53] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[54] = v10;
  v2[55] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005D7AD8);
  v2[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AttributedString.Index(0);
  v2[57] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[58] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[59] = swift_task_alloc(v14);
  v2[60] = swift_task_alloc(v14);
  v15 = sub_100012E18(&qword_1005D7AE0);
  v2[61] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D7AE8);
  v2[62] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100012E18(&qword_1005D7AF0);
  v2[63] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[64] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[65] = swift_task_alloc(v19);
  v2[66] = swift_task_alloc(v19);
  v2[67] = swift_task_alloc(v19);
  v20 = type metadata accessor for CharacterSet(0);
  v2[68] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v2[69] = v21;
  v2[70] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for NoteEntity.ContentResult(0);
  v2[71] = v22;
  v2[72] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AttributedString(0);
  v2[73] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[74] = v24;
  v2[75] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C6D7C, 0, 0);
}

uint64_t sub_1002C6D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString v6;
  unint64_t v7;
  Class isa;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 568);
  sub_1002CE57C(*(_QWORD *)(v0 + 328), v1);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 1)
  {
    v3 = v0 + 16;
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 576) + 8);
    v5 = (void *)objc_opt_self(NSAttributedString);
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)(v0 + 624) = v6;
    swift_bridgeObjectRelease(v4);
    v7 = sub_1001356B8((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DocumentReadingOptionKey(0);
    sub_100019C6C(&qword_1005CFA70, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_1004537A8);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(v0 + 632) = isa;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v0 + 56) = v0 + 256;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1002C7FC0;
    v9 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 184) = _NSConcreteStackBlock;
    v10 = (_QWORD *)(v0 + 184);
    v10[1] = 0x40000000;
    v10[2] = sub_1002C8970;
    v10[3] = &unk_100565D90;
    v10[4] = v9;
    objc_msgSend(v5, "loadFromHTMLWithString:options:completionHandler:", v6, isa, v10);
    return swift_continuation_await(v3);
  }
  v11 = *(_QWORD *)(v0 + 600);
  v12 = *(_QWORD *)(v0 + 592);
  v13 = *(_QWORD *)(v0 + 584);
  v14 = *(_QWORD *)(v0 + 576);
  v15 = *(void **)(v14 + *(int *)(sub_100012E18(&qword_1005D7B18) + 48));
  *(_QWORD *)(v0 + 608) = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v14, v13);
  if (v15)
  {
    v3 = v0 + 80;
    v16 = (void *)objc_opt_self(ICThumbnailService);
    v17 = v15;
    v18 = objc_msgSend(v16, "sharedThumbnailService");
    *(_QWORD *)(v0 + 616) = v18;
    *(_QWORD *)(v0 + 120) = v0 + 320;
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_1002C7774;
    v19 = swift_continuation_init(v0 + 80, 0);
    *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
    v20 = (_QWORD *)(v0 + 144);
    v20[1] = 0x40000000;
    v20[2] = sub_1002C8A48;
    v20[3] = &unk_100565DA8;
    v20[4] = v19;
    objc_msgSend(v18, "thumbnailWithConfiguration:completion:", v17, v20);
    return swift_continuation_await(v3);
  }
  v22 = *(_QWORD *)(v0 + 560);
  v23 = *(_QWORD *)(v0 + 552);
  v24 = *(_QWORD *)(v0 + 544);
  type metadata accessor for NoteEntity(0);
  v25 = EntityProperty.wrappedValue.getter();
  v26 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 280) = v26;
  static CharacterSet.whitespacesAndNewlines.getter(v25);
  v27 = sub_1001452E8();
  v28 = StringProtocol.trimmingCharacters(in:)(v22, &type metadata for String, v27);
  v30 = v29;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v31 = v28 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
    swift_bridgeObjectRelease(v30);
LABEL_26:
    v86 = *(_QWORD *)(v0 + 600);
    v87 = *(_QWORD *)(v0 + 592);
    v88 = *(_QWORD *)(v0 + 584);
    v89 = *(_QWORD *)(v0 + 576);
    v90 = *(_QWORD *)(v0 + 560);
    v93 = *(_QWORD *)(v0 + 536);
    v94 = *(_QWORD *)(v0 + 528);
    v96 = *(_QWORD *)(v0 + 520);
    v98 = *(_QWORD *)(v0 + 496);
    v100 = *(_QWORD *)(v0 + 488);
    v102 = *(_QWORD *)(v0 + 480);
    v104 = *(_QWORD *)(v0 + 472);
    v106 = *(_QWORD *)(v0 + 448);
    v108 = *(_QWORD *)(v0 + 440);
    v110 = *(_QWORD *)(v0 + 416);
    v112 = *(_QWORD *)(v0 + 408);
    v114 = *(_QWORD *)(v0 + 392);
    v117 = *(_QWORD *)(v0 + 384);
    v120 = *(_QWORD *)(v0 + 368);
    v91 = *(_QWORD *)(v0 + 344);
    v92 = *(_QWORD *)(v0 + 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v92, v86, v88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v92, 0, 1, v88);
    sub_100012CE8(v92, v91, &qword_1005CEEA0);
    EntityProperty.wrappedValue.setter(v91);
    sub_100012DDC(v92, &qword_1005CEEA0);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
    swift_task_dealloc(v86);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v96);
    swift_task_dealloc(v98);
    swift_task_dealloc(v100);
    swift_task_dealloc(v102);
    swift_task_dealloc(v104);
    swift_task_dealloc(v106);
    swift_task_dealloc(v108);
    swift_task_dealloc(v110);
    swift_task_dealloc(v112);
    swift_task_dealloc(v114);
    swift_task_dealloc(v117);
    swift_task_dealloc(v120);
    swift_task_dealloc(v92);
    swift_task_dealloc(v91);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v32 = *(_QWORD *)(v0 + 584);
  v33 = *(_QWORD *)(v0 + 512);
  v118 = *(_QWORD *)(v0 + 504);
  v35 = *(_QWORD *)(v0 + 488);
  v34 = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 304) = v28;
  *(_QWORD *)(v0 + 312) = v30;
  v36 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v37 = sub_100019C6C(&qword_1005D7AF8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  AttributedStringProtocol.range<A>(of:options:locale:)(v0 + 304, 0, v35, v32, &type metadata for String, v37, v27);
  sub_100012DDC(v35, &qword_1005D7AE0);
  swift_bridgeObjectRelease(v30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v118) == 1)
  {
    v38 = *(_QWORD *)(v0 + 496);
    v39 = (uint64_t *)&unk_1005D7AE8;
LABEL_25:
    sub_100012DDC(v38, v39);
    goto LABEL_26;
  }
  v40 = *(_QWORD *)(v0 + 536);
  v41 = *(_QWORD *)(v0 + 504);
  v42 = *(_QWORD *)(v0 + 456);
  v43 = sub_10014BD1C(*(_QWORD *)(v0 + 496), v40, &qword_1005D7AF0);
  AttributedString.characters.getter(v43);
  v105 = v41;
  v44 = v40 + *(int *)(v41 + 36);
  v45 = sub_100019C6C((unint64_t *)&unk_1005D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v44, v44, v42, v45);
  if ((result & 1) != 0)
  {
    v46 = *(_QWORD *)(v0 + 472);
    v47 = *(_QWORD *)(v0 + 456);
    v49 = *(_QWORD *)(v0 + 432);
    v48 = *(_QWORD *)(v0 + 440);
    v50 = *(_QWORD *)(v0 + 416);
    v51 = *(_QWORD *)(v0 + 408);
    v115 = *(_QWORD *)(v0 + 424);
    v119 = *(_QWORD *)(v0 + 400);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 16);
    v52(v50, v44, v47);
    sub_1001BEDA8(v50, v51);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v115);
    v107 = v52;
    v52(v46, v51, v47);
    v53 = v51 + *(int *)(v119 + 36);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v46, v53, v47, v45) & 1) != 0)
    {
      v54 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 8);
LABEL_18:
      v72 = v54;
      v54(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      v73 = 1;
    }
    else
    {
      v101 = *(_QWORD *)(v0 + 464);
      v97 = *(_QWORD *)(v0 + 376);
      v99 = v0 + 224;
      v103 = v45;
      v95 = v53;
      while (1)
      {
        v55 = *(_QWORD *)(v0 + 520);
        v109 = v55;
        v111 = *(_QWORD *)(v0 + 528);
        v113 = *(_QWORD *)(v0 + 472);
        v56 = *(_QWORD *)(v0 + 456);
        v116 = *(_QWORD *)(v0 + 424);
        v57 = *(_QWORD *)(v0 + 384);
        v58 = *(_QWORD *)(v0 + 392);
        v59 = v58 + *(int *)(v97 + 48);
        v107(v58, *(_QWORD *)(v0 + 408), v56);
        v107(v59, v53, v56);
        v60 = v57 + *(int *)(v97 + 48);
        v107(v57, v58, v56);
        v107(v60, v59, v56);
        v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32);
        v61(v55, v57, v56);
        v62 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
        v62(v60, v56);
        v63 = v57 + *(int *)(v97 + 48);
        v61(v57, v58, v56);
        v61(v63, v59, v56);
        v61(v109 + *(int *)(v105 + 36), v63, v56);
        v54 = v62;
        v62(v57, v56);
        sub_10014BD1C(v109, v111, &qword_1005D7AF0);
        v64 = sub_100019C6C((unint64_t *)&unk_1005D1F30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
        dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)(v113, v111, v116, v64);
        sub_100012DDC(v111, &qword_1005D7AF0);
        v65 = dispatch thunk of Collection.subscript.read(v99, v113, v116, v64);
        v67 = *v66;
        v68 = v66[1];
        swift_bridgeObjectRetain(v68);
        ((void (*)(uint64_t, _QWORD))v65)(v99, 0);
        LOBYTE(v65) = Character.isWhitespace.getter(v67, v68);
        swift_bridgeObjectRelease(v68);
        v69 = *(_QWORD *)(v0 + 472);
        v70 = *(_QWORD *)(v0 + 456);
        if ((v65 & 1) == 0)
          break;
        dispatch thunk of Collection.formIndex(after:)(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 424), v64);
        v45 = v103;
        v71 = dispatch thunk of static Equatable.== infix(_:_:)(v69, v95, v70, v103);
        v53 = v95;
        if ((v71 & 1) != 0)
          goto LABEL_18;
      }
      v61(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      v73 = 0;
      v45 = v103;
      v72 = v62;
    }
    v74 = *(_QWORD *)(v0 + 456);
    v75 = *(_QWORD *)(v0 + 464);
    v76 = *(_QWORD *)(v0 + 448);
    v78 = *(_QWORD *)(v0 + 408);
    v77 = *(_QWORD *)(v0 + 416);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v76, v73, 1, v74);
    sub_100012DDC(v78, &qword_1005D7AC8);
    sub_100012DDC(v77, &qword_1005D7AD0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v74) == 1)
    {
      v79 = *(_QWORD *)(v0 + 448);
      AttributedString.endIndex.getter();
      sub_100012DDC(v79, &qword_1005D7AD8);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 32))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
    }
    result = dispatch thunk of static Equatable.== infix(_:_:)(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 456), v45);
    if ((result & 1) != 0)
    {
      v80 = *(_QWORD *)(v0 + 536);
      v81 = *(_QWORD *)(v0 + 480);
      v82 = *(_QWORD *)(v0 + 456);
      v84 = *(_QWORD *)(v0 + 360);
      v83 = *(_QWORD *)(v0 + 368);
      v107(v83, v81, v82);
      v85 = sub_100016638(&qword_1005D7B10, (uint64_t *)&unk_1005D7AB8, (uint64_t)&protocol conformance descriptor for PartialRangeUpTo<A>);
      AttributedString.removeSubrange<A>(_:)(v83, v84, v85);
      sub_100012DDC(v83, (uint64_t *)&unk_1005D7AB8);
      v72(v81, v82);
      v39 = &qword_1005D7AF0;
      v38 = v80;
      goto LABEL_25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C7774()
{
  return swift_task_switch(sub_1002C77C0, 0, 0);
}

uint64_t sub_1002C77C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(void **)(v0 + 616);
  v2 = *(_QWORD *)(v0 + 336);

  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(int *)(type metadata accessor for NoteEntity(0) + 60);

  *(_QWORD *)(v2 + v4) = v3;
  v80 = *(void **)(v0 + 608);
  v5 = *(_QWORD *)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 552);
  v7 = *(_QWORD *)(v0 + 544);
  v8 = EntityProperty.wrappedValue.getter();
  v9 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 280) = v9;
  static CharacterSet.whitespacesAndNewlines.getter(v8);
  v10 = sub_1001452E8();
  v11 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v10);
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease(v13);
LABEL_21:
    v72 = *(_QWORD *)(v0 + 600);
    v73 = *(_QWORD *)(v0 + 592);
    v74 = *(_QWORD *)(v0 + 584);
    v75 = *(_QWORD *)(v0 + 576);
    v76 = *(_QWORD *)(v0 + 560);
    v79 = *(_QWORD *)(v0 + 536);
    v82 = *(_QWORD *)(v0 + 528);
    v83 = *(_QWORD *)(v0 + 520);
    v85 = *(_QWORD *)(v0 + 496);
    v87 = *(_QWORD *)(v0 + 488);
    v89 = *(_QWORD *)(v0 + 480);
    v91 = *(_QWORD *)(v0 + 472);
    v93 = *(_QWORD *)(v0 + 448);
    v95 = *(_QWORD *)(v0 + 440);
    v97 = *(_QWORD *)(v0 + 416);
    v99 = *(_QWORD *)(v0 + 408);
    v101 = *(_QWORD *)(v0 + 392);
    v103 = *(_QWORD *)(v0 + 384);
    v107 = *(_QWORD *)(v0 + 368);
    v77 = *(_QWORD *)(v0 + 344);
    v78 = *(_QWORD *)(v0 + 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v78, v72, v74);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v78, 0, 1, v74);
    sub_100012CE8(v78, v77, &qword_1005CEEA0);
    EntityProperty.wrappedValue.setter(v77);
    sub_100012DDC(v78, &qword_1005CEEA0);

    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
    swift_task_dealloc(v72);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v85);
    swift_task_dealloc(v87);
    swift_task_dealloc(v89);
    swift_task_dealloc(v91);
    swift_task_dealloc(v93);
    swift_task_dealloc(v95);
    swift_task_dealloc(v97);
    swift_task_dealloc(v99);
    swift_task_dealloc(v101);
    swift_task_dealloc(v103);
    swift_task_dealloc(v107);
    swift_task_dealloc(v78);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v15 = *(_QWORD *)(v0 + 584);
  v16 = *(_QWORD *)(v0 + 512);
  v104 = *(_QWORD *)(v0 + 504);
  v18 = *(_QWORD *)(v0 + 488);
  v17 = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 304) = v11;
  *(_QWORD *)(v0 + 312) = v13;
  v19 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = sub_100019C6C(&qword_1005D7AF8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  AttributedStringProtocol.range<A>(of:options:locale:)(v0 + 304, 0, v18, v15, &type metadata for String, v20, v10);
  sub_100012DDC(v18, &qword_1005D7AE0);
  swift_bridgeObjectRelease(v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v104) == 1)
  {
    v21 = *(_QWORD *)(v0 + 496);
    v22 = (uint64_t *)&unk_1005D7AE8;
LABEL_20:
    sub_100012DDC(v21, v22);
    goto LABEL_21;
  }
  v23 = *(_QWORD *)(v0 + 536);
  v24 = *(_QWORD *)(v0 + 504);
  v25 = *(_QWORD *)(v0 + 456);
  v26 = sub_10014BD1C(*(_QWORD *)(v0 + 496), v23, &qword_1005D7AF0);
  AttributedString.characters.getter(v26);
  v90 = v24;
  v27 = v23 + *(int *)(v24 + 36);
  v28 = sub_100019C6C((unint64_t *)&unk_1005D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v27, v27, v25, v28);
  if ((result & 1) != 0)
  {
    v30 = *(_QWORD *)(v0 + 472);
    v31 = *(_QWORD *)(v0 + 456);
    v33 = *(_QWORD *)(v0 + 432);
    v32 = *(_QWORD *)(v0 + 440);
    v96 = v28;
    v35 = *(_QWORD *)(v0 + 416);
    v34 = *(_QWORD *)(v0 + 424);
    v36 = *(_QWORD *)(v0 + 408);
    v105 = *(_QWORD *)(v0 + 400);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 16);
    v37(v35, v27, v31);
    v38 = v35;
    v39 = v96;
    sub_1001BEDA8(v38, v36);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    v94 = v37;
    v37(v30, v36, v31);
    v40 = v36 + *(int *)(v105 + 36);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v30, v40, v31, v96) & 1) != 0)
    {
      v92 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 8);
LABEL_13:
      v58 = v92;
      v92(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      v59 = 1;
    }
    else
    {
      v88 = *(_QWORD *)(v0 + 464);
      v84 = *(_QWORD *)(v0 + 376);
      v86 = v0 + 224;
      v81 = v40;
      while (1)
      {
        v100 = *(_QWORD *)(v0 + 528);
        v41 = *(_QWORD *)(v0 + 520);
        v98 = v41;
        v42 = *(_QWORD *)(v0 + 456);
        v102 = *(_QWORD *)(v0 + 472);
        v106 = *(_QWORD *)(v0 + 424);
        v43 = *(_QWORD *)(v0 + 384);
        v44 = *(_QWORD *)(v0 + 392);
        v45 = v44 + *(int *)(v84 + 48);
        v94(v44, *(_QWORD *)(v0 + 408), v42);
        v94(v45, v40, v42);
        v46 = v43 + *(int *)(v84 + 48);
        v94(v43, v44, v42);
        v94(v46, v45, v42);
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
        v47(v41, v43, v42);
        v48 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
        v48(v46, v42);
        v49 = v43 + *(int *)(v84 + 48);
        v47(v43, v44, v42);
        v47(v49, v45, v42);
        v47(v98 + *(int *)(v90 + 36), v49, v42);
        v92 = v48;
        v48(v43, v42);
        sub_10014BD1C(v98, v100, &qword_1005D7AF0);
        v50 = sub_100019C6C((unint64_t *)&unk_1005D1F30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
        dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)(v102, v100, v106, v50);
        sub_100012DDC(v100, &qword_1005D7AF0);
        v51 = dispatch thunk of Collection.subscript.read(v86, v102, v106, v50);
        v53 = *v52;
        v54 = v52[1];
        swift_bridgeObjectRetain(v54);
        ((void (*)(uint64_t, _QWORD))v51)(v86, 0);
        LOBYTE(v51) = Character.isWhitespace.getter(v53, v54);
        swift_bridgeObjectRelease(v54);
        v55 = *(_QWORD *)(v0 + 472);
        v56 = *(_QWORD *)(v0 + 456);
        if ((v51 & 1) == 0)
          break;
        dispatch thunk of Collection.formIndex(after:)(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 424), v50);
        v39 = v96;
        v57 = dispatch thunk of static Equatable.== infix(_:_:)(v55, v81, v56, v96);
        v40 = v81;
        if ((v57 & 1) != 0)
          goto LABEL_13;
      }
      v47(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      v59 = 0;
      v39 = v96;
      v58 = v48;
    }
    v60 = *(_QWORD *)(v0 + 456);
    v61 = *(_QWORD *)(v0 + 464);
    v62 = *(_QWORD *)(v0 + 448);
    v64 = *(_QWORD *)(v0 + 408);
    v63 = *(_QWORD *)(v0 + 416);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v62, v59, 1, v60);
    sub_100012DDC(v64, &qword_1005D7AC8);
    sub_100012DDC(v63, &qword_1005D7AD0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v62, 1, v60) == 1)
    {
      v65 = *(_QWORD *)(v0 + 448);
      AttributedString.endIndex.getter();
      sub_100012DDC(v65, &qword_1005D7AD8);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 32))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
    }
    result = dispatch thunk of static Equatable.== infix(_:_:)(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 456), v39);
    if ((result & 1) != 0)
    {
      v66 = *(_QWORD *)(v0 + 536);
      v67 = *(_QWORD *)(v0 + 480);
      v68 = *(_QWORD *)(v0 + 456);
      v70 = *(_QWORD *)(v0 + 360);
      v69 = *(_QWORD *)(v0 + 368);
      v94(v69, v67, v68);
      v71 = sub_100016638(&qword_1005D7B10, (uint64_t *)&unk_1005D7AB8, (uint64_t)&protocol conformance descriptor for PartialRangeUpTo<A>);
      AttributedString.removeSubrange<A>(_:)(v69, v70, v71);
      sub_100012DDC(v69, (uint64_t *)&unk_1005D7AB8);
      v58(v67, v68);
      v22 = &qword_1005D7AF0;
      v21 = v66;
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C7FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 640) = v1;
  if (v1)
    v2 = sub_1002C880C;
  else
    v2 = sub_1002C8020;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002C8020()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v1 = *(void **)(v0 + 632);
  v2 = *(void **)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));

  AttributedString.init(_:)(v3);
  v4 = *(_QWORD *)(v0 + 560);
  v5 = *(_QWORD *)(v0 + 552);
  v6 = *(_QWORD *)(v0 + 544);
  type metadata accessor for NoteEntity(0);
  v7 = EntityProperty.wrappedValue.getter();
  v8 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 280) = v8;
  static CharacterSet.whitespacesAndNewlines.getter(v7);
  v9 = sub_1001452E8();
  v10 = StringProtocol.trimmingCharacters(in:)(v4, &type metadata for String, v9);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    swift_bridgeObjectRelease(v12);
LABEL_21:
    v71 = *(_QWORD *)(v0 + 600);
    v72 = *(_QWORD *)(v0 + 592);
    v73 = *(_QWORD *)(v0 + 584);
    v74 = *(_QWORD *)(v0 + 576);
    v75 = *(_QWORD *)(v0 + 560);
    v78 = *(_QWORD *)(v0 + 536);
    v80 = *(_QWORD *)(v0 + 528);
    v81 = *(_QWORD *)(v0 + 520);
    v83 = *(_QWORD *)(v0 + 496);
    v85 = *(_QWORD *)(v0 + 488);
    v87 = *(_QWORD *)(v0 + 480);
    v89 = *(_QWORD *)(v0 + 472);
    v91 = *(_QWORD *)(v0 + 448);
    v93 = *(_QWORD *)(v0 + 440);
    v95 = *(_QWORD *)(v0 + 416);
    v97 = *(_QWORD *)(v0 + 408);
    v99 = *(_QWORD *)(v0 + 392);
    v101 = *(_QWORD *)(v0 + 384);
    v105 = *(_QWORD *)(v0 + 368);
    v76 = *(_QWORD *)(v0 + 344);
    v77 = *(_QWORD *)(v0 + 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v77, v71, v73);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v77, 0, 1, v73);
    sub_100012CE8(v77, v76, &qword_1005CEEA0);
    EntityProperty.wrappedValue.setter(v76);
    sub_100012DDC(v77, &qword_1005CEEA0);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
    swift_task_dealloc(v71);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v83);
    swift_task_dealloc(v85);
    swift_task_dealloc(v87);
    swift_task_dealloc(v89);
    swift_task_dealloc(v91);
    swift_task_dealloc(v93);
    swift_task_dealloc(v95);
    swift_task_dealloc(v97);
    swift_task_dealloc(v99);
    swift_task_dealloc(v101);
    swift_task_dealloc(v105);
    swift_task_dealloc(v77);
    swift_task_dealloc(v76);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 584);
  v15 = *(_QWORD *)(v0 + 512);
  v102 = *(_QWORD *)(v0 + 504);
  v17 = *(_QWORD *)(v0 + 488);
  v16 = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 304) = v10;
  *(_QWORD *)(v0 + 312) = v12;
  v18 = type metadata accessor for Locale(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = sub_100019C6C(&qword_1005D7AF8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  AttributedStringProtocol.range<A>(of:options:locale:)(v0 + 304, 0, v17, v14, &type metadata for String, v19, v9);
  sub_100012DDC(v17, &qword_1005D7AE0);
  swift_bridgeObjectRelease(v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v102) == 1)
  {
    v20 = *(_QWORD *)(v0 + 496);
    v21 = (uint64_t *)&unk_1005D7AE8;
LABEL_20:
    sub_100012DDC(v20, v21);
    goto LABEL_21;
  }
  v22 = *(_QWORD *)(v0 + 536);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 456);
  v25 = sub_10014BD1C(*(_QWORD *)(v0 + 496), v22, &qword_1005D7AF0);
  AttributedString.characters.getter(v25);
  v88 = v23;
  v26 = v22 + *(int *)(v23 + 36);
  v27 = sub_100019C6C((unint64_t *)&unk_1005D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v26, v26, v24, v27);
  if ((result & 1) != 0)
  {
    v29 = *(_QWORD *)(v0 + 472);
    v30 = *(_QWORD *)(v0 + 456);
    v32 = *(_QWORD *)(v0 + 432);
    v31 = *(_QWORD *)(v0 + 440);
    v94 = v27;
    v34 = *(_QWORD *)(v0 + 416);
    v33 = *(_QWORD *)(v0 + 424);
    v35 = *(_QWORD *)(v0 + 408);
    v103 = *(_QWORD *)(v0 + 400);
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 16);
    v36(v34, v26, v30);
    v37 = v34;
    v38 = v94;
    sub_1001BEDA8(v37, v35);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    v92 = v36;
    v36(v29, v35, v30);
    v39 = v35 + *(int *)(v103 + 36);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v29, v39, v30, v94) & 1) != 0)
    {
      v90 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 8);
LABEL_13:
      v57 = v90;
      v90(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      v58 = 1;
    }
    else
    {
      v86 = *(_QWORD *)(v0 + 464);
      v82 = *(_QWORD *)(v0 + 376);
      v84 = v0 + 224;
      v79 = v39;
      while (1)
      {
        v40 = *(_QWORD *)(v0 + 520);
        v96 = v40;
        v98 = *(_QWORD *)(v0 + 528);
        v41 = *(_QWORD *)(v0 + 456);
        v100 = *(_QWORD *)(v0 + 472);
        v104 = *(_QWORD *)(v0 + 424);
        v42 = *(_QWORD *)(v0 + 384);
        v43 = *(_QWORD *)(v0 + 392);
        v44 = v43 + *(int *)(v82 + 48);
        v92(v43, *(_QWORD *)(v0 + 408), v41);
        v92(v44, v39, v41);
        v45 = v42 + *(int *)(v82 + 48);
        v92(v42, v43, v41);
        v92(v45, v44, v41);
        v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32);
        v46(v40, v42, v41);
        v47 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
        v47(v45, v41);
        v48 = v42 + *(int *)(v82 + 48);
        v46(v42, v43, v41);
        v46(v48, v44, v41);
        v46(v96 + *(int *)(v88 + 36), v48, v41);
        v90 = v47;
        v47(v42, v41);
        sub_10014BD1C(v96, v98, &qword_1005D7AF0);
        v49 = sub_100019C6C((unint64_t *)&unk_1005D1F30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
        dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)(v100, v98, v104, v49);
        sub_100012DDC(v98, &qword_1005D7AF0);
        v50 = dispatch thunk of Collection.subscript.read(v84, v100, v104, v49);
        v52 = *v51;
        v53 = v51[1];
        swift_bridgeObjectRetain(v53);
        ((void (*)(uint64_t, _QWORD))v50)(v84, 0);
        LOBYTE(v50) = Character.isWhitespace.getter(v52, v53);
        swift_bridgeObjectRelease(v53);
        v54 = *(_QWORD *)(v0 + 472);
        v55 = *(_QWORD *)(v0 + 456);
        if ((v50 & 1) == 0)
          break;
        dispatch thunk of Collection.formIndex(after:)(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 424), v49);
        v38 = v94;
        v56 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v79, v55, v94);
        v39 = v79;
        if ((v56 & 1) != 0)
          goto LABEL_13;
      }
      v46(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      v58 = 0;
      v38 = v94;
      v57 = v47;
    }
    v59 = *(_QWORD *)(v0 + 456);
    v60 = *(_QWORD *)(v0 + 464);
    v61 = *(_QWORD *)(v0 + 448);
    v63 = *(_QWORD *)(v0 + 408);
    v62 = *(_QWORD *)(v0 + 416);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, v58, 1, v59);
    sub_100012DDC(v63, &qword_1005D7AC8);
    sub_100012DDC(v62, &qword_1005D7AD0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v61, 1, v59) == 1)
    {
      v64 = *(_QWORD *)(v0 + 448);
      AttributedString.endIndex.getter();
      sub_100012DDC(v64, &qword_1005D7AD8);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 32))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
    }
    result = dispatch thunk of static Equatable.== infix(_:_:)(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 456), v38);
    if ((result & 1) != 0)
    {
      v65 = *(_QWORD *)(v0 + 536);
      v66 = *(_QWORD *)(v0 + 480);
      v67 = *(_QWORD *)(v0 + 456);
      v69 = *(_QWORD *)(v0 + 360);
      v68 = *(_QWORD *)(v0 + 368);
      v92(v68, v66, v67);
      v70 = sub_100016638(&qword_1005D7B10, (uint64_t *)&unk_1005D7AB8, (uint64_t)&protocol conformance descriptor for PartialRangeUpTo<A>);
      AttributedString.removeSubrange<A>(_:)(v68, v69, v70);
      sub_100012DDC(v68, (uint64_t *)&unk_1005D7AB8);
      v57(v66, v67);
      v21 = &qword_1005D7AF0;
      v20 = v65;
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C880C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 632);
  v2 = *(void **)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 576);
  v5 = *(_QWORD *)(v0 + 560);
  v6 = *(_QWORD *)(v0 + 536);
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(_QWORD *)(v0 + 520);
  v10 = *(_QWORD *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 448);
  v15 = *(_QWORD *)(v0 + 440);
  v16 = *(_QWORD *)(v0 + 416);
  v17 = *(_QWORD *)(v0 + 408);
  v18 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 384);
  v20 = *(_QWORD *)(v0 + 368);
  v21 = *(_QWORD *)(v0 + 352);
  v22 = *(_QWORD *)(v0 + 344);
  swift_willThrow();

  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C8970(uint64_t result, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;

  v4 = *(_QWORD *)(result + 32);
  if (a4)
  {
    v6 = sub_100012E18(&qword_1005D7A90);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = a4;
    v9 = a4;
    return swift_continuation_throwingResumeWithError(v4, v7);
  }
  else if (a2)
  {
    type metadata accessor for DocumentAttributeKey(0);
    v13 = v12;
    v14 = sub_100019C6C(&qword_1005CFA60, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_100453768);
    v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, v13, (char *)&type metadata for Any + 8, v14);
    v16 = *(_QWORD **)(*(_QWORD *)(v4 + 64) + 40);
    *v16 = a2;
    v16[1] = v15;
    v17 = a2;
    return swift_continuation_throwingResume(v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C8A48(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 32);
  **(_QWORD **)(*(_QWORD *)(v2 + 64) + 40) = a2;
  v3 = a2;
  return swift_continuation_resume(v2);
}

uint64_t sub_1002C8A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;

  if (qword_1005CEC28 != -1)
    swift_once(&qword_1005CEC28, sub_1002C5C14);
  v2 = static NoteEntity.defaultQuery;
  v3 = unk_100601BC0;
  v4 = qword_100601BC8;
  v5 = byte_100601BD0;
  v6 = byte_100601BD1;
  v7 = byte_100601BD2;
  v8 = byte_100601BD3;
  v9 = byte_100601BD4;
  *(_QWORD *)a1 = static NoteEntity.defaultQuery;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 25) = v6;
  *(_BYTE *)(a1 + 26) = v7;
  *(_BYTE *)(a1 + 27) = v8;
  *(_BYTE *)(a1 + 28) = v9;
  swift_retain(v2);
  swift_retain(v3);
  return swift_retain(v4);
}

uint64_t sub_1002C8B14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t NoteEntity.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;

  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = type metadata accessor for NoteID(0);
  v1 = sub_100019C6C((unint64_t *)&unk_1005D0AD0, (uint64_t (*)(uint64_t))&type metadata accessor for NoteID, (uint64_t)&protocol conformance descriptor for NoteID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0x69746E4565746F4ELL;
}

uint64_t NoteEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  void *v21;
  UIImage *v22;
  UIImage *v23;
  NSData *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  Swift::String v29;
  void *object;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  Swift::String v34;
  uint64_t v35;
  Swift::String v37;
  void *v38;
  Swift::String v39;
  Swift::String v40;
  void *v41;
  Swift::String v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  char v51;
  ValueMetadata *v52;
  unint64_t v53;

  v2 = v1;
  v49 = a1;
  v3 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for LocalizedStringResource(0);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  v47 = type metadata accessor for DisplayRepresentation.Image(0);
  v17 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = &type metadata for NotesFeature;
  v53 = sub_1000199D4();
  v50._countAndFlagsBits = (uint64_t)"AppShortcuts";
  v50._object = (void *)12;
  v51 = 2;
  v20 = isFeatureEnabled(_:)(&v50);
  sub_1000153C0(&v50);
  if ((v20 & 1) != 0
    && (v45 = type metadata accessor for NoteEntity(0), (v21 = *(void **)(v2 + *(int *)(v45 + 60))) != 0)
    && (v22 = (UIImage *)objc_msgSend(v21, "image")) != 0
    && (v23 = v22, v24 = UIImagePNGRepresentation(v22), v23, v24))
  {
    v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v43 = v26;
    v44 = v25;
    v27 = v26;

    v28 = v44;
    sub_10013DCA0(v44, v27);
    DisplayRepresentation.Image.init(data:isTemplate:)(v28, v27, 2);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v29);
    EntityProperty.wrappedValue.getter(&v50);
    object = v50._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v50);
    swift_bridgeObjectRelease(object);
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v31);
    LocalizedStringResource.init(stringInterpolation:)(v16);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v32);
    EntityProperty.wrappedValue.getter(&v50);
    v33 = v50._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v50);
    swift_bridgeObjectRelease(v33);
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v34);
    LocalizedStringResource.init(stringInterpolation:)(v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v8, 0, 1, v48);
    v35 = v47;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v5, v19, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v5, 0, 1, v35);
    DisplayRepresentation.init(title:subtitle:image:)(v10, v8, v5);
    sub_10013DD30(v44, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v35);
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
    type metadata accessor for NoteEntity(0);
    EntityProperty.wrappedValue.getter(&v50);
    v38 = v50._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v50);
    swift_bridgeObjectRelease(v38);
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v39);
    LocalizedStringResource.init(stringInterpolation:)(v16);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v40);
    EntityProperty.wrappedValue.getter(&v50);
    v41 = v50._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v50);
    swift_bridgeObjectRelease(v41);
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
    LocalizedStringResource.init(stringInterpolation:)(v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v8, 0, 1, v48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v5, 1, 1, v47);
    return DisplayRepresentation.init(title:subtitle:image:)(v10, v8, v5);
  }
}

uint64_t sub_1002C90D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C(&qword_1005D7920, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t static NoteEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for UTType(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.webArchive.getter(v1);
  v4 = type metadata accessor for NoteEntity(0);
  v5 = sub_100019C6C((unint64_t *)&unk_1005D78B0, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  return DataRepresentation.init(exportedContentType:exporting:)(v3, &unk_1005D78A8, 0, v4, v5);
}

uint64_t sub_1002C91CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D7B44);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1002C922C;
  v3[16] = a1;
  return swift_task_switch(sub_1002C92A8, 0, 0);
}

uint64_t sub_1002C922C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *v3;
  v8 = swift_task_dealloc(v6);
  if (!v2)
  {
    v8 = a1;
    v9 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
}

uint64_t sub_1002C9290()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_1002C92A8, 0, 0);
}

uint64_t sub_1002C92A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(void **)(v1 + *(int *)(type metadata accessor for NoteEntity(0) + 28));
  *(_QWORD *)(v0 + 136) = v2;
  if (v2)
  {
    v3 = unk_1005D0AC4;
    v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0AC0 + dword_1005D0AC0);
    v4 = v2;
    v5 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v0 + 144) = v5;
    *v5 = v0;
    v5[1] = sub_1002C94D0;
    return v21(v0 + 96, (uint64_t)v4, (uint64_t)sub_1002C9738, 0);
  }
  else
  {
    type metadata accessor for ICError(0);
    v8 = v7;
    *(_QWORD *)(v0 + 120) = 227;
    v9 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v9, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v11;
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v15;
    *(_QWORD *)(inited + 56) = v17;
    v18 = sub_1001356D4(inited);
    v19 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v20 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 112), v0 + 120, v18, v8, v19);
    swift_willThrow(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002C94D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002C9704;
  else
    v3 = sub_1002C9534;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002C9534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (*(_QWORD *)(v0 + 104) >> 60 != 15)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
  type metadata accessor for ICError(0);
  v2 = v1;
  *(_QWORD *)(v0 + 120) = 227;
  v3 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  *(_QWORD *)(inited + 40) = v5;
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v11;
  v12 = sub_1001356D4(inited);
  v13 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
  v14 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 112), v0 + 120, v12, v2, v13);
  swift_willThrow(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002C9704()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002C9738(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;

  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_opt_self(ICNote);
  v9 = swift_dynamicCastObjCClass(a1, v8);
  if (!v9)
    goto LABEL_5;
  v10 = (void *)v9;
  v11 = a1;
  v12 = objc_msgSend(v10, "textStorage");
  if (!v12)
  {

LABEL_5:
    v21 = 0;
    v23 = 0xF000000000000000;
    goto LABEL_6;
  }
  v13 = v12;
  v14 = static UTType.webArchive.getter();
  UTType.identifier.getter(v14);
  v25 = v11;
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = objc_msgSend(v13, "ic_range");
  v20 = objc_msgSend(v13, "copyDataForUTI:range:persistenceHelper:", v17, v18, v19, v10);

  v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

LABEL_6:
  *a2 = v21;
  a2[1] = v23;
}

uint64_t sub_1002C98B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = type metadata accessor for UTType(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.webArchive.getter(v5);
  return DataRepresentation.init(exportedContentType:exporting:)(v7, &unk_1005D78A8, 0, a1, a2);
}

uint64_t NoteEntity.init(for:in:includeContents:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v5 + 220) = a4;
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a5;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  v6 = sub_100012E18(&qword_1005D4680);
  *(_QWORD *)(v5 + 56) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NoteEntity(0);
  *(_QWORD *)(v5 + 64) = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 72) = swift_task_alloc(v8);
  *(_QWORD *)(v5 + 80) = swift_task_alloc(v8);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  *(_QWORD *)(v5 + 88) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 96) = v10;
  *(_QWORD *)(v5 + 104) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  *(_QWORD *)(v5 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v5 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v5 + 128) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002C9A64, 0, 0);
}

uint64_t sub_1002C9A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  _QWORD *v37;
  _QWORD *v39;
  int *v40;
  unsigned int v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v40 = *(int **)(v0 + 64);
  v43 = *(_QWORD *)(v0 + 24);
  v7 = v40[7];
  *(_DWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v43 + v7) = 0;
  v8 = v40[8];
  *(_DWORD *)(v0 + 188) = v8;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v9 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v9);
  v41 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v42 = *(void (**)(uint64_t))(v6 + 104);
  v42(v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v43 + v8) = EntityProperty<>.init(title:)(v1);
  v10 = v40[9];
  *(_DWORD *)(v0 + 192) = v10;
  v11 = String.LocalizationValue.init(stringLiteral:)(0x7972616D6D7553, 0xE700000000000000);
  static Locale.current.getter(v11);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v3, v41, v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v43 + v10) = EntityProperty<>.init(title:)(v1);
  v12 = v40[10];
  *(_DWORD *)(v0 + 196) = v12;
  sub_100012E18((uint64_t *)&unk_1005D7860);
  v13 = String.LocalizationValue.init(stringLiteral:)(2036625218, 0xE400000000000000);
  static Locale.current.getter(v13);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v3, v41, v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v43 + v12) = EntityProperty<>.init(title:)(v1);
  v14 = v40[11];
  *(_DWORD *)(v0 + 200) = v14;
  sub_100012E18((uint64_t *)&unk_1005CF120);
  v15 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v15);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v3, v41, v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  v16 = sub_100019C6C((unint64_t *)&qword_1005D7870, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  *(_QWORD *)(v43 + v14) = EntityProperty<>.init(title:)(v1, v16);
  v17 = v40[12];
  *(_DWORD *)(v0 + 204) = v17;
  sub_100012E18((uint64_t *)&unk_1005D3E40);
  v18 = String.LocalizationValue.init(stringLiteral:)(1936154964, 0xE400000000000000);
  static Locale.current.getter(v18);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v3, v41, v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  v19 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  *(_QWORD *)(v43 + v17) = EntityProperty<>.init(title:)(v1, v19);
  v20 = v40[13];
  *(_DWORD *)(v0 + 208) = v20;
  sub_100012E18(&qword_1005CF130);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x6E6F697461657243, 0xED00006574614420);
  static Locale.current.getter(v21);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v3, v41, v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v43 + v20) = EntityProperty<>.init(title:)(v1);
  v22 = v40[14];
  *(_DWORD *)(v0 + 212) = v22;
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001004781D0);
  static Locale.current.getter(v23);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v3, v41, v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v4, v3, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v43 + v22) = EntityProperty<>.init(title:)(v1);
  v24 = v40[15];
  *(_DWORD *)(v0 + 216) = v24;
  *(_QWORD *)(v43 + v24) = 0;
  if (qword_1005CEC98 != -1)
    swift_once(&qword_1005CEC98, sub_100326E74);
  TaskLocal.get()();
  v25 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 136) = v25;
  if (v25)
  {
    v27 = *(void **)(v0 + 48);
    v26 = *(_QWORD *)(v0 + 56);
    v28 = *(_BYTE *)(v0 + 220);
    v30 = *(void **)(v0 + 32);
    v29 = *(void **)(v0 + 40);
    v31 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v26, 1, 1, v31);
    v32 = swift_allocObject(&unk_100565C98, 48, 7);
    *(_QWORD *)(v0 + 144) = v32;
    *(_QWORD *)(v32 + 16) = v30;
    *(_QWORD *)(v32 + 24) = v29;
    *(_BYTE *)(v32 + 32) = v28;
    *(_QWORD *)(v32 + 40) = v27;
    v33 = unk_1005D78DC;
    v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005D78D8 + dword_1005D78D8);
    v34 = v30;
    v35 = v29;
    v36 = v27;
    v37 = (_QWORD *)swift_task_alloc(v33);
    *(_QWORD *)(v0 + 152) = v37;
    *v37 = v0;
    v37[1] = sub_1002CA05C;
    return v44(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56), (uint64_t)&unk_1005D78D0, v32);
  }
  else
  {
    v39 = (_QWORD *)swift_task_alloc(dword_1005D78C4);
    *(_QWORD *)(v0 + 168) = v39;
    *v39 = v0;
    v39[1] = sub_1002CA0E4;
    return sub_1002CACE0(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 220), *(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_1002CA05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  sub_100012DDC(v4, &qword_1005D4680);
  swift_release(v3);
  if (v0)
    v5 = sub_1002CA3E0;
  else
    v5 = sub_1002CA148;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002CA0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002CA528;
  else
    v3 = sub_1002CA298;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002CA148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release(*(_QWORD *)(v0 + 136));
  v13 = *(int *)(v0 + 212);
  v14 = *(int *)(v0 + 216);
  v1 = *(int *)(v0 + 200);
  v11 = *(int *)(v0 + 204);
  v12 = *(int *)(v0 + 208);
  v3 = *(int *)(v0 + 192);
  v2 = *(int *)(v0 + 196);
  v4 = *(int *)(v0 + 184);
  v5 = *(int *)(v0 + 188);
  v15 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 72);
  v19 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(void **)(v0 + 32);

  swift_release(*(_QWORD *)(v9 + v5));
  swift_release(*(_QWORD *)(v9 + v3));
  swift_release(*(_QWORD *)(v9 + v2));
  swift_release(*(_QWORD *)(v9 + v1));
  swift_release(*(_QWORD *)(v9 + v11));
  swift_release(*(_QWORD *)(v9 + v12));
  swift_release(*(_QWORD *)(v9 + v13));

  sub_10013B170(v6, v9, type metadata accessor for NoteEntity);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v6);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v13 = *(int *)(v0 + 212);
  v14 = *(int *)(v0 + 216);
  v1 = *(int *)(v0 + 200);
  v11 = *(int *)(v0 + 204);
  v12 = *(int *)(v0 + 208);
  v3 = *(int *)(v0 + 192);
  v2 = *(int *)(v0 + 196);
  v4 = *(int *)(v0 + 184);
  v5 = *(int *)(v0 + 188);
  v15 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(void **)(v0 + 32);

  swift_release(*(_QWORD *)(v9 + v5));
  swift_release(*(_QWORD *)(v9 + v3));
  swift_release(*(_QWORD *)(v9 + v2));
  swift_release(*(_QWORD *)(v9 + v1));
  swift_release(*(_QWORD *)(v9 + v11));
  swift_release(*(_QWORD *)(v9 + v12));
  swift_release(*(_QWORD *)(v9 + v13));

  sub_10013B170(v6, v9, type metadata accessor for NoteEntity);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v6);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release(*(_QWORD *)(v0 + 136));
  v1 = *(int *)(v0 + 204);
  v11 = *(int *)(v0 + 208);
  v12 = *(int *)(v0 + 212);
  v3 = *(int *)(v0 + 196);
  v2 = *(int *)(v0 + 200);
  v5 = *(int *)(v0 + 188);
  v4 = *(int *)(v0 + 192);
  v6 = *(int *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(int *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(void **)(v0 + 32);

  swift_release(*(_QWORD *)(v9 + v5));
  swift_release(*(_QWORD *)(v9 + v4));
  swift_release(*(_QWORD *)(v9 + v3));
  swift_release(*(_QWORD *)(v9 + v2));
  swift_release(*(_QWORD *)(v9 + v1));
  swift_release(*(_QWORD *)(v9 + v11));
  swift_release(*(_QWORD *)(v9 + v12));

  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(int *)(v0 + 204);
  v11 = *(int *)(v0 + 208);
  v12 = *(int *)(v0 + 212);
  v3 = *(int *)(v0 + 196);
  v2 = *(int *)(v0 + 200);
  v5 = *(int *)(v0 + 188);
  v4 = *(int *)(v0 + 192);
  v6 = *(int *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(int *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(void **)(v0 + 32);

  swift_release(*(_QWORD *)(v9 + v5));
  swift_release(*(_QWORD *)(v9 + v4));
  swift_release(*(_QWORD *)(v9 + v3));
  swift_release(*(_QWORD *)(v9 + v2));
  swift_release(*(_QWORD *)(v9 + v1));
  swift_release(*(_QWORD *)(v9 + v11));
  swift_release(*(_QWORD *)(v9 + v12));

  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t NoteEntity.init(for:in:includeContents:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v4 + 152) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = type metadata accessor for NoteEntity(0);
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  *(_QWORD *)(v4 + 56) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 72) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  *(_QWORD *)(v4 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v4 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002CA754, 0, 0);
}

uint64_t sub_1002CA754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  int *v34;
  unsigned int v35;
  uint64_t v36;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v36 = *(_QWORD *)(v0 + 56);
  v34 = *(int **)(v0 + 40);
  v31 = *(void **)(v0 + 24);
  v32 = *(void **)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = v34[7];
  *(_DWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v6 + v7) = 0;
  v8 = v6;
  v9 = v34[8];
  *(_DWORD *)(v0 + 124) = v9;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v10 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v10);
  v35 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v11 = *(void (**)(uint64_t))(v5 + 104);
  v11(v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v9) = EntityProperty<>.init(title:)(v1);
  v12 = v34[9];
  *(_DWORD *)(v0 + 128) = v12;
  v13 = String.LocalizationValue.init(stringLiteral:)(0x7972616D6D7553, 0xE700000000000000);
  static Locale.current.getter(v13);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v12) = EntityProperty<>.init(title:)(v1);
  v14 = v34[10];
  *(_DWORD *)(v0 + 132) = v14;
  sub_100012E18((uint64_t *)&unk_1005D7860);
  v15 = String.LocalizationValue.init(stringLiteral:)(2036625218, 0xE400000000000000);
  static Locale.current.getter(v15);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  v33 = v1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v14) = EntityProperty<>.init(title:)(v1);
  v16 = v34[11];
  *(_DWORD *)(v0 + 136) = v16;
  sub_100012E18((uint64_t *)&unk_1005CF120);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v17);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  v18 = sub_100019C6C((unint64_t *)&qword_1005D7870, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  *(_QWORD *)(v8 + v16) = EntityProperty<>.init(title:)(v1, v18);
  v19 = v34[12];
  *(_DWORD *)(v0 + 140) = v19;
  sub_100012E18((uint64_t *)&unk_1005D3E40);
  v20 = String.LocalizationValue.init(stringLiteral:)(1936154964, 0xE400000000000000);
  static Locale.current.getter(v20);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  v21 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  *(_QWORD *)(v8 + v19) = EntityProperty<>.init(title:)(v1, v21);
  v30 = v34[13];
  *(_DWORD *)(v0 + 144) = v30;
  sub_100012E18(&qword_1005CF130);
  v22 = String.LocalizationValue.init(stringLiteral:)(0x6E6F697461657243, 0xED00006574614420);
  static Locale.current.getter(v22);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v30) = EntityProperty<>.init(title:)(v1);
  v23 = v34[14];
  *(_DWORD *)(v0 + 148) = v23;
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001004781D0);
  static Locale.current.getter(v24);
  ((void (*)(uint64_t, _QWORD, uint64_t))v11)(v4, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Notes intent", 37, 2);
  *(_QWORD *)(v8 + v23) = EntityProperty<>.init(title:)(v33);
  *(_QWORD *)(v8 + v34[15]) = 0;
  v25 = dword_1005D7884;
  v26 = v31;
  v27 = v32;
  v28 = (_QWORD *)swift_task_alloc(v25);
  *(_QWORD *)(v0 + 104) = v28;
  *v28 = v0;
  v28[1] = sub_1002C54CC;
  return NoteEntity.init(for:in:includeContents:noteContext:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 152), 0);
}

uint64_t sub_1002CAC60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(dword_1005D78C4);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_100130768;
  return sub_1002CACE0(a1, a2, a3, a4, a5);
}

uint64_t sub_1002CACE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)(v5 + 168) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = type metadata accessor for NoteEntity.ContentResult(0);
  *(_QWORD *)(v5 + 48) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 56) = v7;
  *(_QWORD *)(v5 + 64) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D7A98);
  *(_QWORD *)(v5 + 72) = v8;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D7AA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 88) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 96) = swift_task_alloc(v9);
  return swift_task_switch(sub_1002CADA4, 0, 0);
}

uint64_t sub_1002CADA4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter();
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_1002CAE0C, v3, v4);
}

uint64_t sub_1002CAE0C()
{
  _QWORD *v0;
  uint64_t v1;

  swift_release(v0[13]);
  objc_msgSend((id)objc_opt_self(UIScreen), "ic_scale");
  v0[14] = v1;
  v0[15] = objc_msgSend((id)objc_opt_self(ICAppearanceInfo), "currentInfo");
  return swift_task_switch(sub_1002CAE88, 0, 0);
}

uint64_t sub_1002CAE88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(void **)(v0 + 32);
  v3 = *(void **)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 168);
  v6 = *(void **)(v0 + 24);
  v7 = swift_allocObject(&unk_100565D78, 64, 7);
  *(_QWORD *)(v0 + 128) = v7;
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v6;
  *(_BYTE *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v1;
  *(_QWORD *)(v7 + 56) = v3;
  v8 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v9 = v4;
  v10 = v6;
  v11 = v1;
  v12 = v3;
  v13 = (_QWORD *)swift_task_alloc(v8);
  *(_QWORD *)(v0 + 136) = v13;
  *v13 = v0;
  v13[1] = sub_1002CAF54;
  return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 80), sub_1002CE558, v7, *(_QWORD *)(v0 + 72));
}

uint64_t sub_1002CAF54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002CB200;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 128));
    v4 = sub_1002CAFC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002CAFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = v3 + *(int *)(*(_QWORD *)(v0 + 72) + 48);
  sub_10013B170(v3, *(_QWORD *)(v0 + 16), type metadata accessor for NoteEntity);
  sub_10014BD1C(v6, v2, &qword_1005D7AA0);
  sub_100012CE8(v2, v1, &qword_1005D7AA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4) == 1)
  {
    v7 = *(void **)(v0 + 120);
    sub_100012DDC(*(_QWORD *)(v0 + 96), &qword_1005D7AA0);

    v9 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 64);
    sub_100012DDC(v9, &qword_1005D7AA0);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_10013B170(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64), type metadata accessor for NoteEntity.ContentResult);
    v13 = (_QWORD *)swift_task_alloc(dword_1005D7AAC);
    *(_QWORD *)(v0 + 152) = v13;
    *v13 = v0;
    v13[1] = sub_1002CB110;
    return sub_1002C6ADC(*(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_1002CB110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002CB26C;
  else
    v3 = sub_1002CB174;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002CB174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);

  sub_100145264(v1, type metadata accessor for NoteEntity.ContentResult);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  sub_100012DDC(v3, &qword_1005D7AA0);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 128);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);

  sub_100145264(v2, type metadata accessor for NoteEntity.ContentResult);
  sub_100012DDC(v1, &qword_1005D7AA0);
  sub_100145264(v3, type metadata accessor for NoteEntity);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  v6 = type metadata accessor for Logger(0);
  v5[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[19] = v7;
  v5[20] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D4680);
  v5[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v5[22] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[23] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[24] = swift_task_alloc(v11);
  v5[25] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v5[26] = v12;
  v5[27] = static MainActor.shared.getter(v12);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor, v13);
  v5[28] = v14;
  v5[29] = v15;
  return swift_task_switch(sub_1002CB408, v14, v15);
}

uint64_t sub_1002CB408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[6];

  v1 = *(_QWORD *)(v0 + 136);
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 216));
    v2 = type metadata accessor for CancellationError(0);
    v3 = sub_100019C6C(&qword_1005D7A60, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
    swift_allocError(v2, v3, 0, 0);
    v4 = CancellationError.init()();
    swift_willThrow(v4);
    v5 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 200));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v37 = *(_QWORD *)(v1 + 24);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);
    UUID.init()();
    sub_100012CE8(v16, v13, &qword_1005D4680);
    v17 = (_QWORD *)swift_allocObject(&unk_100565D50, 48, 7);
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v14;
    v17[5] = v15;
    swift_retain(v15);
    v18 = sub_1003ABE60(v13, (uint64_t)&unk_1005D7A70, (uint64_t)v17);
    *(_QWORD *)(v0 + 240) = v18;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    *(_QWORD *)(v0 + 248) = v19;
    v19(v9, v10, v11);
    v38[3] = sub_100012E18(&qword_1005D7A78);
    v38[4] = &off_100568BC0;
    v38[0] = v18;
    v20 = v1 + 16;
    swift_beginAccess(v1 + 16, v0 + 16, 33, 0);
    swift_retain(v18);
    sub_1002CF698((uint64_t)v38, v9);
    swift_endAccess(v0 + 16);
    v21 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v22 = String._bridgeToObjectiveC()();
    LOBYTE(v11) = objc_msgSend(v21, "BOOLForKey:", v22);

    if ((v11 & 1) != 0)
    {
      v24 = *(_QWORD *)(v0 + 136);
      static Logger.ui.getter(v23);
      v25 = swift_retain(v24);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.debug.getter();
      v28 = os_log_type_enabled(v26, v27);
      v29 = *(_QWORD *)(v0 + 136);
      if (v28)
      {
        v30 = swift_slowAlloc(22, -1);
        *(_DWORD *)v30 = 134218240;
        *(_QWORD *)(v0 + 88) = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v30 + 4);
        *(_WORD *)(v30 + 12) = 2048;
        *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)v20 + 16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v30 + 14);
        swift_release(v29);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Added subtask to provisional background task (id=%ld, subtasks=%ld).", (uint8_t *)v30, 0x16u);
        swift_slowDealloc(v30, -1, -1);
      }
      else
      {
        swift_release(*(_QWORD *)(v0 + 136));
      }
      v32 = *(_QWORD *)(v0 + 152);
      v31 = *(_QWORD *)(v0 + 160);
      v33 = *(_QWORD *)(v0 + 144);

      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v34 = static MainActor.shared.getter(v23);
    *(_QWORD *)(v0 + 256) = v34;
    v35 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
    *(_QWORD *)(v0 + 264) = v35;
    v36 = type metadata accessor for NoteEntity(0);
    *v35 = v0;
    v35[1] = sub_1002CB7C4;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(*(_QWORD *)(v0 + 104), &unk_1005D7A88, v18, sub_1002CE500, v18, v34, &protocol witness table for MainActor, v36);
  }
}

uint64_t sub_1002CB7C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[28];
    v5 = v2[29];
    v6 = sub_1002CB92C;
  }
  else
  {
    swift_release(v2[32]);
    v4 = v2[28];
    v5 = v2[29];
    v6 = sub_1002CB830;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1002CB830()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 216));
  v1(v3, v4, v6);
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_beginAccess(v7 + 16, v0 + 64, 33, 0);
  sub_1002CF698((uint64_t)v11, v3);
  swift_endAccess(v0 + 64);
  sub_10032747C();
  swift_release(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB92C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[2];
  uint64_t v14;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 216));
  swift_release(v1);
  v2(v5, v4, v6);
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  swift_beginAccess(v8 + 16, v0 + 40, 33, 0);
  sub_1002CF698((uint64_t)v13, v5);
  swift_endAccess(v0 + 40);
  sub_10032747C();
  swift_release(v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  v9 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CBA2C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t result;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t ObjectType;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  NSObject *v110;
  os_log_type_t v111;
  int v112;
  BOOL v113;
  uint8_t *v114;
  id v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  void *v119;
  void (*v120)(char *, char *, uint64_t);
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  char v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  NSString v155;
  id v156;
  char *v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  void *v164;
  id v165;
  id v166;
  uint64_t v167;
  char *v168;
  id v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  id v178;
  uint64_t v179;
  id v180;
  char *v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187[2];
  __objc2_prot *v188;
  __objc2_prot *v189;
  __objc2_prot *v190;

  v178 = a5;
  v169 = a4;
  v179 = a6;
  v11 = sub_100012E18(&qword_1005D1EB0);
  __chkstk_darwin(v11);
  v177 = (char *)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v14 = __chkstk_darwin(v13);
  v181 = (char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v184 = (uint64_t)&v161 - v16;
  v17 = type metadata accessor for NoteID(0);
  __chkstk_darwin(v17);
  v183 = (uint64_t)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v21 = (char *)&v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for UTType(0);
  v172 = *(_QWORD *)(v173 - 8);
  v22 = __chkstk_darwin(v173);
  v171 = (char *)&v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v161 - v24;
  v26 = sub_100012E18(&qword_1005CEEA0);
  __chkstk_darwin(v26);
  v28 = (char *)&v161 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for AttributedString(0);
  v174 = *(_QWORD *)(v29 - 8);
  v175 = v29;
  v30 = __chkstk_darwin(v29);
  v168 = (char *)&v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v33 = (char *)&v161 - v32;
  v34 = type metadata accessor for NoteEntity(0);
  __chkstk_darwin(v34);
  v176 = (uint64_t)&v161 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100012E18(&qword_1005D7AA0);
  __chkstk_darwin(v36);
  v182 = (uint64_t *)((char *)&v161 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v187[0] = 0;
  v38 = objc_msgSend(a1, "existingObjectWithID:error:", a2, v187);
  v39 = v187[0];
  if (!v38)
  {
    v47 = v187[0];
    _convertNSErrorToError(_:)(v39);

    return swift_willThrow(v48);
  }
  v190 = &OBJC_PROTOCOL___ICSearchIndexableNote;
  v180 = v38;
  v40 = (void *)swift_dynamicCastObjCProtocolUnconditional(v38, 1, &v190, 0, 0, 0);
  v41 = objc_opt_self(ICNote);
  v42 = (void *)swift_dynamicCastObjCClass(v40, v41);
  v43 = v39;
  if (!v42)
    goto LABEL_9;
  v167 = v19;
  v44 = v180;
  v45 = objc_msgSend(v42, "textStorage");
  if (!v45)
  {
    v46 = v44;
    goto LABEL_8;
  }
  v46 = v45;
  if ((objc_msgSend(v42, "isPasswordProtected") & 1) != 0)
  {

LABEL_8:
LABEL_9:
    if ((a3 & 1) == 0)
    {
      v55 = 0;
      v57 = 0xE000000000000000;
      v51 = v177;
      v52 = (uint64_t)v181;
      goto LABEL_14;
    }
    v188 = &OBJC_PROTOCOL___ICLegacyNote;
    v50 = (void *)swift_dynamicCastObjCProtocolConditional(v40, 1, &v188);
    v51 = v177;
    v52 = (uint64_t)v181;
    if (v50)
    {
      v53 = objc_msgSend(v50, "htmlString");
      if (v53)
      {
        v54 = v53;
        v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
        v57 = v56;

LABEL_14:
        v58 = v182;
        *v182 = v55;
        v58[1] = v57;
        v59 = type metadata accessor for NoteEntity.ContentResult(0);
        swift_storeEnumTagMultiPayload(v58, v59, 1);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 0, 1, v59);
        goto LABEL_16;
      }
    }
    v60 = type metadata accessor for NoteEntity.ContentResult(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v182, 1, 1, v60);
LABEL_16:
    ObjectType = swift_getObjectType(v40);
    ICSearchIndexableNote<>.entityIdentifier.getter(ObjectType);
    v177 = (char *)objc_msgSend(v40, "objectID");
    v62 = objc_msgSend(v40, "title");
    if (v62)
    {
      v63 = v62;
      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v66 = v65;

    }
    else
    {
      v64 = 0;
      v66 = 0xE000000000000000;
    }
    v67 = objc_msgSend(v40, "contentInfoText");
    v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v70 = v69;

    v71 = objc_msgSend(v40, "creationDate");
    if (v71)
    {
      v72 = v71;
      v73 = v51;
      v74 = v184;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v71);

      v75 = type metadata accessor for Date(0);
      v76 = v74;
      v51 = v73;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v76, 0, 1, v75);
    }
    else
    {
      v77 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v184, 1, 1, v77);
    }
    v78 = objc_msgSend(v40, "modificationDate");
    if (v78)
    {
      v79 = v78;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v78);

      v80 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v52, 0, 1, v80);
    }
    else
    {
      v81 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v52, 1, 1, v81);
    }
    v82 = objc_msgSend(v40, "folder");
    if (v82)
    {
      v83 = v82;
      v189 = &OBJC_PROTOCOL___ICFolderObject;
      v84 = swift_dynamicCastObjCProtocolConditional(v82, 1, &v189);
      if (v84)
      {
        v86 = v84;
        v87 = swift_getObjectType(v83);
        v88 = sub_10016EF58();
        v89 = v87;
        v52 = (uint64_t)v181;
        v90 = swift_dynamicCastMetatype(v89, v88) ? (void *)v86 : 0;
        if (v90)
        {
          swift_unknownObjectRetain(v83);
          sub_1003DCD14(v90, (uint64_t)v51);
          v91 = type metadata accessor for FolderEntity(0);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v51, 0, 1, v91);
          swift_unknownObjectRelease(v83, v92);
LABEL_34:
          v94 = (uint64_t)v178;
          v95 = v178;
          v96 = v176;
          sub_1002C6298(v183, v177, v64, v66, v68, v70, v184, v52, v176, (uint64_t)v51, v94);

          v97 = sub_100012E18(&qword_1005D7A98);
          v98 = v179 + *(int *)(v97 + 48);
          sub_10013B170(v96, v179, type metadata accessor for NoteEntity);
          return sub_10014BD1C((uint64_t)v182, v98, &qword_1005D7AA0);
        }
      }
      swift_unknownObjectRelease(v83, v85);
    }
    v93 = type metadata accessor for FolderEntity(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v51, 1, 1, v93);
    goto LABEL_34;
  }
  v166 = v46;
  if ((a3 & 1) != 0)
  {
    ((void (*)(void))static UTType.rtf.getter)();
    v99 = v46;
    v165 = objc_msgSend(v99, "ic_range");
    v164 = v100;
    v162 = v99;
    v101 = objc_msgSend(v99, "string");
    v163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
    v103 = v102;

    v165 = (id)Range<>.init(_:in:)(v165, v164, v163, v103);
    v164 = v104;
    LOBYTE(v101) = v105;
    result = swift_bridgeObjectRelease(v103);
    if ((v101 & 1) != 0)
    {
      __break(1u);
      goto LABEL_47;
    }

    ICNote.attributedString(for:range:)(v25, v165, v164);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v25, v173);
    v106 = v174;
    v107 = v175;
  }
  else
  {
    AttributedString.init(stringLiteral:)(0, 0xE000000000000000);
    v106 = v174;
    v107 = v175;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v28, 0, 1, v175);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v28, 1, v107) != 1)
  {
    v120 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
    v120(v33, v28, v107);
    v121 = objc_allocWithZone((Class)ICThumbnailConfiguration);
    v122 = objc_msgSend(v121, "initForShortcutsWithNote:preferredSize:scale:appearanceInfo:", v42, v169, 52.0, 52.0, a7);

    v123 = sub_100012E18(&qword_1005D7B18);
    v124 = v107;
    v125 = *(int *)(v123 + 48);
    v126 = v182;
    v120((char *)v182, v33, v124);
    *(uint64_t *)((char *)v126 + v125) = (uint64_t)v122;
    v127 = type metadata accessor for NoteEntity.ContentResult(0);
    swift_storeEnumTagMultiPayload(v126, v127, 0);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v126, 0, 1, v127);
    v51 = v177;
    v52 = (uint64_t)v181;
    goto LABEL_16;
  }
  v108 = sub_100012DDC((uint64_t)v28, &qword_1005CEEA0);
  static Logger.link.getter(v108);
  v109 = v44;
  v110 = Logger.logObject.getter(v109);
  v111 = static os_log_type_t.error.getter();
  v112 = v111;
  v113 = os_log_type_enabled(v110, v111);
  v169 = v109;
  if (v113)
  {
    LODWORD(v165) = v112;
    v114 = (uint8_t *)swift_slowAlloc(12, -1);
    v164 = (void *)swift_slowAlloc(32, -1);
    v187[0] = v164;
    *(_DWORD *)v114 = 136315138;
    v163 = (uint64_t)(v114 + 4);
    v115 = objc_msgSend(v42, "loggingDescription");
    v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
    v118 = v117;

    v185 = sub_1003A4190(v116, v118, (uint64_t *)v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, &v186, v163);

    swift_bridgeObjectRelease(v118);
    _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v165, "NoteEntity: styled text was unexpected nil for note: %s", v114, 0xCu);
    v119 = v164;
    swift_arrayDestroy(v164, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v119, -1, -1);
    swift_slowDealloc(v114, -1, -1);

  }
  else
  {

  }
  v128 = (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v21, v170);
  v129 = v171;
  v130 = v166;
  static UTType.rtf.getter(v128);
  v131 = v130;
  v132 = objc_msgSend(v131, "ic_range");
  v134 = v133;
  v135 = objc_msgSend(v131, "string");
  v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v135);
  v138 = v137;

  v139 = (void *)Range<>.init(_:in:)(v132, v134, v136, v138);
  v141 = v140;
  LOBYTE(v135) = v142;
  result = swift_bridgeObjectRelease(v138);
  if ((v135 & 1) == 0)
  {

    v187[0] = v139;
    v187[1] = v141;
    v143 = objc_msgSend(v131, "string");
    v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(v143);
    v146 = v145;

    v185 = v144;
    v186 = v146;
    v147 = sub_100012E18(&qword_1005D7B30);
    v148 = sub_100016638(&qword_1005D7B38, &qword_1005D7B30, (uint64_t)&protocol conformance descriptor for Range<A>);
    v149 = sub_1001452E8();
    v150 = _NSRange.init<A, B>(_:in:)(v187, &v185, v147, &type metadata for String, v148, v149);
    v152 = v151;
    UTType.identifier.getter(v150);
    v154 = v153;
    v155 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v154);
    v156 = objc_msgSend(v131, "filteredAttributedStringForUTI:range:", v155, v150, v152);

    v157 = v168;
    AttributedString.init(_:)(v156);

    (*(void (**)(char *, uint64_t))(v172 + 8))(v129, v173);
    v158 = *(int *)(sub_100012E18(&qword_1005D7B18) + 48);
    v159 = v182;
    (*(void (**)(uint64_t *, char *, uint64_t))(v174 + 32))(v182, v157, v175);
    *(uint64_t *)((char *)v159 + v158) = 0;
    v160 = type metadata accessor for NoteEntity.ContentResult(0);
    swift_storeEnumTagMultiPayload(v159, v160, 0);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 56))(v159, 0, 1, v160);
    v52 = (uint64_t)v181;
    v51 = v177;
    goto LABEL_16;
  }
LABEL_47:
  __break(1u);
  return result;
}

void sub_1002CC7A8(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;

  NoteID.managedIdentifier.getter();
  v5 = v4;
  v6 = a1;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend((id)objc_opt_self(ICNote), "noteWithIdentifier:context:", v7, v6);

  if (v8)
  {
    v9 = objc_msgSend(v8, "objectID");

  }
  else
  {
    v9 = 0;
  }
  *a2 = v9;
}

void sub_1002CC874(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  id v8;
  uint64_t v9;

  NoteID.managedIdentifier.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend(a1, "legacyNoteWithIdentifier:", v6);

  if (v7)
  {
    v8 = objc_msgSend(v7, "objectID");
    swift_unknownObjectRelease(v7, v9);
  }
  else
  {
    v8 = 0;
  }
  *a2 = v8;
}

uint64_t sub_1002CC920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D7854);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100145358;
  return NoteEntity.init(for:in:)(a1, a2, a3);
}

uint64_t sub_1002CC988(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1005D78E4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_100145358;
  return NoteEntity.init(for:in:includeContents:)(a1, a2, a3, a4);
}

uint64_t sub_1002CC9F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(dword_1005D7884);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_100145358;
  return NoteEntity.init(for:in:includeContents:noteContext:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1002CCA78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D7890 + dword_1005D7890);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D7894);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100159034;
  return v7(a1, a2);
}

uint64_t sub_1002CCAE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;

  v2 = sub_100012E18(&qword_1005D7B48);
  v3 = EntityQuerySort.by.getter();
  v4 = EntityQuerySort.order.getter(v2) & 1;
  v5 = type metadata accessor for NoteEntity(0);
  v6 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v7 = static EntityQuerySort.Ordering.== infix(_:_:)(v4, 0, v5, v6);
  result = sub_1002CE958(v3, (v7 & 1) == 0);
  *a1 = result;
  return result;
}

void sub_1002CCB80(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, "title");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_1002CCBD4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_100145358;
  return v8(a1);
}

uint64_t sub_1002CCC38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v2[4] = v6;
  v7 = type metadata accessor for NoteEntity(0);
  v8 = sub_100012E18(&qword_1005D7A90);
  *v6 = v2;
  v6[1] = sub_1002CCCDC;
  return Task.value.getter(a1, a2, v7, v8, &protocol self-conformance witness table for Error);
}

uint64_t sub_1002CCCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc(v2);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  if (v0)
    v7 = sub_1002CCD98;
  else
    v7 = sub_1002CCD64;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1002CCD64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CCD98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002CCDCC()
{
  type metadata accessor for NoteEntity(0);
  sub_100012E18(&qword_1005D7A90);
  Task.cancel()();
}

uint64_t sub_1002CCE14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for NoteID(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v2[9] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v6);
  v2[11] = swift_task_alloc(v6);
  v7 = type metadata accessor for Logger(0);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D1080);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ManagedEntityContextType(0);
  v2[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[17] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v12);
  v2[19] = swift_task_alloc(v12);
  return swift_task_switch(sub_1002CCF0C, 0, 0);
}

uint64_t sub_1002CCF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(_QWORD *@<X8>);
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  _QWORD *v58;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  NoteID.contextType.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = sub_100012DDC(*(_QWORD *)(v0 + 120), &qword_1005D1080);
    static Logger.link.getter(v8);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
    v10 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.error.getter(v10, v11);
    v13 = os_log_type_enabled(v10, v12);
    v15 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 56);
    if (v13)
    {
      v68 = *(_QWORD *)(v0 + 64);
      v70 = *(_QWORD *)(v0 + 112);
      v69 = *(_QWORD *)(v0 + 96);
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v71 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = sub_100019C6C((unint64_t *)&unk_1005D0AD0, (uint64_t (*)(uint64_t))&type metadata accessor for NoteID, (uint64_t)&protocol conformance descriptor for NoteID);
      v22 = dispatch thunk of CustomStringConvertible.description.getter(v18, v21);
      v24 = v23;
      *(_QWORD *)(v0 + 32) = sub_1003A4190(v22, v23, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v19 + 4);
      swift_bridgeObjectRelease(v24);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v16, v18);
      _os_log_impl((void *)&_mh_execute_header, v10, v12, "NoteEntity: Unexpectedly found nil context type, default to modern context for id: %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v70, v69);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v17);
    }
    v25 = enum case for ManagedEntityContextType.modern(_:);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 104))(*(_QWORD *)(v0 + 152), enum case for ManagedEntityContextType.modern(_:), *(_QWORD *)(v0 + 128));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
    v25 = enum case for ManagedEntityContextType.modern(_:);
  }
  v26 = *(_QWORD *)(v0 + 144);
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 16))(v26, *(_QWORD *)(v0 + 152), v27);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88))(v26, v27);
  if (v29 == v25)
  {
    v31 = *(_QWORD *)(v0 + 72);
    v30 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 56);
    v33 = *(_QWORD *)(v0 + 64);
    v34 = *(_QWORD *)(v0 + 40);
    v35 = objc_msgSend(*(id *)(v0 + 48), "modernManagedObjectContext");
    *(_QWORD *)(v0 + 160) = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v30, v34, v32);
    v36 = *(unsigned __int8 *)(v33 + 80);
    v37 = (v36 + 16) & ~v36;
    v38 = (v31 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject(&unk_100565DF8, v38 + 8, v36 | 7);
    *(_QWORD *)(v0 + 168) = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v39 + v37, v30, v32);
    *(_QWORD *)(v39 + v38) = v35;
    v40 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    v35;
    v41 = (_QWORD *)swift_task_alloc(v40);
    *(_QWORD *)(v0 + 176) = v41;
    v42 = sub_100012E18(&qword_1005D1230);
    *v41 = v0;
    v41[1] = sub_1002CD418;
    v43 = sub_1002CE6F4;
    v44 = v0 + 24;
    v45 = v39;
    return NSManagedObjectContext.perform<A>(_:)(v44, v43, v45, v42);
  }
  if (v29 == enum case for ManagedEntityContextType.html(_:))
  {
    v46 = objc_msgSend(*(id *)(v0 + 48), "htmlManagedObjectContext");
    *(_QWORD *)(v0 + 184) = v46;
    if (v46)
    {
      v47 = v46;
      v49 = *(_QWORD *)(v0 + 72);
      v48 = *(_QWORD *)(v0 + 80);
      v50 = *(_QWORD *)(v0 + 56);
      v51 = *(_QWORD *)(v0 + 64);
      v52 = *(void **)(v0 + 48);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 16))(v48, *(_QWORD *)(v0 + 40), v50);
      v53 = *(unsigned __int8 *)(v51 + 80);
      v54 = (v53 + 24) & ~v53;
      v55 = swift_allocObject(&unk_100565DD0, v54 + v49, v53 | 7);
      *(_QWORD *)(v0 + 192) = v55;
      *(_QWORD *)(v55 + 16) = v52;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v55 + v54, v48, v50);
      v56 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
      v47;
      v57 = v52;
      v58 = (_QWORD *)swift_task_alloc(v56);
      *(_QWORD *)(v0 + 200) = v58;
      v42 = sub_100012E18(&qword_1005D1230);
      *v58 = v0;
      v58[1] = sub_1002CD508;
      v43 = sub_1002CE634;
      v44 = v0 + 16;
      v45 = v55;
      return NSManagedObjectContext.perform<A>(_:)(v44, v43, v45, v42);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  }
  else
  {
    v60 = *(_QWORD *)(v0 + 144);
    v61 = *(_QWORD *)(v0 + 128);
    v62 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8);
    v62(*(_QWORD *)(v0 + 152), v61);
    v62(v60, v61);
  }
  v63 = *(_QWORD *)(v0 + 144);
  v65 = *(_QWORD *)(v0 + 112);
  v64 = *(_QWORD *)(v0 + 120);
  v67 = *(_QWORD *)(v0 + 80);
  v66 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1002CD418()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_release(v1);
  return swift_task_switch(sub_1002CD474, 0, 0);
}

uint64_t sub_1002CD474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1002CD508()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v2 = *(void **)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  swift_release(v1);

  return swift_task_switch(sub_1002CD56C, 0, 0);
}

uint64_t sub_1002CD56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1002CD5FC()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002CD630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_1005D78CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  v9 = (_QWORD *)swift_task_alloc(dword_1005D78C4);
  v8[2] = v9;
  *v9 = v8;
  v9[1] = sub_100130768;
  return sub_1002CACE0(a1, v4, v5, v6, v7);
}

uint64_t sub_1002CD6C8()
{
  return sub_100019C6C(&qword_1005D78E8, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD6F4()
{
  return sub_100019C6C(&qword_1005D78F0, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD720()
{
  return sub_100019C6C(&qword_1005D78F8, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD74C()
{
  return sub_100019C6C(&qword_1005D0278, (uint64_t (*)(uint64_t))&type metadata accessor for NoteID, (uint64_t)&protocol conformance descriptor for NoteID);
}

uint64_t sub_1002CD778()
{
  return sub_100019C6C(&qword_1005D7900, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD7A4()
{
  return sub_100019C6C(&qword_1005D7908, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD7D0()
{
  return sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD7FC()
{
  return sub_100019C6C((unint64_t *)&unk_1005D3D40, (uint64_t (*)(uint64_t))&type metadata accessor for NoteID, (uint64_t)&protocol conformance descriptor for NoteID);
}

uint64_t sub_1002CD828()
{
  return sub_100016638(&qword_1005D7910, &qword_1005D7918, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1002CD854()
{
  return sub_100019C6C(&qword_1005D7920, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD880()
{
  return sub_100019C6C(&qword_1005D7928, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

uint64_t sub_1002CD8AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static NoteEntity.transferRepresentation>>, 1);
}

uint64_t sub_1002CD8BC(uint64_t a1)
{
  uint64_t result;

  result = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NoteEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v32);
  }
  else
  {
    v7 = type metadata accessor for NoteID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)a1 + v12) = v13;
    v14 = a3[8];
    v15 = a3[9];
    v16 = *(_QWORD *)((char *)a2 + v14);
    *(_QWORD *)((char *)a1 + v14) = v16;
    v17 = *(_QWORD *)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v17;
    v18 = a3[10];
    v19 = a3[11];
    v20 = *(_QWORD *)((char *)a2 + v18);
    *(_QWORD *)((char *)a1 + v18) = v20;
    v21 = *(_QWORD *)((char *)a2 + v19);
    *(_QWORD *)((char *)a1 + v19) = v21;
    v22 = a3[12];
    v23 = a3[13];
    v24 = *(_QWORD *)((char *)a2 + v22);
    *(_QWORD *)((char *)a1 + v22) = v24;
    v25 = *(_QWORD *)((char *)a2 + v23);
    *(_QWORD *)((char *)a1 + v23) = v25;
    v26 = a3[14];
    v27 = a3[15];
    v28 = *(_QWORD *)((char *)a2 + v26);
    *(_QWORD *)((char *)a1 + v26) = v28;
    v29 = *(void **)((char *)a2 + v27);
    *(_QWORD *)((char *)a1 + v27) = v29;
    v30 = v13;
    swift_retain(v16);
    swift_retain(v17);
    swift_retain(v20);
    swift_retain(v21);
    swift_retain(v24);
    swift_retain(v25);
    swift_retain(v28);
    v31 = v29;
  }
  return a1;
}

void destroy for NoteEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for NoteID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_release(*(_QWORD *)(a1 + a2[8]));
  swift_release(*(_QWORD *)(a1 + a2[9]));
  swift_release(*(_QWORD *)(a1 + a2[10]));
  swift_release(*(_QWORD *)(a1 + a2[11]));
  swift_release(*(_QWORD *)(a1 + a2[12]));
  swift_release(*(_QWORD *)(a1 + a2[13]));
  swift_release(*(_QWORD *)(a1 + a2[14]));

}

uint64_t initializeWithCopy for NoteEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;

  v6 = type metadata accessor for NoteID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v13 = a3[8];
  v14 = a3[9];
  v15 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  v17 = a3[10];
  v18 = a3[11];
  v19 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v19;
  v20 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v20;
  v21 = a3[12];
  v22 = a3[13];
  v23 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  v25 = a3[14];
  v26 = a3[15];
  v27 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v27;
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v12;
  swift_retain(v15);
  swift_retain(v16);
  swift_retain(v19);
  swift_retain(v20);
  swift_retain(v23);
  swift_retain(v24);
  swift_retain(v27);
  v30 = v28;
  return a1;
}

uint64_t assignWithCopy for NoteEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;

  v6 = type metadata accessor for NoteID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  v15 = a3[8];
  v16 = *(_QWORD *)(a2 + v15);
  v17 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = a3[9];
  v19 = *(_QWORD *)(a2 + v18);
  v20 = *(_QWORD *)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_retain(v19);
  swift_release(v20);
  v21 = a3[10];
  v22 = *(_QWORD *)(a2 + v21);
  v23 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = a3[11];
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_retain(v25);
  swift_release(v26);
  v27 = a3[12];
  v28 = *(_QWORD *)(a2 + v27);
  v29 = *(_QWORD *)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  swift_retain(v28);
  swift_release(v29);
  v30 = a3[13];
  v31 = *(_QWORD *)(a2 + v30);
  v32 = *(_QWORD *)(a1 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  swift_retain(v31);
  swift_release(v32);
  v33 = a3[14];
  v34 = *(_QWORD *)(a2 + v33);
  v35 = *(_QWORD *)(a1 + v33);
  *(_QWORD *)(a1 + v33) = v34;
  swift_retain(v34);
  swift_release(v35);
  v36 = a3[15];
  v37 = *(void **)(a1 + v36);
  v38 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v38;
  v39 = v38;

  return a1;
}

uint64_t initializeWithTake for NoteEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for NoteID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for NoteEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;

  v6 = type metadata accessor for NoteID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  v14 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release(v14);
  v15 = a3[9];
  v16 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_release(v16);
  v17 = a3[10];
  v18 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  swift_release(v18);
  v19 = a3[11];
  v20 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_release(v20);
  v21 = a3[12];
  v22 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_release(v22);
  v23 = a3[13];
  v24 = *(_QWORD *)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_release(v24);
  v25 = a3[14];
  v26 = *(_QWORD *)(a1 + v25);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  swift_release(v26);
  v27 = a3[15];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  return a1;
}

uint64_t getEnumTagSinglePayload for NoteEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CE01C);
}

uint64_t sub_1002CE01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for NoteID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NoteEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CE0D0);
}

uint64_t sub_1002CE0D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for NoteID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_1002CE174(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[12];

  result = type metadata accessor for NoteID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_1004614A8;
      v5[3] = &unk_1004614C0;
      v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[9] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[10] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[11] = &unk_1004614C0;
      swift_initStructMetadata(a1, 256, 12, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002CE228()
{
  return sub_100016638(&qword_1005D7A50, &qword_1005D7A58, (uint64_t)&protocol conformance descriptor for DataRepresentation<A>);
}

uint64_t getEnumTagSinglePayload for NoteEntity.SortType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7D)
    goto LABEL_17;
  if (a2 + 131 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 131) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 131;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 131;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 131;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for NoteEntity.SortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 131 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 131) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7C)
    return ((uint64_t (*)(void))((char *)&loc_1002CE340 + 4 * byte_100461209[v4]))();
  *a1 = a2 - 125;
  return ((uint64_t (*)(void))((char *)sub_1002CE374 + 4 * byte_100461204[v4]))();
}

uint64_t sub_1002CE374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE37C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CE384);
  return result;
}

uint64_t sub_1002CE39C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CE3A4);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_1002CE3A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE3B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CE3BC(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

_BYTE *sub_1002CE3C8(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_1002CE3D8(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for NoteEntity.SortType()
{
  return &type metadata for NoteEntity.SortType;
}

uint64_t sub_1002CE3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_1002CE428(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D7A6C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100145358;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1005D7A68 + dword_1005D7A68))(a1, v4, v5, v6);
}

uint64_t sub_1002CE4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1005D7A84);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100145358;
  return sub_1002CCC38(a1, v1);
}

void sub_1002CE500()
{
  sub_1002CCDCC();
}

uint64_t type metadata accessor for NoteEntity.ContentResult(uint64_t a1)
{
  return sub_100010414(a1, qword_1005D7BC8, (uint64_t)&nominal type descriptor for NoteEntity.ContentResult);
}

uint64_t sub_1002CE51C()
{
  id *v0;

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002CE558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002CBA2C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(void **)(v1 + 48), *(void **)(v1 + 56), a1, *(double *)(v1 + 40));
}

uint64_t sub_1002CE57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoteEntity.ContentResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CE5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for NoteID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002CE634(_QWORD *a1@<X8>)
{
  uint64_t v1;

  type metadata accessor for NoteID(0);
  sub_1002CC874(*(void **)(v1 + 16), a1);
}

uint64_t sub_1002CE680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for NoteID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1002CE6F4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NoteID(0);
  sub_1002CC7A8(*(void **)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a1);
}

const char *sub_1002CE750()
{
  return "store";
}

id sub_1002CE75C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "store");
  *a2 = result;
  return result;
}

id sub_1002CE794(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setStore:", *a1);
}

const char *sub_1002CE7A8()
{
  return "name";
}

void sub_1002CE7B4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_name, a2);
}

void sub_1002CE7D0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_10022B8D4(a1, a2, a3, a4, (SEL *)&selRef_setName_);
}

const char *sub_1002CE804()
{
  return "folder";
}

id sub_1002CE810@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "folder");
  *a2 = result;
  return result;
}

id sub_1002CE848(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setFolder:", *a1);
}

void sub_1002CE860(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v3);

}

uint64_t sub_1002CE8B0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_modificationDate, a2);
}

void sub_1002CE8CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1001E4D18(a1, a2, a3, a4, (SEL *)&selRef_setModificationDate_);
}

uint64_t sub_1002CE8E8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_creationDate, a2);
}

void sub_1002CE904(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1001E4D18(a1, a2, a3, a4, (SEL *)&selRef_setCreationDate_);
}

void sub_1002CE920(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_title, a2);
}

void sub_1002CE93C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_10022B8D4(a1, a2, a3, a4, (SEL *)&selRef_setTitle_);
}

uint64_t sub_1002CE958(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v3 = a2 & 1;
  KeyPath = swift_getKeyPath(&unk_1004616E0, a2);
  v17 = a1;
  v18 = KeyPath;
  v5 = sub_100012E18(&qword_1005D7B50);
  v6 = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v17, v5, &protocol witness table for AnyKeyPath);
  swift_release(KeyPath);
  if ((v6 & 1) != 0)
  {
    swift_release(a1);
  }
  else
  {
    v8 = swift_getKeyPath(&unk_100461708, v7);
    v17 = a1;
    v18 = v8;
    swift_retain(a1);
    v9 = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v17, v5, &protocol witness table for AnyKeyPath);
    swift_release(a1);
    swift_release(v8);
    if ((v9 & 1) != 0)
    {
      swift_release(a1);
      return v3 | 0x40;
    }
    else
    {
      v11 = swift_getKeyPath(&unk_100461730, v10);
      v17 = a1;
      v18 = v11;
      swift_retain(a1);
      v12 = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v17, v5, &protocol witness table for AnyKeyPath);
      swift_release(a1);
      swift_release(v11);
      if ((v12 & 1) != 0)
      {
        swift_release(a1);
        return v3 | 0xFFFFFF80;
      }
      else
      {
        v14 = swift_getKeyPath(&unk_100461758, v13);
        v17 = a1;
        v18 = v14;
        v15 = dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v17, v5, &protocol witness table for AnyKeyPath);
        swift_release(a1);
        swift_release(v14);
        if ((v15 & 1) != 0)
          return v3 | 0xFFFFFFC0;
        else
          return 4294967294;
      }
    }
  }
  return v3;
}

uint64_t *sub_1002CEB04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(sub_100012E18(&qword_1005D7B18) + 48);
      v14 = *(void **)((char *)a2 + v13);
      *(uint64_t *)((char *)a1 + v13) = (uint64_t)v14;
      v15 = v14;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void sub_1002CEBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  }
  else
  {
    v3 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);

  }
}

_QWORD *sub_1002CEC44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain(v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = type metadata accessor for AttributedString(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = *(int *)(sub_100012E18(&qword_1005D7B18) + 48);
    v12 = *(void **)((char *)a2 + v11);
    *(_QWORD *)((char *)a1 + v11) = v12;
    v13 = v12;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

_QWORD *sub_1002CECF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for NoteEntity.ContentResult);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = a2[1];
      a1[1] = v6;
      swift_bridgeObjectRetain(v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = type metadata accessor for AttributedString(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(sub_100012E18(&qword_1005D7B18) + 48);
      v12 = *(void **)((char *)a2 + v11);
      *(_QWORD *)((char *)a1 + v11) = v12;
      v13 = v12;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

char *sub_1002CEDBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_100012E18(&qword_1005D7B18);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1002CEE5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for NoteEntity.ContentResult);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_100012E18(&qword_1005D7B18);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1002CEF14(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_1004614C0);
    v5[0] = v4;
    v5[1] = &unk_100461790;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

char *sub_1002CEF94(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (**v15)(uint64_t, unint64_t);
  uint64_t v16;
  uint64_t v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  v10 = &v4[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v4[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v19.receiver = v4;
  v19.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  v13 = sub_100376928();
  objc_msgSend(v13, "setDelegate:", v12);

  v14 = swift_allocObject(&unk_100565F88, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v12);
  v15 = (void (**)(uint64_t, unint64_t))&v12[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange];
  v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange];
  v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange + 8];
  *v15 = sub_1002CF690;
  v15[1] = (void (*)(uint64_t, unint64_t))v14;
  sub_100012C50(v16, v17);

  return v12;
}

id sub_1002CF0B4(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  char *v5;
  id v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  void (**v11)(uint64_t, unint64_t);
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = &v1[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v1[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v15.receiver = v1;
  v15.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);
  v7 = v6;
  if (v6)
  {
    v8 = (char *)v6;
    v9 = sub_100376928();
    objc_msgSend(v9, "setDelegate:", v8);

    v10 = swift_allocObject(&unk_100565F88, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v8);
    v11 = (void (**)(uint64_t, unint64_t))&v8[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange];
    v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange];
    v13 = *(_QWORD *)&v8[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange + 8];
    *v11 = sub_1002CF690;
    v11[1] = (void (*)(uint64_t, unint64_t))v10;
    sub_100012C50(v12, v13);

  }
  return v7;
}

void sub_1002CF1C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  void *v12;
  id v13;
  unint64_t v14;
  int v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  NSString v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE v46[24];

  v6 = type metadata accessor for CharacterSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v46, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v11 = Strong;
    if (a2)
    {
      v44 = a1;
      v45 = a2;
      v12 = (void *)objc_opt_self(NSCharacterSet);
      v13 = objc_msgSend(v12, "ic_hashtagTokenizingCharacterSet", swift_bridgeObjectRetain(a2).n128_f64[0]);
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      v14 = sub_1001452E8();
      StringProtocol.rangeOfCharacter(from:options:range:)(v9, 0, 0, 0, 1, &type metadata for String, v14);
      HIDWORD(v43) = v15;
      v16 = *(void (**)(char *, uint64_t))(v7 + 8);
      v16(v9, v6);
      v17 = sub_10036F0A8(76, a1, a2);
      v19 = v18;
      v21 = v20;
      v23 = v22;
      swift_bridgeObjectRelease(a2);
      v24 = static String._fromSubstring(_:)(v17, v19, v21, v23);
      v26 = v25;
      swift_bridgeObjectRelease(v23);
      v27 = objc_msgSend(v12, "ic_hashtagAllowedCharacterSet");
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      v28 = String.removingCharacters(notContainedIn:)(v9, v24, v26);
      v30 = v29;
      swift_bridgeObjectRelease(v26);
      v16(v9, v6);
      swift_bridgeObjectRetain(v30);
      v31 = v11;
      v32 = sub_100376928();
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      objc_msgSend(v32, "setText:", v33);

      v34 = *(void (**)(uint64_t, uint64_t))&v31[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange];
      if (v34)
      {
        v35 = *(_QWORD *)&v31[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange + 8];
        swift_retain(v35);
        v34(v28, v30);
        sub_100012C50((uint64_t)v34, v35);
      }
      swift_bridgeObjectRelease(v30);
      if ((v43 & 0x100000000) != 0
        || (v36 = *(void (**)(uint64_t, uint64_t))&v31[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter]) == 0)
      {

      }
      else
      {
        v37 = *(_QWORD *)&v31[OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter + 8];
        swift_retain(v37);
        v38 = sub_100376928();
        v39 = objc_msgSend(v38, "text");

        if (v39)
        {
          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v42 = v41;

        }
        else
        {
          v40 = 0;
          v42 = 0;
        }
        v36(v40, v42);
        sub_100012C50((uint64_t)v36, v37);

        swift_bridgeObjectRelease(v42);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_1002CF4D8()
{
  uint64_t v0;

  sub_100012C50(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange + 8));
  return sub_100012C50(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter + 8));
}

uint64_t type metadata accessor for SmartFolderComposerCreateTagCell()
{
  return objc_opt_self(_TtC11MobileNotes32SmartFolderComposerCreateTagCell);
}

uint64_t sub_1002CF5B4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void (**)(uint64_t, uint64_t))(v0
                                               + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter + 8);
    swift_retain(v2);
    v3 = sub_100376928();
    v4 = objc_msgSend(v3, "text");

    if (v4)
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v7 = v6;

    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    v1(v5, v7);
    sub_100012C50((uint64_t)v1, v2);
    swift_bridgeObjectRelease(v7);
  }
  return 1;
}

uint64_t sub_1002CF66C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002CF690(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1002CF1C4(a1, a2, v2);
}

uint64_t sub_1002CF698(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_10013B100((__int128 *)a1, (uint64_t)v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v9 = *v2;
    *v2 = 0x8000000000000000;
    sub_10024E5B4(v10, a2, isUniquelyReferenced_nonNull_native);
    v5 = *v2;
    *v2 = v9;
    swift_bridgeObjectRelease(v5);
    v6 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  }
  else
  {
    sub_100012DDC(a1, &qword_1005D7EF0);
    sub_1003AE3AC(a2, (uint64_t)v10);
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a2, v8);
    return sub_100012DDC((uint64_t)v10, &qword_1005D7EF0);
  }
}

uint64_t sub_1002CF77C(uint64_t a1, Swift::UInt a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = sub_100012E18(&qword_1005D7E88);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_100012DDC(a1, &qword_1005D7E88);
    v13 = sub_1002493C8(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v17 = *v3;
      v24 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100250DB4();
        v17 = v24;
      }
      sub_10013B170(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
      sub_1003AEDF0(v15, v17);
      v18 = *v3;
      *v3 = v17;
      swift_bridgeObjectRelease(v18);
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_100012DDC((uint64_t)v8, &qword_1005D7E88);
  }
  else
  {
    sub_10013B170(a1, (uint64_t)v12, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
    v20 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v24 = *v3;
    *v3 = 0x8000000000000000;
    sub_10024F0B8((uint64_t)v12, a2, v20);
    v21 = *v3;
    *v3 = v24;
    return swift_bridgeObjectRelease(v21);
  }
}

uint64_t sub_1002CF954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v27[3];
  _QWORD v28[4];

  v4 = v3;
  v8 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v8);
  v10 = (char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v10, &qword_1005D4680);
  v11 = type metadata accessor for TaskPriority(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100012DDC((uint64_t)v10, &qword_1005D4680);
    v13 = 12544;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
    {
LABEL_3:
      v15 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v14);
      v17 = swift_unknownObjectRetain(v14);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15, v17);
      v20 = v19;
      swift_unknownObjectRelease(v14, v19);
      goto LABEL_6;
    }
  }
  else
  {
    v21 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    v13 = v21 | 0x3100;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
      goto LABEL_3;
  }
  v18 = 0;
  v20 = 0;
LABEL_6:
  v22 = *v4;
  v23 = (_QWORD *)(v20 | v18);
  if (v20 | v18)
  {
    v28[0] = 0;
    v28[1] = 0;
    v23 = v28;
    v28[2] = v18;
    v28[3] = v20;
  }
  v27[0] = 1;
  v27[1] = v23;
  v27[2] = v22;
  v24 = swift_task_create(v13, v27, (char *)&type metadata for () + 8, a2, a3);
  return swift_release(v24);
}

uint64_t sub_1002CFAE4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = v1;
  *(_BYTE *)(v2 + 167) = a1;
  return swift_task_switch(sub_1002CFB00, 0, 0);
}

uint64_t sub_1002CFB00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (*(_BYTE *)(v0 + 167) != 1)
    return swift_task_switch(sub_1002CFC1C, 0, 0);
  v1 = *(uint64_t **)(v0 + 72);
  v2 = sub_100012E18(&qword_1005D7EA8);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 88) = v3;
  *(_QWORD *)(v0 + 96) = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v1;
  v5 = sub_100012E18(&qword_1005D7A90);
  *(_QWORD *)(v0 + 104) = v5;
  ThrowingTaskGroup.makeAsyncIterator()(v4, (char *)&type metadata for () + 8, v5, &protocol self-conformance witness table for Error);
  v6 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 152) = v6;
  *v6 = v0;
  v6[1] = sub_1002D0120;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 166, 0, 0, *(_QWORD *)(v0 + 80), v0 + 56);
}

uint64_t sub_1002CFC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = **(_QWORD **)(v0 + 72);
  v2 = sub_100012E18(&qword_1005D7A90);
  *(_QWORD *)(v0 + 112) = v2;
  if ((ThrowingTaskGroup.isEmpty.getter(v1, (char *)&type metadata for () + 8, v2, &protocol self-conformance witness table for Error) & 1) != 0)return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = sub_100403584(2, 18, 0, 0);
  *(_DWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 120) = 0;
  if (!v4)
    return swift_taskGroup_wait_next_throwing(v0 + 165, **(_QWORD **)(v0 + 72), sub_1002CFDA4, v0 + 16);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
  *(_QWORD *)(v0 + 128) = v5;
  v6 = sub_100012E18(&qword_1005D7EA0);
  *v5 = v0;
  v5[1] = sub_1002CFD38;
  return ThrowingTaskGroup.next(isolation:)(v0 + 164, 0, 0, v6);
}

uint64_t sub_1002CFD38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 128));
  if (v0)
  {
    *(_QWORD *)(v2 + 144) = v0;
    v3 = sub_1002CFFF0;
  }
  else
  {
    *(_BYTE *)(v2 + 168) = *(_BYTE *)(v2 + 164);
    v3 = sub_1002CFDCC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002CFDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  *(_QWORD *)(v1 + 136) = v0;
  if (v0)
    v2 = sub_1002D0104;
  else
    v2 = sub_1002CFED0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002CFDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 168) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 120);
  v2 = ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 72), (char *)&type metadata for () + 8, *(_QWORD *)(v0 + 112), &protocol self-conformance witness table for Error);
  if ((v2 & 1) == 0)
  {
    *(_QWORD *)(v0 + 120) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 160))
      return swift_taskGroup_wait_next_throwing(v0 + 165, **(_QWORD **)(v0 + 72), sub_1002CFDA4, v0 + 16);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
    *(_QWORD *)(v0 + 128) = v4;
    v5 = sub_100012E18(&qword_1005D7EA0);
    *v4 = v0;
    v4[1] = sub_1002CFD38;
    return ThrowingTaskGroup.next(isolation:)(v0 + 164, 0, 0, v5);
  }
  if (v1)
    swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CFED0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 169) = *(_BYTE *)(v0 + 165);
  return swift_task_switch(sub_1002CFEEC, 0, 0);
}

uint64_t sub_1002CFEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 169) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 120);
  v2 = ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 72), (char *)&type metadata for () + 8, *(_QWORD *)(v0 + 112), &protocol self-conformance witness table for Error);
  if ((v2 & 1) == 0)
  {
    *(_QWORD *)(v0 + 120) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 160))
      return swift_taskGroup_wait_next_throwing(v0 + 165, **(_QWORD **)(v0 + 72), sub_1002CFDA4, v0 + 16);
    v4 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
    *(_QWORD *)(v0 + 128) = v4;
    v5 = sub_100012E18(&qword_1005D7EA0);
    *v4 = v0;
    v4[1] = sub_1002CFD38;
    return ThrowingTaskGroup.next(isolation:)(v0 + 164, 0, 0, v5);
  }
  if (v1)
    swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CFFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 144);
  if (*(_QWORD *)(v0 + 120))
  {
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    v1 = *(_QWORD *)(v0 + 120);
  }
  v2 = ThrowingTaskGroup.isEmpty.getter(**(_QWORD **)(v0 + 72), (char *)&type metadata for () + 8, *(_QWORD *)(v0 + 112), &protocol self-conformance witness table for Error);
  if ((v2 & 1) != 0)
  {
    if (v1)
      swift_willThrow(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 120) = v1;
    if (*(_DWORD *)(v0 + 160))
    {
      v4 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
      *(_QWORD *)(v0 + 128) = v4;
      v5 = sub_100012E18(&qword_1005D7EA0);
      *v4 = v0;
      v4[1] = sub_1002CFD38;
      return ThrowingTaskGroup.next(isolation:)(v0 + 164, 0, 0, v5);
    }
    else
    {
      return swift_taskGroup_wait_next_throwing(v0 + 165, **(_QWORD **)(v0 + 72), sub_1002CFDA4, v0 + 16);
    }
  }
}

uint64_t sub_1002D0104()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 136);
  return swift_task_switch(sub_1002CFFF0, 0, 0);
}

uint64_t sub_1002D0120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 152));
  if (v0)
    v2 = sub_1002D0238;
  else
    v2 = sub_1002D0184;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002D0184()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  if ((*(_BYTE *)(v0 + 166) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v1, *(_QWORD *)(v0 + 80));
    swift_task_dealloc(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 152) = v3;
    *v3 = v0;
    v3[1] = sub_1002D0120;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 166, 0, 0, *(_QWORD *)(v0 + 80), v0 + 56);
  }
}

uint64_t sub_1002D0238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v2, *(_QWORD *)(v0 + 80));
  v3 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(v2);
  ThrowingTaskGroup.cancelAll()();
  *(_QWORD *)(v0 + 64) = v3;
  swift_errorRetain(v3);
  if (_getErrorEmbeddedNSError<A>(_:)(v0 + 64, v1, &protocol self-conformance witness table for Error))
  {
    v4 = swift_errorRelease(v3);
  }
  else
  {
    v4 = swift_allocError(*(_QWORD *)(v0 + 104), &protocol self-conformance witness table for Error, 0, 0);
    *v5 = *(_QWORD *)(v0 + 64);
  }
  swift_willThrow(v4);
  swift_errorRelease(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D0324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v8, &qword_1005D4680);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100012DDC((uint64_t)v8, &qword_1005D4680);
    v11 = 4096;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v12);
      v15 = swift_unknownObjectRetain(v12);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13, v15);
      v18 = v17;
      swift_unknownObjectRelease(v12, v17);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = v19 | 0x1000;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_1005660C8, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v11, v21, (char *)&type metadata for () + 8, &unk_1005D7DD8, v20);
}

uint64_t sub_1002D04BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  int EnumCaseMultiPayload;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = v3;
  v51 = a2;
  v56 = a1;
  v6 = sub_100012E18(&qword_1005D2218);
  __chkstk_darwin(v6);
  v50 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EditNoteActivity(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
  v12 = __chkstk_darwin(v52);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v45 - v15;
  v17 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.fastSyncPresence.getter(v18);
  v21 = sub_100145220(v4, (uint64_t)v16, type metadata accessor for FastSyncEditorActivityChangeHandler);
  v53 = v20;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v46 = v4;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc(32, -1);
    v49 = a3;
    v27 = v26;
    v58 = v26;
    v47 = v8;
    v48 = v9;
    *(_DWORD *)v25 = 136315138;
    v28 = sub_1002D0954();
    v30 = v29;
    v57 = sub_1003A4190(v28, v29, &v58);
    v8 = v47;
    v9 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v25 + 4);
    swift_bridgeObjectRelease(v30);
    sub_100145264((uint64_t)v16, type metadata accessor for FastSyncEditorActivityChangeHandler);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[Performing] %s", v25, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    v31 = v27;
    a3 = v49;
    swift_slowDealloc(v31, -1, -1);
    v32 = v25;
    v4 = v46;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    sub_100145264((uint64_t)v16, type metadata accessor for FastSyncEditorActivityChangeHandler);
  }
  sub_100145220(v4, (uint64_t)v14, type metadata accessor for FastSyncEditorActivityChangeHandler);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v52);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v34 = *(void **)&v14[*(int *)(sub_100012E18(&qword_1005D7CD8) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      sub_1002B3AD4((uint64_t)v11, v34, a3);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v53, v55);
    }
    else
    {
      v43 = *(void **)&v14[*(int *)(sub_100012E18(&qword_1005D7CD8) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      sub_1002B4494((uint64_t)v11, v43);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
      v44 = sub_100012E18(&qword_1005D7428);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(a3, 1, 1, v44);
    }
  }
  else
  {
    v36 = sub_100012E18(&qword_1005D7CD0);
    v37 = (uint64_t)&v14[*(int *)(v36 + 48)];
    v38 = *(void **)&v14[*(int *)(v36 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    v39 = v50;
    sub_10014BD1C(v37, v50, &qword_1005D2218);
    v40 = sub_100012E18(&qword_1005D7428);
    v41 = *(int *)(v40 + 48);
    v42 = sub_1002B2394(a3, (uint64_t)v11, v39, v38, v51);

    sub_100012DDC(v39, &qword_1005D2218);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
    *(_QWORD *)(a3 + v41) = v42;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(a3, 0, 1, v40);
  }
}

unint64_t sub_1002D0954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  void *v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  Swift::String v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  Swift::String v39;
  unint64_t v41;
  unint64_t v42;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005D2218);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditNoteActivity(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100145220(v1, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v9);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *(void **)&v11[*(int *)(sub_100012E18(&qword_1005D7CD8) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      v41 = 0;
      v42 = 0xE000000000000000;
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease(v42);
      v41 = 0xD000000000000010;
      v42 = 0x8000000100486BE0;
    }
    else
    {
      v14 = *(void **)&v11[*(int *)(sub_100012E18(&qword_1005D7CD8) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      v41 = 0;
      v42 = 0xE000000000000000;
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease(v42);
      v41 = 0xD000000000000019;
      v42 = 0x8000000100486BC0;
    }
    v15 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v15);
    object = v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(object);
    v18._countAndFlagsBits = 0x726F74696465202CLL;
    v18._object = (void *)0xEA0000000000203ALL;
    String.append(_:)(v18);
    v35 = objc_msgSend(v14, "description");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v39._countAndFlagsBits = v36;
    v39._object = v38;
    String.append(_:)(v39);

    swift_bridgeObjectRelease(v38);
    v34 = v41;
  }
  else
  {
    v19 = sub_100012E18(&qword_1005D7CD0);
    v20 = (uint64_t)&v11[*(int *)(v19 + 48)];
    v21 = *(void **)&v11[*(int *)(v19 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_10014BD1C(v20, (uint64_t)v4, &qword_1005D2218);
    v41 = 0;
    v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease(v42);
    v41 = 0x746361206E696F4ALL;
    v42 = 0xEF203A7974697669;
    v22 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
    v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v22);
    v24 = v23._object;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(v24);
    v25._countAndFlagsBits = 0xD000000000000011;
    v25._object = (void *)0x8000000100486C00;
    String.append(_:)(v25);
    v26._countAndFlagsBits = Optional.debugDescription.getter(v2);
    v27 = v26._object;
    String.append(_:)(v26);
    swift_bridgeObjectRelease(v27);
    v28._countAndFlagsBits = 0x726F74696465202CLL;
    v28._object = (void *)0xEA0000000000203ALL;
    String.append(_:)(v28);
    v29 = objc_msgSend(v21, "description");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    v33._countAndFlagsBits = v30;
    v33._object = v32;
    String.append(_:)(v33);

    swift_bridgeObjectRelease(v32);
    v34 = v41;
    sub_100012DDC((uint64_t)v4, &qword_1005D2218);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v34;
}

id FastSyncPresenceController.__allocating_init(logger:verboseLoggingCategory:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_100017B04(a1, a2, a3, a4);

  return v10;
}

uint64_t sub_1002D0E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4[26] = a4;
  v5 = type metadata accessor for FastSyncError(0);
  v4[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[28] = v6;
  v4[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CancellationError(0);
  v4[30] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[31] = v8;
  v4[32] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v4[33] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[34] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[35] = swift_task_alloc(v11);
  v4[36] = swift_task_alloc(v11);
  v4[37] = swift_task_alloc(v11);
  v4[38] = swift_task_alloc(v11);
  return swift_task_switch(sub_1002D0F2C, 0, 0);
}

uint64_t sub_1002D0F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 312) = v1;
  *(_DWORD *)(v0 + 384) = enum case for FastSyncError.fastSyncDisabled(_:);
  v2 = static Logger.fastSyncPresence.getter(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Waiting for delayed launch...", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 272);

  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 320) = v10;
  v11 = v10(v7, v8);
  *(_QWORD *)(v0 + 328) = static MainActor.shared.getter(v11);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v12);
  return swift_task_switch(sub_1002D1048, v13, v14);
}

uint64_t sub_1002D1048()
{
  _QWORD *v0;
  _QWORD *v1;

  swift_release(v0[41]);
  v0[42] = (id)objc_claimAutoreleasedReturnValue(+[ICAppDelegate sharedInstance](ICAppDelegate, "sharedInstance"));
  v1 = (_QWORD *)swift_task_alloc(dword_1005D2FB4);
  v0[43] = v1;
  *v1 = v0;
  v1[1] = sub_1002D10B8;
  return sub_1001C054C();
}

uint64_t sub_1002D10B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 336);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));

  return swift_task_switch(sub_1002D1110, 0, 0);
}

uint64_t sub_1002D1110(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = static Logger.fastSyncPresence.getter(a1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Waiting for editor activity changes...", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = (void (*)(uint64_t, uint64_t))v1[40];
  v7 = v1[37];
  v8 = v1[33];

  v6(v7, v8);
  v9 = (_QWORD *)swift_task_alloc(dword_1005D7DE4);
  v1[44] = v9;
  *v9 = v1;
  v9[1] = sub_1002D11F0;
  return sub_1002D1BF8();
}

uint64_t sub_1002D11F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 352);
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002D15F0;
  else
    v3 = sub_1002D1254;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002D1254(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  if ((static Task<>.isCancelled.getter(a1) & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + 288);
    v2 = *(_QWORD *)(v1 + 296);
    v4 = *(_QWORD *)(v1 + 280);
    v5 = *(_QWORD *)(v1 + 256);
    v6 = *(_QWORD *)(v1 + 232);
    swift_task_dealloc(*(_QWORD *)(v1 + 304));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v8 = static Logger.fastSyncPresence.getter();
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Waiting for delayed launch...", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    v13 = *(_QWORD *)(v1 + 304);
    v12 = *(_QWORD *)(v1 + 312);
    v14 = *(_QWORD *)(v1 + 264);
    v15 = *(_QWORD *)(v1 + 272);

    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    *(_QWORD *)(v1 + 320) = v16;
    v17 = v16(v13, v14);
    *(_QWORD *)(v1 + 328) = static MainActor.shared.getter(v17);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor, v18);
    return swift_task_switch(sub_1002D1048, v19, v20);
  }
}

uint64_t sub_1002D13B8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)*v0;
  v3[46] = v3[23];
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to ICCloudConfiguration.waitForConfigurationChange(where:)
                                  + 1));
  v3[47] = v1;
  *v1 = v3;
  v1[1] = sub_1002D142C;
  return ICCloudConfiguration.waitForConfigurationChange(where:)(sub_1002D204C, 0);
}

uint64_t sub_1002D142C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 368);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));

  return swift_task_switch(sub_1002D1484, 0, 0);
}

uint64_t sub_1002D1484()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  swift_errorRelease(*(_QWORD *)(v0 + 200));
  if ((static Task<>.isCancelled.getter(v1) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 288);
    v2 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 280);
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = static Logger.fastSyncPresence.getter();
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Waiting for delayed launch...", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v0 + 272);

    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    *(_QWORD *)(v0 + 320) = v16;
    v17 = v16(v13, v14);
    *(_QWORD *)(v0 + 328) = static MainActor.shared.getter(v17);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor, v18);
    return swift_task_switch(sub_1002D1048, v19, v20);
  }
}

uint64_t sub_1002D15F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  double (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  unint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double (*v68)(uint64_t, uint64_t);
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 200) = v1;
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  swift_errorRetain(v1);
  v4 = sub_100012E18(&qword_1005D7A90);
  if ((swift_dynamicCast(v2, v0 + 200, v4, v3, 0) & 1) != 0)
  {
    v5 = *(_DWORD *)(v0 + 384);
    if ((*(unsigned int (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 88))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216)) == v5)
    {
      v6 = swift_errorRelease(*(_QWORD *)(v0 + 360));
      v7 = static Logger.fastSyncPresence.getter(v6);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Fast sync is disabled. Turning off presence monitoring.", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }
      v11 = v0 + 16;
      v12 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
      v13 = *(_QWORD *)(v0 + 288);
      v14 = *(_QWORD *)(v0 + 264);

      v12(v13, v14);
      v15 = (void *)objc_opt_self(ICCloudConfiguration);
      *(_QWORD *)(v0 + 56) = v0 + 184;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1002D13B8;
      v16 = swift_continuation_init(v0 + 16, 0);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v17 = (_QWORD *)(v0 + 80);
      v17[1] = 0x40000000;
      v17[2] = sub_1002C8A48;
      v17[3] = &unk_1005660E0;
      v17[4] = v16;
      objc_msgSend(v15, "loadSharedConfigurationWithCompletionHandler:", v17);
      return swift_continuation_await(v11);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  }
  v19 = *(_QWORD *)(v0 + 360);
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 240);
  swift_errorRelease(*(_QWORD *)(v0 + 200));
  *(_QWORD *)(v0 + 192) = v19;
  swift_errorRetain(v19);
  v22 = swift_dynamicCast(v20, v0 + 192, v4, v21, 0);
  v23 = *(_QWORD *)(v0 + 360);
  if (v22)
  {
    v25 = *(_QWORD *)(v0 + 248);
    v24 = *(_QWORD *)(v0 + 256);
    v26 = *(_QWORD *)(v0 + 240);
    swift_errorRelease(*(_QWORD *)(v0 + 360));
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_errorRelease(*(_QWORD *)(v0 + 192));
LABEL_15:
    v62 = *(_QWORD *)(v0 + 296);
    v64 = *(_QWORD *)(v0 + 280);
    v63 = *(_QWORD *)(v0 + 288);
    v65 = *(_QWORD *)(v0 + 256);
    v66 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 192));
  swift_errorRetain(v23);
  v27 = swift_errorRetain(v23);
  v28 = static Logger.fastSyncPresence.getter(v27);
  v29 = static os_log_type_t.fault.getter(v28);
  v30 = v29;
  v31 = Logger.logObject.getter(v29);
  v32 = v30;
  v33 = os_log_type_enabled(v31, v30);
  v34 = *(_QWORD *)(v0 + 360);
  v35 = *(double (**)(uint64_t, uint64_t))(v0 + 320);
  v36 = *(_QWORD *)(v0 + 280);
  v37 = *(_QWORD *)(v0 + 264);
  if (v33)
  {
    v68 = *(double (**)(uint64_t, uint64_t))(v0 + 320);
    v38 = swift_slowAlloc(32, -1);
    v67 = swift_slowAlloc(64, -1);
    v69 = v67;
    *(_DWORD *)v38 = 136315650;
    v39 = StaticString.description.getter("MobileNotes/FastSyncPresenceController.swift", 44, 2);
    v41 = v40;
    *(_QWORD *)(v0 + 160) = sub_1003A4190(v39, v40, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v38 + 4);
    swift_bridgeObjectRelease(v41);
    *(_WORD *)(v38 + 12) = 2048;
    *(_QWORD *)(v0 + 152) = 95;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v38 + 14);
    *(_WORD *)(v38 + 22) = 2080;
    *(_QWORD *)(v0 + 120) = 0;
    *(_QWORD *)(v0 + 128) = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v42 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 144) = v42;
    v43._object = (void *)0x8000000100486B20;
    v43._countAndFlagsBits = 0xD00000000000004FLL;
    String.append(_:)(v43);
    *(_QWORD *)(v0 + 168) = v34;
    _print_unlocked<A, B>(_:_:)(v0 + 168, v0 + 136, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v44._countAndFlagsBits = 41;
    v44._object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    v45 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 176) = sub_1003A4190(*(_QWORD *)(v0 + 136), v45, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v38 + 24);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed assertion at %s:%lu: %s", (uint8_t *)v38, 0x20u);
    swift_arrayDestroy(v67, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    swift_errorRelease(v34);
    swift_errorRelease(v34);
    swift_errorRelease(v34);
    v46.n128_f64[0] = v68(v36, v37);
    v47 = static Task<>.isCancelled.getter(v46);
    if ((v47 & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 360));

    swift_errorRelease(v34);
    swift_errorRelease(v34);
    v61.n128_f64[0] = v35(v36, v37);
    v47 = static Task<>.isCancelled.getter(v61);
    if ((v47 & 1) != 0)
      goto LABEL_15;
  }
  v48 = static Logger.fastSyncPresence.getter(v47);
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Waiting for delayed launch...", v51, 2u);
    swift_slowDealloc(v51, -1, -1);
  }
  v53 = *(_QWORD *)(v0 + 304);
  v52 = *(_QWORD *)(v0 + 312);
  v54 = *(_QWORD *)(v0 + 264);
  v55 = *(_QWORD *)(v0 + 272);

  v56 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8);
  *(_QWORD *)(v0 + 320) = v56;
  v57 = v56(v53, v54);
  *(_QWORD *)(v0 + 328) = static MainActor.shared.getter(v57);
  v59 = dispatch thunk of Actor.unownedExecutor.getter(v52, &protocol witness table for MainActor, v58);
  return swift_task_switch(sub_1002D1048, v59, v60);
}

uint64_t sub_1002D1BF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1[14] = v0;
  v2 = sub_100012E18(&qword_1005D7D90);
  v1[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D7D88);
  v1[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[17] = v4;
  v1[18] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v1[19] = v6;
  v1[20] = v7;
  return swift_task_switch(sub_1002D1CB0, v6, v7);
}

uint64_t sub_1002D1CB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[14];
  sub_100017FEC();
  v0[21] = static MainActor.shared.getter(v2);
  v3 = swift_task_alloc(32);
  v0[22] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[23] = v4;
  *v4 = v0;
  v4[1] = sub_1002D1D64;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1002D1D64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[19];
    v5 = v2[20];
    v6 = sub_1002D1F04;
  }
  else
  {
    v7 = v2[22];
    swift_release(v2[21]);
    swift_task_dealloc(v7);
    v4 = v2[19];
    v5 = v2[20];
    v6 = sub_1002D1DD8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1002D1DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 144));
  v4 = sub_100012E18(&qword_1005CF138);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = v3 + OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges;
  swift_beginAccess(v3 + OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges, v0 + 64, 33, 0);
  sub_100164108(v1, v5, &qword_1005D7D88);
  swift_endAccess(v0 + 64);
  v6 = sub_100012E18(&qword_1005CF140);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = v3 + OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges;
  swift_beginAccess(v3 + OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges, v0 + 88, 33, 0);
  sub_100164108(v2, v7, &qword_1005D7D90);
  swift_endAccess(v0 + 88);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D1F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 144));
  swift_release(v2);
  swift_task_dealloc(v1);
  v6 = sub_100012E18(&qword_1005CF138);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = v5 + OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges;
  swift_beginAccess(v5 + OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges, v0 + 16, 33, 0);
  sub_100164108(v4, v7, &qword_1005D7D88);
  swift_endAccess(v0 + 16);
  v8 = sub_100012E18(&qword_1005CF140);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v5 + OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges;
  swift_beginAccess(v5 + OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges, v0 + 40, 33, 0);
  sub_100164108(v3, v9, &qword_1005D7D90);
  swift_endAccess(v0 + 40);
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D204C(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100461888, a2);
  ICCloudConfiguration.Snapshot.subscript.getter(&v4, KeyPath, &protocol witness table for Bool);
  swift_release(KeyPath);
  return v4 & 1;
}

id FastSyncPresenceController.init(logger:verboseLoggingCategory:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = sub_100017B04(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_1002D20CC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  _QWORD v79[2];
  uint64_t v80;
  unint64_t v81[4];
  __int128 v82;
  __int128 v83;

  v2 = sub_100012E18(&qword_1005D7DB8);
  __chkstk_darwin(v2);
  v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditNoteActivity(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter(&v80);
  if (!v81[2])
  {
    v10 = sub_100012DDC((uint64_t)&v80, &qword_1005CF190);
    goto LABEL_21;
  }
  v9 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
  v10 = swift_dynamicCast(&v82, &v80, (char *)&type metadata for Any + 8, v9, 6);
  if ((v10 & 1) == 0)
  {
LABEL_21:
    v35 = Logger.logObject.getter(v10);
    v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Not continuing with fast sync because note/editor is ineligible.", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    goto LABEL_24;
  }
  v11 = (void *)v82;
  v12 = Notification.userInfo.getter(v10);
  if (!v12)
  {
    v82 = 0u;
    v83 = 0u;
LABEL_18:

    v10 = sub_100012DDC((uint64_t)&v82, &qword_1005CF190);
    goto LABEL_21;
  }
  v13 = v12;
  v79[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(ICNoteEditorControllerNoteKey);
  v79[1] = v14;
  AnyHashable.init<A>(_:)(&v80, v79, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_100248ECC((uint64_t)&v80), (v16 & 1) != 0))
  {
    sub_100128424(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  sub_10018550C((uint64_t)&v80);
  if (!*((_QWORD *)&v83 + 1))
    goto LABEL_18;
  v17 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  if ((swift_dynamicCast(&v80, &v82, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
  {

    goto LABEL_21;
  }
  v18 = (void *)v80;
  if ((_s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0((void *)v80) & 1) == 0)
  {

    goto LABEL_21;
  }
  v78 = v11;
  v19 = v18;
  EditNoteActivity.init(note:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100012DDC((uint64_t)v4, &qword_1005D7DB8);
    v20 = v19;
    v21 = static os_log_type_t.fault.getter();
    v22 = v21;
    v23 = Logger.logObject.getter(v21);
    if (os_log_type_enabled(v23, v22))
    {
      v24 = swift_slowAlloc(32, -1);
      v77 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v82 = v77;
      *(_DWORD *)v24 = 136315650;
      v25 = StaticString.description.getter("MobileNotes/FastSyncPresenceController.swift", 44, 2);
      v27 = v26;
      v80 = sub_1003A4190(v25, v26, (uint64_t *)&v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v24 + 4);
      swift_bridgeObjectRelease(v27);
      *(_WORD *)(v24 + 12) = 2048;
      v80 = 138;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v24 + 14);
      *(_WORD *)(v24 + 22) = 2080;
      v76 = v24 + 24;
      v80 = 0;
      v81[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease(v81[0]);
      v80 = 0xD00000000000002FLL;
      v81[0] = 0x8000000100486A80;
      v28 = objc_msgSend(v20, "ic_loggingDescription");
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      v32._countAndFlagsBits = v29;
      v32._object = v31;
      String.append(_:)(v32);
      swift_bridgeObjectRelease(v31);
      v33 = v81[0];
      v80 = sub_1003A4190(v80, v81[0], (uint64_t *)&v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81, v76);
      swift_bridgeObjectRelease(v33);
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Failed assertion at %s:%lu: %s", (uint8_t *)v24, 0x20u);
      v34 = v77;
      swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    goto LABEL_16;
  }
  v40 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
  v41 = v40(v8, v4, v5);
  v42 = (void *)Notification.name.getter(v41);
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICNoteEditorNoteWillAppearNotification);
  v45 = v44;
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v48 = v46;
  if (v43 == v47 && v45 == v46)
  {
    swift_bridgeObjectRelease_n(v45, 2);
LABEL_30:

    v50 = sub_100012E18(&qword_1005D7CD0);
    v51 = &a1[*(int *)(v50 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, v8, v5);
    v52 = objc_msgSend(v19, "serverShareCheckingParent");
    if (v52)
    {
      v53 = v52;
      v54 = sub_1000163BC(0, &qword_1005D2390, CKShare_ptr);
      NSObject<>.makeSnapshot()(v54);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      v55 = sub_100012E18(&qword_1005D2210);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v51, 1, 1, v55);
    }
    *(_QWORD *)&a1[*(int *)(v50 + 64)] = v78;
    v56 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
    v57 = a1;
    v58 = v56;
    v59 = 0;
    goto LABEL_34;
  }
  v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v46, 0);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v48);
  if ((v49 & 1) != 0)
    goto LABEL_30;
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICNoteEditorNoteWillDisappearNotification);
  v62 = v61;
  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v65 = v63;
  if (v60 == v64 && v62 == v63)
  {
    swift_bridgeObjectRelease_n(v62, 2);
LABEL_39:

    v67 = *(int *)(sub_100012E18(&qword_1005D7CD8) + 48);
    v40(a1, v8, v5);
    *(_QWORD *)&a1[v67] = v78;
    v56 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
    v57 = a1;
    v58 = v56;
    v59 = 1;
LABEL_34:
    swift_storeEnumTagMultiPayload(v57, v58, v59);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(a1, 0, 1, v56);
  }
  v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v64, v63, 0);
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v65);
  if ((v66 & 1) != 0)
    goto LABEL_39;
  v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICNoteEditorNoteDidDisappearNotification);
  v70 = v69;
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v73 = v71;
  if (v68 == v72 && v70 == v71)
  {

    swift_bridgeObjectRelease_n(v70, 2);
LABEL_44:
    v75 = *(int *)(sub_100012E18(&qword_1005D7CD8) + 48);
    v40(a1, v8, v5);
    *(_QWORD *)&a1[v75] = v78;
    v56 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
    v57 = a1;
    v58 = v56;
    v59 = 2;
    goto LABEL_34;
  }
  v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v70, v72, v71, 0);

  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v73);
  if ((v74 & 1) != 0)
    goto LABEL_44;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_16:

LABEL_24:
  v38 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a1, 1, 1, v38);
}

uint64_t sub_1002D2904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  _QWORD v45[4];

  v42 = a2;
  v43 = a3;
  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D2218);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100012E18(&qword_1005D2210);
  v11 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D7DB8);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for EditNoteActivity(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter(v45);
  if (!v45[3])
  {
    v22 = &qword_1005CF190;
    v23 = (char *)v45;
    goto LABEL_6;
  }
  v20 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  v21 = swift_dynamicCast(&v44, v45, (char *)&type metadata for Any + 8, v20, 6);
  if ((v21 & 1) == 0)
  {
LABEL_7:
    v24 = v43;
    goto LABEL_8;
  }
  v39 = v44;
  EditNoteActivity.init(note:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {

    v22 = &qword_1005D7DB8;
    v23 = v15;
LABEL_6:
    v21 = sub_100012DDC((uint64_t)v23, v22);
    goto LABEL_7;
  }
  v38 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v38(v19, v15, v16);
  v30 = sub_1000163BC(0, &qword_1005D2390, CKShare_ptr);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  CloudRecordSnapshot<>.init(record:from:)(v30, v7);

  v31 = v41;
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v41);
  v24 = v43;
  if (v32 != 1)
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v34 = v40;
    v33(v40, v10, v31);
    v35 = sub_100012E18(&qword_1005D7DB0);
    v36 = &v24[*(int *)(v35 + 48)];
    v38(v24, v19, v16);
    v33(v36, v34, v31);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v24, 0, 1, v35);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v21 = sub_100012DDC((uint64_t)v10, &qword_1005D2218);
LABEL_8:
  v25 = Logger.logObject.getter(v21);
  v26 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Couldn't get note, activity, or share from note. Ineligible for fast sync.", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

  v28 = sub_100012E18(&qword_1005D7DB0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v24, 1, 1, v28);
}

uint64_t sub_1002D2CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v3[8] = a2;
  v3[9] = a3;
  v4 = type metadata accessor for Logger(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v3[12] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D7C40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  v7 = sub_100012E18(&qword_1005D4680);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v3[16] = v8;
  v3[17] = static MainActor.shared.getter(v8);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor, v9);
  v3[18] = v10;
  v3[19] = v11;
  return swift_task_switch(sub_1002D2DC0, v10, v11);
}

uint64_t sub_1002D2DC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;

  v1 = v0[9];
  v2 = type metadata accessor for FastSyncPresenceController.PresenceChangeEvent(0);
  v3 = sub_100012E18(&qword_1005D7DF8);
  v4 = swift_allocObject(v3, 24, 7);
  v7 = AsyncChannel.init(element:)(v2, v4, v5, v6);
  v8 = OBJC_IVAR___ICFastSyncPresenceController_cloudConfiguration;
  v0[20] = v7;
  v0[21] = v8;
  v9 = *(void **)(v1 + v8);
  if (v9)
  {
    v0[24] = v9;
    v10 = v9;
    sub_1002A6CF8(v10);
    v16 = v0[14];
    v17 = v0[9] + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
    swift_beginAccess(v17, v0 + 2, 0, 0);
    sub_100012CE8(v17, v16, &qword_1005D7C40);
    v18 = (int *)type metadata accessor for FastSyncControllerPool(0);
    v19 = *((_QWORD *)v18 - 1);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v19 + 48))(v16, 1, v18);
    v21 = sub_100012DDC(v16, &qword_1005D7C40);
    if (v20 == 1)
    {
      v48 = v0 + 5;
      v22 = v0[13];
      v23 = v0[9];
      v24 = *(void **)(v23 + OBJC_IVAR___ICFastSyncPresenceController_noteContext);
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[11] + 16))(v0[12], v23 + OBJC_IVAR___ICFastSyncPresenceController_logger, v0[10]);
      *(_QWORD *)(v22 + v18[7]) = _swiftEmptyArrayStorage;
      v25 = v18[8];
      v26 = v10;
      v27 = v24;
      *(_QWORD *)(v22 + v25) = sub_100136584((uint64_t)_swiftEmptyArrayStorage);
      v28 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
          sub_100128B74((uint64_t)_swiftEmptyArrayStorage);
        else
          v28 = &_swiftEmptySetSingleton;
      }
      v29 = v0[12];
      v30 = (char *)v0[13];
      v31 = v0[10];
      v32 = v0[11];
      *(_QWORD *)&v30[v18[9]] = v28;
      *(_QWORD *)&v30[v18[10]] = &_swiftEmptySetSingleton;
      *(_QWORD *)v30 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v30[v18[5]], v29, v31);
      *(_QWORD *)&v30[v18[6]] = v27;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v30, 0, 1, v18);
      swift_beginAccess(v17, v48, 33, 0);
      sub_100164108((uint64_t)v30, v17, &qword_1005D7C40);
      swift_endAccess(v48);
    }
    v33 = v0[20];
    v34 = v0[15];
    v35 = v0[8];
    v36 = (void *)v0[9];
    static TaskPriority.userInitiated.getter(v21);
    v37 = type metadata accessor for TaskPriority(0);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
    v38(v34, 0, 1, v37);
    v39 = v36;
    v40 = swift_retain(v33);
    v41 = static MainActor.shared.getter(v40);
    v42 = (_QWORD *)swift_allocObject(&unk_100566108, 48, 7);
    v42[2] = v41;
    v42[3] = &protocol witness table for MainActor;
    v42[4] = v39;
    v42[5] = v33;
    sub_1002CF954(v34, (uint64_t)&unk_1005D7E10, (uint64_t)v42);
    sub_100012DDC(v34, &qword_1005D4680);
    v38(v34, 1, 1, v37);
    v43 = (_QWORD *)swift_allocObject(&unk_100566130, 48, 7);
    v43[2] = 0;
    v43[3] = 0;
    v43[4] = v39;
    v43[5] = v33;
    v44 = v39;
    swift_retain(v33);
    sub_1002CF954(v34, (uint64_t)&unk_1005D7E20, (uint64_t)v43);
    sub_100012DDC(v34, &qword_1005D4680);
    v45 = (_QWORD *)swift_task_alloc(48);
    v0[25] = v45;
    v45[2] = v33;
    v45[3] = v44;
    v45[4] = v10;
    v45[5] = v35;
    v46 = static MainActor.shared.getter(v45);
    v0[26] = v46;
    v47 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
    v0[27] = v47;
    *v47 = v0;
    v47[1] = sub_1002D3710;
    return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v47, &unk_1005D7E30, v45, j___s15AsyncAlgorithms0A7ChannelC6finishyyF, v0[20], v46, &protocol witness table for MainActor, (char *)&type metadata for () + 8);
  }
  else
  {
    v11 = v0[15];
    v12 = sub_1000163BC(0, &qword_1005D7E00, ICCloudConfiguration_ptr);
    static TaskPriority.userInitiated.getter(v12);
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
    v14 = (_QWORD *)swift_task_alloc(async function pointer to static ICCloudConfiguration.loadSharedConfiguration(priority:)[1]);
    v0[22] = v14;
    *v14 = v0;
    v14[1] = sub_1002D3298;
    return static ICCloudConfiguration.loadSharedConfiguration(priority:)(v0[15]);
  }
}

uint64_t sub_1002D3298(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  v4 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 184) = a1;
  swift_task_dealloc(v3);
  sub_100012DDC(v4, &qword_1005D4680);
  return swift_task_switch(sub_1002D3304, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_1002D3304()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v40;

  v1 = (void *)v0[23];
  v2 = v0[21];
  v3 = v0[9];
  v4 = *(void **)(v3 + v2);
  *(_QWORD *)(v3 + v2) = v1;
  v5 = v1;

  v6 = (void *)v0[23];
  v0[24] = v6;
  sub_1002A6CF8(v6);
  v7 = v0[14];
  v8 = v0[9] + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
  swift_beginAccess(v8, v0 + 2, 0, 0);
  sub_100012CE8(v8, v7, &qword_1005D7C40);
  v9 = (int *)type metadata accessor for FastSyncControllerPool(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48))(v7, 1, v9);
  v12 = sub_100012DDC(v7, &qword_1005D7C40);
  if (v11 == 1)
  {
    v40 = v0 + 5;
    v13 = v0[13];
    v14 = v0[9];
    v15 = *(void **)(v14 + OBJC_IVAR___ICFastSyncPresenceController_noteContext);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[11] + 16))(v0[12], v14 + OBJC_IVAR___ICFastSyncPresenceController_logger, v0[10]);
    *(_QWORD *)(v13 + v9[7]) = _swiftEmptyArrayStorage;
    v16 = v9[8];
    v17 = v6;
    v18 = v15;
    *(_QWORD *)(v13 + v16) = sub_100136584((uint64_t)_swiftEmptyArrayStorage);
    v19 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
        sub_100128B74((uint64_t)_swiftEmptyArrayStorage);
      else
        v19 = &_swiftEmptySetSingleton;
    }
    v20 = v0[12];
    v21 = (char *)v0[13];
    v22 = v0[10];
    v23 = v0[11];
    *(_QWORD *)&v21[v9[9]] = v19;
    *(_QWORD *)&v21[v9[10]] = &_swiftEmptySetSingleton;
    *(_QWORD *)v21 = v17;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v21[v9[5]], v20, v22);
    *(_QWORD *)&v21[v9[6]] = v18;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v21, 0, 1, v9);
    swift_beginAccess(v8, v40, 33, 0);
    sub_100164108((uint64_t)v21, v8, &qword_1005D7C40);
    swift_endAccess(v40);
  }
  v24 = v0[20];
  v25 = v0[15];
  v26 = v0[8];
  v27 = (void *)v0[9];
  static TaskPriority.userInitiated.getter(v12);
  v28 = type metadata accessor for TaskPriority(0);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v25, 0, 1, v28);
  v30 = v27;
  v31 = swift_retain(v24);
  v32 = static MainActor.shared.getter(v31);
  v33 = (_QWORD *)swift_allocObject(&unk_100566108, 48, 7);
  v33[2] = v32;
  v33[3] = &protocol witness table for MainActor;
  v33[4] = v30;
  v33[5] = v24;
  sub_1002CF954(v25, (uint64_t)&unk_1005D7E10, (uint64_t)v33);
  sub_100012DDC(v25, &qword_1005D4680);
  v29(v25, 1, 1, v28);
  v34 = (_QWORD *)swift_allocObject(&unk_100566130, 48, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v30;
  v34[5] = v24;
  v35 = v30;
  swift_retain(v24);
  sub_1002CF954(v25, (uint64_t)&unk_1005D7E20, (uint64_t)v34);
  sub_100012DDC(v25, &qword_1005D4680);
  v36 = (_QWORD *)swift_task_alloc(48);
  v0[25] = v36;
  v36[2] = v24;
  v36[3] = v35;
  v36[4] = v6;
  v36[5] = v26;
  v37 = static MainActor.shared.getter(v36);
  v0[26] = v37;
  v38 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[27] = v38;
  *v38 = v0;
  v38[1] = sub_1002D3710;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v38, &unk_1005D7E30, v36, j___s15AsyncAlgorithms0A7ChannelC6finishyyF, v0[20], v37, &protocol witness table for MainActor, (char *)&type metadata for () + 8);
}

uint64_t sub_1002D3710()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 208);
  v3 = *(_QWORD *)(*v0 + 200);
  swift_task_dealloc(*(_QWORD *)(*v0 + 216));
  swift_release(v2);
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1002D3778, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1002D3778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);

  swift_release(v1);
  swift_release(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D37FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v5[9] = a4;
  v5[10] = a5;
  v6 = type metadata accessor for FastSyncPresenceController.PresenceChangeEvent(0);
  v5[11] = v6;
  v5[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D7438);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D7ED0);
  v5[14] = v8;
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FastSyncEditorActivityChangeHandler(0);
  v5[17] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[18] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v12);
  v5[20] = swift_task_alloc(v12);
  v13 = sub_100012E18(&qword_1005D7ED8);
  v5[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E18(&qword_1005D7D88);
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D7EE0);
  v5[23] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[24] = v16;
  v5[25] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  v5[26] = v17;
  v5[27] = static MainActor.shared.getter(v17);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor, v18);
  v5[28] = v19;
  v5[29] = v20;
  return swift_task_switch(sub_1002D39A8, v19, v20);
}

uint64_t sub_1002D39A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[22];
  v2 = v0[9] + OBJC_IVAR___ICFastSyncPresenceController_editorActivityChanges;
  swift_beginAccess(v2, v0 + 2, 0, 0);
  sub_100012CE8(v2, v1, &qword_1005D7D88);
  v3 = sub_100012E18(&qword_1005CF138);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v6 = v0[22];
    NotificationSource.makeAsyncIterator()(v3);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
    v8 = OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
    v0[30] = OBJC_IVAR___ICFastSyncPresenceController_logger;
    v0[31] = v8;
    v0[32] = static MainActor.shared.getter(v7);
    v9 = sub_100016638(&qword_1005D7EE8, &qword_1005D7EE0, (uint64_t)&protocol conformance descriptor for NotificationSource<A>.Iterator);
    v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    v0[33] = v10;
    *v10 = v0;
    v10[1] = sub_1002D3ADC;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0[21], v0[23], v9);
  }
  return result;
}

uint64_t sub_1002D3ADC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t (*v13)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 256);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v6);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002D400C;
  }
  else
  {
    if (v4)
    {
      v10 = swift_getObjectType(v4);
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
      v9 = v12;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1002D3BA0;
  }
  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_1002D3BA0()
{
  _QWORD *v0;

  swift_release(v0[32]);
  return swift_task_switch(sub_1002D3BD8, v0[28], v0[29]);
}

uint64_t sub_1002D3BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 48))(v1, 1, *(_QWORD *)(v0 + 136)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 104);
    v43 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v3, *(_QWORD *)(v0 + 184));
    swift_release(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v43);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 160);
    sub_10013B170(v1, v11, type metadata accessor for FastSyncEditorActivityChangeHandler);
    v13 = sub_100145220(v11, v12, type metadata accessor for FastSyncEditorActivityChangeHandler);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.debug.getter();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 152);
    if (v16)
    {
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v44 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_1002D0954();
      v22 = v21;
      *(_QWORD *)(v18 + 4) = sub_1003A4190(v20, v21, &v44);
      swift_bridgeObjectRelease(v22);
      sub_100145264(v17, type metadata accessor for FastSyncEditorActivityChangeHandler);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Incoming editorActivityChange: %s", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      sub_100145264(v17, type metadata accessor for FastSyncEditorActivityChangeHandler);
    }
    v23 = *(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 248);
    swift_beginAccess(v23, v0 + 40, 33, 0);
    v24 = type metadata accessor for FastSyncControllerPool(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 104);
      sub_1002D04BC(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 72), v25);
      swift_endAccess(v0 + 40);
      v26 = sub_100012E18(&qword_1005D7428);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26) == 1)
      {
        sub_100012DDC(*(_QWORD *)(v0 + 104), &qword_1005D7438);
        v27 = sub_100145264(*(_QWORD *)(v0 + 160), type metadata accessor for FastSyncEditorActivityChangeHandler);
        *(_QWORD *)(v0 + 256) = static MainActor.shared.getter(v27);
        v28 = sub_100016638(&qword_1005D7EE8, &qword_1005D7EE0, (uint64_t)&protocol conformance descriptor for NotificationSource<A>.Iterator);
        v29 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
        *(_QWORD *)(v0 + 264) = v29;
        *v29 = v0;
        v29[1] = sub_1002D3ADC;
        return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), v28);
      }
      else
      {
        v31 = *(_QWORD *)(v0 + 120);
        v30 = *(_QWORD *)(v0 + 128);
        v32 = *(_QWORD *)(v0 + 104);
        v33 = *(_QWORD *)(v0 + 112);
        v35 = *(_QWORD *)(v0 + 88);
        v34 = *(_QWORD *)(v0 + 96);
        v36 = *(_QWORD *)(v32 + *(int *)(v26 + 48));
        v37 = *(int *)(v33 + 48);
        sub_10013B170(v32, v31, type metadata accessor for FastSyncControllerPool.PresenceAction);
        *(_QWORD *)(v31 + v37) = v36;
        v38 = *(void **)(v31 + *(int *)(v33 + 48));
        *(_QWORD *)(v0 + 280) = v38;
        sub_10013B170(v31, v30, type metadata accessor for FastSyncControllerPool.PresenceAction);
        v39 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        sub_100145220(v30, v34, type metadata accessor for FastSyncControllerPool.PresenceAction);
        *(_QWORD *)(v34 + v39) = v38;
        swift_storeEnumTagMultiPayload(v34, v35, 0);
        v40 = dword_1005DD8E4;
        v41 = v38;
        v42 = (_QWORD *)swift_task_alloc(v40);
        *(_QWORD *)(v0 + 288) = v42;
        *v42 = v0;
        v42[1] = sub_1002D406C;
        return AsyncChannel.send(_:)(*(_QWORD *)(v0 + 96));
      }
    }
  }
  return result;
}

uint64_t sub_1002D400C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 272);
  v1 = sub_100012E18(&qword_1005D7A90);
  v2 = swift_dynamicCast(v1, v0 + 64, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1002D406C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  sub_100145264(v2, type metadata accessor for FastSyncPresenceController.PresenceChangeEvent);
  return swift_task_switch(sub_1002D40CC, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_1002D40CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 128);

  sub_100145264(v1, type metadata accessor for FastSyncControllerPool.PresenceAction);
  v2 = sub_100145264(*(_QWORD *)(v0 + 160), type metadata accessor for FastSyncEditorActivityChangeHandler);
  *(_QWORD *)(v0 + 256) = static MainActor.shared.getter(v2);
  v3 = sub_100016638(&qword_1005D7EE8, &qword_1005D7EE0, (uint64_t)&protocol conformance descriptor for NotificationSource<A>.Iterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 264) = v4;
  *v4 = v0;
  v4[1] = sub_1002D3ADC;
  return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), v3);
}

uint64_t sub_1002D4180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_100012E18(&qword_1005D2210);
  v5[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[9] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[10] = swift_task_alloc(v8);
  v5[11] = swift_task_alloc(v8);
  v9 = type metadata accessor for EditNoteActivity(0);
  v5[12] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[13] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[14] = swift_task_alloc(v11);
  v5[15] = swift_task_alloc(v11);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D7EB0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v12);
  v5[17] = swift_task_alloc(v12);
  v13 = sub_100012E18(&qword_1005CF140);
  v5[18] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[19] = v14;
  v5[20] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D7EB8);
  v5[21] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[22] = v16;
  v5[23] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002D42B8, 0, 0);
}

uint64_t sub_1002D42B8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 192) = OBJC_IVAR___ICFastSyncPresenceController_noteActivityShareChanges;
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_1002D432C, v3, v4);
}

uint64_t sub_1002D432C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = v0[24];
  v2 = v0[18];
  v3 = v0[19];
  v4 = v0[6];
  swift_release(v0[25]);
  v5 = v4 + v1;
  swift_beginAccess(v5, v0 + 2, 0, 0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[19] + 16))(v0[20], v0[6] + v0[24], v0[18]);
    return swift_task_switch(sub_1002D43D8, 0, 0);
  }
  return result;
}

uint64_t sub_1002D43D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[18];
  NotificationSource.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[26] = OBJC_IVAR___ICFastSyncPresenceController_logger;
  v4 = sub_100016638(&qword_1005D7EC0, &qword_1005D7EB8, (uint64_t)&protocol conformance descriptor for NotificationSource<A>.Iterator);
  v0[27] = v4;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[28] = v5;
  *v5 = v0;
  v5[1] = sub_1002D4490;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[16], v0[21], v4);
}

uint64_t sub_1002D4490()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 224));
  if (v0)
  {
    *(_QWORD *)(v2 + 232) = v0;
    v3 = sub_1002D485C;
  }
  else
  {
    v3 = sub_1002D44F4;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002D44F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 136);
  sub_10014BD1C(*(_QWORD *)(v0 + 128), v1, &qword_1005D7EB0);
  v2 = sub_100012E18(&qword_1005D7DB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(v3, *(_QWORD *)(v0 + 168));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 136) + *(int *)(v2 + 48);
    (*(void (**)(uint64_t))(v15 + 32))(v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v17, v20, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v17, v19);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.debug.getter();
    v24 = os_log_type_enabled(v22, v23);
    v26 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 64);
    if (v24)
    {
      v42 = *(_QWORD *)(v0 + 72);
      v31 = swift_slowAlloc(22, -1);
      v41 = (uint64_t *)swift_slowAlloc(8, -1);
      v43 = swift_slowAlloc(32, -1);
      v44 = v43;
      *(_DWORD *)v31 = 136315394;
      v32 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
      v33 = dispatch thunk of CustomStringConvertible.description.getter(v27, v32);
      v35 = v34;
      *(_QWORD *)(v31 + 4) = sub_1003A4190(v33, v34, &v44);
      swift_bridgeObjectRelease(v35);
      v36 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v36(v25, v27);
      *(_WORD *)(v31 + 12) = 2112;
      v37 = CloudRecordSnapshot.id.getter(v30);
      *(_QWORD *)(v31 + 14) = v37;
      *v41 = v37;
      v38 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v38(v29, v30);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Incoming share change. Activity: %s, Share: %@", (uint8_t *)v31, 0x16u);
      v39 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v41, 1, v39);
      swift_slowDealloc(v41, -1, -1);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      v36 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v36(v25, v27);
      v38 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v38(v29, v30);
    }
    *(_QWORD *)(v0 + 240) = v36;
    *(_QWORD *)(v0 + 248) = v38;
    v40 = (_QWORD *)swift_task_alloc(dword_1005D7ECC);
    *(_QWORD *)(v0 + 256) = v40;
    *v40 = v0;
    v40[1] = sub_1002D48BC;
    return sub_1002D49F8(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  }
}

uint64_t sub_1002D485C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 232);
  v1 = sub_100012E18(&qword_1005D7A90);
  v2 = swift_dynamicCast(v1, v0 + 40, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1002D48BC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 256));
  return swift_task_switch(sub_1002D4910, 0, 0);
}

uint64_t sub_1002D4910()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(v0 + 248))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  v1(v2, v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 264) = v4;
  *v4 = v0;
  v4[1] = sub_1002D4994;
  return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 216));
}

uint64_t sub_1002D4994()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 264));
  if (v0)
  {
    *(_QWORD *)(v2 + 232) = v0;
    v3 = sub_1002D485C;
  }
  else
  {
    v3 = sub_1002D44F4;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002D49F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for FastSyncPresenceController.PresenceChangeEvent(0);
  v4[9] = v5;
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
  v4[11] = v6;
  v4[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EditNoteActivity(0);
  v4[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[14] = v8;
  v4[15] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D7C40) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[16] = swift_task_alloc(v9);
  v4[17] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v4[18] = static MainActor.shared.getter(v10);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
  v4[19] = v12;
  v4[20] = v13;
  return swift_task_switch(sub_1002D4B0C, v12, v13);
}

uint64_t sub_1002D4B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t (*v4)(uint64_t, uint64_t, int *);
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 64) + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
  swift_beginAccess(v2, v0 + 16, 0, 0);
  sub_100012CE8(v2, v1, &qword_1005D7C40);
  v3 = (int *)type metadata accessor for FastSyncControllerPool(0);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v3 - 1) + 48);
  result = v4(v1, 1, v3);
  if ((_DWORD)result != 1)
  {
    v6 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v10 = v52(v7, *(_QWORD *)(v0 + 40), v9);
    v11 = EditNoteActivity.id.getter(v10);
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = *(_QWORD *)(v6 + v3[8]);
    if (!*(_QWORD *)(v14 + 16))
    {
      swift_bridgeObjectRelease(v13);
      goto LABEL_14;
    }
    swift_bridgeObjectRetain(v13);
    v15 = sub_100249354(v11, v13);
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease_n(v13, 2);
      goto LABEL_14;
    }
    v17 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    result = swift_bridgeObjectRelease(v13);
    v19 = *(_QWORD *)(v17 + v3[7]);
    if ((v19 & 0xC000000000000001) != 0)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v19);
      goto LABEL_8;
    }
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v20 = *(id *)(v19 + 8 * v18 + 32);
LABEL_8:
      v21 = v20;
      *(_QWORD *)(v0 + 168) = v20;
      v22 = *(_QWORD *)(v0 + 136);
      swift_bridgeObjectRelease(v13);
      v23 = *(_QWORD *)(v22 + v3[9]);
      v24 = v21;
      swift_bridgeObjectRetain(v23);
      sub_1002D9320(v25, (uint64_t)v24);
      LOBYTE(v21) = v26;
      swift_bridgeObjectRelease(v23);

      if ((v21 & 1) != 0)
      {
        v27 = *(_QWORD *)(v0 + 128);
        sub_100145264(*(_QWORD *)(v0 + 136), type metadata accessor for FastSyncControllerPool);
        sub_100012CE8(v2, v27, &qword_1005D7C40);
        result = v4(v27, 1, v3);
        if ((_DWORD)result != 1)
        {
          v28 = *(_QWORD *)(v0 + 128);
          v29 = *(_QWORD **)(v0 + 96);
          v30 = *(_QWORD *)(v0 + 80);
          v31 = *(_QWORD *)(v0 + 88);
          v51 = *(_QWORD *)(v0 + 72);
          v32 = *(_QWORD *)(v0 + 40);
          v49 = *(_QWORD *)(v0 + 104);
          v50 = *(_QWORD *)(v0 + 48);
          v33 = *(_QWORD *)(v28 + v3[9]);
          v34 = swift_allocObject(&unk_100566180, 24, 7);
          *(_QWORD *)(v34 + 16) = v24;
          v35 = v24;
          swift_bridgeObjectRetain(v33);
          sub_100145264(v28, type metadata accessor for FastSyncControllerPool);
          sub_100206CCC(v33, (uint64_t)sub_1002DDE80, v34);
          v37 = v36;
          v52((uint64_t)v29 + *(int *)(v31 + 24), v32, v49);
          v38 = (char *)v29 + *(int *)(v31 + 28);
          v39 = sub_100012E18(&qword_1005D2210);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v38, v50, v39);
          *v29 = v35;
          v29[1] = v37;
          v40 = *(int *)(sub_100012E18(&qword_1005D7E60) + 48);
          sub_100145220((uint64_t)v29, v30, type metadata accessor for FastSyncEditorShareChangedEvent);
          *(_QWORD *)(v30 + v40) = v35;
          swift_storeEnumTagMultiPayload(v30, v51, 2);
          v41 = dword_1005DD8E4;
          v42 = v35;
          v43 = (_QWORD *)swift_task_alloc(v41);
          *(_QWORD *)(v0 + 176) = v43;
          *v43 = v0;
          v43[1] = sub_1002D4ECC;
          return AsyncChannel.send(_:)(*(_QWORD *)(v0 + 80));
        }
        goto LABEL_19;
      }

LABEL_14:
      v44 = *(_QWORD *)(v0 + 144);
      sub_100145264(*(_QWORD *)(v0 + 136), type metadata accessor for FastSyncControllerPool);
      swift_release(v44);
      v45 = *(_QWORD *)(v0 + 128);
      v46 = *(_QWORD *)(v0 + 120);
      v47 = *(_QWORD *)(v0 + 96);
      v48 = *(_QWORD *)(v0 + 80);
      swift_task_dealloc(*(_QWORD *)(v0 + 136));
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1002D4ECC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  sub_100145264(v2, type metadata accessor for FastSyncPresenceController.PresenceChangeEvent);
  return swift_task_switch(sub_1002D4F2C, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_1002D4F2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 144));

  sub_100145264(v2, type metadata accessor for FastSyncEditorShareChangedEvent);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D4FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;

  v5[27] = a4;
  v5[28] = a5;
  v5[25] = a2;
  v5[26] = a3;
  v6 = type metadata accessor for CancellationError(0);
  v5[29] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[30] = v7;
  v5[31] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
  v5[32] = v8;
  v5[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D4680) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[34] = swift_task_alloc(v9);
  v5[35] = swift_task_alloc(v9);
  v10 = type metadata accessor for SuspendingClock.Instant(0);
  v5[36] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[37] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v5[38] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[39] = swift_task_alloc(v13);
  v5[40] = swift_task_alloc(v13);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D7E38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[41] = swift_task_alloc(v14);
  v5[42] = swift_task_alloc(v14);
  v15 = sub_100012E18(&qword_1005D2218);
  v5[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for EditNoteActivity(0);
  v5[44] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v5[45] = v17;
  v5[46] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  v5[47] = v18;
  v19 = (*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[48] = swift_task_alloc(v19);
  v5[49] = swift_task_alloc(v19);
  v5[50] = swift_task_alloc(v19);
  v5[51] = swift_task_alloc(v19);
  v5[52] = swift_task_alloc(v19);
  v20 = type metadata accessor for FastSyncPresenceController.PresenceChangeEvent(0);
  v5[53] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v5[54] = v21;
  v5[55] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100012E18(&qword_1005D7E40);
  v5[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SuspendingClock(0);
  v5[57] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v5[58] = v24;
  v25 = *(_QWORD *)(v24 + 64);
  v5[59] = v25;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[60] = swift_task_alloc(v26);
  v5[61] = swift_task_alloc(v26);
  v27 = type metadata accessor for MainActor(0);
  v5[62] = v27;
  v5[63] = static MainActor.shared.getter(v27);
  v29 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor, v28);
  v5[64] = v29;
  v5[65] = v30;
  return swift_task_switch(sub_1002D5248, v29, v30);
}

uint64_t sub_1002D5248()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  SuspendingClock.init()();
  v1 = sub_10013AE3C((uint64_t)_swiftEmptyArrayStorage);
  v2 = sub_100012E18(&qword_1005D7E48);
  v3 = swift_allocObject(v2, 28, 7);
  *(_QWORD *)(v0 + 528) = v3;
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = AsyncChannel.makeAsyncIterator()();
  *(_QWORD *)(v0 + 128) = v4;
  *(_BYTE *)(v0 + 136) = v5 & 1;
  *(_QWORD *)(v0 + 536) = 0;
  *(_QWORD *)(v0 + 544) = static MainActor.shared.getter(v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1005DD8CC);
  *(_QWORD *)(v0 + 552) = v6;
  v7 = sub_100012E18(&qword_1005D7E50);
  *v6 = v0;
  v6[1] = sub_1002D5310;
  return AsyncChannel.Iterator.next()(*(_QWORD *)(v0 + 448), v7);
}

uint64_t sub_1002D5310()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 544);
  swift_task_dealloc(*(_QWORD *)(*v0 + 552));
  if (v2)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 544));
    v5 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v4);
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  return swift_task_switch(sub_1002D5390, v5, v7);
}

uint64_t sub_1002D5390()
{
  _QWORD *v0;

  swift_release(v0[68]);
  return swift_task_switch(sub_1002D53CC, v0[64], v0[65]);
}

void sub_1002D53CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t ObjectType;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  os_unfair_lock_s *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  int64_t v151;
  id v152;
  void (*v153)(uint64_t);
  uint64_t v154;
  uint64_t v155;
  void *v156;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 424);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 432) + 48))(v1, 1, v2) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 128));
    v153 = (void (*)(uint64_t))((char *)&dword_1005D7E58 + dword_1005D7E58);
    v3 = (_QWORD *)swift_task_alloc(unk_1005D7E5C);
    *(_QWORD *)(v0 + 560) = v3;
    *v3 = v0;
    v3[1] = sub_1002D5EEC;
    v153(1);
    return;
  }
  v4 = *(_QWORD *)(v0 + 440);
  sub_10013B170(v1, v4, type metadata accessor for FastSyncPresenceController.PresenceChangeEvent);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v20 = *(_QWORD *)(v0 + 440);
      v22 = *(_QWORD *)(v0 + 256);
      v21 = *(_QWORD *)(v0 + 264);
      v23 = *(void **)(v20 + *(int *)(sub_100012E18(&qword_1005D7E60) + 48));
      sub_10013B170(v20, v21, type metadata accessor for FastSyncEditorShareChangedEvent);
      RealtimeCollaborationController.shareChanged(for:with:)(v21 + *(int *)(v22 + 24), v21 + *(int *)(v22 + 28));
      v24 = *(_QWORD *)(v21 + 8);
      v145 = v23;
      if ((v24 & 0xC000000000000001) != 0)
      {
        if (v24 < 0)
          v25 = *(_QWORD *)(v21 + 8);
        else
          v25 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v24);
        v26 = __CocoaSet.makeIterator()(v25);
        v27 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
        v28 = sub_1002D9FA0();
        v29 = Set.Iterator.init(_cocoa:)(v26, v27, v28);
        v24 = *(_QWORD *)(v0 + 16);
        v154 = *(_QWORD *)(v0 + 24);
        v30 = *(_QWORD *)(v0 + 32);
        v31 = *(_QWORD *)(v0 + 40);
        v32 = *(_QWORD *)(v0 + 48);
      }
      else
      {
        v47 = -1 << *(_BYTE *)(v24 + 32);
        v154 = v24 + 56;
        v48 = ~v47;
        v49 = -v47;
        if (v49 < 64)
          v50 = ~(-1 << v49);
        else
          v50 = -1;
        v32 = v50 & *(_QWORD *)(v24 + 56);
        swift_bridgeObjectRetain(v24);
        v30 = v48;
        v31 = 0;
      }
      v151 = (unint64_t)(v30 + 64) >> 6;
      if (v24 < 0)
        goto LABEL_26;
      while (1)
      {
        if (v32)
        {
          v51 = (v32 - 1) & v32;
          v52 = __clz(__rbit64(v32)) | (v31 << 6);
          v53 = v31;
        }
        else
        {
          v59 = v31 + 1;
          if (__OFADD__(v31, 1))
          {
            __break(1u);
            return;
          }
          if (v59 >= v151)
            goto LABEL_48;
          v60 = *(_QWORD *)(v154 + 8 * v59);
          v53 = v31 + 1;
          if (!v60)
          {
            v53 = v31 + 2;
            if (v31 + 2 >= v151)
              goto LABEL_48;
            v60 = *(_QWORD *)(v154 + 8 * v53);
            if (!v60)
            {
              v53 = v31 + 3;
              if (v31 + 3 >= v151)
                goto LABEL_48;
              v60 = *(_QWORD *)(v154 + 8 * v53);
              if (!v60)
              {
                v53 = v31 + 4;
                if (v31 + 4 >= v151)
                  goto LABEL_48;
                v60 = *(_QWORD *)(v154 + 8 * v53);
                if (!v60)
                {
                  v61 = v31 + 5;
                  while (v151 != v61)
                  {
                    v60 = *(_QWORD *)(v154 + 8 * v61++);
                    if (v60)
                    {
                      v53 = v61 - 1;
                      goto LABEL_42;
                    }
                  }
LABEL_48:
                  v13 = *(_QWORD *)(v0 + 264);

                  sub_1001452E0(v24);
                  v70 = type metadata accessor for FastSyncEditorShareChangedEvent;
                  goto LABEL_54;
                }
              }
            }
          }
LABEL_42:
          v51 = (v60 - 1) & v60;
          v52 = __clz(__rbit64(v60)) + (v53 << 6);
        }
        v57 = *(id *)(*(_QWORD *)(v24 + 48) + 8 * v52);
        if (!v57)
          goto LABEL_48;
        while (1)
        {
          objc_msgSend(v57, "groupActivityDidChange");

          v31 = v53;
          v32 = v51;
          if ((v24 & 0x8000000000000000) == 0)
            break;
LABEL_26:
          v54 = __CocoaSet.Iterator.next()(v29);
          if (v54)
          {
            v55 = v54;
            *(_QWORD *)(v0 + 176) = v54;
            v56 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
            swift_unknownObjectRetain(v55);
            swift_dynamicCast(v0 + 168, v0 + 176, (char *)&type metadata for Swift.AnyObject + 8, v56, 7);
            v57 = *(id *)(v0 + 168);
            swift_unknownObjectRelease(v55, v58);
            v53 = v31;
            v51 = v32;
            if (v57)
              continue;
          }
          goto LABEL_48;
        }
      }
    }
    v6 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 384);
    v7 = *(_QWORD *)(v0 + 392);
    v9 = *(_QWORD *)(v0 + 376);
    v10 = *(void **)(v6 + *(int *)(sub_100012E18(&qword_1005D7E68) + 48));
    sub_10013B170(v6, v7, type metadata accessor for FastSyncControllerPool.PresenceAction);
    sub_100145220(v7, v8, type metadata accessor for FastSyncControllerPool.PresenceAction);
    v11 = swift_getEnumCaseMultiPayload(v8, v9);
    if (v11)
    {
      if (v11 == 1)
      {
        v12 = **(void ***)(v0 + 384);
        RealtimeCollaborationController.leaveGroupActivity()();

        v13 = *(_QWORD *)(v0 + 392);
        goto LABEL_53;
      }
    }
    else
    {
      v62 = *(_QWORD *)(v0 + 384);
      v64 = *(_QWORD *)(v0 + 360);
      v63 = *(_QWORD *)(v0 + 368);
      v66 = *(_QWORD *)(v0 + 344);
      v65 = *(_QWORD *)(v0 + 352);
      v67 = sub_100012E18(&qword_1005D7430);
      v68 = v62 + *(int *)(v67 + 48);
      v69 = *(void **)(v62 + *(int *)(v67 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v63, v62, v65);
      sub_10014BD1C(v68, v66, &qword_1005D2218);
      RealtimeCollaborationController.joinGroupActivity(_:with:)(v63, v66);

      sub_100012DDC(v66, &qword_1005D2218);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    }
    v13 = *(_QWORD *)(v0 + 392);
LABEL_53:
    objc_msgSend(v10, "groupActivityDidChange");

    v70 = type metadata accessor for FastSyncControllerPool.PresenceAction;
LABEL_54:
    v77 = sub_100145264(v13, v70);
    v86 = *(_QWORD *)(v0 + 536);
    goto LABEL_55;
  }
  v14 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 376);
  v10 = *(void **)(v14 + *(int *)(sub_100012E18(&qword_1005D7E68) + 48));
  if (swift_getEnumCaseMultiPayload(v14, v15) == 2)
  {
    v17 = *(_QWORD *)(v0 + 408);
    v16 = *(_QWORD *)(v0 + 416);
    swift_storeEnumTagMultiPayload(v16, v15, 2);
    sub_100145220(v16, v17, type metadata accessor for FastSyncControllerPool.PresenceAction);
    v18 = swift_getEnumCaseMultiPayload(v17, v15);
    if (v18)
    {
      if (v18 == 1)
      {
        v19 = **(void ***)(v0 + 408);
        RealtimeCollaborationController.leaveGroupActivity()();

      }
    }
    else
    {
      v78 = *(_QWORD *)(v0 + 408);
      v80 = *(_QWORD *)(v0 + 360);
      v79 = *(_QWORD *)(v0 + 368);
      v82 = *(_QWORD *)(v0 + 344);
      v81 = *(_QWORD *)(v0 + 352);
      v83 = sub_100012E18(&qword_1005D7430);
      v84 = v78 + *(int *)(v83 + 48);
      v85 = *(void **)(v78 + *(int *)(v83 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v79, v78, v81);
      sub_10014BD1C(v84, v82, &qword_1005D2218);
      RealtimeCollaborationController.joinGroupActivity(_:with:)(v79, v82);

      sub_100012DDC(v82, &qword_1005D2218);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
    }
    v13 = *(_QWORD *)(v0 + 416);
    goto LABEL_53;
  }
  v155 = *(_QWORD *)(v0 + 536);
  v33 = *(_QWORD *)(v0 + 528);
  v143 = *(_QWORD *)(v0 + 488);
  v34 = *(_QWORD *)(v0 + 400);
  v36 = *(_QWORD *)(v0 + 208);
  v35 = *(void **)(v0 + 216);
  v148 = (_QWORD *)(v33 + 16);
  v150 = *(_QWORD *)(v0 + 336);
  v146 = (os_unfair_lock_s *)(v33 + 24);
  sub_10013B170(v14, v34, type metadata accessor for FastSyncControllerPool.PresenceAction);
  v37 = v10;
  v38 = objc_msgSend(v37, "description");
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v42 = objc_msgSend(v37, "editorIdentifier");
  v43 = static Duration.seconds(_:)(objc_msgSend(v35, "fastSyncPresenceDebounceDuration"));
  v45 = v44;
  v46 = swift_task_alloc(96);
  *(_QWORD *)(v46 + 16) = v42;
  *(_QWORD *)(v46 + 24) = v143;
  *(_QWORD *)(v46 + 32) = v43;
  *(_QWORD *)(v46 + 40) = v45;
  *(_QWORD *)(v46 + 48) = v36;
  *(_QWORD *)(v46 + 56) = v39;
  *(_QWORD *)(v46 + 64) = v41;
  *(_QWORD *)(v46 + 72) = v34;
  *(_QWORD *)(v46 + 80) = v37;
  os_unfair_lock_lock(v146);
  sub_1002D64BC(v148, *(_QWORD *)(v46 + 16), *(_QWORD *)(v46 + 24), *(_QWORD *)(v46 + 32), *(_QWORD *)(v46 + 40), *(_QWORD *)(v46 + 48), *(_QWORD *)(v46 + 56), *(_QWORD *)(v46 + 64), v150, *(_QWORD *)(v46 + 72), *(void **)(v46 + 80));
  os_unfair_lock_unlock(v146);
  if (!v155)
  {
    v152 = v42;
    v156 = v37;
    v72 = *(_QWORD *)(v0 + 328);
    v71 = *(_QWORD *)(v0 + 336);
    v73 = *(_QWORD *)(v0 + 288);
    v74 = *(_QWORD *)(v0 + 296);
    swift_task_dealloc(v46);
    sub_100012CE8(v71, v72, &qword_1005D7E38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73) == 1)
    {
      v75 = *(_QWORD *)(v0 + 400);
      v76 = *(_QWORD *)(v0 + 328);
      sub_100012DDC(*(_QWORD *)(v0 + 336), &qword_1005D7E38);
      swift_bridgeObjectRelease(v41);

      sub_100145264(v75, type metadata accessor for FastSyncControllerPool.PresenceAction);
      v77 = sub_100012DDC(v76, &qword_1005D7E38);
    }
    else
    {
      v144 = *(_QWORD *)(v0 + 528);
      v130 = *(_QWORD *)(v0 + 488);
      v89 = *(_QWORD *)(v0 + 472);
      v90 = *(_QWORD *)(v0 + 456);
      v147 = *(_QWORD *)(v0 + 464);
      v149 = *(_QWORD *)(v0 + 480);
      v91 = *(_QWORD *)(v0 + 320);
      v92 = *(_QWORD *)(v0 + 312);
      v132 = v92;
      v133 = v90;
      v93 = *(_QWORD *)(v0 + 288);
      v94 = *(_QWORD *)(v0 + 296);
      v95 = *(_QWORD *)(v0 + 280);
      v140 = *(_QWORD *)(v0 + 304);
      v142 = *(_QWORD *)(v0 + 272);
      v137 = v95;
      v138 = *(void **)(v0 + 208);
      v139 = *(_QWORD *)(v0 + 200);
      v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
      v129 = v93;
      v136(v91, *(_QWORD *)(v0 + 328), v93);
      v96 = type metadata accessor for TaskPriority(0);
      v134 = *(_QWORD *)(v96 - 8);
      v135 = v96;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v95, 1, 1, v96);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v92, v91, v93);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v149, v130, v90);
      v97 = *(unsigned __int8 *)(v94 + 80);
      v98 = (v97 + 32) & ~v97;
      v99 = *(unsigned __int8 *)(v147 + 80);
      v100 = (v140 + v99 + v98) & ~v99;
      v101 = (v89 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
      v131 = v41;
      v102 = (v101 + 15) & 0xFFFFFFFFFFFFFFF8;
      v103 = (v102 + 15) & 0xFFFFFFFFFFFFFFF8;
      v104 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
      v105 = (v104 + 23) & 0xFFFFFFFFFFFFFFF8;
      v106 = swift_allocObject(&unk_100566158, v105 + 8, v97 | v99 | 7);
      *(_QWORD *)(v106 + 16) = 0;
      v141 = (_QWORD *)(v106 + 16);
      *(_QWORD *)(v106 + 24) = 0;
      v136(v106 + v98, v132, v129);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 32))(v106 + v100, v149, v133);
      *(_QWORD *)(v106 + v101) = v144;
      *(_QWORD *)(v106 + v102) = v152;
      *(_QWORD *)(v106 + v103) = v138;
      v107 = (uint64_t *)(v106 + v104);
      *v107 = v39;
      v107[1] = v131;
      *(_QWORD *)(v106 + v105) = v139;
      sub_100012CE8(v137, v142, &qword_1005D4680);
      LODWORD(v101) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v142, 1, v135);
      swift_retain(v144);
      v108 = v138;
      v109 = swift_retain(v139);
      v110 = *(_QWORD *)(v0 + 272);
      if ((_DWORD)v101 == 1)
      {
        sub_100012DDC(*(_QWORD *)(v0 + 272), &qword_1005D4680);
        v111 = 12544;
      }
      else
      {
        v112 = TaskPriority.rawValue.getter(v109);
        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v110, v135);
        v111 = v112 | 0x3100;
      }
      v113 = *v141;
      if (*v141)
      {
        v114 = *(_QWORD *)(v106 + 24);
        ObjectType = swift_getObjectType(*v141);
        v116 = swift_unknownObjectRetain(v113);
        v117 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v114, v116);
        v119 = v118;
        swift_unknownObjectRelease(v113, v118);
      }
      else
      {
        v117 = 0;
        v119 = 0;
      }
      v120 = **(_QWORD **)(v0 + 224);
      v121 = v119 | v117;
      if (v119 | v117)
      {
        v121 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v117;
        *(_QWORD *)(v0 + 80) = v119;
      }
      v122 = *(_QWORD *)(v0 + 400);
      v123 = *(_QWORD *)(v0 + 336);
      v124 = *(_QWORD *)(v0 + 320);
      v126 = *(_QWORD *)(v0 + 288);
      v125 = *(_QWORD *)(v0 + 296);
      v127 = *(_QWORD *)(v0 + 280);
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v121;
      *(_QWORD *)(v0 + 104) = v120;
      v128 = swift_task_create(v111, v0 + 88, (char *)&type metadata for () + 8, &unk_1005D7E78, v106);

      swift_release(v128);
      sub_100012DDC(v127, &qword_1005D4680);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v124, v126);
      sub_100012DDC(v123, &qword_1005D7E38);
      v77 = sub_100145264(v122, type metadata accessor for FastSyncControllerPool.PresenceAction);
    }
    v86 = 0;
LABEL_55:
    *(_QWORD *)(v0 + 536) = v86;
    *(_QWORD *)(v0 + 544) = static MainActor.shared.getter(v77);
    v87 = (_QWORD *)swift_task_alloc(dword_1005DD8CC);
    *(_QWORD *)(v0 + 552) = v87;
    v88 = sub_100012E18(&qword_1005D7E50);
    *v87 = v0;
    v87[1] = sub_1002D5310;
    AsyncChannel.Iterator.next()(*(_QWORD *)(v0 + 448), v88);
  }
}

uint64_t sub_1002D5EEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 560);
  *(_QWORD *)(*v1 + 568) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002D60AC;
  else
    v4 = sub_1002D5F50;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 512), *(_QWORD *)(v2 + 520));
}

uint64_t sub_1002D5F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 528));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v5 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 440);
  v6 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 416);
  v11 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 384);
  v13 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 344);
  v16 = *(_QWORD *)(v0 + 336);
  v17 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 272);
  v22 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 488));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D60AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Swift::String v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v1 = *(_QWORD *)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 504));
  *(_QWORD *)(v0 + 152) = v1;
  swift_errorRetain(v1);
  v4 = sub_100012E18(&qword_1005D7A90);
  v5 = swift_dynamicCast(v2, v0 + 152, v4, v3, 0);
  v6 = *(_QWORD *)(v0 + 568);
  if ((v5 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 488);
    v9 = *(_QWORD *)(v0 + 456);
    v8 = *(_QWORD *)(v0 + 464);
    v11 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 528));
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_errorRelease(*(_QWORD *)(v0 + 152));
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 152));
    swift_errorRetain(v6);
    v13 = swift_errorRetain(v6);
    v14 = static os_log_type_t.fault.getter(v13);
    v15 = v14;
    v16 = Logger.logObject.getter(v14);
    v17 = v15;
    v18 = os_log_type_enabled(v16, v15);
    v19 = *(_QWORD *)(v0 + 568);
    if (v18)
    {
      v47 = *(_QWORD *)(v0 + 528);
      v20 = swift_slowAlloc(32, -1);
      v44 = swift_slowAlloc(64, -1);
      v49 = v44;
      *(_DWORD *)v20 = 136315650;
      v21 = StaticString.description.getter("MobileNotes/FastSyncPresenceController.swift", 44, 2);
      v23 = v22;
      *(_QWORD *)(v0 + 184) = sub_1003A4190(v21, v22, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v20 + 4);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v20 + 12) = 2048;
      *(_QWORD *)(v0 + 144) = 299;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v20 + 14);
      *(_WORD *)(v20 + 22) = 2080;
      v50 = 0;
      v51 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      v24 = v51;
      *(_QWORD *)(v0 + 112) = v50;
      *(_QWORD *)(v0 + 120) = v24;
      v25._object = (void *)0x8000000100486B90;
      v25._countAndFlagsBits = 0xD00000000000002FLL;
      String.append(_:)(v25);
      *(_QWORD *)(v0 + 192) = v19;
      _print_unlocked<A, B>(_:_:)(v0 + 192, v0 + 112, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v26 = *(_QWORD *)(v0 + 120);
      *(_QWORD *)(v0 + 160) = sub_1003A4190(*(_QWORD *)(v0 + 112), v26, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v20 + 24);
      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed assertion at %s:%lu: %s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy(v44, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v20, -1, -1);
      v27 = v47;
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 528);
    }
    swift_release(v27);
    swift_errorRelease(v19);

    swift_errorRelease(v19);
    swift_errorRelease(v19);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 456));
  }
  v28 = *(_QWORD *)(v0 + 480);
  v30 = *(_QWORD *)(v0 + 440);
  v29 = *(_QWORD *)(v0 + 448);
  v31 = *(_QWORD *)(v0 + 408);
  v32 = *(_QWORD *)(v0 + 416);
  v34 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD *)(v0 + 400);
  v35 = *(_QWORD *)(v0 + 384);
  v36 = *(_QWORD *)(v0 + 368);
  v38 = *(_QWORD *)(v0 + 344);
  v39 = *(_QWORD *)(v0 + 336);
  v40 = *(_QWORD *)(v0 + 328);
  v41 = *(_QWORD *)(v0 + 320);
  v42 = *(_QWORD *)(v0 + 312);
  v43 = *(_QWORD *)(v0 + 280);
  v45 = *(_QWORD *)(v0 + 272);
  v46 = *(_QWORD *)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 488));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D64BC@<X0>(_QWORD *a1@<X0>, Swift::UInt a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  unint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  uint64_t v102;
  char *v103;
  void *v104;
  id v105;
  uint64_t v106;
  uint64_t v108;
  void (*v109)(int *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  void *v119;
  id v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  void *v137;
  uint64_t v138;
  void (*v139)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v140;
  Swift::UInt v141;
  _QWORD *v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;

  v133 = a8;
  v125 = a7;
  v126 = a6;
  v140 = a5;
  v129 = a4;
  v127 = a3;
  v143 = a9;
  v13 = type metadata accessor for SuspendingClock.Instant(0);
  v145 = *(_QWORD *)(v13 - 8);
  v146 = v13;
  v14 = __chkstk_darwin(v13);
  v144 = (int *)((char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v14);
  v124 = (char *)&v122 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v122 - v19;
  v21 = __chkstk_darwin(v18);
  v136 = (char *)&v122 - v22;
  v23 = __chkstk_darwin(v21);
  v135 = (char *)&v122 - v24;
  v25 = __chkstk_darwin(v23);
  v134 = (char *)&v122 - v26;
  v27 = __chkstk_darwin(v25);
  v131 = (char *)&v122 - v28;
  __chkstk_darwin(v27);
  v130 = (char *)&v122 - v29;
  v30 = sub_100012E18(&qword_1005D7E88);
  v31 = __chkstk_darwin(v30);
  v128 = (char *)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v122 - v34;
  __chkstk_darwin(v33);
  v37 = (char *)&v122 - v36;
  v38 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v41 = (char *)&v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = a2;
  v142 = a1;
  v42 = *a1;
  if (*(_QWORD *)(v42 + 16) && (v43 = sub_1002493C8(a2), (v44 & 1) != 0))
  {
    sub_100145220(*(_QWORD *)(v42 + 56) + *(_QWORD *)(v39 + 72) * v43, (uint64_t)v37, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
    v45 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56);
    v46 = v37;
    v47 = 0;
  }
  else
  {
    v45 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56);
    v46 = v37;
    v47 = 1;
  }
  v139 = v45;
  v45((uint64_t)v46, v47, 1, v38);
  v48 = (_QWORD *)v145;
  v138 = a10;
  sub_10014BD1C((uint64_t)v37, (uint64_t)v35, &qword_1005D7E88);
  v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38);
  v50 = (uint64_t)v144;
  if (v49 == 1)
  {
    v51 = sub_100012E18(&qword_1005D7E90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v41, 1, 1, v51);
    sub_100012DDC((uint64_t)v35, &qword_1005D7E88);
  }
  else
  {
    sub_10013B170((uint64_t)v35, (uint64_t)v41, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
  }
  v52 = v140;
  v140 = v38;
  v137 = a11;
  v53 = (int *)sub_100012E18(&qword_1005D7E90);
  v132 = *((_QWORD *)v53 - 1);
  v54 = (*(uint64_t (**)(char *, uint64_t, int *))(v132 + 48))(v41, 1, v53);
  if ((_DWORD)v54 == 1)
  {
    v55 = v130;
    SuspendingClock.now.getter(v54);
    v56 = v129;
    static SuspendingClock.Instant.+ infix(_:_:)(v55, v129, v52);
    v57 = v133;
    v58 = swift_bridgeObjectRetain_n(v133, 2);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.debug.getter();
    v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      v62 = swift_slowAlloc(22, -1);
      LODWORD(v136) = v61;
      v63 = v62;
      v144 = (int *)swift_slowAlloc(64, -1);
      v149 = v144;
      *(_DWORD *)v63 = 136315394;
      swift_bridgeObjectRetain(v57);
      v147 = sub_1003A4190(v125, v57, (uint64_t *)&v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148, v63 + 4);
      swift_bridgeObjectRelease_n(v57, 3);
      *(_WORD *)(v63 + 12) = 2080;
      v64 = Duration.description.getter(v56);
      v66 = v65;
      v147 = sub_1003A4190(v64, v65, (uint64_t *)&v149);
      v48 = (_QWORD *)v145;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148, v63 + 14);
      swift_bridgeObjectRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v136, "%s: Debouncing for %s", (uint8_t *)v63, 0x16u);
      v67 = (uint64_t)v144;
      swift_arrayDestroy(v144, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v57, 2);
    }
    v95 = (uint64_t)v128;
    v96 = &v128[v53[12]];
    v97 = (uint64_t)&v128[v53[16]];
    v98 = v53[20];
    v99 = v48;
    v100 = (void (*)(char *, char *, uint64_t))v48[2];
    v144 = v53;
    v101 = v130;
    v102 = v146;
    v100(v128, v130, v146);
    v103 = v131;
    v100(v96, v131, v102);
    sub_100145220(v138, v97, type metadata accessor for FastSyncControllerPool.PresenceAction);
    v104 = v137;
    *(_QWORD *)(v95 + v98) = v137;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v132 + 56))(v95, 0, 1, v144);
    v139(v95, 0, 1, v140);
    v105 = v104;
    sub_1002CF77C(v95, v141);
    ((void (*)(char *, uint64_t))v99[1])(v101, v102);
    v106 = v143;
    ((void (*)(uint64_t, char *, uint64_t))v99[4])(v143, v103, v102);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v99[7])(v106, 0, 1, v102);
  }
  else
  {
    v68 = &v41[v53[12]];

    v69 = v41;
    v70 = v52;
    v71 = v50;
    v72 = (void (*)(char *))v48[4];
    v123 = v69;
    v73 = v146;
    v72(v134);
    v74 = v135;
    v75 = ((uint64_t (*)(char *, char *, uint64_t))v72)(v135, v68, v73);
    SuspendingClock.now.getter(v75);
    v76 = v136;
    static SuspendingClock.Instant.+ infix(_:_:)(v20, v129, v70);
    v131 = (char *)v48[1];
    ((void (*)(char *, uint64_t))v131)(v20, v73);
    v77 = (void (*)(char *, char *, uint64_t))v48[2];
    v78 = v124;
    v77(v124, v76, v73);
    v130 = (char *)v77;
    v77((char *)v71, v74, v73);
    v79 = v133;
    v80 = swift_bridgeObjectRetain_n(v133, 2);
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = v79;
      v84 = swift_slowAlloc(22, -1);
      v129 = swift_slowAlloc(64, -1);
      v149 = (int *)v129;
      *(_DWORD *)v84 = 136315394;
      v85 = v78;
      swift_bridgeObjectRetain(v83);
      v147 = sub_1003A4190(v125, v83, (uint64_t *)&v149);
      v86 = (uint64_t)v144;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148, v84 + 4);
      swift_bridgeObjectRelease_n(v83, 3);
      *(_WORD *)(v84 + 12) = 2080;
      v87 = static SuspendingClock.Instant.- infix(_:_:)(v78, v86);
      v88 = Duration.description.getter(v87);
      v90 = v89;
      v147 = sub_1003A4190(v88, v89, (uint64_t *)&v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148, v84 + 14);
      swift_bridgeObjectRelease(v90);
      v91 = v85;
      v92 = v146;
      v93 = (void (*)(uint64_t, uint64_t))v131;
      ((void (*)(char *, uint64_t))v131)(v91, v146);
      v93(v86, v92);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "%s: Extending deadline for %s", (uint8_t *)v84, 0x16u);
      v94 = v129;
      swift_arrayDestroy(v129, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v84, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v79, 2);
      v108 = v146;
      v109 = (void (*)(int *, uint64_t))v131;
      ((void (*)(char *, uint64_t))v131)(v78, v146);
      v109(v144, v108);
    }
    v110 = v53[16];
    v144 = (int *)&v123[v110];
    v111 = (uint64_t)v128;
    v112 = &v128[v53[12]];
    v113 = (uint64_t)&v128[v110];
    v114 = v53[20];
    v115 = v134;
    v116 = v146;
    v117 = (void (*)(char *, char *, uint64_t))v130;
    ((void (*)(char *, char *, uint64_t))v130)(v128, v134, v146);
    v118 = v136;
    v117(v112, v136, v116);
    sub_100145220(v138, v113, type metadata accessor for FastSyncControllerPool.PresenceAction);
    v119 = v137;
    *(_QWORD *)(v111 + v114) = v137;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v132 + 56))(v111, 0, 1, v53);
    v139(v111, 0, 1, v140);
    v120 = v119;
    sub_1002CF77C(v111, v141);
    v121 = (void (*)(char *, uint64_t))v131;
    ((void (*)(char *, uint64_t))v131)(v118, v116);
    v121(v135, v116);
    v121(v115, v116);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v145 + 56))(v143, 1, 1, v116);
    return sub_100145264((uint64_t)v144, type metadata accessor for FastSyncControllerPool.PresenceAction);
  }
}

uint64_t sub_1002D6E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 96) = v18;
  *(_OWORD *)(v8 + 80) = v17;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 40) = a4;
  v9 = type metadata accessor for FastSyncPresenceController.PresenceChangeEvent(0);
  *(_QWORD *)(v8 + 104) = v9;
  *(_QWORD *)(v8 + 112) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  *(_QWORD *)(v8 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FastSyncPresenceController.SleepResult(0);
  *(_QWORD *)(v8 + 128) = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 136) = swift_task_alloc(v12);
  *(_QWORD *)(v8 + 144) = swift_task_alloc(v12);
  v13 = type metadata accessor for SuspendingClock.Instant(0);
  *(_QWORD *)(v8 + 152) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 160) = v14;
  *(_QWORD *)(v8 + 168) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D7E38) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 176) = swift_task_alloc(v15);
  *(_QWORD *)(v8 + 184) = swift_task_alloc(v15);
  return swift_task_switch(sub_1002D6F8C, 0, 0);
}

uint64_t sub_1002D6F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v2, *(_QWORD *)(v0 + 40), v3);
  v5 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
  *(_QWORD *)(v0 + 192) = v5;
  v5(v2, 0, 1, v3);
  sub_100012CE8(v2, v1, &qword_1005D7E38);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v0 + 200) = v6;
  if (v6(v1, 1, v3) == 1)
  {
    v7 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    sub_100012DDC(v8, &qword_1005D7E38);
    sub_100012DDC(v7, &qword_1005D7E38);
    swift_task_dealloc(v8);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 160) + 32);
    *(_QWORD *)(v0 + 208) = v16;
    v16(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), v15);
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    v17 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep<A>(until:tolerance:clock:)[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = type metadata accessor for SuspendingClock(0);
    v19 = sub_100019C6C(&qword_1005D7E80, (uint64_t (*)(uint64_t))&type metadata accessor for SuspendingClock, (uint64_t)&protocol conformance descriptor for SuspendingClock);
    *v17 = v0;
    v17[1] = sub_1002D714C;
    return static Task<>.sleep<A>(until:tolerance:clock:)(*(_QWORD *)(v0 + 168), v0 + 16, *(_QWORD *)(v0 + 48), v18, v19);
  }
}

uint64_t sub_1002D714C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002D777C;
  else
    v3 = sub_1002D71B0;
  return swift_task_switch(v3, 0, 0);
}

void sub_1002D71B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = (os_unfair_lock_s *)(v7 + 24);
  v9 = (_QWORD *)(v7 + 16);
  v10 = swift_task_alloc(64);
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v1;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v4;
  *(_QWORD *)(v10 + 48) = v3;
  os_unfair_lock_lock(v8);
  sub_1002D7834(v9, *(_QWORD *)(v10 + 16), *(void (**)(char *, uint64_t))(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), v2);
  os_unfair_lock_unlock(v8);
  if (!v47)
  {
    v11 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(v10);
    sub_100012DDC(v11, &qword_1005D7E38);
    sub_100145220(v12, v13, type metadata accessor for FastSyncPresenceController.SleepResult);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = *(_QWORD *)(v0 + 184);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 192);
      v17 = *(_QWORD *)(v0 + 152);
      v18 = *(_QWORD *)(v0 + 136);
      v20 = *(_QWORD *)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 120);
      v48 = *(_QWORD *)(v0 + 104);
      v21 = sub_100012E18(&qword_1005D7E68);
      v22 = *(void **)(v18 + *(int *)(v21 + 48));
      *(_QWORD *)(v0 + 232) = v22;
      sub_10013B170(v18, v19, type metadata accessor for FastSyncControllerPool.PresenceAction);
      v16(v15, 1, 1, v17);
      v23 = *(int *)(v21 + 48);
      sub_100145220(v19, v20, type metadata accessor for FastSyncControllerPool.PresenceAction);
      *(_QWORD *)(v20 + v23) = v22;
      swift_storeEnumTagMultiPayload(v20, v48, 1);
      v24 = dword_1005DD8E4;
      v25 = v22;
      v26 = (_QWORD *)swift_task_alloc(v24);
      *(_QWORD *)(v0 + 240) = v26;
      *v26 = v0;
      v26[1] = sub_1002D754C;
      AsyncChannel.send(_:)(*(_QWORD *)(v0 + 112));
    }
    else
    {
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
      v28 = *(_QWORD *)(v0 + 184);
      v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 192);
      v31 = *(_QWORD *)(v0 + 160);
      v30 = *(_QWORD *)(v0 + 168);
      v32 = *(_QWORD *)(v0 + 152);
      v33 = *(_QWORD *)(v0 + 136);
      sub_100145264(*(_QWORD *)(v0 + 144), type metadata accessor for FastSyncPresenceController.SleepResult);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
      v27(v28, v33, v32);
      v29(v28, 0, 1, v32);
      v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
      v35 = *(_QWORD *)(v0 + 176);
      v36 = *(_QWORD *)(v0 + 152);
      sub_100012CE8(*(_QWORD *)(v0 + 184), v35, &qword_1005D7E38);
      if (v34(v35, 1, v36) == 1)
      {
        v37 = *(_QWORD *)(v0 + 176);
        v38 = *(_QWORD *)(v0 + 184);
        v39 = *(_QWORD *)(v0 + 168);
        v41 = *(_QWORD *)(v0 + 136);
        v40 = *(_QWORD *)(v0 + 144);
        v43 = *(_QWORD *)(v0 + 112);
        v42 = *(_QWORD *)(v0 + 120);
        sub_100012DDC(v38, &qword_1005D7E38);
        sub_100012DDC(v37, &qword_1005D7E38);
        swift_task_dealloc(v38);
        swift_task_dealloc(v37);
        swift_task_dealloc(v39);
        swift_task_dealloc(v40);
        swift_task_dealloc(v41);
        swift_task_dealloc(v42);
        swift_task_dealloc(v43);
        (*(void (**)(void))(v0 + 8))();
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 16) = 0;
        *(_BYTE *)(v0 + 32) = 1;
        v44 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep<A>(until:tolerance:clock:)[1]);
        *(_QWORD *)(v0 + 216) = v44;
        v45 = type metadata accessor for SuspendingClock(0);
        v46 = sub_100019C6C(&qword_1005D7E80, (uint64_t (*)(uint64_t))&type metadata accessor for SuspendingClock, (uint64_t)&protocol conformance descriptor for SuspendingClock);
        *v44 = v0;
        v44[1] = sub_1002D714C;
        static Task<>.sleep<A>(until:tolerance:clock:)(*(_QWORD *)(v0 + 168), v0 + 16, *(_QWORD *)(v0 + 48), v45, v46);
      }
    }
  }
}

uint64_t sub_1002D754C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 240));
  sub_100145264(v1, type metadata accessor for FastSyncPresenceController.PresenceChangeEvent);
  return swift_task_switch(sub_1002D75B4, 0, 0);
}

uint64_t sub_1002D75B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 120);

  sub_100145264(v5, type metadata accessor for FastSyncControllerPool.PresenceAction);
  sub_100145264(v4, type metadata accessor for FastSyncPresenceController.SleepResult);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  v7 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 152);
  sub_100012CE8(*(_QWORD *)(v0 + 184), v7, &qword_1005D7E38);
  if (v6(v7, 1, v8) == 1)
  {
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 120);
    sub_100012DDC(v10, &qword_1005D7E38);
    sub_100012DDC(v9, &qword_1005D7E38);
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    v17 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep<A>(until:tolerance:clock:)[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = type metadata accessor for SuspendingClock(0);
    v19 = sub_100019C6C(&qword_1005D7E80, (uint64_t (*)(uint64_t))&type metadata accessor for SuspendingClock, (uint64_t)&protocol conformance descriptor for SuspendingClock);
    *v17 = v0;
    v17[1] = sub_1002D714C;
    return static Task<>.sleep<A>(until:tolerance:clock:)(*(_QWORD *)(v0 + 168), v0 + 16, *(_QWORD *)(v0 + 48), v18, v19);
  }
}

uint64_t sub_1002D777C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  sub_100012DDC(v2, &qword_1005D7E38);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D7834@<X0>(_QWORD *a1@<X0>, Swift::UInt a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  int *v44;
  uint64_t result;
  char *v46;
  void *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  Swift::UInt v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  Swift::UInt v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v96 = a3;
  v86 = a4;
  v87 = a6;
  v81 = a5;
  v95 = a7;
  v9 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  __chkstk_darwin(v9);
  v93 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SuspendingClock.Instant(0);
  v98 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v91 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v88 = (char *)&v80 - v15;
  v16 = __chkstk_darwin(v14);
  v92 = (char *)&v80 - v17;
  v18 = __chkstk_darwin(v16);
  v97 = (char *)&v80 - v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v80 - v20;
  v22 = sub_100012E18(&qword_1005D7E88);
  v23 = __chkstk_darwin(v22);
  v90 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v80 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v80 - v28;
  v30 = type metadata accessor for FastSyncPresenceController.EditorDebounceState(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a2;
  v84 = a1;
  v34 = *a1;
  if (*(_QWORD *)(v34 + 16))
  {
    v35 = sub_1002493C8(a2);
    if ((v36 & 1) != 0)
    {
      sub_100145220(*(_QWORD *)(v34 + 56) + *(_QWORD *)(v31 + 72) * v35, (uint64_t)v29, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v38 = v29;
      v39 = 0;
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v38 = v29;
      v39 = 1;
    }
    v40 = v30;
    v82 = v37;
    v37(v38, v39, 1, v30);
  }
  else
  {
    v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v82(v29, 1, 1, v30);
    v40 = v30;
  }
  sub_10014BD1C((uint64_t)v29, (uint64_t)v27, &qword_1005D7E88);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v27, 1, v40);
  v42 = (_QWORD *)v98;
  if (v41 == 1)
  {
    v43 = sub_100012E18(&qword_1005D7E90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v33, 1, 1, v43);
    sub_100012DDC((uint64_t)v27, &qword_1005D7E88);
  }
  else
  {
    sub_10013B170((uint64_t)v27, (uint64_t)v33, type metadata accessor for FastSyncPresenceController.EditorDebounceState);
  }
  v89 = v40;
  v44 = (int *)sub_100012E18(&qword_1005D7E90);
  v85 = *((_QWORD *)v44 - 1);
  result = (*(uint64_t (**)(char *, uint64_t, int *))(v85 + 48))(v33, 1, v44);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v46 = &v33[v44[12]];
    v94 = &v33[v44[16]];
    v47 = *(void **)&v33[v44[20]];
    v48 = (void (*)(char *, char *, uint64_t))v42[2];
    v48(v21, v46, v11);
    v49 = sub_100019C6C(&qword_1005D7E98, (uint64_t (*)(uint64_t))&type metadata accessor for SuspendingClock.Instant, (uint64_t)&protocol conformance descriptor for SuspendingClock.Instant);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v21, v96, v11, v49) & 1) != 0)
    {
      v80 = v47;
      v96 = (void (*)(char *, uint64_t))v42[1];
      v96(v21, v11);
      v50 = (void (*)(char *, char *, uint64_t))v42[4];
      v51 = v97;
      v50(v97, v33, v11);
      v52 = v92;
      v50(v92, v46, v11);
      v53 = v93;
      sub_10013B170((uint64_t)v94, v93, type metadata accessor for FastSyncControllerPool.PresenceAction);
      v54 = v88;
      v48(v88, v52, v11);
      v55 = v91;
      v48(v91, v51, v11);
      v56 = v87;
      v57 = swift_bridgeObjectRetain_n(v87, 2);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.debug.getter();
      v60 = v59;
      if (os_log_type_enabled(v58, v59))
      {
        v61 = swift_slowAlloc(22, -1);
        v98 = swift_slowAlloc(64, -1);
        v101 = v98;
        *(_DWORD *)v61 = 136315394;
        LODWORD(v94) = v60;
        swift_bridgeObjectRetain(v56);
        v99 = sub_1003A4190(v81, v56, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v61 + 4);
        swift_bridgeObjectRelease_n(v56, 3);
        *(_WORD *)(v61 + 12) = 2080;
        v62 = static SuspendingClock.Instant.- infix(_:_:)(v54, v55);
        v63 = Duration.description.getter(v62);
        v65 = v64;
        v99 = sub_1003A4190(v63, v64, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v61 + 14);
        v66 = v65;
        v53 = v93;
        swift_bridgeObjectRelease(v66);
        v67 = v96;
        v96(v54, v11);
        v67(v91, v11);
        _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v94, "%s: Debounce finished after %s", (uint8_t *)v61, 0x16u);
        v68 = v98;
        swift_arrayDestroy(v98, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v68, -1, -1);
        v69 = v61;
        v52 = v92;
        swift_slowDealloc(v69, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v56, 2);
        v73 = v96;
        v96(v54, v11);
        v73(v55, v11);
      }
      v74 = v95;
      v75 = v83;
      v76 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t, int *))(v85 + 56))(v90, 1, 1, v44);
      v82((char *)v76, 0, 1, v89);
      sub_1002CF77C(v76, v75);
      v77 = v96;
      v96(v52, v11);
      v77(v97, v11);
      v78 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
      sub_10013B170(v53, v74, type metadata accessor for FastSyncControllerPool.PresenceAction);
      *(_QWORD *)(v74 + v78) = v80;
      v79 = type metadata accessor for FastSyncPresenceController.SleepResult(0);
      return swift_storeEnumTagMultiPayload(v74, v79, 1);
    }
    else
    {

      v70 = v95;
      ((void (*)(uint64_t, char *, uint64_t))v42[4])(v95, v21, v11);
      v71 = type metadata accessor for FastSyncPresenceController.SleepResult(0);
      swift_storeEnumTagMultiPayload(v70, v71, 0);
      sub_100145264((uint64_t)v94, type metadata accessor for FastSyncControllerPool.PresenceAction);
      v72 = (void (*)(char *, uint64_t))v42[1];
      v72(v46, v11);
      return ((uint64_t (*)(char *, uint64_t))v72)(v33, v11);
    }
  }
  return result;
}

void FastSyncPresenceController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MobileNotes.FastSyncPresenceController", 38, "init()", 6, 0);
  __break(1u);
}

void FastSyncPresenceController.realtimeCollaborationControllerSessionWillBegin(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(id *);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  __objc2_prot *v41;
  id v42;
  _BYTE v43[24];
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t (*v48)(id *);
  uint64_t v49;

  v2 = v1;
  v4 = sub_100012E18(&qword_1005D7C40);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.logObject.getter(v5);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FastSyncPresenceController.realtimeCollaborationControllerSessionWillBegin", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = v2 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
  swift_beginAccess(v2 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool, v43, 0, 0);
  sub_100012CE8(v11, (uint64_t)v7, &qword_1005D7C40);
  v12 = type metadata accessor for FastSyncControllerPool(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1)
    goto LABEL_37;
  v13 = *(_QWORD *)&v7[*(int *)(v12 + 36)];
  v14 = swift_allocObject(&unk_100565FB0, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  swift_bridgeObjectRetain(v13);
  v35 = a1;
  sub_100145264((uint64_t)v7, type metadata accessor for FastSyncControllerPool);
  v15 = sub_1002D91DC(v13, (uint64_t)sub_1002B63D8, v14, (uint64_t)v44);
  v16 = v44[0];
  v17 = v46;
  v18 = v47;
  v19 = v48;
  v20 = v49;
  v36 = v44[0] & 0x7FFFFFFFFFFFFFFFLL;
  v34 = v45;
  v37 = (unint64_t)(v45 + 64) >> 6;
  v38 = v44[1];
  while (v16 < 0)
  {
    v24 = __CocoaSet.Iterator.next()(v15);
    if (!v24)
      goto LABEL_35;
    v25 = v24;
    v39 = v24;
    v26 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
    v27 = v40;
    swift_unknownObjectRelease(v25, v28);
    v23 = v17;
    v21 = v18;
    if (!v27)
      goto LABEL_35;
LABEL_31:
    v42 = v27;
    if ((v19(&v42) & 1) != 0)
    {
      v41 = &OBJC_PROTOCOL___ICRealtimeCollaborationDelegate_0;
      v32 = (void *)swift_dynamicCastObjCProtocolConditional(v27, 1, &v41);
      if (v32)
      {
        v33 = v32;
        if ((objc_msgSend(v32, "respondsToSelector:", "realtimeCollaborationControllerSessionWillBegin:", v34) & 1) != 0)objc_msgSend(v33, "realtimeCollaborationControllerSessionWillBegin:", v35);
      }
    }

    v17 = v23;
    v18 = v21;
  }
  if (v18)
  {
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v17 << 6);
    v23 = v17;
LABEL_30:
    v27 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v22);
    if (!v27)
      goto LABEL_35;
    goto LABEL_31;
  }
  v29 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v29 >= v37)
      goto LABEL_35;
    v30 = *(_QWORD *)(v38 + 8 * v29);
    v23 = v17 + 1;
    if (!v30)
    {
      v23 = v17 + 2;
      if (v17 + 2 >= v37)
        goto LABEL_35;
      v30 = *(_QWORD *)(v38 + 8 * v23);
      if (!v30)
      {
        v23 = v17 + 3;
        if (v17 + 3 >= v37)
          goto LABEL_35;
        v30 = *(_QWORD *)(v38 + 8 * v23);
        if (!v30)
        {
          v23 = v17 + 4;
          if (v17 + 4 >= v37)
            goto LABEL_35;
          v30 = *(_QWORD *)(v38 + 8 * v23);
          if (!v30)
          {
            v23 = v17 + 5;
            if (v17 + 5 >= v37)
              goto LABEL_35;
            v30 = *(_QWORD *)(v38 + 8 * v23);
            if (!v30)
            {
              v23 = v17 + 6;
              if (v17 + 6 >= v37)
                goto LABEL_35;
              v30 = *(_QWORD *)(v38 + 8 * v23);
              if (!v30)
              {
                v31 = v17 + 7;
                while (v37 != v31)
                {
                  v30 = *(_QWORD *)(v38 + 8 * v31++);
                  if (v30)
                  {
                    v23 = v31 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_35:
                sub_1001452E0(v16);
                swift_release(v20);
                return;
              }
            }
          }
        }
      }
    }
LABEL_29:
    v21 = (v30 - 1) & v30;
    v22 = __clz(__rbit64(v30)) + (v23 << 6);
    goto LABEL_30;
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

void FastSyncPresenceController.realtimeCollaborationControllerSessionDidBegin(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(id *);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  __objc2_prot *v43;
  id v44;
  _BYTE v45[24];
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t (*v50)(id *);
  uint64_t v51;

  v2 = v1;
  v4 = sub_100012E18(&qword_1005D7C40);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.logObject.getter(v5);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FastSyncPresenceController.realtimeCollaborationControllerSessionDidBegin", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = v2 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
  swift_beginAccess(v2 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool, v45, 0, 0);
  sub_100012CE8(v11, (uint64_t)v7, &qword_1005D7C40);
  v12 = type metadata accessor for FastSyncControllerPool(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1)
    goto LABEL_39;
  v13 = *(_QWORD *)&v7[*(int *)(v12 + 36)];
  v14 = swift_allocObject(&unk_100565FD8, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  swift_bridgeObjectRetain(v13);
  v37 = a1;
  sub_100145264((uint64_t)v7, type metadata accessor for FastSyncControllerPool);
  v15 = sub_1002D91DC(v13, (uint64_t)sub_1002DDE80, v14, (uint64_t)v46);
  v16 = v46[0];
  v17 = v48;
  v18 = v49;
  v19 = v50;
  v20 = v51;
  v38 = v46[0] & 0x7FFFFFFFFFFFFFFFLL;
  v36 = v47;
  v39 = (unint64_t)(v47 + 64) >> 6;
  v40 = v46[1];
  while (v16 < 0)
  {
    v24 = __CocoaSet.Iterator.next()(v15);
    if (!v24)
      goto LABEL_37;
    v25 = v24;
    v41 = v24;
    v26 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v42, &v41, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
    v27 = v42;
    swift_unknownObjectRelease(v25, v28);
    v23 = v17;
    v21 = v18;
    if (!v27)
      goto LABEL_37;
LABEL_31:
    v44 = v27;
    if ((v19(&v44) & 1) != 0)
    {
      v32 = objc_msgSend(v27, "note", v36);
      if (v32)
      {
        v33 = v32;
        objc_msgSend(v32, "setIsFastSyncSessionActive:", 1);

      }
      v43 = &OBJC_PROTOCOL___ICRealtimeCollaborationDelegate_0;
      v34 = (void *)swift_dynamicCastObjCProtocolConditional(v27, 1, &v43);
      if (v34)
      {
        v35 = v34;
        if ((objc_msgSend(v34, "respondsToSelector:", "realtimeCollaborationControllerSessionDidBegin:") & 1) != 0)
          objc_msgSend(v35, "realtimeCollaborationControllerSessionDidBegin:", v37);
      }
    }

    v17 = v23;
    v18 = v21;
  }
  if (v18)
  {
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v17 << 6);
    v23 = v17;
LABEL_30:
    v27 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v22);
    if (!v27)
      goto LABEL_37;
    goto LABEL_31;
  }
  v29 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v29 >= v39)
      goto LABEL_37;
    v30 = *(_QWORD *)(v40 + 8 * v29);
    v23 = v17 + 1;
    if (!v30)
    {
      v23 = v17 + 2;
      if (v17 + 2 >= v39)
        goto LABEL_37;
      v30 = *(_QWORD *)(v40 + 8 * v23);
      if (!v30)
      {
        v23 = v17 + 3;
        if (v17 + 3 >= v39)
          goto LABEL_37;
        v30 = *(_QWORD *)(v40 + 8 * v23);
        if (!v30)
        {
          v23 = v17 + 4;
          if (v17 + 4 >= v39)
            goto LABEL_37;
          v30 = *(_QWORD *)(v40 + 8 * v23);
          if (!v30)
          {
            v23 = v17 + 5;
            if (v17 + 5 >= v39)
              goto LABEL_37;
            v30 = *(_QWORD *)(v40 + 8 * v23);
            if (!v30)
            {
              v23 = v17 + 6;
              if (v17 + 6 >= v39)
                goto LABEL_37;
              v30 = *(_QWORD *)(v40 + 8 * v23);
              if (!v30)
              {
                v31 = v17 + 7;
                while (v39 != v31)
                {
                  v30 = *(_QWORD *)(v40 + 8 * v31++);
                  if (v30)
                  {
                    v23 = v31 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_37:
                sub_1001452E0(v16);
                swift_release(v20);
                return;
              }
            }
          }
        }
      }
    }
LABEL_29:
    v21 = (v30 - 1) & v30;
    v22 = __clz(__rbit64(v30)) + (v23 << 6);
    goto LABEL_30;
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

void FastSyncPresenceController.realtimeCollaborationControllerSessionDidTerminate(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(id *);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  __objc2_prot *v43;
  id v44;
  _BYTE v45[24];
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t (*v50)(id *);
  uint64_t v51;

  v2 = v1;
  v4 = sub_100012E18(&qword_1005D7C40);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.logObject.getter(v5);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FastSyncPresenceController.realtimeCollaborationControllerSessionDidTerminate", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = v2 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
  swift_beginAccess(v2 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool, v45, 0, 0);
  sub_100012CE8(v11, (uint64_t)v7, &qword_1005D7C40);
  v12 = type metadata accessor for FastSyncControllerPool(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1)
    goto LABEL_39;
  v13 = *(_QWORD *)&v7[*(int *)(v12 + 36)];
  v14 = swift_allocObject(&unk_100566000, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  swift_bridgeObjectRetain(v13);
  v37 = a1;
  sub_100145264((uint64_t)v7, type metadata accessor for FastSyncControllerPool);
  v15 = sub_1002D91DC(v13, (uint64_t)sub_1002DDE80, v14, (uint64_t)v46);
  v16 = v46[0];
  v17 = v48;
  v18 = v49;
  v19 = v50;
  v20 = v51;
  v38 = v46[0] & 0x7FFFFFFFFFFFFFFFLL;
  v36 = v47;
  v39 = (unint64_t)(v47 + 64) >> 6;
  v40 = v46[1];
  while (v16 < 0)
  {
    v24 = __CocoaSet.Iterator.next()(v15);
    if (!v24)
      goto LABEL_37;
    v25 = v24;
    v41 = v24;
    v26 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v42, &v41, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
    v27 = v42;
    swift_unknownObjectRelease(v25, v28);
    v23 = v17;
    v21 = v18;
    if (!v27)
      goto LABEL_37;
LABEL_31:
    v44 = v27;
    if ((v19(&v44) & 1) != 0)
    {
      v32 = objc_msgSend(v27, "note", v36);
      if (v32)
      {
        v33 = v32;
        objc_msgSend(v32, "setIsFastSyncSessionActive:", 0);

      }
      v43 = &OBJC_PROTOCOL___ICRealtimeCollaborationDelegate_0;
      v34 = (void *)swift_dynamicCastObjCProtocolConditional(v27, 1, &v43);
      if (v34)
      {
        v35 = v34;
        if ((objc_msgSend(v34, "respondsToSelector:", "realtimeCollaborationControllerSessionDidTerminate:") & 1) != 0)objc_msgSend(v35, "realtimeCollaborationControllerSessionDidTerminate:", v37);
      }
    }

    v17 = v23;
    v18 = v21;
  }
  if (v18)
  {
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v17 << 6);
    v23 = v17;
LABEL_30:
    v27 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v22);
    if (!v27)
      goto LABEL_37;
    goto LABEL_31;
  }
  v29 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v29 >= v39)
      goto LABEL_37;
    v30 = *(_QWORD *)(v40 + 8 * v29);
    v23 = v17 + 1;
    if (!v30)
    {
      v23 = v17 + 2;
      if (v17 + 2 >= v39)
        goto LABEL_37;
      v30 = *(_QWORD *)(v40 + 8 * v23);
      if (!v30)
      {
        v23 = v17 + 3;
        if (v17 + 3 >= v39)
          goto LABEL_37;
        v30 = *(_QWORD *)(v40 + 8 * v23);
        if (!v30)
        {
          v23 = v17 + 4;
          if (v17 + 4 >= v39)
            goto LABEL_37;
          v30 = *(_QWORD *)(v40 + 8 * v23);
          if (!v30)
          {
            v23 = v17 + 5;
            if (v17 + 5 >= v39)
              goto LABEL_37;
            v30 = *(_QWORD *)(v40 + 8 * v23);
            if (!v30)
            {
              v23 = v17 + 6;
              if (v17 + 6 >= v39)
                goto LABEL_37;
              v30 = *(_QWORD *)(v40 + 8 * v23);
              if (!v30)
              {
                v31 = v17 + 7;
                while (v39 != v31)
                {
                  v30 = *(_QWORD *)(v40 + 8 * v31++);
                  if (v30)
                  {
                    v23 = v31 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_37:
                sub_1001452E0(v16);
                swift_release(v20);
                return;
              }
            }
          }
        }
      }
    }
LABEL_29:
    v21 = (v30 - 1) & v30;
    v22 = __clz(__rbit64(v30)) + (v23 << 6);
    goto LABEL_30;
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

void FastSyncPresenceController.realtimeCollaborationControllerDidChangeSelectionState(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(id *);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  __objc2_prot *v36;
  id v37;
  _BYTE v38[24];
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t (*v43)(id *);
  uint64_t v44;

  v3 = sub_100012E18(&qword_1005D7C40);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR___ICFastSyncPresenceController_controllerPool;
  swift_beginAccess(v6, v38, 0, 0);
  sub_100012CE8(v6, (uint64_t)v5, &qword_1005D7C40);
  v7 = type metadata accessor for FastSyncControllerPool(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
    goto LABEL_35;
  v8 = *(_QWORD *)&v5[*(int *)(v7 + 36)];
  v9 = swift_allocObject(&unk_100566028, 24, 7);
  *(_QWORD *)(v9 + 16) = a1;
  swift_bridgeObjectRetain(v8);
  v30 = a1;
  sub_100145264((uint64_t)v5, type metadata accessor for FastSyncControllerPool);
  v10 = sub_1002D91DC(v8, (uint64_t)sub_1002DDE80, v9, (uint64_t)v39);
  v11 = v39[0];
  v12 = v41;
  v13 = v42;
  v14 = v43;
  v15 = v44;
  v31 = v39[0] & 0x7FFFFFFFFFFFFFFFLL;
  v29 = v40;
  v32 = (unint64_t)(v40 + 64) >> 6;
  v33 = v39[1];
  while (v11 < 0)
  {
    v19 = __CocoaSet.Iterator.next()(v10);
    if (!v19)
      goto LABEL_33;
    v20 = v19;
    v34 = v19;
    v21 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = v35;
    swift_unknownObjectRelease(v20, v23);
    v18 = v12;
    v16 = v13;
    if (!v22)
      goto LABEL_33;
LABEL_29:
    v37 = v22;
    if ((v14(&v37) & 1) != 0)
    {
      v36 = &OBJC_PROTOCOL___ICRealtimeCollaborationDelegate_0;
      v27 = (void *)swift_dynamicCastObjCProtocolConditional(v22, 1, &v36);
      if (v27)
      {
        v28 = v27;
        if ((objc_msgSend(v27, "respondsToSelector:", "realtimeCollaborationControllerDidChangeSelectionState:", v29) & 1) != 0)objc_msgSend(v28, "realtimeCollaborationControllerDidChangeSelectionState:", v30);
      }
    }

    v12 = v18;
    v13 = v16;
  }
  if (v13)
  {
    v16 = (v13 - 1) & v13;
    v17 = __clz(__rbit64(v13)) | (v12 << 6);
    v18 = v12;
LABEL_28:
    v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v17);
    if (!v22)
      goto LABEL_33;
    goto LABEL_29;
  }
  v24 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v24 >= v32)
      goto LABEL_33;
    v25 = *(_QWORD *)(v33 + 8 * v24);
    v18 = v12 + 1;
    if (!v25)
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v32)
        goto LABEL_33;
      v25 = *(_QWORD *)(v33 + 8 * v18);
      if (!v25)
      {
        v18 = v12 + 3;
        if (v12 + 3 >= v32)
          goto LABEL_33;
        v25 = *(_QWORD *)(v33 + 8 * v18);
        if (!v25)
        {
          v18 = v12 + 4;
          if (v12 + 4 >= v32)
            goto LABEL_33;
          v25 = *(_QWORD *)(v33 + 8 * v18);
          if (!v25)
          {
            v18 = v12 + 5;
            if (v12 + 5 >= v32)
              goto LABEL_33;
            v25 = *(_QWORD *)(v33 + 8 * v18);
            if (!v25)
            {
              v18 = v12 + 6;
              if (v12 + 6 >= v32)
                goto LABEL_33;
              v25 = *(_QWORD *)(v33 + 8 * v18);
              if (!v25)
              {
                v26 = v12 + 7;
                while (v32 != v26)
                {
                  v25 = *(_QWORD *)(v33 + 8 * v26++);
                  if (v25)
                  {
                    v18 = v26 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_33:
                sub_1001452E0(v11);
                swift_release(v15);
                return;
              }
            }
          }
        }
      }
    }
LABEL_27:
    v16 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v18 << 6);
    goto LABEL_28;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1002D91DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    v7 = __CocoaSet.makeIterator()(result);
    v8 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    v9 = sub_1002D9FA0();
    Set.Iterator.init(_cocoa:)(v7, v8, v9);
    result = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
  }
  else
  {
    v13 = -1;
    v14 = -1 << *(_BYTE *)(result + 32);
    v15 = ~v14;
    v10 = result + 56;
    v16 = -v14;
    if (v16 < 64)
      v13 = ~(-1 << v16);
    v12 = v13 & *(_QWORD *)(result + 56);
    v11 = (unint64_t)v15;
  }
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v10;
  *(_OWORD *)(a4 + 16) = v11;
  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t sub_1002D92BC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100298040;
  return v6(a1);
}

void sub_1002D9320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD v31[6];
  void *v32;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    v6 = sub_1002D9FA0();
    v7 = Set.Iterator.init(_cocoa:)(v4, v5, v6);
    v2 = v31[1];
    v29 = v31[2];
    v9 = v31[3];
    v8 = v31[4];
    v10 = v31[5];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v9 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v28 = (unint64_t)(v9 + 64) >> 6;
  while (1)
  {
    v14 = v8;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    v17 = __CocoaSet.Iterator.next()(v7);
    v18 = v17;
    if (!v17)
      goto LABEL_37;
    v31[0] = v17;
    v19 = sub_1000163BC(0, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v32, v31, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v32;
    swift_unknownObjectRelease(v18, v21);
    v8 = v14;
    if (!v20)
      goto LABEL_37;
LABEL_35:
    v25 = (char *)objc_msgSend(v20, "realtimeCollaborationController");
    if (v25)
    {
      v26 = *(_QWORD *)&v25[OBJC_IVAR___ICRealtimeCollaborationController_id];

      v27 = *(_QWORD *)(a2 + OBJC_IVAR___ICRealtimeCollaborationController_id);
      if (v26 == v27)
        goto LABEL_37;
    }
    else
    {

    }
  }
  if (v10)
  {
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v16 = v15 | (v8 << 6);
LABEL_34:
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_37;
    goto LABEL_35;
  }
  v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 >= v28)
      goto LABEL_37;
    v23 = *(_QWORD *)(v29 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v14 + 2;
      if (v14 + 2 >= v28)
        goto LABEL_37;
      v23 = *(_QWORD *)(v29 + 8 * v8);
      if (!v23)
      {
        v8 = v14 + 3;
        if (v14 + 3 >= v28)
          goto LABEL_37;
        v23 = *(_QWORD *)(v29 + 8 * v8);
        if (!v23)
        {
          v8 = v14 + 4;
          if (v14 + 4 >= v28)
            goto LABEL_37;
          v23 = *(_QWORD *)(v29 + 8 * v8);
          if (!v23)
          {
            v8 = v14 + 5;
            if (v14 + 5 >= v28)
              goto LABEL_37;
            v23 = *(_QWORD *)(v29 + 8 * v8);
            if (!v23)
            {
              v24 = v14 + 6;
              while (v28 != v24)
              {
                v23 = *(_QWORD *)(v29 + 8 * v24++);
                if (v23)
                {
                  v8 = v24 - 1;
                  goto LABEL_33;
                }
              }
LABEL_37:
              sub_1001452E0(v2);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v10 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v8 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t sub_1002D9634()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t *sub_1002D9658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v16 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = *(int *)(sub_100012E18(&qword_1005D7CD8) + 48);
      v18 = *(void **)((char *)a2 + v17);
      *(uint64_t *)((char *)a1 + v17) = (uint64_t)v18;
      v19 = v18;
      v12 = a1;
      v13 = a3;
      v14 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(sub_100012E18(&qword_1005D7CD8) + 48);
      v10 = *(void **)((char *)a2 + v9);
      *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
      v11 = v10;
      v12 = a1;
      v13 = a3;
      v14 = 1;
    }
    else
    {
      v20 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
      v21 = sub_100012E18(&qword_1005D7CD0);
      v22 = *(int *)(v21 + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_100012E18(&qword_1005D2210);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100012E18(&qword_1005D2218);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v28 = *(int *)(v21 + 64);
      v29 = *(void **)((char *)a2 + v28);
      *(uint64_t *)((char *)a1 + v28) = (uint64_t)v29;
      v30 = v29;
      v12 = a1;
      v13 = a3;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

void sub_1002D9850(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    v9 = (int *)(sub_100012E18(&qword_1005D7CD8) + 48);
  }
  else
  {
    if (EnumCaseMultiPayload)
      return;
    v4 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = sub_100012E18(&qword_1005D7CD0);
    v6 = a1 + *(int *)(v5 + 48);
    v7 = sub_100012E18(&qword_1005D2210);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v9 = (int *)(v5 + 64);
  }

}

uint64_t sub_1002D9954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = *(int *)(sub_100012E18(&qword_1005D7CD8) + 48);
  }
  else
  {
    v10 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = sub_100012E18(&qword_1005D7CD0);
    v12 = *(int *)(v11 + 48);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    v15 = sub_100012E18(&qword_1005D2210);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100012E18(&qword_1005D2218);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v9 = *(int *)(v11 + 64);
  }
  v18 = *(void **)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v18;
  v19 = v18;
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1002D9AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  if (a1 != a2)
  {
    sub_100145264(a1, type metadata accessor for FastSyncEditorActivityChangeHandler);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(sub_100012E18(&qword_1005D7CD8) + 48);
    }
    else
    {
      v10 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = sub_100012E18(&qword_1005D7CD0);
      v12 = *(int *)(v11 + 48);
      v13 = (void *)(a1 + v12);
      v14 = (const void *)(a2 + v12);
      v15 = sub_100012E18(&qword_1005D2210);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100012E18(&qword_1005D2218);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v9 = *(int *)(v11 + 64);
    }
    v18 = *(void **)(a2 + v9);
    *(_QWORD *)(a1 + v9) = v18;
    v19 = v18;
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

uint64_t sub_1002D9C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = (int *)(sub_100012E18(&qword_1005D7CD8) + 48);
  }
  else
  {
    v10 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = sub_100012E18(&qword_1005D7CD0);
    v12 = *(int *)(v11 + 48);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    v15 = sub_100012E18(&qword_1005D2210);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100012E18(&qword_1005D2218);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v9 = (int *)(v11 + 64);
  }
  *(_QWORD *)(a1 + *v9) = *(_QWORD *)(a2 + *v9);
  swift_storeEnumTagMultiPayload(a1, a3, v7);
  return a1;
}

uint64_t sub_1002D9DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_100145264(a1, type metadata accessor for FastSyncEditorActivityChangeHandler);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2 || (_DWORD)EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = (int *)(sub_100012E18(&qword_1005D7CD8) + 48);
    }
    else
    {
      v10 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = sub_100012E18(&qword_1005D7CD0);
      v12 = *(int *)(v11 + 48);
      v13 = (void *)(a1 + v12);
      v14 = (const void *)(a2 + v12);
      v15 = sub_100012E18(&qword_1005D2210);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100012E18(&qword_1005D2218);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v9 = (int *)(v11 + 64);
    }
    *(_QWORD *)(a1 + *v9) = *(_QWORD *)(a2 + *v9);
    swift_storeEnumTagMultiPayload(a1, a3, v7);
  }
  return a1;
}

void sub_1002D9F54(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_10001537C(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1002D9FA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D4AD8;
  if (!qword_1005D4AD8)
  {
    v1 = sub_1000163BC(255, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D4AD8);
  }
  return result;
}

uint64_t sub_1002D9FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002DA058@<X0>(char *a1@<X8>)
{
  type metadata accessor for Logger(0);
  return sub_1002D20CC(a1);
}

uint64_t sub_1002DA0A4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1002D2904(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1002DA0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);

  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_1002DA0D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D7DC4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100130768;
  return sub_1002D0E54(a1, v4, v5, v6);
}

uint64_t sub_1002DA144()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DA168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D7DD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100145358;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1005D7DD0 + dword_1005D7DD0))(a1, v4);
}

const char *sub_1002DA1D8()
{
  return "fastSyncEnabled";
}

id sub_1002DA1E4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "fastSyncEnabled");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1002DA214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1005D7DEC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100130768;
  return sub_1002D2CD0(a1, a2, v6);
}

uint64_t type metadata accessor for FastSyncPresenceController.PresenceChangeEvent(uint64_t a1)
{
  return sub_100010414(a1, qword_1005D8130, (uint64_t)&nominal type descriptor for FastSyncPresenceController.PresenceChangeEvent);
}

uint64_t sub_1002DA294(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D7E0C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100145358;
  return sub_1002D37FC(a1, v4, v5, v7, v6);
}

uint64_t sub_1002DA310(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D7E1C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100145358;
  return sub_1002D4180(a1, v4, v5, v7, v6);
}

uint64_t sub_1002DA388(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D7E2C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100145358;
  return sub_1002D4FB4(a1, v4, v5, v7, v6);
}

uint64_t type metadata accessor for FastSyncEditorShareChangedEvent(uint64_t a1)
{
  return sub_100010414(a1, (uint64_t *)&unk_1005D8078, (uint64_t)&nominal type descriptor for FastSyncEditorShareChangedEvent);
}

uint64_t sub_1002DA418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = type metadata accessor for SuspendingClock.Instant(0);
  v1 = *(_QWORD *)(v16 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for SuspendingClock(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v9 = v2 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = v9;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16), v14);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  swift_release(*(_QWORD *)(v0 + v10));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v12 + 8));
  swift_release(*(_QWORD *)(v0 + v13));
  return swift_deallocObject(v0, v13 + 8, v17);
}

uint64_t sub_1002DA52C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v3 = *(_QWORD *)(type metadata accessor for SuspendingClock.Instant(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for SuspendingClock(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v1 + 24);
  v17 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + v8);
  v12 = v1 + v7;
  v13 = *(_QWORD *)(v1 + v9);
  v14 = *(_QWORD *)(v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_1005D7E74);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_100145358;
  return sub_1002D6E68(a1, v17, v10, v1 + v4, v12, v11, v13, v14);
}

uint64_t type metadata accessor for FastSyncPresenceController.SleepResult(uint64_t a1)
{
  return sub_100010414(a1, qword_1005D7F68, (uint64_t)&nominal type descriptor for FastSyncPresenceController.SleepResult);
}

uint64_t type metadata accessor for FastSyncPresenceController.EditorDebounceState(uint64_t a1)
{
  return sub_100010414(a1, (uint64_t *)&unk_1005D8010, (uint64_t)&nominal type descriptor for FastSyncPresenceController.EditorDebounceState);
}

void **sub_1002DA678(void **a1, void **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) != 1)
    {
      v18 = type metadata accessor for SuspendingClock.Instant(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      v19 = a1;
      v20 = a3;
      v21 = 0;
LABEL_15:
      swift_storeEnumTagMultiPayload(v19, v20, v21);
      return a1;
    }
    v7 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = *a2;
      *a1 = *a2;
      v23 = v22;
      v24 = a1;
      v25 = v7;
      v26 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_14:
        v30 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        v31 = *(void **)((char *)a2 + v30);
        *(void **)((char *)a1 + v30) = v31;
        v32 = v31;
        v19 = a1;
        v20 = a3;
        v21 = 1;
        goto LABEL_15;
      }
      v9 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_100012E18(&qword_1005D7430);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_100012E18(&qword_1005D2210);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100012E18(&qword_1005D2218);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v27 = *(int *)(v10 + 64);
      v28 = *(void **)((char *)a2 + v27);
      *(void **)((char *)a1 + v27) = v28;
      v29 = v28;
      v24 = a1;
      v25 = v7;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
    goto LABEL_14;
  }
  v17 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v17[(v5 + 16) & ~(unint64_t)v5];
  swift_retain(v17);
  return a1;
}

void sub_1002DA88C(id *a1, uint64_t a2)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v3);
    v5 = a1;
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
LABEL_8:

        return;
      }
      v6 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v7 = sub_100012E18(&qword_1005D7430);
      v8 = (char *)a1 + *(int *)(v7 + 48);
      v9 = sub_100012E18(&qword_1005D2210);
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      v5 = (id *)((char *)a1 + *(int *)(v7 + 64));
    }

    goto LABEL_8;
  }
  v11 = type metadata accessor for SuspendingClock.Instant(0);
  (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
}

void **sub_1002DA9A8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v18 = *a2;
      *a1 = *a2;
      v19 = v18;
      v20 = a1;
      v21 = v6;
      v22 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_12:
        v26 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        v27 = *(void **)((char *)a2 + v26);
        *(void **)((char *)a1 + v26) = v27;
        v28 = v27;
        v17 = 1;
        goto LABEL_13;
      }
      v8 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = sub_100012E18(&qword_1005D7430);
      v10 = *(int *)(v9 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_100012E18(&qword_1005D2210);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_100012E18(&qword_1005D2218);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v23 = *(int *)(v9 + 64);
      v24 = *(void **)((char *)a2 + v23);
      *(void **)((char *)a1 + v23) = v24;
      v25 = v24;
      v20 = a1;
      v21 = v6;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
    goto LABEL_12;
  }
  v16 = type metadata accessor for SuspendingClock.Instant(0);
  (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
  v17 = 0;
LABEL_13:
  swift_storeEnumTagMultiPayload(a1, a3, v17);
  return a1;
}

void **sub_1002DAB88(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for FastSyncPresenceController.SleepResult);
    if (swift_getEnumCaseMultiPayload(a2, a3) != 1)
    {
      v16 = type metadata accessor for SuspendingClock.Instant(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = 0;
LABEL_14:
      swift_storeEnumTagMultiPayload(a1, a3, v17);
      return a1;
    }
    v6 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v18 = *a2;
      *a1 = *a2;
      v19 = v18;
      v20 = a1;
      v21 = v6;
      v22 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_13:
        v26 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        v27 = *(void **)((char *)a2 + v26);
        *(void **)((char *)a1 + v26) = v27;
        v28 = v27;
        v17 = 1;
        goto LABEL_14;
      }
      v8 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = sub_100012E18(&qword_1005D7430);
      v10 = *(int *)(v9 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_100012E18(&qword_1005D2210);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = sub_100012E18(&qword_1005D2218);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v23 = *(int *)(v9 + 64);
      v24 = *(void **)((char *)a2 + v23);
      *(void **)((char *)a1 + v23) = v24;
      v25 = v24;
      v20 = a1;
      v21 = v6;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
    goto LABEL_13;
  }
  return a1;
}

char *sub_1002DAD80(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    if (swift_getEnumCaseMultiPayload(a2, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v9 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = sub_100012E18(&qword_1005D7430);
      v11 = *(int *)(v10 + 48);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_100012E18(&qword_1005D2210);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100012E18(&qword_1005D2218);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(_QWORD *)&a1[*(int *)(v10 + 64)] = *(_QWORD *)&a2[*(int *)(v10 + 64)];
      swift_storeEnumTagMultiPayload(a1, v6, 0);
    }
    v17 = sub_100012E18(&qword_1005D7E68);
    *(_QWORD *)&a1[*(int *)(v17 + 48)] = *(_QWORD *)&a2[*(int *)(v17 + 48)];
    v8 = 1;
  }
  else
  {
    v7 = type metadata accessor for SuspendingClock.Instant(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v8);
  return a1;
}

char *sub_1002DAF34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for FastSyncPresenceController.SleepResult);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      if (swift_getEnumCaseMultiPayload(a2, v6))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v9 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = sub_100012E18(&qword_1005D7430);
        v11 = *(int *)(v10 + 48);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_100012E18(&qword_1005D2210);
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          v16 = sub_100012E18(&qword_1005D2218);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        *(_QWORD *)&a1[*(int *)(v10 + 64)] = *(_QWORD *)&a2[*(int *)(v10 + 64)];
        swift_storeEnumTagMultiPayload(a1, v6, 0);
      }
      v17 = sub_100012E18(&qword_1005D7E68);
      *(_QWORD *)&a1[*(int *)(v17 + 48)] = *(_QWORD *)&a2[*(int *)(v17 + 48)];
      v8 = 1;
    }
    else
    {
      v7 = type metadata accessor for SuspendingClock.Instant(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v8);
  }
  return a1;
}

uint64_t sub_1002DB100(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _BYTE v5[32];
  _QWORD v6[2];

  result = type metadata accessor for SuspendingClock.Instant(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FastSyncControllerPool.PresenceAction(319);
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v5, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
      v6[1] = v5;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v6);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1002DB198(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v12;
  void **v13;
  void **v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t, int *);
  id v35;
  uint64_t v37;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
    return a1;
  }
  v7 = (int *)sub_100012E18(&qword_1005D7E90);
  v8 = *((_QWORD *)v7 - 1);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
  {
    v10 = type metadata accessor for SuspendingClock.Instant(0);
    v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(a1, a2, v10);
    v11((uint64_t *)((char *)a1 + v7[12]), (uint64_t *)((char *)a2 + v7[12]), v10);
    v12 = v7[16];
    v13 = (void **)((char *)a1 + v12);
    v14 = (void **)((char *)a2 + v12);
    v15 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    if (EnumCaseMultiPayload == 1)
    {
      v24 = *v14;
      *v13 = *v14;
      v25 = v24;
      v26 = v13;
      v27 = v15;
      v28 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_14:
        v32 = v7[20];
        v33 = *(void **)((char *)a2 + v32);
        *(uint64_t *)((char *)a1 + v32) = (uint64_t)v33;
        v34 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
        v35 = v33;
        v34(a1, 0, 1, v7);
        return a1;
      }
      v17 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v14, v17);
      v18 = sub_100012E18(&qword_1005D7430);
      v19 = *(int *)(v18 + 48);
      v37 = v18;
      __dst = (char *)v13 + v19;
      v20 = (char *)v14 + v19;
      v21 = sub_100012E18(&qword_1005D2210);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_100012E18(&qword_1005D2218);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v29 = *(int *)(v37 + 64);
      v30 = *(void **)((char *)v14 + v29);
      *(void **)((char *)v13 + v29) = v30;
      v31 = v30;
      v26 = v13;
      v27 = v15;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
    goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

void sub_1002DB3F0(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  id *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = (int *)sub_100012E18(&qword_1005D7E90);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 1, v2))
  {
    v3 = type metadata accessor for SuspendingClock.Instant(0);
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v4(a1 + v2[12], v3);
    v5 = (id *)(a1 + v2[16]);
    v6 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
LABEL_8:

        return;
      }
      v8 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
      v9 = sub_100012E18(&qword_1005D7430);
      v10 = (char *)v5 + *(int *)(v9 + 48);
      v11 = sub_100012E18(&qword_1005D2210);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      v5 = (id *)((char *)v5 + *(int *)(v9 + 64));
    }

    goto LABEL_8;
  }
}

char *sub_1002DB548(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  void **v11;
  void **v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  void (*v32)(char *, _QWORD, uint64_t, int *);
  id v33;
  uint64_t v35;
  char *__dst;

  v6 = (int *)sub_100012E18(&qword_1005D7E90);
  v7 = *((_QWORD *)v6 - 1);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for SuspendingClock.Instant(0);
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v9(&a1[v6[12]], &a2[v6[12]], v8);
    v10 = v6[16];
    v11 = (void **)&a1[v10];
    v12 = (void **)&a2[v10];
    v13 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = *v12;
      *v11 = *v12;
      v23 = v22;
      v24 = v11;
      v25 = v13;
      v26 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_12:
        v30 = v6[20];
        v31 = *(void **)&a2[v30];
        *(_QWORD *)&a1[v30] = v31;
        v32 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
        v33 = v31;
        v32(a1, 0, 1, v6);
        return a1;
      }
      v15 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
      v16 = sub_100012E18(&qword_1005D7430);
      v17 = *(int *)(v16 + 48);
      v35 = v16;
      __dst = (char *)v11 + v17;
      v18 = (char *)v12 + v17;
      v19 = sub_100012E18(&qword_1005D2210);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = sub_100012E18(&qword_1005D2218);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      v27 = *(int *)(v35 + 64);
      v28 = *(void **)((char *)v12 + v27);
      *(void **)((char *)v11 + v27) = v28;
      v29 = v28;
      v24 = v11;
      v25 = v13;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1002DB77C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  void **v14;
  void **v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  void (*v49)(char *, _QWORD, uint64_t, int *);
  id v50;
  void *v51;
  id v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v64;
  char *__dst;
  char *__dsta;

  v6 = (int *)sub_100012E18(&qword_1005D7E90);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100012DDC((uint64_t)a1, &qword_1005D7E90);
      goto LABEL_9;
    }
    v25 = type metadata accessor for SuspendingClock.Instant(0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24);
    v26(a1, a2, v25);
    v26(&a1[v6[12]], &a2[v6[12]], v25);
    if (a1 != a2)
    {
      v27 = v6[16];
      v28 = (void **)&a1[v27];
      v29 = (void **)&a2[v27];
      sub_100145264((uint64_t)&a1[v27], type metadata accessor for FastSyncControllerPool.PresenceAction);
      v30 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v29, v30);
      if (EnumCaseMultiPayload == 1)
      {
        v51 = *v29;
        *v28 = *v29;
        v52 = v51;
        v53 = v28;
        v54 = v30;
        v55 = 1;
LABEL_25:
        swift_storeEnumTagMultiPayload(v53, v54, v55);
        goto LABEL_26;
      }
      if (!EnumCaseMultiPayload)
      {
        v32 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v29, v32);
        v33 = sub_100012E18(&qword_1005D7430);
        v34 = *(int *)(v33 + 48);
        __dsta = (char *)v28 + v34;
        v35 = (char *)v29 + v34;
        v36 = sub_100012E18(&qword_1005D2210);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          v38 = sub_100012E18(&qword_1005D2218);
          memcpy(__dsta, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dsta, v35, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dsta, 0, 1, v36);
        }
        v56 = *(int *)(v33 + 64);
        v57 = *(void **)((char *)v29 + v56);
        *(void **)((char *)v28 + v56) = v57;
        v58 = v57;
        v53 = v28;
        v54 = v30;
        v55 = 0;
        goto LABEL_25;
      }
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
LABEL_26:
    v59 = v6[20];
    v60 = *(void **)&a2[v59];
    v61 = *(void **)&a1[v59];
    *(_QWORD *)&a1[v59] = v60;
    v62 = v60;

    return a1;
  }
  if (!v10)
  {
    v11 = type metadata accessor for SuspendingClock.Instant(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(a1, a2, v11);
    v12(&a1[v6[12]], &a2[v6[12]], v11);
    v13 = v6[16];
    v14 = (void **)&a1[v13];
    v15 = (void **)&a2[v13];
    v16 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    v17 = swift_getEnumCaseMultiPayload(v15, v16);
    if (v17 == 1)
    {
      v39 = *v15;
      *v14 = *v15;
      v40 = v39;
      v41 = v14;
      v42 = v16;
      v43 = 1;
    }
    else
    {
      if (v17)
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_20:
        v47 = v6[20];
        v48 = *(void **)&a2[v47];
        *(_QWORD *)&a1[v47] = v48;
        v49 = *(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56);
        v50 = v48;
        v49(a1, 0, 1, v6);
        return a1;
      }
      v18 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
      v19 = sub_100012E18(&qword_1005D7430);
      v20 = *(int *)(v19 + 48);
      v64 = v19;
      __dst = (char *)v14 + v20;
      v21 = (char *)v15 + v20;
      v22 = sub_100012E18(&qword_1005D2210);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = sub_100012E18(&qword_1005D2218);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      v44 = *(int *)(v64 + 64);
      v45 = *(void **)((char *)v15 + v44);
      *(void **)((char *)v14 + v44) = v45;
      v46 = v45;
      v41 = v14;
      v42 = v16;
      v43 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v42, v43);
    goto LABEL_20;
  }
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1002DBB88(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *__dst;

  v6 = (int *)sub_100012E18(&qword_1005D7E90);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for SuspendingClock.Instant(0);
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v9(&a1[v6[12]], &a2[v6[12]], v8);
    v10 = v6[16];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    if (swift_getEnumCaseMultiPayload(v12, v13))
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      v15 = sub_100012E18(&qword_1005D7430);
      v16 = *(int *)(v15 + 48);
      v22 = v15;
      __dst = &v11[v16];
      v17 = &v12[v16];
      v18 = sub_100012E18(&qword_1005D2210);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100012E18(&qword_1005D2218);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      *(_QWORD *)&v11[*(int *)(v22 + 64)] = *(_QWORD *)&v12[*(int *)(v22 + 64)];
      swift_storeEnumTagMultiPayload(v11, v13, 0);
    }
    *(_QWORD *)&a1[v6[20]] = *(_QWORD *)&a2[v6[20]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_1002DBD90(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v40;
  char *__dst;
  char *__dsta;

  v6 = (int *)sub_100012E18(&qword_1005D7E90);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = type metadata accessor for SuspendingClock.Instant(0);
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v12(a1, a2, v11);
      v12(&a1[v6[12]], &a2[v6[12]], v11);
      v13 = v6[16];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      if (swift_getEnumCaseMultiPayload(v15, v16))
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v23 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v14, v15, v23);
        v24 = sub_100012E18(&qword_1005D7430);
        v25 = *(int *)(v24 + 48);
        v40 = v24;
        __dst = &v14[v25];
        v26 = &v15[v25];
        v27 = sub_100012E18(&qword_1005D2210);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = sub_100012E18(&qword_1005D2218);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 32))(__dst, v26, v27);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
        }
        *(_QWORD *)&v14[*(int *)(v40 + 64)] = *(_QWORD *)&v15[*(int *)(v40 + 64)];
        swift_storeEnumTagMultiPayload(v14, v16, 0);
      }
      *(_QWORD *)&a1[v6[20]] = *(_QWORD *)&a2[v6[20]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_100012DDC((uint64_t)a1, &qword_1005D7E90);
    goto LABEL_7;
  }
  v17 = type metadata accessor for SuspendingClock.Instant(0);
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(a1, a2, v17);
  v18(&a1[v6[12]], &a2[v6[12]], v17);
  if (a1 != a2)
  {
    v19 = v6[16];
    v20 = &a1[v19];
    v21 = &a2[v19];
    sub_100145264((uint64_t)&a1[v19], type metadata accessor for FastSyncControllerPool.PresenceAction);
    v22 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    if (swift_getEnumCaseMultiPayload(v21, v22))
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v20, v21, v30);
      v31 = sub_100012E18(&qword_1005D7430);
      v32 = *(int *)(v31 + 48);
      __dsta = &v20[v32];
      v33 = &v21[v32];
      v34 = sub_100012E18(&qword_1005D2210);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_100012E18(&qword_1005D2218);
        memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(__dsta, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dsta, 0, 1, v34);
      }
      *(_QWORD *)&v20[*(int *)(v31 + 64)] = *(_QWORD *)&v21[*(int *)(v31 + 64)];
      swift_storeEnumTagMultiPayload(v20, v22, 0);
    }
  }
  v37 = v6[20];
  v38 = *(void **)&a1[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];

  return a1;
}

uint64_t sub_1002DC144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002DC150);
}

uint64_t sub_1002DC150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100012E18(&qword_1005D7E90);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1002DC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002DC1AC);
}

uint64_t sub_1002DC1AC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_100012E18(&qword_1005D7E90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1002DC200(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18(&qword_1005D7E90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1002DC23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D7E90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1002DC280(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];
  _BYTE v6[32];

  result = type metadata accessor for SuspendingClock.Instant(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for FastSyncControllerPool.PresenceAction(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_getTupleTypeLayout(v6, 0, 4, v5);
      swift_initEnumMetadataSinglePayload(a1, 256, v6, 1);
      return 0;
    }
  }
  return result;
}

char *sub_1002DC320(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  char *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = *(int *)(a3 + 24);
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for EditNoteActivity(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    v15 = swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12, v15);
    v16 = *(int *)(a3 + 28);
    v17 = &v7[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = sub_100012E18(&qword_1005D2210);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v7;
}

uint64_t sub_1002DC40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_100012E18(&qword_1005D2210);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_1002DC48C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, __n128);
  id v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for EditNoteActivity(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v14 = swift_bridgeObjectRetain(v6);
  v12(v9, v10, v11, v14);
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = a2 + v15;
  v18 = sub_100012E18(&qword_1005D2210);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t sub_1002DC548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_100012E18(&qword_1005D2210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_QWORD *sub_1002DC608(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100012E18(&qword_1005D2210);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1002DC6A4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_100012E18(&qword_1005D2210);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1002DC758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002DC764);
}

uint64_t sub_1002DC764(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for EditNoteActivity(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100012E18(&qword_1005D2210);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1002DC808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002DC814);
}

char *sub_1002DC814(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for EditNoteActivity(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100012E18(&qword_1005D2210);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1002DC8B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = type metadata accessor for EditNoteActivity(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002DC954(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_1002DC954(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D8088)
  {
    v2 = sub_1000163BC(255, &qword_1005D2390, CKShare_ptr);
    v3 = type metadata accessor for CloudRecordSnapshot(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D8088);
  }
}

void **sub_1002DC9B8(void **a1, void **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  id v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  id v70;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v20 = *a2;
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v21 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
      v22 = *(int *)(v21 + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for EditNoteActivity(0);
      v26 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
      v27 = v20;
      v28 = swift_bridgeObjectRetain(v19);
      v26(v23, v24, v25, v28);
      v29 = *(int *)(v21 + 28);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_100012E18(&qword_1005D2210);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      v33 = *(int *)(sub_100012E18(&qword_1005D7E60) + 48);
      v34 = *(void **)((char *)a2 + v33);
      *(void **)((char *)a1 + v33) = v34;
      v35 = v34;
      v36 = a1;
      v37 = a3;
      v38 = 2;
LABEL_26:
      swift_storeEnumTagMultiPayload(v36, v37, v38);
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      v9 = swift_getEnumCaseMultiPayload(a2, v8);
      if (v9 == 1)
      {
        v49 = *a2;
        *a1 = *a2;
        v50 = v49;
        v51 = a1;
        v52 = v8;
        v53 = 1;
      }
      else
      {
        if (v9)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_21:
          v62 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
          v63 = *(void **)((char *)a2 + v62);
          *(void **)((char *)a1 + v62) = v63;
          v64 = v63;
          v36 = a1;
          v37 = a3;
          v38 = 1;
          goto LABEL_26;
        }
        v10 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        v11 = sub_100012E18(&qword_1005D7430);
        v12 = *(int *)(v11 + 48);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_100012E18(&qword_1005D2210);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          v17 = sub_100012E18(&qword_1005D2218);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        v59 = *(int *)(v11 + 64);
        v60 = *(void **)((char *)a2 + v59);
        *(void **)((char *)a1 + v59) = v60;
        v61 = v60;
        v51 = a1;
        v52 = v8;
        v53 = 0;
      }
      swift_storeEnumTagMultiPayload(v51, v52, v53);
      goto LABEL_21;
    }
    v39 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    v40 = swift_getEnumCaseMultiPayload(a2, v39);
    if (v40 == 1)
    {
      v54 = *a2;
      *a1 = *a2;
      v55 = v54;
      v56 = a1;
      v57 = v39;
      v58 = 1;
    }
    else
    {
      if (v40)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
LABEL_25:
        v68 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        v69 = *(void **)((char *)a2 + v68);
        *(void **)((char *)a1 + v68) = v69;
        v70 = v69;
        v36 = a1;
        v37 = a3;
        v38 = 0;
        goto LABEL_26;
      }
      v41 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
      v42 = sub_100012E18(&qword_1005D7430);
      v43 = *(int *)(v42 + 48);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = sub_100012E18(&qword_1005D2210);
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        v48 = sub_100012E18(&qword_1005D2218);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v65 = *(int *)(v42 + 64);
      v66 = *(void **)((char *)a2 + v65);
      *(void **)((char *)a1 + v65) = v66;
      v67 = v66;
      v56 = a1;
      v57 = v39;
      v58 = 0;
    }
    swift_storeEnumTagMultiPayload(v56, v57, v58);
    goto LABEL_25;
  }
  v18 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v18[(v5 + 16) & ~(unint64_t)v5];
  swift_retain(v18);
  return a1;
}

void sub_1002DCDAC(uint64_t a1, uint64_t a2)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v4;
  int v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 2)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v13 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
    v14 = a1 + *(int *)(v13 + 24);
    v15 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    v16 = a1 + *(int *)(v13 + 28);
    v17 = sub_100012E18(&qword_1005D2210);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    v12 = &qword_1005D7E60;
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload > 1)
    return;
  v4 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
  v5 = swift_getEnumCaseMultiPayload(a1, v4);
  v6 = (id *)a1;
  if (v5 == 1)
    goto LABEL_8;
  if (!v5)
  {
    v7 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    v8 = sub_100012E18(&qword_1005D7430);
    v9 = a1 + *(int *)(v8 + 48);
    v10 = sub_100012E18(&qword_1005D2210);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v6 = (id *)(a1 + *(int *)(v8 + 64));
LABEL_8:

  }
  v12 = &qword_1005D7E68;
LABEL_11:

}

void **sub_1002DCF30(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  id v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  void *v67;
  id v68;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      v8 = swift_getEnumCaseMultiPayload(a2, v7);
      if (v8 == 1)
      {
        v47 = *a2;
        *a1 = *a2;
        v48 = v47;
        v49 = a1;
        v50 = v7;
        v51 = 1;
      }
      else
      {
        if (v8)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_19:
          v60 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
          v61 = *(void **)((char *)a2 + v60);
          *(void **)((char *)a1 + v60) = v61;
          v62 = v61;
          v34 = a1;
          v35 = a3;
          v36 = 1;
          goto LABEL_24;
        }
        v9 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = sub_100012E18(&qword_1005D7430);
        v11 = *(int *)(v10 + 48);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_100012E18(&qword_1005D2210);
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          v16 = sub_100012E18(&qword_1005D2218);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        v57 = *(int *)(v10 + 64);
        v58 = *(void **)((char *)a2 + v57);
        *(void **)((char *)a1 + v57) = v58;
        v59 = v58;
        v49 = a1;
        v50 = v7;
        v51 = 0;
      }
      swift_storeEnumTagMultiPayload(v49, v50, v51);
      goto LABEL_19;
    }
    v37 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    v38 = swift_getEnumCaseMultiPayload(a2, v37);
    if (v38 == 1)
    {
      v52 = *a2;
      *a1 = *a2;
      v53 = v52;
      v54 = a1;
      v55 = v37;
      v56 = 1;
    }
    else
    {
      if (v38)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
LABEL_23:
        v66 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        v67 = *(void **)((char *)a2 + v66);
        *(void **)((char *)a1 + v66) = v67;
        v68 = v67;
        v34 = a1;
        v35 = a3;
        v36 = 0;
        goto LABEL_24;
      }
      v39 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
      v40 = sub_100012E18(&qword_1005D7430);
      v41 = *(int *)(v40 + 48);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = sub_100012E18(&qword_1005D2210);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100012E18(&qword_1005D2218);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v63 = *(int *)(v40 + 64);
      v64 = *(void **)((char *)a2 + v63);
      *(void **)((char *)a1 + v63) = v64;
      v65 = v64;
      v54 = a1;
      v55 = v37;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
    goto LABEL_23;
  }
  v18 = *a2;
  v17 = a2[1];
  *a1 = *a2;
  a1[1] = v17;
  v19 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
  v20 = *(int *)(v19 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for EditNoteActivity(0);
  v24 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
  v25 = v18;
  v26 = swift_bridgeObjectRetain(v17);
  v24(v21, v22, v23, v26);
  v27 = *(int *)(v19 + 28);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_100012E18(&qword_1005D2210);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = *(int *)(sub_100012E18(&qword_1005D7E60) + 48);
  v32 = *(void **)((char *)a2 + v31);
  *(void **)((char *)a1 + v31) = v32;
  v33 = v32;
  v34 = a1;
  v35 = a3;
  v36 = 2;
LABEL_24:
  swift_storeEnumTagMultiPayload(v34, v35, v36);
  return a1;
}

void **sub_1002DD2F8(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t, __n128);
  id v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  void *v67;
  id v68;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for FastSyncPresenceController.PresenceChangeEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = *a2;
      *a1 = *a2;
      v18 = a2[1];
      a1[1] = v18;
      v19 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
      v20 = *(int *)(v19 + 24);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for EditNoteActivity(0);
      v24 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
      v25 = v17;
      v26 = swift_bridgeObjectRetain(v18);
      v24(v21, v22, v23, v26);
      v27 = *(int *)(v19 + 28);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_100012E18(&qword_1005D2210);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      v31 = *(int *)(sub_100012E18(&qword_1005D7E60) + 48);
      v32 = *(void **)((char *)a2 + v31);
      *(void **)((char *)a1 + v31) = v32;
      v33 = v32;
      v34 = a1;
      v35 = a3;
      v36 = 2;
LABEL_25:
      swift_storeEnumTagMultiPayload(v34, v35, v36);
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      v8 = swift_getEnumCaseMultiPayload(a2, v7);
      if (v8 == 1)
      {
        v47 = *a2;
        *a1 = *a2;
        v48 = v47;
        v49 = a1;
        v50 = v7;
        v51 = 1;
      }
      else
      {
        if (v8)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_20:
          v60 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
          v61 = *(void **)((char *)a2 + v60);
          *(void **)((char *)a1 + v60) = v61;
          v62 = v61;
          v34 = a1;
          v35 = a3;
          v36 = 1;
          goto LABEL_25;
        }
        v9 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = sub_100012E18(&qword_1005D7430);
        v11 = *(int *)(v10 + 48);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_100012E18(&qword_1005D2210);
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          v16 = sub_100012E18(&qword_1005D2218);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        v57 = *(int *)(v10 + 64);
        v58 = *(void **)((char *)a2 + v57);
        *(void **)((char *)a1 + v57) = v58;
        v59 = v58;
        v49 = a1;
        v50 = v7;
        v51 = 0;
      }
      swift_storeEnumTagMultiPayload(v49, v50, v51);
      goto LABEL_20;
    }
    v37 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    v38 = swift_getEnumCaseMultiPayload(a2, v37);
    if (v38 == 1)
    {
      v52 = *a2;
      *a1 = *a2;
      v53 = v52;
      v54 = a1;
      v55 = v37;
      v56 = 1;
    }
    else
    {
      if (v38)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
LABEL_24:
        v66 = *(int *)(sub_100012E18(&qword_1005D7E68) + 48);
        v67 = *(void **)((char *)a2 + v66);
        *(void **)((char *)a1 + v66) = v67;
        v68 = v67;
        v34 = a1;
        v35 = a3;
        v36 = 0;
        goto LABEL_25;
      }
      v39 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
      v40 = sub_100012E18(&qword_1005D7430);
      v41 = *(int *)(v40 + 48);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = sub_100012E18(&qword_1005D2210);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = sub_100012E18(&qword_1005D2218);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v63 = *(int *)(v40 + 64);
      v64 = *(void **)((char *)a2 + v63);
      *(void **)((char *)a1 + v63) = v64;
      v65 = v64;
      v54 = a1;
      v55 = v37;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
    goto LABEL_24;
  }
  return a1;
}

_QWORD *sub_1002DD6E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
    v10 = *(int *)(v9 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    v14 = *(int *)(v9 + 28);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_100012E18(&qword_1005D2210);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    v18 = sub_100012E18(&qword_1005D7E60);
    *(_QWORD *)((char *)a1 + *(int *)(v18 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v18 + 48));
    v19 = a1;
    v20 = a3;
    v21 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    if (swift_getEnumCaseMultiPayload(a2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v23 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      v24 = sub_100012E18(&qword_1005D7430);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_100012E18(&qword_1005D2210);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100012E18(&qword_1005D2218);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v24 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 64));
      swift_storeEnumTagMultiPayload(a1, v7, 0);
    }
    v39 = sub_100012E18(&qword_1005D7E68);
    *(_QWORD *)((char *)a1 + *(int *)(v39 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v39 + 48));
    v19 = a1;
    v20 = a3;
    v21 = 1;
  }
  else
  {
    v22 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
    if (swift_getEnumCaseMultiPayload(a2, v22))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
      v32 = sub_100012E18(&qword_1005D7430);
      v33 = *(int *)(v32 + 48);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_100012E18(&qword_1005D2210);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = sub_100012E18(&qword_1005D2218);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v32 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v32 + 64));
      swift_storeEnumTagMultiPayload(a1, v22, 0);
    }
    v40 = sub_100012E18(&qword_1005D7E68);
    *(_QWORD *)((char *)a1 + *(int *)(v40 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v40 + 48));
    v19 = a1;
    v20 = a3;
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v20, v21);
  return a1;
}

_QWORD *sub_1002DDA3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for FastSyncPresenceController.PresenceChangeEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = type metadata accessor for FastSyncEditorShareChangedEvent(0);
      v10 = *(int *)(v9 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for EditNoteActivity(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = *(int *)(v9 + 28);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_100012E18(&qword_1005D2210);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = sub_100012E18(&qword_1005D7E60);
      *(_QWORD *)((char *)a1 + *(int *)(v18 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v18 + 48));
      v19 = a1;
      v20 = a3;
      v21 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      if (swift_getEnumCaseMultiPayload(a2, v7))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v23 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        v24 = sub_100012E18(&qword_1005D7430);
        v25 = *(int *)(v24 + 48);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_100012E18(&qword_1005D2210);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_100012E18(&qword_1005D2218);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v24 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 64));
        swift_storeEnumTagMultiPayload(a1, v7, 0);
      }
      v39 = sub_100012E18(&qword_1005D7E68);
      *(_QWORD *)((char *)a1 + *(int *)(v39 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v39 + 48));
      v19 = a1;
      v20 = a3;
      v21 = 1;
    }
    else
    {
      v22 = type metadata accessor for FastSyncControllerPool.PresenceAction(0);
      if (swift_getEnumCaseMultiPayload(a2, v22))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v31 = type metadata accessor for EditNoteActivity(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
        v32 = sub_100012E18(&qword_1005D7430);
        v33 = *(int *)(v32 + 48);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_100012E18(&qword_1005D2210);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          v38 = sub_100012E18(&qword_1005D2218);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v32 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v32 + 64));
        swift_storeEnumTagMultiPayload(a1, v22, 0);
      }
      v40 = sub_100012E18(&qword_1005D7E68);
      *(_QWORD *)((char *)a1 + *(int *)(v40 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v40 + 48));
      v19 = a1;
      v20 = a3;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_1002DDDB0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _BYTE v7[32];
  _BYTE v8[32];
  _QWORD v9[3];

  result = type metadata accessor for FastSyncControllerPool.PresenceAction(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v8, v4, (char *)&value witness table for Builtin.UnknownObject + 64);
    v9[0] = v8;
    swift_getTupleTypeLayout2(v7, v4, (char *)&value witness table for Builtin.UnknownObject + 64);
    v9[1] = v7;
    result = type metadata accessor for FastSyncEditorShareChangedEvent(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
      v9[2] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v9);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002DDE98()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  unint64_t v54;
  id v55;
  Class isa;
  id v57;
  id v58;
  id v59;
  _QWORD *v60;
  void *v61;
  _QWORD *v62;
  id v63;
  _BYTE *v64;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD aBlock[3];
  void *v76;
  uint64_t (*v77)(void *);
  _QWORD *v78;
  unint64_t v79;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005CFE60);
  __chkstk_darwin(v2);
  v72 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.CheckmarkOptions(0);
  v73 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D46E8);
  __chkstk_darwin(v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIListContentConfiguration(0);
  v74 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject(&unk_1005661C8, 32, 7);
  v17 = v16;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  v79 = (unint64_t)_swiftEmptyArrayStorage;
  v18 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_unknownParticipant];
  if (v18)
  {
    v68 = v6;
    v69 = v4;
    v19 = v18;
    v20 = objc_msgSend(v19, "displayName");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24 = *(_QWORD *)(v17 + 24);
    *(_QWORD *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 24) = v23;
    v25 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v24);
  }
  else
  {
    v26 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_participant];
    if (!v26)
      return swift_release(v16);
    v68 = v6;
    v69 = v4;
    v27 = v26;
    v28 = objc_msgSend(v27, "ic_cachedDisplayNameFromContacts");
    if (v28 || (v28 = objc_msgSend(v27, "ic_participantName")) != 0)
    {
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0xE000000000000000;
    }
    v32 = *(_QWORD *)(v17 + 24);
    *(_QWORD *)(v17 + 16) = v29;
    *(_QWORD *)(v17 + 24) = v31;
    swift_bridgeObjectRelease(v32);
    v33 = v27;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
    v35 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v34 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v35 >= v34 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
    v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
    specialized Array._endMutation()(v36);

  }
  UICollectionViewListCell.defaultContentConfiguration()(v25);
  v37 = *(_QWORD *)(v17 + 16);
  v38 = *(_QWORD *)(v17 + 24);
  swift_bridgeObjectRetain(v38);
  v39 = UIListContentConfiguration.text.setter(v37, v38);
  UICollectionViewCell.contentConfiguration.getter(aBlock, v39);
  if (!v76)
  {
    sub_100012DDC((uint64_t)aBlock, &qword_1005D46F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v12, 1, 1, v13);
    goto LABEL_15;
  }
  v40 = sub_100012E18(&qword_1005D46F8);
  v41 = swift_dynamicCast(v12, aBlock, v40, v13, 6);
  v42 = v74;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v12, v41 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v12, 1, v13) == 1)
  {
LABEL_15:
    sub_100012DDC((uint64_t)v12, &qword_1005D46E8);
LABEL_16:
    v43 = sub_1002DE97C();
    goto LABEL_17;
  }
  v43 = (id)UIListContentConfiguration.image.getter();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v12, v13);
  if (!v43)
    goto LABEL_16;
LABEL_17:
  UIListContentConfiguration.image.setter(v43);
  v76 = (void *)v13;
  v77 = (uint64_t (*)(void *))&protocol witness table for UIListContentConfiguration;
  v44 = sub_10012D160(aBlock);
  (*(void (**)(_QWORD *, char *, uint64_t))(v74 + 16))(v44, v15, v13);
  UICollectionViewCell.contentConfiguration.setter(aBlock);
  if (v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_showCheckmark] == 1)
  {
    v45 = sub_100012E18(&qword_1005CFE70);
    v46 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v47 = (_QWORD *)swift_allocObject(v45, ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72), *(unsigned __int8 *)(v46 + 80) | 7);
    *((_OWORD *)v47 + 1) = xmmword_100451C20;
    v66 = v15;
    v67 = v13;
    v49 = v70;
    v48 = v71;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v9, enum case for UICellAccessory.DisplayedState.always(_:), v71);
    v50 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v51 = v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v72, 1, 1, v50);
    v52 = v68;
    UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v51, 0);
    static UICellAccessory.checkmark(displayed:options:)(v9, v52);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v52, v69);
    v53 = *(void (**)(char *, uint64_t))(v49 + 8);
    v15 = v66;
    v13 = v67;
    v53(v9, v48);
  }
  else
  {
    v47 = _swiftEmptyArrayStorage;
  }
  UICollectionViewListCell.accessories.setter(v47);
  v54 = v79;
  v55 = objc_allocWithZone((Class)ICThumbnailConfiguration);
  sub_1000163BC(0, &qword_1005D8540, CKShareParticipant_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v54);
  v57 = objc_msgSend(v55, "initForAvatarWithParticipants:preferredSize:hasBorder:", isa, 0, 28.0, 28.0);

  v58 = objc_msgSend(v57, "uniqueKey");
  v59 = objc_msgSend((id)objc_opt_self(ICThumbnailService), "sharedThumbnailService");
  v60 = (_QWORD *)swift_allocObject(&unk_1005661F0, 40, 7);
  v60[2] = v58;
  v60[3] = v1;
  v60[4] = v17;
  v77 = sub_1002DEC80;
  v78 = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002489AC;
  v76 = &unk_100566208;
  v61 = _Block_copy(aBlock);
  v62 = v78;
  v63 = v58;
  v64 = v1;
  swift_retain(v17);
  swift_release(v62);
  objc_msgSend(v59, "thumbnailWithConfiguration:completion:", v57, v61);
  _Block_release(v61);

  (*(void (**)(char *, uint64_t))(v74 + 8))(v15, v13);
  return swift_release(v17);
}

uint64_t sub_1002DE550(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  _QWORD *v32;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000163BC(0, (unint64_t *)&qword_1005CEF30, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_100566240, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_1002DECC8;
  v32 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100206734;
  aBlock[3] = &unk_100566258;
  v17 = _Block_copy(aBlock);
  v18 = v32;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  swift_retain(a4);
  v22 = swift_release(v18);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100225940();
  v24 = sub_100012E18((uint64_t *)&unk_1005D8530);
  v25 = sub_1002DECD4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v8, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v29);
}

void sub_1002DE750(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v17[5];
  _BYTE v18[24];

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000163BC(0, (unint64_t *)&qword_1005D3D00, NSObject_ptr);
  v10 = objc_msgSend(a1, "configuration");
  v11 = objc_msgSend(v10, "uniqueKey");

  v12 = static NSObject.== infix(_:_:)(v11);
  if ((v12 & 1) != 0)
  {
    UICollectionViewListCell.defaultContentConfiguration()(v13);
    swift_beginAccess(a4 + 16, v18, 0, 0);
    v14 = *(_QWORD *)(a4 + 16);
    v15 = *(_QWORD *)(a4 + 24);
    swift_bridgeObjectRetain(v15);
    UIListContentConfiguration.text.setter(v14, v15);
    UIListContentConfiguration.image.setter(objc_msgSend(a1, "image"));
    v17[3] = v6;
    v17[4] = &protocol witness table for UIListContentConfiguration;
    v16 = sub_10012D160(v17);
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 16))(v16, v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

id sub_1002DE97C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell____lazy_storage___emptyAvatarImage;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell____lazy_storage___emptyAvatarImage);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell____lazy_storage___emptyAvatarImage);
  }
  else
  {
    v4 = (void *)objc_opt_self(UIImage);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v6 = objc_msgSend(v4, "ic_imageWithColor:size:", v5, 28.0, 28.0);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1002DEAE0(void *a1)
{
  _BYTE *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_participant] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_unknownParticipant] = 0;
  v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_showCheckmark] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_avatarSize] = 0x403C000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell____lazy_storage___emptyAvatarImage] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerParticipantCell();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_1002DEB90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerParticipantCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FolderComposerParticipantCell()
{
  return objc_opt_self(_TtC11MobileNotes29FolderComposerParticipantCell);
}

uint64_t sub_1002DEC28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DEC4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002DEC80(void *a1)
{
  uint64_t v1;

  return sub_1002DE550(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002DEC8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002DECC8()
{
  uint64_t v0;

  sub_1002DE750(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1002DECD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D6390;
  if (!qword_1005D6390)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D8530);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D6390);
  }
  return result;
}

uint64_t sub_1002DED28()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  uint64_t v7;
  objc_class *v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  Class v16;
  uint64_t v17;

  v17 = (uint64_t)_swiftEmptyArrayStorage;
  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v1);
  v3 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v2 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v3 >= v2 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v2 > 1, v3 + 1, 1);
  v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v1);
  v5 = specialized Array._endMutation()(v4);
  v6 = (objc_class *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x128))(v5);
  v16 = v6;
  v7 = sub_100012E18(&qword_1005D5878);
  Array.appendNonNil(_:)(&v16, v7);

  v8 = (objc_class *)sub_1002E0CD0();
  v16 = v8;
  Array.appendNonNil(_:)(&v16, v7);

  isa = sub_1002DF1B4().super.super.isa;
  v16 = isa;
  Array.appendNonNil(_:)(&v16, v7);

  v10 = v17;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v14 = v17;
    else
      v14 = v17 & 0xFFFFFFFFFFFFFF8;
    v15 = sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v10);
    v12 = _bridgeCocoaArray<A>(_:)(v14, v15);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    swift_bridgeObjectRetain(v17);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
    sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
    v12 = v10;
  }
  swift_bridgeObjectRelease(v10);
  return v12;
}

id sub_1002DEEF4()
{
  id v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  Class isa;
  id v5;
  id v7;
  _QWORD *v8;

  v8 = _swiftEmptyArrayStorage;
  v0 = sub_1002DFCE4();
  v7 = v0;
  v1 = sub_100012E18(&qword_1005D5880);
  Array.appendNonNil(_:)(&v7, v1);

  v2 = (void *)objc_opt_self(UIMenu);
  v3 = v8;
  sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  v5 = objc_msgSend(v2, "ic_inlineMenuWithChildren:", isa, v7);

  return v5;
}

id sub_1002DEFC0()
{
  id v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  _QWORD *v11;
  Class isa;
  id v13;
  id v15;
  _QWORD *v16;

  v16 = _swiftEmptyArrayStorage;
  v0 = sub_1002DFAA0();
  v15 = v0;
  v1 = sub_100012E18(&qword_1005D5880);
  Array.appendNonNil(_:)(&v15, v1);

  v2 = sub_1002DF720();
  v15 = v2;
  Array.appendNonNil(_:)(&v15, v1);

  v3 = sub_1002DF8C4();
  v15 = v3;
  Array.appendNonNil(_:)(&v15, v1);

  v4 = sub_1002E0058();
  v15 = v4;
  Array.appendNonNil(_:)(&v15, v1);

  v5 = sub_1002E01F4();
  v15 = v5;
  Array.appendNonNil(_:)(&v15, v1);

  v6 = sub_1002DFEA4();
  v15 = v6;
  Array.appendNonNil(_:)(&v15, v1);

  v7 = sub_1002E0384();
  v15 = v7;
  Array.appendNonNil(_:)(&v15, v1);

  v8 = sub_1002E0624();
  v15 = v8;
  Array.appendNonNil(_:)(&v15, v1);

  v9 = sub_1002E09B0();
  v15 = v9;
  Array.appendNonNil(_:)(&v15, v1);

  v10 = (void *)objc_opt_self(UIMenu);
  v11 = v16;
  sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v13 = objc_msgSend(v10, "ic_inlineMenuWithChildren:", isa);

  return v13;
}

UIMenu sub_1002DF1B4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *Strong;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  unsigned int v29;
  const char *v30;
  unint64_t v31;
  void *v32;
  NSString v33;
  id v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSString v41;
  objc_class *v42;
  Swift::String v43;
  Swift::OpaquePointer v45;
  __int128 aBlock;
  __int128 v47;
  unint64_t v48;
  uint64_t v49;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v51;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(ICUtilities), "isInternalInstall");
  if ((v2 & 1) == 0 && !ICDebugModeEnabled(v2, v3))
    return 0;
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v4 = sub_1002E0EC0();
  *(_QWORD *)&aBlock = v4;
  v5 = sub_100012E18(&qword_1005D5880);
  Array.appendNonNil(_:)(&aBlock, v5);

  v6 = sub_1002E1020();
  *(_QWORD *)&aBlock = v6;
  Array.appendNonNil(_:)(&aBlock, v5);

  v7 = sub_1002E1200();
  *(_QWORD *)&aBlock = v7;
  Array.appendNonNil(_:)(&aBlock, v5);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v9 = objc_msgSend(objc_allocWithZone((Class)ICDumpStateActivity), "initWithPresentingViewController:", Strong);

  v10 = *(_QWORD *)(v1 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
  if (v10)
  {
    v11 = *(_QWORD *)(v1 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v48 = v10;
    v49 = v11;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v47 = sub_10023ABC8;
    *((_QWORD *)&v47 + 1) = &unk_100566668;
    v12 = _Block_copy(&aBlock);
    v13 = v49;
    swift_retain(v11);
    swift_release(v13);
  }
  else
  {
    v12 = 0;
  }
  v14 = objc_msgSend(v9, "actionWithCompletion:", v12);
  _Block_release(v12);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
  specialized Array._endMutation()(v18);
  *((_QWORD *)&v47 + 1) = &type metadata for TelephonyUtilitiesFeature;
  v48 = sub_10013FA34();
  *(_QWORD *)&aBlock = "CallRecording";
  *((_QWORD *)&aBlock + 1) = 13;
  LOBYTE(v47) = 2;
  v19 = isFeatureEnabled(_:)(&aBlock);
  v20 = sub_1000153C0(&aBlock);
  if ((v19 & 1) != 0)
  {
    sub_1000163BC(0, (unint64_t *)&unk_1005CF6E0, UIAction_ptr);
    v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002E2074, 0);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v22, "setTitle:", v23);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v22);
    v20 = specialized Array._endMutation()(v27);
  }
  if (ICDebugModeEnabled(v20, v21))
  {
    v28 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v29 = objc_msgSend(v28, "_ICDebugWindowEnabled");

    v30 = "Show Debug Window";
    if (v29)
      v30 = "Hide Debug Window";
    v31 = (unint64_t)(v30 - 32) | 0x8000000000000000;
    sub_1000163BC(0, &qword_1005D8230, UICommand_ptr);
    aBlock = 0u;
    v47 = 0u;
    v45._rawValue = 0;
    v32 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0xD000000000000011, v31, 0, 0, 0, 0, "toggleDebugStatusWindowVisible:", &aBlock, _swiftEmptyArrayStorage);
    v33 = String._bridgeToObjectiveC()();
    v34 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v33);

    objc_msgSend(v32, "setImage:", v34);
  }
  else
  {
    v32 = 0;
  }
  *(_QWORD *)&aBlock = v32;
  Array.appendNonNil(_:)(&aBlock, v5);

  v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v35, "localizedStringForKey:value:table:", v36, 0, 0);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = String._bridgeToObjectiveC()();
  v42 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v41);

  sub_1000163BC(0, (unint64_t *)&unk_1005D8A40, UIMenu_ptr);
  v43._countAndFlagsBits = v38;
  v43._object = v40;
  v51.value.super.isa = v42;
  v51.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v43, (Swift::String_optional)0, v51, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v45);
}

id sub_1002DF720()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  objc_class *v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v15[5];
  uint64_t v16;
  objc_super v17;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v1;
  if (!objc_msgSend(v4, "isSharedViaICloud"))
  {

    return 0;
  }
  v6 = (objc_class *)type metadata accessor for ShowActivityStreamActivity();
  v7 = (char *)objc_allocWithZone(v6);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR___ICShowActivityStreamActivity_viewControllerManager], 0);
  *(_QWORD *)&v7[OBJC_IVAR___ICShowActivityStreamActivity_object] = v4;
  v17.receiver = v7;
  v17.super_class = v6;
  v8 = v5;
  v9 = (char *)objc_msgSendSuper2(&v17, "init");
  swift_unknownObjectWeakAssign(&v9[OBJC_IVAR___ICShowActivityStreamActivity_viewControllerManager], *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager));
  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v10 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v15[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v16 = v10;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10023ABC8;
    v15[3] = &unk_100566640;
    v11 = _Block_copy(v15);
    v12 = v16;
    swift_retain(v10);
    swift_release(v12);
  }
  else
  {
    v11 = 0;
  }
  v13 = objc_msgSend(v9, "actionWithCompletion:", v11);

  _Block_release(v11);
  return v13;
}

id sub_1002DF8C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v1;
  if (!objc_msgSend(v4, "canAddSubfolder"))
  {

    return 0;
  }
  v6 = v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v8 = swift_unknownObjectWeakLoadStrong(v6);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = objc_opt_self(ICNAViewController);
    v11 = (id)swift_dynamicCastObjCClass(v9, v10);
    v12 = v5;
    if (v11)
      v11 = objc_msgSend(v11, "eventReporter");

  }
  else
  {
    v15 = v5;
    v11 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)ICAddFolderActivity), "initWithPresentingViewController:presentingBarButtonItem:parentFolder:eventReporter:", Strong, 0, v4, v11);

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v17 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v20[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v21 = v17;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_10023ABC8;
    v20[3] = &unk_100566618;
    v18 = _Block_copy(v20);
    v19 = v21;
    swift_retain(v17);
    swift_release(v19);
  }
  else
  {
    v18 = 0;
  }
  v13 = objc_msgSend(v16, "actionWithCompletion:", v18);

  _Block_release(v18);
  return v13;
}

id sub_1002DFAA0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  double y;
  double width;
  double height;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[5];
  uint64_t v24;

  v1 = *(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return v1;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v1;
  if (!objc_msgSend(v4, "canBeSharedViaICloud"))
  {

    return 0;
  }
  v6 = v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v8 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem);
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v12 = (id)swift_unknownObjectWeakLoadStrong(v6);
  if (v12)
  {
    v13 = objc_opt_self(ICNAViewController);
    v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
    v15 = v8;
    if (!v14)

    v12 = objc_msgSend(v14, "eventReporter");
  }
  else
  {
    v15 = v8;
  }
  v16 = objc_allocWithZone((Class)ICCollaborationFolderActivity);
  v17 = v5;
  v18 = objc_msgSend(v16, "initWithFolder:presentingViewController:presentingBarButtonItem:presentingSourceView:presentingSourceRect:eventReporter:", v4, Strong, v15, 0, v12, CGRectNull.origin.x, y, width, height);

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v19 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v23[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v24 = v19;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256;
    v23[2] = sub_10023ABC8;
    v23[3] = &unk_1005665F0;
    v20 = _Block_copy(v23);
    v21 = v24;
    swift_retain(v19);
    swift_release(v21);
  }
  else
  {
    v20 = 0;
  }
  v1 = objc_msgSend(v18, "actionWithCompletion:", v20);

  _Block_release(v20);
  return v1;
}

id sub_1002DFCE4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *Strong;
  void *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v18[3];
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)&v0[OBJC_IVAR___ICNoteContainerActionMenu_noteContainer];
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = (void *)objc_opt_self(ICConvertToSmartFolderDecision);
  v6 = v1;
  if (!objc_msgSend(v5, "canShowConvertToSmartFolder:", v4))
  {

    return 0;
  }
  sub_1000163BC(0, &qword_1005D8228, &off_10054DCE0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController]);
  v8 = *(void **)&v0[OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem];
  v19 = (void *)type metadata accessor for NoteContainerActionMenu();
  v18[0] = v0;
  v9 = v8;
  v10 = v6;
  v11 = v0;
  v12 = sub_1002E1F54(v4, Strong, v8, v18);
  if (*(_QWORD *)&v11[OBJC_IVAR___ICNoteContainerActionMenu_completion])
  {
    v13 = *(_QWORD *)&v11[OBJC_IVAR___ICNoteContainerActionMenu_completion + 8];
    v20 = *(_QWORD *)&v11[OBJC_IVAR___ICNoteContainerActionMenu_completion];
    v21 = v13;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10023ABC8;
    v19 = &unk_1005665C8;
    v14 = _Block_copy(v18);
    v15 = v21;
    swift_retain(v13);
    swift_release(v15);
  }
  else
  {
    v14 = 0;
  }
  v16 = objc_msgSend(v12, "actionWithCompletion:", v14, v18[0]);

  _Block_release(v14);
  return v16;
}

id sub_1002DFEA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *Strong;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v17[5];
  uint64_t v18;
  objc_super v19;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v1;
  if (!objc_msgSend(v4, "isEditableSmartFolder"))
  {

    return 0;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v7 = (objc_class *)type metadata accessor for EditSmartFolderActivity();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = swift_unknownObjectWeakInit(&v8[OBJC_IVAR___ICEditSmartFolderActivity_presentingViewController], 0);
  *(_QWORD *)&v8[OBJC_IVAR___ICEditSmartFolderActivity_smartFolder] = v4;
  swift_unknownObjectWeakAssign(v9, Strong);
  v19.receiver = v8;
  v19.super_class = v7;
  v10 = v5;
  v11 = objc_msgSendSuper2(&v19, "init");

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v12 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v17[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10023ABC8;
    v17[3] = &unk_1005665A0;
    v13 = _Block_copy(v17);
    v14 = v18;
    swift_retain(v12);
    swift_release(v14);
  }
  else
  {
    v13 = 0;
  }
  v15 = objc_msgSend(v11, "actionWithCompletion:", v13);

  _Block_release(v13);
  return v15;
}

id sub_1002E0058()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *Strong;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v17[5];
  uint64_t v18;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = (void *)objc_opt_self(ICMoveFolderActivity);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager);
  v7 = v1;
  if (!objc_msgSend(v5, "canShowMoveActionForFolder:viewControllerManager:", v4, v6))
  {

    return 0;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v9 = objc_allocWithZone((Class)ICMoveFolderActivity);
  v10 = v7;
  v11 = objc_msgSend(v9, "initWithFolder:presentingViewController:", v4, Strong);

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v12 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v17[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10023ABC8;
    v17[3] = &unk_100566578;
    v13 = _Block_copy(v17);
    v14 = v18;
    swift_retain(v12);
    swift_release(v14);
  }
  else
  {
    v13 = 0;
  }
  v15 = objc_msgSend(v11, "actionWithCompletion:", v13);

  _Block_release(v13);
  return v15;
}

id sub_1002E01F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *Strong;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return 0;
  v2 = objc_opt_self(ICFolder);
  v3 = swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = v1;
  if (!objc_msgSend(v4, "isRenamable")
    || (objc_msgSend(v4, "isEditableSmartFolder") & 1) != 0)
  {

    return 0;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v9 = objc_allocWithZone((Class)ICRenameFolderActivity);
  v10 = v5;
  v11 = objc_msgSend(v9, "initWithFolder:presentingViewController:", v4, Strong);

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v12 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v15[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v16 = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10023ABC8;
    v15[3] = &unk_100566550;
    v13 = _Block_copy(v15);
    v14 = v16;
    swift_retain(v12);
    swift_release(v14);
  }
  else
  {
    v13 = 0;
  }
  v6 = objc_msgSend(v11, "actionWithCompletion:", v13);

  _Block_release(v13);
  return v6;
}

id sub_1002E0384()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *Strong;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void **v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (v1)
  {
    v2 = v1;
    if ((objc_msgSend(v2, "isSharedReadOnly") & 1) == 0)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
      v6 = objc_msgSend(objc_allocWithZone((Class)ICSelectNotesActivity), "initWithPresentingViewController:", Strong);

      if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
      {
        v11 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
        v23 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
        v24 = v11;
        v19 = _NSConcreteStackBlock;
        v20 = 1107296256;
        v21 = sub_10023ABC8;
        v22 = &unk_100566528;
        v12 = _Block_copy(&v19);
        v13 = v24;
        swift_retain(v11);
        swift_release(v13);
      }
      else
      {
        v12 = 0;
      }
      v14 = objc_msgSend(v6, "actionWithCompletion:", v12);
      _Block_release(v12);
      v16 = objc_opt_self(ICFolder);
      v17 = (void *)swift_dynamicCastObjCClass(v2, v16);
      if (v17)
        v15 = objc_msgSend(v17, "visibleNotesCount") == 0;
      else
        v15 = 0;
      goto LABEL_17;
    }

  }
  v3 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
  if (v3)
  {
    v4 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
    v5 = objc_allocWithZone((Class)ICSelectNotesActivity);
    v6 = v3;
    v2 = objc_msgSend(v5, "initWithPresentingViewController:", v4);

    if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
    {
      v7 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
      v23 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
      v24 = v7;
      v19 = _NSConcreteStackBlock;
      v20 = 1107296256;
      v21 = sub_10023ABC8;
      v22 = &unk_100566500;
      v8 = _Block_copy(&v19);
      v9 = v24;
      swift_retain(v7);
      swift_release(v9);
    }
    else
    {
      v8 = 0;
    }
    v14 = objc_msgSend(v2, "actionWithCompletion:", v8);
    _Block_release(v8);
    v15 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_context);
    if (v15)
      v15 = (unint64_t)objc_msgSend(v6, "isEmptyInContext:");
LABEL_17:
    objc_msgSend(v14, "setIc_disabled:", v15);

    return v14;
  }
  return 0;
}

id sub_1002E0624()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void **v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (v1)
  {
    v2 = objc_opt_self(ICFolder);
    v3 = swift_dynamicCastObjCClass(v1, v2);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = v1;
      if (objc_msgSend(v4, "supportsCustomNoteSortType"))
      {
        v6 = v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController;
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
        v8 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem);
        v9 = swift_unknownObjectWeakLoadStrong(v6);
        if (v9)
        {
          v10 = (void *)v9;
          v11 = objc_opt_self(ICNAViewController);
          v12 = (id)swift_dynamicCastObjCClass(v10, v11);
          v13 = v8;
          v14 = v5;
          if (v12)
            v12 = objc_msgSend(v12, "eventReporter");

        }
        else
        {
          v13 = v8;
          v29 = v5;
          v12 = 0;
        }
        v26 = objc_msgSend(objc_allocWithZone((Class)ICSortFolderActivity), "initWithFolder:presentingViewController:presentingBarButtonItem:eventReporter:noteContainerViewMode:", v4, Strong, v13, v12, objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager), "noteContainerViewMode"));

        if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
        {
          v27 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
          v37 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
          v38 = v27;
          v33 = _NSConcreteStackBlock;
          v34 = 1107296256;
          v28 = &unk_1005664D8;
          goto LABEL_21;
        }
        goto LABEL_22;
      }

    }
  }
  v5 = *(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
  if (v5)
  {
    v15 = v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController;
    v16 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
    v17 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem);
    v18 = swift_unknownObjectWeakLoadStrong(v15);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = objc_opt_self(ICNAViewController);
      v21 = (id)swift_dynamicCastObjCClass(v19, v20);
      v22 = v17;
      v23 = v5;
      if (v21)
        v21 = objc_msgSend(v21, "eventReporter");

    }
    else
    {
      v22 = v17;
      v25 = v5;
      v21 = 0;
    }
    v26 = objc_msgSend(objc_allocWithZone((Class)ICSortFolderActivity), "initWithVirtualSmartFolder:presentingViewController:presentingBarButtonItem:eventReporter:noteContainerViewMode:", v5, v16, v22, v21, objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager), "noteContainerViewMode"));

    if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
    {
      v27 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
      v37 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
      v38 = v27;
      v33 = _NSConcreteStackBlock;
      v34 = 1107296256;
      v28 = &unk_1005664B0;
LABEL_21:
      v35 = sub_10023ABC8;
      v36 = v28;
      v30 = _Block_copy(&v33);
      v31 = v38;
      swift_retain(v27);
      swift_release(v31);
LABEL_23:
      v24 = objc_msgSend(v26, "menuWithCompletion:", v30, v33, v34);
      _Block_release(v30);

      return v24;
    }
LABEL_22:
    v30 = 0;
    goto LABEL_23;
  }
  return 0;
}

id sub_1002E09B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void **v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (v1)
  {
    v2 = objc_opt_self(ICFolder);
    v3 = swift_dynamicCastObjCClass(v1, v2);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = v1;
      if (objc_msgSend(v4, "supportsDateHeaders"))
      {
        v6 = v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController;
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
        v8 = swift_unknownObjectWeakLoadStrong(v6);
        if (v8)
        {
          v9 = (void *)v8;
          v10 = objc_opt_self(ICNAViewController);
          v11 = (id)swift_dynamicCastObjCClass(v9, v10);
          v12 = v5;
          if (v11)
            v11 = objc_msgSend(v11, "eventReporter");

        }
        else
        {
          v25 = v5;
          v11 = 0;
        }
        v22 = objc_msgSend(objc_allocWithZone((Class)ICDateHeadersNoteContainerActivity), "initWithContainer:presentingViewController:eventReporter:noteContainerViewMode:", v4, Strong, v11, objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager), "noteContainerViewMode"));

        if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
        {
          v23 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
          v33 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
          v34 = v23;
          v29 = _NSConcreteStackBlock;
          v30 = 1107296256;
          v24 = &unk_100566488;
          goto LABEL_21;
        }
        goto LABEL_22;
      }

    }
  }
  v5 = *(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
  if (v5)
  {
    v13 = v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController;
    v14 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
    v15 = swift_unknownObjectWeakLoadStrong(v13);
    if (v15)
    {
      v16 = (void *)v15;
      v17 = objc_opt_self(ICNAViewController);
      v18 = (id)swift_dynamicCastObjCClass(v16, v17);
      v19 = v5;
      if (v18)
        v18 = objc_msgSend(v18, "eventReporter");

    }
    else
    {
      v21 = v5;
      v18 = 0;
    }
    v22 = objc_msgSend(objc_allocWithZone((Class)ICDateHeadersNoteContainerActivity), "initWithVirtualSmartFolder:presentingViewController:eventReporter:noteContainerViewMode:", v5, v14, v18, objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager), "noteContainerViewMode"));

    if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
    {
      v23 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
      v33 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
      v34 = v23;
      v29 = _NSConcreteStackBlock;
      v30 = 1107296256;
      v24 = &unk_100566460;
LABEL_21:
      v31 = sub_10023ABC8;
      v32 = v24;
      v26 = _Block_copy(&v29);
      v27 = v34;
      swift_retain(v23);
      swift_release(v27);
LABEL_23:
      v20 = objc_msgSend(v22, "menuWithCompletion:", v26, v29, v30);
      _Block_release(v26);

      return v20;
    }
LABEL_22:
    v26 = 0;
    goto LABEL_23;
  }
  return 0;
}

id sub_1002E0CD0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  objc_class *v19;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  objc_super v25;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_context);
  if (!v1)
    return 0;
  v2 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
  if (!v2)
    return 0;
  v3 = v1;
  v4 = objc_msgSend(v2, "type");
  v5 = (void *)ICVirtualSmartFolderItemIdentifierTypeMathNotes;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  if (v6 == v9 && v8 == v10)
  {
    v15 = v5;

    swift_bridgeObjectRelease_n(v8, 2);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  v14 = v5;

  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
LABEL_10:
    v16 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager);
    if (objc_msgSend(v16, "behavior") == (id)1
      && !objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_recentlyDeletedMathNotesFolder), "isEmptyInContext:", v3))
    {
      v19 = (objc_class *)type metadata accessor for RecentlyDeletedMathNotesActivity();
      v20 = (char *)objc_allocWithZone(v19);
      v21 = swift_unknownObjectWeakInit(&v20[OBJC_IVAR___ICRecentlyDeletedMathNotesActivity_viewControllerManager], 0);
      swift_unknownObjectWeakAssign(v21, v16);
      v25.receiver = v20;
      v25.super_class = v19;
      v22 = objc_msgSendSuper2(&v25, "init");
      v23 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
      v24 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
      sub_100166B74((uint64_t)v23, v24);
      v17 = sub_1003D0A88(v23, v24);
      sub_100012C50((uint64_t)v23, v24);

      return v17;
    }
  }

  return 0;
}

id sub_1002E0EC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *Strong;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v12[5];
  uint64_t v13;

  if (!ICInternalSettingsIsAlexandriaEnabled())
    return 0;
  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v1)
    return 0;
  v2 = v1;
  if (!objc_msgSend(v2, "allowsImporting"))
  {

    return 0;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v4 = objc_allocWithZone((Class)ICImportArchiveActivity);
  v5 = v2;
  v6 = objc_msgSend(v4, "initWithNoteContainer:presentingViewController:", v5, Strong);

  if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v7 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v12[4] = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v13 = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10023ABC8;
    v12[3] = &unk_100566438;
    v8 = _Block_copy(v12);
    v9 = v13;
    swift_retain(v7);
    swift_release(v9);
  }
  else
  {
    v8 = 0;
  }
  v10 = objc_msgSend(v6, "actionWithCompletion:", v8);

  _Block_release(v8);
  return v10;
}

id sub_1002E1020()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  id v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD v16[5];
  uint64_t v17;

  v1 = v0;
  if (!ICInternalSettingsIsAlexandriaEnabled())
    return 0;
  v2 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (!v2)
    return 0;
  v3 = v2;
  if (!objc_msgSend(v3, "allowsExporting"))
  {

    return 0;
  }
  v4 = sub_100012E18(&qword_1005CF6F0);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100456F30;
  *(_QWORD *)(v5 + 32) = v3;
  v16[0] = v5;
  specialized Array._endMutation()(v5);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
  v7 = objc_allocWithZone((Class)ICExportArchiveActivity);
  sub_1000163BC(0, (unint64_t *)&qword_1005D9080, ICCloudSyncingObject_ptr);
  v8 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16[0]);
  v10 = objc_msgSend(v7, "initWithObjects:presentingViewController:presentingBarButtonItem:presentingSourceView:", isa, Strong, 0, 0);

  if (*(_QWORD *)(v1 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
  {
    v11 = *(_QWORD *)(v1 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v16[4] = *(_QWORD *)(v1 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
    v17 = v11;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10023ABC8;
    v16[3] = &unk_100566410;
    v12 = _Block_copy(v16);
    v13 = v17;
    swift_retain(v11);
    swift_release(v13);
  }
  else
  {
    v12 = 0;
  }
  v14 = objc_msgSend(v10, "actionWithCompletion:", v12, v16[0]);

  _Block_release(v12);
  return v14;
}

id sub_1002E1200()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  id v22;
  void **v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "identifier");
    if (v3)
    {
      v4 = v3;
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v7 = v6;

      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v5 & 0xFFFFFFFFFFFFLL;
      if (v8)
      {
        v9 = objc_allocWithZone((Class)ICCopyUUIDActivity);
        v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v7);
        v11 = objc_msgSend(v9, "initWithUUIDString:", v10);

        if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
        {
          v12 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
          v28 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
          v29 = v12;
          v24 = _NSConcreteStackBlock;
          v25 = 1107296256;
          v13 = &unk_1005663E8;
LABEL_13:
          v26 = sub_10023ABC8;
          v27 = v13;
          v20 = _Block_copy(&v24);
          v21 = v29;
          swift_retain(v12);
          swift_release(v21);
LABEL_16:
          v22 = objc_msgSend(v11, "actionWithCompletion:", v20, v24, v25);

          _Block_release(v20);
          return v22;
        }
        goto LABEL_15;
      }

      swift_bridgeObjectRelease(v7);
    }
    else
    {

    }
  }
  v14 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
  if (v14)
  {
    v2 = v14;
    v15 = objc_msgSend(v2, "identifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

    v18 = objc_allocWithZone((Class)ICCopyUUIDActivity);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v11 = objc_msgSend(v18, "initWithUUIDString:", v19);

    if (*(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion))
    {
      v12 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
      v28 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
      v29 = v12;
      v24 = _NSConcreteStackBlock;
      v25 = 1107296256;
      v13 = &unk_1005663C0;
      goto LABEL_13;
    }
LABEL_15:
    v20 = 0;
    goto LABEL_16;
  }
  return 0;
}

id sub_1002E1548(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
  if (v3)
  {
    v4 = objc_opt_self(*a3);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5)
      v6 = v3;
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

id sub_1002E1F54(void *a1, void *a2, void *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v5 = v4;
  v9 = a4[3];
  if (v9)
  {
    v11 = sub_10012D19C(a4, a4[3]);
    v12 = *(_QWORD *)(v9 - 8);
    __chkstk_darwin(v11);
    v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v9);
    sub_1000153C0(a4);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "initWithFolder:presentingViewController:presentingBarButtonItem:sender:", a1, a2, a3, v15);
  swift_unknownObjectRelease(v15, v17);

  return v16;
}

void sub_1002E2074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  NSObject *v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  _QWORD aBlock[5];
  _QWORD *v22;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v5 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v6 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  if (v6
    && (v7 = v6, v8 = objc_msgSend(v6, "managedObjectContext"), v7, v8))
  {
    v9 = (_QWORD *)swift_allocObject(&unk_1005666A0, 40, 7);
    v9[2] = v4;
    v9[3] = v5;
    v9[4] = v8;
    aBlock[4] = sub_1002E2820;
    v22 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100206734;
    aBlock[3] = &unk_1005666B8;
    v10 = _Block_copy(aBlock);
    v11 = v22;
    v12 = v4;
    v13 = v5;
    v14 = v8;
    swift_release(v11);
    objc_msgSend(v14, "performBlock:", v10);
    _Block_release(v10);

  }
  else
  {
    v15 = static Logger.audioTranscription.getter(v6);
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.error.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "no shared context for call recording debug menu item", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
      v20 = v4;
    }
    else
    {
      v20 = v16;
      v16 = v4;
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

id sub_1002E22D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoteContainerActionMenu();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NoteContainerActionMenu()
{
  return objc_opt_self(ICNoteContainerActionMenu);
}

uint64_t sub_1002E23C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
  sub_100166B74(v1, *(_QWORD *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8));
  return v1;
}

uint64_t sub_1002E23FC()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController);
}

void *sub_1002E240C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem);
  v2 = v1;
  return v1;
}

uint64_t sub_1002E243C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
}

id sub_1002E2464(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v13 = (void *)objc_opt_self(ICNoteContext);
  v14 = v6;
  v15 = objc_msgSend(v13, "sharedContext");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "managedObjectContext");

  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_context] = v17;
  v18 = OBJC_IVAR___ICNoteContainerActionMenu_recentlyDeletedMathNotesFolder;
  *(_QWORD *)&v14[v18] = objc_msgSend((id)objc_opt_self(ICAccount), "globalVirtualRecentlyDeletedMathNotesFolder");
  v19 = swift_unknownObjectWeakInit(&v14[OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController], 0);
  v20 = (uint64_t *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_completion];
  *v20 = 0;
  v20[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_noteContainer] = a1;
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder] = 0;
  swift_unknownObjectWeakAssign(v19, a2);
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem] = a3;
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager] = a4;
  v21 = *v20;
  v22 = v20[1];
  *v20 = a5;
  v20[1] = a6;
  v23 = a3;
  v24 = a4;
  v25 = a1;
  sub_100166B74(a5, a6);
  sub_100012C50(v21, v22);

  v27.receiver = v14;
  v27.super_class = (Class)type metadata accessor for NoteContainerActionMenu();
  return objc_msgSendSuper2(&v27, "init");
}

id sub_1002E25F4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  objc_super v27;

  v13 = (void *)objc_opt_self(ICNoteContext);
  v14 = v6;
  v15 = objc_msgSend(v13, "sharedContext");
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "managedObjectContext");

  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_context] = v17;
  v18 = OBJC_IVAR___ICNoteContainerActionMenu_recentlyDeletedMathNotesFolder;
  *(_QWORD *)&v14[v18] = objc_msgSend((id)objc_opt_self(ICAccount), "globalVirtualRecentlyDeletedMathNotesFolder");
  v19 = swift_unknownObjectWeakInit(&v14[OBJC_IVAR___ICNoteContainerActionMenu_presentingViewController], 0);
  v20 = (uint64_t *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_completion];
  *v20 = 0;
  v20[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_noteContainer] = 0;
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder] = a1;
  swift_unknownObjectWeakAssign(v19, a2);
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_presentingBarButtonItem] = a3;
  *(_QWORD *)&v14[OBJC_IVAR___ICNoteContainerActionMenu_viewControllerManager] = a4;
  v21 = *v20;
  v22 = v20[1];
  *v20 = a5;
  v20[1] = a6;
  v23 = a3;
  v24 = a4;
  v25 = a1;
  sub_100166B74(a5, a6);
  sub_100012C50(v21, v22);

  v27.receiver = v14;
  v27.super_class = (Class)type metadata accessor for NoteContainerActionMenu();
  return objc_msgSendSuper2(&v27, "init");
}

uint64_t sub_1002E2784()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1002E27A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8220;
  if (!qword_1005D8220)
  {
    v1 = type metadata accessor for NoteContainerActionMenu();
    result = swift_getWitnessTable(&unk_100461958, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8220);
  }
  return result;
}

uint64_t sub_1002E27EC()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002E2820()
{
  void **v0;

  sub_100177E20(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002E2BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v11 = a3;
  v12 = a4();
  v9[0] = a5;
  v9[1] = a6;
  v10 = 2;
  LOBYTE(a6) = isFeatureEnabled(_:)(v9);
  sub_1000153C0(v9);
  return a6 & 1;
}

uint64_t type metadata accessor for ICFeatureFlags()
{
  return objc_opt_self(_TtC11MobileNotes14ICFeatureFlags);
}

id sub_1002E2DD4()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  _BOOL8 v5;
  id v6;
  void *v7;
  _BOOL8 v8;
  uint64_t v9;
  Swift::OpaquePointer preferredElementSize;
  id v11;
  Swift::String v12;
  UIMenu v13;
  void *v14;
  UIImage_optional v16;

  v1 = v0;
  v2 = sub_1002E3758();
  v3 = OBJC_IVAR___ICTagOperatorCell_tagSelection;
  v4 = *(void **)&v1[OBJC_IVAR___ICTagOperatorCell_tagSelection];
  v5 = v4 && objc_msgSend(v4, "tagOperator") == (id)1;
  objc_msgSend(v2, "setState:", v5);

  v6 = sub_1002E38C4();
  v7 = *(void **)&v1[v3];
  v8 = v7 && objc_msgSend(v7, "tagOperator") == (id)2;
  objc_msgSend(v6, "setState:", v8);

  sub_1000163BC(0, (unint64_t *)&unk_1005D8A40, UIMenu_ptr);
  v9 = sub_100012E18(&qword_1005CF6F0);
  preferredElementSize._rawValue = (void *)swift_allocObject(v9, 48, 7);
  *((_OWORD *)preferredElementSize._rawValue + 1) = xmmword_100451BF0;
  *((_QWORD *)preferredElementSize._rawValue + 4) = sub_1002E3758();
  v11 = sub_1002E38C4();
  *((_QWORD *)preferredElementSize._rawValue + 5) = v11;
  specialized Array._endMutation()(v11);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v16.value.super.isa = 0;
  v16.is_nil = 0;
  v13.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize._rawValue, preferredElementSize).super.super.isa;
  v14 = *(void **)&v1[OBJC_IVAR___ICTagOperatorCell____lazy_storage___menu];
  *(UIMenu *)&v1[OBJC_IVAR___ICTagOperatorCell____lazy_storage___menu] = v13;

  return objc_msgSend(v1, "setNeedsUpdateConfiguration");
}

void sub_1002E2F48(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(char *, uint64_t);
  objc_class *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  void *v46;
  id v47;
  void (*v48)(_QWORD *, _QWORD);
  id v49;
  void (*v50)(_QWORD *, _QWORD);
  void (*v51)(_QWORD *, _QWORD);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  objc_class *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  void (*v64)(char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  void *v73;

  v2 = v1;
  v4 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v69 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v68 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005CFE60);
  __chkstk_darwin(v6);
  v65 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.PopUpMenuOptions(0);
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005D46E8);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIListContentConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v62 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v62 - v22;
  v24 = objc_msgSend(v2, "ic_inSidebar");
  v70 = v4;
  if (v24)
    static UIListContentConfiguration.sidebarHeader()();
  else
    static UIListContentConfiguration.prominentInsetGroupedHeader()();
  v63 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v63(v18, v23, v14);
  v26 = type metadata accessor for UICellConfigurationState(0, v25);
  v72 = v26;
  v73 = &protocol witness table for UICellConfigurationState;
  v27 = sub_10012D160(v71);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  UIListContentConfiguration.updated(for:)(v71);
  v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  v28(v18, v14);
  v28(v23, v14);
  sub_1000153C0(v71);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v21, v14);
  v29 = sub_1002E35C0();
  v30 = -[objc_class selectedElements](v29, "selectedElements");

  v31 = sub_1000163BC(0, (unint64_t *)&qword_1005D8A30, UIMenuElement_ptr);
  v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

  if (!((unint64_t)v32 >> 62))
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    v64 = v28;
    if (v33)
      goto LABEL_6;
LABEL_14:
    swift_bridgeObjectRelease(v32);
    UICollectionViewCell.contentConfiguration.getter(v71, v42);
    if (v72)
    {
      v43 = sub_100012E18(&qword_1005D46F8);
      v44 = swift_dynamicCast(v13, v71, v43, v14, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, v44 ^ 1u, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
      {
        v37 = UIListContentConfiguration.text.getter();
        v39 = v45;
        v28(v13, v14);
        goto LABEL_19;
      }
    }
    else
    {
      sub_100012DDC((uint64_t)v71, &qword_1005D46F0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    }
    sub_100012DDC((uint64_t)v13, &qword_1005D46E8);
    v37 = 0;
    v39 = 0;
    goto LABEL_19;
  }
  if (v32 < 0)
    v40 = v32;
  else
    v40 = v32 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v32);
  v41 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease(v32);
  v64 = v28;
  if (!v41)
    goto LABEL_14;
LABEL_6:
  if ((v32 & 0xC000000000000001) != 0)
  {
    v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v32);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v34 = *(id *)(v32 + 32);
LABEL_9:
    v35 = v34;
    v36 = objc_msgSend(v34, "title", swift_bridgeObjectRelease(v32).n128_f64[0]);

    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

LABEL_19:
    UIListContentConfiguration.text.setter(v37, v39);
    v46 = (void *)objc_opt_self(UIColor);
    v47 = objc_msgSend(v46, "ICTintColor");
    v48 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v71);
    UIListContentConfiguration.TextProperties.color.setter(v47);
    v48(v71, 0);
    v49 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    v50 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v71);
    UIListContentConfiguration.TextProperties.font.setter(v49);
    v50(v71, 0);
    v51 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v71);
    UIListContentConfiguration.TextProperties.numberOfLines.setter(0);
    v51(v71, 0);
    v72 = v14;
    v73 = &protocol witness table for UIListContentConfiguration;
    v52 = (char *)sub_10012D160(v71);
    v63(v52, v23, v14);
    UICollectionViewCell.contentConfiguration.setter(v71);
    v53 = sub_100012E18(&qword_1005CFE70);
    v54 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v55 = swift_allocObject(v53, ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72), *(unsigned __int8 *)(v54 + 80) | 7);
    *(_OWORD *)(v55 + 16) = xmmword_100451C20;
    v56 = sub_1002E35C0();
    v57 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v58 = v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v65, 1, 1, v57);
    UICellAccessory.PopUpMenuOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v58, objc_msgSend(v46, "ICTintColor"));
    v59 = v68;
    v60 = v69;
    v61 = v70;
    (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, enum case for UICellAccessory.DisplayedState.always(_:), v70);
    static UICellAccessory.popUpMenu(_:displayed:options:selectedElementDidChangeHandler:)(v56, v59, v10, 0, 0);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v10, v67);
    UICollectionViewListCell.accessories.setter(v55);
    v64(v23, v14);
    return;
  }
  __break(1u);
}

objc_class *sub_1002E35C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::OpaquePointer preferredElementSize;
  id v7;
  Swift::String v8;
  UIMenu v9;
  void *v10;
  id v11;
  UIImage_optional v13;

  v1 = OBJC_IVAR___ICTagOperatorCell____lazy_storage___menu;
  v2 = *(void **)(v0 + OBJC_IVAR___ICTagOperatorCell____lazy_storage___menu);
  if (v2)
  {
    v3 = *(objc_class **)(v0 + OBJC_IVAR___ICTagOperatorCell____lazy_storage___menu);
  }
  else
  {
    v4 = v0;
    sub_1000163BC(0, (unint64_t *)&unk_1005D8A40, UIMenu_ptr);
    v5 = sub_100012E18(&qword_1005CF6F0);
    preferredElementSize._rawValue = (void *)swift_allocObject(v5, 48, 7);
    *((_OWORD *)preferredElementSize._rawValue + 1) = xmmword_100451BF0;
    *((_QWORD *)preferredElementSize._rawValue + 4) = sub_1002E3758();
    v7 = sub_1002E38C4();
    *((_QWORD *)preferredElementSize._rawValue + 5) = v7;
    specialized Array._endMutation()(v7);
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v13.value.super.isa = 0;
    v13.is_nil = 0;
    v9.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v13, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize._rawValue, preferredElementSize).super.super.isa;
    v10 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v9;
    v3 = v9.super.super.isa;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1002E3758()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR___ICTagOperatorCell____lazy_storage___allAction;
  v2 = *(void **)&v0[OBJC_IVAR___ICTagOperatorCell____lazy_storage___allAction];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR___ICTagOperatorCell____lazy_storage___allAction];
  }
  else
  {
    v4 = v0;
    sub_1000163BC(0, (unint64_t *)&unk_1005CF6E0, UIAction_ptr);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = swift_allocObject(&unk_100566760, 24, 7);
    *(_QWORD *)(v11 + 16) = v0;
    v12 = v0;
    v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8, v10, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002E3CF8, v11);
    v14 = *(void **)&v0[v1];
    *(_QWORD *)&v4[v1] = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

id sub_1002E38C4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR___ICTagOperatorCell____lazy_storage___anyAction;
  v2 = *(void **)&v0[OBJC_IVAR___ICTagOperatorCell____lazy_storage___anyAction];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR___ICTagOperatorCell____lazy_storage___anyAction];
  }
  else
  {
    v4 = v0;
    sub_1000163BC(0, (unint64_t *)&unk_1005CF6E0, UIAction_ptr);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, 0, 0);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = swift_allocObject(&unk_100566738, 24, 7);
    *(_QWORD *)(v11 + 16) = v0;
    v12 = v0;
    v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8, v10, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002E3CDC, v11);
    v14 = *(void **)&v0[v1];
    *(_QWORD *)&v4[v1] = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

void sub_1002E3A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void (*v6)(id);
  uint64_t v7;
  id v8;

  v3 = *(void **)(a2 + OBJC_IVAR___ICTagOperatorCell_tagSelection);
  if (v3)
  {
    v8 = v3;
    sub_1002E2DD4(objc_msgSend(v8, "setTagOperator:", a3));
    v6 = *(void (**)(id))(a2 + OBJC_IVAR___ICTagOperatorCell_selectionChangeHandler);
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + OBJC_IVAR___ICTagOperatorCell_selectionChangeHandler + 8);
      swift_retain(v7);
      v6(v8);
      sub_100012C50((uint64_t)v6, v7);
    }

  }
}

id sub_1002E3B78(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = &v1[OBJC_IVAR___ICTagOperatorCell_selectionChangeHandler];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICTagOperatorCell_tagSelection] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICTagOperatorCell____lazy_storage___menu] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICTagOperatorCell____lazy_storage___anyAction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICTagOperatorCell____lazy_storage___allAction] = 0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

uint64_t type metadata accessor for TagOperatorCell()
{
  return objc_opt_self(ICTagOperatorCell);
}

uint64_t sub_1002E3CB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002E3CDC(uint64_t a1)
{
  uint64_t v1;

  sub_1002E3A30(a1, *(_QWORD *)(v1 + 16), 2);
}

void sub_1002E3CF8(uint64_t a1)
{
  uint64_t v1;

  sub_1002E3A30(a1, *(_QWORD *)(v1 + 16), 1);
}

uint64_t sub_1002E3D14()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002E3D3C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  char v44[80];
  _QWORD *v45;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v45 = _swiftEmptyArrayStorage;
    sub_100137028(0, v1, 0);
    v3 = _swiftEmptyArrayStorage;
    v4 = sub_1002E5D18(v2);
    v6 = v5;
    v7 = v2 + 64;
    v41 = (id)objc_opt_self(NSBundle);
    v8 = 0;
    v36 = v2 + 80;
    v37 = v1;
    v38 = v6;
    v39 = v2 + 64;
    v40 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v2 + 32))
    {
      v11 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(v2 + 36) != v6)
        goto LABEL_24;
      v42 = v8;
      v12 = *(_QWORD *)(v2 + 56);
      v13 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v4 + 8);
      v43 = v3;
      v14 = *(_QWORD *)(v12 + 8 * v4);
      v15 = sub_100012E18((uint64_t *)&unk_1005D5630);
      inited = swift_initStackObject(v15, v44);
      *(_OWORD *)(inited + 16) = xmmword_100451C20;
      *(_QWORD *)(inited + 56) = &type metadata for Int;
      *(_QWORD *)(inited + 64) = &protocol witness table for Int;
      *(_QWORD *)(inited + 32) = v14;
      v17 = objc_msgSend(v41, "mainBundle", swift_bridgeObjectRetain(v13).n128_f64[0]);
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      swift_bridgeObjectRetain(v22);
      v23 = sub_10012CED4(inited, v20, v22);
      v25 = v24;
      v26 = v22;
      v3 = v43;
      swift_bridgeObjectRelease_n(v26, 2);
      swift_setDeallocating(inited);
      v27 = sub_100012E18(&qword_1005CFE68);
      swift_arrayDestroy(inited + 32, 1, v27);
      swift_bridgeObjectRelease(v13);
      v45 = v43;
      v29 = v43[2];
      v28 = v43[3];
      if (v29 >= v28 >> 1)
      {
        sub_100137028(v28 > 1, v29 + 1, 1);
        v3 = v45;
      }
      v3[2] = v29 + 1;
      v30 = &v3[2 * v29];
      v30[4] = v23;
      v30[5] = v25;
      v2 = v40;
      v9 = 1 << *(_BYTE *)(v40 + 32);
      if (v4 >= v9)
        goto LABEL_25;
      v7 = v39;
      v31 = *(_QWORD *)(v39 + 8 * v11);
      if ((v31 & (1 << v4)) == 0)
        goto LABEL_26;
      v6 = v38;
      if (*(_DWORD *)(v40 + 36) != v38)
        goto LABEL_27;
      v32 = v31 & (-2 << (v4 & 0x3F));
      if (v32)
      {
        v9 = __clz(__rbit64(v32)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v10 = v37;
      }
      else
      {
        v33 = v11 + 1;
        v34 = (unint64_t)(v9 + 63) >> 6;
        v10 = v37;
        if (v11 + 1 < v34)
        {
          v35 = *(_QWORD *)(v39 + 8 * v33);
          if (v35)
          {
LABEL_20:
            v9 = __clz(__rbit64(v35)) + (v33 << 6);
          }
          else
          {
            while (v34 - 2 != v11)
            {
              v35 = *(_QWORD *)(v36 + 8 * v11++);
              if (v35)
              {
                v33 = v11 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      v8 = v42 + 1;
      v4 = v9;
      if (v42 + 1 == v10)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

id sub_1002E4084(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView____lazy_storage___previewView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView____lazy_storage___textStackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView_modernContext] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView_htmlContext] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMoveHeaderView_objectIds] = _swiftEmptyArrayStorage;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v12, "initWithFrame:", a1, a2, a3, a4);
  sub_1002E416C();

  return v10;
}

void sub_1002E416C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;

  v1 = v0;
  v2 = objc_msgSend(v0, "contentView");
  v3 = sub_1002E4598();
  objc_msgSend(v2, "addSubview:", v3);

  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_100012E18(&qword_1005CF6F0);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100451BE0;
  v7 = sub_1002E4598();
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v1, "topAnchor");
  objc_msgSend(v1, "directionalLayoutMargins");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9);

  *(_QWORD *)(v6 + 32) = v10;
  v11 = sub_1002E4598();
  v12 = objc_msgSend(v11, "leadingAnchor");

  v13 = objc_msgSend(v1, "layoutMarginsGuide");
  v14 = objc_msgSend(v13, "leadingAnchor");

  v15 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v14, 16.0);
  *(_QWORD *)(v6 + 40) = v15;
  v16 = sub_1002E4598();
  v17 = objc_msgSend(v16, "bottomAnchor");

  v18 = objc_msgSend(v1, "bottomAnchor");
  objc_msgSend(v1, "directionalLayoutMargins");
  v20 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, -v19);

  *(_QWORD *)(v6 + 48) = v20;
  v21 = sub_1002E4598();
  v22 = objc_msgSend(v21, "trailingAnchor");

  v23 = objc_msgSend(v1, "layoutMarginsGuide");
  v24 = objc_msgSend(v23, "trailingAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v24, -16.0);
  *(_QWORD *)(v6 + 56) = v25;
  specialized Array._endMutation()(v26);
  sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  sub_1002E45F8();
}

id sub_1002E44A0(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView____lazy_storage___previewView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView____lazy_storage___textStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView_modernContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView_htmlContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView_objectIds] = _swiftEmptyArrayStorage;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);
  v5 = v4;
  if (v4)
  {
    v6 = v4;
    sub_1002E416C();

  }
  return v5;
}

id sub_1002E4598()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___ICMoveHeaderView____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR___ICMoveHeaderView____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___ICMoveHeaderView____lazy_storage___stackView);
  }
  else
  {
    v4 = sub_1002E4B94();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1002E45F8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = sub_1002E4708();
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  objc_msgSend(v1, "setHidden:", v2 & 1);

  v6 = sub_1002E47C4(&OBJC_IVAR___ICMoveHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1002E491C);
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LOBYTE(v4) = static UIContentSizeCategory.>= infix(_:_:)(v5, UIContentSizeCategoryExtraExtraExtraLarge);
  objc_msgSend(v6, "setHidden:", v4 & 1);

}

id sub_1002E4708()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR___ICMoveHeaderView____lazy_storage___previewView;
  v2 = *(void **)(v0 + OBJC_IVAR___ICMoveHeaderView____lazy_storage___previewView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___ICMoveHeaderView____lazy_storage___previewView);
  }
  else
  {
    v4 = type metadata accessor for MovePreviewView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1002E47C4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2();
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1002E481C()
{
  id v0;
  unsigned int v1;
  id *v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityLarge);
  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "ic_isVision");
  v2 = (id *)&UIFontTextStyleSubheadline;
  if (!v1)
    v2 = (id *)&UIFontTextStyleHeadline;
  v3 = *v2;
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", v3);

  objc_msgSend(v0, "setFont:", v4);
  return v0;
}

id sub_1002E491C()
{
  id v0;
  unsigned int v1;
  id *v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "ic_isVision");
  v2 = (id *)&UIFontTextStyleCaption1;
  if (!v1)
    v2 = (id *)&UIFontTextStyleSubheadline;
  v3 = *v2;
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", v3);

  objc_msgSend(v0, "setFont:", v4);
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v5);

  return v0;
}

id sub_1002E4A3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  Class isa;
  id v11;
  void *v12;
  id v13;

  v1 = OBJC_IVAR___ICMoveHeaderView____lazy_storage___textStackView;
  v2 = *(void **)(v0 + OBJC_IVAR___ICMoveHeaderView____lazy_storage___textStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___ICMoveHeaderView____lazy_storage___textStackView);
  }
  else
  {
    v4 = v0;
    v5 = sub_100012E18(&qword_1005CF6F0);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100451BF0;
    *(_QWORD *)(v6 + 32) = sub_1002E47C4(&OBJC_IVAR___ICMoveHeaderView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1002E481C);
    v7 = sub_1002E47C4(&OBJC_IVAR___ICMoveHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1002E491C);
    *(_QWORD *)(v6 + 40) = v7;
    specialized Array._endMutation()(v7);
    v8 = v6;
    v9 = objc_allocWithZone((Class)UIStackView);
    sub_1000163BC(0, (unint64_t *)&qword_1005D8340, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v9, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

    objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v11, "setAxis:", 1);
    v12 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

id sub_1002E4B94()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  Class isa;
  id v5;

  v0 = sub_100012E18(&qword_1005CF6F0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100451BF0;
  *(_QWORD *)(v1 + 32) = sub_1002E4708();
  v2 = sub_1002E4A3C();
  *(_QWORD *)(v1 + 40) = v2;
  specialized Array._endMutation()(v2);
  v3 = objc_allocWithZone((Class)UIStackView);
  sub_1000163BC(0, (unint64_t *)&qword_1005D8340, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setAlignment:", 3);
  objc_msgSend(v5, "setSpacing:", 1.17549435e-38);
  return v5;
}

id sub_1002E4CA8()
{
  id result;
  double v1;

  result = objc_msgSend((id)objc_opt_self(UIDevice), "ic_isVision");
  v1 = 56.0;
  if ((_DWORD)result)
    v1 = 72.0;
  qword_100601BF0 = *(_QWORD *)&v1;
  return result;
}

void sub_1002E50D0()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;

  v1 = v0;
  v2 = (char *)sub_1002E4708();
  v3 = OBJC_IVAR___ICMoveHeaderView_objectIds;
  v4 = *(_QWORD *)&v1[OBJC_IVAR___ICMoveHeaderView_objectIds];
  v5 = *(_QWORD *)&v2[OBJC_IVAR___ICMovePreviewView_objectIds];
  *(_QWORD *)&v2[OBJC_IVAR___ICMovePreviewView_objectIds] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  sub_1001BD0B0();

  v6 = sub_1002E47C4(&OBJC_IVAR___ICMoveHeaderView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1002E481C);
  v7 = *(_QWORD *)&v1[v3];
  v8 = v1;
  swift_bridgeObjectRetain(v7);
  v10 = sub_1002E5DA0(v9, (uint64_t)v8);
  swift_bridgeObjectRelease(v7);

  v11 = sub_100012E18(&qword_1005D39A8);
  v12 = sub_1002E5F60();
  Sequence<>.formatted()(v11, v12);
  v14 = v13;
  swift_bridgeObjectRelease(v10);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setText:", v15, swift_bridgeObjectRelease(v14).n128_f64[0], v10);

  v16 = sub_1002E47C4(&OBJC_IVAR___ICMoveHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1002E491C);
  sub_1002E5244();
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setText:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

}

uint64_t sub_1002E5244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v18[80];

  v1 = sub_100012E18(&qword_1005D8328);
  inited = swift_initStackObject(v1, v18);
  *(_OWORD *)(inited + 16) = xmmword_100454E90;
  strcpy((char *)(inited + 32), "%lld Folders");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  v3 = OBJC_IVAR___ICMoveHeaderView_objectIds;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___ICMoveHeaderView_objectIds);
  swift_bridgeObjectRetain(v4);
  v6 = sub_1002E5618(v5, (SEL *)&selRef_ic_isFolderType);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = 0x746F4E20646C6C25;
  *(_QWORD *)(inited + 64) = 0xEA00000000007365;
  v7 = *(_QWORD *)(v0 + v3);
  swift_bridgeObjectRetain(v7);
  v9 = sub_1002E5618(v8, (SEL *)&selRef_ic_isNoteType);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(inited + 72) = v9;
  v10 = sub_100136694(inited);
  v11 = sub_1002E57D8(v10);
  swift_bridgeObjectRelease(v10);
  sub_1002E3D3C((uint64_t)v11);
  v13 = v12;
  swift_release(v11);
  v14 = sub_100012E18(&qword_1005D39A8);
  v15 = sub_1002E5F60();
  v16 = Sequence<>.formatted()(v14, v15);
  swift_bridgeObjectRelease(v13);
  return v16;
}

void sub_1002E53A4(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  __objc2_prot *v31;
  __objc2_prot *v32;

  v5 = *a1;
  if (objc_msgSend(*a1, "ic_isModernFolderType"))
  {
    v6 = *(void **)(a2 + OBJC_IVAR___ICMoveHeaderView_modernContext);
    if (!v6)
      goto LABEL_26;
    v7 = objc_msgSend(v6, "objectWithID:", v5);
    if (!v7)
      goto LABEL_26;
    v8 = v7;
    v9 = objc_opt_self(ICFolder);
    v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
    if (v10)
    {
      v11 = objc_msgSend(v10, "localizedTitle");
LABEL_17:
      v24 = v11;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      *a3 = v25;
      a3[1] = v27;
      return;
    }
    goto LABEL_25;
  }
  if (objc_msgSend(v5, "ic_isModernNoteType"))
  {
    v12 = *(void **)(a2 + OBJC_IVAR___ICMoveHeaderView_modernContext);
    if (!v12)
      goto LABEL_26;
    v13 = objc_msgSend(v12, "objectWithID:", v5);
    if (!v13)
      goto LABEL_26;
    v8 = v13;
    v14 = objc_opt_self(ICNote);
    v15 = (void *)swift_dynamicCastObjCClass(v8, v14);
    if (!v15)
      goto LABEL_25;
    v16 = objc_msgSend(v15, "title");
    if (v16)
      goto LABEL_11;
    goto LABEL_23;
  }
  if (objc_msgSend(v5, "ic_isLegacyFolderType"))
  {
    v21 = *(void **)(a2 + OBJC_IVAR___ICMoveHeaderView_htmlContext);
    if (!v21)
      goto LABEL_26;
    v22 = objc_msgSend(v21, "objectWithID:", v5);
    if (!v22)
      goto LABEL_26;
    v8 = v22;
    v31 = &OBJC_PROTOCOL___ICLegacyFolder;
    v23 = (void *)swift_dynamicCastObjCProtocolConditional(v22, 1, &v31);
    if (v23)
    {
      v11 = objc_msgSend(v23, "localizedTitle");
      goto LABEL_17;
    }
    goto LABEL_25;
  }
  if (!objc_msgSend(v5, "ic_isLegacyNoteType"))
    goto LABEL_26;
  v28 = *(void **)(a2 + OBJC_IVAR___ICMoveHeaderView_htmlContext);
  if (!v28)
    goto LABEL_26;
  v29 = objc_msgSend(v28, "objectWithID:", v5);
  if (!v29)
    goto LABEL_26;
  v8 = v29;
  v32 = &OBJC_PROTOCOL___ICLegacyNote;
  v30 = (void *)swift_dynamicCastObjCProtocolConditional(v29, 1, &v32);
  if (v30)
  {
    v16 = objc_msgSend(v30, "title");
    if (v16)
    {
LABEL_11:
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v20 = v19;

LABEL_24:
      *a3 = v18;
      a3[1] = v20;
      return;
    }
LABEL_23:

    v18 = 0;
    v20 = 0;
    goto LABEL_24;
  }
LABEL_25:

LABEL_26:
  *a3 = 0;
  a3[1] = 0;
}

uint64_t sub_1002E5618(uint64_t a1, SEL *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = 0; v4; i = 0)
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
         : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, *a2);

      if (v10)
      {
        if (__OFADD__(i++, 1))
        {
          __break(1u);
          break;
        }
      }
      ++v6;
      if (v9 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
  }
LABEL_18:
  swift_bridgeObjectRelease(a1);
  return i;
}

uint64_t type metadata accessor for MoveHeaderView()
{
  return objc_opt_self(ICMoveHeaderView);
}

unint64_t *sub_1002E57D8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  uint64_t v11;

  v2 = (unint64_t *)isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1002E5928((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, (uint64_t)v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = sub_1002E5928((unint64_t *)v9, v6, (uint64_t)v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

unint64_t *sub_1002E5928(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1002E5A74(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1002E5A74(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1002E5A74(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(uint64_t *)(*(_QWORD *)(a3 + 56) + 8 * v12) >= 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1002E5A74(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1002E5A74(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1002E5A74(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Int sub_1002E5A74(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  _QWORD v33[9];

  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_100012E18(&qword_1005D8330);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    Hasher.init(_seed:)(v33, *(_QWORD *)(v8 + 40));
    swift_bridgeObjectRetain(v18);
    String.hash(into:)(v33, v19, v18);
    result = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1002E5D18(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1002E5DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    v6 = _swiftEmptyArrayStorage;
    v7 = 4;
    v18 = v5;
    while (1)
    {
      v9 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      v10 = v9;
      v11 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v22 = v9;
      sub_1002E53A4(&v22, a2, &v20);
      if (v3)
      {
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(a1);

        return v6;
      }

      v12 = v21;
      if (v21)
      {
        v13 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_10016ACE0(0, v6[2] + 1, 1, v6);
        v15 = v6[2];
        v14 = v6[3];
        if (v15 >= v14 >> 1)
          v6 = sub_10016ACE0((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
        v6[2] = v15 + 1;
        v8 = &v6[2 * v15];
        v8[4] = v13;
        v8[5] = v12;
        v5 = v18;
      }
      ++v7;
      if (v11 == v5)
      {
        swift_bridgeObjectRelease(a1);
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1002E5F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8320;
  if (!qword_1005D8320)
  {
    v1 = sub_10001537C(&qword_1005D39A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D8320);
  }
  return result;
}

void sub_1002E5FAC(void *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  id v11;

  v5 = *a2;
  v6 = *(void **)(v3 + *a2);
  *(_QWORD *)(v3 + *a2) = a1;
  v7 = a1;

  v8 = (char *)sub_1002E4708();
  v9 = *(void **)(v3 + v5);
  v11 = *(id *)&v8[*a3];
  *(_QWORD *)&v8[*a3] = v9;
  v10 = v9;

}

uint64_t sub_1002E6014()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static NotesView.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static NotesView.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x6956207365746F4ELL, 0xEA00000000007765);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Title for entity representing top-level Notes views", 51, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t NotesView.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC40 != -1)
    swift_once(&qword_1005CEC40, sub_1002E6014);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static NotesView.typeDisplayRepresentation);
}

uint64_t static NotesView.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC40 != -1)
    swift_once(&qword_1005CEC40, sub_1002E6014);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static NotesView.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

MobileNotes::NotesView_optional __swiftcall NotesView.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MobileNotes::NotesView_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100556E88, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MobileNotes_NotesView_folderList;
  else
    v4.value = MobileNotes_NotesView_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t NotesView.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x694C7265646C6F66;
  else
    return 0xD000000000000011;
}

uint64_t sub_1002E6370(char *a1, char *a2)
{
  return sub_100216CD4(*a1, *a2);
}

uint64_t sub_1002E637C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100556E88, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1002E63D8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000011;
  if (*v1)
    v2 = 0x694C7265646C6F66;
  v3 = 0x80000001004769B0;
  if (*v1)
    v3 = 0xEA00000000007473;
  *a1 = v2;
  a1[1] = v3;
}

Swift::Int sub_1002E6420()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x694C7265646C6F66;
  else
    v2 = 0xD000000000000011;
  if (v1)
    v3 = 0xEA00000000007473;
  else
    v3 = 0x80000001004769B0;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002E64A8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x694C7265646C6F66;
  else
    v2 = 0xD000000000000011;
  if (*v1)
    v3 = 0xEA00000000007473;
  else
    v3 = 0x80000001004769B0;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1002E650C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x694C7265646C6F66;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0xEA00000000007473;
  else
    v4 = 0x80000001004769B0;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1002E6590(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100128314();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002E65C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t result;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  unsigned int v37;
  void (*v38)(char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v0 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v0);
  v43 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D83A8);
  v17 = sub_100012E18(&qword_1005D01C8);
  v18 = *(_QWORD *)(v17 - 8);
  v39 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v39, v19 | 7);
  v41 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100454E90;
  v22 = v21 + v20;
  v36 = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100487450);
  static Locale.current.getter(v23);
  v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v38 = *(void (**)(char *))(v4 + 104);
  v34 = v6;
  v38(v6);
  v24 = v15;
  v25 = v9;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "Title of the top-level Attachment Browser view for App Intents", 62, 2);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v26 = v42;
  v27 = v40;
  v35(v42, 1, 1, v40);
  v28 = type metadata accessor for DisplayRepresentation.Image(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v30 = v43;
  v29(v43, 1, 1, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v24, v26, v30);
  *(_BYTE *)(v22 + v39) = 1;
  v31 = String.LocalizationValue.init(stringLiteral:)(0x4C207265646C6F46, 0xEB00000000747369);
  static Locale.current.getter(v31);
  v32 = v34;
  ((void (*)(char *, _QWORD, uint64_t))v38)(v34, v37, v44);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v25, v32, "Title of the top-level Folder List view", 39, 2);
  v35(v26, 1, 1, v27);
  v29(v30, 1, 1, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v24, v26, v30);
  result = sub_1001367A4(v41);
  static NotesView.caseDisplayRepresentations = result;
  return result;
}

uint64_t *NotesView.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1005CEC48 != -1)
    swift_once(&qword_1005CEC48, sub_1002E65C8);
  return &static NotesView.caseDisplayRepresentations;
}

double static NotesView.caseDisplayRepresentations.getter()
{
  double result;

  if (qword_1005CEC48 != -1)
    swift_once(&qword_1005CEC48, sub_1002E65C8);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static NotesView.caseDisplayRepresentations).n128_u64[0];
  return result;
}

_UNKNOWN **static NotesView.allCases.getter()
{
  return &off_100556ED8;
}

unint64_t sub_1002E6A1C()
{
  unint64_t result;

  result = qword_1005D8350;
  if (!qword_1005D8350)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8350);
  }
  return result;
}

unint64_t sub_1002E6A64()
{
  unint64_t result;

  result = qword_1005D8358;
  if (!qword_1005D8358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8358);
  }
  return result;
}

unint64_t sub_1002E6AAC()
{
  unint64_t result;

  result = qword_1005D8360;
  if (!qword_1005D8360)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8360);
  }
  return result;
}

unint64_t sub_1002E6AF4()
{
  unint64_t result;

  result = qword_1005D8368;
  if (!qword_1005D8368)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8368);
  }
  return result;
}

unint64_t sub_1002E6B3C()
{
  unint64_t result;

  result = qword_1005D8370;
  if (!qword_1005D8370)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8370);
  }
  return result;
}

unint64_t sub_1002E6B88()
{
  unint64_t result;

  result = qword_1005D8378;
  if (!qword_1005D8378)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8378);
  }
  return result;
}

uint64_t sub_1002E6BCC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100128314();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1002E6C10()
{
  unint64_t result;

  result = qword_1005D8380;
  if (!qword_1005D8380)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8380);
  }
  return result;
}

unint64_t sub_1002E6C58()
{
  unint64_t result;

  result = qword_1005D8388;
  if (!qword_1005D8388)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8388);
  }
  return result;
}

unint64_t sub_1002E6CA0()
{
  unint64_t result;

  result = qword_1005D8390;
  if (!qword_1005D8390)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D8390);
  }
  return result;
}

uint64_t sub_1002E6CE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002E6B88();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002E6D20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8398;
  if (!qword_1005D8398)
  {
    v1 = sub_10001537C(&qword_1005D83A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D8398);
  }
  return result;
}

void sub_1002E6D6C(_QWORD *a1@<X8>)
{
  *a1 = &off_100555870;
}

uint64_t storeEnumTagSinglePayload for NotesView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002E6DC8 + 4 * byte_1004619ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002E6DFC + 4 * asc_1004619E8[v4]))();
}

uint64_t sub_1002E6DFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E6E04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002E6E0CLL);
  return result;
}

uint64_t sub_1002E6E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002E6E20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002E6E24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E6E2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotesView()
{
  return &type metadata for NotesView;
}

_QWORD *sub_1002E6E48(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v17;

  v4 = swift_allocObject(&unk_100566D38, 24, 7);
  v5 = v4;
  *(_QWORD *)(v4 + 16) = a2;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v17 = v4;
    v7 = a2;
    swift_bridgeObjectRetain(a1);
    v8 = (_QWORD *)(a1 + 40);
    do
    {
      v10 = *v8;
      swift_bridgeObjectRetain(*v8);
      v11 = String._bridgeToObjectiveC()();
      v12 = objc_msgSend(v7, "participantForUserID:", v11);
      swift_bridgeObjectRelease(v10);

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v9);
      }
      v8 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a1);
    v5 = v17;
  }
  else
  {
    v15 = a2;
  }

  swift_release(v5);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002E7038()
{
  return sub_1002E7258((uint64_t)&unk_100461E40, (uint64_t)&unk_100461E68);
}

void sub_1002E70DC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_100461E88, a2);
  v6 = swift_getKeyPath(&unk_100461EB0, v5);
  static Published.subscript.getter(&v23);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v23;
  swift_release(v23);
  if (!v7)
  {
    v9 = swift_getKeyPath(&unk_100461E40, v8);
    v11 = swift_getKeyPath(&unk_100461E68, v10);
    static Published.subscript.getter(&v23);
    swift_release(v9);
    swift_release(v11);
    v12 = v23;
    if (v23)
    {
      v13 = objc_opt_self(ICNote);
      v14 = swift_dynamicCastObjCClass(v12, v13);
      if (v14)
      {
        v15 = (void *)v14;
        v16 = type metadata accessor for CollaborationParticipantDataSource(0);
        swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
        v17 = v12;
        v18 = sub_1003CA678(v15);
        v20 = swift_getKeyPath(&unk_100461E88, v19);
        v22 = swift_getKeyPath(&unk_100461EB0, v21);
        v23 = v18;
        static Published.subscript.setter(&v23, v3, v20, v22);
        sub_1002E8BF4();
      }

    }
  }
}

uint64_t sub_1002E7244()
{
  return sub_1002E7258((uint64_t)&unk_100461E88, (uint64_t)&unk_100461EB0);
}

uint64_t sub_1002E7258(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1, a2);
  v5 = swift_getKeyPath(a2, v4);
  static Published.subscript.getter(&v7);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

void sub_1002E72C0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v6 = swift_getKeyPath(&unk_100461E68, v5);
  v10 = v2;
  v7 = v2;
  v8 = static Published.subscript.setter(&v10, v3, KeyPath, v6);
  sub_1002E70DC(v8, v9);
}

uint64_t sub_1002E7350()
{
  return sub_1001507F4((uint64_t)&unk_100462040, (uint64_t)&unk_100462068);
}

uint64_t sub_1002E738C()
{
  return sub_1001507F4((uint64_t)&unk_100461FF8, (uint64_t)&unk_100462020);
}

uint64_t sub_1002E73C8()
{
  return sub_1001507F4((uint64_t)&unk_100461F60, (uint64_t)&unk_100461F88);
}

uint64_t sub_1002E7404()
{
  return sub_1001507F4((uint64_t)&unk_100461F18, (uint64_t)&unk_100461F40);
}

uint64_t sub_1002E7440(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  KeyPath = swift_getKeyPath(a3, a2);
  v8 = swift_getKeyPath(a4, v7);
  v9 = a1;
  static Published.subscript.getter(&v11);

  swift_release(KeyPath);
  swift_release(v8);
  return v11;
}

uint64_t sub_1002E74B8()
{
  return sub_1001507F4((uint64_t)&unk_100461FA8, (uint64_t)&unk_100461FD0);
}

uint64_t sub_1002E74E0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  char v12;

  KeyPath = swift_getKeyPath(a4, a2);
  v10 = swift_getKeyPath(a5, v9);
  v12 = a3;
  return static Published.subscript.setter(&v12, a1, KeyPath, v10);
}

uint64_t sub_1002E7548(char *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5, a2);
  v11 = swift_getKeyPath(a6, v10);
  v13 = v7;
  return static Published.subscript.setter(&v13, v8, KeyPath, v11);
}

uint64_t sub_1002E7660(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100461ED0, a2);
  v4 = swift_getKeyPath(&unk_100461EF8, v3);
  static Published.subscript.getter(&v6);
  swift_release(KeyPath);
  swift_release(v4);
  return v6;
}

uint64_t sub_1002E7764@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_100461ED0, a1);
  v5 = swift_getKeyPath(&unk_100461EF8, v4);
  static Published.subscript.getter(&v7);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1002E77E0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100461ED0, a2);
  v6 = swift_getKeyPath(&unk_100461EF8, v5);
  v8 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v8, v3, KeyPath, v6);
}

uint64_t sub_1002E7854@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  KeyPath = swift_getKeyPath(a2, a1);
  v8 = swift_getKeyPath(a3, v7);
  static Published.subscript.getter(&v10);
  swift_release(KeyPath);
  result = swift_release(v8);
  *a4 = v10;
  return result;
}

uint64_t sub_1002E78CC(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100461E88, a2);
  v6 = swift_getKeyPath(&unk_100461EB0, v5);
  v8 = v2;
  swift_retain(v2);
  return static Published.subscript.setter(&v8, v3, KeyPath, v6);
}

id sub_1002E7940(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  objc_class *ObjectType;
  objc_super v74;
  id v75;
  _QWORD v76[4];

  v3 = v2;
  v64 = a2;
  v72 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v4 = sub_100012E18(&qword_1005D8548);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  __chkstk_darwin(v4);
  v69 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100012E18(&qword_1005D84A0);
  v6 = __chkstk_darwin(v68);
  v67 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v66 = (char *)&v59 - v8;
  v9 = sub_100012E18(&qword_1005D8550);
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100012E18(&qword_1005D84C8);
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D0DE0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100012E18(&qword_1005D8558);
  v20 = *(_QWORD *)(v19 - 8);
  v61 = v19;
  __chkstk_darwin(v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = &v3[OBJC_IVAR___ICCollaborationButtonsController__cloudObject];
  v76[0] = 0;
  v24 = v3;
  v65 = sub_100012E18(&qword_1005D8468);
  Published.init(initialValue:)(v76, v65);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v22, v19);
  v25 = &v24[OBJC_IVAR___ICCollaborationButtonsController__accountSupportsDeviceToDeviceEncryption];
  LOBYTE(v76[0]) = 0;
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v26(v25, v18, v15);
  v27 = &v24[OBJC_IVAR___ICCollaborationButtonsController__accountHasKeychainEnabled];
  LOBYTE(v76[0]) = 0;
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v26(v27, v18, v15);
  v28 = &v24[OBJC_IVAR___ICCollaborationButtonsController__showsActivityStream];
  LOBYTE(v76[0]) = 0;
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v26(v28, v18, v15);
  v29 = &v24[OBJC_IVAR___ICCollaborationButtonsController__showsAttributionSidebar];
  LOBYTE(v76[0]) = 0;
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v26(v29, v18, v15);
  v30 = &v24[OBJC_IVAR___ICCollaborationButtonsController__showsCollaboratorCursors];
  LOBYTE(v76[0]) = 0;
  v31 = v64;
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v26(v30, v18, v15);
  v32 = &v24[OBJC_IVAR___ICCollaborationButtonsController__activeParticipants];
  v76[0] = _swiftEmptyArrayStorage;
  v33 = sub_100012E18(&qword_1005D3D70);
  Published.init(initialValue:)(v76, v33);
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v32, v14, v60);
  v34 = &v24[OBJC_IVAR___ICCollaborationButtonsController__participantDataSource];
  v76[0] = 0;
  v35 = sub_100012E18(&qword_1005D8490);
  Published.init(initialValue:)(v76, v35);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v34, v11, v63);
  *(_QWORD *)&v24[OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater] = 0;
  *(_QWORD *)&v24[OBJC_IVAR___ICCollaborationButtonsController_activityDigestSummaryObservation] = 0;
  *(_QWORD *)&v24[OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation] = 0;
  *(_QWORD *)&v24[OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation] = 0;
  v36 = &v24[OBJC_IVAR___ICCollaborationButtonsController__activityDigestSummary];
  v37 = type metadata accessor for ICActivityStreamDigest.Summary(0);
  v38 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v66, 1, 1, v37);
  v39 = v67;
  sub_1002EC114(v38, v67);
  v40 = v69;
  Published.init(initialValue:)(v39, v68);
  sub_100012DDC(v38, &qword_1005D84A0);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v36, v40, v71);
  *(_QWORD *)&v24[OBJC_IVAR___ICCollaborationButtonsController____lazy_storage___buttonItem] = 0;
  v41 = &v24[OBJC_IVAR___ICCollaborationButtonsController_didPressManageShareButton];
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  swift_beginAccess(v23, v76, 33, 0);
  v42 = *(void (**)(char *, uint64_t))(v20 + 8);
  v43 = v72;
  v44 = v72;
  v42(v23, v61);
  v75 = v43;
  Published.init(initialValue:)(&v75, v65);
  swift_endAccess(v76);
  swift_unknownObjectUnownedInit(&v24[OBJC_IVAR___ICCollaborationButtonsController_coordinator], v31);

  v74.receiver = v24;
  v74.super_class = ObjectType;
  v45 = objc_msgSendSuper2(&v74, "init");
  if (v43)
  {
    v46 = objc_opt_self(ICNote);
    v47 = swift_dynamicCastObjCClass(v44, v46);
    if (v47)
    {
      v48 = (void *)v47;
      v49 = type metadata accessor for CollaborationParticipantDataSource(0);
      swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
      v50 = v44;
      v51 = v45;
      v52 = sub_1003CA678(v48);
      KeyPath = swift_getKeyPath(&unk_100461E88, v53);
      v56 = swift_getKeyPath(&unk_100461EB0, v55);
      v76[0] = v52;
      v57 = v51;
      static Published.subscript.setter(v76, v57, KeyPath, v56);
      sub_1002E8BF4();

    }
  }

  return v45;
}

id sub_1002E7F40()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  sub_1002E7F98();
  v2 = *(_QWORD *)&v0[OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation];
  *(_QWORD *)&v0[OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation] = 0;
  swift_release(v2);
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1002E7F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = OBJC_IVAR___ICCollaborationButtonsController_activityDigestSummaryObservation;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___ICCollaborationButtonsController_activityDigestSummaryObservation);
  if (v3)
  {
    swift_retain(v3);
    AnyCancellable.cancel()();
    swift_release(v3);
  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater);
  *(_QWORD *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater) = 0;
  swift_release(v4);
  v5 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v5);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation);
  *(_QWORD *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation) = 0;
  return swift_release(v6);
}

uint64_t sub_1002E823C()
{
  return type metadata accessor for CollaborationButtonsController(0);
}

uint64_t type metadata accessor for CollaborationButtonsController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8450;
  if (!qword_1005D8450)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CollaborationButtonsController);
  return result;
}

uint64_t sub_1002E8280@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100462088, a1);
  v5 = swift_getKeyPath(&unk_1004620B0, v4);
  static Published.subscript.getter(a2);
  swift_release(KeyPath);
  return swift_release(v5);
}

void sub_1002E82E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[4];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  __chkstk_darwin(v2);
  v3 = sub_100012E18(&qword_1005D0FA0);
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  __chkstk_darwin(v3);
  v62 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D84E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D84F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = OBJC_IVAR___ICCollaborationButtonsController_activityDigestSummaryObservation;
  v14 = *(_QWORD *)&v0[OBJC_IVAR___ICCollaborationButtonsController_activityDigestSummaryObservation];
  if (v14)
  {
    swift_retain(v14);
    AnyCancellable.cancel()();
    swift_release(v14);
  }
  KeyPath = swift_getKeyPath(&unk_100461E40, v11);
  v17 = swift_getKeyPath(&unk_100461E68, v16);
  static Published.subscript.getter(v69);
  swift_release(KeyPath);
  swift_release(v17);
  v18 = (void *)v69[0];
  if (!v69[0])
  {
    v20 = *(_QWORD *)&v1[OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater];
    *(_QWORD *)&v1[OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater] = 0;
    swift_release(v20);
    v21 = *(_QWORD *)&v1[v68];
    *(_QWORD *)&v1[v68] = 0;
    swift_release(v21);
    v22 = *(_QWORD *)&v1[OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation];
    *(_QWORD *)&v1[OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation] = 0;
LABEL_6:
    swift_release(v22);
    return;
  }
  v19 = objc_allocWithZone((Class)type metadata accessor for ActivityEventResolver(0));
  v65 = v18;
  v67 = ActivityEventResolver.init(object:)(v18);
  v23 = sub_100012E18(&qword_1005D67B0);
  Empty.init(completeImmediately:)(1, v23, &type metadata for Never, &protocol witness table for Never);
  v24 = sub_100016638(&qword_1005D84F8, &qword_1005D84F0, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
  v25 = Publisher.eraseToAnyPublisher()(v9, v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v26 = sub_100012E18(&qword_1005D8500);
  Empty.init(completeImmediately:)(1, v26, &type metadata for Never, &protocol witness table for Never);
  v27 = sub_100016638(&qword_1005D8508, &qword_1005D84E8, (uint64_t)&protocol conformance descriptor for Empty<A, B>);
  v28 = Publisher.eraseToAnyPublisher()(v5, v27);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v29 = type metadata accessor for ActivityStream.Updater(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = ActivityStream.Updater.init(resolver:selection:pressedItem:)(v67, v25, v28);
  v31 = OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater;
  v32 = *(_QWORD *)&v1[OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater];
  *(_QWORD *)&v1[OBJC_IVAR___ICCollaborationButtonsController_activityStreamUpdater] = v30;
  swift_release(v32);
  v33 = *(_QWORD *)&v1[v31];
  if (v33)
  {
    v34 = swift_retain(*(_QWORD *)&v1[v31]);
    v35 = ActivityStream.Updater.activityDigestSummary.getter(v34);
    swift_release(v33);
    v69[0] = v35;
    v36 = swift_allocObject(&unk_100566AE0, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v1);
    v37 = sub_100012E18(&qword_1005D8510);
    v38 = sub_100016638((unint64_t *)&unk_1005D8518, &qword_1005D8510, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v39 = Publisher<>.sink(receiveValue:)(sub_1002EC15C, v36, v37, v38);
    swift_release(v36);
    swift_release(v69[0]);
  }
  else
  {
    v39 = 0;
  }
  v40 = *(_QWORD *)&v1[v68];
  *(_QWORD *)&v1[v68] = v39;
  swift_release(v40);
  v42 = swift_getKeyPath(&unk_100461E40, v41);
  v44 = swift_getKeyPath(&unk_100461E68, v43);
  static Published.subscript.getter(v69);
  swift_release(v42);
  swift_release(v44);
  v45 = (void *)v69[0];
  if (v69[0])
  {
    v46 = objc_opt_self(ICNote);
    v47 = (void *)swift_dynamicCastObjCClass(v45, v46);
    if (v47)
    {
      v48 = v47;
      if ((_s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0(v47) & 1) != 0)
      {
        v49 = objc_msgSend(v48, "showsCollaboratorCursors");
        v51 = swift_getKeyPath(&unk_100461FA8, v50);
        v53 = swift_getKeyPath(&unk_100461FD0, v52);
        LOBYTE(v69[0]) = v49;
        v54 = v1;
        static Published.subscript.setter(v69, v54, v51, v53);
        swift_beginAccess(&v54[OBJC_IVAR___ICCollaborationButtonsController__showsCollaboratorCursors], v69, 33, 0);
        v55 = sub_100012E18(&qword_1005D0DE0);
        v56 = v62;
        Published.projectedValue.getter(v55);
        swift_endAccess(v69);
        v57 = swift_allocObject(&unk_100566AE0, 24, 7);
        swift_unknownObjectWeakInit(v57 + 16, v54);
        v58 = sub_100016638(&qword_1005D8528, &qword_1005D0FA0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v59 = v64;
        v60 = Publisher<>.sink(receiveValue:)(sub_1002EC164, v57, v64, v58);

        swift_release(v57);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v56, v59);
        v22 = *(_QWORD *)&v54[OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation];
        *(_QWORD *)&v54[OBJC_IVAR___ICCollaborationButtonsController_showsCollaboratorCursorsObservation] = v60;
        goto LABEL_6;
      }
    }

  }
}

void sub_1002E89BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE v18[24];

  v4 = sub_100012E18(&qword_1005D84A0);
  v5 = __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v18[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_1002EC114(a1, (uint64_t)v9);
    KeyPath = swift_getKeyPath(&unk_100462088, v12);
    v15 = swift_getKeyPath(&unk_1004620B0, v14);
    sub_1002EC114((uint64_t)v9, (uint64_t)v7);
    v16 = v11;
    static Published.subscript.setter(v7, v16, KeyPath, v15);
    sub_100012DDC((uint64_t)v9, &qword_1005D84A0);

  }
}

void sub_1002E8AD8(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1002E8B30(v2, v5);

  }
}

void sub_1002E8B30(char a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v5 = swift_getKeyPath(&unk_100461E68, v4);
  static Published.subscript.getter(&v10);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v10;
  if (v10)
  {
    v7 = objc_opt_self(ICNote);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      v9 = v8;
      if (objc_msgSend(v8, "showsCollaboratorCursors") != (a1 & 1))
        objc_msgSend(v9, "setShowsCollaboratorCursors:");
    }

  }
}

uint64_t sub_1002E8BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];

  v1 = v0;
  v2 = sub_100012E18(&qword_1005D84C0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100461E88, v6);
  v9 = swift_getKeyPath(&unk_100461EB0, v8);
  static Published.subscript.getter(v18);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = v18[0];
  if (v18[0])
  {
    swift_beginAccess(v18[0] + OBJC_IVAR____TtC11MobileNotes34CollaborationParticipantDataSource__cleanedUpParticipants, v18, 33, 0);
    v11 = sub_100012E18(&qword_1005D84C8);
    Published.projectedValue.getter(v11);
    swift_endAccess(v18);
    swift_release(v10);
    v12 = swift_allocObject(&unk_100566AE0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v1);
    v13 = sub_100016638((unint64_t *)&unk_1005D84D0, &qword_1005D84C0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v14 = Publisher<>.sink(receiveValue:)(sub_1002EBA54, v12, v2, v13);
    swift_release(v12);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v14 = 0;
  }
  v15 = *(_QWORD *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation);
  *(_QWORD *)(v1 + OBJC_IVAR___ICCollaborationButtonsController_collaboratorDataSourceObservation) = v14;
  return swift_release(v15);
}

uint64_t sub_1002E8D88(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v2 = *a1;
  v5[2] = a2;
  v5[3] = v2;
  v3 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v3, sub_1002EBA5C, v5, (char *)&type metadata for () + 8);
  return swift_release(v3);
}

uint64_t sub_1002E8DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v6 = result;
    KeyPath = swift_getKeyPath(&unk_100461ED0, v5);
    v9 = swift_getKeyPath(&unk_100461EF8, v8);
    v10 = a2;
    swift_bridgeObjectRetain(a2);
    return static Published.subscript.setter(&v10, v6, KeyPath, v9);
  }
  return result;
}

id sub_1002E8E84(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v9;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v4 = swift_getKeyPath(&unk_100461E68, v3);
  static Published.subscript.getter(&v9);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v9;
  if (!v9)
    return 0;
  if (!objc_msgSend(v9, "canBeSharedViaICloud"))
  {

    return 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v7 = objc_msgSend((id)objc_opt_self(ICCollaborationController), "sharedInstance");
  objc_msgSend(v7, "registerShareForObject:itemProvider:generateThumbnails:", v5, v6, 0);

  return v6;
}

id sub_1002E8FAC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___ICCollaborationButtonsController____lazy_storage___buttonItem;
  v2 = *(void **)&v0[OBJC_IVAR___ICCollaborationButtonsController____lazy_storage___buttonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR___ICCollaborationButtonsController____lazy_storage___buttonItem];
  }
  else
  {
    v4 = sub_1002E9040(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1002E9040(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v24;
  void *v25;
  char v26;
  void *v27;
  uint64_t v28;
  char v29;

  ObjectType = swift_getObjectType(a1);
  v4 = sub_1002E8E84(ObjectType, v3);
  if (!v4)
    return objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "init");
  v5 = v4;
  v6 = objc_msgSend(objc_allocWithZone((Class)_SWCollaborationBarButtonItem), "initWithItemProvider:", v4);
  v7 = sub_100019C6C(&qword_1005D84A8, type metadata accessor for CollaborationButtonsController, (uint64_t)&unk_100461DE8);
  v8 = ObservedObject.init(wrappedValue:)(a1, ObjectType, v7);
  v10 = v9;
  v29 = 0;
  State.init(wrappedValue:)(&v24, &v29, &type metadata for Bool);
  v11 = v24;
  v12 = v25;
  v24 = v8;
  v25 = v10;
  v26 = v11;
  v27 = v12;
  v28 = 4;
  v13 = sub_100012E18(&qword_1005D84B0);
  v14 = sub_100016638(&qword_1005D84B8, &qword_1005D84B0, (uint64_t)&unk_100458DE8);
  _SWCollaborationBarButtonItem.setDetailViewListContent<A>(_:)(&v24, v13, v14);

  swift_release(v12);
  objc_msgSend(v6, "setShowManageButton:", 0);
  v15 = (void *)objc_opt_self(NSBundle);
  v16 = v6;
  v17 = objc_msgSend(v15, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setTitle:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  return v16;
}

void sub_1002E93A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;

  sub_10013CCDC(319, &qword_1005D8460, &qword_1005D8468);
  if (v3 <= 0x3F)
  {
    v12 = *(_QWORD *)(v2 - 8) + 64;
    sub_1002E94E8();
    if (v5 <= 0x3F)
    {
      v13 = *(_QWORD *)(v4 - 8) + 64;
      v14 = v13;
      v15 = v13;
      v16 = v13;
      v17 = v13;
      sub_10013CCDC(319, (unint64_t *)&qword_1005D8478, &qword_1005D3D70);
      if (v7 <= 0x3F)
      {
        v18 = *(_QWORD *)(v6 - 8) + 64;
        sub_10013CCDC(319, &qword_1005D8488, &qword_1005D8490);
        if (v9 <= 0x3F)
        {
          v19 = *(_QWORD *)(v8 - 8) + 64;
          v20 = "\b";
          v21 = &unk_100461DB8;
          v22 = &unk_100461DB8;
          v23 = &unk_100461DB8;
          v24 = &unk_100461DB8;
          sub_10013CCDC(319, &qword_1005D8498, &qword_1005D84A0);
          if (v11 <= 0x3F)
          {
            v25 = *(_QWORD *)(v10 - 8) + 64;
            v26 = &unk_100461DB8;
            v27 = &unk_100461DD0;
            swift_updateClassMetadata2(a1, 256, 16, &v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_1002E94E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1005D8470)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1005D8470);
  }
}

void sub_1002E953C()
{
  char *v0;
  char *v1;
  void *Strong;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  BOOL v31;
  unsigned __int8 v32;

  v1 = &v0[OBJC_IVAR___ICCollaborationButtonsController_coordinator];
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR___ICCollaborationButtonsController_coordinator]);
  v3 = objc_msgSend(Strong, "showsActivityStream");

  KeyPath = swift_getKeyPath(&unk_100461F60, v4);
  v7 = swift_getKeyPath(&unk_100461F88, v6);
  v32 = v3;
  v8 = v0;
  static Published.subscript.setter(&v32, v8, KeyPath, v7);
  v9 = (void *)swift_unknownObjectUnownedLoadStrong(v1);
  v10 = objc_msgSend(v9, "noteEditorViewController");

  v11 = objc_msgSend(v10, "attributionSidebarVisibility");
  v13 = swift_getKeyPath(&unk_100461F18, v12);
  v15 = swift_getKeyPath(&unk_100461F40, v14);
  v31 = v11 != 0;
  v16 = v8;
  v17 = static Published.subscript.setter(&v31, v16, v13, v15);
  sub_1002E9744(v17, v18);
  v20 = swift_getKeyPath(&unk_100461E40, v19);
  v22 = swift_getKeyPath(&unk_100461E68, v21);
  static Published.subscript.getter(&v30);
  swift_release(v20);
  swift_release(v22);
  v24 = v30;
  if (v30)
  {
    v25 = objc_msgSend(v30, "cloudAccount");

    if (v25)
    {
      LOBYTE(v24) = objc_msgSend((id)objc_opt_self(ICKeychain), "isSyncAvailableForAccount:", v25);

    }
    else
    {
      LOBYTE(v24) = 0;
    }
  }
  v26 = swift_getKeyPath(&unk_100461FF8, v23);
  v28 = swift_getKeyPath(&unk_100462020, v27);
  v29 = (char)v24;
  static Published.subscript.setter(&v29, v16, v26, v28);
  sub_1002E82E4();
}

void sub_1002E9744(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20[5];
  uint64_t v21;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v5 = swift_getKeyPath(&unk_100461E68, v4);
  static Published.subscript.getter(v20);
  swift_release(KeyPath);
  swift_release(v5);
  v7 = v20[0];
  if (!v20[0])
    goto LABEL_6;
  v8 = objc_msgSend(v20[0], "cloudAccount");

  if (!v8)
    goto LABEL_6;
  v9 = objc_msgSend(v8, "identifier");

  if (!v9)
    goto LABEL_6;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;

  v12 = objc_msgSend((id)objc_opt_self(ICCloudContext), "sharedContext");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "containerForAccountID:", v13, swift_bridgeObjectRelease(v11).n128_f64[0]);

  if (v14)
  {
    v15 = swift_allocObject(&unk_100566AE0, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16, v2);
    v20[4] = sub_1002EC16C;
    v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = (id)1107296256;
    v20[2] = sub_1002EA0EC;
    v20[3] = &unk_100566D50;
    v16 = _Block_copy(v20);
    swift_release(v21);
    objc_msgSend(v14, "accountInfoWithCompletionHandler:", v16);
    _Block_release(v16);

  }
  else
  {
LABEL_6:
    v17 = swift_getKeyPath(&unk_100462040, v6);
    v19 = swift_getKeyPath(&unk_100462068, v18);
    LOBYTE(v20[0]) = 0;
    static Published.subscript.setter(v20, v2, v17, v19);
  }
}

_QWORD *sub_1002E99E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  void *v23;

  v0 = type metadata accessor for ICActivityStreamDigest.Summary.Participants(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D84A0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100461E40, v7);
  v10 = swift_getKeyPath(&unk_100461E68, v9);
  static Published.subscript.getter(&v23);
  swift_release(KeyPath);
  swift_release(v10);
  v12 = v23;
  if (v23)
  {
    v13 = swift_getKeyPath(&unk_100462088, v11);
    v15 = swift_getKeyPath(&unk_1004620B0, v14);
    static Published.subscript.getter(v6);
    swift_release(v13);
    swift_release(v15);
    v16 = type metadata accessor for ICActivityStreamDigest.Summary(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v6, 1, v16))
    {
      v18 = ICActivityStreamDigest.Summary.participants.getter();
      v19 = ICActivityStreamDigest.Summary.Participants.userIds.getter(v18);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      sub_100012DDC((uint64_t)v6, &qword_1005D84A0);
      v20 = v12;
      v17 = sub_1002E6E48(v19, v20);

      swift_bridgeObjectRelease(v19);
      return v17;
    }
    sub_100012DDC((uint64_t)v6, &qword_1005D84A0);

  }
  return _swiftEmptyArrayStorage;
}

void sub_1002E9BD0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v5 = swift_getKeyPath(&unk_100461E68, v4);
  static Published.subscript.getter(v19);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = (void *)v19[0];
  if (v19[0])
  {
    v7 = objc_opt_self(ICNote);
    v8 = swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      v9 = v8;
      v10 = swift_allocObject(&unk_100566CE8, 32, 7);
      *(_QWORD *)(v10 + 16) = v2;
      *(_QWORD *)(v10 + 24) = v9;
      v11 = v2;
      v12 = v6;
      v13 = sub_1002E8FAC();
      v14 = objc_opt_self(_SWCollaborationBarButtonItem);
      v15 = swift_dynamicCastObjCClass(v13, v14);
      if (v15)
      {
        v16 = (void *)v15;
        v19[4] = sub_1002EC104;
        v20 = v10;
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 1107296256;
        v19[2] = sub_100206734;
        v19[3] = &unk_100566D00;
        v17 = _Block_copy(v19);
        v18 = v20;
        swift_retain(v10);
        swift_release(v18);
        objc_msgSend(v16, "dismissPopoverAnimated:completion:", 1, v17);
        _Block_release(v17);
      }

      sub_1002E7F98();
      swift_release(v10);
    }
    else
    {

    }
  }
}

void sub_1002E9D5C(uint64_t a1, void *a2)
{
  void *Strong;
  id v4;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
  v4 = objc_msgSend(a2, "objectID");
  objc_msgSend(Strong, "showRecentUpdatesForNoteWithObjectID:", v4);

}

uint64_t sub_1002E9E00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000163BC(0, (unint64_t *)&qword_1005CEF30, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100566D88, 32, 7);
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_1002EC1A0;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100206734;
  aBlock[3] = &unk_100566DA0;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  v16 = a1;
  swift_retain(a3);
  v17 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100019C6C((unint64_t *)&qword_1005D6380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100012E18((uint64_t *)&unk_1005D8530);
  v20 = sub_100016638((unint64_t *)&qword_1005D6390, (uint64_t *)&unk_1005D8530, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v22);
}

void sub_1002EA020(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  id v12;
  BOOL v13;
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (a2)
    {
      v6 = a2;
      v7 = (uint64_t)objc_msgSend(v6, "deviceToDeviceEncryptionAvailability") > 0;
      KeyPath = swift_getKeyPath(&unk_100462040, v8);
      v11 = swift_getKeyPath(&unk_100462068, v10);
      v13 = v7;
      v12 = v5;
      static Published.subscript.setter(&v13, v12, KeyPath, v11);

    }
    else
    {

    }
  }
}

void sub_1002EA0EC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1002EA160(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *Strong;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30[5];
  uint64_t v31;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v5 = swift_getKeyPath(&unk_100461E68, v4);
  static Published.subscript.getter(v30);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v30[0];
  if (v30[0])
  {
    v7 = objc_msgSend(v30[0], "cloudAccount");

    if (v7)
    {
      v8 = objc_msgSend(v7, "altDSID");

      if (v8)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v10 = v9;

        v11 = objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionFlowContext);
        v12 = String._bridgeToObjectiveC()();
        v13 = objc_msgSend(v11, "initWithAltDSID:", v12, swift_bridgeObjectRelease(v10).n128_f64[0]);

        objc_msgSend(v13, "setDeviceToDeviceEncryptionUpgradeUIStyle:", 0);
        objc_msgSend(v13, "setDeviceToDeviceEncryptionUpgradeType:", 0);
        v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, 0, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v18 = v17;

        v19 = String._bridgeToObjectiveC()();
        objc_msgSend(v13, "setFeatureName:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

        Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
        v21 = objc_msgSend(Strong, "activeEditorController");

        objc_msgSend(v13, "setPresentingViewController:", v21);
        v22 = swift_allocObject(&unk_100566C98, 24, 7);
        *(_QWORD *)(v22 + 16) = v13;
        v23 = v13;
        v24 = sub_1002E8FAC();
        v25 = objc_opt_self(_SWCollaborationBarButtonItem);
        v26 = swift_dynamicCastObjCClass(v24, v25);
        if (v26)
        {
          v27 = (void *)v26;
          v30[4] = sub_1002EC0B4;
          v31 = v22;
          v30[0] = _NSConcreteStackBlock;
          v30[1] = (id)1107296256;
          v30[2] = sub_100206734;
          v30[3] = &unk_100566CB0;
          v28 = _Block_copy(v30);
          v29 = v31;
          swift_retain(v22);
          swift_release(v29);
          objc_msgSend(v27, "dismissPopoverAnimated:completion:", 1, v28);
          _Block_release(v28);
        }

        sub_1002E7F98();
        swift_release(v22);
      }
    }
  }
}

void sub_1002EA484(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper), "initWithContext:", a1);
  objc_msgSend(v1, "performDeviceToDeviceEncryptionStateRepairWithCompletion:", 0);

}

uint64_t sub_1002EA510()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = swift_allocObject(&unk_100566BF8, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = v0;
  v3 = sub_1002E8FAC();
  v4 = objc_opt_self(_SWCollaborationBarButtonItem);
  v5 = swift_dynamicCastObjCClass(v3, v4);
  if (v5)
  {
    v6 = (void *)v5;
    v10[4] = sub_1002EBFC8;
    v11 = v1;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100206734;
    v10[3] = &unk_100566C10;
    v7 = _Block_copy(v10);
    v8 = v11;
    swift_retain(v1);
    swift_release(v8);
    objc_msgSend(v6, "dismissPopoverAnimated:completion:", 1, v7);
    _Block_release(v7);
  }

  sub_1002E7F98();
  return swift_release(v1);
}

uint64_t sub_1002EA614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  NSString v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  id v47;
  void *Strong;
  id v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v2 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v50 - v10;
  URL.init(string:)(0xD00000000000004DLL, 0x8000000100487810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_100012DDC((uint64_t)v4, &qword_1005CEFD0);
  v51 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v51(v11, v4, v5);
  v13 = (void *)objc_opt_self(NSBundle);
  v14 = objc_msgSend(v13, "mainBundle");
  v53 = v11;
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  v52 = a1;
  v17 = v16;
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = objc_msgSend(v13, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v28 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v26, v27, 1);

  v29 = objc_msgSend(v13, "mainBundle");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v53, v5);
  v34 = *(unsigned __int8 *)(v6 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_100566C48, v35 + v7, v34 | 7);
  v51((char *)(v36 + v35), v9, v5);
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  aBlock[4] = sub_1002EC030;
  v55 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002489AC;
  aBlock[3] = &unk_100566C60;
  v38 = _Block_copy(aBlock);
  swift_release(v55);
  v39 = (void *)objc_opt_self(UIAlertAction);
  v40 = objc_msgSend(v39, "actionWithTitle:style:handler:", v37, 0, v38);
  _Block_release(v38);

  objc_msgSend(v28, "addAction:", v40);
  v41 = objc_msgSend(v13, "mainBundle");
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v45 = v44;

  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v39, "actionWithTitle:style:handler:", v46, 1, 0, swift_bridgeObjectRelease(v45).n128_f64[0]);

  objc_msgSend(v28, "addAction:", v47);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v52 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
  v49 = objc_msgSend(Strong, "activeEditorController");

  objc_msgSend(v49, "presentViewController:animated:completion:", v28, 1, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v53, v5);
}

void sub_1002EAB90()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v2 = v0;
    URL._bridgeToObjectiveC()(v1);
    v4 = v3;
    v5 = sub_1001356D4((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "openSensitiveURL:withOptions:", v4, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002EAC84(void *a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  void *v17;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v5 = swift_getKeyPath(&unk_100461E68, v4);
  static Published.subscript.getter(&v17);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v17;
  if (v17)
  {
    v7 = objc_opt_self(ICNote);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (!v8)
    {
LABEL_6:

      return;
    }
    v9 = objc_msgSend(a1, "userIdentity");
    v10 = objc_msgSend(v9, "userRecordID");

    if (v10)
    {
      v11 = objc_msgSend(v10, "recordName");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v13 = v12;

      v14 = objc_msgSend(v8, "collaborationColorManager");
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      v16 = objc_msgSend(v14, "highlightColorForUserID:note:", v15, v8);

      if (v16)
      {
        Color.init(_:)(v16);
        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {

    }
  }
}

uint64_t sub_1002EAE1C(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[5];
  uint64_t v14;

  v3 = swift_allocObject(&unk_100566BA8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = v1;
  v5 = a1;
  v6 = sub_1002E8FAC();
  v7 = objc_opt_self(_SWCollaborationBarButtonItem);
  v8 = swift_dynamicCastObjCClass(v6, v7);
  if (v8)
  {
    v9 = (void *)v8;
    v13[4] = sub_1002EBFC0;
    v14 = v3;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100206734;
    v13[3] = &unk_100566BC0;
    v10 = _Block_copy(v13);
    v11 = v14;
    swift_retain(v3);
    swift_release(v11);
    objc_msgSend(v9, "dismissPopoverAnimated:completion:", 1, v10);
    _Block_release(v10);
  }

  sub_1002E7F98();
  return swift_release(v3);
}

void sub_1002EAF28(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *Strong;
  id v10;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v6 = swift_getKeyPath(&unk_100461E68, v5);
  static Published.subscript.getter(&v10);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v10;
  if (v10)
  {
    v8 = objc_msgSend(v10, "objectID");

    if (v8)
    {
      if (objc_msgSend(v8, "ic_isModernNoteType"))
      {
        Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
        objc_msgSend(Strong, "showSelectionForParticipant:noteObjectID:", a2, v8);

        v8 = Strong;
      }

    }
  }
}

uint64_t sub_1002EB1C0(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[5];
  uint64_t v13;

  v3 = swift_allocObject(&unk_100566B58, 25, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_BYTE *)(v3 + 24) = a1;
  v4 = v1;
  v5 = sub_1002E8FAC();
  v6 = objc_opt_self(_SWCollaborationBarButtonItem);
  v7 = swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = (void *)v7;
    v12[4] = sub_1002EBB18;
    v13 = v3;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100206734;
    v12[3] = &unk_100566B70;
    v9 = _Block_copy(v12);
    v10 = v13;
    swift_retain(v3);
    swift_release(v10);
    objc_msgSend(v8, "dismissPopoverAnimated:completion:", 1, v9);
    _Block_release(v9);
  }

  sub_1002E7F98();
  return swift_release(v3);
}

void sub_1002EB2CC(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *Strong;
  void *v9;
  id v10;
  void *v11;

  v2 = a2;
  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v6 = swift_getKeyPath(&unk_100461E68, v5);
  static Published.subscript.getter(&v11);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v11;
  if (v11)
  {
    Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
    v9 = Strong;
    if ((v2 & 1) != 0)
    {
      v10 = objc_msgSend(v7, "objectID");
      objc_msgSend(v9, "showActivityStreamForObjectWithObjectID:", v10);

      v9 = v10;
    }
    else
    {
      objc_msgSend(Strong, "hideActivityStreamWithCompletion:", 0);
    }

  }
}

uint64_t sub_1002EB3F8(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[5];
  uint64_t v13;

  v3 = swift_allocObject(&unk_100566B08, 32, 7);
  *(_BYTE *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = v1;
  v5 = sub_1002E8FAC();
  v6 = objc_opt_self(_SWCollaborationBarButtonItem);
  v7 = swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = (void *)v7;
    v12[4] = sub_1002EBAA0;
    v13 = v3;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100206734;
    v12[3] = &unk_100566B20;
    v9 = _Block_copy(v12);
    v10 = v13;
    swift_retain(v3);
    swift_release(v10);
    objc_msgSend(v8, "dismissPopoverAnimated:completion:", 1, v9);
    _Block_release(v9);
  }

  sub_1002E7F98();
  return swift_release(v3);
}

void sub_1002EB504(char a1, uint64_t a2)
{
  void *Strong;
  id v4;
  id v5;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
  v4 = objc_msgSend(Strong, "noteEditorViewController");

  v5 = objc_msgSend(v4, "attributionSidebarController");
  if ((a1 & 1) != 0)
  {
    if (!v5)
      return;
    objc_msgSend(v5, "showSidebarAnimated:", 1);
  }
  else
  {
    if (!v5)
      return;
    objc_msgSend(v5, "hideSidebarAnimated:contextPath:", 1, 1);
  }

}

uint64_t sub_1002EB61C()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = swift_allocObject(&unk_100566A90, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = v0;
  v3 = sub_1002E8FAC();
  v4 = objc_opt_self(_SWCollaborationBarButtonItem);
  v5 = swift_dynamicCastObjCClass(v3, v4);
  if (v5)
  {
    v6 = (void *)v5;
    v10[4] = sub_1002EB9D8;
    v11 = v1;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100206734;
    v10[3] = &unk_100566AA8;
    v7 = _Block_copy(v10);
    v8 = v11;
    swift_retain(v1);
    swift_release(v8);
    objc_msgSend(v6, "dismissPopoverAnimated:completion:", 1, v7);
    _Block_release(v7);
  }

  sub_1002E7F98();
  return swift_release(v1);
}

uint64_t sub_1002EB720(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(result + OBJC_IVAR___ICCollaborationButtonsController_didPressManageShareButton);
  if (v1)
  {
    v2 = *(_QWORD *)(result + OBJC_IVAR___ICCollaborationButtonsController_didPressManageShareButton + 8);
    v3 = swift_retain(v2);
    v1(v3);
    return sub_100012C50((uint64_t)v1, v2);
  }
  return result;
}

uint64_t sub_1002EB7A4(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100461E40, a2);
  v4 = swift_getKeyPath(&unk_100461E68, v3);
  static Published.subscript.getter(&v6);
  swift_release(KeyPath);
  swift_release(v4);
  return v6;
}

uint64_t sub_1002EB820(uint64_t a1, uint64_t a2)
{
  return sub_1002EB904(a1, a2, (uint64_t)&unk_100462040, (uint64_t)&unk_100462068);
}

uint64_t sub_1002EB838(uint64_t a1, uint64_t a2)
{
  return sub_1002EB904(a1, a2, (uint64_t)&unk_100461FF8, (uint64_t)&unk_100462020);
}

uint64_t sub_1002EB85C(uint64_t a1, uint64_t a2)
{
  return sub_1002EB904(a1, a2, (uint64_t)&unk_100461FA8, (uint64_t)&unk_100461FD0);
}

uint64_t sub_1002EB870(char a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char v8;

  KeyPath = swift_getKeyPath(&unk_100461FA8, a2);
  v6 = swift_getKeyPath(&unk_100461FD0, v5);
  v8 = a1;
  return static Published.subscript.setter(&v8, v2, KeyPath, v6);
}

uint64_t sub_1002EB8D8(uint64_t a1, uint64_t a2)
{
  return sub_1002EB904(a1, a2, (uint64_t)&unk_100461F60, (uint64_t)&unk_100461F88);
}

uint64_t sub_1002EB8F0(uint64_t a1, uint64_t a2)
{
  return sub_1002EB904(a1, a2, (uint64_t)&unk_100461F18, (uint64_t)&unk_100461F40);
}

uint64_t sub_1002EB904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a3, a2);
  v7 = swift_getKeyPath(a4, v6);
  static Published.subscript.getter(&v9);
  swift_release(KeyPath);
  swift_release(v7);
  return v9;
}

uint64_t sub_1002EB978(uint64_t a1)
{
  uint64_t result;

  result = sub_100019C6C(&qword_1005D84A8, type metadata accessor for CollaborationButtonsController, (uint64_t)&unk_100461DE8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002EB9B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EB9D8()
{
  uint64_t v0;

  return sub_1002EB720(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002EB9E0@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1002E7854(a1, (uint64_t)&unk_100461E40, (uint64_t)&unk_100461E68, a2);
}

uint64_t sub_1002EBA08@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1002E7854(a1, (uint64_t)&unk_100461E88, (uint64_t)&unk_100461EB0, a2);
}

uint64_t sub_1002EBA30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EBA54(uint64_t *a1)
{
  uint64_t v1;

  return sub_1002E8D88(a1, v1);
}

uint64_t sub_1002EBA5C()
{
  uint64_t v0;

  return sub_1002E8DE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002EBA7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002EBAA0()
{
  uint64_t v0;

  sub_1002EB504(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002EBAAC@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_100153274(a1, (uint64_t)&unk_100461F18, (uint64_t)&unk_100461F40, a2);
}

uint64_t sub_1002EBAD0(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E7548(a1, a2, a3, a4, (uint64_t)&unk_100461F18, (uint64_t)&unk_100461F40);
}

uint64_t sub_1002EBAF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1002EBB18()
{
  uint64_t v0;

  sub_1002EB2CC(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1002EBB24@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_100153274(a1, (uint64_t)&unk_100461F60, (uint64_t)&unk_100461F88, a2);
}

uint64_t sub_1002EBB48(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E7548(a1, a2, a3, a4, (uint64_t)&unk_100461F60, (uint64_t)&unk_100461F88);
}

uint64_t sub_1002EBB6C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_100153274(a1, (uint64_t)&unk_100461FA8, (uint64_t)&unk_100461FD0, a2);
}

uint64_t sub_1002EBB90(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E7548(a1, a2, a3, a4, (uint64_t)&unk_100461FA8, (uint64_t)&unk_100461FD0);
}

uint64_t sub_1002EBBB4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100462088, a1);
  v5 = swift_getKeyPath(&unk_1004620B0, v4);
  static Published.subscript.getter(a2);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1002EBC1C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D84A0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v16 - v8;
  sub_1002EC114(a1, (uint64_t)&v16 - v8);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100462088, v11);
  v14 = swift_getKeyPath(&unk_1004620B0, v13);
  sub_1002EC114((uint64_t)v9, (uint64_t)v7);
  static Published.subscript.setter(v7, v10, KeyPath, v14);
  return sub_100012DDC((uint64_t)v9, &qword_1005D84A0);
}

void sub_1002EBD08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  Class isa;
  unsigned int v10;
  char **v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *Strong;
  id v17;
  id v18;
  id v19;
  id v20;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v5 = sub_100012E18(&qword_1005CF6F0);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100456F30;
  v7 = (void *)objc_opt_self(CNContactViewController);
  v8 = objc_msgSend(v7, "descriptorForRequiredKeys");
  *(_QWORD *)(v6 + 32) = v8;
  specialized Array._endMutation()(v8);
  sub_100012E18(&qword_1005D84E0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v4, "ic_existingOrNewContactFromParticipant:keysToFetch:", a1, isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v10 = objc_msgSend(v19, "hasBeenPersisted");
  v11 = &selRef_viewControllerForContact_;
  if (!v10)
    v11 = &selRef_viewControllerForUnknownContact_;
  v12 = objc_msgSend(v7, *v11, v19, v19);
  objc_msgSend(v12, "setContactStore:", v4);
  v13 = objc_msgSend(v12, "navigationItem");
  v14 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v2, "hideContactCard");
  objc_msgSend(v13, "setLeftBarButtonItem:", v14);

  v15 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v12);
  objc_msgSend(v15, "setModalPresentationStyle:", 3);
  objc_msgSend(v15, "setModalTransitionStyle:", 2);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR___ICCollaborationButtonsController_coordinator);
  v17 = objc_msgSend(Strong, "activeEditorController");

  v18 = objc_msgSend(v17, "presentedViewController");
  if (v18)
  {
    objc_msgSend(v18, "presentViewController:animated:completion:", v15, 1, 0);

    v12 = v15;
    v15 = v18;
  }

}

uint64_t sub_1002EBF94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002EBFC0()
{
  uint64_t v0;

  sub_1002EAF28(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1002EBFC8()
{
  uint64_t v0;

  return sub_1002EA614(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002EBFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002EC030()
{
  type metadata accessor for URL(0);
  sub_1002EAB90();
}

uint64_t sub_1002EC06C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_100153274(a1, (uint64_t)&unk_100461FF8, (uint64_t)&unk_100462020, a2);
}

uint64_t sub_1002EC090(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E7548(a1, a2, a3, a4, (uint64_t)&unk_100461FF8, (uint64_t)&unk_100462020);
}

void sub_1002EC0B4()
{
  uint64_t v0;

  sub_1002EA484(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002EC0BC@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_100153274(a1, (uint64_t)&unk_100462040, (uint64_t)&unk_100462068, a2);
}

uint64_t sub_1002EC0E0(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1002E7548(a1, a2, a3, a4, (uint64_t)&unk_100462040, (uint64_t)&unk_100462068);
}

void sub_1002EC104()
{
  uint64_t v0;

  sub_1002E9D5C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002EC114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D84A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002EC15C(uint64_t a1)
{
  uint64_t v1;

  sub_1002E89BC(a1, v1);
}

void sub_1002EC164(char *a1)
{
  uint64_t v1;

  sub_1002E8AD8(a1, v1);
}

uint64_t sub_1002EC16C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002E9E00(a1, a2, v2);
}

uint64_t sub_1002EC174()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002EC1A0()
{
  uint64_t v0;

  sub_1002EA020(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002EC1A8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void static CallRecordingImporter.importCallRecording(noteID:recordingID:managedObjectContext:directory:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  char *v47;
  id v48;
  NSString v49;
  id v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  os_log_type_t v66;
  void (**v67)(char *, void *);
  uint8_t *v68;
  uint64_t v69;
  char *v70;
  __n128 v71;
  uint64_t v72;
  void (*v73)(char *, void *);
  uint64_t v74;
  char *v75;
  void (*v76)(uint64_t, char *, void *, __n128);
  char *v77;
  uint64_t (*v78)(char *, uint64_t, void *);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  Swift::String v88;
  Swift::Bool v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, unint64_t, uint64_t, __n128);
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  Swift::String v121;
  Swift::Bool v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  char *v129;
  char *v130;
  void (*v131)(char *, uint64_t);
  void (*v132)(char *, uint64_t, uint64_t);
  id v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  _BOOL4 v138;
  id v139;
  uint8_t *v140;
  id v141;
  void *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  id v146;
  void *v147;
  void *v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  NSString v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, void *);
  id v169;
  NSString v170;
  id v171;
  uint64_t v172;
  NSString v173;
  id v174;
  void *v175;
  id v176;
  id v177;
  void *v178;
  id v179;
  id v180;
  NSObject *v181;
  os_log_type_t v182;
  uint8_t *v183;
  _QWORD *v184;
  id v185;
  void *v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  void (*v195)(char *, char *, void *);
  char *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  _QWORD *v203;
  char *v204;
  void (*v205)(char *, char *, uint64_t);
  id v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  id v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  id v218;
  id v219;
  id v220;
  void *v221;
  void (*v222)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  _QWORD *v227;
  uint64_t (*v228)(char *, uint64_t, uint64_t);
  char *v229;
  char *v230;
  char *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;

  v220 = a2;
  v221 = a1;
  v6 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v6);
  v215 = (char *)&v208 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEFD0);
  v9 = __chkstk_darwin(v8);
  v225 = (char *)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v217 = (char *)&v208 - v12;
  v13 = __chkstk_darwin(v11);
  v227 = (uint64_t *)((char *)&v208 - v14);
  __chkstk_darwin(v13);
  v16 = (char *)&v208 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(char **)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v214 = (char *)&v208 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v213 = (char *)&v208 - v22;
  v23 = __chkstk_darwin(v21);
  v223 = (char *)&v208 - v24;
  v25 = __chkstk_darwin(v23);
  v230 = (char *)&v208 - v26;
  v27 = __chkstk_darwin(v25);
  v224 = (char *)&v208 - v28;
  v29 = __chkstk_darwin(v27);
  v226 = (char *)&v208 - v30;
  v31 = __chkstk_darwin(v29);
  v216 = (char *)&v208 - v32;
  v33 = __chkstk_darwin(v31);
  v231 = (char *)&v208 - v34;
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v208 - v36;
  v212 = v38;
  __chkstk_darwin(v35);
  v40 = (char *)&v208 - v39;
  sub_100012CE8(a4, (uint64_t)v16, &qword_1005CEFD0);
  v228 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v18 + 6);
  v41 = v228(v16, 1, v17);
  v232 = (void *)v17;
  if (v41 == 1)
  {
    if (qword_1005CE9F0 != -1)
      goto LABEL_73;
    goto LABEL_3;
  }
  (*((void (**)(char *, char *, uint64_t))v18 + 4))(v40, v16, v17);
LABEL_5:
  v44 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  objc_msgSend(v44, "ensureModernAccountExistsInContext:", a3);

  v45 = v221;
  v46 = objc_msgSend(v221, "UUIDString");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v16 = v47;

  v48 = a3;
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v50 = objc_msgSend((id)objc_opt_self(ICNote), "noteWithIdentifier:context:", v49, v48);

  if (v50)
  {
    v211 = v48;
    v219 = v50;
    v51 = objc_msgSend(v45, "description");
    v52 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v54 = v53;

    v235 = v52;
    v236 = v54;
    v55._countAndFlagsBits = 95;
    v55._object = (void *)0xE100000000000000;
    String.append(_:)(v55);
    v56 = objc_msgSend(v220, "description");
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v59 = v58;

    v60._countAndFlagsBits = v57;
    v60._object = v59;
    String.append(_:)(v60);
    swift_bridgeObjectRelease(v59);
    v61 = v236;
    URL.appendingPathComponent(_:)(v235, v236);
    swift_bridgeObjectRelease(v61);
    v218 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v69 = NSFileManager.contentsOfDirectory(at:)(v37);
    v208 = 0;
    v210 = v37;
    v209 = v40;
    v235 = _swiftEmptyArrayStorage;
    v70 = *(char **)(v69 + 16);
    v71 = swift_bridgeObjectRetain(v69);
    a3 = v232;
    v229 = v70;
    if (v70)
    {
      v40 = 0;
      v72 = (uint64_t)v227;
      while (1)
      {
        if ((unint64_t)v40 >= *(_QWORD *)(v69 + 16))
        {
          __break(1u);
LABEL_73:
          swift_once(&qword_1005CE9F0, sub_1001776D0);
LABEL_3:
          v42 = (uint64_t)v232;
          v43 = sub_10012A0B0((uint64_t)v232, (uint64_t)qword_1006016D8);
          (*((void (**)(char *, uint64_t, uint64_t))v18 + 2))(v40, v43, v42);
          sub_100012DDC((uint64_t)v16, &qword_1005CEFD0);
          goto LABEL_5;
        }
        v16 = (char *)((v18[80] + 32) & ~(unint64_t)v18[80]);
        v37 = (char *)v69;
        v74 = *((_QWORD *)v18 + 9);
        v75 = &v16[v69 + v74 * (_QWORD)v40];
        v76 = (void (*)(uint64_t, char *, void *, __n128))*((_QWORD *)v18 + 2);
        v76(v72, v75, a3, v71);
        v222 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))*((_QWORD *)v18 + 7);
        ((void (*)(uint64_t, _QWORD, uint64_t, void *))v222)(v72, 0, 1, a3);
        if (v228((char *)v72, 1, (uint64_t)a3) == 1)
        {
          v69 = (uint64_t)v37;
          v98 = v222;
          goto LABEL_33;
        }
        v77 = v18;
        v78 = (uint64_t (*)(char *, uint64_t, void *))*((_QWORD *)v18 + 4);
        v79 = v78(v231, v72, a3);
        v80 = URL.pathExtension.getter(v79);
        v82 = v81;
        if (v80 == 5656397 && v81 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease(0xE300000000000000);
          v83 = v226;
          v84 = ((uint64_t (*)(char *, char *, void *))v76)(v226, v231, v232);
        }
        else
        {
          v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v81, 5656397, 0xE300000000000000, 0);
          swift_bridgeObjectRelease(v82);
          v83 = v226;
          a3 = v232;
          v84 = ((uint64_t (*)(char *, char *, void *))v76)(v226, v231, v232);
          if ((v85 & 1) == 0)
          {
            v73 = (void (*)(char *, void *))*((_QWORD *)v77 + 1);
            v73(v83, a3);
            goto LABEL_14;
          }
        }
        URL.lastPathComponent.getter(v84);
        v87 = v86;
        v88._countAndFlagsBits = 0x5F73746E656D6F6DLL;
        v88._object = (void *)0xE800000000000000;
        v89 = String.hasPrefix(_:)(v88);
        v90 = v87;
        a3 = v232;
        swift_bridgeObjectRelease(v90);
        v73 = (void (*)(char *, void *))*((_QWORD *)v77 + 1);
        v73(v83, a3);
        if (!v89)
        {
          v78(v224, (uint64_t)v231, a3);
          v91 = v235;
          if ((swift_isUniquelyReferenced_nonNull_native(v235) & 1) == 0)
          {
            sub_1001370D0(0, v91[2] + 1, 1);
            v91 = v235;
          }
          v93 = v91[2];
          v92 = v91[3];
          if (v93 >= v92 >> 1)
          {
            sub_1001370D0(v92 > 1, v93 + 1, 1);
            v91 = v235;
          }
          v91[2] = v93 + 1;
          v94 = &v16[(_QWORD)v91 + v93 * v74];
          v95 = (uint64_t)v232;
          v78(v94, (uint64_t)v224, v232);
          v235 = v91;
          a3 = (void *)v95;
          goto LABEL_15;
        }
LABEL_14:
        v73(v231, a3);
LABEL_15:
        ++v40;
        v18 = v77;
        v72 = (uint64_t)v227;
        v69 = (uint64_t)v37;
        if (v229 == v40)
          goto LABEL_31;
      }
    }
    v222 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))*((_QWORD *)v18 + 7);
    v72 = (uint64_t)v227;
LABEL_31:
    v98 = v222;
    v222((char *)v72, 1, 1, (uint64_t)a3, v71);
LABEL_33:
    swift_bridgeObjectRelease(v69);
    sub_100012DDC(v72, &qword_1005CEFD0);
    v99 = v235;
    v227 = _s11MobileNotes21CallRecordingImporterV24createTranscriptSegments12speakerFilesSay0B6Shared0G16ViewModelSegmentVGSay10Foundation3URLVG_tFZ_0((uint64_t)v235);
    swift_release(v99);
    if (v229)
    {
      v100 = v18;
      v101 = v69 + ((v18[80] + 32) & ~(unint64_t)v18[80]);
      v102 = *((_QWORD *)v100 + 9);
      v103 = v100;
      v104 = (void (*)(char *, unint64_t, uint64_t, __n128))*((_QWORD *)v100 + 2);
      v105 = v69;
      v106 = swift_bridgeObjectRetain(v69);
      v107 = (uint64_t)v232;
      while (1)
      {
        v110 = v225;
        v104(v225, v101, v107, v106);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v98)(v110, 0, 1, v107);
        if (v228(v110, 1, v107) == 1)
          goto LABEL_46;
        v111 = (uint64_t (*)(char *, char *, uint64_t))*((_QWORD *)v103 + 4);
        v112 = v111(v230, v110, v107);
        v113 = URL.pathExtension.getter(v112);
        v115 = v114;
        if (v113 == 5656397 && v114 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease(0xE300000000000000);
          v116 = v223;
          v117 = ((uint64_t (*)(char *, char *, void *))v104)(v223, v230, v232);
        }
        else
        {
          v118 = _stringCompareWithSmolCheck(_:_:expecting:)(v113, v114, 5656397, 0xE300000000000000, 0);
          swift_bridgeObjectRelease(v115);
          v116 = v223;
          v107 = (uint64_t)v232;
          v117 = ((uint64_t (*)(char *, char *, void *))v104)(v223, v230, v232);
          if ((v118 & 1) == 0)
          {
            v108 = v116;
            v109 = (void (*)(char *, uint64_t))*((_QWORD *)v103 + 1);
            v109(v108, v107);
            goto LABEL_36;
          }
        }
        URL.lastPathComponent.getter(v117);
        v120 = v119;
        v121._countAndFlagsBits = 0x5F73746E656D6F6DLL;
        v121._object = (void *)0xE800000000000000;
        v122 = String.hasPrefix(_:)(v121);
        v123 = v120;
        v107 = (uint64_t)v232;
        swift_bridgeObjectRelease(v123);
        v124 = v116;
        v109 = (void (*)(char *, uint64_t))*((_QWORD *)v103 + 1);
        v109(v124, v107);
        if (v122)
        {
          v125 = v105;
          swift_bridgeObjectRelease(v105);
          v126 = (uint64_t)v217;
          v111(v217, v230, v107);
          v127 = 0;
          goto LABEL_47;
        }
LABEL_36:
        v109(v230, v107);
        v101 += v102;
        if (!--v229)
          goto LABEL_45;
      }
    }
    v103 = v18;
    v105 = v69;
    v106 = swift_bridgeObjectRetain(v69);
    v107 = (uint64_t)v232;
LABEL_45:
    v98(v225, 1, 1, v107, v106);
LABEL_46:
    v125 = v105;
    swift_bridgeObjectRelease(v105);
    v127 = 1;
    v126 = (uint64_t)v217;
LABEL_47:
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v98)(v126, v127, 1, v107);
    swift_bridgeObjectRelease(v125);
    v128 = v228((char *)v126, 1, v107);
    v129 = v209;
    v130 = v210;
    if (v128 == 1)
    {
      swift_bridgeObjectRelease(v227);

      v131 = (void (*)(char *, uint64_t))*((_QWORD *)v103 + 1);
      v131(v130, v107);
      v131(v129, v107);
      sub_100012DDC(v126, &qword_1005CEFD0);
      return;
    }
    v231 = v103;
    v132 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v103 + 4);
    v132(v216, v126, v107);
    v133 = v219;
    if (qword_1005CEC50 != -1)
      swift_once(&qword_1005CEC50, sub_1002EDF94);
    v134 = type metadata accessor for Logger(0);
    v135 = sub_10012A0B0(v134, (uint64_t)qword_1005D8560);
    v136 = Logger.logObject.getter(v135);
    v137 = static os_log_type_t.info.getter();
    v138 = os_log_type_enabled(v136, v137);
    v139 = v220;
    if (v138)
    {
      v140 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v140 = 0;
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "found call recording file", v140, 2u);
      swift_slowDealloc(v140, -1, -1);
    }

    v141 = objc_msgSend(v133, "attachments");
    if (!v141)
      goto LABEL_57;
    v142 = v141;
    v143 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
    v144 = sub_100179830();
    v145 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v142, v143, v144);

    v146 = v139;
    sub_100177984(v145, v146);
    v148 = v147;
    swift_bridgeObjectRelease(v145);

    if (!v148)
    {
LABEL_57:

      swift_bridgeObjectRelease(v227);
      v167 = (uint64_t)v232;
      v168 = (void (*)(char *, void *))*((_QWORD *)v231 + 1);
      v168(v216, v232);
      v168(v130, (void *)v167);
      v96 = v129;
      v97 = v167;
LABEL_28:
      v168(v96, (void *)v97);
      return;
    }
    v149 = objc_msgSend(v221, "UUIDString");
    v150 = static String._unconditionallyBridgeFromObjectiveC(_:)(v149);
    v152 = v151;

    v153 = static AudioTranscriptionContactsUtility.fetchContactNameForUniqueProxyIdentifier(identifier:)(v150, v152);
    v155 = v154;
    swift_bridgeObjectRelease(v152);
    if (v155)
    {
      v156 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v157 = String._bridgeToObjectiveC()();
      v158 = objc_msgSend(v156, "localizedStringForKey:value:table:", v157, 0, 0);

      v159 = static String._unconditionallyBridgeFromObjectiveC(_:)(v158);
      v161 = v160;

      v162 = sub_100012E18((uint64_t *)&unk_1005D5630);
      v163 = swift_allocObject(v162, 72, 7);
      *(_OWORD *)(v163 + 16) = xmmword_100451C20;
      *(_QWORD *)(v163 + 56) = &type metadata for String;
      *(_QWORD *)(v163 + 64) = sub_1001797EC();
      *(_QWORD *)(v163 + 32) = v153;
      *(_QWORD *)(v163 + 40) = v155;
      v164 = v163;
      v130 = v210;
      String.init(format:_:)(v159, v161, v164);
      v166 = v165;
      swift_bridgeObjectRelease(v161);
    }
    else
    {
      v169 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v170 = String._bridgeToObjectiveC()();
      v171 = objc_msgSend(v169, "localizedStringForKey:value:table:", v170, 0, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v171);
      v166 = v172;

    }
    v173 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v166);
    objc_msgSend(v148, "setTitle:", v173);

    v174 = objc_msgSend(v148, "audioModel");
    if (v174)
    {
      v175 = v174;
      v176 = objc_msgSend(v174, "audioDocument");

      if (!v176)
      {
        __break(1u);
LABEL_75:
        __break(1u);
        return;
      }
      objc_msgSend(v176, "setIsCallRecording:", 1);

    }
    v177 = objc_msgSend(v148, "audioModel");
    if (!v177)
    {
LABEL_65:
      v230 = (char *)v132;
      objc_msgSend(v211, "ic_save");
      v180 = v148;
      v181 = Logger.logObject.getter(v180);
      v182 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v181, v182))
      {
        v183 = (uint8_t *)swift_slowAlloc(12, -1);
        v184 = (_QWORD *)swift_slowAlloc(32, -1);
        v235 = v184;
        *(_DWORD *)v183 = 136315138;
        v185 = objc_msgSend(v180, "identifier");
        if (v185)
        {
          v186 = v185;
          v187 = static String._unconditionallyBridgeFromObjectiveC(_:)(v185);
          v189 = v188;

        }
        else
        {
          v187 = 0;
          v189 = 0xE000000000000000;
        }
        v233 = sub_1003A4190(v187, v189, (uint64_t *)&v235);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, &v234, v183 + 4);

        swift_bridgeObjectRelease(v189);
        _os_log_impl((void *)&_mh_execute_header, v181, v182, "found attachment for call recording. attempting import %s", v183, 0xCu);
        swift_arrayDestroy(v184, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v184, -1, -1);
        swift_slowDealloc(v183, -1, -1);

        v190 = v210;
      }
      else
      {

        v190 = v130;
      }
      v191 = type metadata accessor for TaskPriority(0);
      v192 = (uint64_t)v215;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 56))(v215, 1, 1, v191);
      v194 = v231;
      v193 = (uint64_t)v232;
      v195 = (void (*)(char *, char *, void *))*((_QWORD *)v231 + 2);
      v196 = v213;
      v197 = v216;
      v195(v213, v216, v232);
      v198 = v214;
      v195(v214, v190, (void *)v193);
      v199 = v194[80];
      v200 = (v199 + 48) & ~v199;
      v201 = (v212 + v199 + v200) & ~v199;
      v202 = (char *)swift_allocObject(&unk_100566E50, v201 + v212, v199 | 7);
      *((_QWORD *)v202 + 2) = 0;
      *((_QWORD *)v202 + 3) = 0;
      v203 = v227;
      *((_QWORD *)v202 + 4) = v180;
      *((_QWORD *)v202 + 5) = v203;
      v204 = &v202[v200];
      v205 = (void (*)(char *, char *, uint64_t))v230;
      ((void (*)(char *, char *, uint64_t))v230)(v204, v196, v193);
      v205(&v202[v201], v198, v193);
      v206 = v180;
      v207 = sub_1002EDE48(v192, (uint64_t)&unk_1005D8580, (uint64_t)v202);

      swift_release(v207);
      v168 = (void (*)(char *, void *))*((_QWORD *)v194 + 1);
      v168(v197, (void *)v193);
      v168(v210, (void *)v193);
      v96 = v209;
      v97 = v193;
      goto LABEL_28;
    }
    v178 = v177;
    v179 = objc_msgSend(v177, "audioDocument");

    if (v179)
    {
      objc_msgSend(v179, "setCallType:", _s11MobileNotes19CallNoteCoordinatorC8callType3forSo06ICCallG0VSo6NSUUIDC_tFZ_0(v221));

      goto LABEL_65;
    }
    goto LABEL_75;
  }
  if (qword_1005CEC50 != -1)
    swift_once(&qword_1005CEC50, sub_1002EDF94);
  v62 = type metadata accessor for Logger(0);
  v63 = sub_10012A0B0(v62, (uint64_t)qword_1005D8560);
  v64 = Logger.logObject.getter(v63);
  v66 = static os_log_type_t.error.getter(v64, v65);
  if (os_log_type_enabled(v64, v66))
  {
    v67 = (void (**)(char *, void *))v18;
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v64, v66, "could not find note for call recording", v68, 2u);
    swift_slowDealloc(v68, -1, -1);

    v67[1](v40, v232);
  }
  else
  {

    (*((void (**)(char *, void *))v18 + 1))(v40, v232);
  }
}

void static CallRecordingImporter.importCallRecordingAndCreateNewNote(noteID:recordingID:managedObjectContext:directory:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSString v41;
  id v42;
  uint64_t v43;
  Swift::String v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t inited;
  void *v49;
  id v50;
  id v51;
  unint64_t v52;
  id v53;
  NSString v54;
  Class isa;
  id v56;
  NSString v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  NSString v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  NSString v76;
  id v77;
  void *v78;
  uint64_t v79;
  NSObject *osloga;
  _BYTE v82[72];
  uint64_t v83;
  uint64_t v84;

  v7 = objc_msgSend((id)objc_opt_self(ICAccount), "defaultAccountInContext:", a3);
  if (v7)
  {
    v8 = v7;
    v79 = a4;
    v9 = objc_msgSend(a1, "UUIDString");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

    v12 = a3;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v14 = (void *)objc_opt_self(ICNote);
    v15 = objc_msgSend(v14, "noteWithIdentifier:context:", v13, v12);

    v78 = v12;
    if (!v15)
    {
      v16 = objc_msgSend(v8, "defaultFolder");
      v15 = objc_msgSend(v14, "newEmptyNoteWithUUID:folder:", a1, v16);

    }
    v17 = objc_msgSend((id)objc_opt_self(ICTTMutableParagraphStyle), "paragraphStyleNamed:", 0);
    objc_msgSend(v15, "markAsCallNoteIfNeeded:", 1);
    v18 = objc_msgSend(a1, "UUIDString");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = static AudioTranscriptionContactsUtility.fetchContactNameForUniqueProxyIdentifier(identifier:)(v19, v21);
    v24 = v23;
    swift_bridgeObjectRelease(v21);
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (v24)
    {
      v26 = String._bridgeToObjectiveC()();
      v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31 = sub_100012E18((uint64_t *)&unk_1005D5630);
      v32 = swift_allocObject(v31, 72, 7);
      *(_OWORD *)(v32 + 16) = xmmword_100451C20;
      *(_QWORD *)(v32 + 56) = &type metadata for String;
      *(_QWORD *)(v32 + 64) = sub_1001797EC();
      *(_QWORD *)(v32 + 32) = v22;
      *(_QWORD *)(v32 + 40) = v24;
      v33 = static String.localizedStringWithFormat(_:_:)(v28, v30, v32);
      v35 = v34;
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v25, "localizedStringForKey:value:table:", v41, 0, 0);

      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v35 = v43;

    }
    v83 = v33;
    v84 = v35;
    swift_bridgeObjectRetain(v35);
    v44._countAndFlagsBits = 10;
    v44._object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    swift_bridgeObjectRelease(v35);
    v45 = objc_msgSend(v15, "textStorage");
    if (v45)
    {
      v46 = v45;
      v47 = sub_100012E18(&qword_1005D1B58);
      inited = swift_initStackObject(v47, v82);
      *(_OWORD *)(inited + 16) = xmmword_100451C20;
      v49 = (void *)ICTTAttributeNameParagraphStyle;
      *(_QWORD *)(inited + 32) = ICTTAttributeNameParagraphStyle;
      *(_QWORD *)(inited + 64) = sub_1000163BC(0, (unint64_t *)&qword_1005D1B60, ICTTMutableParagraphStyle_ptr);
      *(_QWORD *)(inited + 40) = v17;
      v50 = v49;
      v51 = v17;
      v52 = sub_100135F1C(inited);
      v53 = objc_allocWithZone((Class)NSAttributedString);
      v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v35);
      type metadata accessor for Key(0);
      sub_100019C6C((unint64_t *)&qword_1005CF5E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100452820);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v52);
      v56 = objc_msgSend(v53, "initWithString:attributes:", v54, isa);

      objc_msgSend(v46, "appendAttributedString:", v56);
    }
    else
    {
      swift_bridgeObjectRelease(v35);
    }
    v57 = objc_msgSend(a2, "UUIDString");
    if (!v57)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v59 = v58;
      v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v59);
    }
    v60 = objc_msgSend(v15, "addAudioAttachmentWithIdentifier:", v57);

    v61 = _s11MobileNotes19CallNoteCoordinatorC8callType3forSo06ICCallG0VSo6NSUUIDC_tFZ_0(a1);
    v62 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v63 = String._bridgeToObjectiveC()();
    v64 = objc_msgSend(v62, "localizedStringForKey:value:table:", v63, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v66 = v65;

    v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v66);
    objc_msgSend(v60, "setTitle:", v67);

    v68 = objc_msgSend(v60, "audioModel");
    if (v68)
    {
      v69 = v68;
      v70 = objc_msgSend(v68, "audioDocument");

      if (!v70)
      {
        __break(1u);
        goto LABEL_27;
      }
      objc_msgSend(v70, "setIsCallRecording:", 1);

    }
    v71 = objc_msgSend(v60, "audioModel");
    if (!v71)
    {
LABEL_23:
      v74 = objc_msgSend(v60, "audioModel");
      if (v74)
      {
        v75 = v74;
        objc_msgSend(v74, "setMergeableDataDirty:", 1);

      }
      v76 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "updateChangeCountWithReason:", v76);

      v77 = objc_msgSend(objc_allocWithZone((Class)ICAttachmentInsertionController), "initWithNote:", v15);
      objc_msgSend(v15, "save");
      static CallRecordingImporter.importCallRecording(noteID:recordingID:managedObjectContext:directory:)(a1, a2, v78, v79);

      return;
    }
    v72 = v71;
    v73 = objc_msgSend(v71, "audioDocument");

    if (v73)
    {
      objc_msgSend(v73, "setCallType:", v61);

      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (qword_1005CEC50 != -1)
    swift_once(&qword_1005CEC50, sub_1002EDF94);
  v36 = type metadata accessor for Logger(0);
  v37 = sub_10012A0B0(v36, (uint64_t)qword_1005D8560);
  osloga = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.error.getter(osloga, v38);
  if (os_log_type_enabled(osloga, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, osloga, v39, "Call recording could not create a new note from because we couldnt get a default account", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }

}

uint64_t sub_1002EDE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_100012DDC(a1, &qword_1005D4680);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      v12 = swift_unknownObjectRetain(v9);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10, v12);
      v15 = v14;
      swift_unknownObjectRelease(v9, v14);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_100566EC0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_1005D7DD8, v17);
}

uint64_t sub_1002EDF94()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D8560);
  v1 = sub_10012A0B0(v0, (uint64_t)qword_1005D8560);
  return static Logger.audioTranscription.getter(v1);
}

uint64_t sub_1002EDFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v8 = type metadata accessor for URL(0);
  v7[7] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[8] = v9;
  v7[9] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002EE044, 0, 0);
}

uint64_t sub_1002EE044()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v2);
  return swift_task_switch(sub_1002EE0AC, v3, v4);
}

uint64_t sub_1002EE0AC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[4];
  v2 = (void *)v0[3];
  swift_release(v0[10]);
  _s11MobileNotes21CallRecordingImporterV031importTranscriptionAndSummarizecD010attachment25updatedTranscriptSegments8mediaURLySo12ICAttachmentC_Say0B6Shared0L16ViewModelSegmentVG10Foundation0O0VtFZ_0(v2, v1);
  return swift_task_switch(sub_1002EE108, 0, 0);
}

uint64_t sub_1002EE108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;

  if ((ICInternalSettingsShouldPreserveImportedCallRecordingData() & 1) != 0)
  {
    if (qword_1005CEC50 != -1)
      swift_once(&qword_1005CEC50, sub_1002EDF94);
    v2 = *(_QWORD *)(v0 + 64);
    v1 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    v5 = type metadata accessor for Logger(0);
    sub_10012A0B0(v5, (uint64_t)qword_1005D8560);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.info.getter();
    v9 = os_log_type_enabled(v7, v8);
    v11 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    if (v9)
    {
      v19 = *(_QWORD *)(v0 + 56);
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = URL.absoluteString.getter(v13);
      v16 = v15;
      *(_QWORD *)(v0 + 16) = sub_1003A4190(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4);
      v17 = swift_bridgeObjectRelease(v16);
      (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v19, v17);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "preserving imported call recording data at %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    }

  }
  else
  {
    _s11MobileNotes19CallNoteCoordinatorC06deleteC23RecordingsFromDirectory9directoryy10Foundation3URLV_tFZ_0();
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EE2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[4] = a4;
  v5[5] = a5;
  v6 = type metadata accessor for AttributedString.CharacterView(0);
  v5[6] = v6;
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AttributedString(0);
  v5[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[9] = v8;
  v5[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v5[12] = v11;
  v5[13] = v12;
  return swift_task_switch(sub_1002EE3D8, v11, v12);
}

uint64_t sub_1002EE3D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[6];
  v1 = v0[7];
  static TranscriptViewModelSegment.transcriptStringFromSegments(segments:)(v0[4]);
  v3 = type metadata accessor for SummarizationManager(0);
  AttributedString.characters.getter(v3);
  v4 = sub_100019C6C(&qword_1005D3E90, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  v5 = String.init<A>(_:)(v1, v2, v4);
  v7 = v6;
  v0[14] = v6;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to static SummarizationManager.generateTopLineTranscriptSummary(transcript:)[1]);
  v0[15] = v8;
  *v8 = v0;
  v8[1] = sub_1002EE4C8;
  return static SummarizationManager.generateTopLineTranscriptSummary(transcript:)(v5, v7);
}

uint64_t sub_1002EE4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 120);
  v4[16] = a1;
  v4[17] = a2;
  v4[18] = v2;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v4[14]);
  if (v2)
    v6 = sub_1002EE88C;
  else
    v6 = sub_1002EE588;
  return swift_task_switch(v6, v4[12], v4[13]);
}

uint64_t sub_1002EE588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  NSString v5;
  double v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v27;

  v1 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 88));
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 136);
    v3 = objc_msgSend(*(id *)(v0 + 40), "audioModel");
    if (v3)
    {
      v4 = v3;
      v5 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v2).n128_u64[0];
      *(_QWORD *)(v0 + 24) = 0;
      v7 = objc_msgSend(v4, "saveTopLineSummaryToAttachmentWithSummary:error:", v5, v0 + 24, v6);

      v8 = *(void **)(v0 + 24);
      v10 = *(_QWORD *)(v0 + 72);
      v9 = *(_QWORD *)(v0 + 80);
      v11 = *(_QWORD *)(v0 + 64);
      if ((v7 & 1) != 0)
      {
        v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
        v13 = v8;
        v12(v9, v11);
      }
      else
      {
        v14 = v8;
        v15 = _convertNSErrorToError(_:)(v8);

        swift_willThrow(v16);
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
        if (qword_1005CEC50 != -1)
          swift_once(&qword_1005CEC50, sub_1002EDF94);
        v17 = type metadata accessor for Logger(0);
        sub_10012A0B0(v17, (uint64_t)qword_1005D8560);
        swift_errorRetain(v15);
        v18 = swift_errorRetain(v15);
        v19 = Logger.logObject.getter(v18);
        v21 = static os_log_type_t.error.getter(v19, v20);
        if (os_log_type_enabled(v19, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc(12, -1);
          v27 = (uint64_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v22 = 138412290;
          swift_errorRetain(v15);
          v23 = _swift_stdlib_bridgeErrorToNSError(v15);
          *(_QWORD *)(v0 + 16) = v23;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v22 + 4);
          *v27 = v23;
          swift_errorRelease(v15);
          swift_errorRelease(v15);
          _os_log_impl((void *)&_mh_execute_header, v19, v21, "Failed to generate topline summary for call recording {error: %@}", v22, 0xCu);
          v24 = sub_100012E18(&qword_1005D3A30);
          swift_arrayDestroy(v27, 1, v24);
          swift_slowDealloc(v27, -1, -1);
          swift_slowDealloc(v22, -1, -1);

          swift_errorRelease(v15);
        }
        else
        {
          swift_errorRelease(v15);
          swift_errorRelease(v15);
          swift_errorRelease(v15);

        }
      }
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
      swift_bridgeObjectRelease(v2);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  }
  v25 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EE88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 144);
  if (qword_1005CEC50 != -1)
    swift_once(&qword_1005CEC50, sub_1002EDF94);
  v5 = type metadata accessor for Logger(0);
  sub_10012A0B0(v5, (uint64_t)qword_1005D8560);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.error.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v4);
    v12 = _swift_stdlib_bridgeErrorToNSError(v4);
    *(_QWORD *)(v0 + 16) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v10 + 4);
    *v11 = v12;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Failed to generate topline summary for call recording {error: %@}", v10, 0xCu);
    v13 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  v14 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Int sub_1002EEAAC(unint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  Swift::Int result;
  char *v6[2];

  v2 = *(_QWORD *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = sub_10026C680(v3);
  v4 = *(char **)(v3 + 16);
  v6[0] = (char *)(v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  v6[1] = v4;
  result = sub_1002EEB30(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1002EEB30(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  Swift::Int v25;
  Swift::Int result;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  _QWORD *v30;
  Swift::Int v31;
  char *v32;
  Swift::Int v33;
  unint64_t v34;
  Swift::Int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  Swift::Int v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  Swift::Int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  uint64_t v67;
  int v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::Int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  Swift::Int v79;
  char *v80;
  char *v81;
  uint64_t v82;
  Swift::Int v83;
  Swift::Int v84;
  uint64_t v85;
  char *v86;
  Swift::Int v87;
  uint64_t v88;
  uint64_t (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  double v98;
  uint64_t v99;
  char *v100;
  _BOOL4 v101;
  void (*v102)(char *, uint64_t);
  char *v103;
  char *v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  unint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  char v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  _QWORD *v157;
  char *v158;
  char *v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  unint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  Swift::Int v172;
  Swift::Int v173;
  char *v174;
  char *v175;
  char *v176;
  Swift::Int v177;
  unint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  Swift::Int v183;
  char *v184;
  uint64_t v185;
  char **v186;
  uint64_t v187;
  uint64_t v188;

  v2 = v1;
  v4 = type metadata accessor for TranscriptViewModelSegment(0);
  v187 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v175 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v184 = (char *)&v166 - v8;
  v9 = __chkstk_darwin(v7);
  v181 = (char *)&v166 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v166 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v166 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v166 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v166 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v166 - v23;
  v186 = a1;
  v25 = (Swift::Int)a1[1];
  result = _minimumMergeRunLength(_:)(v25);
  if (result >= v25)
  {
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25)
        return sub_1002EF694(0, v25, 1, v186);
      return result;
    }
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (v25 >= 0)
    v27 = v25;
  else
    v27 = v25 + 1;
  if (v25 < -1)
    goto LABEL_159;
  v28 = result;
  v183 = v25;
  if (v25 < 2)
  {
    v30 = _swiftEmptyArrayStorage;
    v178 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
    if (v25 != 1)
    {
      v34 = _swiftEmptyArrayStorage[2];
      v32 = (char *)_swiftEmptyArrayStorage;
      v157 = _swiftEmptyArrayStorage;
      if (v34 < 2)
      {
LABEL_127:
        v158 = v32;
        goto LABEL_128;
      }
LABEL_115:
      v159 = *v186;
      while (1)
      {
        v160 = v34 - 2;
        if (v34 < 2)
          goto LABEL_146;
        if (!v159)
          goto LABEL_158;
        v151 = v32;
        v161 = v32 + 32;
        v162 = *(_QWORD *)&v32[16 * v160 + 32];
        v163 = *(_QWORD *)&v32[16 * v34 + 24];
        sub_1002EF93C((unint64_t)&v159[*(_QWORD *)(v187 + 72) * v162], (unint64_t)&v159[*(_QWORD *)(v187 + 72) * *(_QWORD *)&v161[16 * v34 - 16]], &v159[*(_QWORD *)(v187 + 72) * v163], v178);
        if (v2)
          goto LABEL_113;
        if (v163 < v162)
          goto LABEL_147;
        if ((swift_isUniquelyReferenced_nonNull_native(v151) & 1) == 0)
          v151 = sub_1001562F4((uint64_t)v151);
        if (v160 >= *((_QWORD *)v151 + 2))
          goto LABEL_148;
        v164 = &v151[16 * v160 + 32];
        *(_QWORD *)v164 = v162;
        *((_QWORD *)v164 + 1) = v163;
        v165 = *((_QWORD *)v151 + 2);
        if (v34 > v165)
          goto LABEL_149;
        v32 = v151;
        memmove(&v151[16 * v34 + 16], &v151[16 * v34 + 32], 16 * (v165 - v34));
        *((_QWORD *)v151 + 2) = v165 - 1;
        v34 = v165 - 1;
        if (v165 <= 2)
          goto LABEL_127;
      }
    }
    v168 = v24;
    v169 = v22;
    v174 = v19;
    v180 = v13;
  }
  else
  {
    v168 = v24;
    v169 = v22;
    v174 = v19;
    v180 = v13;
    v29 = v27 >> 1;
    v30 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v27 >> 1, v4);
    v30[2] = v29;
    v178 = (unint64_t)v30
         + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
  }
  v31 = 0;
  v32 = (char *)_swiftEmptyArrayStorage;
  v167 = v30;
  v176 = v16;
  v172 = v28;
  v33 = v183;
  v188 = v4;
  while (1)
  {
    v35 = v31 + 1;
    v177 = v31;
    if (v31 + 1 >= v33)
    {
      v50 = v31 + 1;
      v51 = v188;
    }
    else
    {
      v183 = v33;
      v36 = *v186;
      v37 = v188;
      v38 = *(_QWORD *)(v187 + 72);
      v173 = v31 + 1;
      v39 = *(void (**)(char *, char *, uint64_t))(v187 + 16);
      v40 = v31;
      v41 = v168;
      v39(v168, &v36[v38 * v35], v188);
      v179 = v36;
      v185 = v38;
      v42 = &v36[v38 * v40];
      v43 = v169;
      v44 = ((uint64_t (*)(char *, char *, uint64_t))v39)(v169, v42, v37);
      v45 = TranscriptViewModelSegment.timestamp.getter(v44);
      if (v45 == TranscriptViewModelSegment.timestamp.getter(v46))
      {
        v48 = ((double (*)(void))TranscriptViewModelSegment.duration.getter)();
        TranscriptViewModelSegment.duration.getter();
      }
      else
      {
        v48 = TranscriptViewModelSegment.timestamp.getter(v47);
        v49 = TranscriptViewModelSegment.timestamp.getter(v52);
      }
      LODWORD(v182) = v48 < v49;
      v53 = v188;
      v54 = *(void (**)(char *, uint64_t))(v187 + 8);
      v54(v43, v188);
      v54(v41, v53);
      v31 = v177;
      v33 = v183;
      if (v177 + 2 >= v183)
      {
        v50 = v177 + 2;
      }
      else
      {
        v170 = v32;
        v171 = v2;
        v55 = v185 * v173;
        v56 = v179;
        v57 = v177 + 2;
        v58 = v185 * (v177 + 2);
        while (1)
        {
          v59 = v174;
          v60 = v188;
          v39(v174, &v56[v58], v188);
          v61 = ((uint64_t (*)(char *, char *, uint64_t))v39)(v16, &v56[v55], v60);
          v62 = TranscriptViewModelSegment.timestamp.getter(v61);
          if (v62 == TranscriptViewModelSegment.timestamp.getter(v63))
          {
            v65 = ((double (*)(void))TranscriptViewModelSegment.duration.getter)();
            TranscriptViewModelSegment.duration.getter();
          }
          else
          {
            v65 = TranscriptViewModelSegment.timestamp.getter(v64);
            v66 = TranscriptViewModelSegment.timestamp.getter(v67);
          }
          v68 = v65 < v66;
          v69 = v16;
          v70 = v188;
          v54(v69, v188);
          v54(v59, v70);
          if ((_DWORD)v182 != v68)
            break;
          v56 += v185;
          ++v57;
          v33 = v183;
          v16 = v176;
          if (v183 == v57)
          {
            v50 = v183;
            v32 = v170;
            v2 = v171;
            v31 = v177;
            goto LABEL_31;
          }
        }
        v32 = v170;
        v2 = v171;
        v50 = v57;
        v31 = v177;
        v33 = v183;
      }
LABEL_31:
      v51 = v188;
      v28 = v172;
      if ((_DWORD)v182)
      {
        if (v50 < v31)
          goto LABEL_152;
        if (v31 < v50)
        {
          v170 = v32;
          v171 = v2;
          v71 = 0;
          v72 = v185 * (v50 - 1);
          v73 = v50 * v185;
          v74 = v31;
          v75 = v31 * v185;
          do
          {
            if (v74 != v50 + v71 - 1)
            {
              v78 = v179;
              if (!v179)
                goto LABEL_157;
              v79 = v50;
              v80 = &v179[v75];
              v81 = &v179[v72];
              v182 = *(_QWORD *)(v187 + 32);
              ((void (*)(char *, char *, uint64_t))v182)(v175, &v179[v75], v188);
              if (v75 < v72 || v80 >= &v78[v73])
              {
                v76 = &v78[v75];
                v77 = &v78[v72];
                v51 = v188;
                swift_arrayInitWithTakeFrontToBack(v76, v77);
              }
              else
              {
                v51 = v188;
                if (v75 != v72)
                  swift_arrayInitWithTakeBackToFront(v80, v81);
              }
              ((void (*)(char *, char *, uint64_t))v182)(v81, v175, v51);
              v50 = v79;
            }
            ++v74;
            --v71;
            v72 -= v185;
            v73 -= v185;
            v75 += v185;
          }
          while (v74 < v50 + v71);
          v32 = v170;
          v2 = v171;
          v28 = v172;
          v31 = v177;
          v33 = v183;
        }
      }
    }
    if (v50 < v33)
    {
      if (__OFSUB__(v50, v31))
        goto LABEL_150;
      if (v50 - v31 < v28)
      {
        if (__OFADD__(v31, v28))
          goto LABEL_153;
        if (v31 + v28 < v33)
          v33 = v31 + v28;
        if (v33 < v31)
          goto LABEL_154;
        if (v50 != v33)
        {
          v170 = v32;
          v171 = v2;
          v82 = *(_QWORD *)(v187 + 72);
          v179 = *(char **)(v187 + 16);
          v185 = v82 * (v50 - 1);
          v182 = v82;
          v83 = v50 * v82;
          v173 = v33;
          do
          {
            v85 = 0;
            v183 = v50;
            while (1)
            {
              v86 = *v186;
              v87 = v83;
              v88 = (uint64_t)&(*v186)[v83 + v85];
              v89 = (uint64_t (*)(char *, char *, uint64_t))v179;
              v90 = v180;
              ((void (*)(char *, uint64_t, uint64_t))v179)(v180, v88, v51);
              v91 = &v86[v185 + v85];
              v92 = v181;
              v93 = v89(v181, v91, v51);
              v94 = TranscriptViewModelSegment.timestamp.getter(v93);
              if (v94 == TranscriptViewModelSegment.timestamp.getter(v95))
              {
                v97 = ((double (*)(void))TranscriptViewModelSegment.duration.getter)();
                TranscriptViewModelSegment.duration.getter();
              }
              else
              {
                v97 = TranscriptViewModelSegment.timestamp.getter(v96);
                v98 = TranscriptViewModelSegment.timestamp.getter(v99);
              }
              v100 = v92;
              v101 = v97 < v98;
              v102 = *(void (**)(char *, uint64_t))(v187 + 8);
              v102(v100, v51);
              v102(v90, v51);
              if (!v101)
                break;
              v103 = *v186;
              if (!*v186)
                goto LABEL_155;
              v83 = v87;
              v104 = &v103[v87 + v85];
              v105 = &v103[v185 + v85];
              v106 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
              v106(v184, v104, v188);
              swift_arrayInitWithTakeFrontToBack(v104, v105);
              v51 = v188;
              v106(v105, v184, v188);
              v84 = v183;
              v85 -= v182;
              if (v183 == ++v31)
                goto LABEL_55;
            }
            v84 = v183;
            v83 = v87;
LABEL_55:
            v50 = v84 + 1;
            v185 += v182;
            v83 += v182;
            v31 = v177;
          }
          while (v50 != v173);
          v50 = v173;
          v32 = v170;
          v2 = v171;
        }
      }
    }
    if (v50 < v31)
    {
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
      v32 = sub_100155E58(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v108 = *((_QWORD *)v32 + 2);
    v107 = *((_QWORD *)v32 + 3);
    v34 = v108 + 1;
    if (v108 >= v107 >> 1)
      v32 = sub_100155E58((char *)(v107 > 1), v108 + 1, 1, v32);
    *((_QWORD *)v32 + 2) = v34;
    v109 = v32 + 32;
    v110 = &v32[16 * v108 + 32];
    *(_QWORD *)v110 = v31;
    *((_QWORD *)v110 + 1) = v50;
    v183 = v50;
    if (v108)
      break;
    v34 = 1;
LABEL_15:
    v33 = (Swift::Int)v186[1];
    v31 = v183;
    v16 = v176;
    v28 = v172;
    if (v183 >= v33)
    {
      v157 = v167;
      if (v34 < 2)
        goto LABEL_127;
      goto LABEL_115;
    }
  }
  while (1)
  {
    v111 = v34 - 1;
    if (v34 >= 4)
    {
      v116 = &v109[16 * v34];
      v117 = *((_QWORD *)v116 - 8);
      v118 = *((_QWORD *)v116 - 7);
      v122 = __OFSUB__(v118, v117);
      v119 = v118 - v117;
      if (v122)
        goto LABEL_134;
      v121 = *((_QWORD *)v116 - 6);
      v120 = *((_QWORD *)v116 - 5);
      v122 = __OFSUB__(v120, v121);
      v114 = v120 - v121;
      v115 = v122;
      if (v122)
        goto LABEL_135;
      v123 = v34 - 2;
      v124 = &v109[16 * v34 - 32];
      v126 = *(_QWORD *)v124;
      v125 = *((_QWORD *)v124 + 1);
      v122 = __OFSUB__(v125, v126);
      v127 = v125 - v126;
      if (v122)
        goto LABEL_137;
      v122 = __OFADD__(v114, v127);
      v128 = v114 + v127;
      if (v122)
        goto LABEL_140;
      if (v128 >= v119)
      {
        v146 = &v109[16 * v111];
        v148 = *(_QWORD *)v146;
        v147 = *((_QWORD *)v146 + 1);
        v122 = __OFSUB__(v147, v148);
        v149 = v147 - v148;
        if (v122)
          goto LABEL_144;
        v139 = v114 < v149;
        goto LABEL_102;
      }
    }
    else
    {
      if (v34 != 3)
      {
        v140 = *((_QWORD *)v32 + 4);
        v141 = *((_QWORD *)v32 + 5);
        v122 = __OFSUB__(v141, v140);
        v133 = v141 - v140;
        v134 = v122;
        goto LABEL_96;
      }
      v113 = *((_QWORD *)v32 + 4);
      v112 = *((_QWORD *)v32 + 5);
      v122 = __OFSUB__(v112, v113);
      v114 = v112 - v113;
      v115 = v122;
    }
    if ((v115 & 1) != 0)
      goto LABEL_136;
    v123 = v34 - 2;
    v129 = &v109[16 * v34 - 32];
    v131 = *(_QWORD *)v129;
    v130 = *((_QWORD *)v129 + 1);
    v132 = __OFSUB__(v130, v131);
    v133 = v130 - v131;
    v134 = v132;
    if (v132)
      goto LABEL_139;
    v135 = &v109[16 * v111];
    v137 = *(_QWORD *)v135;
    v136 = *((_QWORD *)v135 + 1);
    v122 = __OFSUB__(v136, v137);
    v138 = v136 - v137;
    if (v122)
      goto LABEL_142;
    if (__OFADD__(v133, v138))
      goto LABEL_143;
    if (v133 + v138 >= v114)
    {
      v139 = v114 < v138;
LABEL_102:
      if (v139)
        v111 = v123;
      goto LABEL_104;
    }
LABEL_96:
    if ((v134 & 1) != 0)
      goto LABEL_138;
    v142 = &v109[16 * v111];
    v144 = *(_QWORD *)v142;
    v143 = *((_QWORD *)v142 + 1);
    v122 = __OFSUB__(v143, v144);
    v145 = v143 - v144;
    if (v122)
      goto LABEL_141;
    if (v145 < v133)
      goto LABEL_15;
LABEL_104:
    v150 = v111 - 1;
    if (v111 - 1 >= v34)
    {
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    if (!*v186)
      goto LABEL_156;
    v151 = v32;
    v152 = &v109[16 * v150];
    v153 = *(_QWORD *)v152;
    v154 = &v109[16 * v111];
    v155 = *((_QWORD *)v154 + 1);
    sub_1002EF93C((unint64_t)&(*v186)[*(_QWORD *)(v187 + 72) * *(_QWORD *)v152], (unint64_t)&(*v186)[*(_QWORD *)(v187 + 72) * *(_QWORD *)v154], &(*v186)[*(_QWORD *)(v187 + 72) * v155], v178);
    if (v2)
      break;
    if (v155 < v153)
      goto LABEL_131;
    if (v111 > *((_QWORD *)v151 + 2))
      goto LABEL_132;
    *(_QWORD *)v152 = v153;
    *(_QWORD *)&v109[16 * v150 + 8] = v155;
    v156 = *((_QWORD *)v151 + 2);
    if (v111 >= v156)
      goto LABEL_133;
    v32 = v151;
    v34 = v156 - 1;
    memmove(&v109[16 * v111], v154 + 16, 16 * (v156 - 1 - v111));
    *((_QWORD *)v151 + 2) = v156 - 1;
    if (v156 <= 2)
      goto LABEL_15;
  }
  v157 = v167;
LABEL_113:
  v158 = v151;
LABEL_128:
  swift_bridgeObjectRelease(v158);
  v157[2] = 0;
  return swift_bridgeObjectRelease(v157);
}

uint64_t sub_1002EF694(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  _BOOL4 v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v39 = a1;
  v7 = type metadata accessor for TranscriptViewModelSegment(0);
  v46 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v43 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v42 = a3;
  v38 = a2;
  if (a3 != a2)
  {
    v15 = v12;
    v16 = v46[9];
    v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46[2];
    v41 = v16;
    v47 = v16 * v42;
    v48 = v16 * (v42 - 1);
LABEL_5:
    v17 = 0;
    v18 = v39;
    while (1)
    {
      v19 = *a4;
      v45 = v47 + v17;
      v20 = v40;
      v40((uint64_t)v14, v47 + v17 + v19, v7);
      v44 = v48 + v17;
      v21 = v20(v15, v48 + v17 + v19, v7);
      v22 = TranscriptViewModelSegment.timestamp.getter(v21);
      if (v22 == TranscriptViewModelSegment.timestamp.getter(v23))
      {
        v25 = ((double (*)(void))TranscriptViewModelSegment.duration.getter)();
        TranscriptViewModelSegment.duration.getter();
      }
      else
      {
        v25 = TranscriptViewModelSegment.timestamp.getter(v24);
        v26 = TranscriptViewModelSegment.timestamp.getter(v27);
      }
      v28 = v25 < v26;
      v29 = (void (*)(uint64_t, uint64_t))v46[1];
      v29(v15, v7);
      result = ((uint64_t (*)(char *, uint64_t))v29)(v14, v7);
      if (!v28)
      {
LABEL_4:
        v48 += v41;
        v47 += v41;
        if (++v42 == v38)
          return result;
        goto LABEL_5;
      }
      v30 = *a4;
      if (!*a4)
        break;
      v31 = v14;
      v32 = v15;
      v33 = a4;
      v34 = v30 + v47 + v17;
      v35 = v30 + v48 + v17;
      v36 = (void (*)(char *, uint64_t, uint64_t))v46[4];
      v36(v43, v34, v7);
      swift_arrayInitWithTakeFrontToBack(v34, v35);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v35, v43, v7);
      v17 -= v41;
      ++v18;
      a4 = v33;
      v15 = v32;
      v14 = v31;
      if (v42 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EF93C(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  _BOOL4 v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v40;
  char *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, unint64_t, uint64_t);
  unint64_t v46;
  char *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  _BOOL4 v55;
  char *v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;

  v8 = type metadata accessor for TranscriptViewModelSegment(0);
  v9 = *(_QWORD **)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v68 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v69 = (char *)&v64 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v64 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v64 - v17;
  v71 = v9[9];
  if (!v71)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v71 == -1)
    goto LABEL_71;
  v19 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v71 == -1)
    goto LABEL_72;
  v20 = (uint64_t)(a2 - a1) / v71;
  v73 = a4;
  v74 = a1;
  v21 = (uint64_t)v19 / v71;
  if (v20 >= (uint64_t)v19 / v71)
  {
    if (v21 < 0)
      goto LABEL_73;
    v67 = a1;
    v23 = v21 * v71;
    if (a4 < a2 || a2 + v23 <= a4)
    {
      v24 = (unint64_t)a3;
      swift_arrayInitWithTakeFrontToBack(a4, a2);
    }
    else
    {
      v24 = (unint64_t)a3;
      if (a4 != a2)
        swift_arrayInitWithTakeBackToFront(a4, a2);
    }
    v39 = a4 + v23;
    v72 = a4 + v23;
    v74 = a2;
    v40 = v23 < 1 || v67 >= a2;
    v41 = v69;
    if (v40)
      goto LABEL_48;
    v43 = -v71;
    v44 = v9[2];
    v70 = v8;
    v71 = v44;
    v65 = a4;
    v66 = v9;
    while (1)
    {
      v45 = (uint64_t (*)(char *, unint64_t, uint64_t))v71;
      ((void (*)(char *, unint64_t, uint64_t))v71)(v41, v39 + v43, v8);
      v46 = a2 + v43;
      v47 = v68;
      v48 = v45(v68, a2 + v43, v8);
      v49 = TranscriptViewModelSegment.timestamp.getter(v48);
      if (v49 == TranscriptViewModelSegment.timestamp.getter(v50))
      {
        v52 = ((double (*)(void))TranscriptViewModelSegment.duration.getter)();
        TranscriptViewModelSegment.duration.getter();
      }
      else
      {
        v52 = TranscriptViewModelSegment.timestamp.getter(v51);
        v53 = TranscriptViewModelSegment.timestamp.getter(v54);
      }
      v55 = v52 < v53;
      v56 = v47;
      v57 = v24 + v43;
      v58 = (void (*)(char *, uint64_t))v9[1];
      v59 = v43;
      v60 = v70;
      v58(v56, v70);
      v58(v41, v60);
      if (v55)
        break;
      v61 = v72;
      v62 = v72 + v59;
      v72 += v59;
      v43 = v59;
      if (v24 >= v61 && v57 < v61)
      {
        v9 = v66;
        v41 = v69;
        v8 = v70;
        if (v24 != v61)
          swift_arrayInitWithTakeBackToFront(v57, v62);
        v46 = a2;
        goto LABEL_64;
      }
      v8 = v70;
      swift_arrayInitWithTakeFrontToBack(v57, v62);
      v46 = a2;
      v63 = v65;
      v9 = v66;
      v41 = v69;
LABEL_66:
      v39 = v72;
      if (v72 > v63)
      {
        a2 = v46;
        v24 = v57;
        if (v46 > v67)
          continue;
      }
      goto LABEL_48;
    }
    if (v24 < a2 || v57 >= a2)
    {
      v8 = v70;
      swift_arrayInitWithTakeFrontToBack(v57, v46);
      v9 = v66;
      v41 = v69;
      v43 = v59;
    }
    else
    {
      v9 = v66;
      v41 = v69;
      v8 = v70;
      v43 = v59;
      if (v24 != a2)
        swift_arrayInitWithTakeBackToFront(v57, v46);
    }
    v74 += v43;
LABEL_64:
    v63 = v65;
    goto LABEL_66;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    v22 = v20 * v71;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v68 = a3;
    v69 = (char *)(a4 + v22);
    v72 = a4 + v22;
    if (v22 >= 1 && a2 < (unint64_t)a3)
    {
      v26 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v26(v18, a2, v8);
        v27 = ((uint64_t (*)(char *, unint64_t, uint64_t))v26)(v16, a4, v8);
        v28 = TranscriptViewModelSegment.timestamp.getter(v27);
        if (v28 == TranscriptViewModelSegment.timestamp.getter(v29))
        {
          v31 = ((double (*)(void))TranscriptViewModelSegment.duration.getter)();
          TranscriptViewModelSegment.duration.getter();
        }
        else
        {
          v31 = TranscriptViewModelSegment.timestamp.getter(v30);
          v32 = TranscriptViewModelSegment.timestamp.getter(v33);
        }
        v34 = v31 < v32;
        v35 = (void (*)(char *, uint64_t))v9[1];
        v35(v16, v8);
        v35(v18, v8);
        v36 = v74;
        if (v34)
        {
          v37 = a2 + v71;
          if (v74 < a2 || v74 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack(v74, a2);
          }
          else if (v74 == a2)
          {
            v36 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v74, a2);
          }
        }
        else
        {
          v38 = v73 + v71;
          if (v74 < v73 || v74 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack(v74, v73);
          }
          else if (v74 != v73)
          {
            swift_arrayInitWithTakeBackToFront(v74, v73);
          }
          v73 = v38;
          v37 = a2;
        }
        v74 = v36 + v71;
        a4 = v73;
        if (v73 >= (unint64_t)v69)
          break;
        a2 = v37;
      }
      while (v37 < (unint64_t)v68);
    }
LABEL_48:
    sub_10015611C(&v74, &v73, (uint64_t *)&v72);
    return 1;
  }
LABEL_73:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1002EFF0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
LABEL_9:
        v6 = v5;
        v7 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        if (objc_msgSend(v5, "isEmpty"))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v8 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
          v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
          specialized ContiguousArray._endMutation()(v9);
          v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {

        }
        ++v3;
        if (v7 == v2)
          return _swiftEmptyArrayStorage;
      }
      if (v3 < *(_QWORD *)(v4 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v11 = a1;
      else
        v11 = a1 & 0xFFFFFFFFFFFFFF8;
      v2 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (!v2)
        return _swiftEmptyArrayStorage;
    }
    v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *_s11MobileNotes21CallRecordingImporterV24createTranscriptSegments12speakerFilesSay0B6Shared0G16ViewModelSegmentVGSay10Foundation3URLVG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSURL *v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  double Seconds;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  os_log_type_t v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  CMTimeValue value;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char v90;
  void (*v91)(char *, uint64_t);
  id v92;
  id v93;
  double v94;
  double v95;
  id v96;
  void *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  uint64_t v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  uint64_t v130;
  os_log_type_t v131;
  _BOOL4 v132;
  uint64_t v133;
  char *v134;
  uint8_t *v135;
  uint8_t *v136;
  __int128 v137;
  _QWORD *result;
  uint64_t v139;
  unint64_t v140;
  void (*v141)(char *, uint64_t);
  unint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, char *, uint64_t);
  uint64_t v145;
  double v146;
  uint64_t v147;
  double v148;
  Swift::String v149;
  Swift::String v150;
  void *object;
  Swift::String v152;
  Swift::String v153;
  void *v154;
  Swift::String v155;
  Swift::String v156;
  void *v157;
  Swift::String v158;
  Swift::String v159;
  Swift::String v160;
  void *v161;
  Swift::String v162;
  Swift::String v163;
  unint64_t v164;
  CMTimeValue v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  uint64_t v169;
  os_log_type_t v170;
  _BOOL4 v171;
  uint8_t *v172;
  CMTimeValue v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  __n128 v177;
  char *v178;
  void (*v179)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v180;
  AVMediaType v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  char *v186;
  id v187;
  char *v188;
  char *v189;
  id v190;
  void (*v191)(uint64_t, uint64_t);
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  id v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  __int128 v206;
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char v212;
  _QWORD *v213;
  CMTime time;
  CMTime v215;

  v195 = 0;
  v203 = type metadata accessor for TranscriptViewModelSegment(0);
  v208 = *(_QWORD *)(v203 - 8);
  v2 = __chkstk_darwin(v203);
  v188 = (char *)&v174 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v174 - v5;
  v7 = __chkstk_darwin(v4);
  v202 = (char *)&v174 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v174 - v9;
  v11 = type metadata accessor for CMFormatDescriptionRef.MediaSubType(0);
  v12 = *(char **)(v11 - 8);
  __chkstk_darwin(v11);
  v196 = (char *)&v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = (char *)sub_100012E18(&qword_1005D8598);
  __chkstk_darwin(v205);
  v210 = (char *)&v174 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D85A0);
  v16 = __chkstk_darwin(v15);
  v204 = (char *)&v174 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v174 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v174 - v21;
  v194 = type metadata accessor for URL(0);
  v23 = *(char **)(v194 - 8);
  v24 = __chkstk_darwin(v194);
  v186 = (char *)&v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v193 = (char *)&v174 - v26;
  v27 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v27);
  v29 = (char *)&v174 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = _swiftEmptyArrayStorage;
  v30 = *(_QWORD *)(a1 + 16);
  v31 = v6;
  v189 = v6;
  v182 = v30;
  if (v30)
  {
    v185 = a1 + ((v23[80] + 32) & ~(unint64_t)v23[80]);
    v184 = *((_QWORD *)v23 + 9);
    v183 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v23 + 2);
    v181 = AVMediaTypeText;
    v175 = a1;
    v32 = swift_bridgeObjectRetain(a1);
    v33 = 0;
    v32.n128_u64[0] = 134217984;
    v177 = v32;
    v32.n128_u64[0] = 138412290;
    v176 = v32;
    v201 = v10;
    v199 = v12;
    v207 = v23;
    v178 = v20;
    v209 = v22;
    v180 = v29;
    while (1)
    {
      v192 = v33;
      v35 = v194;
      v183(v29, v185 + v184 * v33, v194);
      v179 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))*((_QWORD *)v23 + 7);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v179)(v29, 0, 1, v35);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v23 + 6))(v29, 1, v35) == 1)
      {
        swift_bridgeObjectRelease(v175);
        v125 = v203;
        v126 = v188;
        goto LABEL_84;
      }
      v36 = (*((uint64_t (**)(char *, char *, uint64_t))v23 + 4))(v193, v29, v35);
      v37 = (uint64_t)v186;
      v38 = URL.deletingPathExtension()(v36);
      v198 = URL.lastPathComponent.getter(v38);
      v200 = v39;
      v191 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v23 + 1);
      v191(v37, v35);
      v40 = objc_allocWithZone((Class)AVURLAsset);
      URL._bridgeToObjectiveC()(v41);
      v43 = v42;
      v20 = (char *)objc_msgSend(v40, "initWithURL:options:", v42, 0);

      v44 = objc_msgSend(v20, "tracksWithMediaType:", v181);
      v45 = sub_1000163BC(0, &qword_1005D85A8, AVAssetTrack_ptr);
      v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v45);

      if ((unint64_t)v46 >> 62)
      {
        if (v46 < 0)
          v121 = v46;
        else
          v121 = v46 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v46);
        v122 = _CocoaArrayWrapper.endIndex.getter(v121);
        swift_bridgeObjectRelease(v46);
        if (!v122)
        {
LABEL_78:
          v37 = (uint64_t)v31;
          swift_bridgeObjectRelease(v200);
          swift_bridgeObjectRelease(v175);
          swift_bridgeObjectRelease(v46);
          if (qword_1005CEC50 == -1)
            goto LABEL_79;
          goto LABEL_107;
        }
      }
      else if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_78;
      }
      v47 = v195;
      if ((v46 & 0xC000000000000001) != 0)
      {
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
      }
      else
      {
        if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_105;
        v48 = *(id *)(v46 + 32);
      }
      v49 = v48;
      swift_bridgeObjectRelease(v46);
      v197 = v49;
      v50 = objc_msgSend(v49, "segments");
      v51 = sub_1000163BC(0, &qword_1005D85B0, AVAssetTrackSegment_ptr);
      v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v51);

      v37 = (uint64_t)sub_1002EFF0C(v52);
      swift_bridgeObjectRelease(v52);
      v53 = v37 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)v37 >> 62)
      {
        if (v37 < 0)
          v123 = v37;
        else
          v123 = v37 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v37);
        if (!_CocoaArrayWrapper.endIndex.getter(v123))
        {
          swift_bridgeObjectRelease(v37);
          Seconds = 0.0;
          goto LABEL_17;
        }
      }
      else
      {
        v54 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v37);
        if (!v54)
        {
          swift_bridgeObjectRelease(v37);
          Seconds = 0.0;
LABEL_23:
          v58 = v20;
          v60 = *(_QWORD *)(v53 + 16);
          if (v60 >= 2)
            goto LABEL_24;
          goto LABEL_21;
        }
      }
      if ((v37 & 0xC000000000000001) != 0)
      {
        v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
      }
      else
      {
        if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_106;
        v55 = *(id *)(v37 + 32);
      }
      v56 = v55;
      swift_bridgeObjectRelease(v37);
      objc_msgSend(v56, "timeMapping");
      time = v215;
      Seconds = CMTimeGetSeconds(&time);

      v53 = v37 & 0xFFFFFFFFFFFFFF8;
      if (!((unint64_t)v37 >> 62))
        goto LABEL_23;
LABEL_17:
      v58 = v20;
      if (v37 < 0)
        v59 = v37;
      else
        v59 = v53;
      swift_bridgeObjectRetain(v37);
      v60 = _CocoaArrayWrapper.endIndex.getter(v59);
      swift_bridgeObjectRelease(v37);
      if (v60 >= 2)
      {
LABEL_24:
        if (qword_1005CEC50 != -1)
          swift_once(&qword_1005CEC50, sub_1002EDF94);
        v61 = type metadata accessor for Logger(0);
        sub_10012A0B0(v61, (uint64_t)qword_1005D8560);
        swift_bridgeObjectRetain(v37);
        v63 = Logger.logObject.getter(v62);
        v65 = static os_log_type_t.error.getter(v63, v64);
        if (os_log_type_enabled(v63, v65))
        {
          v66 = swift_slowAlloc(12, -1);
          *(_DWORD *)v66 = v177.n128_u32[0];
          swift_bridgeObjectRelease(v37);
          *(_QWORD *)(v66 + 4) = v60;
          swift_bridgeObjectRelease(v37);
          _os_log_impl((void *)&_mh_execute_header, v63, v65, "%ld empty edits were found. This is unexpected and can lead to timestamp offsets in the transcript.", (uint8_t *)v66, 0xCu);
          swift_slowDealloc(v66, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v37, 2);
        }
        v12 = v199;
        goto LABEL_30;
      }
LABEL_21:
      swift_bridgeObjectRelease(v37);
LABEL_30:
      v67 = objc_allocWithZone((Class)AVAssetReader);
      time.value = 0;
      v68 = v58;
      v69 = objc_msgSend(v67, "initWithAsset:error:", v68, &time);
      value = time.value;
      v190 = v68;
      if (!v69)
      {
        v108 = (id)time.value;
        v109 = _convertNSErrorToError(_:)(value);

        swift_willThrow(v110);
        swift_bridgeObjectRelease(v200);
        v92 = v68;
        goto LABEL_58;
      }
      v71 = v69;
      v195 = v47;
      v72 = (id)time.value;

      v73 = objc_allocWithZone((Class)AVAssetReaderTrackOutput);
      v74 = objc_msgSend(v73, "initWithTrack:outputSettings:", v197, 0);
      if ((objc_msgSend(v71, "canAddOutput:", v74) & 1) != 0)
      {
        objc_msgSend(v71, "addOutput:", v74);
        objc_msgSend(v71, "startReading");
      }
      v187 = v71;
      v75 = objc_msgSend(v74, "copyNextSampleBuffer");
      v76 = (uint64_t)v178;
      if (!v75)
      {
LABEL_3:
        v191((uint64_t)v193, v194);

        swift_bridgeObjectRelease(v200);
        v31 = v189;
        v29 = v180;
        goto LABEL_4;
      }
      v77 = v75;
      *(_QWORD *)&v206 = v74;
      while (1)
      {
        v78 = CMSampleBufferRef.formatDescription.getter();
        if (v78)
        {
          v79 = (void *)v78;
          v80 = (uint64_t)v209;
          CMFormatDescriptionRef.mediaSubType.getter();

          v81 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))*((_QWORD *)v12 + 7);
          v82 = v81(v80, 0, 1, v11);
        }
        else
        {
          v81 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))*((_QWORD *)v12 + 7);
          v80 = (uint64_t)v209;
          v82 = v81((uint64_t)v209, 1, 1, v11);
        }
        v83 = v12;
        static CMFormatDescriptionRef.MediaSubType.webVTT.getter(v82);
        v81(v76, 0, 1, v11);
        v84 = (uint64_t)v210;
        v85 = (uint64_t)&v210[*((int *)v205 + 12)];
        sub_100012CE8(v80, (uint64_t)v210, &qword_1005D85A0);
        sub_100012CE8(v76, v85, &qword_1005D85A0);
        v20 = v83;
        v86 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v83 + 6);
        if (v86(v84, 1, v11) == 1)
          break;
        v87 = (uint64_t)v204;
        sub_100012CE8(v84, (uint64_t)v204, &qword_1005D85A0);
        if (v86(v85, 1, v11) == 1)
        {
          sub_100012DDC(v76, &qword_1005D85A0);
          sub_100012DDC((uint64_t)v209, &qword_1005D85A0);
          (*((void (**)(uint64_t, uint64_t))v83 + 1))(v87, v11);
LABEL_36:
          sub_100012DDC((uint64_t)v210, &qword_1005D8598);
          v23 = v207;
          goto LABEL_37;
        }
        v88 = v196;
        (*((void (**)(char *, uint64_t, uint64_t))v83 + 4))(v196, v85, v11);
        v89 = sub_100019C6C(&qword_1005D85B8, (uint64_t (*)(uint64_t))&type metadata accessor for CMFormatDescriptionRef.MediaSubType, (uint64_t)&protocol conformance descriptor for CMFormatDescriptionRef.MediaSubType);
        v90 = dispatch thunk of static Equatable.== infix(_:_:)(v204, v88, v11, v89);
        v91 = (void (*)(char *, uint64_t))*((_QWORD *)v83 + 1);
        v91(v88, v11);
        sub_100012DDC(v76, &qword_1005D85A0);
        sub_100012DDC((uint64_t)v209, &qword_1005D85A0);
        v91(v204, v11);
        sub_100012DDC(v84, &qword_1005D85A0);
        v23 = v207;
        if ((v90 & 1) != 0)
          goto LABEL_47;
LABEL_37:

        v12 = v83;
LABEL_38:
        v74 = (id)v206;
        v77 = objc_msgSend((id)v206, "copyNextSampleBuffer");
        if (!v77)
          goto LABEL_3;
      }
      sub_100012DDC(v76, &qword_1005D85A0);
      sub_100012DDC(v80, &qword_1005D85A0);
      if (v86(v85, 1, v11) != 1)
        goto LABEL_36;
      sub_100012DDC((uint64_t)v210, &qword_1005D85A0);
      v23 = v207;
LABEL_47:
      v92 = objc_msgSend((id)objc_opt_self(ICTranscriptionUtilities), "parseWebVTTSampleBuffer:", v77);
      v93 = objc_msgSend(v92, "error");
      if (!v93)
      {
        CMSampleBufferGetPresentationTimeStamp(&time, (CMSampleBufferRef)v77);
        v94 = CMTimeGetSeconds(&time);
        CMSampleBufferGetDuration(&time, (CMSampleBufferRef)v77);
        v95 = CMTimeGetSeconds(&time);
        v96 = objc_msgSend(v92, "text");
        if (v96)
        {
          v97 = v96;
          v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
          v100 = v99;

        }
        else
        {
          v98 = 0;
          v100 = 0xE000000000000000;
        }
        v101 = v201;
        v102 = v200;
        swift_bridgeObjectRetain(v200);
        TranscriptViewModelSegment.init(text:timestamp:duration:speaker:)(v98, v100, v198, v102, Seconds + v94, v95);
        (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v202, v101, v203);
        v103 = (unint64_t)v213;
        if ((swift_isUniquelyReferenced_nonNull_native(v213) & 1) == 0)
          v103 = sub_10016AB98(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
        v105 = *(_QWORD *)(v103 + 16);
        v104 = *(_QWORD *)(v103 + 24);
        if (v105 >= v104 >> 1)
          v103 = sub_10016AB98(v104 > 1, v105 + 1, 1, v103);
        *(_QWORD *)(v103 + 16) = v105 + 1;
        v106 = v208;
        v107 = v203;
        (*(void (**)(unint64_t, char *, uint64_t))(v208 + 32))(v103+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v105, v202, v203);

        v213 = (_QWORD *)v103;
        (*(void (**)(char *, uint64_t))(v106 + 8))(v201, v107);
        v12 = v199;
        v23 = v207;
        goto LABEL_38;
      }
      v109 = (uint64_t)v93;
      v111 = swift_bridgeObjectRelease(v200);
      swift_willThrow(v111);

LABEL_58:
      if (qword_1005CEC50 != -1)
        swift_once(&qword_1005CEC50, sub_1002EDF94);
      v195 = 0;
      v112 = type metadata accessor for Logger(0);
      sub_10012A0B0(v112, (uint64_t)qword_1005D8560);
      swift_errorRetain(v109);
      v113 = swift_errorRetain(v109);
      v114 = Logger.logObject.getter(v113);
      v116 = static os_log_type_t.error.getter(v114, v115);
      if (os_log_type_enabled(v114, v116))
      {
        v117 = swift_slowAlloc(12, -1);
        v118 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v117 = v176.n128_u32[0];
        swift_errorRetain(v109);
        v119 = _swift_stdlib_bridgeErrorToNSError(v109);
        *(_QWORD *)(v117 + 4) = v119;
        *v118 = v119;
        swift_errorRelease(v109);
        swift_errorRelease(v109);
        _os_log_impl((void *)&_mh_execute_header, v114, v116, "Error setting up asset reader for call recording: %@", (uint8_t *)v117, 0xCu);
        v120 = sub_100012E18(&qword_1005D3A30);
        swift_arrayDestroy(v118, 1, v120);
        swift_slowDealloc(v118, -1, -1);
        swift_slowDealloc(v117, -1, -1);

      }
      else
      {

        swift_errorRelease(v109);
        swift_errorRelease(v109);
      }
      v31 = v189;
      v12 = v199;
      v29 = v180;
      swift_errorRelease(v109);

      v191((uint64_t)v193, v194);
LABEL_4:
      v33 = v192 + 1;
      if (v192 + 1 == v182)
      {
        v125 = v203;
        v126 = v188;
        a1 = v175;
        v124 = v179;
        goto LABEL_83;
      }
    }
  }
  v124 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))*((_QWORD *)v23 + 7);
  v34 = swift_bridgeObjectRetain(a1);
  v125 = v203;
  v126 = v188;
LABEL_83:
  v124(v29, 1, 1, v194, v34);
  swift_bridgeObjectRelease(a1);
LABEL_84:
  v37 = (uint64_t)v31;
  while (1)
  {
    sub_1002EEAAC((unint64_t *)&v213);
    result = v213;
    v139 = (uint64_t)v213[2] <= 1 ? 1 : v213[2];
    if (v139 == 1)
      return result;
    v207 = &v212;
    v140 = 1;
    v210 = (char *)0x80000001004879C0;
    *(_QWORD *)&v137 = 136315138;
    v206 = v137;
    v205 = (char *)&type metadata for Any + 8;
    v209 = (char *)v139;
    while (1)
    {
      v142 = v213[2];
      if (v140 - 1 >= v142)
        break;
      v20 = (char *)v213
          + ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80));
      v143 = *(_QWORD *)(v208 + 72);
      v144 = *(void (**)(uint64_t, char *, uint64_t))(v208 + 16);
      v144(v37, &v20[v143 * (v140 - 1)], v125);
      if (v140 >= v142)
        goto LABEL_104;
      v145 = ((uint64_t (*)(char *, char *, uint64_t))v144)(v126, &v20[v143 * v140], v125);
      v146 = TranscriptViewModelSegment.timestamp.getter(v145);
      v147 = TranscriptViewModelSegment.duration.getter();
      if (TranscriptViewModelSegment.timestamp.getter(v147) >= v146 + v148)
      {
        v141 = *(void (**)(char *, uint64_t))(v208 + 8);
        v141(v126, v125);
      }
      else
      {
        time.value = 0;
        *(_QWORD *)&time.timescale = 0xE000000000000000;
        _StringGuts.grow(_:)(99);
        v149._countAndFlagsBits = 0xD00000000000002DLL;
        v149._object = v210;
        String.append(_:)(v149);
        v211 = v140 - 1;
        v20 = (char *)&type metadata for Int;
        v150._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v150._object;
        String.append(_:)(v150);
        swift_bridgeObjectRelease(object);
        v152._countAndFlagsBits = 0x20646E6120;
        v152._object = (void *)0xE500000000000000;
        String.append(_:)(v152);
        v211 = v140;
        v153._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v154 = v153._object;
        String.append(_:)(v153);
        swift_bridgeObjectRelease(v154);
        v155._countAndFlagsBits = 0x65530A2D2D2D0A2ELL;
        v155._object = (void *)0xEF2320746E656D67;
        String.append(_:)(v155);
        v211 = v140 - 1;
        v156._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v157 = v156._object;
        String.append(_:)(v156);
        swift_bridgeObjectRelease(v157);
        v158._countAndFlagsBits = 8250;
        v158._object = (void *)0xE200000000000000;
        String.append(_:)(v158);
        _print_unlocked<A, B>(_:_:)(v37, &time, v125, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v159._countAndFlagsBits = 0x6765530A2D2D2D0ALL;
        v159._object = (void *)0xEE002320746E656DLL;
        String.append(_:)(v159);
        v211 = v140;
        v160._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v161 = v160._object;
        String.append(_:)(v160);
        swift_bridgeObjectRelease(v161);
        v162._countAndFlagsBits = 8250;
        v162._object = (void *)0xE200000000000000;
        String.append(_:)(v162);
        _print_unlocked<A, B>(_:_:)(v126, &time, v125, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v163._countAndFlagsBits = 757935370;
        v163._object = (void *)0xE400000000000000;
        String.append(_:)(v163);
        v165 = time.value;
        v164 = *(_QWORD *)&time.timescale;
        if (qword_1005CEC50 != -1)
          swift_once(&qword_1005CEC50, sub_1002EDF94);
        v166 = type metadata accessor for Logger(0);
        sub_10012A0B0(v166, (uint64_t)qword_1005D8560);
        swift_bridgeObjectRetain(v164);
        v168 = Logger.logObject.getter(v167);
        v170 = static os_log_type_t.error.getter(v168, v169);
        v171 = os_log_type_enabled(v168, v170);
        v139 = (uint64_t)v209;
        if (v171)
        {
          v172 = (uint8_t *)swift_slowAlloc(12, -1);
          v173 = swift_slowAlloc(32, -1);
          time.value = v173;
          *(_DWORD *)v172 = v206;
          v20 = (char *)(v172 + 4);
          swift_bridgeObjectRetain(v164);
          v211 = sub_1003A4190(v165, v164, &time.value);
          v37 = (uint64_t)v189;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, v207, v172 + 4);
          swift_bridgeObjectRelease_n(v164, 3);
          _os_log_impl((void *)&_mh_execute_header, v168, v170, "%s", v172, 0xCu);
          swift_arrayDestroy(v173, 1, v205);
          swift_slowDealloc(v173, -1, -1);
          swift_slowDealloc(v172, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n(v164, 2);
        }

        v141 = *(void (**)(char *, uint64_t))(v208 + 8);
        v126 = v188;
        v125 = v203;
        v141(v188, v203);
      }
      v141((char *)v37, v125);
      if (v139 == ++v140)
        return v213;
    }
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    swift_once(&qword_1005CEC50, sub_1002EDF94);
LABEL_79:
    v127 = type metadata accessor for Logger(0);
    v128 = sub_10012A0B0(v127, (uint64_t)qword_1005D8560);
    v129 = Logger.logObject.getter(v128);
    v131 = static os_log_type_t.error.getter(v129, v130);
    v132 = os_log_type_enabled(v129, v131);
    v125 = v203;
    v126 = v188;
    v133 = v194;
    if (v132)
    {
      v134 = v20;
      v135 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v135 = 0;
      _os_log_impl((void *)&_mh_execute_header, v129, v131, "No text track found for call recording", v135, 2u);
      v136 = v135;
      v20 = v134;
      swift_slowDealloc(v136, -1, -1);
    }

    v191((uint64_t)v193, v133);
  }
}

uint64_t sub_1002F167C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = v7 + v5;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16), v9);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v6);
}

uint64_t sub_1002F1720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = v1[5];
  v11 = (uint64_t)v1 + v6;
  v12 = (uint64_t)v1 + ((*(_QWORD *)(v4 + 64) + v5 + v6) & ~v5);
  v13 = (_QWORD *)swift_task_alloc(dword_1005D857C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_100145358;
  return sub_1002EDFE0(a1, v7, v8, v9, v10, v11, v12);
}

void _s11MobileNotes21CallRecordingImporterV031importTranscriptionAndSummarizecD010attachment25updatedTranscriptSegments8mediaURLySo12ICAttachmentC_Say0B6Shared0L16ViewModelSegmentVG10Foundation0O0VtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  NSURL *v33;
  NSObject *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  char v50[24];
  uint64_t v51;
  uint64_t v52;
  id v53[3];
  id v54;

  v4 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = 0;
  v7 = objc_msgSend(a1, "audioModel");
  if (v7)
  {
    v8 = v7;
    v53[0] = 0;
    v9 = objc_msgSend(v7, "createSubattachmentForRecordingAndReturnError:", v53);

    v10 = v53[0];
    if (!v9)
    {
      v11 = v10;
      v12 = _convertNSErrorToError(_:)(v10);

      swift_willThrow(v13);
      if (qword_1005CEC50 != -1)
        swift_once(&qword_1005CEC50, sub_1002EDF94);
      v14 = type metadata accessor for Logger(0);
      v15 = sub_10012A0B0(v14, (uint64_t)qword_1005D8560);
      v16 = Logger.logObject.getter(v15);
      v18 = static os_log_type_t.error.getter(v16, v17);
      if (os_log_type_enabled(v16, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v18, "could not create subattachment for call recording", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }
      swift_errorRelease(v12);
      goto LABEL_20;
    }
  }
  else
  {
    v9 = 0;
  }
  v54 = v9;
  if (qword_1005CEC50 != -1)
    swift_once(&qword_1005CEC50, sub_1002EDF94);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_10012A0B0(v20, (uint64_t)qword_1005D8560);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v48 = a1;
    v49 = v6;
    v24 = a2;
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = (void *)swift_slowAlloc(32, -1);
    v53[0] = v26;
    *(_DWORD *)v25 = 136315138;
    swift_beginAccess(&v54, v50, 0, 0);
    if (v54 && (v27 = objc_msgSend(v54, "identifier")) != 0)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0xE000000000000000;
    }
    v51 = sub_1003A4190(v29, v31, (uint64_t *)v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v25 + 4);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "created subattchment for call recording. %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    a2 = v24;
    a1 = v48;
    v6 = v49;
  }
  else
  {

  }
  swift_beginAccess(&v54, v53, 0, 0);
  if (v54)
  {
    v32 = v54;
    URL._bridgeToObjectiveC()(v33);
    v16 = v34;

LABEL_20:
  }
  swift_beginAccess(&v54, &v51, 0, 0);
  if (v54)
  {
    v35 = v54;
    v36 = objc_msgSend(a1, "audioModel");
    if (v36)
    {
      v37 = v36;
      ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:)(a2, v35);

    }
    if (qword_1005CEC50 != -1)
      swift_once(&qword_1005CEC50, sub_1002EDF94);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_10012A0B0(v38, (uint64_t)qword_1005D8560);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "saved call recording model data to subattachment", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }

    v43 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v6, 1, 1, v43);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(a2);
    v44 = a1;
    v45 = static MainActor.shared.getter(v44);
    v46 = (_QWORD *)swift_allocObject(&unk_100566E98, 48, 7);
    v46[2] = v45;
    v46[3] = &protocol witness table for MainActor;
    v46[4] = a2;
    v46[5] = v44;
    v47 = sub_1002EDE48((uint64_t)v6, (uint64_t)&unk_1005D8590, (uint64_t)v46);

    swift_release(v47);
  }
}

ValueMetadata *type metadata accessor for CallRecordingImporter()
{
  return &type metadata for CallRecordingImporter;
}

uint64_t sub_1002F1E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));

  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_1002F1E4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D858C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  return sub_1002EE2EC(a1, v4, v5, v7, v6);
}

uint64_t sub_1002F1EC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1002F1EE8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_10013723C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, "maximumDistanceToLeafFolder");

      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_10013723C(v8 > 1, v9 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1002F2048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, "visibleNotes");
      v8 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

      sub_1001D9910(v9);
      ++v3;
      if (v6 == v2)
        goto LABEL_15;
    }
    __break(1u);
LABEL_11:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

id sub_1002F21A8(uint64_t a1, SEL *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, *a2);

      if ((v9 & 1) == 0)
      {
        ++v5;
        if (v8 != v4)
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v9 = 0;
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v9;
}

char *sub_1002F22A0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  id v45;
  void **v46;
  Class isa;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  objc_class *ObjectType;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  objc_super v70;
  void **aBlock;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = sub_100012E18(&qword_1005D1C20);
  v7 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  v8 = v7;
  v68 = v7;
  __chkstk_darwin(v6);
  v67 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100012E18(&qword_1005D8608);
  v10 = *(_QWORD *)(v62 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v62);
  v13 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - v14;
  v65 = v3;
  *(_QWORD *)&v3[OBJC_IVAR___ICMoveDataSource_accountsChangeObservation] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(&v3[OBJC_IVAR___ICMoveDataSource____lazy_storage___accountsChangePublisher], 1, 1, v6);
  v64 = sub_1002F5130(a1, a2);
  v61 = sub_1002F28E4(a1, v64, a2);
  v69 = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v19 = v18;
  v20 = swift_allocObject(&unk_100566EE8, 32, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  v21 = type metadata accessor for MoveHeaderView();
  v22 = a1;
  swift_bridgeObjectRetain(a2);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v17, v19, sub_1002F53AC, v20, v21);
  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v24 = v62;
  v23(v13, v15, v62);
  v25 = *(unsigned __int8 *)(v10 + 80);
  v26 = (v25 + 24) & ~v25;
  v27 = swift_allocObject(&unk_100566F10, v26 + v11, v25 | 7);
  *(_QWORD *)(v27 + 16) = v22;
  v23((char *)(v27 + v26), v13, v24);
  v28 = v22;
  swift_bridgeObjectRelease(a2);
  v29 = v69;
  v75 = v61;
  v76 = v69;
  aBlock = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_1002A9E30;
  v74 = &unk_100566F28;
  v30 = _Block_copy(&aBlock);
  v31 = v76;
  swift_retain(v29);
  swift_release(v31);
  v32 = v64;
  v70.receiver = v65;
  v70.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v70, "initWithCollectionView:cellProvider:indexer:", v28, v30, v64);
  _Block_release(v30);
  v34 = v33;
  v35 = objc_msgSend(v34, "collectionViewDiffableDataSource");
  v75 = sub_1002F542C;
  v76 = v27;
  aBlock = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_1002F2FE4;
  v74 = &unk_100566F50;
  v36 = _Block_copy(&aBlock);
  v37 = v76;
  swift_retain(v27);
  swift_release(v37);
  objc_msgSend(v35, "setSupplementaryViewProvider:", v36);
  _Block_release(v36);

  v38 = (void *)objc_opt_self(UIDevice);
  v39 = v34;
  if (objc_msgSend(v38, "ic_isVision"))
    v40 = 2;
  else
    v40 = 0;
  objc_msgSend(v39, "setAutoExpandMode:", v40);

  v41 = sub_100012E18(&qword_1005CF6F0);
  v42 = swift_allocObject(v41, 40, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100456F30;
  v43 = objc_allocWithZone((Class)NSNumber);
  v44 = (char *)v39;
  v45 = objc_msgSend(v43, "initWithUnsignedInteger:", 1);
  *(_QWORD *)(v42 + 32) = v45;
  aBlock = (void **)v42;
  specialized Array._endMutation()(v45);
  v46 = aBlock;
  sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v44, "setSectionTypes:", isa, swift_bridgeObjectRelease(v46).n128_f64[0]);

  v48 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDiffableDataSourceSectionSnapshotHandlers), "init");
  v49 = swift_allocObject(&unk_100566F88, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, v44);
  v75 = sub_1002F54BC;
  v76 = v49;
  aBlock = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_1002F30D8;
  v74 = &unk_100566FA0;
  v50 = _Block_copy(&aBlock);
  swift_release(v76);
  objc_msgSend(v48, "setWillExpandItemHandler:", v50);
  _Block_release(v50);
  v51 = swift_allocObject(&unk_100566F88, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v44);
  v75 = sub_1002F54DC;
  v76 = v51;
  aBlock = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_1002F30D8;
  v74 = &unk_100566FC8;
  v52 = _Block_copy(&aBlock);
  swift_release(v76);
  objc_msgSend(v48, "setWillCollapseItemHandler:", v52);
  _Block_release(v52);
  v53 = objc_msgSend(v44, "collectionViewDiffableDataSource");
  objc_msgSend(v53, "setSectionSnapshotHandlers:", v48);

  v54 = v67;
  sub_1002F3208(v67);
  v55 = swift_allocObject(&unk_100566F88, 24, 7);
  swift_unknownObjectWeakInit(v55 + 16, v44);
  v56 = sub_100016638(&qword_1005D1C38, &qword_1005D1C20, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v57 = v66;
  v58 = Publisher<>.sink(receiveValue:)(sub_100176688, v55, v66, v56);
  swift_release(v69);
  swift_release(v27);

  swift_release(v55);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v54, v57);
  v59 = *(_QWORD *)&v44[OBJC_IVAR___ICMoveDataSource_accountsChangeObservation];
  *(_QWORD *)&v44[OBJC_IVAR___ICMoveDataSource_accountsChangeObservation] = v58;
  swift_release(v59);
  return v44;
}

uint64_t (*sub_1002F28E4(void *a1, void *a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char **v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char **v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*result)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  unsigned __int8 v29;
  char **v30;
  unsigned int v31;
  Swift::String v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  Swift::String v38;
  char *v39;
  void (*v40)(_QWORD, _QWORD, _QWORD);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char **v60;
  uint64_t v61;
  char *v62;
  char **v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(_QWORD, _QWORD, _QWORD);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char **v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char **v93;
  char **v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;

  v77 = a2;
  v99 = a1;
  v4 = (char **)sub_100012E18(&qword_1005D1C28);
  v91 = (uint64_t)*(v4 - 1);
  v5 = *(char **)(v91 + 64);
  v6 = __chkstk_darwin(v4);
  v7 = (char *)&v76 - ((unint64_t)(v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v87 = (char *)&v76 - v8;
  v9 = (char **)sub_100012E18(&qword_1005D8618);
  v88 = (uint64_t)*(v9 - 1);
  v10 = *(char ***)(v88 + 64);
  v11 = __chkstk_darwin(v9);
  v97 = (char *)&v76 - (((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v82 = (char *)&v76 - v12;
  v90 = sub_100012E18(&qword_1005D8620);
  v83 = *(_QWORD *)(v90 - 8);
  v13 = __chkstk_darwin(v90);
  v96 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v14;
  __chkstk_darwin(v13);
  v79 = (char *)&v76 - v15;
  v86 = sub_100012E18(&qword_1005D8628);
  v80 = *(_QWORD *)(v86 - 8);
  v16 = __chkstk_darwin(v86);
  v95 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v17;
  __chkstk_darwin(v16);
  v78 = (char *)&v76 - v18;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v19 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v20 = _swiftEmptyArrayStorage;
    v93 = v9;
    v94 = v4;
    v98 = v7;
    v92 = v5;
    v89 = v10;
    if (!v19)
    {
LABEL_15:
      v39 = v87;
      v40 = v84;
      v41 = v77;
      v42 = swift_allocObject(&unk_100567000, 24, 7);
      *(_QWORD *)(v42 + 16) = v41;
      v43 = sub_1000163BC(0, &qword_1005D8630, &off_10054E040);
      v44 = sub_1000163BC(0, &qword_1005D8638, ICFolderListSectionIdentifier_ptr);
      v45 = v41;
      v46 = v78;
      UICollectionView.CellRegistration.init(handler:)(sub_1002F5520, v42, v43, v44);
      v47 = swift_allocObject(&unk_100567028, 24, 7);
      *(_QWORD *)(v47 + 16) = v20;
      v48 = sub_1000163BC(0, &qword_1005D1C30, &off_10054DDE8);
      v49 = sub_1000163BC(0, &qword_1005D1650, ICVirtualSmartFolderItemIdentifier_ptr);
      swift_bridgeObjectRetain(v20);
      v50 = v79;
      UICollectionView.CellRegistration.init(handler:)(sub_1002F554C, v47, v48, v49);
      v51 = v82;
      v52 = v99;
      sub_1002F3854(v99, (uint64_t)v20);
      v53 = (_QWORD *)swift_allocObject(&unk_100567050, 40, 7);
      v53[2] = v40;
      v53[3] = v52;
      v53[4] = v20;
      v54 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
      v99 = v52;
      UICollectionView.CellRegistration.init(handler:)(sub_1002F5580, v53, v48, v54);
      v55 = v80;
      v87 = *(char **)(v80 + 32);
      v56 = v86;
      ((void (*)(char *, char *, uint64_t))v87)(v95, v46, v86);
      v57 = v83;
      v84 = *(void (**)(_QWORD, _QWORD, _QWORD))(v83 + 32);
      v58 = v90;
      v84(v96, v50, v90);
      v59 = v88;
      v79 = *(char **)(v88 + 32);
      v60 = v93;
      ((void (*)(char *, char *, char **))v79)(v97, v51, v93);
      v61 = v91;
      v82 = *(char **)(v91 + 32);
      v62 = v39;
      v63 = v94;
      ((void (*)(char *, char *, char **))v82)(v98, v62, v94);
      v64 = *(unsigned __int8 *)(v55 + 80);
      v65 = (v64 + 24) & ~v64;
      v66 = *(unsigned __int8 *)(v57 + 80);
      v67 = (v81 + v66 + v65) & ~v66;
      v68 = *(unsigned __int8 *)(v59 + 80);
      v69 = (v85 + v68 + v67) & ~v68;
      v70 = *(unsigned __int8 *)(v61 + 80);
      v71 = ((unint64_t)v89 + v70 + v69) & ~v70;
      v72 = swift_allocObject(&unk_100567078, &v92[v71], v64 | v66 | v68 | v70 | 7);
      v73 = v99;
      *(_QWORD *)(v72 + 16) = v99;
      ((void (*)(uint64_t, char *, uint64_t))v87)(v72 + v65, v95, v56);
      v84(v72 + v67, v96, v58);
      ((void (*)(uint64_t, char *, char **))v79)(v72 + v69, v97, v60);
      ((void (*)(unint64_t, char *, char **))v82)(v72 + v71, v98, v63);
      v74 = v73;
      return sub_1002F56E0;
    }
    v102 = _swiftEmptyArrayStorage;
    result = (uint64_t (*)(uint64_t, uint64_t, uint64_t))specialized ContiguousArray.reserveCapacity(_:)(v19);
    if (v19 < 0)
      break;
    v22 = 0;
    v7 = (char *)(a3 & 0xC000000000000001);
    v9 = &selRef_filteredSections;
    v10 = &selRef_modernManagedObjectContext;
    v4 = &selRef_lastRunNotesVersionKey;
    while (v19 != v22)
    {
      if (v7)
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, a3);
      else
        v27 = *(id *)(a3 + 8 * v22 + 32);
      v28 = v27;
      v29 = objc_msgSend(v27, "ic_isModernType");
      v30 = &selRef_modernManagedObjectContext;
      if ((v29 & 1) == 0)
      {
        v31 = objc_msgSend(v28, "ic_isLegacyType");
        v30 = &selRef_legacyManagedObjectContext;
        if (!v31)
        {
          v100 = 0;
          v101 = 0xE000000000000000;
          _StringGuts.grow(_:)(54);
          v32._object = (void *)0x8000000100487AA0;
          v32._countAndFlagsBits = 0xD000000000000033;
          String.append(_:)(v32);
          v33 = objc_msgSend(v28, "description");
          v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
          v36 = v35;

          v37._countAndFlagsBits = v34;
          v37._object = v36;
          String.append(_:)(v37);
          swift_bridgeObjectRelease(v36);
          v38._countAndFlagsBits = 125;
          v38._object = (void *)0xE100000000000000;
          String.append(_:)(v38);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v100, v101, "MobileNotes/MoveDataSource.swift", 32, 2, 50, 0);
          __break(1u);
LABEL_14:
          v20 = v102;
          goto LABEL_15;
        }
      }
      ++v22;
      v23 = objc_msgSend(v99, *v30);
      v5 = (char *)objc_msgSend(v23, "objectWithID:", v28);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v25 = v102[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
      v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v5);
      specialized ContiguousArray._endMutation()(v26);
      if (v19 == v22)
        goto LABEL_14;
    }
    __break(1u);
LABEL_17:
    if (a3 < 0)
      v75 = a3;
    else
      v75 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(a3);
  }
  __break(1u);
  return result;
}

id sub_1002F2FE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v19;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(uint64_t (**)(void))(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  swift_retain(v12);
  v16 = a2;
  v17 = (void *)v13();

  swift_release(v12);
  swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v17;
}

uint64_t sub_1002F30D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(_QWORD *, __n128);
  __n128 v5;
  _QWORD v7[4];

  v4 = *(void (**)(_QWORD *, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v7[3] = swift_getObjectType(a2);
  v7[0] = a2;
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v7, v5);
  swift_release(v3);
  return sub_1000153C0(v7);
}

void sub_1002F3140(_QWORD *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, *a3);

    if (v8)
    {
      v9 = a1[3];
      v10 = sub_10012D19C(a1, v9);
      _Block_copy(v8);
      v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v9);
      (*((void (**)(id, uint64_t))v8 + 2))(v8, v11);
      swift_unknownObjectRelease(v11, v12);
      _Block_release(v8);
      _Block_release(v8);
    }
  }
}

void sub_1002F3208(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44[3];
  char v45[24];

  v3 = sub_100012E18(&qword_1005D1C40);
  __chkstk_darwin(v3);
  v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = sub_100012E18(&qword_1005D1C48);
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D1C50);
  v16 = __chkstk_darwin(v15);
  v39 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v36 - v18;
  v20 = v1 + OBJC_IVAR___ICMoveDataSource____lazy_storage___accountsChangePublisher;
  swift_beginAccess(v1 + OBJC_IVAR___ICMoveDataSource____lazy_storage___accountsChangePublisher, v45, 0, 0);
  sub_100176690(v20, (uint64_t)v19);
  v21 = sub_100012E18(&qword_1005D1C20);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) == 1)
  {
    sub_100012DDC((uint64_t)v19, &qword_1005D1C50);
    v23 = (void *)objc_opt_self(NSNotificationCenter);
    v36 = a1;
    v24 = objc_msgSend(v23, "defaultCenter");
    NSNotificationCenter.publisher(for:object:)(ICAccountsDidChangeNotification, 0);

    v25 = objc_msgSend(v23, "defaultCenter");
    NSNotificationCenter.publisher(for:object:)(ICLocalAccountDidChooseToMigrateNotification, 0);

    v26 = sub_1001766D8();
    Publishers.Merge.init(_:_:)(v11, v9, v6, v6, v26, v26);
    v27 = v40;
    static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(300);
    v44[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    v29 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v42, 1, 1, v28);
    v30 = sub_1000163BC(0, &qword_1005D1C58, NSRunLoop_ptr);
    v31 = sub_100016638(&qword_1005D1C60, &qword_1005D1C48, (uint64_t)&protocol conformance descriptor for Publishers.Merge<A, B>);
    v32 = sub_100176720();
    v33 = v36;
    v34 = v38;
    Publisher.debounce<A>(for:scheduler:options:)(v27, v44, v29, v38, v30, v31, v32);
    sub_100012DDC(v29, &qword_1005D1C40);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v43);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v34);
    v35 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v39, v33, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v35, 0, 1, v21);
    swift_beginAccess(v20, v44, 33, 0);
    sub_100176778(v35, v20);
    swift_endAccess(v44);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(a1, v19, v21);
  }
}

id sub_1002F369C(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v6;
  id v7;
  id result;

  v6 = *a3;
  objc_msgSend(a1, "setDisplayGenericTitle:", 0);
  v7 = objc_msgSend(a4, "countOfLegacyAccounts");
  result = objc_msgSend(a4, "countOfModernAccounts");
  if (__OFADD__(v7, result))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a1, "setDisplayDisclosure:", (uint64_t)result + (uint64_t)v7 > 0);
    return objc_msgSend(a1, "setFolderListSectionIdentifier:", v6);
  }
  return result;
}

void sub_1002F3730(void *a1, uint64_t a2, void **a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  Class isa;
  id v10;
  id v11;

  v5 = *a3;
  v6 = sub_1002B0348(a4);
  v7 = objc_allocWithZone((Class)ICMoveDecision);
  v8 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v10 = v8;
  v11 = objc_msgSend(v7, "initWithSourceObjects:destination:", isa, v10);

  objc_msgSend(a1, "setForceDisabledAppearance:", objc_msgSend(v11, "shouldMove") ^ 1);
  objc_msgSend(a1, "setHasGroupInset:", 1);
  objc_msgSend(a1, "setHasDisclosureIndicator:", 0);
  objc_msgSend(a1, "setShowsNoteCount:", 0);
  objc_msgSend(a1, "setVirtualSmartFolder:", v10);

}

void sub_1002F3854(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t j;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  CFIndex (__cdecl **v23)(CFArrayRef);
  uint64_t v24;
  uint64_t k;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t inited;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t m;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  int64x2_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64x2_t *v64;
  int64x2_t v65;
  uint64_t v66;
  int64x2_t v67;
  int8x16_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unsigned __int8 v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v82;
  char v83[40];
  uint64_t v84;

  v84 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v21 = a2;
    else
      v21 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v21);
    if (!v3)
      goto LABEL_23;
  }
  else
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (!v3)
      goto LABEL_23;
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_81;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      v6 = objc_opt_self(ICCloudSyncingObject);
      v7 = swift_dynamicCastObjCClass(v5, v6);
      if (v7)
      {
        v9 = v7;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v11 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v10 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v11 >= v10 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
        specialized Array._endMutation()(v12);
      }
      else
      {
        swift_unknownObjectRelease(v5, v8);
      }
    }
  }
  else
  {
    for (j = 0; j != v3; ++j)
    {
      v15 = *(void **)(a2 + 8 * j + 32);
      v16 = objc_opt_self(ICCloudSyncingObject);
      v17 = swift_dynamicCastObjCClass(v15, v16);
      if (v17)
      {
        v18 = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v20 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
        specialized Array._endMutation()(v14);
      }
    }
  }
LABEL_23:
  swift_bridgeObjectRelease(a2);
  v22 = v84;
  v84 = (uint64_t)_swiftEmptyArrayStorage;
  v23 = &CFArrayGetCount_ptr;
  if (!((unint64_t)v22 >> 62))
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    if (v24)
      goto LABEL_25;
LABEL_41:
    swift_bridgeObjectRelease(v22);
    v34 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_42;
  }
  if (v22 < 0)
    v35 = v22;
  else
    v35 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v24 = _CocoaArrayWrapper.endIndex.getter(v35);
  if (!v24)
    goto LABEL_41;
LABEL_25:
  if (v24 < 1)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  for (k = 0; k != v24; ++k)
  {
    if ((v22 & 0xC000000000000001) != 0)
      v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v22);
    else
      v26 = *(id *)(v22 + 8 * k + 32);
    v27 = v26;
    v28 = objc_opt_self(ICFolder);
    v29 = swift_dynamicCastObjCClass(v27, v28);
    if (v29)
    {
      v30 = v29;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v32 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v32 >= v31 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
      v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
      specialized Array._endMutation()(v33);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v22);
  v34 = v84;
LABEL_42:
  v84 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v34 >> 62))
  {
    v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v34);
    if (v36)
      goto LABEL_44;
LABEL_55:
    swift_bridgeObjectRelease_n(v34, 2);
    v46 = _swiftEmptyArrayStorage;
    goto LABEL_56;
  }
  if (v34 < 0)
    v47 = v34;
  else
    v47 = v34 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v34);
  v36 = _CocoaArrayWrapper.endIndex.getter(v47);
  if (!v36)
    goto LABEL_55;
LABEL_44:
  if (v36 >= 1)
  {
    v37 = 0;
    do
    {
      if ((v34 & 0xC000000000000001) != 0)
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v34);
      else
        v38 = *(id *)(v34 + 8 * v37 + 32);
      v39 = v38;
      ++v37;
      v40 = sub_100012E18(&qword_1005CF6F0);
      inited = swift_initStackObject(v40, v83);
      *(_OWORD *)(inited + 16) = xmmword_100456F30;
      *(_QWORD *)(inited + 32) = v39;
      v82 = inited;
      specialized Array._endMutation()(inited);
      v42 = v39;
      v43 = objc_msgSend(v42, "recursiveVisibleSubfolders");
      v44 = sub_1000163BC(0, (unint64_t *)&unk_1005D90A0, ICFolder_ptr);
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);

      sub_1001D991C(v45);
      sub_1001D991C(v82);
    }
    while (v36 != v37);
    swift_bridgeObjectRelease_n(v34, 2);
    v46 = (_QWORD *)v84;
    v23 = &CFArrayGetCount_ptr;
LABEL_56:
    v48 = _swiftEmptyArrayStorage;
    v84 = (uint64_t)_swiftEmptyArrayStorage;
    if (v24)
    {
      swift_bridgeObjectRetain(v22);
      for (m = 0; m != v24; ++m)
      {
        if ((v22 & 0xC000000000000001) != 0)
          v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(m, v22);
        else
          v50 = *(id *)(v22 + 8 * m + 32);
        v51 = v50;
        v52 = objc_opt_self(ICNote);
        v53 = swift_dynamicCastObjCClass(v51, v52);
        if (v53)
        {
          v54 = v53;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          v56 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v55 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v56 >= v55 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
          v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
          specialized Array._endMutation()(v57);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v22);
      v48 = (_QWORD *)v84;
    }
    v58 = sub_1002F2048((uint64_t)v46);
    v84 = (uint64_t)v48;
    sub_1001D9910((uint64_t)v58);
    v59 = v84;
    v60 = (int64x2_t *)sub_1002F1EE8((uint64_t)v46);
    v61 = v60[1].u64[0];
    if (v61)
    {
      if (v61 < 4)
      {
        v62 = 0;
        v63 = 0;
        goto LABEL_75;
      }
      v62 = v61 & 0x7FFFFFFFFFFFFFFCLL;
      v64 = v60 + 3;
      v65 = 0uLL;
      v66 = v61 & 0x7FFFFFFFFFFFFFFCLL;
      v67 = 0uLL;
      do
      {
        v65 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v64[-1], v65), (int8x16_t)v64[-1], (int8x16_t)v65);
        v67 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(*v64, v67), *(int8x16_t *)v64, (int8x16_t)v67);
        v64 += 2;
        v66 -= 4;
      }
      while (v66);
      v68 = vbslq_s8((int8x16_t)vcgtq_s64(v65, v67), (int8x16_t)v65, (int8x16_t)v67);
      v69 = vextq_s8(v68, v68, 8uLL).u64[0];
      v63 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v68.i64[0], v69), *(int8x8_t *)v68.i8, (int8x8_t)v69);
      if (v61 != v62)
      {
LABEL_75:
        v70 = v61 - v62;
        v71 = &v60[2].i64[v62];
        do
        {
          v73 = *v71++;
          v72 = v73;
          if (v73 > v63)
            v63 = v72;
          --v70;
        }
        while (v70);
      }
    }
    else
    {
      v63 = 0;
    }
    swift_bridgeObjectRelease(v60);
    v74 = v63 >= (uint64_t)objc_msgSend((id)objc_opt_self(v23[441]), "folderDepthLimit");
    v75 = sub_1002F21A8((uint64_t)v46, (SEL *)&selRef_isSmartFolder);
    swift_bridgeObjectRelease(v46);
    v76 = sub_1002F21A8(v59, (SEL *)&selRef_isPasswordProtected);
    swift_bridgeObjectRelease(v59);
    v77 = swift_allocObject(&unk_1005670A0, 40, 7);
    *(_QWORD *)(v77 + 16) = v22;
    *(_BYTE *)(v77 + 24) = v74;
    *(_BYTE *)(v77 + 25) = v75 & 1;
    *(_BYTE *)(v77 + 26) = v76 & 1;
    *(_QWORD *)(v77 + 32) = a1;
    v78 = sub_1000163BC(0, &qword_1005CFE50, UICollectionViewListCell_ptr);
    v79 = sub_1000163BC(0, &qword_1005D9890, ICButtonItemIdentifier_ptr);
    v80 = a1;
    UICollectionView.CellRegistration.init(handler:)(sub_1002F595C, v77, v78, v79);
    return;
  }
LABEL_82:
  __break(1u);
  __break(1u);
}

uint64_t sub_1002F3F4C(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, int a5, int a6, int a7, void *a8)
{
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  char v30;
  char v31;
  double v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  void *v50;
  id v51;
  void (*v52)(_QWORD *, _QWORD);
  UIAccessibilityTraits v53;
  unint64_t v54;
  UIAccessibilityTraits v55;
  _QWORD *v56;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  void *v63;
  id v64;
  char *v65;
  int v66;
  unint64_t v67;
  id v68;
  _QWORD v69[5];

  v63 = a8;
  HIDWORD(v58) = a7;
  v62 = a6;
  v66 = a5;
  v11 = type metadata accessor for UIListContentConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *a3;
  v15 = objc_msgSend(v64, "parentIdentifier");
  if (v15)
  {
    v16 = v15;
    v17 = objc_opt_self(ICFolderListSectionIdentifier);
    v19 = (void *)swift_dynamicCastObjCClass(v16, v17);
    if (!v19)
      swift_unknownObjectRelease(v16, v18);
  }
  else
  {
    v19 = 0;
  }
  v65 = v14;
  v20 = objc_msgSend(v19, "accountObjectID");

  if ((unint64_t)a4 >> 62)
  {
LABEL_29:
    if (a4 < 0)
      v36 = a4;
    else
      v36 = a4 & 0xFFFFFFFFFFFFFF8;
    v37 = v20;
    swift_bridgeObjectRetain(a4);
    v21 = _CocoaArrayWrapper.endIndex.getter(v36);
    v68 = v20;
    if (v21)
      goto LABEL_7;
LABEL_33:

    *(_QWORD *)&v32 = swift_bridgeObjectRelease(a4).n128_u64[0];
    v31 = 0;
    if ((v66 & 1) != 0)
    {
LABEL_36:
      v34 = v64;
      v33 = v65;
      v35 = v63;
    }
    else
    {
LABEL_34:
      v34 = v64;
      v33 = v65;
      v35 = v63;
      if ((v62 & 1) == 0)
        v31 = 1;
    }
    goto LABEL_37;
  }
  v21 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v22 = v20;
  swift_bridgeObjectRetain(a4);
  v68 = v20;
  if (!v21)
    goto LABEL_33;
LABEL_7:
  v59 = a1;
  v60 = v12;
  v61 = v11;
  v12 = a4 & 0xC000000000000001;
  a1 = 4;
  v67 = a4 & 0xC000000000000001;
  while (1)
  {
    if (v12)
      v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1 - 4, a4);
    else
      v23 = *(id *)(a4 + 8 * a1);
    v24 = v23;
    v11 = a1 - 3;
    if (__OFADD__(a1 - 4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v25 = objc_msgSend(v23, "cloudAccount");
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, "objectID");

      if (v27)
        break;
    }
    if (v20)
    {

      swift_bridgeObjectRelease(a4);
      goto LABEL_24;
    }

LABEL_8:
    ++a1;
    if (v11 == v21)
    {

      *(_QWORD *)&v32 = swift_bridgeObjectRelease(a4).n128_u64[0];
      v31 = 0;
      v12 = v60;
      v11 = v61;
      a1 = v59;
      if ((v66 & 1) == 0)
        goto LABEL_34;
      goto LABEL_36;
    }
  }
  if (v20)
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v28 = v20;
    v29 = v27;
    v12 = v67;
    v30 = static NSObject.== infix(_:_:)(v29);

    v20 = v68;
    if ((v30 & 1) == 0)
    {

      *(_QWORD *)&v32 = swift_bridgeObjectRelease(a4).n128_u64[0];
      goto LABEL_24;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease(a4);

LABEL_24:
  v31 = 0;
  if ((v66 & 1) != 0)
  {
    v12 = v60;
    v11 = v61;
    a1 = v59;
    goto LABEL_36;
  }
  v12 = v60;
  v11 = v61;
  a1 = v59;
  v34 = v64;
  v33 = v65;
  v35 = v63;
  if ((v62 & 1) == 0)
    v31 = BYTE4(v58) ^ 1;
LABEL_37:
  v38 = objc_msgSend(v35, "traitCollection", v32);
  v39 = objc_msgSend(v38, "preferredContentSizeCategory");

  LOBYTE(v38) = UIContentSizeCategory.isAccessibilityCategory.getter(v39);
  static UIListContentConfiguration.cell()(v40);
  v41 = objc_msgSend(v34, "displayText");
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v44 = v43;

  UIListContentConfiguration.text.setter(v42, v44);
  if ((v38 & 1) != 0)
  {
    v45 = 0;
  }
  else
  {
    v46 = objc_msgSend(v34, "systemImageName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v48 = v47;

    v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v48);
    v45 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v49);

  }
  v50 = v68;
  UIListContentConfiguration.image.setter(v45);
  if (((objc_msgSend(v34, "style") == (id)1) & v31) == 1)
  {
    v51 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    v52 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v69);
    UIListContentConfiguration.TextProperties.color.setter(v51);
    v52(v69, 0);
    v53 = UIAccessibilityTraitButton;
    v54 = (unint64_t)objc_msgSend((id)a1, "accessibilityTraits");
    if ((v53 & ~v54) != 0)
      v55 = v53;
    else
      v55 = 0;
    objc_msgSend((id)a1, "setAccessibilityTraits:", v55 | v54);
  }
  v69[3] = v11;
  v69[4] = &protocol witness table for UIListContentConfiguration;
  v56 = sub_10012D160(v69);
  (*(void (**)(_QWORD *, char *, uint64_t))(v12 + 16))(v56, v33, v11);
  UICollectionViewCell.contentConfiguration.setter(v69);
  objc_msgSend((id)a1, "setUserInteractionEnabled:", v31 & 1);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v33, v11);
}

void sub_1002F44A0(void *a1, uint64_t a2, void **a3, uint64_t a4, void *a5, uint64_t a6)
{
  void *v8;
  uint64_t v9;
  uint64_t j;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  char v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  char v43;
  char v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  Class isa;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;

  v8 = (void *)sub_1002F57C4(*a3, a5);
  if ((unint64_t)a6 >> 62)
  {
    if (a6 < 0)
      v27 = a6;
    else
      v27 = a6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a6);
    v9 = _CocoaArrayWrapper.endIndex.getter(v27);
    v60 = a1;
    v61 = v8;
    if (!v9)
      goto LABEL_23;
  }
  else
  {
    v9 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a6);
    v60 = a1;
    v61 = v8;
    if (!v9)
      goto LABEL_23;
  }
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  if ((a6 & 0xC000000000000001) == 0)
  {
    for (i = 0; i != v9; ++i)
    {
      v21 = *(void **)(a6 + 8 * i + 32);
      v22 = objc_opt_self(ICCloudSyncingObject);
      v23 = swift_dynamicCastObjCClass(v21, v22);
      if (v23)
      {
        v24 = v23;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
        v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v25 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v26 >= v25 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
        v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
        specialized Array._endMutation()(v20);
      }
    }
    swift_bridgeObjectRelease(a6);
    v8 = v61;
    goto LABEL_24;
  }
  for (j = 0; j != v9; ++j)
  {
    v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, a6);
    v12 = objc_opt_self(ICCloudSyncingObject);
    v13 = swift_dynamicCastObjCClass(v11, v12);
    if (v13)
    {
      v15 = v13;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);
    }
    else
    {
      swift_unknownObjectRelease(v11, v14);
    }
  }
LABEL_23:
  swift_bridgeObjectRelease(a6);
LABEL_24:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_43;
  v28 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  v29 = v8;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  for (; v28; v28 = _CocoaArrayWrapper.endIndex.getter(v45))
  {
    v59 = a6;
    v30 = 4;
    while (1)
    {
      v31 = ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30 - 4, _swiftEmptyArrayStorage)
          : (id)_swiftEmptyArrayStorage[v30];
      v32 = v31;
      a6 = v30 - 3;
      if (__OFADD__(v30 - 4, 1))
        break;
      v33 = objc_msgSend(v31, "parentCloudObject");
      if (v33)
      {
        v34 = v33;
        sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
        v35 = v8;
        v36 = v34;
        v37 = static NSObject.== infix(_:_:)(v36);

        v8 = v61;
        if ((v37 & 1) != 0)
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          goto LABEL_41;
        }
      }
      v38 = objc_msgSend(v32, "parentCloudObject", v59);

      if (v38 || (v39 = objc_msgSend(v32, "cloudAccount")) == 0)
      {

      }
      else
      {
        v40 = v39;
        sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
        v41 = v8;
        v42 = v40;
        v43 = static NSObject.== infix(_:_:)(v42);

        v8 = v61;
        if ((v43 & 1) != 0)
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
LABEL_41:
          v44 = 0;
          a6 = v59;
          goto LABEL_48;
        }
      }
      ++v30;
      if (a6 == v28)
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v44 = 1;
        a6 = v59;
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_43:
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v45 = _swiftEmptyArrayStorage;
    else
      v45 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v46 = v8;
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  }

  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v44 = 1;
LABEL_48:
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v47 = sub_1002B0348(a6);
  v48 = objc_allocWithZone((Class)ICMoveDecision);
  v49 = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  v51 = v49;
  v52 = objc_msgSend(v48, "initWithSourceObjects:destination:", isa, v51);

  v53 = objc_msgSend(v52, "shouldMove") ^ 1;
  if ((v44 & 1) == 0 && (v53 & 1) == 0)
    v53 = objc_msgSend(v52, "additionalStep") == 0;
  objc_msgSend(v60, "setForceDisabledAppearance:", v53, v59);
  objc_msgSend(v60, "setHasGroupInset:", 1);
  objc_msgSend(v60, "setHasDisclosureIndicator:", 0);
  objc_msgSend(v60, "setShowsNoteCount:", 0);
  v54 = objc_opt_self(ICNoteContainer);
  v55 = (void *)swift_dynamicCastObjCClass(v51, v54);
  if (v55)
    v56 = v51;
  objc_msgSend(v60, "setNoteContainer:", v55);

  v57 = objc_opt_self(NoteCollectionObject);
  v62 = (id)swift_dynamicCastObjCClass(v51, v57);
  if (v62)
    v58 = v51;
  objc_msgSend(v60, "setNoteCollection:", v62);

}

uint64_t sub_1002F4A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD v38[4];
  _QWORD v39[4];

  sub_100128424(a3, (uint64_t)v39);
  v14 = sub_1000163BC(0, &qword_1005D8638, ICFolderListSectionIdentifier_ptr);
  if (swift_dynamicCast(v38, v39, (char *)&type metadata for Any + 8, v14, 0))
  {
    v15 = (void *)v38[0];
    v36 = v38[0];
    v16 = sub_1000163BC(0, &qword_1005D8630, &off_10054E040);
    v17 = v15;
    v18 = a5;
    v19 = a2;
    v20 = v16;
    v21 = v14;
LABEL_7:
    v28 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v18, v19, &v36, v20, v21);

LABEL_8:
    sub_1000153C0(v39);
    return v28;
  }
  v22 = sub_1000163BC(0, &qword_1005D1650, ICVirtualSmartFolderItemIdentifier_ptr);
  if (swift_dynamicCast(v38, v39, (char *)&type metadata for Any + 8, v22, 0))
  {
    v23 = (void *)v38[0];
    v36 = v38[0];
    v24 = sub_1000163BC(0, &qword_1005D1C30, &off_10054DDE8);
    v17 = v23;
    v18 = a6;
    v19 = a2;
    v20 = v24;
    v21 = v22;
    goto LABEL_7;
  }
  v25 = sub_1000163BC(0, &qword_1005D9890, ICButtonItemIdentifier_ptr);
  if (swift_dynamicCast(v38, v39, (char *)&type metadata for Any + 8, v25, 0))
  {
    v26 = (void *)v38[0];
    v36 = v38[0];
    v27 = sub_1000163BC(0, &qword_1005CFE50, UICollectionViewListCell_ptr);
    v17 = v26;
    v18 = a7;
    v19 = a2;
    v20 = v27;
    v21 = v25;
    goto LABEL_7;
  }
  v30 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  if (swift_dynamicCast(v38, v39, (char *)&type metadata for Any + 8, v30, 0))
  {
    v31 = (void *)v38[0];
    v36 = v38[0];
    v32 = sub_1000163BC(0, &qword_1005D1C30, &off_10054DDE8);
    v33 = v31;
    v28 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a8, a2, &v36, v32, v30);

    goto LABEL_8;
  }
  sub_100128424(a3, (uint64_t)v38);
  v36 = 0;
  v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  v34._object = (void *)0x800000010047C610;
  v34._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v34);
  _print_unlocked<A, B>(_:_:)(v38, &v36, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v35._countAndFlagsBits = 125;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v36, v37, "MobileNotes/MoveDataSource.swift", 32, 2, 183, 0);
  __break(1u);
  return result;
}

void sub_1002F4D5C(uint64_t a1, int a2, int a3, int a4, id a5, uint64_t a6)
{
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;

  v9 = objc_msgSend(a5, "modernManagedObjectContext");
  v10 = OBJC_IVAR___ICMoveHeaderView_modernContext;
  v11 = *(void **)(a1 + OBJC_IVAR___ICMoveHeaderView_modernContext);
  *(_QWORD *)(a1 + OBJC_IVAR___ICMoveHeaderView_modernContext) = v9;
  v12 = v9;

  v13 = (char *)sub_1002E4708();
  v14 = *(void **)(a1 + v10);
  v15 = *(void **)&v13[OBJC_IVAR___ICMovePreviewView_modernContext];
  *(_QWORD *)&v13[OBJC_IVAR___ICMovePreviewView_modernContext] = v14;
  v16 = v14;

  v17 = objc_msgSend(a5, "legacyManagedObjectContext");
  v18 = OBJC_IVAR___ICMoveHeaderView_htmlContext;
  v19 = *(void **)(a1 + OBJC_IVAR___ICMoveHeaderView_htmlContext);
  *(_QWORD *)(a1 + OBJC_IVAR___ICMoveHeaderView_htmlContext) = v17;
  v20 = v17;

  v21 = (char *)sub_1002E4708();
  v22 = *(void **)(a1 + v18);
  v23 = *(void **)&v21[OBJC_IVAR___ICMovePreviewView_htmlContext];
  *(_QWORD *)&v21[OBJC_IVAR___ICMovePreviewView_htmlContext] = v22;
  v24 = v22;

  v25 = *(_QWORD *)(a1 + OBJC_IVAR___ICMoveHeaderView_objectIds);
  *(_QWORD *)(a1 + OBJC_IVAR___ICMoveHeaderView_objectIds) = a6;
  swift_bridgeObjectRetain(a6);
  swift_bridgeObjectRelease(v25);
  sub_1002E50D0();
}

uint64_t sub_1002F4E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v10 = sub_100012E18(&qword_1005D8610);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (char *)v13 + *(int *)(v11 + 48);
  *v13 = a2;
  v13[1] = a3;
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a4, v15);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v19 = v17 == a2 && v18 == a3;
  if (v19
    || (v20 = v18,
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, a2, a3, 0),
        swift_bridgeObjectRetain(a3),
        swift_bridgeObjectRelease(v20),
        (v21 & 1) != 0))
  {
    v22 = type metadata accessor for MoveHeaderView();
    v23 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(a6, a4, v22);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    swift_bridgeObjectRelease(v13[1]);
  }
  else
  {
    sub_100012DDC((uint64_t)v13, &qword_1005D8610);
    return 0;
  }
  return v23;
}

uint64_t sub_1002F5074()
{
  return type metadata accessor for MoveDataSource(0);
}

uint64_t type metadata accessor for MoveDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D85F8;
  if (!qword_1005D85F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoveDataSource);
  return result;
}

void sub_1002F50B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  sub_100176504(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

id sub_1002F5130(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  const char *v14;
  uint64_t v15;
  char v16;
  ValueMetadata *v17;
  unint64_t v18;

  v4 = objc_msgSend(a1, "legacyManagedObjectContext");
  v5 = objc_msgSend(a1, "modernManagedObjectContext");
  v6 = objc_msgSend(objc_allocWithZone((Class)ICFolderCoreDataIndexer), "initWithLegacyManagedObjectContext:modernManagedObjectContext:", v4, v5);

  objc_msgSend(v6, "setShouldIncludeOutlineParentItems:", 1);
  objc_msgSend(v6, "setShouldIncludeTags:", 0);
  v7 = 2;
  objc_msgSend(v6, "setShouldIncludeSharedWithYou:", 2);
  if ((sub_1002F21A8(a2, (SEL *)&selRef_ic_isFolderType) & 1) != 0)
    v8 = 2;
  else
    v8 = 1;
  if (ICInternalSettingsIsGreyParrotEnabled(objc_msgSend(v6, "setShouldIncludeSystemPaper:", v8)))
  {
    if ((sub_1002F21A8(a2, (SEL *)&selRef_ic_isFolderType) & 1) != 0)
      v9 = 2;
    else
      v9 = 1;
  }
  else
  {
    v9 = 2;
  }
  objc_msgSend(v6, "setShouldIncludeMathNotes:", v9);
  v17 = &type metadata for NotesFeature;
  v18 = sub_1000199D4();
  v14 = "AudioTranscription";
  v15 = 18;
  v16 = 2;
  v10 = isFeatureEnabled(_:)(&v14);
  sub_1000153C0(&v14);
  if ((v10 & 1) != 0)
  {
    v17 = &type metadata for TelephonyUtilitiesFeature;
    v18 = sub_10013FA34();
    v14 = "CallRecording";
    v15 = 13;
    v7 = 2;
    v16 = 2;
    v11 = isFeatureEnabled(_:)(&v14);
    sub_1000153C0(&v14);
    if ((v11 & 1) != 0)
    {
      if ((sub_1002F21A8(a2, (SEL *)&selRef_ic_isFolderType) & 1) != 0)
        v7 = 2;
      else
        v7 = 1;
    }
  }
  objc_msgSend(v6, "setShouldIncludeCallNotes:", v7);
  if ((sub_1002F21A8(a2, (SEL *)&selRef_ic_isFolderType) & 1) != 0)
    v12 = 1;
  else
    v12 = 2;
  objc_msgSend(v6, "setShouldIncludeAccount:", v12);
  objc_msgSend(v6, "setShouldIncludeTrash:", 0);
  objc_msgSend(v6, "setShouldIncludeNewFolderButton:", 1);
  return v6;
}

uint64_t sub_1002F5380()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002F53AC(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v4;

  sub_1002F4D5C(a1, a2, a3, a4, *(id *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1002F53B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100012E18(&qword_1005D8608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002F542C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D8608) - 8) + 80);
  return sub_1002F4E88(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_1002F5498()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002F54BC(_QWORD *a1)
{
  uint64_t v1;

  sub_1002F3140(a1, v1, (SEL *)&selRef_willExpandItemHandler);
}

void sub_1002F54DC(_QWORD *a1)
{
  uint64_t v1;

  sub_1002F3140(a1, v1, (SEL *)&selRef_willCollapseItemHandler);
}

uint64_t sub_1002F54FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002F5520(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1002F369C(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1002F5528()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002F554C(void *a1, uint64_t a2, void **a3)
{
  uint64_t v3;

  sub_1002F3730(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1002F5554()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002F5580(void *a1, uint64_t a2, void **a3)
{
  uint64_t v3;

  sub_1002F44A0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1002F558C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = sub_100012E18(&qword_1005D8628);
  v1 = *(_QWORD *)(v23 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v18 = (v2 + 24) & ~v2;
  v3 = *(_QWORD *)(v1 + 64);
  v22 = sub_100012E18(&qword_1005D8620);
  v4 = *(_QWORD *)(v22 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v18 + v3 + v5) & ~v5;
  v6 = *(_QWORD *)(v4 + 64);
  v21 = sub_100012E18(&qword_1005D8618);
  v7 = *(_QWORD *)(v21 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v17 + v6 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = sub_100012E18(&qword_1005D1C28);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v9 + v10 + v13) & ~v13;
  v19 = v14 + *(_QWORD *)(v12 + 64);
  v20 = v11;
  v15 = v2 | v5 | v8 | v13 | 7;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v18, v23);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v17, v22);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v21);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v14, v20);
  return swift_deallocObject(v0, v19, v15);
}

uint64_t sub_1002F56E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *(_QWORD *)(sub_100012E18(&qword_1005D8628) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(sub_100012E18(&qword_1005D8620) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(_QWORD *)(sub_100012E18(&qword_1005D8618) - 8);
  v14 = (v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D1C28) - 8) + 80);
  return sub_1002F4A1C(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, v3 + v11, v3 + v14, v3 + ((v14 + v15 + v16) & ~v16));
}

uint64_t sub_1002F57C4(void *a1, void *a2)
{
  char **v4;
  id v5;
  id v6;
  uint64_t result;
  Swift::String v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;

  if ((objc_msgSend(a1, "ic_isModernType") & 1) != 0)
  {
    v4 = &selRef_modernManagedObjectContext;
LABEL_5:
    v5 = objc_msgSend(a2, *v4);
    v6 = objc_msgSend(v5, "objectWithID:", a1);

    return (uint64_t)v6;
  }
  if ((objc_msgSend(a1, "ic_isLegacyType") & 1) != 0)
  {
    v4 = &selRef_legacyManagedObjectContext;
    goto LABEL_5;
  }
  _StringGuts.grow(_:)(54);
  v8._object = (void *)0x8000000100487AA0;
  v8._countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v8);
  v9 = objc_msgSend(a1, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v12);
  v14._countAndFlagsBits = 125;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "MobileNotes/MoveDataSource.swift", 32, 2, 50, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002F5930()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002F595C(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v3;

  return sub_1002F3F4C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(unsigned __int8 *)(v3 + 24), *(unsigned __int8 *)(v3 + 25), *(unsigned __int8 *)(v3 + 26), *(void **)(v3 + 32));
}

uint64_t *NSNotificationName.TagCollectionViewWillRenameTag.unsafeMutableAddressor()
{
  if (qword_1005CEC60 != -1)
    swift_once(&qword_1005CEC60, sub_100016408);
  return &static NSNotificationName.TagCollectionViewWillRenameTag;
}

uint64_t *NSNotificationName.TagCollectionViewDidRenameTag.unsafeMutableAddressor()
{
  if (qword_1005CEC68 != -1)
    swift_once(&qword_1005CEC68, sub_10001643C);
  return &static NSNotificationName.TagCollectionViewDidRenameTag;
}

uint64_t sub_1002F5A10()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D8640);
  sub_10012A0B0(v0, (uint64_t)qword_1005D8640);
  return static Logger.hashtag.getter();
}

id sub_1002F5B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  void *v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  BOOL v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  void *v48;
  id v49;
  _QWORD *v50;
  char *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  void *v59;
  uint64_t v61;
  uint64_t v62;
  void *v64;
  id v65;
  void **aBlock;
  uint64_t v67;
  void (*v68)(uint64_t, void *);
  void *v69;
  void *v70;
  _QWORD *v71;

  v5 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_viewContext];
  if (!v5)
    return 0;
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = v5;
  v65 = v8;
  v10 = objc_msgSend(v8, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  v15 = OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID;
  v16 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID];
  v64 = v9;
  v61 = a4;
  v62 = a1;
  if (!v16)
  {
    v30 = 0;
    v20 = 0;
LABEL_9:
    v27 = 0;
    goto LABEL_11;
  }
  v17 = v16;
  v18 = objc_msgSend(v9, "objectWithID:", v17);
  v19 = objc_opt_self(ICHashtag);
  v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
  if (!v20)
  {

    v30 = 0;
    goto LABEL_9;
  }
  v59 = v17;
  swift_bridgeObjectRelease(v14);
  v21 = objc_msgSend(v65, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v14 = v25;

  sub_100396D5C(v20);
  v27 = v26;
  v28 = objc_msgSend(v20, "displayText");
  if (v28)
  {
    v29 = v28;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v20 = v31;

  }
  else
  {

    v30 = 0;
    v20 = 0;
  }
LABEL_11:
  if (*(_QWORD *)&v4[v15])
    v33 = a2 == 0;
  else
    v33 = 1;
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  if (v27)
  {
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v36 = 0;
  }
  v32 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v35, v36, v34);

  if (v34)
  {
    v37 = swift_allocObject(&unk_100567238, 24, 7);
    swift_unknownObjectWeakInit(v37 + 16, v4);
    v38 = (_QWORD *)swift_allocObject(&unk_100567468, 40, 7);
    v38[2] = v37;
    v38[3] = v30;
    v38[4] = v20;
    v70 = sub_1002F8E14;
    v71 = v38;
    aBlock = _NSConcreteStackBlock;
    v67 = 1107296256;
    v68 = sub_1002F598C;
    v69 = &unk_100567480;
    v39 = _Block_copy(&aBlock);
    swift_release(v71);
    objc_msgSend(v32, "addTextFieldWithConfigurationHandler:", v39);
    _Block_release(v39);
  }
  else
  {
    swift_bridgeObjectRelease(v20);
  }
  v40 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v40, "addObserver:selector:name:object:", v4, "textChanged:", UITextFieldTextDidChangeNotification, *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField]);

  v41 = objc_msgSend(v65, "mainBundle");
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v45 = v44;

  v46 = swift_allocObject(&unk_1005673F0, 32, 7);
  *(_QWORD *)(v46 + 16) = a3;
  *(_QWORD *)(v46 + 24) = v61;
  sub_100166B74(a3, v61);
  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v45);
  v70 = sub_1002F8D78;
  v71 = (_QWORD *)v46;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_1002489AC;
  v69 = &unk_100567408;
  v48 = _Block_copy(&aBlock);
  swift_release(v71);
  v49 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v47, 1, v48);
  _Block_release(v48);

  objc_msgSend(v32, "addAction:", v49);
  v50 = (_QWORD *)swift_allocObject(&unk_100567440, 40, 7);
  v50[2] = a3;
  v50[3] = v61;
  v50[4] = v4;
  sub_100166B74(a3, v61);
  v51 = v4;
  v52 = sub_1002F6E10(v62, a2, (uint64_t)sub_1002F8DDC, (uint64_t)v50);
  swift_release(v50);
  v53 = OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagAction;
  v54 = *(void **)&v51[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagAction];
  *(_QWORD *)&v51[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagAction] = v52;

  v55 = *(void **)&v51[v53];
  if (v55)
  {
    v56 = v55;
    objc_msgSend(v56, "setEnabled:", 1);
    objc_msgSend(v32, "addAction:", v56);
    v57 = *(id *)&v51[v53];
    objc_msgSend(v32, "setPreferredAction:", v57);

  }
  return v32;
}

void sub_1002F61C0(void *a1, uint64_t a2, uint64_t a3, NSString a4)
{
  uint64_t v6;
  void *Strong;
  char *v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  objc_msgSend(a1, "setDelegate:", Strong);

  objc_msgSend(a1, "setClearButtonMode:", 1);
  objc_msgSend(a1, "setReturnKeyType:", 9);
  objc_msgSend(a1, "setEnablesReturnKeyAutomatically:", 1);
  if (a4)
    a4 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setText:", a4);

  objc_msgSend(a1, "setTextAlignment:", 4);
  swift_beginAccess(v6, v21, 0, 0);
  v8 = (char *)swift_unknownObjectWeakLoadStrong(v6);
  if (!v8
    || (v9 = *(_QWORD *)&v8[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID],
        v8,
        !v9))
  {
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v14 = v13;

    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    objc_msgSend(a1, "setPlaceholder:", v15);

  }
  swift_beginAccess(v6, v20, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v6);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = *(void **)(v16 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField);
    *(_QWORD *)(v16 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField) = a1;
    v19 = a1;

  }
}

void sub_1002F63DC(void (*a1)(_QWORD, void *), uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  if (a1)
  {
    v4 = *(void **)(a3 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID);
    v5 = v4;
    a1(0, v4);

  }
}

Swift::Bool __swiftcall TagCreateOrRenameAlertController.textField(_:shouldChangeCharactersIn:replacementString:)(UITextField _, __C::_NSRange shouldChangeCharactersIn, Swift::String replacementString)
{
  return sub_1002B8A18(replacementString._countAndFlagsBits, (unint64_t)replacementString._object);
}

double sub_1002F64B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  double result;
  void *v9;
  id v10;
  _BOOL8 v11;
  void *v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = type metadata accessor for CharacterSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField);
  if (!v6)
  {
    v9 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagAction);
    if (!v9)
    {
LABEL_11:
      v12 = 0;
      goto LABEL_12;
    }
    goto LABEL_5;
  }
  v7 = objc_msgSend(v6, "markedTextRange");
  if (v7)
  {

    return result;
  }
  v12 = *(void **)(v0 + v5);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagAction);
  if (v9)
  {
    if (v12)
    {
      v10 = v9;
      v33 = objc_msgSend(v12, "text");
      if (v33)
      {
        v34 = v33;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v36 = v35;

        v37 = String._bridgeToObjectiveC()();
        v38 = objc_msgSend(v37, "ic_trimmedString", swift_bridgeObjectRelease(v36).n128_f64[0]);

        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v41 = v40;

        swift_bridgeObjectRelease(v41);
        v42 = HIBYTE(v41) & 0xF;
        if ((v41 & 0x2000000000000000) == 0)
          v42 = v39 & 0xFFFFFFFFFFFFLL;
        v11 = v42 != 0;
        goto LABEL_7;
      }
LABEL_6:
      v11 = 0;
LABEL_7:
      objc_msgSend(v10, "setEnabled:", v11);

      v12 = *(void **)(v0 + v5);
      goto LABEL_8;
    }
LABEL_5:
    v10 = v9;
    goto LABEL_6;
  }
LABEL_8:
  if (v12)
  {
    v13 = objc_msgSend(v12, "text");
    if (v13)
    {
      v14 = v13;
      v12 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      goto LABEL_13;
    }
    goto LABEL_11;
  }
LABEL_12:
  v16 = 0xE000000000000000;
LABEL_13:
  v17 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "ic_hashtagAllowedCharacterSet");
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v18 = String.removingCharacters(notContainedIn:)(v4, v12, v16);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease(v16);
  v21 = sub_10036F0A8(75, v18, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease(v20);
  static String._fromSubstring(_:)(v21, v23, v25, v27);
  v29 = v28;
  swift_bridgeObjectRelease(v27);
  v30 = *(void **)(v0 + v5);
  if (v30)
  {
    v31 = v30;
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setText:", v32, swift_bridgeObjectRelease(v29).n128_f64[0]);

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  return result;
}

id sub_1002F680C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  void *v39;
  id v40;
  void **aBlock;
  uint64_t v44;
  void (*v45)(uint64_t, void *);
  void *v46;
  void *v47;
  _QWORD *v48;

  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  sub_100396F7C(a1, a2, a3);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  if (v15)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

  v19 = objc_msgSend(v8, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = (_QWORD *)swift_allocObject(&unk_100567328, 40, 7);
  v24[2] = v4;
  v24[3] = a2;
  v24[4] = a3;
  v25 = v4;
  swift_bridgeObjectRetain(a3);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v47 = sub_1002F8CE0;
  v48 = v24;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_1002489AC;
  v46 = &unk_100567340;
  v27 = _Block_copy(&aBlock);
  swift_release(v48);
  v28 = (void *)objc_opt_self(UIAlertAction);
  v29 = objc_msgSend(v28, "actionWithTitle:style:handler:", v26, 0, v27);
  _Block_release(v27);

  v30 = objc_msgSend(v8, "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v34 = v33;

  v35 = swift_allocObject(&unk_100567238, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16, v25);
  v36 = swift_allocObject(&unk_100567378, 40, 7);
  *(_BYTE *)(v36 + 16) = a4 & 1;
  *(_QWORD *)(v36 + 24) = v35;
  *(_QWORD *)(v36 + 32) = v25;
  v37 = v25;
  swift_retain(v35);
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  v47 = sub_1002F8D38;
  v48 = (_QWORD *)v36;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_1002489AC;
  v46 = &unk_100567390;
  v39 = _Block_copy(&aBlock);
  swift_release(v48);
  v40 = objc_msgSend(v28, "actionWithTitle:style:handler:", v38, 1, v39);
  _Block_release(v39);
  swift_release(v35);

  objc_msgSend(v18, "addAction:", v29);
  objc_msgSend(v18, "addAction:", v40);

  return v18;
}

void sub_1002F6C64(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD aBlock[5];
  uint64_t v15;
  _BYTE v16[24];

  if ((a2 & 1) != 0)
  {
    v6 = a3 + 16;
    swift_beginAccess(a3 + 16, v16, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (void *)Strong;
      v9 = (void *)sub_1002F5B64(0, 0, 0, 0);

      if (v9)
      {
        v10 = *(void **)(a4 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_presentingViewController);
        if (v10)
        {
          aBlock[4] = sub_1002F8D44;
          v15 = a3;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100206734;
          aBlock[3] = &unk_1005673B8;
          v11 = _Block_copy(aBlock);
          v12 = v15;
          v13 = v10;
          swift_retain(a3);
          swift_release(v12);
          objc_msgSend(v13, "presentViewController:animated:completion:", v9, 0, v11);

          _Block_release(v11);
          v9 = v13;
        }

      }
    }
  }
}

void sub_1002F6D8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField);
    v5 = v4;

    if (v4)
    {
      objc_msgSend(v5, "selectAll:", 0);

    }
  }
}

id sub_1002F6E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  void *v5;
  void *v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  char *v20;
  NSString v21;
  void *v22;
  id v23;
  _QWORD v25[5];
  _QWORD *v26;

  v5 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_workerContext];
  if (!v5)
    return 0;
  v10 = (void *)objc_opt_self(NSBundle);
  v11 = v5;
  v12 = objc_msgSend(v10, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = swift_allocObject(&unk_100567238, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v4);
  v18 = (_QWORD *)swift_allocObject(&unk_100567260, 72, 7);
  v18[2] = v17;
  v18[3] = v4;
  v18[4] = v11;
  v18[5] = a1;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a4;
  swift_bridgeObjectRetain(a2);
  v19 = v11;
  swift_retain(v17);
  v20 = v4;
  sub_100166B74(a3, a4);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v25[4] = sub_1002F8C50;
  v26 = v18;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  v25[2] = sub_1002489AC;
  v25[3] = &unk_100567278;
  v22 = _Block_copy(v25);
  swift_release(v26);
  v23 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v21, 0, v22);
  _Block_release(v22);
  swift_release(v17);

  objc_msgSend(v23, "setEnabled:", 0);
  return v23;
}

uint64_t sub_1002F7060(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t result;
  id aBlock[5];
  uint64_t v25;
  char v26[24];

  v12 = a2 + 16;
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  swift_beginAccess(v12, v26, 0, 0);
  aBlock[0] = (id)swift_unknownObjectWeakLoadStrong(v12);
  v14 = sub_100012E18((uint64_t *)&unk_1005D86D0);
  v15 = Optional._bridgeToObjectiveC()(v14);

  objc_msgSend(v13, "removeObserver:name:object:", v15, UITextFieldTextDidChangeNotification, *(_QWORD *)&a3[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField]);
  swift_unknownObjectRelease(v15, v16);
  v17 = (_QWORD *)swift_allocObject(&unk_1005672B0, 48, 7);
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a3;
  v17[5] = a4;
  v18 = swift_allocObject(&unk_1005672D8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1002F8C98;
  *(_QWORD *)(v18 + 24) = v17;
  aBlock[4] = sub_100194900;
  v25 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100016618;
  aBlock[3] = &unk_1005672F0;
  v19 = _Block_copy(aBlock);
  v20 = v25;
  swift_bridgeObjectRetain(a6);
  v21 = a3;
  v22 = a4;
  swift_retain(v18);
  swift_release(v20);
  objc_msgSend(v22, "performBlockAndWait:", v19);
  _Block_release(v19);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v18, "", 107, 170, 42, 1);
  result = swift_release(v18);
  if ((v22 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (a7)
      a7(result);
    return swift_release(v17);
  }
  return result;
}

void sub_1002F726C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  unsigned int v15;
  Swift::String v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;

  if (a2)
  {
    v8 = a2;
    goto LABEL_3;
  }
  v17 = *(void **)(a3 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField);
  if (v17)
  {
    v18 = objc_msgSend(v17, "text");
    if (v18)
    {
      v19 = v18;
      a1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v8 = v20;

LABEL_3:
      v9 = *(void **)(a3 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID);
      if (v9)
      {
        swift_bridgeObjectRetain(a2);
        v29 = v9;
        v10 = objc_msgSend(a4, "objectWithID:");
        v11 = objc_opt_self(ICHashtag);
        v12 = swift_dynamicCastObjCClass(v10, v11);
        if (v12)
        {
          v13 = (void *)v12;
          v14 = String._bridgeToObjectiveC()();
          v15 = objc_msgSend(v13, "canRenameTagWithNewDisplayText:", v14);

          if (v15)
          {
            v16._countAndFlagsBits = a1;
            v16._object = v8;
            TagCreateOrRenameAlertController.renameTag(to:sendNotification:)(v16, 1);
            swift_bridgeObjectRelease(v8);
          }
          else
          {
            v21 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v8);
            v22 = objc_msgSend(v21, "ic_withHashtagPrefix");

            v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
            v25 = v24;

            v26 = sub_1002F680C(v13, v23, v25, a2 == 0);
            swift_bridgeObjectRelease(v25);
            if (v26)
            {
              v27 = *(void **)(a3
                             + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_presentingViewController);
              if (v27)
              {
                v28 = v27;
                objc_msgSend(v28, "presentViewController:animated:completion:", v26, 0, 0);

              }
              goto LABEL_19;
            }
          }

LABEL_19:
          return;
        }

      }
      else
      {
        swift_bridgeObjectRetain(a2);
      }
      sub_1002F74C8(a1, (unint64_t)v8);
      swift_bridgeObjectRelease(v8);
    }
  }
}

void sub_1002F74C8(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t isEscapingClosureAtFileLocation;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t aBlock[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  isEscapingClosureAtFileLocation = a2;
  v4 = a1;
  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v6 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_accountObjectID];
    if (v6)
    {
      v7 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_workerContext];
      if (v7)
      {
        v8 = (_QWORD *)swift_allocObject(&unk_1005671C0, 56, 7);
        v8[2] = v7;
        v8[3] = v6;
        v8[4] = v4;
        v8[5] = isEscapingClosureAtFileLocation;
        v8[6] = v2;
        v4 = swift_allocObject(&unk_1005671E8, 32, 7);
        *(_QWORD *)(v4 + 16) = sub_1002F8BC0;
        *(_QWORD *)(v4 + 24) = v8;
        aBlock[4] = (uint64_t)sub_1000165D0;
        v24 = v4;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100016618;
        aBlock[3] = (uint64_t)&unk_100567200;
        v9 = _Block_copy(aBlock);
        v10 = v24;
        v11 = v6;
        v12 = v7;
        v13 = v11;
        v14 = v12;
        swift_bridgeObjectRetain(isEscapingClosureAtFileLocation);
        v15 = v2;
        swift_retain(v4);
        swift_release(v10);
        objc_msgSend(v14, "performBlockAndWait:", v9);

        _Block_release(v9);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 107, 205, 38, 1);
        swift_release(v8);
        swift_release(v4);
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
        __break(1u);
      }
    }
  }
  if (qword_1005CEC58 != -1)
    swift_once(&qword_1005CEC58, sub_1002F5A10);
  v16 = type metadata accessor for Logger(0);
  sub_10012A0B0(v16, (uint64_t)qword_1005D8640);
  v17 = swift_bridgeObjectRetain_n(isEscapingClosureAtFileLocation, 2);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.error.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain(isEscapingClosureAtFileLocation);
    v25 = sub_1003A4190(v4, isEscapingClosureAtFileLocation, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v21 + 4);
    swift_bridgeObjectRelease_n(isEscapingClosureAtFileLocation, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "Could not create new tag with display text %s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(isEscapingClosureAtFileLocation, 2);
  }
}

void sub_1002F77C4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v9 = objc_msgSend(a1, "ic_existingObjectWithID:", a2);
  if (v9)
  {
    v10 = v9;
    v11 = objc_opt_self(ICAccount);
    v12 = swift_dynamicCastObjCClass(v10, v11);
    if (v12)
    {
      v13 = v12;
      swift_bridgeObjectRetain(a4);
      v14 = v10;
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a4);
      v16 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithDisplayText:account:createIfNecessary:", v15, v13, 1);

      objc_msgSend(a1, "ic_save");
      if (v16)
        v17 = objc_msgSend(v16, "objectID");
      else
        v17 = 0;
      v25 = *(id *)(a5 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID);
      *(_QWORD *)(a5 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID) = v17;

      return;
    }

  }
  if (qword_1005CEC58 != -1)
    swift_once(&qword_1005CEC58, sub_1002F5A10);
  v18 = type metadata accessor for Logger(0);
  sub_10012A0B0(v18, (uint64_t)qword_1005D8640);
  v19 = swift_bridgeObjectRetain_n(a4, 2);
  v20 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.error.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v27 = v24;
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain(a4);
    v26 = sub_1003A4190(a3, a4, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v23 + 4);
    swift_bridgeObjectRelease_n(a4, 3);
    _os_log_impl((void *)&_mh_execute_header, v20, v22, "Could not create new tag with display text %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
  }
}

Swift::Void __swiftcall TagCreateOrRenameAlertController.renameTag(to:sendNotification:)(Swift::String to, Swift::Bool sendNotification)
{
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *object;
  uint64_t countAndFlagsBits;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  char *v44;
  uint64_t v45;
  NSObject *oslog;
  os_log_t osloga;
  void **aBlock;
  uint64_t v49;
  void (*v50)(uint64_t, void *);
  void *v51;
  void *v52;
  uint64_t v53;

  v3 = HIBYTE(to._object) & 0xF;
  if (((uint64_t)to._object & 0x2000000000000000) == 0)
    v3 = to._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v3)
    goto LABEL_18;
  v4 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_workerContext];
  if (!v4)
    goto LABEL_18;
  v5 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID];
  if (!v5)
    goto LABEL_18;
  v6 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_viewContext];
  if (!v6)
    goto LABEL_18;
  object = to._object;
  countAndFlagsBits = to._countAndFlagsBits;
  v10 = v4;
  v11 = v5;
  v12 = objc_msgSend(v6, "objectWithID:", v11);
  if (!v12)
    goto LABEL_17;
  v13 = v12;
  v14 = objc_opt_self(ICHashtag);
  v15 = (void *)swift_dynamicCastObjCClass(v13, v14);
  if (!v15)
  {

LABEL_17:
    goto LABEL_18;
  }
  v16 = objc_msgSend(v15, "displayText");
  if (!v16)
    goto LABEL_23;
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;

  if (v18 == countAndFlagsBits && v20 == object)
  {

    swift_bridgeObjectRelease(object);
    goto LABEL_18;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, countAndFlagsBits, object, 0);
  swift_bridgeObjectRelease(v20);
  if ((v22 & 1) == 0)
  {
LABEL_23:
    v45 = swift_allocObject(&unk_1005670F8, 24, 7);
    *(_QWORD *)(v45 + 16) = 0;
    osloga = (os_log_t)objc_msgSend(objc_allocWithZone((Class)ICLongRunningTaskController), "init");
    -[NSObject setViewControllerToPresentFrom:](osloga, "setViewControllerToPresentFrom:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_presentingViewController]);
    -[NSObject setShouldShowCancelButton:](osloga, "setShouldShowCancelButton:", 0);
    -[NSObject setIndeterminate:](osloga, "setIndeterminate:", 1);
    v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v28, "localizedStringForKey:value:table:", v29, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v32 = v31;

    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    -[NSObject setProgressString:](osloga, "setProgressString:", v33);

    v34 = swift_allocObject(&unk_100567120, 72, 7);
    *(_QWORD *)(v34 + 16) = v10;
    *(_QWORD *)(v34 + 24) = v11;
    LOBYTE(v30) = sendNotification;
    *(_BYTE *)(v34 + 32) = sendNotification;
    *(_QWORD *)(v34 + 40) = countAndFlagsBits;
    *(_QWORD *)(v34 + 48) = object;
    *(_QWORD *)(v34 + 56) = v45;
    *(_QWORD *)(v34 + 64) = v2;
    v52 = sub_1002F8B00;
    v53 = v34;
    aBlock = _NSConcreteStackBlock;
    v49 = 1107296256;
    v50 = sub_1002F598C;
    v51 = &unk_100567138;
    v35 = _Block_copy(&aBlock);
    v36 = v53;
    v37 = v10;
    v38 = v11;
    swift_bridgeObjectRetain(object);
    swift_retain(v45);
    v39 = v2;
    swift_release(v36);
    v40 = swift_allocObject(&unk_100567170, 64, 7);
    *(_QWORD *)(v40 + 16) = v39;
    *(_QWORD *)(v40 + 24) = countAndFlagsBits;
    *(_QWORD *)(v40 + 32) = object;
    *(_BYTE *)(v40 + 40) = (_BYTE)v30;
    *(_QWORD *)(v40 + 48) = v45;
    *(_QWORD *)(v40 + 56) = v38;
    v52 = sub_1002F8B50;
    v53 = v40;
    aBlock = _NSConcreteStackBlock;
    v49 = 1107296256;
    v50 = sub_1001FD5D4;
    v51 = &unk_100567188;
    v41 = _Block_copy(&aBlock);
    v42 = v53;
    v43 = v38;
    swift_bridgeObjectRetain(object);
    swift_retain(v45);
    v44 = v39;
    swift_release(v42);
    -[NSObject startTask:completionBlock:](osloga, "startTask:completionBlock:", v35, v41);
    _Block_release(v41);
    _Block_release(v35);

    swift_release(v45);
    return;
  }

LABEL_18:
  if (qword_1005CEC58 != -1)
    swift_once(&qword_1005CEC58, sub_1002F5A10);
  v23 = type metadata accessor for Logger(0);
  v24 = sub_10012A0B0(v23, (uint64_t)qword_1005D8640);
  oslog = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter(oslog, v25);
  if (os_log_type_enabled(oslog, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v26, "Cannot continue to renameTag to newDisplayText", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

}

uint64_t sub_1002F7F78(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t result;
  _QWORD v23[5];
  uint64_t v24;

  v14 = a7 + 16;
  v15 = swift_allocObject(&unk_1005674B8, 72, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  *(_BYTE *)(v15 + 32) = a4;
  *(_QWORD *)(v15 + 40) = a5;
  *(_QWORD *)(v15 + 48) = a6;
  *(_QWORD *)(v15 + 56) = v14;
  *(_QWORD *)(v15 + 64) = a8;
  v16 = swift_allocObject(&unk_1005674E0, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_1002F8E5C;
  *(_QWORD *)(v16 + 24) = v15;
  v23[4] = sub_100194900;
  v24 = v16;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_100016618;
  v23[3] = &unk_1005674F8;
  v17 = _Block_copy(v23);
  v18 = v24;
  v19 = a2;
  v20 = a3;
  swift_bridgeObjectRetain(a6);
  v21 = a8;
  swift_retain(v16);
  swift_release(v18);
  objc_msgSend(v19, "performBlockAndWait:", v17);
  _Block_release(v17);
  LOBYTE(a8) = swift_isEscapingClosureAtFileLocation(v16, "", 107, 236, 42, 1);
  swift_release(v15);
  result = swift_release(v16);
  if ((a8 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1002F80E0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void **a6, uint64_t a7)
{
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  _UNKNOWN **v16;
  void *v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  NSObject *oslog;
  _BYTE v35[24];

  v10 = a1;
  v11 = objc_msgSend(a1, "objectWithID:", a2);
  v12 = objc_opt_self(ICHashtag);
  v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
  if (!v13 || (v14 = objc_msgSend(v13, "standardizedContent")) == 0)
  {

    if (qword_1005CEC58 != -1)
      swift_once(&qword_1005CEC58, sub_1002F5A10);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_10012A0B0(v25, (uint64_t)qword_1005D8640);
    oslog = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(oslog, v27);
    if (os_log_type_enabled(oslog, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v28, "Cannot startTask for renameTag to newDisplayText", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    return;
  }
  v15 = v14;
  if ((a3 & 1) == 0)
    goto LABEL_6;
  v16 = (_UNKNOWN **)objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1005CEC60 != -1)
    goto LABEL_30;
  while (1)
  {
    objc_msgSend(v16, "postNotificationName:object:", static NSNotificationName.TagCollectionViewWillRenameTag, 0);

LABEL_6:
    v16 = ICHashtag_ptr;
    v17 = (void *)objc_opt_self(ICHashtag);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v17, "renameHashtagsWithStandardizedContent:newDisplayText:context:", v15, v18, v10);

    v20 = sub_1000163BC(0, (unint64_t *)&qword_1005D86F0, ICHashtag_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    objc_msgSend(v10, "ic_save");
    if ((unint64_t)v21 >> 62)
      break;
    v10 = *(void **)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_21;
LABEL_8:
    if ((v21 & 0xC000000000000001) != 0)
    {
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v21);
      goto LABEL_11;
    }
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v22 = *(id *)(v21 + 32);
LABEL_11:
      v23 = v22;
      swift_bridgeObjectRelease(v21);
      v24 = objc_msgSend(v23, "objectID");

      goto LABEL_22;
    }
    __break(1u);
LABEL_30:
    swift_once(&qword_1005CEC60, sub_100016408);
  }
  if (v21 < 0)
    v30 = v21;
  else
    v30 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v21);
  v10 = (void *)_CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v21);
  if (v10)
    goto LABEL_8;
LABEL_21:
  swift_bridgeObjectRelease(v21);
  v24 = 0;
LABEL_22:
  swift_beginAccess(a6, v35, 1, 0);
  v31 = *a6;
  *a6 = v24;

  v32 = *(void **)(a7 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_eventReporter);
  if (v32)
  {
    if (*(_BYTE *)(a7 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_renameMethod + 8))
      v33 = 0;
    else
      v33 = *(_QWORD *)(a7 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_renameMethod);
    objc_msgSend(v32, "submitHashtagRenameEvent:approachEnum:", 0, v33);
  }

}

void sub_1002F8464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void **v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  id v22;
  id v23;
  unint64_t v24;
  Class isa;
  unint64_t v26;
  unint64_t v27;
  _BYTE v28[104];
  _BYTE v29[24];

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_viewContext), "ic_save");
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_sizingCell);
  v14 = (_QWORD *)(v13 + OBJC_IVAR___ICTagCell_displayText);
  v15 = *(_QWORD *)(v13 + OBJC_IVAR___ICTagCell_displayText + 8);
  *v14 = a3;
  v14[1] = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRelease(v15);
  objc_msgSend(*(id *)(v13 + OBJC_IVAR___ICTagCell_imageView), "setImage:", 0);
  sub_1003B9AFC(0);
  *(_BYTE *)(v13 + OBJC_IVAR___ICTagCell_includeSymbolPrefix) = 1;
  *(_BYTE *)(v13 + OBJC_IVAR___ICTagCell_hasGroupInset) = 1;
  sub_1003B7138();
  sub_1003B8EB4();
  if ((a5 & 1) != 0)
  {
    v16 = (void **)(a6 + 16);
    v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1005CEC68 != -1)
      swift_once(&qword_1005CEC68, sub_10001643C);
    v18 = static NSNotificationName.TagCollectionViewDidRenameTag;
    swift_beginAccess(v16, v29, 0, 0);
    v19 = *v16;
    v20 = sub_100012E18((uint64_t *)&unk_1005D86E0);
    inited = swift_initStackObject(v20, v28);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    v26 = 0xD000000000000030;
    v27 = 0x8000000100487B40;
    v22 = v19;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v26, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    *(_QWORD *)(inited + 72) = a7;
    v23 = a7;
    v24 = sub_100136444(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    objc_msgSend(v17, "postNotificationName:object:userInfo:", v18, v22, isa, v26, v27);

  }
}

void *NSNotification.TagCollectionViewRenameTagOriginalTagObjectIDKey.unsafeMutableAddressor()
{
  return &static NSNotification.TagCollectionViewRenameTagOriginalTagObjectIDKey;
}

void TagCreateOrRenameAlertController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MobileNotes.TagCreateOrRenameAlertController", 44, "init()", 6, 0);
  __break(1u);
}

id TagCreateOrRenameAlertController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TagCreateOrRenameAlertController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *NSNotification.TagCollectionViewWillRenameTag.unsafeMutableAddressor()
{
  return &static NSNotification.TagCollectionViewWillRenameTag;
}

unint64_t static NSNotification.TagCollectionViewWillRenameTag.getter()
{
  return 0xD00000000000001ELL;
}

void *NSNotification.TagCollectionViewDidRenameTag.unsafeMutableAddressor()
{
  return &static NSNotification.TagCollectionViewDidRenameTag;
}

unint64_t static NSNotification.TagCollectionViewDidRenameTag.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static NSNotification.TagCollectionViewRenameTagOriginalTagObjectIDKey.getter()
{
  return 0xD000000000000030;
}

id static NSNotificationName.TagCollectionViewWillRenameTag.getter()
{
  return sub_100148D68(&qword_1005CEC60, (id *)&static NSNotificationName.TagCollectionViewWillRenameTag);
}

id static NSNotificationName.TagCollectionViewDidRenameTag.getter()
{
  return sub_100148D68(&qword_1005CEC68, (id *)&static NSNotificationName.TagCollectionViewDidRenameTag);
}

id sub_1002F88BC(void *a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  objc_super v29;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_accountObjectID] = 0;
  v6 = OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_presentingViewController;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_presentingViewController] = 0;
  v7 = OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagObjectID] = 0;
  v8 = &v4[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_renameMethod];
  *(_QWORD *)v8 = 0;
  v8[8] = 0;
  v9 = OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_sizingCell;
  v10 = type metadata accessor for TagCell();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");
  v13 = (void *)objc_opt_self(ICNoteContext);
  v14 = objc_msgSend(v13, "sharedContext");
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "workerManagedObjectContext");

  }
  else
  {
    v16 = 0;
  }
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_workerContext] = v16;
  v17 = objc_msgSend(v13, "sharedContext");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "managedObjectContext");

  }
  else
  {
    v19 = 0;
  }
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_viewContext] = v19;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_tagAction] = 0;
  v20 = *(void **)&v4[v7];
  *(_QWORD *)&v4[v7] = a1;
  v21 = a1;

  v22 = *(void **)&v4[v6];
  *(_QWORD *)&v4[v6] = a2;
  v23 = a2;

  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_eventReporter] = a3;
  *(_QWORD *)v8 = a4;
  v8[8] = 0;
  v24 = a3;

  v29.receiver = v12;
  v29.super_class = (Class)type metadata accessor for TagCreateOrRenameAlertController();
  return objc_msgSendSuper2(&v29, "init");
}

uint64_t sub_1002F8A98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F8ABC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F8B00(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F7F78(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1002F8B14()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1002F8B50(uint64_t a1)
{
  uint64_t v1;

  sub_1002F8464(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t type metadata accessor for TagCreateOrRenameAlertController()
{
  return objc_opt_self(_TtC11MobileNotes32TagCreateOrRenameAlertController);
}

uint64_t sub_1002F8B84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002F8BC0()
{
  uint64_t v0;

  sub_1002F77C4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1002F8BD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F8BE0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F8C04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F8C50(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F7060(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(uint64_t))(v1 + 56));
}

uint64_t sub_1002F8C64()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1002F8C98()
{
  uint64_t v0;

  sub_1002F726C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1002F8CA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F8CB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002F8CE0()
{
  uint64_t v0;

  TagCreateOrRenameAlertController.renameTag(to:sendNotification:)(*(Swift::String *)(v0 + 24), 1);
}

uint64_t sub_1002F8D0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002F8D38(uint64_t a1)
{
  uint64_t v1;

  sub_1002F6C64(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1002F8D44()
{
  uint64_t v0;

  sub_1002F6D8C(v0);
}

uint64_t sub_1002F8D4C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F8D78()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(uint64_t, _QWORD))(v0 + 16);
  if (v1)
    return v1(1, 0);
  return result;
}

uint64_t sub_1002F8DA8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002F8DDC()
{
  uint64_t v0;

  sub_1002F63DC(*(void (**)(_QWORD, void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1002F8DE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002F8E14(void *a1)
{
  uint64_t v1;

  sub_1002F61C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSString *)(v1 + 32));
}

uint64_t sub_1002F8E20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1002F8E5C()
{
  uint64_t v0;

  sub_1002F80E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void ***)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1002F8E70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id ChecklistItemEntity.note(in:)(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id result;
  void *v7;
  id v8;
  __objc2_prot *v9;

  v2 = type metadata accessor for ChecklistItemEntity(0);
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v2 + 20));
  v4 = v3;
  v5 = objc_msgSend(a1, "managedObjectIDForURIRepresentation:", v3);

  if (!v5)
    return 0;
  result = objc_msgSend(a1, "managedObjectContextForObjectID:", v5);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v7 = result;
  v8 = objc_msgSend(result, "objectWithID:", v5);

  v9 = &OBJC_PROTOCOL___ICSearchIndexableNote;
  result = (id)swift_dynamicCastObjCProtocolConditional(v8, 1, &v9);
  if (!result)
  {

    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ChecklistItemEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D87C0;
  if (!qword_1005D87C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChecklistItemEntity);
  return result;
}

uint64_t ChecklistItemEntity.init(id:managedObjectID:text:checked:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  _QWORD v42[3];

  v41 = a5;
  v39 = a3;
  v40 = a4;
  v37 = a1;
  v38 = a2;
  v35 = a6;
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for ChecklistItemEntity(0);
  v34 = v19[6];
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v20 = String.LocalizationValue.init(stringLiteral:)(1954047316, 0xE400000000000000);
  static Locale.current.getter(v20);
  v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v22(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Parameter title for Find Checklist Items intent", 47, 2);
  v36 = EntityProperty<>.init(title:)(v18);
  v23 = v35;
  *(_QWORD *)(v35 + v34) = v36;
  v33 = v19[7];
  sub_100012E18(&qword_1005CF148);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x64656B63656843, 0xE700000000000000);
  static Locale.current.getter(v24);
  v22(v9, v21, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Parameter title for Find Checklist Items intent", 47, 2);
  v25 = EntityProperty<>.init(title:)(v18);
  *(_QWORD *)(v23 + v33) = v25;
  v33 = v19[8];
  v34 = v25;
  sub_100012E18((uint64_t *)&unk_1005CF150);
  v26 = String.LocalizationValue.init(stringLiteral:)(1702129486, 0xE400000000000000);
  static Locale.current.getter(v26);
  v22(v9, v21, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, 0, 0, v12, v9, "Parameter title for Find Checklist Items intent", 47, 2);
  v27 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v28 = EntityProperty<>.init(title:)(v18, v27);
  *(_QWORD *)(v23 + v33) = v28;
  v29 = v37;
  sub_100145220(v37, v23, type metadata accessor for ChecklistItemID);
  v30 = v38;
  v31 = objc_msgSend(v38, "URIRepresentation");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);

  v42[0] = v39;
  v42[1] = v40;
  EntityProperty.wrappedValue.setter(v42);
  LOBYTE(v42[0]) = v41;
  EntityProperty.wrappedValue.setter(v42);

  return sub_100145264(v29, type metadata accessor for ChecklistItemID);
}

uint64_t sub_1002F9360()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = _s11MobileNotes26VisibleChecklistItemsQueryVACycfC_0();
  static ChecklistItemEntity.defaultQuery = result;
  *(_QWORD *)algn_100601C38 = v1;
  qword_100601C40 = v2;
  return result;
}

uint64_t *ChecklistItemEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_1005CEC70 != -1)
    swift_once(&qword_1005CEC70, sub_1002F9360);
  return &static ChecklistItemEntity.defaultQuery;
}

uint64_t static ChecklistItemEntity.defaultQuery.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1005CEC70 != -1)
    swift_once(&qword_1005CEC70, sub_1002F9360);
  v0 = static ChecklistItemEntity.defaultQuery;
  v1 = *(_QWORD *)algn_100601C38;
  v2 = qword_100601C40;
  swift_retain(static ChecklistItemEntity.defaultQuery);
  swift_retain(v1);
  swift_retain(v2);
  return v0;
}

uint64_t sub_1002F9440()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static ChecklistItemEntity.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static ChecklistItemEntity.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x73696C6B63656843, 0xEE006D6574492074);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "App entity name", 15, 2);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x8000000100487D90);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v2, 0, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t ChecklistItemEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEC78 != -1)
    swift_once(&qword_1005CEC78, sub_1002F9440);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static ChecklistItemEntity.typeDisplayRepresentation);
}

uint64_t static ChecklistItemEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEC78 != -1)
    swift_once(&qword_1005CEC78, sub_1002F9440);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static ChecklistItemEntity.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t ChecklistItemEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100145220(v1, a1, type metadata accessor for ChecklistItemID);
}

uint64_t ChecklistItemEntity.id.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1002F9760(a1, v1);
}

uint64_t sub_1002F9760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChecklistItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ChecklistItemEntity.managedObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ChecklistItemEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ChecklistItemEntity.managedObjectURI.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ChecklistItemEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ChecklistItemEntity.managedObjectURI.modify())()
{
  type metadata accessor for ChecklistItemEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t sub_1002F985C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1005CEC70 != -1)
    swift_once(&qword_1005CEC70, sub_1002F9360);
  v2 = static ChecklistItemEntity.defaultQuery;
  v3 = *(_QWORD *)algn_100601C38;
  v4 = qword_100601C40;
  *a1 = static ChecklistItemEntity.defaultQuery;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain(v2);
  swift_retain(v3);
  return swift_retain(v4);
}

uint64_t sub_1002F98D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C((unint64_t *)&unk_1005CEE80, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t ChecklistItemEntity.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v12;
  unint64_t v13;

  v0 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v13);
  v12 = 0xD000000000000018;
  v13 = 0x8000000100487D70;
  ChecklistItemID.uriRepresentation.getter((uint64_t)v2);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)v5 == 1)
  {
    sub_100012DDC((uint64_t)v2, &qword_1005CEFD0);
    v6 = 0;
    v7 = (void *)0xE000000000000000;
  }
  else
  {
    v6 = URL.absoluteString.getter(v5);
    v7 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  v9._countAndFlagsBits = v6;
  v9._object = v7;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v7);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v12;
}

uint64_t ChecklistItemEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  Swift::String v22;
  void *object;
  Swift::String v24;
  char *v25;
  void *v26;
  Swift::String v27;
  void *v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  char *v34;
  uint64_t countAndFlagsBits;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  Swift::String v42;

  v41 = a1;
  v1 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v1);
  v40 = (char *)&countAndFlagsBits - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v3);
  v5 = (char *)&countAndFlagsBits - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  __chkstk_darwin(v6);
  v37 = (char *)&countAndFlagsBits - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&countAndFlagsBits - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&countAndFlagsBits - v12;
  v14 = type metadata accessor for NoteEntity(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&countAndFlagsBits - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&countAndFlagsBits - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ChecklistItemEntity(0);
  EntityProperty.wrappedValue.getter(v20);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14))
  {
    sub_100012DDC((uint64_t)v20, (uint64_t *)&unk_1005D0B60);
    v21 = 1;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    EntityProperty.wrappedValue.getter(&v42);
    object = v42._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v42);
    swift_bridgeObjectRelease(object);
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
    v25 = v37;
    LocalizedStringResource.init(stringInterpolation:)(v13);
  }
  else
  {
    sub_100145220((uint64_t)v20, (uint64_t)v17, type metadata accessor for NoteEntity);
    sub_100012DDC((uint64_t)v20, (uint64_t *)&unk_1005D0B60);
    EntityProperty.wrappedValue.getter(&v42);
    v26 = v42._object;
    countAndFlagsBits = v42._countAndFlagsBits;
    sub_100145264((uint64_t)v17, type metadata accessor for NoteEntity);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
    EntityProperty.wrappedValue.getter(&v42);
    v28 = v42._object;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v42);
    swift_bridgeObjectRelease(v28);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v29);
    v25 = v37;
    LocalizedStringResource.init(stringInterpolation:)(v13);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v30);
    v31._countAndFlagsBits = countAndFlagsBits;
    v31._object = v26;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v31);
    swift_bridgeObjectRelease(v26);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v32);
    LocalizedStringResource.init(stringInterpolation:)(v11);
    v21 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v5, v21, 1, v39);
  v33 = type metadata accessor for DisplayRepresentation.Image(0);
  v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v40, 1, 1, v33);
  return DisplayRepresentation.init(title:subtitle:image:)(v25, v5, v34);
}

uint64_t sub_1002F9E20()
{
  return sub_100019C6C(&qword_1005D8700, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002F9E4C()
{
  return sub_100019C6C(&qword_1005D8708, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002F9E78()
{
  return sub_100019C6C(&qword_1005D8710, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

unint64_t sub_1002F9EA8()
{
  unint64_t result;

  result = qword_1005D8718;
  if (!qword_1005D8718)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VisibleChecklistItemsQuery, &type metadata for VisibleChecklistItemsQuery);
    atomic_store(result, (unint64_t *)&qword_1005D8718);
  }
  return result;
}

uint64_t sub_1002F9EEC()
{
  return sub_100019C6C(&qword_1005D8720, type metadata accessor for ChecklistItemID, (uint64_t)&protocol conformance descriptor for ChecklistItemID);
}

uint64_t sub_1002F9F18()
{
  return sub_100019C6C(&qword_1005D8728, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002F9F44()
{
  return sub_100019C6C((unint64_t *)&unk_1005D8730, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002F9F70()
{
  return sub_100019C6C(&qword_1005D8C00, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002F9F9C()
{
  return sub_100019C6C(&qword_1005D8740, type metadata accessor for ChecklistItemID, (uint64_t)&protocol conformance descriptor for ChecklistItemID);
}

unint64_t sub_1002F9FCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8748;
  if (!qword_1005D8748)
  {
    v1 = sub_10001537C(&qword_1005D8750);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8748);
  }
  return result;
}

uint64_t sub_1002FA018()
{
  return sub_100019C6C(&qword_1005D8758, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002FA044()
{
  return sub_100019C6C(&qword_1005D8760, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
}

uint64_t sub_1002FA074(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C(&qword_1005D8758, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for ChecklistItemEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    v9 = *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v8((uint64_t *)((char *)v4 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v13 = a3[6];
    v14 = a3[7];
    v15 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = v15;
    v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = v16;
    v17 = a3[8];
    v18 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + v17) = v18;
    swift_retain(v15);
    swift_retain(v16);
  }
  swift_retain(v18);
  return v4;
}

uint64_t destroy for ChecklistItemEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for URL(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v5(a1 + a2[5], v4);
  swift_release(*(_QWORD *)(a1 + a2[6]));
  swift_release(*(_QWORD *)(a1 + a2[7]));
  return swift_release(*(_QWORD *)(a1 + a2[8]));
}

uint64_t initializeWithCopy for ChecklistItemEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v12 = a3[6];
  v13 = a3[7];
  v14 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  v16 = a3[8];
  v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v17);
  return a1;
}

uint64_t assignWithCopy for ChecklistItemEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v12 = a3[6];
  v13 = *(_QWORD *)(a2 + v12);
  v14 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  v17 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = a3[8];
  v19 = *(_QWORD *)(a2 + v18);
  v20 = *(_QWORD *)(a1 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_retain(v19);
  swift_release(v20);
  return a1;
}

uint64_t initializeWithTake for ChecklistItemEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for ChecklistItemEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for URL(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v12 = a3[6];
  v13 = *(_QWORD *)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_release(v13);
  v14 = a3[7];
  v15 = *(_QWORD *)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  swift_release(v15);
  v16 = a3[8];
  v17 = *(_QWORD *)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_release(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChecklistItemEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FA618);
}

uint64_t sub_1002FA618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for ChecklistItemID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ChecklistItemEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FA6CC);
}

uint64_t sub_1002FA6CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for ChecklistItemID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1002FA770(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = type metadata accessor for ChecklistItemID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_initStructMetadata(a1, 256, 5, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002FA804(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

_QWORD *sub_1002FA80C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    v3 = _swiftEmptyArrayStorage;
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "displayText");
      if (v8)
      {
        v9 = v8;
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = sub_10016ACE0(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_10016ACE0((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_22;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v3 = _swiftEmptyArrayStorage;
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return v3;
}

_QWORD *sub_1002FA9A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    v3 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v6 = v5;
      v7 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "account");

      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v10 >= v9 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
        v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
        specialized Array._endMutation()(v4);
      }
      ++v3;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

void *sub_1002FAB1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v8))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      if (objc_msgSend(v4, "ic_isHashtagType"))
      {
        swift_bridgeObjectRelease(a1);
        return v5;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_10:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_1002FAC14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

void sub_1002FAC28(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  void *v8;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v7 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource;
  v8 = *(void **)(v5 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource);
  if (v8)
  {
    v13 = objc_msgSend(v8, "indexer");
    if (v13)
    {
      v30 = v13;
      v14 = objc_opt_self(ICTagCoreDataIndexer);
      v15 = swift_dynamicCastObjCClass(v30, v14);
      if (v15 && (v16 = *(void **)(v5 + v7)) != 0)
      {
        v17 = (void *)v15;
        v18 = v16;
        v19 = objc_msgSend(v17, "objectIDs");
        v20 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
        v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

        v22 = *(void **)&v18[OBJC_IVAR____TtC11MobileNotes13TagDataSource_modernViewContext];
        v23 = swift_allocObject(&unk_1005677D0, 24, 7);
        swift_unknownObjectWeakInit(v23 + 16, v5);
        v24 = swift_allocObject(&unk_100567988, 88, 7);
        *(_QWORD *)(v24 + 16) = v23;
        *(_QWORD *)(v24 + 24) = v21;
        *(_QWORD *)(v24 + 32) = v22;
        *(_QWORD *)(v24 + 40) = a1;
        *(_QWORD *)(v24 + 48) = a2;
        *(_QWORD *)(v24 + 56) = v18;
        *(_BYTE *)(v24 + 64) = a3 & 1;
        *(_QWORD *)(v24 + 72) = a4;
        *(_QWORD *)(v24 + 80) = a5;
        aBlock[4] = sub_1001ED4E0;
        v32 = v24;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100206734;
        aBlock[3] = &unk_1005679A0;
        v25 = _Block_copy(aBlock);
        v26 = v32;
        v27 = v22;
        v28 = v18;
        v29 = v27;
        swift_bridgeObjectRetain(a2);
        sub_100166B74(a4, a5);
        swift_release(v26);
        objc_msgSend(v29, "performBlock:", v25);
        _Block_release(v25);

      }
      else
      {

      }
    }
  }
}

void sub_1002FAE4C(void *a1, int a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  int v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  Class v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char v28;
  int v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  id v34;

  v3 = v2;
  LODWORD(v34) = a2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18((uint64_t *)&unk_1005D6350);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_hasLoaded] == 1)
  {
    if (a1)
    {
      v12 = a1;
      if (objc_msgSend(v12, "isNonEmpty"))
      {
        if (v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_hasAppliedInitialTagSelection] == 1)
        {
          v13 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection], "isEmpty");
          if ((v34 & 1) == 0)
            goto LABEL_22;
        }
        else
        {
          v13 = 1;
          if ((v34 & 1) == 0)
            goto LABEL_22;
        }
      }
      else
      {
        v13 = 0;
        if ((v34 & 1) == 0)
          goto LABEL_22;
      }
      v26 = *(void **)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection];
      sub_1000163BC(0, &qword_1005D67D0, ICTagSelection_ptr);
      v27 = v26;
      v28 = static NSObject.== infix(_:_:)(v12);

      if ((v28 & 1) == 0)
      {
        v29 = v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_hasAppliedInitialTagSelection];
        goto LABEL_27;
      }
LABEL_22:
      v29 = 0;
LABEL_27:
      sub_1002FC610(v29, v13, 0);
      v30 = *(void **)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection];
      *(_QWORD *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] = v12;

      v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_hasAppliedInitialTagSelection] = 1;
      return;
    }
    v15 = objc_msgSend(v3, "indexPathsForVisibleItems");
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v5);

    v17 = *(_QWORD *)(v16 + 16);
    v31 = v16;
    if (v17)
    {
      v18 = v16 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v19 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v32 = *(_QWORD *)(v6 + 72);
      v33 = v19;
      v19(v11, v18, v5);
      while (1)
      {
        v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v20(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v3, "deselectItemAtIndexPath:animated:", isa, v34 & 1, v31);

        v22 = IndexPath._bridgeToObjectiveC()().super.isa;
        v23 = objc_msgSend(v3, "cellForItemAtIndexPath:", v22);

        if (v23)
        {
          v24 = type metadata accessor for TagCell();
          v25 = swift_dynamicCastClass(v23, v24);
          if (v25)
          {
            *(_BYTE *)(v25 + OBJC_IVAR___ICTagCell_isExcluded) = 0;
            sub_1003B747C();
          }

        }
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v18 += v32;
        if (!--v17)
          goto LABEL_24;
        v33(v11, v18, v5);
      }
    }
    else
    {
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_24:
      v20(v11, 1, 1, v5);
    }
    swift_bridgeObjectRelease(v31);
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection], "clear");
  }
  else if (a1)
  {
    v34 = *(id *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection];
    *(_QWORD *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] = a1;
    v14 = a1;

  }
}

uint64_t sub_1002FB200(double a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  char *v5;
  id v6;
  id v7;
  id v8;
  objc_class *v9;
  double v10;
  unsigned int v11;
  double v12;
  void *v13;
  _QWORD *v14;
  char **v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  double v25;
  _QWORD *v26;
  _UNKNOWN **v27;
  double v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  char v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  uint64_t v71;
  unint64_t v72;
  uint64_t result;
  void *v74;
  char **v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char **v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  char *v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  objc_super v99;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = &v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
  if (v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration] == 1)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    v7 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v6, "scaledValueForValue:compatibleWithTraitCollection:", v7, 34.0);

    return 0;
  }
  v9 = (objc_class *)ObjectType;
  v10 = 16.0;
  if ((v5[3] & 1) == 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(UIDevice), "ic_isVision");
    v10 = 0.0;
    if (v11)
      v10 = 12.0;
  }
  v12 = v10 + v10;
  v13 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_viewContext];
  if (!v13)
    return 0;
  v8 = *(id *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
  if (!v8)
    return (uint64_t)v8;
  v14 = v13;
  v15 = (char **)v8;
  v16 = (uint64_t)sub_1002AAC60(v14);
  v99.receiver = v1;
  v99.super_class = v9;
  v17 = (unint64_t)v16 >> 62;
  if ((objc_msgSendSuper2(&v99, "isEditing") & 1) != 0)
  {
    v18 = objc_msgSend(v1, "ic_viewControllerManager");
    if (!v18
      || (v19 = v18,
          v20 = objc_msgSend(v18, "hasCompactWidth"),
          v19,
          v12 = 0.0,
          (v20 & 1) == 0))
    {
      v12 = 12.0;
    }
    v21 = (char *)objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    if (v17)
    {
LABEL_69:
      if (v16 < 0)
        v78 = v16;
      else
        v78 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v22 = _CocoaArrayWrapper.endIndex.getter(v78);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      v22 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v16);
    v23 = v12 + (double)v22 * 44.0;
    v24 = objc_msgSend(v2, "traitCollection");
    objc_msgSend(v21, "scaledValueForValue:compatibleWithTraitCollection:", v24, v23);

    return 0;
  }
  if (v17)
  {
    if (v16 < 0)
      v79 = v16;
    else
      v79 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v80 = _CocoaArrayWrapper.endIndex.getter(v79);
    swift_bridgeObjectRelease(v16);
    if (v80)
      goto LABEL_18;
  }
  else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_18;
  }
  if (v5[1] != 1)
  {
LABEL_25:
    swift_bridgeObjectRelease(v16);

    return 0;
  }
LABEL_18:
  v25 = a1 - v12;
  if (a1 - v12 <= 0.0)
    goto LABEL_25;
  v26 = sub_1002FA80C(v16);
  v98 = v26;
  v27 = ICNoteEditorBaseViewController_ptr;
  v28 = 0.0;
  v83 = v16;
  if (v5[1] == 1)
  {
    v29 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_sizingCell];
    +[ICTagCell newTagImage]_0();
    v30 = v26;
    v32 = v31;
    sub_1003B9AFC(v31);

    v33 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    v16 = (uint64_t)objc_msgSend(v2, "traitCollection");
    objc_msgSend(v33, "scaledValueForValue:compatibleWithTraitCollection:", v16, 34.0);
    v35 = v34;

    v26 = v30;
    v27 = ICNoteEditorBaseViewController_ptr;

    LODWORD(v36) = 1112014848;
    LODWORD(v37) = 1112014848;
    objc_msgSend(v29, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", 48.0, v35, v36, v37);
    v12 = v12 + v38;
    v28 = v39 + 0.0;
  }
  v96 = v5;
  if (v5[2] == 1)
  {
    v40 = objc_msgSend((id)objc_opt_self(ICTagAllTagsItemIdentifier), "displayText");
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v16 = v42;

    sub_10026C764(0, 0, v41, v16);
    v26 = v98;
  }
  if (!v26[2])
  {

    swift_bridgeObjectRelease(v83);
    swift_bridgeObjectRelease(v26);
    return 0;
  }
  v81 = v15;
  v82 = v14;
  v94 = (id)objc_opt_self(ICTagAllTagsItemIdentifier);
  v93 = (id)objc_opt_self(v27[265]);
  v84 = 0;
  v43 = 0;
  v21 = *(char **)&v2[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_sizingCell];
  v87 = &v21[OBJC_IVAR___ICTagCell_displayText];
  v92 = OBJC_IVAR___ICTagCell_displayImage;
  v86 = OBJC_IVAR___ICTagCell_textLabel;
  v91 = OBJC_IVAR___ICTagCell_includeSymbolPrefix;
  v89 = OBJC_IVAR___ICTagCell_imageView;
  v90 = OBJC_IVAR___ICTagCell_hasGroupInset;
  v14 = v26 + 5;
  v85 = 1;
  v44 = v26[2];
  v97 = 1;
  v95 = v2;
  v88 = v26;
  v15 = &selRef_setEditing_animated_;
  do
  {
    if (v43 >= v44)
    {
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v46 = *(v14 - 1);
    v47 = *v14;
    v48 = objc_msgSend(v94, "displayText", swift_bridgeObjectRetain(*v14).n128_f64[0]);
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    if (v46 == v49 && v47 == v51)
    {
      v53 = 1;
      v51 = v47;
    }
    else
    {
      v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, v49, v51, 0);
    }
    swift_bridgeObjectRelease(v51);
    v54 = v5[3];
    v2 = v87;
    v55 = *((_QWORD *)v87 + 1);
    *(_QWORD *)v87 = v46;
    *((_QWORD *)v87 + 1) = v47;
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRelease(v55);
    objc_msgSend(*(id *)&v21[v89], "setImage:", 0);
    v56 = *(void **)&v21[v92];
    *(_QWORD *)&v21[v92] = 0;

    v57 = *(void **)&v21[v92];
    if (v57)
    {
      v58 = *(void **)&v21[v89];
      v59 = v57;
      objc_msgSend(v58, "setImage:", v59);
      v60 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v87 = 0;
      *((_QWORD *)v87 + 1) = 0;
      swift_bridgeObjectRelease(v60);
      v61 = *(void **)&v21[v86];
      objc_msgSend(v61, "setAttributedText:", 0);
      v2 = (char *)String._bridgeToObjectiveC()();
      objc_msgSend(v61, "setText:", v2);

      sub_1003B8EB4();
    }
    v21[v91] = (v53 ^ 1) & 1;
    v21[v90] = v54;
    sub_1003B7138();
    sub_1003B8EB4();
    swift_bridgeObjectRelease(v47);
    v62 = objc_msgSend(v93, "defaultMetrics");
    v16 = (uint64_t)objc_msgSend(v95, "traitCollection");
    objc_msgSend(v62, "scaledValueForValue:compatibleWithTraitCollection:", v16, 34.0);
    v64 = v63;

    LODWORD(v65) = 1112014848;
    LODWORD(v66) = 1112014848;
    objc_msgSend(v21, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", 48.0, v64, v65, v66);
    if (v43)
    {
      v5 = v96;
    }
    else
    {
      v5 = v96;
      v69 = -0.0;
      if (!v96[1])
        v69 = v68;
      v12 = v12 + v69;
    }
    v45 = v28 + 8.0;
    if (v28 <= 0.0)
      v45 = v28;
    if (v25 < v45 + v67)
    {
      if (__OFADD__(v97++, 1))
        goto LABEL_68;
      if ((v5[16] & 1) == 0)
      {
        v71 = *((_QWORD *)v5 + 1);
        if (v71 >= 1 && v71 < v97)
        {
          if ((v85 & 1) != 0)
          {
            v85 = 0;
            if (v5[2] == 1)
              v72 = v43 - 2;
            else
              v72 = v43 - 1;
            v84 = v72;
          }
          else
          {
            v85 = 0;
          }
        }
      }
      v12 = v68 + v12 + 8.0;
      v45 = 0.0;
    }
    ++v43;
    v28 = v67 + v45;
    v44 = v88[2];
    v14 += 2;
  }
  while (v43 != v44);
  result = swift_bridgeObjectRelease(v88);
  if ((v85 & 1) != 0)
  {
    swift_bridgeObjectRelease(v83);
    v75 = v81;
    v74 = v82;
LABEL_64:

    return 0;
  }
  if ((v83 & 0xC000000000000001) != 0)
  {
    v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v84, v83);
    v75 = v81;
    v74 = v82;
LABEL_62:
    swift_bridgeObjectRelease(v83);
    if (v76)
    {
      v77 = v76;
      v8 = objc_msgSend(v77, "objectID");

      return (uint64_t)v8;
    }
    goto LABEL_64;
  }
  if ((v84 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v75 = v81;
    v74 = v82;
    if (v84 < *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v76 = *(id *)(v83 + 8 * v84 + 32);
      goto LABEL_62;
    }
  }
  __break(1u);
  return result;
}

id sub_1002FBAF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v8))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, "isManaged");

      if ((v7 & 1) == 0)
      {
        ++v3;
        if (v6 != v2)
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v7 = 0;
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v7;
}

uint64_t sub_1002FBBEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = (uint64_t)objc_msgSend(v4, "isManaged");

      ++v3;
      if ((_DWORD)v7)
        v8 = v6 == v2;
      else
        v8 = 1;
      if (v8)
        goto LABEL_20;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v7 = 1;
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v7;
}

uint64_t sub_1002FBCE4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D8810);
  sub_10012A0B0(v0, (uint64_t)qword_1005D8810);
  return static Logger.hashtag.getter();
}

uint64_t sub_1002FBD2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const mach_header_64 *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const mach_header_64 *v30;
  uint64_t v31;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = *((_QWORD *)a1 + 1);
  v8 = a1[16];
  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v12 = a2[3];
  v13 = a2[4];
  v14 = a2[5];
  v15 = *((_QWORD *)a2 + 1);
  v16 = a2[16];
  if (a1[1])
    v17 = 256;
  else
    v17 = 0;
  v18 = v17 | v2;
  if (v3)
    v19 = 0x10000;
  else
    v19 = 0;
  if (v4)
    v20 = 0x1000000;
  else
    v20 = 0;
  v21 = v18 | v19 | v20;
  if (v5)
    v22 = &_mh_execute_header;
  else
    v22 = 0;
  if (v6)
    v23 = 0x10000000000;
  else
    v23 = 0;
  v24 = v21 | (unint64_t)v22 | v23;
  if (v10)
    v25 = 256;
  else
    v25 = 0;
  v26 = v25 | v9;
  if (v11)
    v27 = 0x10000;
  else
    v27 = 0;
  if (v12)
    v28 = 0x1000000;
  else
    v28 = 0;
  v29 = v26 | v27 | v28;
  if (v13)
    v30 = &_mh_execute_header;
  else
    v30 = 0;
  if (v14)
    v31 = 0x10000000000;
  else
    v31 = 0;
  return sub_10030B928(v24, v7, v8, v29 | (unint64_t)v30 | v31, v15, v16);
}

void sub_1002FC054(unint64_t a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  unsigned __int8 *v4;
  unsigned int v5;
  int v6;
  char v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  id v26;
  _QWORD v27[5];
  _QWORD *v28;

  v4 = &v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
  v5 = v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 2];
  v6 = a1;
  if (v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration] != a1
    || (((a1 >> 8) & 1 ^ v4[1]) & 1) != 0
    || (((a1 >> 16) & 1 ^ v5) & 1) != 0
    || (((a1 >> 24) & 1 ^ v4[3]) & 1) != 0
    || ((BYTE4(a1) & 1 ^ v4[4]) & 1) != 0
    || (((a1 >> 40) & 1 ^ v4[5]) & 1) != 0)
  {
    goto LABEL_13;
  }
  v7 = v4[16];
  if ((a3 & 1) != 0)
  {
    if ((v4[16] & 1) != 0)
      return;
    goto LABEL_13;
  }
  if (*((_QWORD *)v4 + 1) != a2)
    v7 = 1;
  if ((v7 & 1) != 0)
  {
LABEL_13:
    v8 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource;
    v9 = *(_BYTE **)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
    if (v9)
    {
      v10 = OBJC_IVAR____TtC11MobileNotes13TagDataSource_includesAllTagsItem;
      v9[OBJC_IVAR____TtC11MobileNotes13TagDataSource_includesAllTagsItem] = v5;
      v11 = v9;
      v12 = objc_msgSend(v11, "indexer");
      v13 = objc_opt_self(ICTagCoreDataIndexer);
      v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
      if (v14)
        objc_msgSend(v14, "setIncludesAllTagsItem:", v9[v10]);

      v15 = *(_BYTE **)&v3[v8];
      if (v15)
      {
        v16 = OBJC_IVAR____TtC11MobileNotes13TagDataSource_includesNewTagItem;
        v15[OBJC_IVAR____TtC11MobileNotes13TagDataSource_includesNewTagItem] = v4[1];
        v17 = v15;
        v18 = objc_msgSend(v17, "indexer");
        v19 = objc_opt_self(ICTagCoreDataIndexer);
        v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
        if (v20)
          objc_msgSend(v20, "setIncludesNewTagItem:", v15[v16]);

      }
    }
    sub_1002FC32C(1);
    if (v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_hasLoaded] == 1)
    {
      v21 = *(void **)&v3[v8];
      if (v21)
      {
        v22 = swift_allocObject(&unk_1005677D0, 24, 7);
        swift_unknownObjectWeakInit(v22 + 16, v3);
        v23 = (_QWORD *)swift_allocObject(&unk_100567938, 40, 7);
        v23[3] = 0;
        v23[4] = 0;
        v23[2] = v22;
        v27[4] = sub_10022AACC;
        v28 = v23;
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 1107296256;
        v27[2] = sub_100206734;
        v27[3] = &unk_100567950;
        v24 = _Block_copy(v27);
        v25 = v28;
        v26 = v21;
        swift_release(v25);
        objc_msgSend(v26, "reloadDataAnimated:dataIndexedBlock:dataRenderedBlock:", 1, 0, v24);
        _Block_release(v24);

      }
    }
    if (objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection], "isNonEmpty"))sub_1002FC610(0, 0, 0);
    sub_1002FDB24();
    if (*v4 != v6)
      objc_msgSend(v3, "reloadData");
  }
}

void sub_1002FC32C(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  char *v10;
  double v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  _QWORD aBlock[5];
  _QWORD *v29;

  v3 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
  if (!v4)
    return;
  v5 = objc_msgSend(v4, "indexer");
  if (!v5)
    return;
  v27 = v5;
  v6 = objc_opt_self(ICTagCoreDataIndexer);
  v7 = (void *)swift_dynamicCastObjCClass(v27, v6);
  if (!v7)
  {
LABEL_22:

    return;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "visibleTagLimit");
  v10 = &v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
  if ((v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 16] & 1) == 0 && !*((_QWORD *)v10 + 1)
    || *v10 == 1)
  {
    objc_msgSend(v8, "setVisibleTagLimit:", 0);
    goto LABEL_22;
  }
  objc_msgSend(v1, "frame");
  if (v11 <= 0.0
    || *(double *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_lastEvaluatedTagVisibilityWidth] == v11
    && (a1 & 1) == 0)
  {
    goto LABEL_22;
  }
  *(double *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_lastEvaluatedTagVisibilityWidth] = v11;
  v12 = sub_1002FB200(v11);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = objc_msgSend(v8, "objectIDs");
    v15 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

    sub_1003DA47C((uint64_t)v13, v16);
    v18 = v17;
    v20 = v19;
    swift_bridgeObjectRelease(v16);
    if ((v20 & 1) == 0)
    {
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        return;
      }
      objc_msgSend(v8, "setVisibleTagLimit:", v18 + 1);

      goto LABEL_17;
    }

  }
  objc_msgSend(v8, "setVisibleTagLimit:", 0);
LABEL_17:
  if (v9 == objc_msgSend(v8, "visibleTagLimit"))
    goto LABEL_22;
  if (v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_hasLoaded] != 1)
    goto LABEL_22;
  v21 = *(void **)&v1[v3];
  if (!v21)
    goto LABEL_22;
  v22 = swift_allocObject(&unk_1005677D0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v1);
  v23 = (_QWORD *)swift_allocObject(&unk_1005677F8, 40, 7);
  v23[3] = 0;
  v23[4] = 0;
  v23[2] = v22;
  aBlock[4] = sub_10022A990;
  v29 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100206734;
  aBlock[3] = &unk_100567810;
  v24 = _Block_copy(aBlock);
  v25 = v29;
  v26 = v21;
  swift_release(v25);
  objc_msgSend(v26, "reloadDataAnimated:dataIndexedBlock:dataRenderedBlock:", 1, 0, v24);
  _Block_release(v24);

}

void sub_1002FC610(int a1, int a2, int a3)
{
  char *v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  unint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  int64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  _QWORD *v102;
  void (*v103)(uint64_t, uint64_t, uint64_t);
  int v104;
  char *v105;
  char *v106;
  char *v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  void (*v110)(uint64_t, uint64_t);
  id v111;
  uint64_t v112;
  id v113;
  void *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  Class isa;
  void (*v120)(uint64_t, char *);
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  __n128 v140;
  int64_t v141;
  unint64_t v142;
  unint64_t v143;
  char *v144;
  int64_t v145;
  unint64_t v146;
  int64_t v147;
  uint64_t v148;
  Class v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t);
  Class v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  void (*v180)(void);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  id v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  Class v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  int64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  int v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  id v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  int v216;
  void (*v217)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  char *v219;
  _QWORD *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  int64_t v224;
  _QWORD *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;

  v4 = v3;
  v202 = a3;
  v201 = a2;
  v216 = a1;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD **)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v192 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v219 = (char *)&v192 - v11;
  v12 = __chkstk_darwin(v10);
  v218 = (uint64_t)&v192 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v192 - v15;
  v17 = __chkstk_darwin(v14);
  v222 = (char *)&v192 - v18;
  v19 = __chkstk_darwin(v17);
  v211 = (char *)&v192 - v20;
  v21 = __chkstk_darwin(v19);
  v221 = (char *)&v192 - v22;
  __chkstk_darwin(v21);
  v210 = (char *)&v192 - v23;
  v24 = sub_100012E18((uint64_t *)&unk_1005D6350);
  v25 = __chkstk_darwin(v24);
  v198 = (uint64_t)&v192 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v207 = (char *)&v192 - v28;
  v29 = __chkstk_darwin(v27);
  v215 = (char *)&v192 - v30;
  v31 = __chkstk_darwin(v29);
  v203 = (uint64_t)&v192 - v32;
  v33 = __chkstk_darwin(v31);
  v212 = (char *)&v192 - v34;
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v192 - v36;
  v38 = __chkstk_darwin(v35);
  v214 = (char *)&v192 - v39;
  v40 = __chkstk_darwin(v38);
  v42 = (char *)&v192 - v41;
  v43 = __chkstk_darwin(v40);
  v45 = (char *)&v192 - v44;
  v46 = __chkstk_darwin(v43);
  v48 = (char *)&v192 - v47;
  __chkstk_darwin(v46);
  v50 = (char *)&v192 - v49;
  v51 = *(void **)&v4[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
  if (!v51)
    return;
  v52 = objc_msgSend(v51, "collectionViewDiffableDataSource");
  if (!v52)
    return;
  v200 = v50;
  v199 = v37;
  v193 = v9;
  v220 = v6;
  v225 = &_swiftEmptySetSingleton;
  v226 = (char *)&_swiftEmptySetSingleton;
  v53 = v52;
  v54 = objc_msgSend((id)objc_opt_self(ICTagAllTagsItemIdentifier), "sharedItemIdentifier");
  v208 = v53;
  v55 = objc_msgSend(v53, "indexPathForItemIdentifier:", v54);

  if (v55)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v55);

    v56 = (unint64_t)v220;
    v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v220[7];
    v58 = v48;
    v59 = 0;
  }
  else
  {
    v56 = (unint64_t)v220;
    v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v220[7];
    v58 = v48;
    v59 = 1;
  }
  v217 = v57;
  v57((uint64_t)v58, v59, 1, v5);
  sub_10014BD1C((uint64_t)v48, (uint64_t)v200, (uint64_t *)&unk_1005D6350);
  v206 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection;
  v60 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection], "mode");
  v61 = (uint64_t)v214;
  v213 = v4;
  if (!v60)
  {
    v205 = v16;
    v63 = objc_msgSend(*(id *)&v4[v206], "objectIDs");
    v64 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v62 = sub_100167280();
    v65 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v63, v64, v62);

    if ((v65 & 0xC000000000000001) != 0)
    {
      if (v65 < 0)
        v67 = v65;
      else
        v67 = v65 & 0xFFFFFFFFFFFFFF8;
      v68 = __CocoaSet.makeIterator()(v67);
      v66 = Set.Iterator.init(_cocoa:)(v68, v64, v62);
      v65 = v227;
      v197 = v228;
      v69 = v229;
      v70 = v230;
      v56 = v231;
    }
    else
    {
      v70 = 0;
      v86 = -1 << *(_BYTE *)(v65 + 32);
      v87 = *(_QWORD *)(v65 + 56);
      v197 = v65 + 56;
      v69 = ~v86;
      v88 = -v86;
      if (v88 < 64)
        v89 = ~(-1 << v88);
      else
        v89 = -1;
      v56 = v89 & v87;
    }
    v209 = (char *)v62;
    v210 = (char *)v64;
    v195 = v65 & 0x7FFFFFFFFFFFFFFFLL;
    v192 = v69;
    v196 = (unint64_t)(v69 + 64) >> 6;
    v194 = (char *)&type metadata for Swift.AnyObject + 8;
    v204 = v65;
    if ((v65 & 0x8000000000000000) == 0)
      goto LABEL_32;
LABEL_50:
    while (2)
    {
      v96 = __CocoaSet.Iterator.next()(v66);
      if (!v96)
        goto LABEL_59;
      v97 = v96;
      v223 = v96;
      swift_unknownObjectRetain(v96);
      swift_dynamicCast(&v224, &v223, v194, v210, 7);
      v62 = v224;
      swift_unknownObjectRelease(v97, v98);
      v92 = v70;
      v90 = v56;
      if (!v62)
      {
LABEL_59:
        sub_1001452E0(v65);
        v56 = (unint64_t)v220;
        v62 = v218;
        goto LABEL_60;
      }
      while (1)
      {
        v222 = (char *)v90;
        v99 = objc_msgSend(v208, "indexPathForItemIdentifier:", v62, v192);
        if (!v99)
          break;
        v100 = v99;
        v101 = (uint64_t)v221;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v99);

        v102 = v220;
        v103 = (void (*)(uint64_t, uint64_t, uint64_t))v220[4];
        v103(v61, v101, v5);
        v217(v61, 0, 1, v5);
        v104 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v102[6])(v61, 1, v5);
        v105 = v211;
        if (v104 == 1)
          goto LABEL_57;
        v106 = v205;
        v103((uint64_t)v205, v61, v5);
        v107 = v106;
        v108 = (void (*)(char *, char *, uint64_t))v102[2];
        v108(v105, v107, v5);
        sub_1003030EC(v101, v105);
        v109 = v4;
        v110 = (void (*)(uint64_t, uint64_t))v102[1];
        v110(v101, v5);
        v111 = objc_msgSend(*(id *)&v109[v206], "excludedObjectIDs");
        v112 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v111, v210, v209);

        LOBYTE(v111) = sub_100379FD0((void *)v62, v112);
        swift_bridgeObjectRelease(v112);
        if ((v111 & 1) != 0)
        {
          v108(v105, v107, v5);
          sub_1003030EC(v101, v105);

          v110(v101, v5);
          v66 = ((uint64_t (*)(char *, uint64_t))v110)(v107, v5);
        }
        else
        {
          v110((uint64_t)v107, v5);

        }
        v70 = v92;
        v56 = (unint64_t)v222;
        v4 = v213;
        v61 = (uint64_t)v214;
        v65 = v204;
        if (v204 < 0)
          goto LABEL_50;
LABEL_32:
        if (v56)
        {
          v90 = (v56 - 1) & v56;
          v91 = __clz(__rbit64(v56)) | (v70 << 6);
          v92 = v70;
        }
        else
        {
          v93 = v70 + 1;
          if (__OFADD__(v70, 1))
            goto LABEL_139;
          if (v93 >= v196)
            goto LABEL_59;
          v94 = *(_QWORD *)(v197 + 8 * v93);
          v92 = v70 + 1;
          if (!v94)
          {
            v92 = v70 + 2;
            if (v70 + 2 >= v196)
              goto LABEL_59;
            v94 = *(_QWORD *)(v197 + 8 * v92);
            if (!v94)
            {
              v92 = v70 + 3;
              if (v70 + 3 >= v196)
                goto LABEL_59;
              v94 = *(_QWORD *)(v197 + 8 * v92);
              if (!v94)
              {
                v92 = v70 + 4;
                if (v70 + 4 >= v196)
                  goto LABEL_59;
                v94 = *(_QWORD *)(v197 + 8 * v92);
                if (!v94)
                {
                  v95 = v70 + 5;
                  do
                  {
                    if (v196 == v95)
                      goto LABEL_59;
                    v94 = *(_QWORD *)(v197 + 8 * v95++);
                  }
                  while (!v94);
                  v92 = v95 - 1;
                }
              }
            }
          }
          v90 = (v94 - 1) & v94;
          v91 = __clz(__rbit64(v94)) + (v92 << 6);
        }
        v62 = (int64_t)*(id *)(*(_QWORD *)(v65 + 48) + 8 * v91);
        if (!v62)
          goto LABEL_59;
      }
      v217(v61, 1, 1, v5);
LABEL_57:

      v66 = sub_100012DDC(v61, (uint64_t *)&unk_1005D6350);
      v70 = v92;
      v56 = (unint64_t)v222;
      if (v65 < 0)
        continue;
      goto LABEL_32;
    }
  }
  v62 = v218;
  if (v60 == (id)2)
  {
    sub_100012CE8((uint64_t)v200, (uint64_t)v42, (uint64_t *)&unk_1005D6350);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v42, 1, v5) == 1)
    {
      sub_100012DDC((uint64_t)v42, (uint64_t *)&unk_1005D6350);
    }
    else
    {
      v80 = v222;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v222, v42, v5);
      v81 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
      v82 = v211;
      v81(v211, v80, v5);
      v83 = (uint64_t)v221;
      sub_1003030EC((uint64_t)v221, v82);
      v84 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v84(v83, v5);
      v81(v82, v80, v5);
      sub_1003030EC(v83, v82);
      v85 = v83;
      v62 = v218;
      v84(v85, v5);
      v84((uint64_t)v80, v5);
    }
  }
  else
  {
    if (v60 != (id)1)
    {
      if (qword_1005CEC80 == -1)
        goto LABEL_19;
      goto LABEL_140;
    }
    sub_100012CE8((uint64_t)v200, (uint64_t)v45, (uint64_t *)&unk_1005D6350);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v45, 1, v5) == 1)
    {
      sub_100012DDC((uint64_t)v45, (uint64_t *)&unk_1005D6350);
    }
    else
    {
      v76 = v210;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v210, v45, v5);
      v77 = v211;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v211, v76, v5);
      v78 = (uint64_t)v221;
      sub_1003030EC((uint64_t)v221, v77);
      v79 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v79(v78, v5);
      v79((uint64_t)v76, v5);
    }
  }
LABEL_60:
  while (1)
  {
    sub_10023FF10((uint64_t)v226, (uint64_t)v199);
    v113 = objc_msgSend(v4, "indexPathsForSelectedItems");
    v222 = (char *)v5;
    if (!v113)
      break;
    v114 = v113;
    v115 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v113, v5);

    v211 = (char *)v115;
    v116 = *(char **)(v115 + 16);
    v117 = v212;
    v210 = v116;
    if (!v116)
    {
LABEL_75:
      v217((uint64_t)v117, 1, 1, v5);
LABEL_76:
      swift_bridgeObjectRelease(v211);
      break;
    }
    v118 = 0;
    v209 = &v211[(*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80)];
    while (v118 < *((_QWORD *)v211 + 2))
    {
      v121 = *(_QWORD *)(v56 + 72);
      v122 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
      v122(v117, &v209[v121 * v118], v5);
      v217((uint64_t)v117, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v117, 1, v5) == 1)
        goto LABEL_76;
      v214 = (char *)v118;
      (*(void (**)(int64_t, char *, uint64_t))(v56 + 32))(v62, v117, v5);
      v123 = v226;
      if (*((_QWORD *)v226 + 2))
      {
        v124 = *((_QWORD *)v226 + 5);
        v125 = sub_100019C6C(&qword_1005D8980, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        swift_bridgeObjectRetain(v123);
        v126 = dispatch thunk of Hashable._rawHashValue(seed:)(v124, v5, v125);
        v127 = -1 << v123[32];
        v128 = v126 & ~v127;
        if (((*(_QWORD *)&v123[((v128 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v128) & 1) != 0)
        {
          v129 = ~v127;
          while (1)
          {
            v130 = (uint64_t)v221;
            v122(v221, (char *)(*((_QWORD *)v123 + 6) + v128 * v121), (uint64_t)v222);
            v131 = sub_100019C6C((unint64_t *)&unk_1005D8988, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
            v132 = dispatch thunk of static Equatable.== infix(_:_:)(v130, v218, v222, v131);
            v120 = (void (*)(uint64_t, char *))v220[1];
            v133 = v130;
            v5 = (uint64_t)v222;
            v120(v133, v222);
            if ((v132 & 1) != 0)
              break;
            v128 = (v128 + 1) & v129;
            if (((*(_QWORD *)&v123[((v128 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v128) & 1) == 0)
              goto LABEL_63;
          }
          swift_bridgeObjectRelease(v123);
          v134 = v203;
          v62 = v218;
          sub_100309FF4(v218, v203);
          sub_100012DDC(v134, (uint64_t *)&unk_1005D6350);
          v4 = v213;
          v56 = (unint64_t)v220;
          goto LABEL_65;
        }
LABEL_63:
        swift_bridgeObjectRelease(v123);
        v4 = v213;
        v56 = (unint64_t)v220;
        v62 = v218;
      }
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v4, "deselectItemAtIndexPath:animated:", isa, v216 & 1);

      v120 = *(void (**)(uint64_t, char *))(v56 + 8);
LABEL_65:
      v118 = (unint64_t)(v214 + 1);
      v120(v62, (char *)v5);
      v117 = v212;
      if ((char *)v118 == v210)
        goto LABEL_75;
    }
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    swift_once(&qword_1005CEC80, sub_1002FBCE4);
LABEL_19:
    v71 = type metadata accessor for Logger(0);
    v72 = sub_10012A0B0(v71, (uint64_t)qword_1005D8810);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.fault.getter(v73);
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v75 = 0;
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Unknown tag selection mode", v75, 2u);
      swift_slowDealloc(v75, -1, -1);
    }

  }
  v135 = v226;
  v136 = v226 + 56;
  v137 = 1 << v226[32];
  v138 = -1;
  if (v137 < 64)
    v138 = ~(-1 << v137);
  v139 = v138 & *((_QWORD *)v226 + 7);
  v62 = (unint64_t)(v137 + 63) >> 6;
  v140 = swift_bridgeObjectRetain(v226);
  v141 = 0;
  if (v139)
  {
LABEL_80:
    v142 = __clz(__rbit64(v139));
    v139 &= v139 - 1;
    v143 = v142 | (v141 << 6);
    v144 = v215;
    goto LABEL_95;
  }
  while (1)
  {
    v145 = v141 + 1;
    v144 = v215;
    if (__OFADD__(v141, 1))
      goto LABEL_136;
    if (v145 >= v62)
      break;
    v146 = *(_QWORD *)&v136[8 * v145];
    ++v141;
    if (v146)
      goto LABEL_94;
    v141 = v145 + 1;
    if (v145 + 1 >= v62)
      break;
    v146 = *(_QWORD *)&v136[8 * v141];
    if (v146)
      goto LABEL_94;
    v141 = v145 + 2;
    if (v145 + 2 >= v62)
      break;
    v146 = *(_QWORD *)&v136[8 * v141];
    if (v146)
      goto LABEL_94;
    v147 = v145 + 3;
    if (v147 >= v62)
      break;
    v146 = *(_QWORD *)&v136[8 * v147];
    if (!v146)
    {
      while (1)
      {
        v141 = v147 + 1;
        if (__OFADD__(v147, 1))
          goto LABEL_138;
        if (v141 >= v62)
          goto LABEL_98;
        v146 = *(_QWORD *)&v136[8 * v141];
        ++v147;
        if (v146)
          goto LABEL_94;
      }
    }
    v141 = v147;
LABEL_94:
    v139 = (v146 - 1) & v146;
    v143 = __clz(__rbit64(v146)) + (v141 << 6);
LABEL_95:
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v56 + 16))(v144, v135[6] + *(_QWORD *)(v56 + 72) * v143, v5, v140);
    v217((uint64_t)v144, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v144, 1, v5) == 1)
      goto LABEL_99;
    v148 = (uint64_t)v221;
    (*(void (**)(char *, char *, char *))(v56 + 32))(v221, v144, v222);
    v149 = IndexPath._bridgeToObjectiveC()().super.isa;
    v150 = v148;
    v5 = (uint64_t)v222;
    (*(void (**)(uint64_t, char *))(v56 + 8))(v150, v222);
    objc_msgSend(v4, "selectItemAtIndexPath:animated:scrollPosition:", v149, v216 & 1, 0);

    if (v139)
      goto LABEL_80;
  }
LABEL_98:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v217)(v215, 1, 1, v5, v140);
LABEL_99:
  swift_release(v135);
  v151 = objc_msgSend(v4, "indexPathsForVisibleItems");
  v152 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v151, v5);

  v153 = *(char **)(v152 + 16);
  v154 = v207;
  if (v153)
  {
    v62 = 0;
    v218 = v152 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    v211 = (char *)v152;
    v212 = v153;
    while ((unint64_t)v62 < *(_QWORD *)(v152 + 16))
    {
      v158 = *(_QWORD *)(v56 + 72);
      v159 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
      v159(v154, v218 + v158 * v62, v5);
      v217((uint64_t)v154, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v154, 1, v5) == 1)
        goto LABEL_118;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v219, v154, v5);
      v160 = IndexPath._bridgeToObjectiveC()().super.isa;
      v157 = (char *)objc_msgSend(v4, "cellForItemAtIndexPath:", v160);

      if (v157)
      {
        v161 = type metadata accessor for TagCell();
        v156 = swift_dynamicCastClass(v157, v161);
        if (v156)
        {
          v162 = v225;
          v163 = v225[2];
          v215 = v157;
          if (v163)
          {
            v214 = (char *)v156;
            v164 = v225[5];
            v165 = sub_100019C6C(&qword_1005D8980, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
            swift_bridgeObjectRetain(v162);
            v166 = dispatch thunk of Hashable._rawHashValue(seed:)(v164, v5, v165);
            v167 = -1 << *((_BYTE *)v162 + 32);
            v168 = v166 & ~v167;
            if (((*(_QWORD *)((char *)v162 + ((v168 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v168) & 1) != 0)
            {
              v169 = ~v167;
              do
              {
                v171 = (uint64_t)v221;
                v170 = v222;
                v159(v221, v162[6] + v168 * v158, (uint64_t)v222);
                v172 = sub_100019C6C((unint64_t *)&unk_1005D8988, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
                v155 = dispatch thunk of static Equatable.== infix(_:_:)(v171, v219, v170, v172);
                ((void (*)(uint64_t, char *))v220[1])(v171, v170);
                if ((v155 & 1) != 0)
                  break;
                v168 = (v168 + 1) & v169;
              }
              while (((*(_QWORD *)((char *)v162 + ((v168 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v168) & 1) != 0);
            }
            else
            {
              v155 = 0;
            }
            swift_bridgeObjectRelease(v162);
            v4 = v213;
            v156 = (uint64_t)v214;
            v5 = (uint64_t)v222;
            v154 = v207;
            v152 = (uint64_t)v211;
          }
          else
          {
            v155 = 0;
          }
          *(_BYTE *)(v156 + OBJC_IVAR___ICTagCell_isExcluded) = v155 & 1;
          sub_1003B747C();
          v153 = v212;
          v157 = v215;
        }

      }
      ++v62;
      v56 = (unint64_t)v220;
      ((void (*)(char *, uint64_t))v220[1])(v219, v5);
      if ((char *)v62 == v153)
        goto LABEL_117;
    }
    __break(1u);
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
LABEL_117:
  v217((uint64_t)v154, 1, 1, v5);
LABEL_118:
  swift_bridgeObjectRelease(v152);
  swift_bridgeObjectRelease(v225);
  if ((v201 & 1) != 0)
  {
    v173 = objc_msgSend(v4, "indexPathsForVisibleItems");
    v174 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v173, v5);

    v175 = sub_10020BE00(v174);
    swift_bridgeObjectRelease(v174);
    v176 = v226;
    v177 = sub_10030B0D0((uint64_t)v226, v175);
    swift_bridgeObjectRelease(v176);
    v178 = *(_QWORD *)(v177 + 16);
    swift_release(v177);
    if (v178)
    {
      if ((v202 & 1) != 0)
        goto LABEL_121;
LABEL_125:

      sub_100012DDC((uint64_t)v199, (uint64_t *)&unk_1005D6350);
      v186 = (uint64_t)v200;
LABEL_126:
      sub_100012DDC(v186, (uint64_t *)&unk_1005D6350);
      return;
    }
    v187 = v4[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
    v188 = v198;
    sub_100012CE8((uint64_t)v199, v198, (uint64_t *)&unk_1005D6350);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v188, 1, v5) == 1)
    {
      sub_100012DDC(v188, (uint64_t *)&unk_1005D6350);
    }
    else
    {
      if (v187 == 1)
        v189 = 16;
      else
        v189 = 2;
      v190 = v193;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v193, v188, v5);
      v191 = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v4, "scrollToItemAtIndexPath:atScrollPosition:animated:", v191, v189, v216 & 1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v190, v5);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v226);
  }
  if ((v202 & 1) == 0)
    goto LABEL_125;
LABEL_121:
  v179 = &v4[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_selectionDidChange];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_selectionDidChange], &v224, 32, 0);
  v180 = *(void (**)(void))v179;
  v181 = (uint64_t)v199;
  v182 = (uint64_t)v200;
  if (*(_QWORD *)v179)
  {
    v183 = *((_QWORD *)v179 + 1);
    swift_endAccess(&v224);
    v184 = *(void **)&v4[v206];
    sub_100166B74((uint64_t)v180, v183);
    v185 = v184;
    v180();

    sub_100012C50((uint64_t)v180, v183);
    sub_100012DDC(v181, (uint64_t *)&unk_1005D6350);
    v186 = v182;
    goto LABEL_126;
  }
  sub_100012DDC((uint64_t)v199, (uint64_t *)&unk_1005D6350);
  sub_100012DDC(v182, (uint64_t *)&unk_1005D6350);
  swift_endAccess(&v224);

}

